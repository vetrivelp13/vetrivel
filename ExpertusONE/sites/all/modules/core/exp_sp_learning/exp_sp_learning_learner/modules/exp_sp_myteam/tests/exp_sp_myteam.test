<?php 
class MyteamTestCase extends ExpertusWebTestCase {
	private $test_case = array();
	private $webError = "Website encountered an unexpected error";
	private $cId;

	private $srcParam = array(
		'title'=>'',
		'reporttype'=>'',
		'location'=>'',
		'cy_type'=>'',
		'sortby'=>'',
		'searchusername'=>'',
	);
	private $srcParam1 = array(
		'title'=>'',
		'dl_type'=>'cre_sys_obt_trn',
		'sortby'=>'',
	);
	private $srcParam2= array(
			'z'=>'learn',
	);
	public static function getInfo() {
		return array(
			'name' => 'My team',
			'description' => 'My team',
			'group' => 'exp_sp_myteam',
		);
	}
  
  public function setUp(){
  	$this->getTestCases();
  	parent::setUp();
  }
  
  public function testMyteamView(){
  	$testcases = $this->test_case['team_basic'];
  	$usr = new stdClass();
  	$usr->name =  'user1';
  	$usr->pass_raw = 'welcome';
  	$this->drupalLogin($usr);
  	
  	// Refine filter check
  	$this->getMyTeamPage();
  	$opt = $this->srcParam;
  	$this->getMyTeamResult($opt);
  	foreach($testcases as $tcase){
  		list($test,$msg,$grp) = $tcase;
  		$this->assertRaw($test,$msg,$grp);
  	}
  	// Subordinates check
  	$this->getMyTeamPage();
  	$opt = $this->srcParam;
  	$opt['searchusername'] = 'user_'.rand(100,10000);
  	$this->verbose('No record check: ' . $this->getUrl() .
  			'<hr />' . $opt);
  	$this->getMyTeamResult($opt);
  	$this->verbose('Record count check: ' . $this->getUrl() .
  			'<hr />' . count($this->cId));
  	$this->assertTrue(count($this->cId)==0,'You do not have any subordinates.','exp_sp_myteam');
  	$this->viewLearningComponents();
  	$this->assignLearningComponents();
  	$this->cancelEnrollmet();
  	$this->markCompletion();
}
  private function getMyTeamPage(){
  	$this->setHttpReferer('learning/myteam-search');
		$this->drupalGet('learning/myteam-search');
		$this->assertRaw('<div id="searchRecordsPaint" class="search-record-paint">','Form Rendered Successfully', 'exp_sp_myteam');
  	$this->assertNoText(t($this->webError),'Web errors not found','exp_sp_myteam');
  }
  
  private function getMyTeamResult($opt){
  	$this->setHttpReferer('learning/myteam-search');
  	$prev = $this->content;
  	$opt = array_merge($this->basicParam,$opt);
  	$srcRc = $this->drupalGetAJAX('learning/myteam-search/search/all/',array('query'=>$opt));
	$dom = new DOMDocument();
    $dom->loadHTML($prev);	
    $xpath = new DOMXPath($dom);
    
    // Appending Filters
    $Node = $xpath->query('//*[@id="paintCriteriaResults"]')->item(0);
    $newDom = new DOMDocument();
    $newDom->loadHTML($srcRc['filter']);
    $newNode1 = $dom->importNode($newDom->getElementsByTagName('table')->item(0), TRUE);
    $Node->appendChild($newNode1); 
   // Prepare Search Result data
    $src = '';
    $this->cId = null;
    $i=0;
    foreach($srcRc['rows'] as $row){
    	$this->cId[$i]['id']=$row['id'];
    	//$this->cId[$i]['id']=$row['id'];
	    $src = '<tr><td>'.$row['cell']['image'].'</td>';
	    $src .= '<td>'.$row['cell']['details'].'</td>';
	    $src .= '<td>'.$row['cell']['action'].'</td></tr>';
	    $i++;
    }
    // Appending Search Details
    if(!empty($src)){
	    $Node = $xpath->query('//*[@id="paintContentResults"]')->item(0);
	    $newDom = new DOMDocument();
	    $newDom->loadHTML($src);
	      $this->verbose('filter result test content src: ' . $this->getUrl() .
                '<hr />' . $src);
	    $newNode = $dom->importNode($newDom->documentElement, TRUE);
	    $Node->appendChild($newNode); 
	    $this->content = $dom->saveHTML();
	      $this->verbose('filter result test content: ' . $this->getUrl() .
                '<hr />' . $this->content);
    }
  	$this->assertResponse(200,'Search finished successfully');
  	$this->assertNoText(t($this->webError),'Web errors not found','exp_sp_myteam');
 
  }
 private function viewLearningComponents(){
 //	$this->setHttpReferer('learning/myteam-search/class-details/12');
 	$this->setHttpReferer('learning/myteam-search');
 //	$out = $this->drupalGet("learning/myteam-search/class-details/12");
 	//&_search=false&nd=1484218501187&rows=5&page=1
 	$opt = array(
				'_search' => false,
				'page' => 1,
				'rows' => 15,
				'sidx' => '',
				'sord' => 'desc'
		);
 	$srcRc = $this->drupalGetAJAX('learning/myteam-search/class-details/7/',array('query'=>$opt));
 	$this->verbose('VIEW LEARNING RESULT: ' . $this->getUrl() .
 			'<hr />' . $srcRc);
 	
 	
 	// append a head row
 	
 		$src = '<tr><th>'.t('Name').'</th><th>'.t('Type').'</th><th>'.t('Status').'</th><th>'.t('Date').'</th><th>'.t('Action').'</th></tr>';
 	/*	if(!empty($src)){
 			$Node = $xpath->query('//*[@id="paintContentResults"]')->item(0);
 			$newDom = new DOMDocument();
 			$newDom->loadHTML($src);
 			$newNode = $dom->importNode($newDom->getElementsByTagName('tr')->item(0), TRUE);
 			$Node->appendChild($newNode);
 			$this->content = $dom->saveHTML();
 			$this->verbose('view learning result test content: ' . $this->getUrl() .
 					'<hr />' . $this->content);
 		} */
 		$dom = new DOMDocument();
 		$dom->loadHTML($this->content);
 		$xpath = new DOMXPath($dom);
 		$node  = $xpath->query('//*[@id="paintContentResults"]')->item(0);
 	
 	$i = 0;
 	foreach($srcRc['rows'] as $row){
 		$this->cId[$i]['id']=$row['id'];
 		//$this->cId[$i]['id']=$row['id'];
 		$src .= '<tr><td>'.$row['cell']['name'].'</td><td>'.$row['cell']['type'].'</td><td>'.$row['cell']['status'].'</td><td>'.$row['cell']['date'].'</td><td>'.$row['cell']['ActionList'].'</td></tr>';
 		$i++;
 	}
 		if($node){
 			$newDom = new DOMDocument();
 			$newDom->loadHTML($src);
 			$newNode = $dom->importNode($newDom->documentElement, TRUE);
 			$node->appendChild($newNode);
 		}
 		$this->content = $dom->saveHTML();
 		$this->verbose('view learning result test content:' . $this->getUrl() .
 				'<hr />' . $this->content);
 	$webError = "Website encountered an unexpected error";
 	$this->assertNoText(t($webError),'Web errors not found','exp_sp_myteam');
 	
}
 private function getTeamUserId(){
	$user_id = db_query("select id from slt_person where user_name = 'user258' and manager_id=4")->fetchField();
	return $user_id;
 }
 private function getEnrollmentDetails(){
 	$user_id = $this->getTeamUserId();
 	$regQry  = db_select('slt_enrollment', 'enr');
	$regQry->addField('enr','id');
	$regQry->addField('enr','user_id');
	$regQry->addField('enr','class_id');
	$regQry->condition('enr.reg_status', 'lrn_crs_reg_can', '!=');
	$regQry->condition('enr.user_id', $user_id, '=');
	$regQry->orderBy('enr.id', 'desc');
	$regQry->range(0, 1);
	$list= $regQry->execute()->fetchAll();
	return $list;
  }
  private function getCourseClassDetails(){
  	$user_id = $this->getTeamUserId();
  	$regQry  = db_select('slt_course_class', 'cls');
  	$regQry->addField('cls','id');
  	$regQry->addField('cls','course_id');
  	$regQry->condition('cls.status', 'lrn_cls_sts_atv', '=');
  	$regQry->orderBy('cls.id', 'desc');
  	$regQry->range(0, 1);
  	$list= $regQry->execute()->fetchAll();
  	return $list;
  }
 private function cancelEnrollmet() {
 	$result = $this->getEnrollmentDetails();
	debug($result);
 //	function getDropEnrollment($userId,$baseType='',$enrollId,$refundFlag,$isCommerceEnabled,$assMand,$fromMyteam=0, $fromInstructor=0){
 	$out = $this->drupalGetAJAX("ajax/drop-enroll/".$result[0]->user_id."/WBT/".$result[0]->id."//1/0/1");
 	$this->verbose('cancelEnrollmet test content:' . $this->getUrl() .
 			'<hr />' . $out);
 	$webError = "Website encountered an unexpected error";
 	$this->assertNoText(t($webError),'Web errors not found','exp_sp_myteam');
 }
 private function markCompletion() {
 //	url = obj.constructUrl("ajax/myteam/markcomplete/"+learningType+"/"+enrolledId+"/"+classId+"/"+userId+"/"+$("#comp_date").val()+"/"+score);

 	$result = $this->getEnrollmentDetails();
 	$out = $this->drupalGetAJAX("ajax/myteam/markcomplete/Class/".$result[0]->id."/".$result[0]->class_id."/".$result[0]->user_id."/02-16-2017/50");
 	$this->verbose('markCompletion test content:' . $this->getUrl() .
 			'<hr />' . $out);
 	$webError = "Website encountered an unexpected error";
 	$this->assertNoText(t($webError),'Web errors not found','exp_sp_myteam');
 }
 private function assignLearningComponents(){
 	$default = array(
 			'modelWidth' => 500,
 			'modelTop' => 100,
 			'modelLeft' => 669,
 			'docHeight' => 1232,
 			'docWidth' => 1343
 	);
 	$modelValue = $default;
 	$dialogContent = '<div class="ui-dialog ui-widget ui-widget-content ui-corner-all  popupLeftCorner popupRightCorner expertusV2PopupContainer" tabindex="-1" role="dialog" aria-labelledby="ui-dialog-title-paintCatalogContentResults7" style="display: block; z-index: 1002; outline: 0px; height: auto; width: '.$modelValue['modelWidth'].'px; top: '.$modelValue['modelTop'].'px; left: '.$modelValue['modelLeft'].'px; overflow: visible;">
 			<div class="popupLeftCorner">
 			<div class="popupRightCorner">
 			<div class="ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix">
 			<span class="ui-dialog-title" id="ui-dialog-title-paintCatalogContentResults148">
 			<span class="myteam-header-text">Assign Learning</span><div id="search-cat-keyword"></div></span>
 			<a href="#" class="ui-dialog-titlebar-close ui-corner-all" role="button"><span class="ui-icon ui-icon-closethick">close</span></a>
 			</div></div></div></div>
 	<div id="paintCatalogContentResults148" style="padding: 0px; width: auto; min-height: auto; height: auto;" class="ui-dialog-content ui-widget-content assign-learning-team"></div>';
 	$dom = new DOMDocument();
  	$dom->loadHTML($this->content);
  	$node = $dom->getElementsByTagName('body')->item(0);
  	
  	$newDom = new DOMDocument();
  	$newDom->loadHTML($dialogContent);
  	$newNode = $dom->importNode($newDom->getElementsByTagName('div')->item(0), TRUE);;
  	$node->appendChild($newNode);
  	
  	$this->content = $dom->saveHTML();
  	$this->verbose('Request to: ' . $this->getUrl() .
                         '<hr />' . $this->content);
                                              
    $this->classRegistration();
    $this->tpRegistration();
    $this->deliveryTypesearch();
 }
 private function classRegistration() {
 	$result = $this->getCourseClassDetails();
 	debug($result);
 	//var url = obj.constructUrl("ajax/learning/myteam-search/assign-class/" + userId + '/' + courseId + '/' + classId + '/' + mandatory+'/'+wailist);
 	$out = $this->drupalGetAJAX("ajax/learning/myteam-search/assign-class/140/".$result[0]->course_id."/".$result[0]->id."/N/0");
 	$this->verbose('class registration test:' . $this->getUrl() .
 			'<hr />' . $out);
 	$webError = "Website encountered an unexpected error";
 	$this->assertNoText(t($webError),'Web errors not found','exp_sp_myteam');
 }
 private function tpRegistration() {
 	//var url = this.constructUrl("ajax/trainingplan/class-cnt-for-course/"+prgId + "/" + LMSNodeId +"/" + isCart+"/" + isAdminSide+"/" + userIdList+"/" + pageandmandatory);
 	$out = $this->drupalGetAJAX("ajax/trainingplan/class-cnt-for-course/4/0/0/N/7/MyTeam-N");
 	$this->verbose('tp registration test:' . $this->getUrl() .
 			'<hr />' . $out);
 	$webError = "Website encountered an unexpected error";
 	$this->assertNoText(t($webError),'Web errors not found','exp_sp_myteam');
 }
 private function deliveryTypesearch() { // Assign learning autocomplete & search filters
    $opt = $this->srcParam1;
    $opt1 = $this->srcParam2;
    $user_id = $this->getTeamUserId();
  //	$opt = array_merge($this->basicParam,$opt);
 //	$out = $this->drupalGetAJAX("learning/myteam-search/catalog-autocomplete/Any/".$user_id,array('query'=>$opt));
    $out = $this->drupalGetAJAX("learning/myteam-search/catalog-autocomplete/cre_sys_obt_trn/".$user_id,array('query'=>$opt1));
    $this->verbose('autocomplete search:' . $this->getUrl() .
    		'<hr />' . $out);
    $webError = "Website encountered an unexpected error";
    $this->assertNoText(t($webError),'Web errors not found','exp_sp_myteam');
    
    $out1 = $this->drupalGetAJAX("learning/myteam-search/catalog/".$user_id,array('query'=>$opt));
 	$this->verbose('del type search:' . $this->getUrl() .
 			'<hr />' . $out1);
 	$webError = "Website encountered an unexpected error";
 	$this->assertNoText(t($webError),'Web errors not found','exp_sp_myteam');
 }
 private function getTestCases(){
  	$this->test_case = array(
  		'team_basic' => array(
  			array('<h2 class="block-title">Refine</h2>','Refine filter header available','exp_sp_myteam'),
  			array('<a class="search-heading">Reports</a>','Reports filter header available','exp_sp_myteam'),
  			array('<input id="lrn_srch_report_direct" class="report-others srch-checkbox-cls" type="checkbox" value="direct" onclick=\'$("#lnr-myteam-search").data("lnrmyteamsearch").searchAction();\'>','Direct Report checkbox available','exp_sp_myteam'),
  			array('<label for="lrn_srch_report_direct" class="srch-label-cls highlight-light-blue">Direct Report</label>','Direct report available','exp_sp_myteam'),
  			array('<input id="lrn_srch_report_virtual" class="report-others srch-checkbox-cls" type="checkbox" value="virtual" onclick=\'$("#lnr-myteam-search").data("lnrmyteamsearch").searchAction();\'>','Virtual Report checkbox available','exp_sp_myteam'),
  			array('<label for="lrn_srch_report_virtual" class="srch-label-cls highlight-light-blue">Virtual Report</label>','Virtual Report available','exp_sp_myteam'),
  			array('<span class="title-lengthy-text">Location</span>','Location filter header available','exp_sp_myteam'),
  			array('<input type="text" name="srch_criteria_location" class="ac_input searchlocation filter-search-start-date-middle-bg" size="23" maxlength="23" id="srch_criteria_location"','Location search filter available','exp_sp_myteam'),
  			array('onkeypress=\'$("#lnr-myteam-search").data("lnrmyteamsearch").locationEnterKey();this.style.fontSize="13px";this.style.fontStyle="normal";\'','Location KeyPress event available','exp_sp_myteam'),
  			array('onfocus=\"$("#lnr-myteam-search").data("lnrmyteamsearch").hightlightedText(\"srch_criteria_location\",\"en-us\")\"','Location onfocus event available','exp_sp_myteam'),
  			array("onblur=\"$('#lnr-myteam-search').data('lnrmyteamsearch').hightlightedText(\"srch_criteria_location\",\"en-us\")\"",'Location onblur event available','exp_sp_myteam'),
  			array("onchange=\"$('#lnr-myteam-search').data('lnrmyteamsearch').hightlightedText('srch_criteria_location','en-us')\"",'Location onchange event available','exp_sp_myteam'),
  			array('<a class="location-search filter-search-start-date-search-bg" title="Search" onclick=\'$("#lnr-myteam-search").data("lnrmyteamsearch").searchAction();\'> </a>','Location search icon available','exp_sp_myteam'),
  		),
  	);
  }
}
?>