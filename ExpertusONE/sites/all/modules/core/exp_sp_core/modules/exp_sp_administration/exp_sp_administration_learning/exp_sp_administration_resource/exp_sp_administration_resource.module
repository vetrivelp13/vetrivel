<?php
/**
 * Implementation of hook_init().
 */
function exp_sp_administration_resource_init() {
	try {
  include_once(drupal_get_path('module', 'exp_sp_administration_resource') .'/exp_sp_administration_resource_location.inc');
/*include_once(drupal_get_path('module', 'exp_sp_administration_resource') .'/exp_sp_administration_resource_facility.inc');
  include_once(drupal_get_path('module', 'exp_sp_administration_resource') .'/exp_sp_administration_classroom.inc');  
  include_once(drupal_get_path('module', 'exp_sp_administration_resource') .'/exp_sp_administration_equipment.inc');*/
  include_once(drupal_get_path('module', 'exp_sp_administration_learning') .'/exp_sp_administration_custom_fields.inc');
  //drupal_add_css(drupal_get_path('module', 'exp_sp_administration_resource') .'/exp_sp_administration_resource.css');
  } catch (Exception $ex) {
  	watchdog_exception('exp_sp_administration_resource_init', $ex);
  	expertusErrorThrow($ex);
  }
}

/**
 * Implementation of hook_menu().
 */
/*
function exp_sp_administration_resource_menu() {
  $items = array();
  $items['administration/manage/resource'] = array(
    'title' => t('LBL256'),
    'page callback' => 'getResourceTabContent',
    'access callback' => 'user_access',
    'access arguments' => array('Resources Admin Perm'),
  	'type' => MENU_CALLBACK,
    'file' => 'exp_sp_administration_resource.inc',
  	'weight' => 3
    );  
   $items['administration/manage/resource/%ctools_js/addedit'] = array(
    'title' => 'Add / Edit Resource',
    'page callback' => 'exp_sp_administration_resource_addedit_form',
    'page arguments' => array(3),
    'access callback' => 'user_access',
    'access arguments' => array('Resources Admin Perm'),
    'type' => MENU_CALLBACK,
    'file' => 'exp_sp_administration_resource.inc'
  ); 
  $items['administration/manage/resource/search/all'] = array(
    'title' => 'Fetch Resource List to display in JQGrid',
    'page callback' => 'sendResourceListToJqGrid',
    'access callback' => 'user_access',
    'access arguments' => array('Resources Admin Perm'),
    'type' => MENU_CALLBACK,
    'file' => 'exp_sp_administration_resource.inc'
    );
  $items['administration/manage/resource/textfilter-autocomplete'] = array(
    'title' => 'Search By Text Filter Autocomplete',
    'page callback' => 'getResourceAutoComplete',
    'access callback' => 'user_access',
    'access arguments' => array('Resources Admin Perm'),
    'type' => MENU_CALLBACK,
    'file' => 'exp_sp_administration_resource.inc',
    );
  $items['administration/manage/resource/export'] = array(
    'title' => 'Resource Search Results CSV Export',
    'page callback' => 'fetchResourceAll',
    'page arguments' => array('CSV'),
    'access callback' => 'user_access',
    'access arguments' => array('Resources Admin Perm'),
    'type' => MENU_CALLBACK,
    'file' => 'exp_sp_administration_resource.inc',
    ); 
  $items['administration/manage/resource/print'] = array(
    'title' => 'Resource Search Results CSV Export',
    'page callback' => 'fetchResourceAll',
    'page arguments' => array('PDF'),
    'access callback' => 'user_access',
    'access arguments' => array('Resources Admin Perm'),
    'type' => MENU_CALLBACK,
    'file' => 'exp_sp_administration_resource.inc',
    );  

  $items['administration/manage/resource/citystate-autocomplete'] = array(
    'title' => 'Search By City State Text Filter Autocomplete',
    'page callback' => 'getAdminCityStateAutoComplete',
    'access callback' => 'user_access',
    'access arguments' => array('Resources Admin Perm'),
    'type' => MENU_CALLBACK,
    'file path' => drupal_get_path('module','exp_sp_administration'),
    'file' => 'exp_sp_administration.inc'
    );
        
  expDebug::dPrint('exp_sp_administration_resource.module : exp_sp_administration_resource_menu() : $items = ' . print_r($items, true));
  return $items;
}*/

/*
 * exp_sp_administration_resource_addedit_form() - Multi-Form implementation for location / facility
 */
function exp_sp_administration_resource_addedit_form($js = NULL, $locationDetails, $facilityId = ''){
  try{
  
  $js_module_optional = array('type' => 'file', 'group' => JS_DEFAULT);
  drupal_add_js(drupal_get_path('module', 'exp_sp_administration') .'/exp_sp_administration_addedit_behaviours.js', $js_module_optional);
  
  // Default modalTheme is ExpertusCToolsModalTheme (see exp_sp_core_extend_ctools_ajax.js:Drupal.CTools.Modal.show())
  $resource_style = array(
    'ctools-admin-resource-addedit-style' => array(
      'modalSize' => array(
        'width' => 600,
        'minHeight' => 280,
       ),
    )
  );

  drupal_add_js($resource_style, 'setting');
  
  if ($js) {   
    // Prepare the arguments list to be passed to $formState['build_info']['args'] of each form
    $argsList = array();
    
    list($type, $id) = explode('-', $locationDetails);
    
    expDebug::dPrint('exp_sp_administration_resource_addedit_form - $type : '.$type , 4);
    expDebug::dPrint('exp_sp_administration_resource_addedit_form - $id : '.$id , 4);
    
    if($type == 'Location'){
      $locationId = $id;
    } else {
      $facilityId = $id;
      $locationId = getLocationIdBasedOnFacilityId($facilityId);      
    }
    
    expDebug::dPrint('exp_sp_administration_resource_addedit_form - $locationId : '.$locationId , 4);
    expDebug::dPrint('exp_sp_administration_resource_addedit_form - $facilityId : '.$facilityId , 4);
    
    $locationTitle = '';
    if (!empty($locationId)) {
      $argsList[] = $locationId;
      $argsList[] = $facilityId;
      
      $locationTitle = ' - '.titleController('EXP-SP-ADMIN-RESOURCE-LOCATIONID', getLocationTitleDirect($locationId),65);
    }
    // Prepare list of forms to be displayed in the modal
    $formIdList = array(
                        array('id' => 'exp_sp_administration_resource_location_addedit_form', 'title' => (t('LBL320').$locationTitle)),
                        array('id' => 'exp_sp_administration_resource_facility_title_form', 'title' => t('Facility'))
                        );
    
    exp_ctools_modal_multi_ajaxonly_forms_display($formIdList, $argsList);
    
  } else {
    
  	throw new Exception('exp_sp_administration_resource.module: exp_sp_administration_resource_addedit_form() : nojs');
  	
  }
  } catch (Exception $ex) {
  	watchdog_exception('exp_sp_administration_resource_addedit_form', $ex);
  	expertusErrorThrow($ex);
  }
} 

function exp_sp_administration_resource_permission() {
	try{
    return array(    
    'Resources Admin Perm' => array(
      'title' => t('Resources Admin Perm')
    )
  );
    } catch (Exception $ex) {
    	watchdog_exception('exp_sp_administration_resource_permission', $ex);
    	expertusErrorThrow($ex);
    }
} 
?>