<?php
class AdministrationBannerTestHelper extends ExpertusWebTestCase {
	private $searchResultContent = null;
	protected $testcases = array ();
	public $listContent = '';
	private $srcParam = array (
			'title' => '', // Title base search
			'announcementdaterange' => '', // date range on announcement
			'announcementlang' => 'cre_sys_lng_eng', // Selected languages pipe separated
			'sortby' => 'desc', // Sort by option
			'announcemanage' => 'cre_sys_fop_me' 
	);
	public function setUp() {
		parent::setUp ();
		$this->drupalLogin ( $this->admin ); // login as admin
		$this->getBannerTestCases ();
		// set refer to prevent access denied error
		$this->setHttpReferer ( 'learning/enrollment-search' );
	}
	public function manageAdminBanner($scope = 'basic') {
		
		// Get Main HTML content
		$this->drupalPost ( 'administration/manage/banner' );
		$content = $this->content;
		
		// Get Filters
		$this->drupalGetAJAX ( 'administration/search-filter/banner' );
		$this->content = drupal_json_decode ( $this->content );
		
		// Update filters with existing response
		$replArray = array (
				'rendered_narrow_search_filters' => 'narrow-search',
				'rendered_main_div' => 'root-admin-results',
				'rendered_tab_content_main' => 'tab-content-main',
				'rendered_narrow_search_sortbar' => 'admin-maincontent_tab',
				'rendered_narrow_search_actionbar' => 'sort-bar-V2' 
		);
		
		$this->updateSearchFilters ( $content, $replArray, 'div', 'tag', 'div' );
		
		$this->displayTagsById ( 'narrow-search' );
		$this->displayTagsById ( 'root-admin-results' );
		
		// Based on the scope set the data to test
		if ($scope == 'all') {
			$testCases = $this->testcases ['bannerList'];
		} else {
			$testCases = array (
					$this->testcases ['bannerList'] [$scope] 
			);
		}
		
		// Get search results
		foreach ( $testCases as $test ) {
			$this->getAdministrationBannerList ( $test );
		}
	}
	public function getAdministrationBannerList($opt = array()) {
		$opt = array_merge ( $this->basicParam, $opt );
		$this->listContent = $this->content;
		$srcRc = $this->drupalGetAJAX ( 'administration/manage/banner/search/all/', array (
				'query' => $opt 
		) );
		$this->updateSearchResults ( $this->listContent, $srcRc, 'narrow-search-results-holder' );
	}
	protected function getBannerTestCases() {
		$rand = $this->randomName ();
		$largeBanImage = realpath ( 'sites/default/files/simpletest_files/banners/large.jpg' );
		$smallBanImage = realpath ( 'sites/default/files/simpletest_files/banners/small.jpg' );
		$this->testcases = array (
				'bannerList' => array (
						'basic' => array (),
						'case1' => array () 
				),
				'bannerCreate' => array (
						'st_case1' => array (
								"title" => 'st_case1 banner ' . $rand,
								"lang_code" => 'cre_sys_lng_eng',
								"banner_seq_num" => 1,
								"shortdesc[value]" => 'SimpleTest banner description ' . $rand,
								"files[announcement_banner_large]" => $largeBanImage,
								"date_activate" => '05-26-2016',
								"date_deactivate" => '06-26-2017',
								"files[announcement_banner]" => $smallBanImage 
						),
						'st_case2' => array (
								"title" => 'st_case2 banner ' . $rand,
								"lang_code" => 'cre_sys_lng_eng',
								"banner_seq_num" => 1,
								"shortdesc[value]" => 'SimpleTest banner description ' . $rand,
								"files[announcement_banner_large]" => $largeBanImage,
								"date_activate" => '05-26-2016',
								"date_deactivate" => '06-26-2017',
								"files[announcement_banner]" => $smallBanImage 
						) 
				),
				'bannerUpdate' => array (
						'st_case1' => array (
								"title" => 'st_case1 Banner changed- ' . $rand,
								"files[announcement_banner_large]" => $largeBanImage,
								"files[announcement_banner]" => $smallBanImage,
								"id" => $this->getBannerId ( 'st_case1' ) 
						),
						'st_case2' => array (
								"title" => 'st_case2 Banner changed- ' . $rand,
								"id" => $this->getBannerId ( 'st_case2' ) 
						) 
				),
				'bannerDelete' => array (
						'st_case1' => array (
								'id' => $this->getBannerId ( 'st_case1' ) 
						),
						'st_case2' => array (
								'id' => $this->getBannerId ( 'st_case2' ) 
						) 
				),
				'bannerView' => array (
						'st_case1' => array (
								'id' => $this->getBannerId ( 'st_case1' ) 
						) 
				),
				'bannerStatus' => array (
						'st_case1' => array (
								'id' => $this->getBannerId ( 'st_case1' ) 
						),
						'st_case2' => array (
								'id' => $this->getBannerId ( 'st_case2' ) 
						) 
				) 
		);
	}
	public function getBannerTitle($bannerId = '') {
		$bannerTitle = db_query ( "SELECT title FROM slt_announcement_master WHERE id = :banner_id", array (
				':banner_id' => $bannerId 
		) )->fetchField ();
		return $bannerTitle;
	}
	public function getBannerStatus($bannerId = '') {
		$bannerStatus = db_query ( "SELECT status FROM slt_announcement_master WHERE id = :banner_id", array (
				':banner_id' => $bannerId 
		) )->fetchField ();
		return $bannerStatus;
	}
	public function getBannerId($search_str = '') {
		$select = db_select ( 'slt_announcement_master', 'ban' );
		$select->addField ( 'ban', 'id', 'id' );
		$select->condition ( 'ban.status', 'cbn_anm_sts_del', '!=' );
		$select->condition ( 'ban.title', '%' . db_like ( $search_str ) . '%', 'LIKE' );
		$select->orderBy ( 'ban.id', 'DESC' );
		$select->range ( 0, 1 );
		$bannerId = $select->execute ()->fetchField ();
		return $bannerId;
	}
}
class AdministrationBannerListBase extends AdministrationBannerTestHelper {
}
class AdministrationBannerListAll extends AdministrationBannerListBase {
	public static function getInfo() {
		return array (
				'name' => 'Administration - Banner - List - All Tests',
				'description' => 'Module : exp_sp_administration_banner',
				'group' => '1503 - Administration - Manage - Banner - List' 
		);
	}
	public function testBannerListAll() {
		debug ( 'testAdminBannerListAll called' );
		$this->manageAdminBanner ( 'all' );
	}
}
class AdministrationBannerListCase1 extends AdministrationBannerListBase {
	public static function getInfo() {
		return array (
				'name' => 'Administration - Banner - List - Case 1',
				'description' => 'Module : exp_sp_administration_banner',
				'group' => '1503 - Administration - Manage - Banner - List' 
		);
	}
	public function testBannerListCase1() {
		debug ( 'testAdminBannerListCase1 called' );
		$this->manageAdminBanner ( 'case1' );
	}
}

/**
 * Banner view test cases
 * Created By :Maheswari.M
 * Created Date:22.12.2016
 */
class AdministrationBannerViewBase extends AdministrationBannerTestHelper {
	public function viewBannerTestCase($scope) {
		$ctoolModel = array (
				'modelWidth' => 890,
				'modelClass' => 'ctools-modal-ctools-viewscreen-wrapper',
				'modelTitle' => t ( 'View' ),
				'contentWidth' => 680,
				'contentMhight' => 335,
				'outerHeight' => 620,
				'outerWidth' => 336,
				'blockHeight' => 1232,
				'blockWidth' => 1343,
				'modelTop' => 150,
				'modelLeft' => 226.5,
				'docHeight' => 1232,
				'docWidth' => 1343 
		);
		$this->addCtoolModelContent ( $ctoolModel );
		
		$modelContent = $this->content;
		
		$testCases = $this->testcases ['bannerView'] [$scope];
		
		if ($testCases ['id'] == 'null' || $testCases ['id'] == '') {
			debug ( 'there is no banner exists' );
		} else {
			
			// Reset content with the ctool model
			$this->content = $modelContent;
			
			// Get empty form
			$post_field = array (
					'wrapper' => 'paint-narrow-search-results' 
			);
			$groupId = $testCases ['id'];
			
			$out = $this->drupalPostAJAX ( null, $edit, 'Save', '?q=administration/view-banner/ajax/addedit/' . $groupId, array (), array (), '', $post_field );
			$this->verbose ( 'Request to: ' . $this->getUrl () . '<hr />' . $this->content );
			// Do General validations
			$this->assertResponse ( 200, 'Form Rended successfully' );
			$webError = "Website encountered an unexpected error";
			$this->assertNoText ( t ( $webError ), 'Web errors not found', 'catalog_admin' );
		}
	}
}
class AdministrationBannerViewCase1 extends AdministrationBannerViewBase {
	public static function getInfo() {
		return array (
				'name' => 'Administration - Banner - View - Case 1',
				'description' => 'Module : exp_sp_administration_banner',
				'group' => '1503 - Administration - Manage - Banner - View' 
		);
	}
	public function testBannerViewCase1() {
		debug ( 'testBannerViewCase1 called' );
		$this->manageAdminBanner ( 'case1' );
		$this->viewBannerTestCase ( 'st_case1' );
	}
}

/**
 * Banner change status test cases
 * Created By :Maheswari.M
 * Created Date:29.12.2016
 * To check the functionality for the banner publish/unpublish .
 */
class AdministrationBannerStatusBase extends AdministrationBannerTestHelper {
	public function statusGroupTestCase($scope = 'all') {
		// Based on the scope set the data to test
		if ($scope == 'all') {
			$testCases = $this->testcases ['bannerStatus'];
		} else {
			$testCases = array (
					$this->testcases ['bannerStatus'] [$scope] 
			);
		}
		
		foreach ( $testCases as $test ) {
			$bannerId = $test ['id'];
			if ($bannerId != '') {
				// fetching the banner image status
				$status = $this->getBannerStatus ( $bannerId );
				$this->changeStatus ( $bannerId, $status );
				$status = $this->getBannerStatus ( $bannerId );
				$this->changeStatus ( $bannerId, $status );
				$this->content = $this->listContent;
				$this->getAdministrationBannerList ();
			} else
				debug ( 'The banner id not found' );
		}
	}
	public function changeStatus($bannerId, $status) {
		if ($status == 'cbn_anm_sts_atv') {
			// banner image is published status.
			$this->changeBannerStatus ( $bannerId );
			$this->assertResponse ( 200, 'Banner status unpublished successfully' );
		} else {
			// banner image is unpublished status.
			$this->changeBannerStatus ( $bannerId );
			$this->assertResponse ( 200, 'Banner status published successfully' );
		}
	}
	public function changeBannerStatus($bannerId) {
		$this->drupalPostAJAX ( null, $edit, 'Save', '?q=ajax/administration/manage/banner/publish-and-unpublish/' . $bannerId . '/bannertype', array (), array (), '', $post_field );
		$this->verbose ( 'Request to: ' . $this->getUrl () . '<hr />' . $this->content );
	}
}
class AdministrationBannerStatusCase1 extends AdministrationBannerStatusBase {
	public static function getInfo() {
		return array (
				'name' => 'Administration - Banner - Status - Case1',
				'description' => 'Module : exp_sp_administration_banner',
				'group' => '1503 - Administration - Manage - Banner - Status' 
		);
	}
	public function testBannerPublishCase1() {
		debug ( 'testBannerPublishCase1 called' );
		$this->manageAdminBanner ( 'case1' );
		$this->statusGroupTestCase ( 'st_case1' );
	}
}
class AdministrationBannerStatusCase2 extends AdministrationBannerStatusBase {
	public static function getInfo() {
		return array (
				'name' => 'Administration - Banner - Status - Case2',
				'description' => 'Module : exp_sp_administration_banner',
				'group' => '1503 - Administration - Manage - Banner - Status' 
		);
	}
	public function testBannerPublishCase2() {
		debug ( 'testBannerPublishCase1 called' );
		$this->manageAdminBanner ( 'case1' );
		$this->statusGroupTestCase ( 'st_case2' );
	}
}

?>