<?php 
class AdministrationSetupDeleteBase extends AdministrationSetupTestHelper
{
	public function deleteSetupTestCase($scope = 'all', $type = '') {

		$attrType = $this->getProfileListCode($type);
		
		// Based on the scope set the data to test
		if ($scope == 'all') {
			$testCases = $this->testcases[$type]['setupDelete'];
		} else {
			$testCases = array($this->testcases[$type]['setupDelete'][$scope]);
		}

		foreach($testCases as $test){
			
			// search list form with specific enttity to delete.
			$param = array(
					"form_id"=>"exp_sp_administration_setup_addedit_form",
					"_triggering_element_name" 	=>"Search List values",
					"list_code" => $attrType['code']
			);
			
			$newTest = array(
					'hiddenlisttype' 			=> $attrType['code'],
					'listvalues-autocomplete' 	=> $test['search']
					
			);
			
			$post_field = array('submit'=>$param, 'wrapper'=>'list-values-detail-wrapper');
			
			$out = $this->drupalPostAJAX(null, $newTest, 'Save','?q=system/ajax', array(), array(),'', $post_field);
			
			$this->verbose('Request to: ' . $this->getUrl() .	'<hr />' . $this->content);
			
			
			$deleteElem = "deleteAddedList-" . $test['detail']['id'];
			
			// Click Delete in the searched items
			$param = array(
					"form_id"=>"exp_sp_administration_setup_addedit_form",
					"_triggering_element_name" 	=> $deleteElem,
					'listvalues_id'   => $test['detail']['id'],
					'listvalues_code' => $test['detail']['code'],
					'list_id'  		  => '',
					'list_code'		  => $attrType['code'],
			);
			
			$delTest = array(
					'hiddenlisttype' => $attrType['code'],
					$deleteElem => 1
			);
			unset($test);
			$post_field = array('submit'=>$param,	'wrapper'=>'list-values-detail-wrapper');

			$out = $this->drupalPostAJAX(null, $delTest, $deleteElem,'?q=system/ajax',array(),array(),'',$post_field);

			$this->verbose('Request to: ' . $this->getUrl() .	'<hr />' . $this->content);

			//Check if any error thrown
			$isError = $this->xpath('//div[@class="messages error"]//ul/li');
			$error = '';
			debug("ERROR STRINGS ");

			if(sizeOf($isError) > 0){
				$error = (string) $isError[0];
			}
			$this->assertResponse(200,'Form Repainted successfully');
			//$txt = 'Details saved successfully..';
			//$this->assertText(t($txt),'Details saved successfully.','catalog_admin');
			$this->assertNoText(t($error),'Error - '.$error,'catalog_admin');
			$webError = "Website encountered an unexpected error";
			$this->assertNoText(t($webError),'Web errors not found','catalog_admin');
		}
	}

}

class AdministrationSetupDeleteDepartmentAll extends AdministrationSetupDeleteBase
{
	public static function getInfo() {
		return array(
				'name' => 'Administration - Setup - Delete - Department - All Tests',
				'description' => 'Module : exp_sp_administration_people',
				'group' => '1204 - Administration - People - Setup - Delete',
		);
	}
	
	public function testSetupDeleteDepartmentAll() {
		$this->manageAdminSetup('basic', 'department');
		debug('testSetupDeleteDepartmentAll called');
		$this->deleteSetupTestCase('all', 'department');
	}
}

class AdministrationSetupDeleteDepartmentCase1 extends AdministrationSetupDeleteBase
{
	public static function getInfo() {
		return array(
				'name' => 'Administration - Setup - Delete - Department - Case 1',
				'description' => 'Module : exp_sp_administration_people',
				'group' => '1204 - Administration - People - Setup - Delete',
		);
	}

	public function testSetupDeleteDepartmentCase1() {
		$this->manageAdminSetup('basic', 'department');
		debug('testSetupDeleteDepartmentCase1 called');
		$this->deleteSetupTestCase('st_case1', 'department');
	}
}

class AdministrationSetupDeleteDepartmentCase2 extends AdministrationSetupDeleteBase
{
	public static function getInfo() {
		return array(
				'name' => 'Administration - Setup - Delete - Department - Case 2',
				'description' => 'Module : exp_sp_administration_people',
				'group' => '1204 - Administration - People - Setup - Delete',
		);
	}

	public function testSetupDeleteDepartmentCase2() {
		$this->manageAdminSetup('basic', 'department');
		debug('testSetupDeleteDepartmentCase2 called');
		$this->deleteSetupTestCase('st_case2', 'department');
	}
}

class AdministrationSetupDeleteEmploymentTypeAll extends AdministrationSetupDeleteBase
{
	public static function getInfo() {
		return array(
				'name' => 'Administration - Setup - Delete - EmploymentType - All Tests',
				'description' => 'Module : exp_sp_administration_people',
				'group' => '1204 - Administration - People - Setup - Delete',
		);
	}

	public function testSetupDeleteEmploymentTypeAll() {
		$this->manageAdminSetup('basic', 'employment-type');
		debug('testSetupDeleteEmploymentTypeAll called');
		$this->deleteSetupTestCase('all', 'employment-type');
	}
}

class AdministrationSetupDeleteEmploymentTypeCase1 extends AdministrationSetupDeleteBase
{
	public static function getInfo() {
		return array(
				'name' => 'Administration - Setup - Delete - EmploymentType - Case 1',
				'description' => 'Module : exp_sp_administration_people',
				'group' => '1204 - Administration - People - Setup - Delete',
		);
	}

	public function testSetupDeleteEmploymentTypeCase1() {
		$this->manageAdminSetup('basic', 'employment-type');
		debug('testSetupDeleteEmploymentTypeCase1 called');
		$this->deleteSetupTestCase('st_case1', 'employment-type');
	}
}

class AdministrationSetupDeleteEmploymentTypeCase2 extends AdministrationSetupDeleteBase
{
	public static function getInfo() {
		return array(
				'name' => 'Administration - Setup - Delete - EmploymentType - Case 2',
				'description' => 'Module : exp_sp_administration_people',
				'group' => '1204 - Administration - People - Setup - Delete',
		);
	}

	public function testSetupDeleteEmploymentTypeCase2() {
		$this->manageAdminSetup('basic', 'employment-type');
		debug('testSetupDeleteEmploymentTypeCase2 called');
		$this->deleteSetupTestCase('st_case2', 'employment-type');
	}
}


class AdministrationSetupDeleteJobRoleAll extends AdministrationSetupDeleteBase
{
	public static function getInfo() {
		return array(
				'name' => 'Administration - Setup - Delete - JobRole - All Tests',
				'description' => 'Module : exp_sp_administration_people',
				'group' => '1204 - Administration - People - Setup - Delete',
		);
	}

	public function testSetupDeleteJobRoleAll() {
		$this->manageAdminSetup('basic', 'job-role');
		debug('testSetupDeleteJobRoleAll called');
		$this->deleteSetupTestCase('all', 'job-role');
	}
}

class AdministrationSetupDeleteJobRoleCase1 extends AdministrationSetupDeleteBase
{
	public static function getInfo() {
		return array(
				'name' => 'Administration - Setup - Delete - JobRole - Case 1',
				'description' => 'Module : exp_sp_administration_people',
				'group' => '1204 - Administration - People - Setup - Delete',
		);
	}

	public function testSetupDeleteJobRoleCase1() {
		$this->manageAdminSetup('basic', 'job-role');
		debug('testSetupDeleteJobRoleCase1 called');
		$this->deleteSetupTestCase('st_case1', 'job-role');
	}
}

class AdministrationSetupDeleteJobRoleCase2 extends AdministrationSetupDeleteBase
{
	public static function getInfo() {
		return array(
				'name' => 'Administration - Setup - Delete - JobRole - Case 2',
				'description' => 'Module : exp_sp_administration_people',
				'group' => '1204 - Administration - People - Setup - Delete',
		);
	}

	public function testSetupDeleteJobRoleCase2() {
		$this->manageAdminSetup('basic', 'job-role');
		debug('testSetupDeleteJobRoleCase2 called');
		$this->deleteSetupTestCase('st_case2', 'job-role');
	}
}

class AdministrationSetupDeleteJobTitleAll extends AdministrationSetupDeleteBase
{
	public static function getInfo() {
		return array(
				'name' => 'Administration - Setup - Delete - JobTitle - All Tests',
				'description' => 'Module : exp_sp_administration_people',
				'group' => '1204 - Administration - People - Setup - Delete',
		);
	}

	public function testSetupDeleteJobTitleAll() {
		$this->manageAdminSetup('basic', 'job-title');
		debug('testSetupDeleteJobTitleAll called');
		$this->deleteSetupTestCase('all', 'job-title');
	}
}

class AdministrationSetupDeleteJobTitleCase1 extends AdministrationSetupDeleteBase
{
	public static function getInfo() {
		return array(
				'name' => 'Administration - Setup - Delete - JobTitle - Case 1',
				'description' => 'Module : exp_sp_administration_people',
				'group' => '1204 - Administration - People - Setup - Delete',
		);
	}

	public function testSetupDeleteJobTitleCase1() {
		$this->manageAdminSetup('basic', 'job-title');
		debug('testSetupDeleteJobTitleCase1 called');
		$this->deleteSetupTestCase('st_case1', 'job-title');
	}
}

class AdministrationSetupDeleteJobTitleCase2 extends AdministrationSetupDeleteBase
{
	public static function getInfo() {
		return array(
				'name' => 'Administration - Setup - Delete - JobTitle - Case 2',
				'description' => 'Module : exp_sp_administration_people',
				'group' => '1204 - Administration - People - Setup - Delete',
		);
	}

	public function testSetupDeleteJobTitleCase2() {
		$this->manageAdminSetup('basic', 'job-title');
		debug('testSetupDeleteJobTitleCase2 called');
		$this->deleteSetupTestCase('st_case2', 'job-title');
	}
}


class AdministrationSetupDeleteUserTypeAll extends AdministrationSetupDeleteBase
{
	public static function getInfo() {
		return array(
				'name' => 'Administration - Setup - Delete - UserType - All Tests',
				'description' => 'Module : exp_sp_administration_people',
				'group' => '1204 - Administration - People - Setup - Delete',
		);
	}

	public function testSetupDeleteUserTypeAll() {
		$this->manageAdminSetup('basic', 'user-type');
		debug('testSetupDeleteUserTypeAll called');
		$this->deleteSetupTestCase('all', 'user-type');
	}
}

class AdministrationSetupDeleteUserTypeCase1 extends AdministrationSetupDeleteBase
{
	public static function getInfo() {
		return array(
				'name' => 'Administration - Setup - Delete - UserType - Case 1',
				'description' => 'Module : exp_sp_administration_people',
				'group' => '1204 - Administration - People - Setup - Delete',
		);
	}

	public function testSetupDeleteUserTypeCase1() {
		$this->manageAdminSetup('basic', 'user-type');
		debug('testSetupDeleteUserTypeCase1 called');
		$this->deleteSetupTestCase('st_case1', 'user-type');
	}
}

class AdministrationSetupDeleteUserTypeCase2 extends AdministrationSetupDeleteBase
{
	public static function getInfo() {
		return array(
				'name' => 'Administration - Setup - Delete - UserType - Case 2',
				'description' => 'Module : exp_sp_administration_people',
				'group' => '1204 - Administration - People - Setup - Delete',
		);
	}

	public function testSetupDeleteUserTypeCase2() {
		$this->manageAdminSetup('basic', 'user-type');
		debug('testSetupDeleteUserTypeCase2 called');
		$this->deleteSetupTestCase('st_case2', 'user-type');
	}
}




?>