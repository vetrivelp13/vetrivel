<?php 

use CronServer\Classes\expDebug;
class AdministrationGroupTestHelper extends ExpertusWebTestCase {
	private $searchResultContent=null;
	
	protected $testcases = array();
	
	
	private $srcParam = array(
			'title'=>'',		// Title base search
			'announcementdaterange'=>'',		// date range on announcement
			'announcementlang'=>'cre_sys_lng_eng', 	// Selected languages pipe separated
			'sortby'=> 'desc',		//	Sort by option
			'announcemanage' => 'cre_sys_fop_me'
	);

	public function setUp() {
		parent::setUp();
		$this->drupalLogin($this->admin); // login as admin
		$this->getGroupTestCases();
		// set refer to prevent access denied error
		$this->setHttpReferer('learning/enrollment-search');
	}
	
	public function manageAdminGroup($scope = 'basic') {
	
		// Get Main HTML content
		$this->drupalPost('administration/people/group');
		$content = $this->content;
	
		// Get Filters
		$this->drupalGetAJAX('administration/search-filter/group');
		$this->content = drupal_json_decode($this->content);
			
		//Update filters with existing response
		$replArray = array(
				'rendered_narrow_search_filters' => 'narrow-search',
				'rendered_main_div' => 'root-admin-results',
				'rendered_tab_content_main' => 'tab-content-main',
				'rendered_narrow_search_sortbar' => 'admin-maincontent_tab',
				'rendered_narrow_search_actionbar' => 'sort-bar-V2'
		);
			
		$this->updateSearchFilters($content, $replArray, 'div', 'tag', 'div' );
	
		$this->displayTagsById('narrow-search');
		$this->displayTagsById('root-admin-results');
	
		// Based on the scope set the data to test
		if ($scope == 'all') {
			$testCases = $this->testcases['groupList'];
		} else {
			$testCases = array($this->testcases['groupList'][$scope]);
		}
		
		//Get search results
		foreach($testCases as $test){
			$this->getAdministrationGroupList($test);
		}
	}
	
	public function getAdministrationGroupList($opt = array()){
		$opt = array_merge($this->basicParam, $opt);
		$content = $this->content;
		$srcRc = $this->drupalGetAJAX('administration/people/group/search/all/',array('query'=>$opt));
		$this->updateSearchResults($content,$srcRc,'narrow-search-results-holder');
	}

	protected function getGroupTestCases(){
		$rand = $this->randomName();
		$this->testcases = array(
				'groupList' => array(
						'basic' => array(),
						'case1' => array(),
				),		
				'groupCreate' => array(
		  				'st_case1' => array(
		  						"groupType"						=> 'admin',
		  						"name"							=> 'st_case1 group - '.$rand, 
		  						"code" 							=> '',
		  						"grp_war"						=> 0,
		  						"atr_ste_con_dep"				=> $this->getRandomGroupAttribute('cre_usr_dpt'),
		  						"atr_ste_con_ety"				=> $this->getRandomGroupAttribute('cre_usr_etp'),
		  						"atr_ste_con_jbr"				=> '',
		  						"atr_ste_con_lng"				=> '',
		  						"atr_ste_con_org"				=> '',
		  						"atr_ste_con_rol"				=> '',
		  						"atr_ste_con_usr"				=> '',
		  						"atr_ste_con_cnt"				=> '',
		  						"atr_ste_con_ste"				=> '',
		  				 ),
						'st_case2' => array(
								"groupType"						=> 'learner',
		  						"name"							=> 'st_case2 group - '.$rand, 
		  						"code" 							=> '',
		  						"grp_war"						=> 0,
		  						"atr_ste_con_dep"				=> $this->getRandomGroupAttribute('cre_usr_dpt'),
		  						"atr_ste_con_ety"				=> $this->getRandomGroupAttribute('cre_usr_etp'),
		  						"atr_ste_con_jbr"				=> '',
		  						"atr_ste_con_lng"				=> '',
		  						"atr_ste_con_org"				=> '',
		  						"atr_ste_con_rol"				=> '',
		  						"atr_ste_con_usr"				=> '',
		  						"atr_ste_con_cnt"				=> '',
		  						"atr_ste_con_ste"				=> '',
						),
				),
				'groupUpdate' => array(
						'st_case1' 	=> array(
								"groupType"						=> 'admin',
								"name"							=> 'st_case1 group changed- '.$rand,
								"id"							=> $this->getGroupId('st_case1'),	
						 ),
						'st_case2' => array(
								"groupType"						=> 'learner',
								"name"							=> 'st_case2 group changed- '.$rand,
								"id"							=> $this->getGroupId('st_case2'),
						),
				),
				'groupDelete' => array(
						'st_case1' 	=> array( 'id' => $this->getGroupId('st_case1') ),
						'st_case2' 	=> array( 'id' => $this->getGroupId('st_case2') ),
				),
				'groupView' => array(
						'st_case1' 	=> array( 'id' => $this->getGroupId('st_case1') ),
				),
			'groupManage' => array(
		  				'st_case1' => array(
		  						"groupType"						=> 'admin',
		  						"name"							=> 'st_case1 group - '.$rand, 
		  						"code" 							=> '',
		  						"grp_war"						=> 0,
		  						"atr_ste_con_dep"				=> $this->getRandomGroupAttribute('cre_usr_dpt'),
		  						"atr_ste_con_ety"				=> $this->getRandomGroupAttribute('cre_usr_etp'),
		  						"atr_ste_con_jbr"				=> '',
		  						"atr_ste_con_lng"				=> '',
		  						"atr_ste_con_org"				=> '',
		  						"atr_ste_con_rol"				=> '',
		  						"atr_ste_con_usr"				=> '',
		  						"atr_ste_con_cnt"				=> '',
		  						"atr_ste_con_ste"				=> '',
		  				 ),
						'st_case2' => array(
								"groupType"						=> 'learner',
		  						"name"							=> 'st_case2 group - '.$rand, 
		  						"code" 							=> '',
		  						"grp_war"						=> 0,
		  						"atr_ste_con_dep"				=> $this->getRandomGroupAttribute('cre_usr_dpt'),
		  						"atr_ste_con_ety"				=> $this->getRandomGroupAttribute('cre_usr_etp'),
		  						"atr_ste_con_jbr"				=> '',
		  						"atr_ste_con_lng"				=> '',
		  						"atr_ste_con_org"				=> '',
		  						"atr_ste_con_rol"				=> '',
		  						"atr_ste_con_usr"				=> '',
		  						"atr_ste_con_cnt"				=> '',
		  						"atr_ste_con_ste"				=> '',
						),
				),
		);
	}
	
	public function getGroupTitle($groupId = '') {
		$groupTitle = db_query("SELECT name FROM slt_groups WHERE id = :group_id", array(':group_id' => $groupId ))->fetchField();
		return $groupTitle;
	}
	
	public function getGroupStatus($groupId = '') {
		$groupStatus = db_query("SELECT status FROM slt_groups WHERE id = :group_id", array(':group_id' => $groupId ))->fetchField();
		return $groupStatus;
	}
	
	public function getGroupId($search_str = '') {
		$select = db_select('slt_groups', 'grp');
		$select->addField('grp', 'id', 'id');
		$select->condition('grp.name', '%' . db_like($search_str) . '%', 'LIKE');
		$select->condition('grp.status','cre_sec_sts_del','!=' );
		$select->orderBy('grp.id', 'DESC');
		$select->range(0,1);
	//	expDebug::dPrintDBAPI("Groups Query--->", $select);
		$groupId = $select->execute()->fetchField();
		return $groupId;
	}
	
	public function getRandomGroupAttribute($type = '') {
		$select = db_select('slt_profile_list_items', 'proflist');
		$select->addField('proflist', 'code', 'code');
		$select->where("proflist.parent_id = (select id from slt_profile_list_items where code = '". $type. "')");
		$select->orderBy('rand()');
		$select->range(0,1);
		$groupCode = $select->execute()->fetchField();
		return $groupCode;
	}
	
	/**
	 *  Export functionality test case
	 *  Created By :Maheswari.M
	 *  Created Date:02.01.2017
	 */
	
	
	public function exportGroups($opt='csv'){
		debug('Group Id -->'.print_r($this->id,1),4);
		$selGroupQry = db_select('slt_groups', 'per');
		$selGroupQry->addField('per', 'name', 'name');
		$selGroupQry->condition('per.id', $this->id, 'IN');
		$selGroupRes = $selGroupQry->execute()->fetchAll();
			debug('Group Name List-->'.print_r($selGroupRes,1),4);
		if($opt=='csv'){
			//customized the drupalGet() using options parameter
			$this->drupalGet('administration/people/group/export',array('filewrite'=>1,'testCase'=>'csv'));
			if ($this->assertResponse(200) == 'pass') {
				foreach ($selGroupRes as $groupName){
					$this->assertRaw($groupName->name, 'Contents of the exported file has '.$groupName->name.' and it is correct.');
				}
					
			}
		}
		elseif($opt=='pdf'){
			$this->drupalGet('administration/people/group/print',array('filewrite'=>1,'testCase'=>'pdf'));
			if ($this->assertResponse(200) == 'pass') {
				debug($this->content);
				foreach ($selGroupRes as $groupName){
					$this->assertText($groupName->name, 'Contents of the exported file has '.$groupName->name.' and it is correct.');
				}
					
			}
		}
	
	}
}


class AdministrationGroupListBase extends AdministrationGroupTestHelper
{
	
}

class AdministrationGroupListAll extends AdministrationGroupListBase
{
	public static function getInfo() {
		return array(
				'name' => 'Administration - Group - List - All Tests',
				'description' => 'Module : exp_sp_administration_people',
				'group' => '1203 - Administration - People - Group - List',
		);
	}
	
	public function testGroupListAll() {
		debug('testAdminGroupListAll called');
		$this->manageAdminGroup('all');
	}
}

class AdministrationGroupListCase1 extends AdministrationGroupListBase
{
	public static function getInfo() {
		return array(
				'name' => 'Administration - Group - List - Case 1',
				'description' => 'Module : exp_sp_administration_people',
				'group' => '1203 - Administration - People - Group - List',
		);
	}

	public function testGroupListCase1() {
		debug('testAdminGroupListCase1 called');
		$this->manageAdminGroup('case1');
	}
}






/**
 *  Group view test cases
 *  Created By :Maheswari.M
 *  Created Date:21.12.2016
 */

class AdministrationGroupViewBase extends AdministrationGroupTestHelper
{
	public function viewGroupTestCase($scope) {
		$ctoolModel = array(
				'modelWidth' => 890,
				'modelClass' => 'ctools-modal-ctools-viewscreen-wrapper',
				'modelTitle' => t('View'),
				'contentWidth' => 680,
				'contentMhight' => 335,
				'outerHeight' => 620,
				'outerWidth' => 336,
				'blockHeight' => 1232,
				'blockWidth' => 1343,
				'modelTop' => 150,
				'modelLeft' => 226.5,
				'docHeight' => 1232,
				'docWidth' => 1343
		);
		$this->addCtoolModelContent($ctoolModel);
		$modelContent = $this->content;	
		
		$testCases =$this->testcases['groupView'][$scope];		
		
		if($testCases['id']=='null'||$testCases['id']==''){		
			debug('there is no group exists');
		}
		else{
			//Reset content with the ctool model
			$this->content = $modelContent;
			//Get empty form
			$post_field = array('wrapper'=>'paint-narrow-search-results');
			$groupId = $testCases['id'];
			$out = $this->drupalPostAJAX(null, $edit,'Save','?q=administration/view-group/ajax/addedit/' . $groupId,array(),array(),'',$post_field);
      $this->verbose('Request to: ' . $this->getUrl() . '<hr />' . $this->content);			
			// Do General validations
			$this->assertResponse(200,'Form Rended successfully');
			$webError = "Website encountered an unexpected error";
			$this->assertNoText(t($webError),'Web errors not found','catalog_admin');		
		}
	}
}

class AdministrationGroupViewCase1 extends AdministrationGroupViewBase
{
	public static function getInfo() {
		return array(
				'name' => 'Administration - Group - View - Case 1',
				'description' => 'Module : exp_sp_administration_people',
				'group' => '1203 - Administration - People - Group - View',
		);
	}

	public function testGroupViewCase1() {
		debug('testGroupViewCase1 called');
		$this->manageAdminGroup('case1');
		$this->viewGroupTestCase('st_case1');
	}
}


/**
 *  Export functionality test case
 *  Created By :Maheswari.M
 *  Created Date:02.01.2017
 */


class AdministrationGroupExport extends AdministrationGroupListBase
{
	public static function getInfo() {
		return array(
						'name' => 'Administration - Group - Export - All',
				'description' => 'Module : exp_sp_administration_people',
				'group' => '1203 - Administration - People - Group - Export',
		);
	}

	public function testGroupExportAll() {
		debug('testAdminGroupExportAll called');
		$this->manageAdminGroup('basic');
		$this->exportGroups('csv');
		$this->exportGroups('pdf');
	}
}


















?>