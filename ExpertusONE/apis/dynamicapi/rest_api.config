; This is the Dynamic REST API Configuration File.
;	This file contains sections, one exclusive to each api.
; This file is designed after the php.ini standard, so all changes should conform to that standard.
;	Add a comment before each and every section that you add.
; Comments start with ';', as in php.ini.

;Documentation parameters
[documentation]
last_updated = Tue, 14-Feb-2015 04:00 PM


;API for Add Organization
[AddOrganizationAPI]
category = AdminAPI
display_name = Create Organization
privilege_parameter = Organization$$$create
entity_type_parameter = Organization$$$parent
description = The API is used to create an organization.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_people/exp_sp_administration_organization/exp_sp_administration_organization.inc
method_name = addNewOrganizationByRest;the name of the function that is to be executed when this api is called.
params.form_state.values.name = Y>Name of the organization>Dynamic_Org_VERSION
params.form_state.values.description = Y>Description of the organization>Dynamic_Org_VERSION
params.form_state.values.parent = N>Parent Organization Id>2
params.form_state.values.type = Y>Type of the organization. Possible values for this field are cre_org_typ_int, cre_org_typ_ext.>cre_org_typ_ext
;params.form_state.values.status = Y>Status. Possible values for this field are cre_org_sts_act, cre_org_sts_itv.>cre_org_sts_act
params.form_state.values.contact = N>Contact Name>
params.form_state.values.cost_center = N>Cost Center>
params.userid = Y>User Id>1
response.id= organization id>2
api_owner.name = Sureshkumar V;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = add
testengine.category=add
testengine.apitestsequence = 1
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 40 ; number of request which can be accept per minute

;API for Update Organization
[UpdateOrganizationAPI]
category = AdminAPI
display_name = Update Organization
privilege_parameter = Organization$$$create
entity_type_parameter = Organization$$$id$~$Organization$$$parent
description = The API is used to update an Organization.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_people/exp_sp_administration_organization/exp_sp_administration_organization.inc
method_name = updateOrganizationDetailsByRest;the name of the function that is to be executed when this api is called.
params.form_state.values.id = Y>Enter the ID of the Organization to be updated>
params.form_state.values.name = Y>Enter the name of the Organization to be updated>Dynamic_Org_Updated_VERSION
params.form_state.values.description = Y>Enter the description of the Organization to be updated>Dynamic_Org_VERSION
params.form_state.values.parent = N>Parent Organization Id>10
params.form_state.values.type = Y>Enter the type of organization. Please refer to the Organization section of the API codes document to view the list of available organization types.>cre_org_typ_ext
params.form_state.values.status = Y>Enter the status code of the organization. Please refer to the Organization section of the API codes document to view the list available Organization status codes. Status of the Organization.>Activate
params.form_state.values.contact = N>Enter the contact name for the organization>
params.form_state.values.cost_center = N>NULL>
params.userid = N>Enter the ID of the user making this API call.>1
response.id= organization id>1
api_owner.name = Sureshkumar.V;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = update
testengine.category=update
testengine.apitestsequence = 2
testengine.use_prev_response_field = Id ; it will used to run the update org
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 40 ; number of request which can be accept per minute

;API for List the organizations
[ListOrganizationAPI]
category = AdminAPI
display_name = List of Organizations
privilege_parameter = Organization$$$view
description = The API is used to display the list of organizations.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_people/exp_sp_administration_organization/exp_sp_administration_organization.inc
method_name = listOrganizationByRestAPI;the name of the function that is to be executed when this api is called.
params.start = N > Enter+the+starting+point+from+which+the+Training+Plan+records+are+displayed.+Only+numerical+values+are+accepted.+Default+value%3A+0 >0
params.limit = N >  Number of records needs to be retrieved. This API can fetch 1000 records maximum in a single request.Enter+only+numerical+values.+This+parameter+sets+the+number+of+records+retrieved+based+on+the+entered+value.+Default+value%3A+10%0A%0ANote%3A+If+optional+parameters+are+blank%2C+then+%27start%27+and+%27limit%27+parameters+become+Mandatory>10
params.userid = Y >  Enter the ID of the user making this API call. >1
response.id= Displays the organization ID  >2
response.name=Displays the organization name>Dynamic_Org_Updated_VERSION
response.description = Displays the description of the organization >Sample Dscription
response.type = Displays the type of the organization. Please refer to the organization type section of the API Codes document to view the list of displayed organization types.
response.status = Displays the status of the organization. Please refer to the organization status section of the API Codes document to view the list of displayed organization statuses.>Active
response.childorgs = Displays the count of the child organizations. >0
response.lnrcount = Displays the count of the child organizations. >0
api_owner.name = Sureshkumar.V; the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.apitestsequence = 3
testengine.verify_response_field = Id
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for User Creation
[UserCreationAPI]
category = AdminAPI
display_name = Create User
privilege_parameter = User$$$create
description = The API is used to create an user.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_people/exp_sp_administration_user/exp_sp_administration_user.inc
method_name = addNewUserByRestAPI;the name of the function that is to be executed when this api is called.
params.form_state.values.first_name= Y> Enter the first name of the new User>Firstname_VERSION
params.form_state.values.last_name = Y> Enter the last name of the new User>Lastname_VERSION
params.form_state.values.user_name = Y> Enter the username of the new User>username_VERSION
params.form_state.values.password = N> Enter the password of the user >welcome
params.form_state.values.email = Y> Enter the email ID of the new User>username_VERSION@eee.com
params.form_state.values.status = Y> Enter the status of the User. Please refer to the User Status section of the API Codes document to view the list of allowed statuses.>cre_usr_sts_atv
params.form_state.values.addr1 = N> Enter the primary address of the user>
params.form_state.values.addr2 = N>Enter the secondary address of the user>
params.form_state.values.state = N> Enter the state in which the user resides>CA
params.form_state.values.country = N> Enter the country in which the user resides>US
params.form_state.values.city = N> Enter the city in which the user resides>Mountain View
params.form_state.values.zip = N> Enter the zipcode in which the user resides>
params.form_state.values.phone_no = N> Enter the phone number of the user>
params.form_state.values.mobile_no = N> Enter the mobile number of the user>
params.form_state.values.manager_id = N> Enter the ID of the User%27s manager>
params.form_state.values.org_id = N> Enter the ID of the User%27s organization>
params.form_state.values.usertype = N> User Type. Possible values for this field can be seen in User Type section of API codes page>cre_usr_ptp_emp
params.form_state.values.jobrole = N> User Job role. Possible values using comma as separator for this field can be seen in Job Role section of API codes page.>cre_usr_jrl_rl1
params.form_state.values.jobtitle = N> Enter the title of the User%27s job. Please refer to the Job Title section of the API Codes document to view the list of allowed job titles.>cre_usr_jtl_dtm
params.form_state.values.empltype = N> Enter the User%27s employee type. Please refer to the Employee Type section of the API Codes document to view the list of allowed employee types.>cre_usr_etp_ftm
params.form_state.values.roles = N> Enter+the+roles+of+the+User.+The+allowed+values+are+%22instructor%22+and+%22manager%22.+Multiple+values+can+be+entered+by+adding+commas.>instructor,manager
params.form_state.values.hire_date = N> Enter the hire date of the new user.The date should be mentioned in mm/dd/yyyy format. >08/12/2016
params.form_state.values.webex_name = N>Enter the webex name of the User whose details are to be updated.>
params.form_state.values.webex_pass = N>Enter the webex password of the User whose details are to be updated.>
params.form_state.values.employee_no = N> Enter the Employee Number of the User>
params.form_state.values.deptcode = N> Enter the department code of the User. Please refer to the Department section of the API Codes document to view the list of allowed department codes.>cre_usr_dpt_mkt
params.form_state.values.other_managers  = N> Enter+the+IDs+of+the+User%27s+other+managers+%28if+any%29.+Multiple+values+can+be+entered+by+adding+commas.>
params.form_state.values.other_organization  = N> Enter+the+ID+of+the+User%27s+other+Organization+%28if+any%29.+Multiple+values+can+be+entered+by+adding+commas.>
params.form_state.values.preferred_timezone = N> Enter the preferred time zone of the User. Please refer to the Timezones section of the API Codes document to view the list of allowed timezones.>cre_sys_tmz_007
params.form_state.values.preferred_language = N> Enter the prefered language of the User. Please refer to the Languages section of the API Codes document to view the list of allowed languages.>cre_sys_lng_eng
params.form_state.values.preferred_currency = N> Enter the prefered currency of the User. Please refer to the Currency section of the API Codes document to view the list of allowed currency.>cre_sys_crn_usd
params.form_state.values.register_sms = N> Register for object creation via sms .Possible values are 0 or 1>0
params.userid = Y > Enter the ID of the user making this API call. Accepts only numeric values.>1
response.Id= Created User Id>1
response.is_verified_add=Is address verification done. Possible value can be either+Yes+or+No+depends+on the address verification.>
response.is_valid_add=Is the given address is valid or invalid. Possible value can be either Valid or Invalid >
response.invalid_add_reason=Reason for invalid Address. >
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = add
testengine.category= add
testengine.apitestsequence = 4
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 40 ; number of request which can be accept per minute

;API for User Update
[UserUpdationAPI]
category = AdminAPI
display_name = Update User
privilege_parameter = User$$$update
entity_type_parameter = User$$$id
description = The API is used to update the user.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_people/exp_sp_administration_user/exp_sp_administration_user.inc
method_name = updateUserByRestAPI;the name of the function that is to be executed when this api is called.
params.form_state.values.id= Y> Enter the ID of the User whose details are to be updated. Accepts only numeric values.>3
params.form_state.values.first_name= Y> Enter the first name of the User whose details are to be updated.>Firstname_VERSION
params.form_state.values.last_name = Y> Enter the last name of the User whose details are to be updated.>Lastname_VERSION
params.form_state.values.user_name = Y> Enter the username of the User whose details are to be updated.>Username_VERSION
params.form_state.values.password = N> User Password>welcome
params.form_state.values.email = Y> Enter the email ID of the User whose details are to be updated.>username_VERSION@eee.com
params.form_state.values.status = Y> Enter the status of the User. Please refer to the User Status section of the API Codes document to view the list of allowed statuses.>cre_usr_sts_atv
params.form_state.values.addr1 = N>Enter the primary address of the user>
params.form_state.values.addr2 = N>Enter the secondary address of the user>
params.form_state.values.state = N>Enter the state in which the user resides>CA
params.form_state.values.country = N>Enter the country in which the user resides>US
params.form_state.values.city = N>Enter the city in which the user resides>Mountain View
params.form_state.values.zip = N>Enter the zipcode in which the user resides>
params.form_state.values.phone_no = N>Enter the phone number of the user>
params.form_state.values.mobile_no = N>Enter the mobile number of the user>
params.form_state.values.manager_id = N>Enter the ID of the User%27s manager>
params.form_state.values.org_id = N>Enter the ID of the User%27s organization>
params.form_state.values.usertype = N>Enter the type of the user. Please refer to the User Type section of the API Codes document to view the list of allowed user types.>cre_usr_ptp_emp
params.form_state.values.jobrole = N>Enter the job role of the user. Multiple values can be entered by adding commas.>cre_usr_jrl_rl1
params.form_state.values.jobtitle = N> Enter the title of the User%27s job. Please refer to the Job Title section of the API Codes document to view the list of allowed job titles.>cre_usr_jtl_dtm
params.form_state.values.empltype = N> Enter the User%27s employee type. Please refer to the Employee Type section of the API Codes document to view the list of allowed employee types.>cre_usr_etp_ftm
params.form_state.values.roles = N>Enter the roles of the User. The allowed values are %27instructor%27 and %27manager%27. Multiple values can be entered by adding commas.>instructor,manager
params.form_state.values.hire_date = N>Enter the hire date of the user.The date should be mentioned in mm/dd/yyyy format.>08/12/2016
params.form_state.values.webex_name = N> Enter the webex name for the User >
params.form_state.values.webex_pass = N> Enter the webex password for the User >
params.form_state.values.employee_no = N>Enter the Employee Number of the User>
params.form_state.values.deptcode = N>Enter the department code of the User. Please refer to the Department section of the API Codes document to view the list of allowed department codes.>cre_usr_dpt_mkt
params.form_state.values.other_managers  = N>Enter+the+IDs+of+the+User%27s+other+managers+%28if+any%29.+Multiple+values+can+be+entered+by+adding+commas.>
params.form_state.values.other_organization  = N>Enter+the+ID+of+the+User%27s+other+Organization+%28if+any%29.+Multiple+values+can+be+entered+by+adding+commas.>
params.form_state.values.preferred_timezone = N>Enter the preferred time zone of the User. Please refer to the Timezones section of the API Codes document to view the list of allowed timezones.>cre_sys_tmz_007
params.form_state.values.preferred_language = N>Enter the prefered language of the User. Please refer to the Languages section of the API Codes document to view the list of allowed languages.>cre_sys_lng_eng
params.form_state.values.preferred_currency = N> Enter the prefered currency of the User. Please refer to the Currency section of the API Codes document to view the list of allowed currency.>cre_sys_crn_usd
params.form_state.values.register_sms = N> Register for object creation via sms .Possible values are 0 or 1>0
params.userid = Y > Enter the ID of the user making this API call. Accepts only numeric values.>1
response.Id= Updated User Id>1
response.is_verified_add=Is address verification done. Possible value can be either+Yes+or+No+depends+on the address verification.>
response.is_valid_add=Is the given address is valid or invalid. Possible value can be either Valid or Invalid >
response.invalid_add_reason=Reason for invalid Address. >
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = update
testengine.category=update
testengine.apitestsequence = 5
testengine.use_prev_response_field = Id ; it will used to run the update org
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 40 ; number of request which can be accept per minute

;API for List the User
[ListUserAPI]
category = AdminAPI
display_name = List of Users
privilege_parameter = User$$$view
description = The API is used to display the list of users.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_people/exp_sp_administration_user/exp_sp_administration_user.inc
method_name = listUserByRestAPI;the name of the function that is to be executed when this api is called.
params.start = N >  Enter the starting point from which the user records are displayed. Only numerical values are accepted. Default value: 0>0
params.limit = Y > Enter the number of records to be retrieved. Maximum number of records that can be fetched in a single request is  500.>10
params.rows = N > Rows of records need to be retrieved >25
params.textfilter = N> Enter to filter by Username >
params.userstatus = N> Enter to filter by User Status. Please refer to the User status section of the API Codes document to view the list of allowed user statuses.>cre_usr_sts_atv
params.mgrusername = N> Enter manager name to filter by the Name of the Manager>
params.userorg = N> Enter+organization+name+to+filter+by+the+User%27s+organization+name>
params.location = N> Enter+Location+name+to+filter+by+the+User%27s+Location+name>
params.zipcode = N>Enter the zipcode in which the user resides>
params.phone_no = N>Enter the phone number of the user>
params.usertype = N> Enter to filter by the User Type. Please refer to the User type section of the API Codes document to view the list of allowed user types.>cre_usr_ptp_emp
params.empltype = N> Enter+to+filter+by+the+User%27s+Employment+Type.+Please+refer+to+the+Employment+type+section+of+the+API+Codes+document+to+view+the+list+of+allowed+Enrollment+types. >cre_usr_etp_ftm
params.roles = N>Enter the roles of the User. The allowed values are %27instructor%27 and %27manager%27. Multiple values can be entered by adding commas.>instructor,manager
params.userid = Y > Enter the ID of the user making this API call. >1
response.id= Displays the User ID>1
response.username= Displays the Username>Admin
response.firstname= Displays the User%27s First name>Expertus
response.lastname= Displays the User%27s Last name>Administer
response.email= User Displays the User%27s email ID>admin@expertus.com
response.mobile_no=Displays the User%27s Mobile number>
response.orgname= Displays the User%27s Organization name>Expertus Infotech
response.status_code= Displays the User%27s Status Code. Please refer to the user status section of the API Codes document to view the list of displayed user statuses>cre_usr_sts_atv
response.addr1= Displays the User%27s Address>no.27
response.addr2= Displays the User%27s Address>Street
response.city= User City Name>Chennai
;response.statename= User State Name>Tamil Nadu
response.statecode= Displays the User%27s State Code>25
;response.country_name= User Country Name>India
response.countrycode= Displays the User%27s Country Code>IN
;response.type= User Type>Employee
response.empltype= User Employmet Type>
response.manager_id= Displays the ID of the User%27s Manager >3
response.othermanagerid=Displays the ID of other Manager for the User >3
response.otherorganisationid=Displays the ID of other Organizations for the User >
response.timezonecode= Displays the Timezone the User. Please refer to the the Timezone section of the API Codes document to view the list of timezones to be displayed.>
response.preferredlanguagecode= Displays the Code of the User%27s Preferred Language. Please refer to the language section of the API codes document to view the list of languages displayed.eng>
response.currency_code= Displays the Code of the User%27s preferred currency. Please refer to the currency section of the API codes document to view the list of currencies displayed.cre_sys_crn_usd>
response.currency_symbol=Displays the symbol of the User%27s preferred currency>%24
response.currency= Displays the currency type of the User.>USD
response.usertype= Displays the User type. Please refer to the user type section of the API Codes document to view the list of User types displayed.>
response.employeeno= Displays the User%27s Employee Number>
response.jobrole= Displays the User%27s Job Role>
response.jobtitle= Displays the User%27s Job Title>
response.deptcode= Displays the User%27s Department Code>
response.groups = Displays the Groups names under which the Users exist. >
response.hire_date=Displays the User%27s Hire Date. >
response.register_sms = Group Names with comma separated >
response.is_verified_add=Is address verification done. Possible value can be either+Yes+or+No+depends+on the address verification.>
response.is_valid_add=Is the given address is valid or invalid. Possible value can be either Valid or Invalid >
response.invalid_add_reason=Reason for invalid Address. >
response.zipcode = Displays the zipcode in which the user resides>
response.phone_no = Displays the phone number of the user>
response.roles = Displays the roles of the user>
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 6
testengine.verify_response_field = Id
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for Create Course
[CreateCourseAPI]
category = AdminAPI
display_name = Create Course
privilege_parameter = Course/Class$$$create
description = The API is used to create a course.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_learning/exp_sp_administration_catalog/exp_sp_administration_catalog_course.inc
method_name = addNewCourseByRestAPI;the name of the function that is to be executed when this api is called.
params.form_state.values.crs_title = Y> Enter the title of the course>REST_API_Course_Title_VERSION
params.form_state.values.crs_code = Y> Enter the course code>REST_API_Course_Code_VERSION
params.form_state.values.crs_short_description.value = Y> Enter the description of the course>Sample Description
params.form_state.values.crs_status = Y> Enter the status code of the course. Please refer to the Course Status section of the API Codes document to view the list of allowed course status codes.>lrn_crs_sts_itv
params.form_state.values.crs_language = Y> Enter the language code. Please refer to the languages section of the API Codes document to view the list of allowed language codes.>cre_sys_lng_eng
params.form_state.values.currency_type = N>Enter+currency+code+to+be+used +%28e.g.+cre_sys_crn_usd%29.+Possible values can be seen in currency type section of %3Ca+href%3D%22%2Fapis%2Fdocs%2Flookupvalues.php%23cre_sys_crn%22%3EAPI+codes+page%3C%2Fa%3E.>cre_sys_crn_usd
params.form_state.values.price = N> Enter the cost of the Course>0
params.form_state.values.crs_author_vendor = N> Enter the name of the Author/Vendor of the course>
params.form_state.values.course_compliance = N> Enter+the+course+is+compliance+or+not.+The+allowed+values+are+%220%22+for+non+compliance+or+%221%22+for+compliance.>0
params.form_state.values.completed_days = N> Enter  the completion by days if the Course is compliance. Possible values either completed_days or completed_dates are needed>
params.form_state.values.completed_hire_days = N> Enter  hire days>
params.form_state.values.completed_date = N> Enter the completion by date if the Course is compliance. Possible values either completed_days or completed_dates are needed. Format mm-dd-yyyy>
params.form_state.values.validity_days = N> Enter+the+validity+by+days+if+the+Course+is+compliance.+Possible+values+either+validity_days+or+validity_date%27s+are+needed>
params.form_state.values.validity_date = N> Enter+the+validity+by+date+if+the+Course+is+compliance.+Possible+values+either+validity_days+or+validity_date%27s+are+needed>
params.userid=Y > Enter the ID of the user making this API call. >1
response.id= Displays the created Course ID.>1
response.message= Displays the State of Course.>1
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = add
testengine.category=add
testengine.apitestsequence = 7
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 40 ; number of request which can be accept per minute
htmltags = 1 ; The API contains description text with value as fieldname. Possible values 0 or 1>0

;API for Update Course
[UpdateCourseAPI]
category = AdminAPI
display_name = Update Course
privilege_parameter = Course/Class$$$update
entity_type_parameter = Course$$$crs_id
description = The API is used to update a course.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_learning/exp_sp_administration_catalog/exp_sp_administration_catalog_course.inc
method_name = updateCourseByRestAPI;the name of the function that is to be executed when this api is called.
params.form_state.values.crs_id= Y> Enter the ID of the Course to be updated>
params.form_state.values.crs_title = Y> Enter the title of the Course to be updated>REST_API_Course_Title_VERSION
params.form_state.values.crs_code = Y> Enter the code of the Course to be updated>REST_API_Course_Code_VERSION
params.form_state.values.crs_short_description.value = Y> Enter the description of the Course to be updated>Sample Description
params.form_state.values.crs_status = Y> Enter the status code of the Course to be updated. Please refer to the course status section of the API codes document to view the list of allowed course status codes.>lrn_crs_sts_atv
params.form_state.values.currency_type = N>Enter+currency+code+to+be+used +%28e.g.+cre_sys_crn_usd%29.+Possible values can be seen in currency type section of %3Ca+href%3D%22%2Fapis%2Fdocs%2Flookupvalues.php%23cre_sys_crn%22%3EAPI+codes+page%3C%2Fa%3E.>cre_sys_crn_usd
params.form_state.values.price = N> Enter the cost of the Course>0
params.form_state.values.crs_language = Y> Enter the language code for the course. Please refer to the languages section of the API codes document to view the list of allowed language codes.>cre_sys_lng_eng
params.form_state.values.crs_author_vendor = N> Enter the Author/Vendor associated with the Course>
params.form_state.values.course_compliance = N> Set+to+make+the+Course+a+%27Compliance+Course%27.+The+allowed+values+are+%271%27+to+mark+the+course+as+compliance+and+%270%27+to+mark+the+course+as+non-compliance.+By+default+%270%27+is+set.>0
params.form_state.values.completed_days = N> Enter+the+count+of+the+days+%28After+registration%29+before+which+the+course+must+be+completed.+Note+%3A+Enter+value+only+if+it+is+compliance+course.>
params.form_state.values.completed_hire_days = N> Enter  hire days>
params.form_state.values.completed_date = N> Enter+the+date+before+which+the+course+must+be+completed.+The+date+should+be+entered+in+MM-DD-YYYY+format.+Note+%3A+The+User+can+enter+input+for+only+one+among+%27completed_days%27+or+%27completed_date%27>
params.form_state.values.validity_days = N> Enter the count of the day till which the course is valid. Note: Enter value only if it is compliance course.>
params.form_state.values.validity_date = N> Enter the date till which the course is valid in MM-DD-YYYY format. Note : Enter value only if it is compliance course>
params.userid=Y > Enter the ID of the user making this API call. >1
response.id= Displays the ID of the Updated Course.>1
response.message= Displays the State of Course.>1
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = update
testengine.category=update
testengine.apitestsequence = 8
testengine.use_prev_response_field = Id ; it will used to run the update org
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 40 ; number of request which can be accept per minute
htmltags = 1 ; The API contains description text with value as fieldname. Possible values 0 or 1>0

;API for List Courses
[ListCoursesAPI]
category = AdminAPI
display_name = List of Courses
privilege_parameter = Course/Class$$$view
description = The API is used to get the list of courses.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_learning/exp_sp_administration_catalog/exp_sp_administration_catalog.inc
method_name = listCatalogByRestAPI;the name of the function that is to be executed when this api is called.
params.start = N > Enter+the+starting+point+from+which+the+Training+Plan+records+are+displayed.+Only+numerical+values+are+accepted.+Default+value%3A+0 >0
params.limit = N >  Enter+only+numerical+values.+This+parameter+sets+the+number+of+records+retrieved+based+on+the+entered+value.+Default+value%3A+10%0ANote%3A+If+optional+parameters+are+blank%2C+then+%27start%27+and+%27limit%27+parameters+become+Mandatory >10
params.rows = N > Enter the number of records that need to displayed >25
params.catalogtype = Y > Enter+the+type+of+the+catalog+list.+Possible+value+%3A++%27Course%27 >Course
params.textfilter = N >Enter the Course name filter>
params.catalogcoursestatus = N > Enter+the+catalog+search+status.+Possible+values+for+this+field+are+%22lrn_crs_sts_atv%22+for+active+and+%22lrn_crs_sts_itv%22+for+inactive.
params.tagname = N > Enter the Tag associated with the Course. Enter only 1 Tag per request. >
params.userid = Y > Enter the ID of the user making this API call. >1
response.id= Displays the ID of the Course.>1
response.title= Displays the title of the Course>Web-based training course
response.code= Displays the code of the Course>Crs001
response.short_desc= Displays the short description of the Course>Sample Description
response.status= Displays the status of the course. Please refer to the course status section of the API Codes document to view the list of displayed course statuses.>Active
response.price= Displays the Price of the course.
response.currency_type= Displays the currency type of the course price. Please refer to the currency section of the API codes document to view the list of allowed currency codes.>cre_sys_crn_usd
response.lang= Displays the language of the course. Please refer to the languages section of the API Codes document to view the list of languages displayed.>English
response.promote=  NULL.>
response.tagname= Displays tags attached to the Course
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category = list
testengine.apitestsequence = 9
testengine.verify_response_field = Id
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for Get Courses Details
[CoursesDetailsAPI]
category = AdminAPI
display_name = Get Class details
privilege_parameter = Course/Class$$$view
description = This API is used to get the details of list classes that is available under the courses.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_learning/exp_sp_administration_catalog/exp_sp_administration_catalog_class.inc
method_name = getAdministrationCourseDetailsApi;the name of the function that is to be executed when this api is called.
params.CourseId = Y >  Enter the ID of the course to which the Class is associated with.>1
params.userid = Y > Enter the ID of the user making this API call. >1
response.cls_id= Displays the Class ID under the Course.>1
response.cls_title= Displays the title of the Class>>Web-based training class
response.cls_code= Displays the code of the Class>Cls001
response.cls_additional_info= Enter additional information for the Class>Cls001
response.cls_shown_in_catalog= Enter the value '0' or '1'.If the value is '0', then the additional information will not be displayed in the Learner catalog.If the value is '1', then the additional information will be displayed.>Cls001
response.cls_shown_in_notification= Enter the value '0' or '1'. If the value is '0', the additional information will not display in the notifications when added. If the value is '1', the additional information will display in the notifications when added.>Cls001
response.cls_delivery_type= Class Delivery Type>Web-based
response.cls_status= Class Status>Shown in Catalog
response.cls_language= Class Language>English
response.tagname= Displays tags attached to the Course
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category = list
testengine.apitestsequence = 10
testengine.verify_response_field = Id
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for Create Class
[CreateClassAPI]
category = AdminAPI
display_name = Create Class
privilege_parameter = Course/Class$$$create
entity_type_parameter = Course$$$course_id
description = This API is used to create a class.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_learning/exp_sp_administration_catalog/exp_sp_administration_catalog_class.inc
method_name = addNewClassByRestAPI;the name of the function that is to be executed when this api is called.
params.form_state.values.course_id = Y> Enter the ID of the Course>
params.form_state.values.title = Y> Enter the title of the Course>REST_API_Class_Title_VERSION
params.form_state.values.code = Y> Enter the code of the Class>REST_API_Class_Code_VERSION
params.form_state.values.short_description.value = Y> Enter the description of the class>Sample Description
params.form_state.values.additional_info = N> Enter additional information for the Class >
params.form_state.values.addn_catalog_show = N> Enter the value '0' or '1'.If the value is '0', then the additional information will not be displayed in the Learner catalog.If the value is '1', then the additional information will be displayed.>
params.form_state.values.addn_notification_show = N> Enter the value '0' or '1'. If the value is '0', the additional information will not display in the notifications when added. If the value is '1', the additional information will display in the notifications when added.>
params.form_state.values.status = Y> Enter the status of the class. Please refer to the class status section of the API Codes document to view the list of allowed class statuses.>lrn_cls_sts_itv
params.form_state.values.lang_code = Y> Enter the language code for the course. Please refer to the languages section of the API Codes document to view the list of allowed language codes.>cre_sys_lng_eng
params.form_state.values.delivery_type = Y> Enter the delivery type code of the Class. Please refer to the delivery type section of the API Codes document to view the list of allowed delivery type codes.>lrn_cls_dty_wbt
params.form_state.values.currency_type = N>Enter+currency+code+to+be+used +%28e.g.+cre_sys_crn_usd%29.+Possible values can be seen in currency type section of %3Ca+href%3D%22%2Fapis%2Fdocs%2Flookupvalues.php%23cre_sys_crn%22%3EAPI+codes+page%3C%2Fa%3E.>cre_sys_crn_usd
params.form_state.values.price = N> Enter the cost of the Class>0
params.form_state.values.author_vendor = N>Enter the name of the Author/Vendor offering the course>
params.form_state.values.min_seats = N> Enter the minimum capacity of enrollment for the Class>
params.form_state.values.max_seats = N> Enter the maximum capacity of seats enrollment for the Class>
params.form_state.values.waitlist_count = N> Enter the number of waitlist seats for enrolling to the class.>
params.form_state.values.class_location = N> Enter+the+location+ID+of+the+class.+%28Only+for+ILT+class%29>
params.form_state.values.reg_end_date = N> Enter the end date for the class registration in YYYY-MM-DD format >
params.userid=Y >Enter only numerical values. Enter the ID of the User making this API call. >1
response.id=  Displays the ID of the created class>1
response.message= Displays the State of Class.>1
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = add
testengine.category=add
testengine.apitestsequence = 11
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 40 ; number of request which can be accept per minute
htmltags = 1 ; The API contains description text with value as fieldname. Possible values 0 or 1>0

;API for Update Class
[UpdateClassAPI]
category = AdminAPI
display_name = Update Class
privilege_parameter = Course/Class$$$update
entity_type_parameter = Class$$$id
description = The API is used to update a class.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_learning/exp_sp_administration_catalog/exp_sp_administration_catalog_class.inc
method_name = updateClassByRestAPI;the name of the function that is to be executed when this api is called.
params.form_state.values.id = Y> Enter the ID of the Class to be updated >
params.form_state.values.course_id = Y> Enter the ID of the Course associated with the class >
params.form_state.values.title = Y> Enter the Title of the Class to be updated >REST_API_Class_Title_VERSION
params.form_state.values.code = Y> Enter the Code of the Class to be updated >REST_API_Class_Code_VERSION
params.form_state.values.short_description.value = Y> Enter the Description of the Class to be updated >Sample Description
params.form_state.values.additional_info = N> Enter additional information for the Class>
params.form_state.values.addn_catalog_show = N> Enter the value '0' or '1'.If the value is '0', then the additional information will not be displayed in the Learner catalog.If the value is '1', then the additional information will be displayed.>
params.form_state.values.addn_notification_show = N> Enter the value '0' or '1'. If the value is '0', the additional information will not display in the notifications when added. If the value is '1', the additional information will display in the notifications when added.>
params.form_state.values.status = Y> Enter the Status code of the Class to be updated. Please refer to the class status section of the API Codes document to view the list of allowed class status codes.>lrn_cls_sts_atv
params.form_state.values.lang_code = Y> Enter the language code. Please refer to the language section of the API Codes document to view the list of allowed language codes.>cre_sys_lng_eng
params.form_state.values.delivery_type = Y> Enter the delivery type code of the Class. Please refer to the delivery type section of the API Codes document to view the list of allowed delivery type codes.>lrn_cls_dty_wbt
params.form_state.values.currency_type = N>Enter+currency+code+to+be+used +%28e.g.+cre_sys_crn_usd%29.+Possible values can be seen in currency type section of %3Ca+href%3D%22%2Fapis%2Fdocs%2Flookupvalues.php%23cre_sys_crn%22%3EAPI+codes+page%3C%2Fa%3E.>cre_sys_crn_usd
params.form_state.values.price = N>Enter the Price associated with Class in decimal value.>0
params.form_state.values.author_vendor = N> Enter the name of the Author/Vendor associated with the class.>
params.form_state.values.min_seats = N> Enter+the+minimum+number+of+seats+for+the+Class%28Only+for+ILT+%2F+VC%29.>
params.form_state.values.max_seats = N> Enter+the+maximum+number+of+seats+for+the+Class%28Only+for+ILT+%2F+VC%29.>
params.form_state.values.waitlist_count = N> Enter+the+number+of+Waitlisted+seats+for+the+Class%28Only+for+ILT+%2F+VC%29.>
params.form_state.values.class_location = N> Enter+the+ID+of+the+Class+Location.+Note+%3A+Mandatory+in+case+of+%27ILT%27+%2F+%27VC%27+Class+Type.>
params.form_state.values.reg_end_date = N> Enter the End Date for Class registration in YYYY-MM-DD format. >
params.userid=Y > Enter the ID of the user making this API call. >1
response.id= Displays the ID of the Updated Class.>1
response.message= Displays the State of Class.>1
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = update
testengine.category=update
testengine.apitestsequence = 12
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 40 ; number of request which can be accept per minute
htmltags = 1 ; The API contains description text with value as fieldname. Possible values 0 or 1>0

;API for List Classes
[ListClassesAPI]
category = AdminAPI
display_name = List of Classes
privilege_parameter = Course/Class$$$view
description = The API is used to get the list of classes.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_learning/exp_sp_administration_catalog/exp_sp_administration_catalog.inc
method_name = listCatalogByRestAPI;the name of the function that is to be executed when this api is called.
params.start = N >  Enter+the+starting+point+from+which+the+Training+Plan+records+are+displayed.+Only+numerical+values+are+accepted.+Default+value%3A+0>0
params.limit = N > Enter+only+numerical+values.+This+parameter+sets+the+number+of+records+retrieved+based+on+the+entered+value.+Default+value%3A+10%0ANote%3A+If+optional+parameters+are+blank%2C+then+%27start%27+and+%27limit%27+parameters+become+Mandatory >10
params.rows = N >  Enter the number of records that need to be retrieved >25
params.catalogtype = Y >Enter the type of the catalog to list class.Possible value is Class. >Class
params.textfilter = N >Enter to filter by Class Name>
params.catalogclassstatus = N > Enter to filter by Class Status. Please refer to the Class status section of the API Codes document to view the list of displayed class statuses.>lrn_cls_sts_atv
params.deliverytype = N > Enter to filter by the Class Delivery type. Please refer to the class delivery section of the API Codes document to view the list of allowed class delivery types.>lrn_cls_dty_wbt
params.classlangtype = N >  To filter by the Class Language. Please refer to the Languages section of the API Codes document to view the list of allowed languages.>cre_sys_lng_eng
params.classLocation = N > Type location name or address of class location. For using address, enter '~' between address fields. For example: 'Location name~Address 1~Address 2~City~Pin code~State~Country'. >
params.tagname = N > Enter the Tag associated with the Class. Enter only 1 Tag per request. >
params.userid = Y > Enter the ID of the user making this API call. >1
response.class_id= Displays ID of the Class>1
response.id= Displays the Course ID>1
response.title=  Displays the Class Title>Web-based training course
response.code= Displays the Class Code>Crs001
response.delivery_type=  Displays the delivery type of the Class. Please refer to the class delivery section of the API Codes document to view the list of displayed class delivery types. >Web-Based
response.price= Displays the Price associated with the Class>100
response.currency= Displays the currency type of the Class in short form. %28e.g.+USD%29>USD
response.currency_code= Displays the currency code of the Class. Possible values can be seen in currency type section of %3Ca+href%3D%22%2Fapis%2Fdocs%2Flookupvalues.php%23cre_sys_crn%22%3EAPI+codes+page%3C%2Fa%3E.>cre_sys_crn_usd
response.currency_symbol= Displays the currency symbol of the Class.>%24
response.short_desc= Displays the Class Description>Sample Description
response.additional_info= Displays additional information for the Class
response.shown_in_catalog= Displays if additional information are displayed in learner catalog. Possible values are 0 and 1.>Cls001
response.shown_in_notification= Displays if additional information are displayed in notifications provided its keyword is added to them. Possible values are 0 and 1.>Cls001
response.tagname= Displays tags attached to the Class >
response.status=Displays the Class Status name. Please refer to the Class status section of the API Codes document to view the list of displayed class statuses.>Active
response.status_code= Displays the Class Status Code. Please refer to the Class status section of the API Codes document to view the list of displayed class status codes.>lrn_cls_sts_atv
response.location_name= Displays the Name of the Class Location>Chennai
response.lang= Displays the Language name of the Class. Please refer to the Languages section of the API Codes document to view the list of displayed languages.>English
response.promote= Null>
response.duration=  Displays the Class Duration in minutes.>
response.author_vendor= Displays+the+Name+of+the+Author%2FVendor+offering+the+Class%0A%0A>
response.is_compliance= Displays+the+Compliance+Status+of+the+Class.+%28%221%22+if+it+is+a+compliance+class+and+%22null%22+if+it+is+not%29%0A%0A>
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 13
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for Associate Content with WBT/VOD Class
[AssociateContentwithWBTClassAPI]
category = AdminAPI
display_name = Add content to Webbased or Video Class
privilege_parameter = Course/Class$$$create
entity_type_parameter = Content$$$ContentId$~$Class$$$ClassId
description = The API is used to add content to WBT OR VOD class.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_learning/exp_sp_administration_content_details.inc
method_name = addNewContentByApi;the name of the function that is to be executed when this api is called.
params.insobj.CourseId= Y> Enter the ID of the course under which the class was created>
params.insobj.ClassId = Y> Enter the ID of the class to which the content is to be added>
params.insobj.ContentId = Y> Enter ID of the content to be added>
params.insobj.MaxAttempts = N> Enter the Maximum number of times the content can be launched>5
params.insobj.ValidityDays = N> Enter the number of days the content can be launched after registration>30
params.userid = Y > Enter the ID of the user making this API call. >1
response.id= Displays ID of the content associated with the Class>1
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = update
testengine.category=update
testengine.apitestsequence = 14
testengine.capture_response_field = Id ; it will used to remove attached content
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for Remove Associated Content with WBT/VOD Class
[RemoveAssociatedContentwithWBTClassAPI]
category = AdminAPI
display_name = Delete content attached to Webbased or Video Class
privilege_parameter = Course/Class$$$update
entity_type_parameter = Class$$$ClassId
description = This API is used to delete content associated with the web based or video based classes.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_learning/exp_sp_administration_content_details.inc
method_name = removeContentByApi;the name of the function that is to be executed when this api is called.
params.insobj.ContentId = Y> Enter the ID of the attached content. >
params.insobj.ClassId = Y> Enter the ID of the class to which the content is attached. >
params.userid = Y > Enter the ID of the user making this API call. > 1
response.status=  Displays the status of the content deletion as 'success' or 'failure'. >Success
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = update
testengine.category=update
testengine.apitestsequence = 15
testengine.capture_response_field = Id ; it will used to list attached content
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for List Associated Content with WBT/VOD Class
[ListAssociatedContentwithWBTClassAPI]
category = AdminAPI
display_name = List of Content attached to Webbased or Video Class
privilege_parameter = Course/Class$$$view
entity_type_parameter = Class$$$ClassId
description = The API is used to list content associated to WBT OR VOD class.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_learning/exp_sp_administration_content_details.inc
method_name = listContentByApi;the name of the function that is to be executed when this api is called.
params.insobj.CourseId= Y> Enter ID of the Course under which the WBT or VOD Class is present>
params.insobj.ClassId = Y> Enter ID of the WBT or VOD Class to which the Content is attached>
params.tagname = N > Enter the Tag associated with the Content. Enter only 1 Tag per request. >
params.userid = Y > Enter the ID of the user making this API call. > 1
response.id= Displays ID of the mapping id for the Content>
response.content_id= Displays ID of the Content.>
response.lession_id= Displays Lesson ID of the Content attached>
response.code= Displays Code of the Content attached to the Class>
response.type_name= Displays+the+Content+Type.+%28%22AICC%22%2C+%22Knowledge+Content%22%2C+%22SCORM+1.2%22%2C+%22SCORM+2004%22%2C+%22Video+on+Demand%22%2C+%22Tin+Can%22%29.%0A>
response.tagname= Displays tags attached to the Content
response.mastery_score= Displays the minimum score to complete the Content.Only for SCORM and TinCan content.>
response.max_attempts= Displays the maximum number of attempts allowed to launch this content.>
response.validity_days= Displays the number of days the Content is valid after the class registration.>
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 16
testengine.capture_response_field = Id ; it will used to remove attached content
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for Pre-Requisites
[PreRequisitesAPI]
category = AdminAPI
display_name = Add pre-requisite to Course or Training Plan
privilege_parameter = Course/Class$$$create
entity_type_parameter = Course$$$EntityId$~$Course$$$PrequisitesId
description = The API is used to add pre-requisites for the course or Training Plan.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_learning/exp_sp_administration_prerequisite.inc
method_name = addPreRequisiteAPI;the name of the function that is to be executed when this api is called.
params.insobj.EntityId= Y>Enter the ID of the course or Training Plan for which the Prerequisite is to be added.>
params.insobj.EnitityType= Y> Enter+type+of+the+entity+for+which+the+Prerequisite+is+to+be+added.+The+allowed+values+are+%22cre_sys_obt_crs%22+for+courses+and+%22cre_sys_obt_trp%22+for+Training+Plans. >
params.insobj.PrequisitesId= Y> Enter the ID of the entity which is to be added as the prerequisite.>
params.insobj.PrequisitesType= Y> Enter+the+entity+type+which+is+to+be+added+as+the+prerequisite.++The+allowed+values+are+%22cre_sys_pre_crs%22+for+courses+and+%22cre_sys_pre_trp%22+for+Training+Plans. >
params.userid = Y > Enter the ID of the user making this API call. >1
response.id= Displays the created prerequisite mapping ID.>1
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = update
testengine.category=update
testengine.apitestsequence = 17
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for Remove Pre-Requisites
[RemovePreRequisitesAPI]
category = AdminAPI
display_name = Delete pre-requisite to Course or Training Plan
privilege_parameter = Training Plan$$$delete
entity_type_parameter = Course$$$id
description = This API is used to delete the pre-requisite added to the course or training plan.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_learning/exp_sp_administration_prerequisite.inc
method_name = removePreRequisiteByApi;the name of the function that is to be executed when this api is called.
params.insobj.id= Y> Enter the prerequisite mapping ID for a course or Training Plan. >
params.userid = Y > Enter the ID of the user making this API call. >1
response.status= Displays+the+prerequisite+status.+%28%22success%22+or+%22failure%22%29 >success
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = update
testengine.category=update
testengine.apitestsequence = 18
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for Course Equivalence
[CourseEquivalenceAPI]
category = AdminAPI
display_name = Add equivalence for Course
privilege_parameter = Course/Class$$$create
entity_type_parameter = Course$$$EntityId$~$Course$$$EquivalenceId
description = This API is used to add an equivalence for the course.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_learning/exp_sp_administration_equivalence.inc
method_name = addEquivalenceByAPI;the name of the function that is to be executed when this api is called.
params.insobj.EntityId= Y> Enter only numeric values. Enter the Course ID for which the equivalence course is to be added.>
params.insobj.EnitityType= Y> Enter+the+Entity+type+of+the+Course+which+is+to+be+added+as+equivalence+course.+The+allowed+value+is+%22cre_sys_obt_crs%22.>cre_sys_obt_crs
params.insobj.EquivalenceId= Y> Enter the Course ID that is to be added as equivalent course.>
params.userid = Y >Enter the ID of the user making this API call. >1
response.id= Displays the created Equivalence ID>1
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = update
testengine.category=update
testengine.apitestsequence = 19
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for Remove Course Equivalence
[RemoveCourseEquivalenceAPI]
category = AdminAPI
display_name = Delete equivalence for Course
privilege_parameter = Course/Class$$$delete
entity_type_parameter = Course$$$id
description = This API is used to delete the equivalent set from the course.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_learning/exp_sp_administration_equivalence.inc
method_name = removeEquivalenceByApi;the name of the function that is to be executed when this api is called.
params.insobj.id= Y> Enter the equivalence mapping ID for the course. >
params.userid = Y > Enter the ID of the user making this API call. >1
response.status= Displays+the+status+of+the+equivalence.+%28%22success%22+or+%22failure%22%29 >success
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = update
testengine.category=update
testengine.apitestsequence = 20
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for Catalog Search
[CatalogSearchAPI]
category = LearnerAPI
display_name = List of Catalog
description = This API is used to display the list of catalog items in catalog.
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_lnrsearch/exp_sp_lnrsearch.inc
method_name = getCatalogSearchWrapperAPI;the name of the function that is to be executed when this api is called.
params.selobj.limit= Y> Enter the number of records need to be retrieved  >1
params.selobj.page= N> This field is used to display records from a specific page, to be used in tandem with "rows" field. For eg - If there are 10 pages with 15 records displayed in each page, then entering "3" in this field will only display the third page containing the records 31 to 45.>1
params.selobj.object_type= Y> Enter the Registration list type of catalog - 'Course' or 'Class'.>
params.selobj.course_id= N> Enter the ID of the Course.>
params.selobj.course_code= N> Enter the code of the course.>
params.selobj.title= N> Enter the title of the course.>
params.selobj.startdate= N> Enter the date from which the classes having sessions should be displayed . Dates should be entered in mm-dd-yyyy format. >
params.selobj.enddate= N> Enter the date till which the classes having sessions  should be displayed. Dates should be entered in MM-DD-YYYY format. >
params.selobj.dl_type= N> Enter the delivery type code of the class. Please refer to the delivery type section of the API Codes document to view the list of allowed delivery type codes. >lrn_cls_dty_ilt
params.selobj.lg_type= N> Enter the Language Type code of the class. Please refer to the Languages section of the API Codes document to view the list of allowed Language codes.>
params.selobj.location= N> Type location name or address of class location. For using address, enter '~' between address fields. For example: 'Location name~Address 1~Address 2~City~Pin code~State~Country' >
params.selobj.region= N> Class Region>
params.selobj.sortby= N>Sort+by+specific+value.+The+allowed+values+are+%22AZ%22+to+sort+by+title+in+ascending+order%2C+%22ZA%22+to+sort+by+title+in+descending+order%2C+%22dateOld%22+to+list+by+date+in+descending+order%2C+%22dateNew%22+to+list+by+date+in+ascending+order%2C+%22type%22+to+sort+by+delivery+type+code+in+ascending+order%2C+%22Mandatory%22+to+list+mandatory+and+compliance+data+first.>AZ
params.selobj.ob_type= N > Enter+the+object+type.+The+allowed+values+for+this+field+are+%22cre_sys_obt_crs%22%2C+%22cre_sys_obt_crt%22%2C+%22cre_sys_obt_cur%22%2C+%22cre_sys_obt_trn%22.+Multiple+values+can+be+entered+by+adding+pipe+separator.>
params.selobj.rating_type= N>Enter the Rating of the Class. Enter numeric values only upto 100.>40
params.selobj.action =N > Enter the action 'autoregister' or 'team'.If the action is autoregister then the registration for mandatory and compliance course will happen.If the Action is team then catalog list of the sub-ordinate users under the logged in user will be displayed. >Team
params.selobj.user_id =N > Enter the ID of the User who is logged in. >1
params.userid =Y > Enter the ID of the user making this API call. >3
params.currency_code =N > Enter the preferred currency code.  %28e.g.+cre_sys_crn_usd%29. Possible values can be seen in currency type section of %3Ca+href%3D%22%2Fapis%2Fdocs%2Flookupvalues.php%23cre_sys_crn%22%3EAPI+codes+page%3C%2Fa%3E.>cre_sys_crn_usd
params.price_filter =N > Enter the start and end price with comma seperated >5,100
;params.currency =N > Enter the preferred currency type. >USD
;params.currency_symbol =N > Enter the preferred currency symbol. >
params.cls_status =N > Displays+the+availability+of+the+Classroom+and+Virtual+classes.+Past+Class+room+or+Virtual+classes+will+be+shown+as+%22Delivered%22+while+future+classes+as+%22Scheduled%22.%0A >Incomplete
params.compliance_mandatory =N > Set+to+fetch+mandatory+and+compliance+courses.+%28%221%22+to+fetch+mandatory+and+compliance+course+enrollments+and+%220%22+to+fetch+all+enrollments+of+the+learner.%29 >1
params.tag =N > Enter+a+Tag+associated+with+any+training+%28Course/Class/Training Plan%29 > 
params.mro_type= N> Enter+whether+the+Class%2FTP+is+Mandatory%2Frecommended%2Foptional.%28%22cre_sys_inv_man%22+for+Mandatory%2C+%22cre_sys_inv_rec%22+for+Recommended%2C+%22cre_sys_inv_opt%22+for+optional%29.>
response.object_type = Displays+the+type+of+Training.+The+allowed+values+are+%22Course%22+for+registration+level+as+Course%2C+%22Class%22+for+registration+level+as+Class%2C+Certification%2C+Curriculum+and+Learning+Plan.>Class
response.crs_id = Displays the ID of the Class or Training plan>1
response.cls_id = Displays the ID of the Course>1
response.cls_code = Displays the class/TP code>Class001
response.cls_title = Displays the title of the class/TP>Class 1
response.cls_short_description = Displays the short description about the Class/TP>Sample Description
response.delivery_type_code = Displays the Delivery type code of the Class. Please refer to the delivery type section of the API Codes document to view the list of displayed delivery types.>lrn_cls_dty_wbt
;response.export_compliance = Null>N
response.delivery_type_name = Displays the delivery type name of the Class. Please refer to the delivery type section of the API Codes document to view the list of displayed delivery type codes.>Web-Based
response.status = Displays the status of the Class.Please refer to the Class status section of the API Codes document to view the list of status for class.>Active
response.language = Displays the language of the Class.>Class
response.language_code = Displays the language code of the class.Please refer to the languages section of the API Codes document to view the list of displayed language codes.>cre_sys_lng_eng
response.location = Displays the name of the location associated with the Class if the class is Classroom or virtual class room.>Class
response.node_id = Displays the node ID of the class or training plan.>1
response.base_price = Displays the cost of the Class in base price.>10.00
response.base_currency_type = Displays the code of base currency in short form.>USD
response.base_currency_symbol = Displays the symbol of base currency.>%24
response.currency_type= Displays the code of converted currency in short form.>USD
response.currency_symbol= Displays the symbol of converted currency.>%24
response.price= Displays the cost of the Class in converted currency.>100.00
response.avgvote = Display the Average percentage of vote for the class/TP.>10
response.country_name = Null>India
response.country_code = Null>IN
response.prm_end_date = Displays the program end date in YYYY-MM-DD format.>
response.tagname= Displays tags attached to the Course
response.mro_id = Displays+whether+the+Class%2FTP+is+Mandatory%2Frecommended%2Foptional.%28%22cre_sys_inv_man%22+for+Mandatory%2C+%22cre_sys_inv_rec%22+for+Recommended%2C+%22cre_sys_inv_opt%22+for+optional%29.>
response.mro= Displays the Class/TP is Mandatory/recommended/optional.>
response.registration_end_on= Displays the registration end+on+date for class in YYYY-MM-DD format.>MM-DD-YYYY
response.registration_ended=Displayed+the+Registration+end+date+is+completed+or+not.+%28%22True%22+or+%22False%22%29.>true
response.sessioninfo= Displays the detailed information about the class sessions>Array format
response.prerequisites = Displays the list of prerequisite courses completed before enrolling to this Class/TP.>Array format
response.enrolled_id= Displays the enrollment ID of the User who is enrolled to the class.>If already enrolled it will be array otherwise it will empty
response.waitlist_status= Displays the waitlist position if the user registration is waitlisted to that class.>0
response.rating=Average Rating for the Class/TP>
response.available_seats= Display the number of  available seats for the particular class if the class is ILT or VC.>10
response.waitlist_seats= Displays+the+number+of+available+waiting+list+seats+for+the+particular+class%28ILT+%2F+VC%29.>5
response.class_status= Displays the status of the class/TP.>tp_courses
response.tp_courses= Displays the course details under the training plan.>
response.class_list= Displays the class list details if the catalog list level is Course.>
response.is_compliance= Displays whether the Course is compliance or not.>1
response.cls_count= Displays the number of classes under the Course if the catalog list is Course level.>1
response.is_cart_added= Displays+if+the+class%2FTP+can+be+added+to+cart+or+not.+%28%221%22+if+the+class+can+be+added+to+cart+or+%220%22+if+the+class+is+non+priced%29.>
response.launchdetails= Displays the Launch details of the Class.>
response.launchdetails.Id=Display the Lesson ID of the Class.>
response.launchdetails.ContentId=Displays the ID of the Content associated to the Class.
response.launchdetails.VersionId=Displays the Version ID of the Content associated to the Class.
response.launchdetails.ValidTo=Displays the date till which the enrollments are valid in YYYY-MM-DD format.
response.launchdetails.Code=Displays the code of the associated content.
response.launchdetails.Title=Displays the title of the associated content.
response.launchdetails.server_date_time=Displays the current date and time in the format. For example - Aug 15, 2015 09:00
response.launchdetails.Status=Displays the status of the enrollment. Please refer to the Enrollment status section of the API Codes document to view the list of displayed enrollment statuses.
response.launchdetails.Lessoncnt=Displays the number of lessons in the content.
response.launchdetails.LesScore=Displays the score for the lesson.
response.launchdetails.ClsScore=Displays the score for the class.
response.launchdetails.ContScore=Displays the score for the Content.
response.launchdetails.ValidityDays=Displays the number of days till which the content is valid to launch.
response.launchdetails.regDate=Displays the registration date in the format, YYYY-MM-DD
response.launchdetails.contentQuizStatus=Display the status of the quiz attached to the content.
response.launchdetails.ContentCompletionStatus=Displays the completion status of the content.
response.launchdetails.remDays=Displays the remaining days to use the content after the registration.
response.launchdetails.LaunchType=Displays the launched class delivery type. Possible value is WBT or VOD
response.launchdetails.ContentType=Displays the type of the content launched.  Please refer to the Content section of the API codes document to view the list of Contents.
response.launchdetails.ContentSubTypeCode=Displays the hosted type of the Content.
response.launchdetails.LearnerLaunchURL=Displays the Content URL with path to launch the content.
response.launchdetails.PresenterLaunchURL=Displays+the+Instructor%27s+URL+for+the+Meeting.+%28Only+for+ILT+%2F+VC%29
response.launchdetails.MaxAttempt=Displays the maximum number of times a content can be launched by a Learner..
response.launchdetails.AttemptLeft=Displays the number of attempts left for launching the content.
response.launchdetails.contValidateMsg=Displays the number of attempts left for launching the content.
response.launchdetails.IsLaunchable=Displays+the+content+is+valid+to+launch+or+not.+Possible+value+is+%27true%27+for+content+is+valid+to+launch+and+%27false%27+for+the+content+is+not+valid.
response.launchdetails.Handler=Displays+the+content+handler+function+type+%27Scorm1.2%27.
response.launchdetails.LessonLocation=Displays the last lesson location for the content.
response.launchdetails.LaunchData=Displays the encrypted data after launched the URL.
response.launchdetails.SuspendData=Displays the data for the AICC content.
response.launchdetails.CmiExit=NULL
response.launchdetails.ContentStatus=Displays the status of the enrollment. Please refer to the Enrollment status section of the API Codes document to view the list of displayed enrollment statuses.
response.launchdetails.masteryscore=Displays the mastery score for the content.
response.launchdetails.AICC_SID=Displays+the+AICC+student+ID+%28only+for+AICC+content%29.
response.AssessmentStatus= Displays+if+the+Assessment+associated+with+the+Class+is+Pre-assessment+or+Post-assessment.+%28%220%22+if+the+assessment+is+post+assessment%2C+%221%22+if+the+Assessment+is+pre-assessment.%29>
response.available_seats= available seats>
response.waived_status = Return 1 if waived and return 0 if enrolled
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 21
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 50 ; number of request which can be accept per minute

;API for Registration
[RegistrationAPI]
category = LearnerAPI
display_name = User Enrollments
description = This API is used to enroll an User to Training objects listed in the Catalog
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning.inc
method_name = classRegisterAPI;the name of the function that is to be executed when this api is called.
params.Learnerid = Y>Accepts only numerical values. Enter the ID of the Learner.>
params.Courseid = Y>Accepts only numerical values. Enter the ID of the specified Course>
params.Classid = Y>Accepts only numerical values.  Enter the ID of the specified Class>
params.userid = Y>Accepts only numerical values. This contains the ID of the User making this API call.>1
response.id=Displays the enrollment Id of the user>1
response.status=Displays the Enrollment status of the User. Please refer to the Class section of the API codes document to view the list of Enrollment statuses displayed for a Class.>Reserved
response.launchdetails.result.ID=Display the Lesson Id of the Class.>37
response.launchdetails.result.ContentId=Displays the Id of the Content associated to the Class.>33
response.launchdetails.result.VersionId=Displays the Version id of the Content associated to the Class.>35
response.launchdetails.result.ValidTo=Displays the enrollments is valid upto date.>
response.launchdetails.result.Code=Displays the code of the associated content.>www.google.com
response.launchdetails.result.Title=Displays the title of the associated content.>www.google.com
response.launchdetails.result.server_date_time=Displays the current date and time in the format %27M d, Y H:i%27>Aug 23, 2015 23:58
response.launchdetails.result.Status=Displays the status of the enrollment.>
response.launchdetails.result.Lessoncnt=Displays the count of the lesson in the content.>1
response.launchdetails.result.LesScore=Displays the score for the lesson.>
response.launchdetails.result.ClsScore=Displays the score for the class.>
response.launchdetails.result.ContScore=Displays the score for the Content.>
response.launchdetails.result.ValidityDays=Displays the number of days the content is valid to launch after the enrollment.>
response.launchdetails.result.regDate=Displays the registration date in the format, YYYY-MM-DD>2015-08-23
response.launchdetails.result.contentQuizStatus=Displays the status of the quiz attached to the content.>
response.launchdetails.result.ContentCompletionStatus=Displays the completion status of the content.>
response.launchdetails.result.remDays=Displays the remaining days to use the content after the registration.>0
response.launchdetails.result.LaunchType=Displays the launched class delivery type. Possible value is WBT or VOD>WBT
response.launchdetails.result.ContentType=Displays the type of the content launched.  Please refer to the Content section of the API codes document to view the list of Contents.>Knowledge Content
response.launchdetails.result.LearnerLaunchURL=Displays the Content url with path to launch the content.>http://www.google.com
response.launchdetails.result.PresenterLaunchURL=Displays the url for presenter for the Meeting.It is only for ILT+%2F+VC class.>http://www.google.com
response.launchdetails.result.MaxAttempt=Displays the number of maximum attempt  the learner can launch the content.>
response.launchdetails.result.AttemptLeft=Displays the number of attempts left to be launched by the learner.>1
response.launchdetails.result.IsLaunchable=Displays the content is valid to launch or not.Possible value is %27true%27 for content is valid to launch and %27false%27 for the content is not valid.>1
response.launchdetails.result.LessonLocation=Displays the last lession location for the content.>
response.launchdetails.result.ContentStatus=Displays the status of the enrollment.>
response.launchdetails.result.masteryscore=Displaysthe mastery score for the content.>0
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = update
testengine.category=update
testengine.apitestsequence = 22
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 40 ; number of request which can be accept per minute

;API for List Enrollments
[ListEnrollmentsAPI]
category = LearnerAPI
display_name = List of an User%27s Enrollments
description = This API is used to display the list of an User%27s Enrollments
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_lnrenrollment/exp_sp_lnrenrollment.inc
method_name = getListEnrollmentApiResultSet;the name of the function that is to be executed when this api is called.
params.UserID = Y>Enter the ID of the User whose enrollments are to be displayed.>1
params.ClassTitle = N>Enter the title of the Class>
params.regstatuschk = Y>This field is used to check the status of an enrolled user.Multiple values can be entered by adding pipe separator. Please refer to the Course section of the API Codes document to view the list of allowed Enrollment statuses.>lrn_crs_cmp_enr
params.delivery_type_code = N>Enter the Delivery type code of the Class. Please refer to the Class section of the API codes document for the allowed delivery types for Classes.>lrn_cls_dty_wbt
params.date_from = N >Enter the date from which the Enrollments should be displayed. Dates should be entered in yyyy-mm-dd format.>2015-07-01
params.date_to = N >Enter the date till which the Enrollments should be displayed. Dates should be entered in yyyy-mm-dd format.>2015-07-25
params.page = N>This field is used to display records from a specific page, to be used in tandem with %22rows%22 field. For eg - If there are 10 pages with 15 records displayed in each page, then entering %223%22 in this field will only display the third page containing the records 31 to 45.>1
params.rows = Y>Enter the number of rows to be displayed. Accepts only numerical values.>10
params.sortBy = N>Sort by specific value. Possible values are %27AZ%27 for title to sort in ascending order, %27ZA%27 to sort title in descending order, %27dateOld%27 to list from old data, %27dateNew%27 to list data from recent data, %27type%27 to sort by delivery type code in ascending order, Mandatory to list mandatory and compliance data first.>AZ
;params.sord = N>Order by asc, desc >asc ;Issue ID: 51553
;params.limit= Y > limit >1  ;Issue ID: 51552
;params.totalrows = N > totalrows >10
params.userid = Y >Accepts only numerical values. This contains the ID of the User making this API call.>1
params.compliance_mandatory = N >This field is used to fetch mandatory and compliance courses. Possible values for this field are 1 to fetch mandatory and compliance course enrollments and 0 to get all the enrollments of learner.>1
response.id =Displays the enrollment ID of the user>1
response.master_enrollment_id =Displays the Master Enrollment ID of the User>1
response.user_id=Shows the ID of the User who has registered to the Class>1
response.user_name=Displays the Username of the user who has registered for the class>admin
response.class_id=Displays the ID of the Class>1
response.course_id=Displays the ID of the Course>1
response.reg_status=Displays the Enrollment status for a Class. %28Please refer to the Class section of the API Codes document to view the list of Enrollment status displayed for a Class%29>Enrolled
response.comp_status=Displays the Completion Status of the training. For Cancelled and Enrolled training+no+values will be displayed.>lrn_crs_cmp_enr
response.valid_from=The date from when the Class is valid>2012-02-14
response.valid_to=The date till the Class is valid>2012-03-14
response.score=Displays the assessment score of the associated Class>80
response.title=Displays the title of the Course>Web designing
response.cls_title=Displays the title of the Class>3D Studio Max
response.code=Displays the code of the Class>3d
response.description=Displays the delivery type of the Class. %28Please refer to the Class section of the API Codes page to view the delivery type of the Class.%29>Test desc
response.delivery_type= Delivery Type. Possible values for this field are lrn_cls_dty_ilt, lrn_cls_dty_wbt, lrn_cls_dty_vcl, lrn_cls_dty_vod for Classroom, Web-based, Virtual Class and Video classes respectively.>Web-based
response.basetype=Displays the abbreviation of the Class type. %28%22ILT%22, %22WBT%22, %22VC%22, %22VOD%22 for Classroom, Web Based Class, Virtual Class and Video Class respectively.>ILT
response.classprice=Displays the price of the Class.>0.00
response.class_progress = Displays the overall progress of the Class. The allowed values are from ‘0’ to ‘100’.
response.currency=Displays the prefered currency of the user in short form. e.g. USD>USD
response.currency_code=Displays the code of the user prefered currency. %28e.g.+cre_sys_crn_usd%29. Possible values can be seen in currency type section of %3Ca+href%3D%22%2Fapis%2Fdocs%2Flookupvalues.php%23cre_sys_crn%22%3EAPI+codes+page%3C%2Fa%3E.>cre_sys_crn_usd
response.currency_symbol=Displays the symbol of the user prefered currency.>%24
response.language=Displays the language text of the Class>English
response.rating=Displays the Rating of the Class>75
response.created_by=Displays the Username of the User who created the Class>1
response.created_by_name=Displays the full name of the User who created the Class>Admin
response.updated_by=Displays the Username of the User who updated the Class>1
response.updated_by_name=Displays the full name of the User who updated the Class>Admin
response.update_date=Displays the date+on+which the Class was last updated>2012-03-14
response.launch.result.ID=Displays the ID of the class>37
response.launch.result.ContentId=Displays the ID of the content attached to the class>33
response.launch.result.VersionId=Displays the ID of the version of the content attached to the class>35
response.launch.result.Code=Displays the code of the content>www.google.com
response.launch.result.Title=Displays the title of the content>www.google.com
response.launch.result.server_date_time=Displays the current date and time of the server>Aug 23, 2015 23:58
response.launch.result.Status=Displays the completion status of the enrollment. Please refer to the completion status section of the API codes document to view the list of completion status displayed.>
response.launch.result.Lessoncnt=Displays the number of lessons in the web-based content.>1
response.launch.result.LesScore=Displays the score obtainted for the current lesson. A content can have 1 or more lessons.>
response.launch.result.ClsScore=Displays the score obtained for this enrollment. >
response.launch.result.ContScore=Displays the Score obtained for the current content. This score is the sum of scores obtained for all the lessons in the current content.>
response.launch.result.ValidityDays=Displays the validity of a content from the day of enrollment. Can be a positive integer and empty if the content is valid all the time.>
response.launch.result.regDate=Displays the Date of enrollment>2015-08-23
response.launch.result.contentQuizStatus=Displays the Quiz completion status of the Web-based contents. Applicable for the SCORM, AICC and Tincan content types.>
response.launch.result.ContentCompletionStatus=Displays the Lesson completion status of the Web-based contents. Applicable for the SCORM, AICC and Tincan content types.>
response.launch.result.remDays=Displays the difference in the number of days between the current date and enrollment date. A positive integer or zero if enrollment date is today.>0
response.launch.result.LaunchType=Displays the abbreviation of the class delivery type. %28%22ILT%22, %22WBT%22, %22VC%22, %22VOD%22 for Classroom, Web-based, Virtual Class and Video classes respectively.>WBT
response.launch.result.ContentType=Displays the type of Web based content. The allowed values are %22SCORM 2004%22, %22SCORM 1.2%22, %22Tin Can%22, %22AICC%22, %22Video+on+Demand%22 and %22Knowledge Content%22.>Knowledge Content
response.launch.result.LearnerLaunchURL=Displays the launch URL for Learners. %28Only for Web-based or video content%29>http://www.google.com
response.launch.result.PresenterLaunchURL=Displays the Instructor URL of the VC class session. >
response.launch.result.MaxAttempt=Displays the maximum number of attempts a web based or video content can be launched. A positive integer or zero.>
response.launch.result.AttemptLeft=Displays the number of attempts left for a web based or video content to be launched. A positive integer or zero.>1
response.launch.result.IsLaunchable=Displays if the content cannot be launched if all the attempts have been consumed or if the validity of the content has expired. %28%221%22 if the content can be launched and %220%22 if the content cannnot be launched%29. Applicable only for Web-based and Video contents.>1
response.launch.result.LessonLocation=Displays the last viewed lesson of a web based content.>
response.launch.result.progress=Displays the progress of the content. The allowed values are from ‘0’ to ‘100’.>
response.launch.result.ContentStatus=Displays the consolidated completion statuses of all the lessons in a web based content. Please refer to the completion status section of the API codes document to view the list of displayed completion statuses.>
response.launch.result.masteryscore=Displays the mastery score set for a Web based content of type SCORM 2004, SCORM 1.2, Tin Can and AICC.>0
response.launch.result.VersionNum=Displays the Version number of the content.>
response.sessiondetails.result.session_id=Displays the ID of the class session. %28Only for ILT+%2F+VC classes%29>119
response.sessiondetails.result.session_instructor_id=Displays the ID of the instructor who conducts the class session>13
response.sessiondetails.result.courseid=Displays the ID of the course>399
response.sessiondetails.result.classid=Displays the ID of the class>472
response.sessiondetails.result.session_start=Displays the date of the class session in YYYY-MM-DD HH:MM:SS format. The time component will always be zero.%28Only for ILT+%2F+VC classes%29>2015-09-15 00:00:00
response.sessiondetails.result.session_start_day=Displays the start day of the class session. Allowed values are %22Mon%22, %22Tue%22, %22Wed%22, %22Thu%22, %22Fri%22, %22Sat%22, %22Sun%22.>Tue
response.sessiondetails.result.session_start_time=Displays the start time of the class session in 24 hour format. For example - 18:45>11:30
response.sessiondetails.result.session_title=Displays the title of the session>A sample session
response.sessiondetails.result.session_start_format=Displays the start date and time of the class session. For example - Aug 31, 2015 09:45 %28Time is in 12 hour format%29>Sep 15, 2015 11:30
response.sessiondetails.result.session_start_date_format=Displays the start date of the class session. For example - Aug 31, 2015>Sep 15, 2015
response.sessiondetails.result.session_end_date_format=Displays the end date of the class session. For example - Aug 31, 2015>Sep 15, 2015
response.sessiondetails.result.session_start_time_format=Displays the start time of the class session in 12 hour format. For example - 09:45>11:30
response.sessiondetails.result.session_start_time_form=Displays the meridiem of the class session start time. %28%22AM%22 or %22PM%22%29>AM
response.sessiondetails.result.session_end_time_form=Displays the meridiem of the class session end time. %28%22AM%22 or %22PM%22%29>PM
response.sessiondetails.result.session_start_time_full=Displays the start date and time of the class session. For example - Aug 31, 2015 19:45 %28Time is in 24 hour format%29>Sep 15, 2015 11:30
response.sessiondetails.result.session_end_time_full=Displays the end date and time of the class session. For example - Aug 31, 2015 19:45 %28Time is in 24 hour format%29>Sep 15, 2015 13:00
response.sessiondetails.result.ilt_session_start_time=Displays the start time of the ILT class session in 24 hour format. For example - 19:45>00:00
response.sessiondetails.result.ilt_session_end_time=Displays the end time of the ILT class session in 24 hour format. For example - 19:45>01:30
response.sessiondetails.result.ilt_session_start_date_format=Displays the start date of the ILT class session. For example - Aug 31, 2015>Sep 16, 2015
response.sessiondetails.result.ilt_session_end_date_format=Displays the end date of the ILT class session. For example - Aug 31, 2015>Sep 16, 2015
response.sessiondetails.result.ilt_session_start_time_format=Displays the start time of the ILT class session in 12 hour format. For example - 09:45>12:00
response.sessiondetails.result.ilt_session_start_time_form=Displays the meridiem of the ILT class session start time. %28%22AM%22 or %22PM%22%29>AM
response.sessiondetails.result.ilt_session_end_time_form=Displays the meridiem of the ILT class session end time. %28%22AM%22 or %22PM%22%29>AM
response.sessiondetails.result.ilt_session_start_format=Displays the start date and time of the ILT class session. For example - Aug 31, 2015 09:45 %28Time is in 12 hour format%29>Sep 16, 2015 12:00
response.sessiondetails.result.ilt_session_start_day=Displays the start day of the ILT class session. Allowed values are %22Mon%22, %22Tue%22, %22Wed%22, %22Thu%22, %22Fri%22, %22Sat%22, %22Sun%22.>Wed
response.sessiondetails.result.ilt_session_end_format=Displays the end date and time of the ILT class session. For example - Aug 31, 2015 09:45 %28Time is in 12 hour format%29>Sep 16, 2015 01:30
response.sessiondetails.result.ilt_session_start_time_full=Displays the start date and time of the ILT class session. For example - Aug 31, 2015 19:45 %28Time is in 24 hour format%29>Sep 16, 2015 00:00
response.sessiondetails.result.ilt_session_end_time_full=Displays the end date and time of the ILT class session. For example - Aug 31, 2015 19:45 %28Time is in 24 hour format%29>Sep 16, 2015 01:30
response.sessiondetails.result.server_date_time=Displays the date and time of the server in the server%27s timezone. For example - Aug 26, 2015 14:24 %28Time is in 24 hour format%29>Sep 08, 2015 12:04
response.sessiondetails.result.session_name=Displays the location name of the ILT class session.>Chennai
response.sessiondetails.result.session_address1=Displays the address line 1 of the ILT class session%27s location.>
response.sessiondetails.result.session_address2=Displays the address line 2 of the ILT class session%27s location.>
response.sessiondetails.result.session_country=Displays the country name of the ILT class session%27s location.>India
response.sessiondetails.result.session_state=Displays the state name of the ILT class session%27s location.>Tamil Nadu
response.sessiondetails.result.session_city=Displays the city name of the ILT class session%27s location.>Chennai
response.sessiondetails.result.session_zipcode=Displays the zipcode of the ILT class session%27s location.>123456
response.sessiondetails.result.sess_timezone=Displays the time zone of the class session in short form. For ILT classes the location%27s time zone will be displayed and for VC classes the user-defined time zone will be diisplayed. For example - Asia%2FSeoul.>Asia%2FKolkata
response.sessiondetails.result.sess_fulltimezone=Displays the time zone of the class session in full. For ILT classes the location%27s time zone will be displayed and for VC classes the user-defined time zone will be diisplayed. For example - %28GMT +09:00%29 Korean Standard Time%2FSeoul.>%28GMT+05:30%29 Indian Standard Time%2FKolkata
response.sessiondetails.result.session_latitude=Displays the latitude of the ILT class session%27s location.>13.0827
response.sessiondetails.result.session_longitude=Displays the longitude of the ILT class session%27s location.>80.2707
response.is_compliance=Displays if the enrolled class is compliance or not. %221%22 denotes the compliance class and %220%22 for not a compliance class
response.mro=Displays whether the Class is Mandatory/recommended/optional. Please refer to the MRO section of the API codes document to view the list of MRO codes displayed.
response.preassessment_status=%22Displays if the Class has a Pre assessment attached to it. Displays if the class has a pre assessment. %28%22TRUE%22 if the class has pre assessment, %22FALSE%22 if the class does not have a pre assessment%29.>
response.compliance_complete_date=Displays the completion date for a Compliance class>
response.compliance_complate_days=Displays the number of days to complete a Compliance class>
response.compliance_validity_date=Displays the date till which the compliance Class is valid>
response.compliance_validity_days=Displays the number of days remaining till which a compliance Class is valid>
response.created_by_ins_mngr_slf=Displays the details of the user who created the enrollment. This User can be the instructor, Admin, Manager or Self if the enrollment was done by self.> Self
response.updated_by_ins_mngr_slf=Displays the details of the user who updated the enrollment. This User can be the Instructor, Admin, Manager or Self if the enrollment was done by self.> Self
response.tp_details.result.program_id=Id of the training plan.>55
response.tp_details.result.overall_status=Training Plan Enrollment Status. Possible values can be seen in Training Plan Enrollment Status section of API codes page.>lrn_tpm_ovr_enr
response.tp_details.result.percentage_complete=percentage of completion. Possible values from 0 to 100.>0
response.tp_details.result.title=Title of the training plan.>What is a Training Plan?
response.tp_details.result.object_type=Type of the training plan. Possbile values can be seen in Training Plan Type in API codes page.>cre_sys_obt_cur
response.tp_course_data.module_details.module_id=Displays the mapping ID of the course attached to the Training Plan>12
response.tp_course_data.module_details.module_title=Displays the Group name of the courses which are grouped together in the Training Plan>12
response.tp_course_data.module_details.module_code=Displays the Group code of the courses which are grouped together in the Training Plan>12
response.tp_course_data.course_details.clscount=Displays the number of classes listed under a course that is attached to the Training Plan>1
response.tp_course_data.course_details.crs_id=Displays the ID of the course that is attached to the Training Plan>48
response.tp_course_data.course_details.is_required=Displays+if+the+course+is+mandatory+to+complete+the+Training+Plan.+%28%22Y%22+if+the+course+is+mandatory%2C+%22N%22+if+it+is+not%29>Y
response.tp_course_data.course_details.sequence_no=Displays the order in which the course is to be taken>1
response.tp_course_data.course_details.crs_title=Displays the title of the course>Content Library to upload and share diverse
response.tp_course_data.course_details.crs_code=Displays the code of the course>Content Library to upload and share diverse
response.tp_course_data.course_details.crs_desc=Displays the description of the course>Content Library to upload and share diverse
response.tp_course_data.course_details.start_date=Displays+the+date+from+which+the+course+is+valid.+%28Only+for+Certification%29>
response.tp_course_data.course_details.end_date=Displays+the+date+till+which+the+course+is+valid.+%28Only+for+Certification%29>
response.tp_course_data.course_details.registered_cnt=Displays the number of users enrolled to the course.>0
response.tp_course_data.course_details.single_class=Displays the ID of the class if the course has only one class listeed under it. This filed will be empty if there are multiple classes listed under the course.>59
response.tp_course_data.course_details.class_details.result.class_details.object_type=Displays+the+type+of+training+object.+In+this+case+the+set+value+is+%22Class%22.>Class
response.tp_course_data.course_details.class_details.result.class_details.crs_id=Displays the ID of the course to which the class belongs>48
response.tp_course_data.course_details.class_details.result.class_details.cls_id=Displays the ID of the class>59
response.tp_course_data.course_details.class_details.result.class_details.cls_code=Displays the code of the class>Content Library to upload and share diverse
response.tp_course_data.course_details.class_details.result.class_details.cls_title=Displays the title of the class>Content Library to upload and share diverse
response.tp_course_data.course_details.class_details.result.class_details.cls_short_description=Displays the summary of the class>Content Library to upload and share diverse
response.tp_course_data.course_details.class_details.result.class_details.delivery_type_code=Displays the delivery type code of the class. Please refer to the Class section of the API codes document to view the list of delivery type codes displayed.>lrn_cls_dty_wbt
response.tp_course_data.course_details.class_details.result.class_details.currency_type=Displays+the+code+for+the+type+of+currency+used+%28%22cre_sys_crn_usd%22%29>cre_sys_crn_usd
;response.tp_course_data.course_details.class_details.result.class_details.export_compliance=>
response.tp_course_data.course_details.class_details.result.class_details.delivery_type_name=Displays the delivery type name of the class. Please refer to the Class delivery type section of the API Codes document to view the list of delivery type names.>Web-based
response.tp_course_data.course_details.class_details.result.class_details.status=Displays+whether+the+class+is+shown+in+Catalog+or+not.+%28%22Hidden+in+Catalog%22+or+%22Shown+in+Catalog%22%29>Shown in Catalog
response.tp_course_data.course_details.class_details.result.class_details.language=Displays the language of the class.Please refer to the Class language section of the API Codes document to view the list of status.>English
response.tp_course_data.course_details.class_details.result.class_details.location=Displays+the+location+of+the+class.+%28only+for+ILT+Class%29>
response.tp_course_data.course_details.class_details.result.class_details.locationname=Displays+the+location+of+the+class.+%28only+for+ILT+Class%29>
response.tp_course_data.course_details.class_details.result.class_details.loationaddr1=Displays+the+first+line+of+the+address+of+the+location.+%28Only+for+ILT+Class%29>
response.tp_course_data.course_details.class_details.result.class_details.locationaddr2=Displays+the+second+line+of+the+address+of+the+location.+%28Only+for+ILT+Class%29>
response.tp_course_data.course_details.class_details.result.class_details.locationcity=Displays+the+city+of+the+class+location.+%28Only+for+ILT+Class%29>
response.tp_course_data.course_details.class_details.result.class_details.locationstate=Displays the state of the class location.+%28Only+for+ILT+Class%29>
response.tp_course_data.course_details.class_details.result.class_details.locationzip=Displays the zipcode of the class location.+%28Only+for+ILT+Class%29>
response.tp_course_data.course_details.class_details.result.class_details.locationphone=Displays the phone number of the class location.+%28Only+for+ILT+Class%29>
response.tp_course_data.course_details.class_details.result.class_details.price=Displays+the+price+of+the+class.+%28if+any%29>0.00
response.tp_course_data.course_details.class_details.result.class_details.session_id=Displays+the+ID+of+the+class+session.+%28only+for+ILT+%2F+VC+class%29>
response.tp_course_data.course_details.class_details.result.class_details.sess_start_date=Displays the start date of the class session.+%28only+for+ILT+%2F+VC+class%29>
response.tp_course_data.course_details.class_details.result.class_details.sess_start_time=Displays the start time of the class session.+%28only+for+ILT+%2F+VC+class%29>
response.tp_course_data.course_details.class_details.result.class_details.sess_end_time=Displays the end time of the class session.+%28only+for+ILT+%2F+VC+class%29>
response.tp_course_data.course_details.class_details.result.class_details.sess_end_date=Displays the end date of the class session.+%28only+for+ILT+%2F+VC+class%29>
response.tp_course_data.course_details.class_details.result.class_details.timezone=Displays the timezone of the class session.+%28only+for+ILT+%2F+VC+class%29>
response.tp_course_data.course_details.class_details.result.class_details.country_name=Displays the country of the class location.+%28Only+for+ILT+Class%29>
response.tp_course_data.course_details.class_details.result.class_details.language_code=Displays the language code of the class. Please refer to the languages section of the API Codes document to view the list of language codes displayed.>cre_sys_lng_eng
response.tp_course_data.course_details.class_details.result.class_details.country_code=Displays the country code of the class location.+%28Only+for+ILT+Class%29>
response.tp_course_data.course_details.class_details.result.class_details.registration_end_on=Displays the date in which enrollment for this class cends.>
response.tp_course_data.course_details.class_details.result.class_details.enrcrs_id=Displays the course ID>
response.tp_course_data.course_details.class_details.result.class_details.enrclsid=Displays the class ID>
response.tp_course_data.course_details.class_details.result.class_details.clscrsid=Displays the ID of the course to which the class belongs>48
response.tp_course_data.course_details.class_details.result.class_details.clsid=DIsplays the ID of the class>59
response.tp_course_data.course_details.class_details.result.class_details.session_end_datetime=Displays the date and time in which the class session ends in YYYY-MM-DD HH:MM:SS format>
response.tp_course_data.course_details.class_details.result.class_details.enrolled_id=Displays the class enrollment ID if the user has enrolled for this class. This field will be empty if User has not enrolled.>
response.tp_course_data.course_details.class_details.result.class_details.waitlist_status=Displays the number of waitlisted seats.+%28only+for+ILT+%2F+VC+class%29>0
response.tp_course_data.course_details.class_details.result.class_details.availableSeats=Displays the number of available seats.+%28only+for+ILT+%2F+VC+class%29>
response.tp_course_data.course_details.class_details.result.class_details.session_details.session_title=Displays the title of the session>
response.tp_course_data.course_details.class_details.result.class_details.session_details.session_day=Displays+the+day+on+which+the+session+is+held.+It+is+a+textual+representation+of+the+day+in+three+letters.+%28Mon%2C+Tue%2C+Wed%2C+Thu%2C+Fri%2C+Sat%2C+Sun%29
response.tp_course_data.course_details.class_details.result.class_details.session_details.start_date=Displays+the+date+on+which+the+session+starts.+%28Example+-+Jan+01%2C+2015%29>
response.tp_course_data.course_details.class_details.result.class_details.session_details.start_time=Displays+the+time+on+which+the+session+starts+in+HH%3AMM+format.+%2812+hour+format%29>
response.tp_course_data.course_details.class_details.result.class_details.session_details.start_form=Displays+the+meridiem+of+the+session+start+time.+%28%22AM%22+or+%22PM%22%29>
response.tp_course_data.course_details.class_details.result.class_details.session_details.end_time=Displays+the+time+on+which+the+session+ends+in+HH%3AMM+format.+%2812+hour+format%29>
response.tp_course_data.course_details.class_details.result.class_details.session_details.end_form=Displays+the+meridiem+of+the+session+end+time.+%28%22AM%22+or+%22PM%22%29>
response.class_status =Displays the availabilty of the Class room and Virtual classes. Past Class room or Virtual classes will be shown as Delivered while future classes as Scheduled.>Delivered
response.user_rating =Displays the Users rating for each class>20
response.preassesment_completion_status =Displays the completion status of the pre assessment.> Return blank if pre assessment is not present or the user doesnot attain the pre assessment > Return lrn_crs_cmp_enr if the user attain the pre assessment but failed > Return lrn_crs_cmp_cmp if the user successfully completed the pre assessment 
response.pre_total_attempts =Displays the total number of attempts of preassessment
response.pre_attempts =Displays the number of attempts made by the user for preassessment
response.post_total_attempts =Displays the total number of attempts of postassessment
response.post_attempts =Displays the number of attempts made by the user for postassessment
response.waived_status = Return 1 if waived and return 0 if enrolled
response.assessment_survey_count = Return total number of survey and assessment
response.assessment_survey_progress = Return total progress of survey and assessment
response.assessment_survey_completion = Return total count of completed survey and assessment
response.post_assessment_completion = return completion status of post assessment
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 23
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for Launch Modules
[GetLaunchModulesAPI]
category = LearnerAPI
display_name = Launch Modules
description = The API is used to get the launch modules of the given enroll id.
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_lnrenrollment/exp_sp_launch.inc
method_name = getLaunchDetailWrapperAPI;the name of the function that is to be executed when this api is called.
params.enrollid = Y> Enrollment Id>
params.userid = Y> User Id>1
response.ID= Launch Id>1
response.VersionId= Content Version Id>1
response.ContentId= Content Id>1
response.ValidTo= Launch Valid To>
response.Code= Content Code>Cnt1
response.Title= Lession Title>Lesson1
response.LaunchType= Launch Type>WBT
response.ContentType= Content Type>AICC Course Structure
response.LearnerLaunchURL= Learner Launch URL>http://content.expertus.com/Overview/index_lms.html
response.PresenterLaunchURL= Presenter Launch URL>http://content.expertus.com/Overview/index_lms.html
response.MaxAttempt= MaxAttempt>3
response.AttemptLeft= Attempt Left>2
response.Handler= Handler Type>
response.IsLaunchable= Launchable>true
response.LessonLocation= Lesson Location >test
response.contValidateMsg= Content Message > 22 Attempts left
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=update
testengine.apitestsequence = 24
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = no ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for Update Score
[UpdateScoreAPI]
category = LearnerAPI
display_name =  Update Score
description = The API is used to update the score for an users enrollment.
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_lnrenrollment/exp_sp_launch.inc
method_name = updateLaunchWrapper;the name of the function that is to be executed when this api is called.
params.stid = Y> Enter the Learner ID>
params.enrollid = Y> Enter the Enrollment ID of the user>
params.regid = Y> Enter the Enrollment ID of the user>
params.prestatus = N> Enter+the+pre-assessment+result.+If+the+users+is+passed+in+the+pre-assessment+then+enter+%221%22%2Cand+if+he+fails+then+%220%22.If+there+is+no+pre-assessment+attached+to+the+class+then+update+as+null.>
params.courseid = Y> Enter the Course ID>
params.classid = Y> Enter the Class ID>
params.lessonid = N> Enter the lesson ID of the content.>
params.versionid = Y> Enter the Version ID of the content.>
params.status = Y> Enter the Completion Status of the enrollment. Please refer to the completion status section of the API Codes document to view the list of allowed completion statuses.>lrn_crs_cmp_cmp
params.sestime = N> Enter the session time for the class in HH:MM format.>
params.score = N> Enter the Score for the user which is to be updated for the class.>80
params.location = N> Enter the location name for the session.>
params.contentstatus = N>Enter+the+lesson_status+for+SCORM+1.2+and+success_status+for+SCORM+2004.+The+allowed+values+are+%22Completed%22%2C%22failed%22%2C%22passed%22%2C+%22incomplete%22%2C%22unknown%22.>Completed, failed, passed, incomplete, unknown
params.compstatus = N> Enter+the+completion+status+only+for+SCORM+2004+content.+The+allowed+values+are+%22Completed%22%2C%22Incomplete%22%2C%22Unknown%22.>Completed, Incomplete, Unknown
params.userid = Y> Enter the ID of the user making this API call.>1
params.calltype = N>Enter+the+type+of+score+update.+Enter+%22assessment%22+if+the+score+is+for+assessment+or+leave+as+empty+for+content+score+update.>assessment
params.surveyid = N>Enter the assessment ID for which the score is to be updated.>4
response.ID= Displays the ID of the User>1
response.ValidTo=  Displays the date till which the enrollment is valid in YYYY-MM-DD format.>1
response.Code= Displays the content Code.>1
response.Title= Displays the content Title.>1
response.LaunchType= Displays+the+abbreviation+of+the+class+delivery+type.+%28%22ILT%22%2C%22WBT%22%2C%22VC%22%2C%22VOD%22+for+Classroom%2C+Web-based%2C+Virtual+Class+and+Video+classes+respectively.>WBT
response.ContentType= Displays the  Content Type. Please refer to the Content type section of the API codes document to view the list of allowed Content Type.>AICC Course Structure
response.MaxAttempt= Displays the maximum number of times the content can be launched.>3
response.AttemptLeft= Displays the number of Attempts left to launch a content.>1
response.ClsScore= Displays the score of the user.>1
response.SuspendData= Displays the progress>1
response.progress= Displays the completion progress>1
response.overallProgress = displat the overallProgress
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = update
testengine.category=update
testengine.apitestsequence = 25
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 50 ; number of request which can be accept per minute

;API for Cancel Enrollment
[CancelEnrollmentAPI]
category = LearnerAPI
display_name = User cancel enrollments
description = The API is used to cancel enrollment by the learner.
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_lnrenrollment/exp_sp_lnrenrollment.inc
method_name = getDropEnrollmentWrapperByRest;the name of the function that is to be executed when this api is called.
params.userid = Y> Enter the ID of the user making this API call.>1
params.enrollId = Y> Enter only the numeric value. Enter the enrollment ID of the User for the class.>
response.status= Displays+the+Cancellation+status.%28%22success%22+or+%22failure%22%29>Success
response.msg= Displays+the+Cancellation+message.+%28For+%22success%22+status+no+message+will+be+displayed%2C+and+for+%22failure%22+status+%22Contact+Support+to+cancel+the+class+registration%22+will+be+displayed%29>
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = update
testengine.category=update
testengine.apitestsequence = 26
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for Get Course Details
[GetCourseDetailsAPI]
category = LearnerAPI
display_name = Get Course Details
description = This API is used to get the details of a specified course
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_coursedetail/exp_sp_coursedetail.inc
method_name = getCourseDetailsWrapperApi;the name of the function that is to be executed when this api is called.
params.courseId = Y>Accepts only numerical values. Enter the ID of a Course.>1
params.courseCode = N>Enter the course code>
params.userid= Y >Accepts only numerical values. This contains the ID of the User making this API call.>1
response.id=Displays the course ID>1
response.title= Course Title>Web-based training course
response.code=Displays the course code>WBT001
response.description=Displays the description about the course>Sample Description
response.short_description=Displays the short description about the course>Sample Short Description
response.tagname= Displays tags attached to the Course
response.view_count=Displays the total number of views for the particular course>10
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 27
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for Get Class Details
[GetClassDetailsAPI]
category = LearnerAPI
display_name = Get Class Details
description = This API is used to get the details of a specified class
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_classdetail/exp_sp_classdetail.inc
method_name = getClassDetailsRestAPI;the name of the function that is to be executed when this api is called.
params.classId = Y>Accepts only numerical values. Enter the ID of the class.>1
params.sessionId = N>Accepts only numerical values.Enter the ID of a session assoicated with this class.>
params.userid= Y >Accepts only numerical values. This contains the ID of the User making this API call.>1
response.title=Displays the title of the Class>2
response.code=Displays the Class Code>crs1c1
response.classid=Displays the ID of the Class>1
response.crs_id=Displays the ID of the associated Course>1
response.description=Displays the description of the Class>Test Description
response.additional_info=Displays the description of the Class>Test Description
;response.export_compliance= Export Compliance > N
response.duration=Displays the duration of the class>0
response.clslang= Display the code for the class language>cre_sys_lng_eng
response.delivery_type_code=Displays the Delivery Type of the Class. %28Please refer to the Class section of the API Codes document to view the list delivery type codes displayed for a Class.%29>lrn_cls_dty_wbt
response.price=Display the cost of the Class. %28Only numeric values%29> 10
response.currency=Displays the currency type of the Class in short form. %28e.g.+USD%29>USD
response.currency_code= Displays the currency code of the Class %28e.g.+cre_sys_crn_usd%29. Possible values can be seen in currency type section of %3Ca+href%3D%22%2Fapis%2Fdocs%2Flookupvalues.php%23cre_sys_crn%22%3EAPI+codes+page%3C%2Fa%3E.>cre_sys_crn_usd
response.currency_symbol= Displays the currency symbol of the Class.>%24
response.maxcapacity= Displays the maximum capacity of enrollment for the Class>55
response.availablibleseatcount=Displays the total number of available seats for the Class> 5
response.tagname= Displays tags attached to the Class
response.enrollmentvalidity=Displays the date till which the enrollment to the Class is valid MM-DD-YYYY format> 0
response.mro_id=Displays whether the Class is Mandatory/recommended/optional. Please refer to the MRO section of the API codes document to view the list of MRO codes displayed.>
response.prerequisites.result.course_id=Displays the ID of the prerequisite course.>237
response.prerequisites.result.crs_title=Displays the Title of the prerequisite course.>Regression mobile course
response.prerequisites.result.crs_code=Displays the Code of the prerequisite course.>Regression mobile course
response.equivalence.result.course_id=Displays the ID of the equivalent course.>84
response.equivalence.result.crs_title=Displays the Title of the equivalent course.>A sample equivalence course
response.equivalence.result.crs_code=Displays the Code of the equivalent course.>A sample equivalence course
response.sessionDetailInfo.result.title=Displays the title of the session>A Sample Class
response.sessionDetailInfo.result.start_date=Displays the start date of the session. For example - Aug 30, 2015. For ILT classes the location%27s timezone will be used and for VC classes user defined timezone will be displayed>Aug 30, 2015
response.sessionDetailInfo.result.start_time=Displays the session start time in 12 hours format. For example - 06:45. Aug 30, 2015. For ILT classes the location%27s timezone will be used and for VC classes user defined timezone will be displayed>11:30
response.sessionDetailInfo.result.start_time_format=Displays the meridiem of the session start time. %28%22AM%22 or %22PM%22%29>AM
response.sessionDetailInfo.result.end_time=Displays the session end time in 12 hours format. For example - 06:45.Aug 30, 2015. For ILT classes the location%27s timezone will be used and for VC classes user defined timezone will be displayed>11:45
response.sessionDetailInfo.result.end_time_format=Displays the meridiem of the session end time. %28%22AM%22 or %22PM%22%29>AM
response.sessionDetailInfo.result.session_end_date_format=Displays the end date of the session. For example - Aug 30, 2015. For ILT classes the location%27s timezone will be used and for VC classes user defined timezone will be displayed.>Aug 30, 2015
response.sessionDetailInfo.result.session_name=Displays the location name. %28Only for ILT classes%29>Chennai
response.sessionDetailInfo.result.session_address1=Displays line 1 of the location%27s address. %28Only for ILT classes%29>
response.sessionDetailInfo.result.session_address2=Displays line 2 of the location%27s address. %28Only for ILT classes%29>
response.sessionDetailInfo.result.session_country=Displays the the country name of the location. %28Only for ILT classes%29>India
response.sessionDetailInfo.result.session_state=Displays the state name of the location. %28Only for ILT classes%29>Tamil Nadu
response.sessionDetailInfo.result.session_city=Displays the city name of the location. %28Only for ILT classes%29>Chennai
response.sessionDetailInfo.result.session_zipcode=Displays the zipcode of the location. %28Only for ILT classes%29>123456
response.sessionDetailInfo.result.ilt_start_date=Displays the start date of the session. For example - Aug 30, 2015.>Aug 31, 2015
response.sessionDetailInfo.result.ilt_start_time=Displays the session start time in 12 hours format. For example - 06:45.>12:00
response.sessionDetailInfo.result.ilt_start_time_format=Displays the meridiem of the session start time. %28%22AM%22 or %22PM%22%29>AM
response.sessionDetailInfo.result.ilt_end_time=Displays the end date of the session. For example - Aug 30, 2015.>12:15
response.sessionDetailInfo.result.ilt_end_time_format=Displays the session end time in 12 hours format. For example - 06:45.>AM
response.sessionDetailInfo.result.ilt_session_end_date_format=Displays the end date of the session. For example - Aug 30, 2015.>Aug 31, 2015
response.available_seats=Displays the count of available seats. %28Only for ILT+%2F+VC classes%29>10
response.waitlist_seats=Displays the count of waitlist seats available for ILT+%2F+VC classes. Can be 0 or positive interger>5
response.multi_register=+Displays+multi+register+class+details+%28only+for+wbt+%26+vod+classes%29.+Displays+if+the+class+allows+recurring+registration.+Only+for+WBT+or+VOD+classes.+%28%221%22+if+the+class+allows+recurring+registration+and+%220%22+if+the+class+does+not+allow+recurring+registration%29>0
api_owner.name = sureshkumar;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 28
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for List Delivery Types
[ListDeliveryTypes]
category = LearnerAPI
display_name = List of delivery types
description = The API is used to get the list of delivery types.
ORM_file = /sites/all/modules/core/exp_sp_core/exp_sp_core.inc
method_name = listProfileValues;the name of the function that is to be executed when this api is called.
params.deliveryTypeCode = Y> Possible values for this field are lrn_cls_dty.>lrn_cls_dty
params.limit= N >Enter+only+numerical+values.+This+parameter+sets+the+number+of+records+retrieved+based+on+the+entered+value.+Default+value%3A+10%0A%0ANote%3A+If+optional+parameters+are+blank%2C+then+%27start%27+and+%27limit%27+parameters+become+Mandatory>1
params.userid = Y > Enter the ID of the user making this API call. >1
response.name =  Display the delivery type name>Classroom
response.code= Display the delivery type code>lrn_cls_dty_ilt
response.attr1=Displays+the+abbreviation+of+the+class+delivery+type.+%28%22ILT%22%2C+%22WBT%22%2C+%22VC%22%2C+%22VOD%22+for+Classroom%2C+Web-based%2C+Virtual+Class+and+Video+classes+respectively.>ILT
response.attr2= NULL>ILT
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 29
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for List Locations
[ListLocationsAPI]
category = LearnerAPI
display_name = List of Location
description = The API is used to list the locations.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_learning/exp_sp_administration_resource/exp_sp_administration_resource.inc
method_name = listLocationByRestAPI;the name of the function that is to be executed when this api is called.
params.start = N >  Enter+the+starting+point+from+which+the+Training+Plan+records+are+displayed.+Only+numerical+values+are+accepted.+Default+value%3A+0 >0
params.limit = N > Enter+only+numerical+values.+This+parameter+sets+the+number+of+records+retrieved+based+on+the+entered+value.+Default+value%3A+10%0A%0ANote%3A+If+optional+parameters+are+blank%2C+then+%27start%27+and+%27limit%27+parameters+become+Mandatory >10
;params.resourcetype = Y > Resource Type+Enter+the+location+type+code+%27cre_sys_obt_loc%27.>cre_sys_obt_loc
params.userid = Y > Enter the ID of the user making this API call. >1
params.textfilter = N > Type location name or address of location. For using address, enter '~' between address fields. For example: 'Location name~Address 1~Address 2~City~Pin code~State~Country' >chennai
response.location_id = Displays the ID of the location>1
response.title=  Displays the name of the location>India
response.type= Displays+the+object+name+%27Location%27.>Location
response.status= Displays status of the location. Please refer to the location section of the API Codes document to view the list of displayed location statuses.>Active
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 30
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for List Available Contents
[ListAvailableContents]
category = LearnerAPI
display_name = List of Content
description = The API is used to list the contents.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_manage/exp_sp_administration_content/exp_sp_administration_content.inc
method_name = listAvailableContentByRestAPI;the name of the function that is to be executed when this api is called.
params.start = N >  It is used to retrieve the records from the position what we specified here >0
params.limit= Y > limit >1
params.rows = N >  Number of records needs to be retrieved. If op param is blank then start and limit should be a mandatory parameters >25
params.contenttype = N> Content Type>
params.contentlang = Y> Content Language Code - Possible values for this field can be seen in Languages section of API codes page.>cre_sys_lng_eng
params.contentstatus = Y> Content Status - Possible values for this field are lrn_cnt_sts_atv, lrn_cnt_sts_itv.>lrn_cnt_sts_atv
params.userid = Y > User Id >1
response.id = Content Id>1
response.code= Content Code>Content001
response.type= Content Type Code>lrn_cnt_typ_knc
response.content_type_name= Content Type Name>Knowledge Content
response.description= Content Short Description>Sample Description
response.lang= Content Language Name>English
response.status= Content Status>Active
response.status_code= Content Status Code>lrn_cnt_sts_atv
response.lesson_cnt= Content Total Lesson>3
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 31
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = no ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for Add Roster
[AddRosterAPI]
category = AdminAPI
display_name = Enroll Users to a Class
privilege_parameter = Course/Class$$$create
entity_type_parameter = User$$$Learnerid$~$Class$$$Classid
description = This API is used to Enroll Users to a Class
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning.inc
method_name = addRosterByAPI;the name of the function that is to be executed when this api is called.
params.rosterobj.Learnerid = Y>Enter the ID of the User who should be registered for the Class. Multiple values can be entered by adding commas.>1
params.rosterobj.Courseid = Y>Enter the ID of the course to which the Class is associated with.>1
params.rosterobj.Classid = Y>Enter the ID of the Class to which the registration should be done.>1
params.rosterobj.Ismandatory = N>Enter the 1 if the class is mandatory to the user.>N
params.rosterobj.RegDate = N>Enter the date in which the User has registered for the Class. Date should be entered in mm/dd/yyyy format.> 01/31/2014
params.userid = Y>Accepts only numerical values. This contains the ID of the User making this API call.>1
response.id=Displays the enrollment ID of the User who has registered to the class>1
response.userid=Displays the ID of the User who has registered to the class>
response.status=Displays+the+enrollment+status+of+the+User.+%28Please+refer+to+the+Class+section+in+the+API+Codes+document+to+view+the+list+of+enrollment+status+displayed.%29>Reserved
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = add
testengine.category=add
testengine.apitestsequence = 32
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 40 ; number of request which can be accept per minute

;API for Update Roster
[UpdateRosterAPI]
category = AdminAPI
display_name = Update user%27s registration to a class
privilege_parameter = Course/Class$$$update
;entity_type_parameter = Course$$$course_id$~$Class$$$class_id
description = This API is used to update a User%27s registration to a class
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_learning/exp_sp_administration_class_register.inc
method_name = UpdateRosterByAPI;the name of the function that is to be executed when this api is called.
params.form_state.action = Y>This+field+is+used+the+change+the++status+of+an+enrollment.+Allowed+values+are+%22cancelled%22%2C+%22completed%22%2C+%22noshow%22%2C+%22incompleted%22>completed
params.form_state.EnrollId = Y>Enter the Enrollment ID of the User.>
params.form_state.course_id = Y>Enter the Course ID.>
params.form_state.class_id = Y>Enter the Class ID>
params.form_state.RegStatusDate = N>This field stores the date in which the User registration/cancellation to the class was done. The date should be mentioned in mm/dd/yyyy hh:mm:ss format. Time should be entered in 24-hour format.>07/25/2014 12:12:00
params.form_state.CompletionDate = N>This field stores the date in which the class was completed. The date should be entered in mm/dd/yyyy hh:mm:ss format. Time should be entered in 24 hours format.>07/25/2014 12:12:00
params.form_state.Score = N>Enter the Assessment score for the class.>
params.userid=Y >Accepts only numerical values. This contains the ID of the User making this API call.>1
response.Id=Displays the registration ID of the User who has registered for a Class>1
response.Status=Displays+the+User%27s+enrollment+status+for+the+class.+%28Please+refer+to+the+Class+section+in+the+API+Codes+document+to+view+the+list+of+enrollment+status+displayed.%29>Reserved
response.UserId=Displays the ID of the User who has registered for the class>1
response.UserName=Displays the Username of the User who has registered for the class.>admin
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = update
testengine.category=update
testengine.apitestsequence = 33
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 40 ; number of request which can be accept per minute

;API for List Roster
[ListRosterAPI]
category = AdminAPI
display_name = List of User enrolled in a Class
privilege_parameter = Course/Class$$$view
entity_type_parameter = Class$$$ClassId
description = This API is used to display the list of users enrolled in a class.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_learning/exp_sp_administration_class_register.inc
method_name = listRosterByAPI;the name of the function that is to be executed when this api is called.
params.rosterobj.page = N>This field is used to display records from a specific page, to be used in tandem with %22rows%22 field. For eg - If there are 10 pages with 15 records displayed in each page, then entering %223%22 in this field will only display the third page containing the records 31 to 45.>1
params.rosterobj.rows = N>Enter the number of rows to be displayed. Accepts only numerical values.>10
params.rosterobj.ClassId = Y>Accepts only numerical values. This field contains the Class ID.>
params.rosterobj.CourseId = Y>Accepts only numerical values. This field contains the Course ID.>
params.rosterobj.UserName = N>This field is used to display the enrollments of the specified Username>
params.rosterobj.AllReg = N>Displays all the enollment records of the User. Enter 1 to display all records and 0 to display only one record. The default value is 0.>0
params.rosterobj.date_from = N >Enter the date from which the Enrollments should be displayed. Dates should be entered in yyyy-mm-dd format.>2015-07-25
params.rosterobj.date_to = N >Enter the date till which the Enrollments should be displayed. Dates should be entered in yyyy-mm-dd format.>2015-07-25
params.rosterobj.IncludeProfileData = N> User Profile Picture Path. Available options are 1 or 0>0
params.userid=Y >Accepts only numerical values. This contains the ID of the User making this API call.>1
response.id =Displays the Enrollment ID of the User who has registered to the Class>
response.registered_user_id =Displays the ID of the User who has registered to the Class>1
response.user_name=Displays the Username of the User who has registered to the Class>Admin
response.full_name=Displays the full name of the User who has registered to the class>Expertusone Admin
response.delivery_type=Displays+the+delivery+type+of+the+Class.+%28Please+refer+to+the+Class+section+of+the+API+codes+document+to+view+the+list+of+delivery+types+displayed.%29>
response.reg_status=Displays+the+User%27s+registration+status+code.+%28Please+refer+to+the+Class+section+of+the+API+codes+document+to+view+the+list+of+registration+status+codes+displayed.%29>lrn_crs_reg_cnf
response.reg_status_name=Displays+the+User%27s+registration+status.+%28Please+refer+to+the+Class+section+of+the+API+codes+document+to+view+the+list+of+registration+statuses+displayed.%29>Enrolled
response.comp_status=Displays+the+class+completion+status+code.+%28Please+refer+to+the+Class+section+of+the+API+codes+document+to+view+the+list+of+class+completion+status+codes+displayed.%29>lrn_crs_cmp_cmp
response.comp_status_name=Displays+the+class+completion+status.+%28Please+refer+to+the+Class+section+of+the+API+codes+document+to+view+the+list+of+class+completion+statuses+displayed.%29>Completed
response.score=Displays the Assessment score.>80
response.reg_status_date=Displays the date in which the User registered for the Class>2012-02-15 08:41:37
response.comp_date=Displays the date in which the Class was completed>2012-02-16 08:41:37
response.updated_on =Displays the date in which the last update was done.>
response.waitlist_priority =Displays+the+Waitlisted+position+of+the+enrolled+User.+%28Applicable+for+ILT+and+VC+classes+only%29>
;response.profileimage_path = User Profile Image Path>
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 34
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for Add TP Roster
[AddTPRosterAPI]
category = AdminAPI
display_name = Enroll Users to a Training Plan
privilege_parameter = Training Plan$$$create
entity_type_parameter = User$$$Learnerid$~$Training Plan$$$ProgramId
description = This API is used to Enroll Users to a Training Plan
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning.inc
method_name = addTPRosterByAPI;the name of the function that is to be executed when this api is called.
params.rosterobj.Learnerid = Y> Learner User Id. For Multiple user registration, the user id like 1,2,3 >1
params.rosterobj.ProgramId = Y> Registration Program Id>1
params.rosterobj.ClassIds = N>This field stores the Class Id of a Class listed under each course that is associated with the Training Plan. Learners should be registered to atleast one class from each course. Multiple values can be entered by adding commas.>1,2
params.rosterobj.Ismandatory = N>Enter the 1 if the class is mandatory to the user.>0
params.rosterobj.RegDate = N>This+field+stores+the+date+of+a+User%27s+registration+to+the+Training+Plan.+The+date+should+be+entered+in+YYYY-MM-DD+format.>2012-07-25
params.userid = Y>Accepts only numerical values. This contains the ID of the User making this API call.>1
response.masterEnroll=Displays the Enrollment Id of the User who has registered for the Training Plan>1
response.userid=Displays the ID of the User who has registered for the Training Plan>1
response.status=Displays+the+User%27s+Registration+status.+%28%22Registered%22%2C+%22Waitlisted%22%2C+%22You+have+already+completed+this+program.%22%2C+%22You+are+already+enrolled+in+this+program%22.>Registered
response.username=Displays the Username of the User who has registered for the Training Plan>Admin
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = add
testengine.category=add
testengine.apitestsequence = 35
testengine.capture_response_field = Id ; it will used to run the update
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 40 ; number of request which can be accept per minute

;API for Update TP Roster
[UpdateTPRosterAPI]
category = AdminAPI
display_name = Update User%27s enrollment in a Training Plan
privilege_parameter = Training Plan$$$update
;entity_type_parameter = Training Plan$$$ProgramId
description = This API is used to update an User%27s enrollment in a Training Plan
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_learning/exp_sp_administration_tp_register.inc
method_name = UpdateTPRosterByAPI;the name of the function that is to be executed when this api is called.
params.form_state.action = Y>This+field+is+used+to+change+the+status+of+an+enrollment.+Allowed+values+are+%22Canceled%22%2C+%22Completed%22%2C+%22Incomplete%22.>Completed
params.form_state.MasterEnrollId = Y>Enter the Enrollment Id of a User who has enrolled in the Training Plan. Multiple values can be entered by adding commas.>
params.form_state.ProgramId = Y>Accepts only numerical values. Enter the ID of the Training Plan.>
params.form_state.CompletionDate = Y>Enter+the+date+on+which+the+Training+Plan+was+completed.+The+date+should+be+entered+in+the+yyyy-mm-dd+format.>2015-08-26
params.form_state.RegStatusDate = Y>Enter+the+date+on+which+registration+to+the+Training+Plan+was+done.+The+date+should+be+entered+in+yyyy-mm-dd+hh%3Amm%3Ass+format.+Time+should+be+entered+in+24+hour+format.>2015-08-23
params.userid=Y >Accepts only numerical values. This contains the ID of the User making this API call.>1
response.Id=Displays the updated Enrollment ID of the User who registered for the Training Plan.>1
response.Status=Displays+the+enrollment+status+of+a+User+who+has+registered+for+the+Training+Plan.+%28Please+refer+to+the+Training+Plan+section+of+the+API+Codes+document+to+view+the+list+of+statuses+displayed.%29>Reserved
response.UserId=Displays the ID of User who has registered for the Training Plan>1
response.UserName=Displays the Username of the User who has registered for the Training Plan>admin
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = update
testengine.category=update
testengine.apitestsequence = 36
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 40 ; number of request which can be accept per minute

;API for Attach Module To TrainingProgram
[AttachModuleToTPAPI]
category = AdminAPI
display_name = Attach Module to a Training Plan
description = This API is used to add new module to a training plan.
privilege_parameter = Training Plan$$$create
entity_type_parameter = Training Plan$$$program_id
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_learning/exp_sp_administration_program/exp_sp_administration_program.inc
method_name = AttachModuleToTPAPI;the name of the function that is to be executed when this api is called.
params.form_state.values.program_id = Y>Enter the id of the training plan to which the module has to be created>10
params.form_state.values.module_name= Y>Enter name of the module>module1
params.userid=Y>Accepts only numerical values. This contains the ID of the User making this API call.>1
response.id= Displays the mapping id of the course attached to the tranining plan>1
api_owner.name = Priya;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = add
testengine.category=add
testengine.apitestsequence = 38
testengine.capture_response_field = id ; it will used to run the update TP
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 40 ; number of request which can be accept per minute


;API for Update Module Name To TrainingProgram
[UpdateModuleToTPAPI]
category = AdminAPI
display_name = Update Module to a Training Plan
description = This API is used to update module to a training plan.
privilege_parameter = Training Plan$$$create
entity_type_parameter = Training Plan$$$program_id
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_learning/exp_sp_administration_program/exp_sp_administration_program.inc
method_name = UpdateModuleToTPAPI;the name of the function that is to be executed when this api is called.
params.form_state.values.program_id = Y>Enter the id of the training plan to which the module has to be created>10
params.form_state.values.module_id= Y>Enter name of the module id of the training program>16
params.form_state.values.module_name= Y>Enter name of the module to be updated>module1
params.userid=Y>Accepts only numerical values. This contains the ID of the User making this API call.>1
response.id= Displays the mapping id of the course attached to the tranining plan>1
api_owner.name = Priya;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = add
testengine.category=add
testengine.apitestsequence = 38
testengine.capture_response_field = id ; it will used to run the update TP
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 40 ; number of request which can be accept per minute

;API for Attach Course To TrainingProgram
[AttachCourseToTPAPI]
category = AdminAPI
display_name = Attach Course to a Training Plan
description = This API is used to attach course to a training plan.
privilege_parameter = Training Plan$$$create
entity_type_parameter = Training Plan$$$program_id
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_learning/exp_sp_administration_program/exp_sp_administration_program.inc
method_name = AttachCourseToTPAPI;the name of the function that is to be executed when this api is called.
params.form_state.values.program_id = Y>Enter the id of the training plan to which the course needs to be attached>10
params.form_state.values.course_id = Y>Enter id of the course which needs to be attached>15
params.form_state.values.groupname= N>Enter name of the group under which the course needs to be displayed>group1
params.form_state.values.modulename= N>Enter name of the module to be displayed>Module Path - 1
params.form_state.values.isrequired=Y> Mandatoriness of the course to the training plan. Possible values are 0 if the course is optional and 1 if it is mandatory>1
params.userid=Y>Accepts only numerical values. This contains the ID of the User making this API call.>1
response.id= Displays the mapping id of the course attached to the tranining plan>1
api_owner.name = Ganesan;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = add
testengine.category=add
testengine.apitestsequence = 82
testengine.capture_response_field = id ; it will used to run the update TP
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 40 ; number of request which can be accept per minute

;API for List TP Roster
[ListTPRosterAPI]
category = AdminAPI
display_name = List of Users enrolled in a Training Plan
privilege_parameter = Training Plan$$$view
entity_type_parameter = Training Plan$$$ProgramId
description = This API is used to list the User enrollments in a Training Plan
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_learning/exp_sp_administration_tp_register.inc
method_name = listTPRosterByAPI;the name of the function that is to be executed when this api is called.
params.rosterobj.ProgramId = Y>Accepts only numerical values. Enter the ID of the Training Plan for which the Enrollments are to be displayed. >
params.rosterobj.UserName = N>Filter used to search for a specific user by first/last name or username.>
params.rosterobj.date_from = N >Enter+the+date+from+which+the+Enrollments+should+be+retrieved.+Dates+should+be+entered+in+yyyy-mm-dd+format.>2015-07-01
params.rosterobj.date_to = N >Enter+the+date+till+which+the+Enrollments+should+be+retrieved.+Dates+should+be+entered+in+yyyy-mm-dd+format.>2015-07-25
params.userid=Y >Accepts only numerical values. This contains the ID of the User making this API call.>1
response.id =Displays the Enrollment ID of the User enrolled in the requested Training Plan>
response.registered_user_id =Displays the ID of the User enrolled in the requested Training Plan>1
response.user_name=Displays the Username of the User enrolled in the requested Training Plan>Admin
response.full_name=Displays the full name of the User enrolled in the requested Training Plan>Expertusone Admin
response.overall_status=Displays+the+status+code+of+the+User%27s+enrollment+%28The+description+of+these+codes+can+be+found+in+the+Training+Plan+section+of+the+API+codes+page.%29>lrn_crs_reg_cnf
response.overall_status_name=Displays+the+status+of+the+User%27s+enrollment+%28Please+refer+to+the+Training+Plan+section+of+the+API+codes+document+to+view+the+list+of+User+enrollment+status+displayed+for+a+Training+Plan%29>Enrolled
response.reg_date=Displays the date when the User enrolled in the Training Plan >2012-02-15 08:41:37
response.comp_date=Displays the date when the User completed the Training Plan >2012-02-16 08:41:37
response.cancel_date=Displays the date when the User enrollment was cancelled>2012-02-16 08:41:37
response.updated_on =Displays the date when the User enrollment was updated>
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 37
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for Get Profile lookup
[ListProfileValues]
category = AdminAPI
display_name = List profile values
description = The API is used to list the profile values.
ORM_file = /sites/all/dao/ProfileDAO.php
method_name = callProfileValuesAPI;the name of the function that is to be executed when this api is called.
params.paramsobj.level = Y> Level Id>0
params.paramsobj.id = Y> Profile Id>0
params.paramsobj.root = Y> Root value>R
params.userid=Y > User Id >1
params.limit= Y > limit >1
response.id= Profile Id>2
response.name= Profile Name>2
response.attr3= attr3>2
response.attr4= attr4>2
response.children= children>2
api_owner.name = Vincent;the developer's name who develops the functionality
api_owner.email = vincents@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 38
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = no ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for get most popular courses.
[GetMostPopularCoursesAPI]
category = LearnerAPI
display_name = List of most popular courses
description = The API is used to list the most popular courses.
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_learning_spotlight/exp_sp_learning_spotlight.inc
method_name = getMostPopular;the name of the function that is to be executed when this api is called.
params.userid= Y> Enter the ID of the user making this API call.>1
params.learnerid= Y>  Enter the ID of the user who is logged in.>40
params.limit= N > Enter the Number of records that needs to be retrieved >1
response.id= Displays the ID of the Course or the Training plan.>1
response.title= Displays the title of the Course or the Training plan> Test Course
response.short_description= Displays the description of the Course or the Training plan.> This is the test course.
response.code= Displays the code of the Course or the training plan> TRP001
response.entity_type= Displays+the+Catalog+Access+Entity+Type.+%28%22cre_sys_obt_crs%22+for+Course%2C+%22cre_sys_obt_cls%22+for+Class%2C+%22cre_sys_obt_crt%22+for+Certification%2C+%22cre_sys_obt_cur%22+for+Curriculum%2C+%22cre_sys_obt_trn%22+for+Learning+Plan%29.%0A > cre_sys_obt_crs
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 39
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;Get Online Users API
[GetOnlineUsersAPI]
category = LearnerAPI
display_name = List of online users
description = The API is used to list the users who are currently logged into the site.
ORM_file = /sites/all/modules/core/exp_sp_collaboration/exp_sp_collaboration_learner/modules/exp_sp_whoisonline/exp_sp_whoisonline.inc
method_name = fetch_online_users_list_api;the name of the function that is to be executed when this api is called.
params.userid= Y> Enter the ID of the user making this API call.>1
params.rows= N > Enter the Number of records that needs to be retrieved >5
response.uid= Displays the ID of the user who is online.>1
response.job_title= Displays the job title of the user who is online. > Software Engineer
response.full_name=  Displays the full name of the user who is onlin > Admin.
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 40
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;List Banners API
[ListBannersAPI]
category = LearnerAPI
display_name = List of banners
description = The API is used to list the banners.
ORM_file = /sites/all/modules/core/exp_sp_collaboration/exp_sp_collaboration_learner/modules/exp_sp_announcement/exp_sp_announcement.inc
method_name = getListOfBannersAPI;the name of the function that is to be executed when this api is called.
params.userid= Y>Enter the ID of the user making this API call.>1
params.limit= N > Enter+only+numerical+values.+This+parameter+sets+the+number+of+records+retrieved+based+on+the+entered+value.+Default+value%3A+10>1
response.id= Id > Displays the ID of the banner. >1
response.title= Displays the Title of the banner > Webinar about LMS tricks
response.shortdesc= Displays the Short Description of the banner > This helps lms administrator to understand the system.
response.banner_thumbnail= +Displays+the+banner+picture%28size+-+621%2A423%29+with+path.%0A > learn.png
response.banner_large= +Displays+the+banner+picture%28size+-+942%2A423%29++with+path. > learn.png
response.display_from = Displays+the+date+from+which+the+banner+is+displayed+in+YYYY-MM-DD+HH%3AMM%3ASS+format.+ >
response.display_to = Displays+the+date+till+which+the+banner+is+displayed+in+YYYY-MM-DD+HH%3AMM%3ASS+format.%0A >
response.banner_sequence = Displays the Sequence for Banner display. >
response.language = Displays the Banner Language. Please refer to the Language section of the API Codes document to view the list of allowed languages. >
response.status = Displays Banner status. Please refer to the Banner status section of the API Codes document to view the list of displayed banner statuses. >
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 41
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for get highly rated courses.
[GetHighlyRatedCoursesAPI]
category = LearnerAPI
display_name = List of highly rated courses
description = The API is used to list the highly rated courses.
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_learning_spotlight/exp_sp_learning_spotlight.inc
method_name = getListOfHighlyRatedByRestAPI;the name of the function that is to be executed when this api is called.
params.userid= Y> Enter the ID of the user making this API call.> 1
params.limit= N > %0AEnter+only+numerical+values.+This+parameter+sets+the+number+of+records+retrieved+based+on+the+entered+value.+Default+value%3A+10%0A%0A >1
response.id= Displays the ID of the Course > 1
response.code= Displays the code of the Course >Code1
response.title= Displays the title of the Course > Test Course
response.short_description= Displays the Short Description of the Course > This is the test course.
response.vote_value =Displays+the+average+Rating+Percentage+Value+for+the+Course.If+the+course+has+2+votes+with+2+and+4+stars%2C+then+the+average+vote+will+be+3+stars.%0A%0A > 75
response.entity_type = Displays+the+Type+of+Catalog+access+Entity.+%28%22cre_sys_obt_crs%22+for+Courses+and+%22cre_sys_obt_cls%22+for+Classes%0A > cre_sys_obt_crs
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 42
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
Manymoon - Create a task or project from this email
throttle = 80 ; number of request which can be accept per minute

;API for get upload file info.
[GetUploadFileInfoAPI]
category = LearnerAPI
display_name = Get upload file info
description = The API is used to get the uploaded file information.
ORM_file = /sites/all/modules/core/exp_sp_core/exp_sp_core.inc
method_name = getUploadFileInfo;the name of the function that is to be executed when this api is called.
params.filepath= Y> File Path>http://www.sitename.com/sites/default/files/contentupload/golf.zip
params.userid=Y > User Id >1
response.filesize=File size > 1024
response.lastaccess=File last access date > May 02 2012 14:59:38 IST
response.lastmodified=File last modified date > May 02 2012 15:59:38 IST
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 43
customer_display = no ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for create mobile log.
[CreateMobileLogAPI]
category = LearnerAPI
display_name = Create Mobile Log
description = The API is used to create the mobile log info.
ORM_file = /sites/all/modules/core/exp_sp_core/exp_sp_core.inc
method_name = insMobileLogData;the name of the function that is to be executed when this api is called.
params.userid= Y> User Id>1
params.logdata= Y> Log Data>Mobile: Sony, Modal: G502
response.id=Insert Log Id > 10
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 44
customer_display = no ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for Create Location
[CreateLocationAPI]
category = AdminAPI
display_name = Create Location
privilege_parameter = Location$$$view
description = This API is used to create location.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_manage/exp_sp_administration_location/exp_sp_administration_resource_location.inc
method_name = addNewLocationByRestAPI;the name of the function that is to be executed when this api is called.
params.form_state.values.name = Y> Enter the name of the Location>REST_API_Location_Title_VERSION
params.form_state.values.equipment = N>  Enter the equipment code. Enter multiple values separated by comma>lrn_res_eqm_com,lrn_res_eqm_mar
params.form_state.values.capacity = Y> Enter the capacity of the location>50
params.form_state.values.addr1 = N>Enter+line+1+of+the+location%27s+address>
params.form_state.values.addr2 = N>Enter+line+2+of+the+location%27s+address>
params.form_state.values.city = Y>Enter the name of the city>Mountain View
params.form_state.values.state = Y>Enter the state code. Please refer to the States section of the API codes document to view the list of available state codes. If the selected country does not have states, enter ‘NA’.>CA
params.form_state.values.country = Y>Enter the Country code. Please refer to the Countries section of the API codes document to view the list of country codes.>US
params.form_state.values.zipcode = Y>Enter only numeric values. Enter the valid zipcode>
params.form_state.values.latitude = N>Enter the latitude values of the location>
params.form_state.values.longitude = N>Enter the longitude values of the location>
params.form_state.values.contact_fname = N>Enter the name of the contact person for this location>
params.form_state.values.phone = N>Enter the  phone number of the location>
params.form_state.values.email_id = N>Enter the email ID for this location>
params.form_state.values.status = Y>Enter the status code of the location. Please refer to the location status section of the API Codes document to view the list of allowed location status codes.>lrn_res_loc_atv
params.form_state.values.timezone = Y>Enter the location time zone. Please refer to the timezone section of the API Codes document to view the list of allowed timezones.>cre_sys_tmz_001
params.userid = Y > Enter the ID of the user making this API call. >1
response.id= Display the created location ID>1
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = add
testengine.category=add
testengine.apitestsequence = 45
testengine.capture_response_field = Id ; it will used to run the Facility creation
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 50 ; number of request which can be accept per minute

;API for Update Location
[UpdateLocationAPI]
category = AdminAPI
display_name = Update Location
privilege_parameter = Location$$$view
entity_type_parameter = Location$$$loc_id
description = The API is used to update the location.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_manage/exp_sp_administration_location/exp_sp_administration_resource_location.inc
method_name = updateLocationByRestAPI;the name of the function that is to be executed when this api is called.
params.form_state.values.loc_id = Y> Enter the ID of the location to be updated>1
params.form_state.values.name = Y> Name of the location to be updated>REST_API_Location_Title_VERSION
params.form_state.values.equipment = N> Enter the equipment code. Multiple values can be entered by adding commas. Please refer to the equipment section of the API codes document to view the list of available equipment codes.>lrn_res_eqm_com,lrn_res_eqm_mar
params.form_state.values.capacity = Y> Enter the maximum seating capacity of the location.>50
params.form_state.values.addr1 = N>Enter the first line for the address>
params.form_state.values.addr2 = N>Enter the second line for the address>
params.form_state.values.city = Y>Enter the city name of the location>Mountain View
params.form_state.values.state = Y>Enter the state code. Please refer to the States section of the API codes document to view the list of available state codes. If the selected country does not have states, enter ‘NA’.>CA
params.form_state.values.country = Y>Enter the Country code. Please refer to the Countries section of the API codes document to view the list of country codes.>US
params.form_state.values.zipcode = Y>Enter the zipcode of the Location>
params.form_state.values.latitude = N>Enter the latitude of the location>
params.form_state.values.longitude = N>Enter the longitude of the location>
params.form_state.values.contact_fname = N>Enter the first name of the contact>
params.form_state.values.phone = N>Enter the phone number of the location.>
params.form_state.values.email_id = N>Enter the email ID of the user.>
params.form_state.values.status = Y>Enter the status of the location. Please refer to the location status section of the API codes document to view the list of allowed location statuses.>lrn_res_loc_atv
params.form_state.values.timezone = Y>Enter the timezone of the location. Please refer to the timezone section of the API codes document to view the list of allowed timezone code.>cre_sys_tmz_001
params.userid = Y > Enter the ID of the user making this API call.>1
response.id= Displays the ID of the updated location>1
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = Update
testengine.category=Update
testengine.apitestsequence = 46
testengine.capture_response_field = Id ; it will used to run the Facility creation
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 50 ; number of request which can be accept per minute

;API for Create Training Plan
[CreateTPAPI]
category = AdminAPI
display_name = Create a Training Plan
privilege_parameter = Training Plan$$$create
description = This API is used to create a Training Plan
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_learning/exp_sp_administration_program/exp_sp_administration_program.inc
method_name = addNewTPByRestAPI;the name of the function that is to be executed when this api is called.
params.form_state.values.title = Y>Enter the title of the Training Plan>REST_API_TP_Title_VERSION
params.form_state.values.code = Y>Enter the code of the Training Plan>REST_API_TP_Code_VERSION
params.form_state.values.short_desc.value = Y>Enter the description of the Training Plan>Sample Description
params.form_state.values.additional_info = N> Enter additional information for the Training Plan>
params.form_state.values.addn_catalog_show = N> Enter the value '0' or '1'.If the value is '0', then the additional information will not be displayed in the Learner catalog.If the value is '1', then the additional information will be displayed.>
params.form_state.values.addn_notification_show = N> Enter the value '0' or '1'. If the value is '0', the additional information will not display in the notifications when added. If the value is '1', the additional information will display in the notifications when added.>
params.form_state.values.status = Y>Enter+the+status+of+the+Training+Plan.+Allowed+value+for+this+field+is+%22lrn_lpn_sts_itv%22+for+Inactive.>lrn_lpn_sts_itv
params.form_state.values.object_type = Y>Enter+the+type+of+Training+Plan.+Allowed+values+for+this+field+are+%22cre_sys_obt_crt%22%2C+%22cre_sys_obt_cur%22%2C+%22cre_sys_obt_trn%22+for+Certification%2C+Curriculum+and+Training+Plan+respectively.>cre_sys_obt_crt
params.form_state.values.lang_code = Y>Enter the language code to be used in this Training Plan. Allowed values for this field can be found in the Languages section of the API codes page.>cre_sys_lng_eng
params.form_state.values.price = N>Accepts only numerical values. This stores the price of the Training Plan>0
params.form_state.values.currency_type = N>Enter+currency+code+to+be+used +%28e.g.+cre_sys_crn_usd%29.+Possible values can be seen in currency type section of %3Ca+href%3D%22%2Fapis%2Fdocs%2Flookupvalues.php%23cre_sys_crn%22%3EAPI+codes+page%3C%2Fa%3E.>cre_sys_crn_usd
params.form_state.values.expires_in_value = N>Accepts+only+numerical+values.+Enter+the number of+units+in+which+the+Training+Plan+expires.+%28Applicable+only+for+Certifications%29> 1
params.form_state.values.expires_in_unit = N>Enter+the+unit+used+when+expiring+a+Training+Plan.+Allowed+values+for+this+field+are+%22days%22%2C+%22months%22%2C+%22years%22.+%28Applicable+only+for+Certifications%29>days
params.form_state.values.end_date = N>Enter+the+date+by+which+a+Training+Plan+should+be+completed.+Dates+should+be+entered+in+mm-dd-yyyy+format.+%28Applicable+only+for+Learning+Plans%29>
params.form_state.values.author_vendor = N>Enter+the+name+of+the+Author%2FVendor+of+the+Training+Plan.>
params.userid=Y >Accepts only numerical values. This contains the ID of the User making this API call.>1
response.id=Displays the newly created Training Plan ID>1
response.message=Displays the State of Training Plan>1
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = add
testengine.category=add
testengine.apitestsequence = 47
testengine.capture_response_field = id ; it will used to run the update TP
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 40 ; number of request which can be accept per minute
htmltags = 1 ; The API contains description text with value as fieldname. Possible values 0 or 1>0

;API for Update Training Plan
[UpdateTPAPI]
category = AdminAPI
display_name = Update Training Plan
privilege_parameter = Training Plan$$$update
entity_type_parameter = Training Plan$$$id
description = This API is used to update the details of a specific Training Plan
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_learning/exp_sp_administration_program/exp_sp_administration_program.inc
method_name = updateTPByRestAPI;the name of the function that is to be executed when this api is called.
params.form_state.values.id = Y>Enter the ID of the Training Plan>
params.form_state.values.title = Y>Enter the title of the Training Plan>REST_API_TP_Title_VERSION
params.form_state.values.code = Y>Enter the code of the Training Plan>REST_API_TP_Code_VERSION
params.form_state.values.short_desc.value = Y>Enter the description of the Training Plan>Sample Description
params.form_state.values.additional_info = N>Enter additional information for the Training Plan>
params.form_state.values.addn_catalog_show = N>Enter the value '0' or '1'.If the value is '0', then the additional information will not be displayed in the Learner catalog.If the value is '1', then the additional information will be displayed.>
params.form_state.values.addn_notification_show = N>Enter the value '0' or '1'. If the value is '0', the additional information will not display in the notifications when added. If the value is '1', the additional information will display in the notifications when added.>
params.form_state.values.status = Y>Enter the code for the status of the Training Plan. Please refer to the Training Plan section in the API codes document for the list of codes available.>lrn_lpn_sts_atv
params.form_state.values.object_type = Y>Enter the code for the type of Training Plan. Please refer to the Training Plan section in the API codes document for the list of codes available.>cre_sys_obt_crt
params.form_state.values.lang_code = Y>Enter the language code to be used in this Training Plan. Please refer to the Languages section of the API codes document for the list of codes available.>cre_sys_lng_eng
params.form_state.values.price = N>Accepts only numerical values. This stores the price of the Training Plan>0
params.form_state.values.currency_type =N>Enter+currency+code+to+be+used +%28e.g.+cre_sys_crn_usd%29.+Possible values can be seen in currency type section of %3Ca+href%3D%22%2Fapis%2Fdocs%2Flookupvalues.php%23cre_sys_crn%22%3EAPI+codes+page%3C%2Fa%3E.>cre_sys_crn_usd
params.form_state.values.expires_in_value = N>Accepts+only+numerical+values.+Enter+the+number+of+units+in+which+the+Training+Plan+expires.+%28Applicable+only+for+Certifications%29>1
params.form_state.values.expires_in_unit = N>Enter+the+unit+used+when+expiring+a+Training+Plan.+Allowed+values+for+this+field+are+%22days%22%2C+%22months%22%2C+%22years%22.+%28Applicable+only+for+Certifications%29>days
params.form_state.values.end_date = N>Enter+the+date+by+which+a+Training+Plan+should+be+completed.+Dates+should+be+entered+in+mm-dd-yyyy+format.+%28Applicable+only+for+Learning+Plans%29>
params.form_state.values.author_vendor = N>Enter the name of the Author%2FVendor of the Training Plan.>
params.userid=Y >Accepts only numerical values. This contains the ID of the User making this API call.>1
response.id=Displays the updated Training Plan ID>1
response.message=Displays the State of Training Plan>1
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = update
testengine.category=update
testengine.apitestsequence = 48
testengine.use_prev_response_field = Id ; it will used to run the update org
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 40 ; number of request which can be accept per minute
htmltags = 1 ; The API contains description text with value as fieldname. Possible values 0 or 1>0

;API for List Training Plan
[ListTPAPI]
category = AdminAPI
display_name = List of Training Plans
privilege_parameter = Training Plan$$$view
description = This API is used to populate the list of Training Plans available.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_learning/exp_sp_administration_program/exp_sp_administration_program.inc
method_name = listTPByRestAPI;the name of the function that is to be executed when this api is called.
params.start = N >Enter the starting point from which the Training Plan records are displayed. Only numerical values are accepted. Default value 0>0
params.limit = N >Number of records needs to be retrieved. If op param is blank then start and limit should be a mandatory parameters. Default value 10>10
params.textfilter = N>Filter used to search for a specific Training Plan by name.>
params.tagname = N > Enter the Tag associated with the Training Plan. Enter only 1 Tag per request. >
params.userid = Y >Accepts only numerical values. This contains the ID of the User making this API call.>1
response.id=Displays the ID of the Training Plan>1
response.title=Displays the title of the Training Plan>Web-based training course
response.code=Displays the code of the Training Plan>Crs001
response.object_type=Displays+the+type+of+Training+Plan+%28Certification%2C+Learning+Plan+and+Curriculum%29>Certification
response.short_desc=Displays the summary of the Training Plan>Sample Description
response.additional_info=Enter additional information for the Training Plan>Sample Additional information
response.shown_in_catalog= Enter the value '0' or '1'.If the value is '0', then the additional information will not be displayed in the Learner catalog.If the value is '1', then the additional information will be displayed.>
response.shown_in_notification= Displays if additional information are displayed in notifications provided its keyword is added to them. Possible values are 0 and 1.>
response.price=Displays+the+price+of+the+Training+Plan+%28if+any%29>10
response.currency= Displays the currency type of the Training Plan in short form. %28e.g.+USD%29>USD
response.currency_code= Displays the currency code of the Training Plan. %28e.g.+cre_sys_crn_usd%29. Possible values can be seen in currency type section of %3Ca+href%3D%22%2Fapis%2Fdocs%2Flookupvalues.php%23cre_sys_crn%22%3EAPI+codes+page%3C%2Fa%3E.>cre_sys_crn_usd
response.currency_symbol= Displays the currency symbol of the Training Plan.>%24
response.tagname= Displays tags attached to the Training Plan
response.status_code=Displays+the+status+code+of+the+Training+Plan+%28Please+refer+to+the+Training+Plan+section+of+the+API+Codes+document+to+view+the+list+of+status+codes+displayed.%29>lrn_lpn_sts_atv
response.status=Displays+the+status+of+the+Training+Plan+%28Active%2FInactive%29>Active
response.lang=Displays the set language of the Training Plan>English
;response.promote= Training Plan Promote>
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category = list
testengine.apitestsequence = 49
testengine.verify_response_field = Id
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for Create Survey
[CreateSurveyAPI]
category = AdminAPI
display_name = Create Survey
privilege_parameter = Survey$$$create
description = This API is used to create a survey.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_survey/exp_sp_administration_surveydetails/exp_sp_administration_survey_assesment.inc
method_name = addNewSurveyByRestAPI;the name of the function that is to be executed when this api is called.
params.form_state.values.survey_title = Y> Enter the title of the survey>REST_API_Survey_Title_VERSION
params.form_state.values.survey_code = Y> Enter the code of the survey>REST_API_Survey_Code_VERSION
params.form_state.values.survey_description.value = Y> Enter the description of the survey>Sample Description
params.form_state.values.survey_status = Y>  Enter the status of the survey. Please refer to the survey status section of the API Codes document to view the list of allowed survey statuses.>sry_det_sry_atv
params.form_state.values.survey_language = Y> Enter the language code for the survey. Please refer to the languages section of the API Codes document to view the list of allowed language codes.>cre_sys_lng_eng
params.form_state.values.survey_qust_per_page = Y> Enter the number of survey questions to be displayed per page>4
params.userid=Y > Enter the ID of the user making this API call. >1
response.Id= Displays the created survey ID>1
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = add
testengine.category=add
testengine.apitestsequence = 50
testengine.capture_response_field = Id ; it will used to run the update survey
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 50 ; number of request which can be accept per minute
htmltags = 1 ; The API contains description text with value as fieldname. Possible values 0 or 1>0

;API for Update Survey
[UpdateSurveyAPI]
category = AdminAPI
display_name = Update Survey
privilege_parameter = Survey$$$update
entity_type_parameter = Survey$$$survey_id
description = The API is used to update a Survey.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_survey/exp_sp_administration_surveydetails/exp_sp_administration_survey_assesment.inc
method_name = updateSurveyByRestAPI;the name of the function that is to be executed when this api is called.
params.form_state.values.survey_id = Y> Enter the ID of the Survey>
params.form_state.values.survey_title = Y> Enter the title of the Survey>REST_API_Survey_Title_VERSION
params.form_state.values.survey_code = Y> Enter the code of the Survey>REST_API_Survey_Code_VERSION
params.form_state.values.survey_description.value = Y> Enter the description of the Survey>Sample Description
params.form_state.values.survey_status = Y> Enter the status of the Survey. Please refer to the Survey status section of the API codes document to view the list of available survey statuses.>sry_det_sry_atv
params.form_state.values.survey_language = Y> Denotes Code of the Survey Language. Please refer to the Languages section of the API codes document to view the list of available language codes.>cre_sys_lng_eng
params.form_state.values.survey_qust_per_page = Y> Enter the number of Survey Questions to be displayed in a page. Accepts only numeric values.>4
params.userid=Y > Enter the ID of the user making this API call.>1
response.Id= Updated Survey Id>1
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = update
testengine.category=update
testengine.apitestsequence = 51
testengine.capture_response_field = Id ; it will used to run the update Survey
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 50 ; number of request which can be accept per minute
htmltags = 1 ; The API contains description text with value as fieldname. Possible values 0 or 1>0

;API for List Survey
[ListSurveyAPI]
category = AdminAPI
display_name = List of Surveys
privilege_parameter = Survey$$$view
description = The API is used to get the list of surveys.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_survey/exp_sp_administration_surveydetails/exp_sp_administration_surveydetails.inc
method_name = listSurveyByRestAPI;the name of the function that is to be executed when this api is called.
params.start = N >  Enter+the+starting+point+from+which+the+Training+Plan+records+are+displayed.+Only+numerical+values+are+accepted.+Default+value%3A+0 >0
params.limit = N > Enter+only+numerical+values.+This+parameter+sets+the+number+of+records+retrieved+based+on+the+entered+value.+Default+value%3A+10%0A%0A%0ANote%3A+If+optional+parameters+are+blank%2C+then+%27start%27+and+%27limit%27+parameters+become+Mandatory >10
params.userid = Y > Enter the ID of the user making this API call. >1
response.id=  Displays the survey ID>1
response.title= Displays the title of the survey>Web-based training course
response.code= Displays the survey code>Crs001
response.type= Displays+the+name+of+the+object+type+%22Survey%22.>Survey
response.short_description= Displays the description of the survey>Web-based training course
response.status= Displays the survey status. Please refer to the survey status section of the API Codes document to view the list of displayed survey statuses.>Active
response.language= Displays the survey language. Please refer to the languages section of the API Codes document to view the list of displayed languages.>English
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category = list
testengine.apitestsequence = 52
testengine.verify_response_field = Id
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for Create Assessment
[CreateAssessmentAPI]
category = AdminAPI
display_name = Create Assessment
privilege_parameter = Assessment$$$create
description = This API is used to create an Assessment.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_survey/exp_sp_administration_surveydetails/exp_sp_administration_survey_assesment.inc
method_name = addNewAssessmentByRestAPI;the name of the function that is to be executed when this api is called.
params.form_state.values.survey_title = Y> Enter the title of the assessment>REST_API_Assessment_Title_VERSION
params.form_state.values.survey_code = Y> Enter the code of the assessment>REST_API_Assessment_Code_VERSION
params.form_state.values.survey_description.value = Y> Enter the description of the assessment >Sample Description
params.form_state.values.survey_status = Y> Enter the status of the assessment. Please refer to Assessment status section of the API Codes document to view the list of allowed assessment statuses.>sry_det_sry_atv
params.form_state.values.survey_language = Y> Enter the language code of the assessment. Please refer to the language section of the API Codes document to view the list of allowed language codes.>cre_sys_lng_eng
params.form_state.values.survey_qust_per_page = Y> Enter the number of assessment questions to be displayed in each page>4
params.form_state.values.min_marks = Y> Enter the minimum assessment marks to Complete the assessment.>40
params.form_state.values.max_marks = Y> Enter the maximum assessment marks>100
params.userid=Y > Enter the ID of the user making this API call.>1
response.Id= Displays the created assessment ID.>1
response.msg= Displays the Warning message if any.>
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = add
testengine.category=add
testengine.apitestsequence = 53
testengine.capture_response_field = Id ; it will used to run the update Assessment
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 50 ; number of request which can be accept per minute
htmltags = 1 ; The API contains description text with value as fieldname. Possible values 0 or 1>0

;API for Update Assessment
[UpdateAssessmentAPI]
category = AdminAPI
display_name = Update Assessment
privilege_parameter = Assessment$$$update
entity_type_parameter = Assessment$$$survey_id
description = The API is used to update the Assessment.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_survey/exp_sp_administration_surveydetails/exp_sp_administration_survey_assesment.inc
method_name = updateAssessmentByRestAPI;the name of the function that is to be executed when this api is called.
params.form_state.values.survey_id = Y> Enter the ID of the Assessment to be updated>
params.form_state.values.survey_title = Y> Enter the Title of the Assessment to be updated >REST_API_Assessment_Title_VERSION
params.form_state.values.survey_code = Y> Enter the Code of the Assessment to be updated>REST_API_Assessment_Code_VERSION
params.form_state.values.survey_description.value = Y> Enter the Description of the Assessment to be updated>Sample Description
params.form_state.values.survey_status = Y> Enter the Status code of the Assessment. Please refer to the assessment status section of the API Codes document to view the list of allowed status codes.>sry_det_sry_atv
params.form_state.values.survey_language = Y> Enter the assessment language code. Please refer to the languages section of the API Codes document to view the list of allowed language codes.>cre_sys_lng_eng
params.form_state.values.survey_qust_per_page = Y> Enter the number of Assessment Questions to be displayed per page >4
params.form_state.values.min_marks = Y> Enter the Minimum Marks for the Assessment>40
params.form_state.values.max_marks = Y> Enter the Maximum Marks for the Assessment>100
params.userid=Y > Enter the ID of the user making this API call. >1
response.Id= Displays the ID of the Updated Assessment>1
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = update
testengine.category=update
testengine.apitestsequence = 54
testengine.capture_response_field = Id ; it will used to run the update Assessment
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 50 ; number of request which can be accept per minute
htmltags = 1 ; The API contains description text with value as fieldname. Possible values 0 or 1>0

;API for List Assessment
[ListAssessmentAPI]
category = AdminAPI
display_name = List of Assessments
privilege_parameter = Assessment$$$view
description = The API is used to get the list of assessments.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_survey/exp_sp_administration_surveydetails/exp_sp_administration_surveydetails.inc
method_name = listAssessmentByRestAPI;the name of the function that is to be executed when this api is called.
params.start = N >  Enter+the+starting+point+from+which+the+Training+Plan+records+are+displayed.+Only+numerical+values+are+accepted.+Default+value%3A+0 >0
params.limit = N >  Enter+only+numerical+values.+This+parameter+sets+the+number+of+records+retrieved+based+on+the+entered+value.+Default+value%3A+10%0ANote%3A+If+optional+parameters+are+blank%2C+then+%27start%27+and+%27limit%27+parameters+become+Mandatory >10
params.userid = Y > Enter the ID of the user making this API call. >1
response.id= Displays the Assessment ID>1
response.title= Displays the Assessment Title>>Web-based training course
response.code=  Displays the Assessment Code>Crs001
response.type= Displays+the+type+name+%27Assessment%27.%0A%0A>Assessment
response.status= Displays the Assessment status. Please refer to the Assessment status section of the API Codes document to view the list of displayed assessment statuses.>Active
response.short_description= Displays the Assessment Description>Web-based training course
response.language= Displays the Assessment Language. Please refer to the Language section of the API Codes document to view the list of available Languages.>English
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category = list
testengine.apitestsequence = 55
testengine.verify_response_field = Id
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for Create Survey Question
[CreateSurveyQuestionAPI]
category = AdminAPI
display_name = Create Survey Question
privilege_parameter = Survey Questions$$$create
description = The API is used to create a Survey Question.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_survey/exp_sp_administration_surveyquestions/exp_sp_administration_questions.inc
method_name = addNewSurveyQuestionByRestAPI;the name of the function that is to be executed when this api is called.
params.form_state.values.survey_status = Y> Enter the  status of the Survey. Please refer to survey status section of the API Codes document to view the list of allowed survey statuses.>sry_qtn_sts_atv
params.form_state.values.lang_code = Y> Enter the language code of the Survey. Please refer to the languages section of the API Codes document to view the lsit of allowed language codes.>cre_sys_lng_eng
params.form_state.values.question_type = Y>Enter the type of Survey question. Please refer to the Survey question of the API Codes document to view the list of allowed survey question types.>sry_qtn_typ_dpn
params.form_state.values.question_txt = Y> Enter the Text for the Survey Question>Sample Question?
params.form_state.values.answers_list = Y> Answers+for+the+Survey+Question.+Multiple+answers+can+be+entered+separated+by+%22%40%40%22>answ1@@answ2@@answ3
params.userid=Y >  Enter the ID of the user making this API call. >1
response.Id= Displays ID of the Survey Question created>1
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = add
testengine.category=add
testengine.apitestsequence = 56
testengine.capture_response_field = Id ; it will used to run the update survey question
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 50 ; number of request which can be accept per minute

;API for Update Survey Question
[UpdateSurveyQuestionAPI]
category = AdminAPI
display_name = Update Survey Question
privilege_parameter = Survey Questions$$$update
entity_type_parameter = Survey Questions$$$id
description = This API is used to update a survey question.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_survey/exp_sp_administration_surveyquestions/exp_sp_administration_questions.inc
method_name = updateSurveyQuestionByRestAPI;the name of the function that is to be executed when this api is called.
params.form_state.values.id = Y> Enter the ID of the survey question>
params.form_state.values.survey_status = Y> Enter the status of the Survey. Please refer to the Question Status of the API codes document to view the list of allowed statuses.>sry_qtn_sts_atv
params.form_state.values.lang_code = Y> Enter the code of the language. Please refer to the Languages section of the API Codes document to view the list of allowed language codes.>cre_sys_lng_eng
params.form_state.values.question_type = Y> Enter the type of Survey question code. Please refer to the Question Type section of the API Codes document to view the list of allowed survey question codes.>sry_qtn_typ_dpn
params.form_state.values.question_txt = Y> Enter the text of the Survey question.>Sample Question?
params.form_state.values.answers_list = Y> Enter the answers to the Survey questions. The list of answers for a question can be separated by adding @@.>answ1@@answ2@@answ3
params.userid=Y > Enter the ID of the user making this API call.>1
response.Id= Updated Survey Question Id>1
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = update
testengine.category=update
testengine.apitestsequence = 57
testengine.capture_response_field = Id ; it will used to run the update survey question
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 50 ; number of request which can be accept per minute

;API for List Survey Question
[ListSurveyQuestionAPI]
category = AdminAPI
display_name = List of Survey Question
privilege_parameter = Survey Questions$$$view
description = The API is used to get the list of survey question.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_survey/exp_sp_administration_surveyquestions/exp_sp_administration_surveyquestions.inc
method_name = listSurveyQuestionsApi;the name of the function that is to be executed when this api is called.
params.start = N > Enter the starting point from which the Survey Question records are displayed. Only numerical values are accepted. Default value: 0
params.limit = N > Enter+only+numerical+values.+This+parameter+sets+the+number+of+records+retrieved+based+on+the+entered+value.+Default+value%3A+10 Note%3A+If+optional+parameters+are+blank%2C+then+%27start%27+and+%27limit%27+parameters+become+Mandatory
params.tagname = N > Enter the Tag associated with the Survey Question. Enter only 1 Tag per request. >
params.userid = Y >Enter the ID of the user making this API call.>1
response.id= Displays the ID of the Survey Question>1
response.question_txt= Displays the Survey Question Text>Sample Question?
response.status=  Displays the Survey Question Status code. Please refer the the question status section of the API codes document to view the list of displayed question status codes.>Active
response.language= Displays the Language of the Survey Question>English
response.question_type=  Denotes the code of the Survey Question type. Please refer to the question type section of the API Codes document to view the list of allowed survey question type codes.
response.tagname= Displays tags attached to the Survey Question
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category = list
testengine.apitestsequence = 58
testengine.verify_response_field = Id
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for Create Assessment Question
[CreateAssessmentQuestionAPI]
category = AdminAPI
display_name = Create Assessment Question
privilege_parameter = Assessment Questions$$$create
description = This API is used to create assessment questions.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_survey/exp_sp_administration_surveyquestions/exp_sp_administration_questions.inc
method_name = addNewAssessmentQuestionByRestAPI;the name of the function that is to be executed when this api is called.
params.form_state.values.survey_status = Y> Enter the status of the assessment. Please refer to the assessment status section of the API COdes document to view the list of allowed assessment statuses.>sry_qtn_sts_atv
params.form_state.values.lang_code = Y> Enter the code of the language. Please refer to the languages section of the API Codes document to view the list of allowed language codes.>cre_sys_lng_eng
params.form_state.values.question_type = Y> Enter the code for the type of assessment question. Please refer to the Assessment question section of the API Codes document to view the list of allowed codes.>sry_qtn_typ_dpn
params.form_state.values.question_txt = Y> Enter the assessment question>Sample Question?
params.form_state.values.answer_logic = N> Enter the code for the answer logic of assessment question.>sry_ans_typ_all
params.form_state.values.atleast_number = N> Enter the assessment atleast value. Note: If question code is %27sry_qtn_typ_mch%27, then %27answer_logic%27 and %27atleast_number%27 become mandatory.>1
params.form_state.values.answers_list = Y> Enter+the+assessment+question+answers.+The+answers+are+separated+by+%22%40%40%22>answ1@@answ2@@answ3
params.form_state.values.correct_answer = Y> Displays the correct answer of the assessment question>answ2
params.userid=Y > Enter the ID of the user making this API call. >1
response.Id= Displays the created Assessment ID>1
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = add
testengine.category=add
testengine.apitestsequence = 59
testengine.capture_response_field = Id ; it will used to run the update assessment question
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 50 ; number of request which can be accept per minute

;API for Update Assessment Question
[UpdateAssessmentQuestionAPI]
category = AdminAPI
display_name = Update Assessment Question
privilege_parameter = Assessment Questions$$$update
entity_type_parameter = Assessment Questions$$$id
description = This API is used to update an Assessment Question.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_survey/exp_sp_administration_surveyquestions/exp_sp_administration_questions.inc
method_name = updateAssessmentQuestionByRestAPI;the name of the function that is to be executed when this api is called.
params.form_state.values.id = Y>  Enter the ID of the Assessment Question to be updated>
params.form_state.values.survey_status = Y> Enter the Status code of the Assessment Question to be updated. Please refer to the survey status section of the API codes document to view the list of allowed status codes.>sry_qtn_sts_atv
params.form_state.values.lang_code = Y> Enter the language code of the Assessment Question. Please refer to the languages section of the API Codes document to view the list of allowed language codes.>cre_sys_lng_eng
params.form_state.values.question_type = Y> Enter the code for the type of Survey Question. Please refer to the Question type section of the API Codes document to view the list of allowed question type codes.>sry_qtn_typ_dpn
params.form_state.values.question_txt = Y> Enter the Text of the Assessment Question>Sample Question?
params.form_state.values.answer_logic = N> Enter the code for the answer logic of assessment question.>sry_ans_typ_all
params.form_state.values.atleast_number = N> Enter the assessment atleast value>1
params.form_state.values.answers_list = Y> Enter+the+Answer+options+for+the+Assessment+Question.+They+are+separated+by+%22%40%40%22.>answ1@@answ2@@answ3
params.form_state.values.correct_answer = Y> Enter the Correct answer for the Question>answ2
params.userid=Y > Enter the ID of the user making this API call. >1
response.Id= Displays the ID of the Updated Assessment Question>1
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = update
testengine.category=update
testengine.apitestsequence = 60
testengine.capture_response_field = Id ; it will used to run the update assessment question
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 50 ; number of request which can be accept per minute

;API for List Assessment Question
[ListAssessmentQuestionAPI]
category = AdminAPI
display_name = List of Assessment Question
privilege_parameter = Assessment Questions$$$view
description = The API is used to get the list of assessment question.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_survey/exp_sp_administration_surveyquestions/exp_sp_administration_surveyquestions.inc
method_name = listAssessmentQuestionsApi;the name of the function that is to be executed when this api is called.
params.start = N > Enter+the+starting+point+from+which+the+Training+Plan+records+are+displayed.+Only+numerical+values+are+accepted.+Default+value%3A+0 >0
params.limit = N > Enter+only+numerical+values.+This+parameter+sets+the+number+of+records+retrieved+based+on+the+entered+value.+Default+value%3A+10%0ANote%3A+If+optional+parameters+are+blank%2C+then+%27start%27+and+%27limit%27+parameters+become+Mandatory >10
params.tagname = N > Enter the Tag associated with the Survey Question. Enter only 1 Tag per request. >
params.userid = Y > Enter the ID of the user making this API call. >1
response.id= Displays the ID of the Assessment Question>1
response.question_txt= Displays Text of the Assessment Question>Sample Question?
response.code= Displays Code of the Assessment Question>Code001
response.status=  Displays Status of the Assessment Question. Please refer to the Assessment question status section of the API Codes document to view the list of displayed assessment question statuses.>Active
response.language= Displays Language of the Assessment Question. Please refer to the Language section of the API Codes document to view the list of available Languages.>English
response.question_type= Displays the type of the Assessment Question. Please refer to the Question type section of the API Codes document to view the list of displayed question types.>Dropdown
response.tagname= Displays tags attached to the Assessment Question
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category = list
testengine.apitestsequence = 61
testengine.verify_response_field = Id
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for Create Survey Group
[CreateSurveyGroupAPI]
category = AdminAPI
display_name = Create Survey Group
privilege_parameter = Survey$$$create
entity_type_parameter = Survey$$$survey_id
description = The API is used to create groups in a Survey.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_survey/exp_sp_administration_surveydetails/exp_sp_administration_survey_assesment_question.inc
method_name = addNewSurveygroupByRestAPI;the name of the function that is to be executed when this api is called.
params.groupobj.survey_id = Y> Survey ID in which Groups are to be created>
params.groupobj.survey_group = Y> Name of the Survey Group that has to be created>REST_API_Survey_Group_VERSION
params.userid=Y > Enter the ID of the user making this API call. >1
response.Id= Displays ID of the Survey Group created>1
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = add
testengine.category=add
testengine.apitestsequence = 62
testengine.capture_response_field = Id ; it will used to run the update survey group
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 50 ; number of request which can be accept per minute

;API for Attach Questions To Survey
[AttachQuestionsToSurveyAPI]
category = AdminAPI
display_name = Attach questions to survey
privilege_parameter = Survey$$$update
entity_type_parameter = Survey Questions$$$survey_question_id$~$Survey$$$survey_id
description = The API is used to attach questions to a survey.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_survey/exp_sp_administration_surveydetails/exp_sp_administration_survey_assesment_question.inc
method_name = attachQuestionToSurveyByRestAPI;the name of the function that is to be executed when this api is called.
params.groupobj.survey_id = Y> Enter the ID of the Survey to which questions are to be added>
params.groupobj.survey_group_id = Y> Enter the ID of the Groups in the Survey>
params.groupobj.survey_question_id = Y> Enter the ID of the Questions to be attached.Note: Multiple question ids cannot be possible with single API call.>
params.groupobj.mandatoryOption = N> Denotes+whether+the+Assessment+is+Mandatory+or+not.%0AThe+allowed+values+are+%22Y%22%2C+%22N%22.>Y
params.userid=Y >Enter the ID of the user making this API call. >1
response.Id= Displays ID of the Questions attached>1
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = add
testengine.category=add
testengine.apitestsequence = 63
testengine.capture_response_field = Id ; it will used to run the update survey question
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 50 ; number of request which can be accept per minute

;API for Update Attached Questions In Survey
[UpdateAttachedQuestionsInSurveyAPI]
category = AdminAPI
display_name = Update questions added to survey
privilege_parameter = Survey$$$update
description = The API is used to update questions added to a survey.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_survey/exp_sp_administration_surveydetails/exp_sp_administration_survey_assesment_question.inc
method_name = updateAttachedQuestionsInSurveyByRestAPI;the name of the function that is to be executed when this api is called.
params.groupobj.group_question_id = Y> Enter the mapping ID of the survey question>
params.groupobj.survey_group_id = N> Enter the ID of the Survey/Assessment Group to which the Question belongs>
params.groupobj.mandatoryOption = N> Set to mark the question as Mandatory or Optional.>Y
params.userid=Y > Enter the ID of the user making this API call.>1
response.Id= Displays the updated mapping ID of the Survey Question.>1
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = add
testengine.category=add
testengine.apitestsequence = 64
testengine.capture_response_field = Id ; it will used to run the update survey question
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 50 ; number of request which can be accept per minute

;API for List Attached Questions In Survey
[ListAttachedQuestionsInSurveyAPI]
category = AdminAPI
display_name = List of questions attached to survey
privilege_parameter = Survey$$$view
entity_type_parameter = Survey$$$survey_id
description = The API is used to list the questions attached to a survey.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_survey/exp_sp_administration_surveydetails/exp_sp_administration_survey_assesment_question.inc
method_name = listAttachedQuestionInSurveyByRestAPI;the name of the function that is to be executed when this api is called.
params.survey_id = Y> Enter the Survey ID>
params.userid=Y > Enter the ID of the user making this API call. >1
response.survey_group_question_id = Displays the group ID of the Question attached to the Survey>1
response.question_txt= Displays the text of the Question>Sample Question?
response.survey_question_id = Displays the ID of the Question attached to the Survey>1
response.question_status= Displays the Status of the Survey Question. Please refer to the Survey Question status of the API Codes document to view the list of displayed Survey Question statuses.>Active
response.question_type= Displays the type of the Survey Question. Please refer to the question types section of the API Codes document to view the list of displayed question types.>Dropdown
response.survey_group_title= Displays the Title of the Group to which the Question is attached>Group 1
response.survey_group_sequence= Displays the sequence of the Question inside the Group>1
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 65
testengine.capture_response_field = Id ; it will used to run the update survey question
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for Attach Questions To Assessment
[AttachQuestionsToAssessmentAPI]
category = AdminAPI
display_name = Attach questions to assessment
privilege_parameter = Assessment$$$update
entity_type_parameter = Assessment Questions$$$survey_question_id$~$Assessment$$$survey_id
description = The API is used to attach questions to an assessment
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_survey/exp_sp_administration_surveydetails/exp_sp_administration_survey_assesment_question.inc
method_name = attachQuestionToSurveyByRestAPI;the name of the function that is to be executed when this api is called.
params.groupobj.survey_id = Y> Enter the ID of the Assessment to which questions are to be added>
params.groupobj.survey_group_id = Y>Enter the ID of the Groups in the Assessment>
params.groupobj.survey_question_id = Y> Enter the ID of the Questions to be attached>
params.groupobj.sequence = Y> Enter the Sequence of the Assessment Questions>
params.groupobj.mandatoryOption = N> Enter whether the Assessment is Mandatory or not>Y
params.groupobj.survey_score = Y> Enter the score of the assessment questions>25
params.userid=Y >Enter the ID of the user making this API call. >1
response.Id= Displays ID of the Questions attached>1
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = add
testengine.category=add
testengine.apitestsequence = 66
testengine.capture_response_field = Id ; it will used to run the update assessment question
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for Update Attached Questions In Assessment
[UpdateAttachedQuestionsInAssessmentAPI]
category = AdminAPI
display_name = Update questions added to assessment
privilege_parameter = Assessment$$$update
description = The API is used to update questions attached to an assessment.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_survey/exp_sp_administration_surveydetails/exp_sp_administration_survey_assesment_question.inc
method_name = updateAttachedQuestionsInSurveyByRestAPI;the name of the function that is to be executed when this api is called.
params.groupobj.group_question_id = Y> Enter the ID of the survey.>
params.groupobj.survey_group_id = N> Enter the ID of the Assessment Group to which the Question belongs>
params.groupobj.sequence = N> Enter the Sequence of the Assessment Question>
params.groupobj.survey_score = N> Enter the Score of the Assessment Question>25
params.groupobj.mandatoryOption = N> Enter+the+survey+is+mandatory+or+non+mandatory.Possible+values+is+%27Y%27+or+%27N%27>Y
params.userid=Y > Enter the ID of the user making this API call.>1
response.Id= Displays the ID of the Updated Question >1
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = add
testengine.category=add
testengine.apitestsequence = 67
testengine.capture_response_field = Id ; it will used to run the update survey question
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 50 ; number of request which can be accept per minute

;API for List Attached Questions In Assessment
[ListAttachedQuestionsInAssessmentAPI]
category = AdminAPI
display_name = List of questions attached to assessment
privilege_parameter = Assessment$$$view
entity_type_parameter = Assessment$$$survey_id
description = The API is used to list the questions attached to an assessment.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_survey/exp_sp_administration_surveydetails/exp_sp_administration_survey_assesment_question.inc
method_name = listAttachedQuestionInSurveyByRestAPI;the name of the function that is to be executed when this api is called.
params.survey_id = Y> Enter the Assessment ID.>
params.userid=Y > Enter the ID of the user making this API call.>1
response.survey_group_question_id = Displays the group ID of the Question attached to the Assessment.>1
response.question_txt= Displays the text of the Question>Sample Question?
response.survey_question_id = Displays the ID of the Question attached to the Assessment>1
response.question_status= Displays the Status of the Assessment Question. Please refer to the Assessment Question status of the API Codes document to view the list of displayed Assessment Question statuses.>Active
response.question_type= Displays the type of the Assessment Question. Please refer to the question type section of the API Codes document to view the list of displayed Question types.>Dropdown
response.survey_group_title= Displays the Title of the Group to which the Question is attached>Group 1
response.survey_group_sequence= Displays the sequence of the Question inside the Group.>1
response.survey_score= Displays the Score allocated to the Question.>20
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 68
testengine.capture_response_field = Id ; it will used to run the update survey question
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for Session Creation ILT Class
[SessionCreationILTAPI]
category = AdminAPI
display_name = Create ILT class session
privilege_parameter = Course/Class$$$create
entity_type_parameter = Class$$$class_id
description = The API is used to create sessions for an Instructor Led Class.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_learning/exp_sp_administration_session_details.inc
method_name = addNewSessionByRestAPI;the name of the function that is to be executed when this api is called.
params.form_state.values.course_id= Y> Enter the ID of the Course under which the ILT Class is present >
params.form_state.values.class_id= Y> Enter the ID of the Class for which the Session has to be created >
params.form_state.values.session_details_fieldset.session_details.instructor_id = N> Enter the ID of the Instructor. Multiple values can be entered by adding commas.>
params.form_state.values.session_name =Y> Enter the Name given to the Session >Session 1
params.form_state.values.start_date =Y> Enter+the+Date+on+which+the+Session+is+to+be+held+in+YYYY-MM-DD+format. >2012-05-25
params.form_state.values.end_date =Y> Enter+the+Date+on+which+the+Session+is+to+be+held+in+YYYY-MM-DD+format. >2012-05-25
params.form_state.values.days =N> Enter+the+Days+on+which+the+Session+is+to+be+held. >Mon
params.form_state.values.start_hours =Y> Enter the Starting Time for the Session.Time format is %27HH:MM%27 >09:00
params.form_state.values.end_hours =Y> Enter the Ending Time for the Session.Time format is %27HH:MM%27 >11:00
params.userid = Y > Enter the ID of the user making this API call. >1
response.id= Displays the ID of the Session created for ILT Class >1
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = add
testengine.category= add
testengine.apitestsequence = 69
testengine.capture_response_field = Id ; it will used to run the update ILT session
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 40 ; number of request which can be accept per minute

;API for Session Updation ILT Class
[SessionUpdationILTAPI]
category = AdminAPI
display_name = Update ILT class session
privilege_parameter = Course/Class$$$update
entity_type_parameter = Class$$$class_id
description = The API is used to update sessions for an Instructor Led Class.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_learning/exp_sp_administration_session_details.inc
method_name = updateSessionByRestAPI;the name of the function that is to be executed when this api is called.
params.form_state.values.hid_session_id= Y> Enter the ID of the Session to be updated>
params.form_state.values.class_id= Y> Enter the ID of the Class for which the Session has to be created >
params.form_state.values.session_details_fieldset.session_details.instructor_id = N>Enter the ID of the Instructor for the Session. Multiple values can be entered by adding commas.>
params.form_state.values.session_name =Y> Enter the Name for the Session>Session 1
params.form_state.values.start_date =Y> Enter+the+Date+on+which+the+Session+is+to+be+held+in+YYYY-MM-DD+format.>2012-05-25
params.form_state.values.start_hours=Y> Enter the Start Time for the Session in HH:MM format. Time is in 24 hour format. >09:00
params.form_state.values.end_hours =Y> Enter the End Time for the Session in HH:MM format. Time is in 24 hour format.>11:00
params.userid = Y > Enter the ID of the user making this API call. >1
response.id= Displays the ID for the Updated Session >1
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = update
testengine.category= update
testengine.apitestsequence = 70
testengine.capture_response_field = Id ; it will used to list the ILT session
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 40 ; number of request which can be accept per minute

;API for Session Creation VC Class
[SessionCreationVCAPI]
category = AdminAPI
display_name = Create VC class session
privilege_parameter = Course/Class$$$create
entity_type_parameter = Class$$$class_id
description = The API is used to create sessions for an Virtual Class.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_learning/exp_sp_administration_session_details.inc
method_name = addNewVCSessionByRestAPI;the name of the function that is to be executed when this api is called.
params.form_state.values.course_id= Y>  Enter the ID of the Course under which the Class is present >
params.form_state.values.class_id= Y> Enter the ID of the Class for which the Session is to be created >
params.form_state.values.session_name =Y> Enter the name of the Session >
params.form_state.values.session_details_fieldset.session_details.meeting_type =Y> Enter the Meeting type code of the Session. Please refer to the Meeting type section of the API Codes document to view the list of allowed meeting type codes.
params.form_state.values.session_meeting_id =N> Enter the Meeting ID for the Session >
params.form_state.values.session_presenter_url =N> Enter+the+URL+for+the+Instructor.+Note%3A+Mandatory+for+the+Session+type+%27Other%27 >
params.form_state.values.session_attendee_url =N> Enter+the+URL+for+the+Learner+Note%3A+Mandatory+for+the+Session+type+%27Other%27 >
params.form_state.values.session_attende_password =N> Enter+the+session+password+for+the+Learner.+Note+%3A+Mandatory+for+the+Session+type+%27Other%27+Non-Mandatory+for+the+Session+type+%27Expertus+meeting%27 >
params.form_state.values.session_presenter_password =N> Enter+the+session+password+for+the+Instructor.+Note+%3A+Mandatory+for+the+Session+type+%27Other%27+Non-Mandatory+for+the+Session+type+%27Expertus+meeting%27 >
params.form_state.values.session_details_fieldset.session_details.instructor_id = N> Enter the ID of the Instructor for the Session. Multiple values can be entered by adding commas.>
params.form_state.values.session_details_fieldset.session_details.presenter_id = N> Enter the ID of the Presenter for the Session. Field is mandatory if instructor is selected.>
params.form_state.values.session_details_fieldset.session_details.time_zone=Y> Enter the Timezone for the Session. Please refer to the timezone section of the API Codes document to view the list of allowed timezones. >cre_sys_tmz
params.form_state.values.start_date =Y> Enter+the+Date+on+which+the+Session+is+to+be+held+in+YYYY-MM-DD+format. >2012-05-25
params.form_state.values.end_date =N> Enter+the+Date+on+which+the+Session+is+to+be+held+in+YYYY-MM-DD+format.+Note%3A+Mandatory+for+the+Session+type+%27Expertus+Meeting%27+and+%27WebEx+Meeting%27+Non-Mandatory+for+the+Session+type+%27Other+Meeting%27 >2012-05-25
params.form_state.values.days =N> Enter+the+Days+on+which+the+Session+is+to+be+held. >Mon
params.form_state.values.start_hours=Y> Enter the Starting Time for the Session in HH:MM format. Time is in 24 hour format. >09:00
params.form_state.values.end_hours =Y> Enter the  Ending Time for the Session in HH:MM format. Time is in 24 hour format. >11:00
params.userid = Y > Enter the ID of the user making this API call. >1
response.id= Displays the ID of the Session created for VC Class >1
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = add
testengine.category= add
testengine.apitestsequence = 71
testengine.capture_response_field = Id ; it will used to run the update VC session
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 40 ; number of request which can be accept per minute

;API for Session Updation VC Class
[SessionUpdationVCAPI]
category = AdminAPI
display_name = Update VC class session
privilege_parameter = Course/Class$$$update
entity_type_parameter = Class$$$class_id
description =  This API is used to update sessions for an Virtual Class.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_learning/exp_sp_administration_session_details.inc
method_name = updateVCSessionByRestAPI;the name of the function that is to be executed when this api is called.
params.form_state.values.hid_session_id= Y> Enter the ID of the Session to be updated>
params.form_state.values.class_id= Y> Enter the ID of the Class for which the Session is to be created >
params.form_state.values.session_name =Y> Enter the Name of the Session>
params.form_state.values.session_details_fieldset.session_details.meeting_type =Y> Enter the Meeting type code of the Session. Please refer to the meeting type section of the API Codes document to view the list of allowed meeting type codes.
params.form_state.values.session_meeting_id =N> Enter the Meeting ID for the Session>
params.form_state.values.session_presenter_url =N> Enter+the+URL+of+the+Instructor.+Note+%3A+Mandatory+for+the+Session+type+%27Other%27 >
params.form_state.values.session_attendee_url =N> Enter+the+URL+of+the+Learner.+Note+%3A+Mandatory+for+the+Session+type+%27Other%27 >
params.form_state.values.session_attende_password =N> Enter+the+Session+password+for+the+Learner.+Note+%3A+Mandatory+for+the+Session+type+%27Other%27++Non-Mandatory+for+the+Session+type+%27Expertus+meeting%27>
params.form_state.values.session_presenter_password =N> Enter+the+Session+password+for+the+Instructor.+Note%3AMandatory+for+the+Session+type+%27Other%27+Non-Mandatory+for+the+Session+type+%27Expertus+meeting%27.>
params.form_state.values.session_details_fieldset.session_details.instructor_id = N>Enter the ID of the Instructor for the Session. Multiple values can be entered by adding commas.>
params.form_state.values.session_details_fieldset.session_details.presenter_id = N> Enter the ID of the Presenter for the Session. Field is mandatory if instructor is selected.>
params.form_state.values.session_details_fieldset.session_details.time_zone=Y> Enter the Time Zone for the Session. Please refer to the Timezone section of the API Codes document to view the list of allowed timezones.
params.form_state.values.start_date =Y> Enter+the+Date+on+which+the+Session+is+to+be+held+in+YYYY-MM-DD+format.>2012-05-25
params.form_state.values.start_hours=Y> Enter the Start Time for the Session in HH:MM format. Time is in 24 hours >09:00
params.form_state.values.end_hours =Y> Enter the End Time for the Session in HH:MM format. Time is in 24 hours. >11:00
params.userid = Y > Enter the ID of the user making this API call. >1
response.id= Displays the ID of the Updated Session >1
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = add
testengine.category= add
testengine.apitestsequence = 72
testengine.capture_response_field = Id ; it will used to run the update VC session
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 40 ; number of request which can be accept per minute

;API for Catalog Access Control
[CatalogAccessControlAPI]
category = AdminAPI
display_name = User Catalog Access
description = The API is used to create/update the Control for Catalog Access.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_catalog_access/exp_sp_administration_catalog_access.module
method_name = addCatalogAccessByAPI;the name of the function that is to be executed when this api is called.
params.form_state.values.entity_id= Y> Enter ID of the Entity which the access is to be set.>
params.form_state.values.entity_type= Y> %0ADenotes+the+type+of+entity+which+the+access+is+to+be+set.+The+allowed+values+are+%22cre_sys_obt_crs%22+for+Courses%2C++%22cre_sys_obt_cls%22+for+Classes%2C+%22cre_sys_obt_crt%22+for+Certification%2C+%22cre_sys_obt_cur%22++for+Curricula%2C+%22cre_sys_obt_trn%22+for+Learning+Plan%2C+%22cre_usr%22+for+User%2C+%22cre_org%22+for+Organization+%2C+%22cre_sec%22+for+Groups%2C+%22sry_det_typ_sry%22++for+Survey%2C+%22sry_det_typ_ass%22+for+Assessment%2C+%22sry_det_typ_sry_qus%22+for+Survey+Question%2C+%22sry_det_typ_ass_qus%22+for+Assessment+Question%2C+%22cre_sys_obt_cnt%22+for+Content%2C+%22cbn_anm_typ_ban%22+for+Banner%2C+%22cre_ntn%22+for+Notification%2C+%22cme_ord%22+for+Order%2C+%22cme_dis%22+for+Discount.%0A>cre_sys_obt_cls
params.form_state.values.group_mro = N> Denotes+Mandatory%2FRecommended%2FOptional+attributes+that+can+be+associated+with+the+Groups.+Values+entered+contain+a+concatenated+string+of+group+names+and+associated+mro+codes+with+%3A%3A+separator.%0AMultiple+values+can+be+entered+by+adding+commas.+The+allowed+values+are+%22cre_sys_inv_man%22+for+Mandatory+attributes%2C+%22cre_sys_inv_opt%22+for+Optional+attributes+and++%22cre_sys_inv_rec%22+for+Recommended+attributes.%0AFor+Example+-+%22Learner+group1%3A%3Acre_sys_inv_man.%22 %0A%3Cb%3ENote%3C%2Fb%3E%3A+The+MRO+access+is+not+applicable+for+Admin+groups,+Survey,+Assessment,+Manage+and+Commerce+modules>group1::cre_sys_inv_man
params.form_state.values.user_mro = N> Denotes+Mandatory%2FRecommended%2FOptional+attributes+that+can+be+associated+to+the+Users.+Values+entered+contain+a+concatenated+string+of+username+and+associated+mro+codes+with+%3A%3A+separator.%0AMultiple+values+can+be+entered+by+adding+commas.+The+allowed+values+are+%22cre_sys_inv_man%22+for+Mandatory+attributes%2C+%22cre_sys_inv_opt%22+for+Optional+attributes+and++%22cre_sys_inv_rec%22+for+Recommended+attributes.%0AFor+Example+-+%22testuser1%3A%3Acre_sys_inv_man.%22 %0A%3Cb%3ENote%3C%2Fb%3E%3A+This+will+be+applicable+only+for+Course,+Class+and+Training+Program>user1::cre_sys_inv_man
params.userid = Y > Enter the ID of the user making this API call. >1
response.id= Displays+the+status+of+setting+access+to+an+entity.+%28%22success%22+or+%22Failure%22%29.>1
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = add
testengine.category= add
testengine.apitestsequence = 73
testengine.capture_response_field = id ; it will used to run the MRO control
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 50 ; number of request which can be accept per minute

;API for Get Pre-requisites
;[GetPreRequisitesAPI]
;category = LearnerAPI
;display_name = Get Pre-requisites
;description = The API is used to retrieve the list of pre-requisites.
;ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_learning/exp_sp_administration_prerequisite.inc
;method_name = fetchPrerequisiteList;the name of the function that is to be executed when this api is called.
;params.entity_id= Y> Course Id for Pre-Requisites >1
;params.entity_type= Y> Pre-requisites Entity Type. It is either cre_sys_obt_trp/cre_sys_obt_crs >cre_sys_obt_crs
;response.id= Pre-requisite Id>1
;response.object_id= Pre-requisite Entity Id>1
;response.associated_object_id= Associated Id>1
;response.title= Title of the course> Sample1
;response.code= Code of the course> Code1
;api_owner.name = Gaja;the developer's name who develops the functionality
;api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
;test_category = list
;testengine.category=list
;testengine.apitestsequence = 74
;testengine.capture_response_field = Id ; it will used to run the update org
;customer_display = no ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for Get Course Pre-requisites
[GetCoursePreRequisitesAPI]
category = LearnerAPI
display_name = Get Course Pre-requisites
description = The API is used to retrieve the list of pre-requisites courses.
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_prerequisite/exp_sp_prerequisite.inc
method_name = getCatalogPrerequisite;the name of the function that is to be executed when this api is called.
params.courseId= Y> Course Id for Pre-Requisites >1
params.userid = Y > User Id >1
response.id= Id>1
response.pretitle= Title of the course> Sample1
response.precode= Code of the course> Code1
response.enrollstatus= Enorll Status of the course register> N
response.mandatory= Is mandatory> N
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 75
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = no ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for Get Location Details
[GetLocationDetailsAPI]
category = AdminAPI
display_name = Get location details
description = The API is used to retrieve the location details based-on  given location name.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_manage/exp_sp_administration_location/exp_sp_administration_resource_location.inc
method_name = getLocationdetailsByRestAPI;the name of the function that is to be executed when this api is called.
params.LocationName= Y> Location Name >Chennai
params.userid = Y > User Id >1
response.id= Location Id>1
response.name= Location Name >Chennai
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 76
testengine.capture_response_field = Id ; it will used to retrive location details
customer_display = no ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for logging ILT Attendance through smart device.
[LogILTAttendanceAPI]
category = LearnerAPI
display_name = Log entry for ILT Attendance.
description = The api is used to create the entry in ilt attendance log
ORM_file = /sites/all/modules/core/exp_sp_core/exp_sp_core.inc
method_name = insILTAttendance;the name of the function that is to be executed when this API is called.
params.userid= Y> User Id>1
params.sessionid= Y> ILT Session ID>1
params.instructor_feedback= N> Instructor Feedback>1
params.status= N> Attended or Completed >Attended
params.score= N> Score>0
params.reached= N> Arrival Time>24223435235
params.regid= N> RegistrationID>12
params.instructor_id= N> Instructor Id>1
params.latitude= N> Latitude>80
params.longitude= N> Longitude>12
params.altitude= N> Altitude>12
params.learnerid= N> LearnerId used by instructor>12
response.id=Insert Log Id >10
response.learnerid=User Id>1
response.sessionid=ILT Session ID>1
response.instructor_feedback=Instructor Feedback>1
response.status=Attended or Completed >Attended
response.score=Score>0
response.reached=Arrival Time>24223435235
response.regid=Reg Id>12
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 77
customer_display = no ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 40 ; number of request which can be accept per minute

;API for update ILT Attendance through smart device.
[UpdateILTAttendanceAPI]
category = LearnerAPI
display_name = Update entry for ILT Attendance.
description = The API is used to create the entry in ILT attendance log
ORM_file = /sites/all/modules/core/exp_sp_core/exp_sp_core.inc
method_name = updILTAttendance;the name of the function that is to be executed when this api is called.
params.action= N> Actions>Update Status
params.id= N> Attendance Id>1
params.userid= N> User Id>1
params.fullname= N> User name>Admin
params.sessionid= N> ILT Session ID>1
params.instructor_feedback= N> Instructor Feedback>1
params.status= N> Attended or Completed >Attended
params.score= N> Score>0
params.reached= N> Arrival Time>24223435235
response.id=Insert Log Id >10
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 78
customer_display = no ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 40 ; number of request which can be accept per minute

;API for listing ILT Attendance through smart device.
[ListILTAttendanceAPI]
category = LearnerAPI
display_name = Listing ILT Attendance.
description = The api is used to list the entry in ilt attendance log
ORM_file = /sites/all/modules/core/exp_sp_core/exp_sp_core.inc
method_name = listILTAttendance;the name of the function that is to be executed when this api is called.
params.userid= Y> User Id>1
params.sessionid= N> ILT Session ID>1
params.id= N> Attendance ID>
params.learnerid= N> Learner ID>1
params.action= Y> Action of the request. Available actions: GetInstructorData,ListParticipants,ListParticipantsCE>ListParticipants
params.instructor_id= N> Instructor Id>1
response.id=Insert Log Id >10
response.sessionid=Session Id >10
response.learnerid=Learner Id >10
response.learnername=Learner Name >Admin
response.job_title=Job Title>Data Manager
response.instructor_feedback= Instructor Feedback>1
response.status=Attended or Completed > Attended
response.score=Score>0
response.reached=Reached Time>46456
response.regid=Reg Id>12
response.photo_path=User Image Path>
response.request_from=request from_user_id>
response.request_to=request to user_id>
response.approved=id>
response.exchange_id=id>
response.mobile_no=User mobile no>
response.phone_no=User phone no>
response.email=User email>
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 79
customer_display = no ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for Learner Profile
[LearnerProfileAPI]
category = LearnerAPI
display_name =  Get User Profile
description = The API is used to get the User profile.
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning.inc
method_name = learnerProfileAPI;the name of the function that is to be executed when this api is called.
params.userid = Y> User Id>1
params.learnerid = Y> Learner Id>1
params.action = N> Login>Login
params.rows = N> rows>Enter the number of rows to be displayed. Accepts only numerical values.>10
params.page = N> page>This field is used to display records from a specific page
params.device_token = N> Registered device token>Registered device token
params.currency_code = N> Changed currency type>USD
response.id= User Id>1
response.first_name= User first name>ExpertusONE
response.last_name= User Last name>Admin
response.email= email>email
response.phone_no= phone_no>phone_no
response.mobile_no= mobile_no>mobile_no
response.organization= User organization>ExpertusONE
response.timezone= User timezone>Asia/Calcutta
response.is_instructor= Is user instructor Possible values Y,N>N
response.is_manager= Is user manager > Possible values Y,N
response.is_training_admin= Is training admin. Possible values Y,N>N
response.about_me= User Information>
response.job_title = User Job Title>
response.person_pref_language= User preferred Language>Asia/Calcutta
response.person_location_city= User Location Name>
response.person_location_name= User Location Name>
response.avatarimage = Avatar Image path>
response.totalpoints = Get the total user points count>
response.badges = Get the badges count >
response.skillset = view skill details>
response.certificates = view certificate details>
response.activitydetails = view recent activity details>
response.courselevelview = Catalog view Course/Class>Class
response.commerce_enabled = commerce value >
response.enabledLanguages = enabledLanguages en-us>
response.iosurl = iosurl >
response.androidurl = androidurl >
response.cdn_status = cdnstatus >
response.video_streaming = video streaming >
response.notification_notviewed = androidurl >
response.preferred_currency = preferred currency >USD
response.preferred_currency_name = preferred currency >Unites States Dollar
response.min_price = Minimum price >0
response.max_price = Maximum price >10000
response.enabled_currency = Enabled currency count >1
;response.multi_currency = Multi currency enabled >
response.activitycount = Return total number of activity count >
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 80
testengine.capture_response_field = Id ; it will used to run the user profile
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 50 ; number of request which can be accept per minute

;API for List Instructor Classes
[ListInstructorClassesAPI]
category = InstructorAPI
display_name = List of an Instructors classes
description = The API is used to list the classes to which the user is set as an instructor.
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_instructor_desk/exp_sp_instructor_desk.inc
method_name = getInstructorClasses;the name of the function that is to be executed when this api is called.
params.UserID = Y> Enter the Instructors ID>1
params.regstatuschk = Y> Enter the registration status. Please refer to the registration status section of the API Codes document to view the list of allowed registration statuses.>scheduled
params.page = N>This+field+is+used+to+display+records+from+a+specific+page%2C+to+be+used+in+tandem+with+%22rows%22+field.+For+eg+-+If+there+are+10+pages+with+15+records+displayed+in+each+page%2C+then+entering+%223%22+in+this+field+will+only+display+the+third+page+containing+the+records+31+to+45.>1
params.rows = N>Enter the number of Rows of records need to be retrieved>10
params.sord = N>Enter the sort order by ascending or descending order >asc
params.limit= Y >Enter+only+numerical+values.+This+parameter+sets+the+number+of+records+retrieved+based+on+the+entered+value.+Default+value%3A+10%0A%0ANote%3A+If+optional+parameters+are+blank%2C+then+%27start%27+and+%27limit%27+parameters+become+Mandatory>1
params.userid = Y >Enter the ID of the user making this API call.>1
params.delivery_type = N >delivery_type >lrn_cls_dty_ilt
params.searchtext = N > Enter the class name to filter.>ilt
params.sortBy = N > Sort+by+specific+value.+Possible+values+are+%27AZ%27+for+title+to+sort+in+ascending+order%2C+%27ZA%27+to+sort+title+in+descending+order%2C+%27dateOld%27+to+list+from+old+data%2C+%27dateNew%27+to+list+data+from+recent+data%2C+%27type%27+to+sort+by+delivery+type+code+in+ascending+order%2C+Mandatory+to+list+mandatory+and+compliance+data+first.>AZ
params.location = N > Type location name or address of class location. For using address, enter '~' between address fields. For example: 'Location name~Address 1~Address 2~City~Pin code~State~Country' >chennai
params.startdate = N > +Enter+the+start+date+of+the+class+in+YYYY-MM-DD+format>YYYY-MM-DD
params.enddate = N > +Enter+the+end+date+of+the+class+in+YYYY-MM-DD+format>YYYY-MM-DD
response.id = Displays the class ID>1
response.courseid = Displays the ID of the course>1
response.course_title= Displays the title of the course>Web designing
response.cls_title= Displays the title of the class>3D Studio Max
response.cls_code= Displays the class code>3d
response.description= Displays the short description of the class>Test desc
response.descriptionfull=Displays the full description of the class>Test desc
response.delivery_type=Displays the delivery type of the Class. Please refer to the delivery type section of the API Codes document to view the list of displayed delivery types.>Classroom
response.delivery_type_code=Displays the code of the delivery type. Please refer to the delivery type section of the API Codes document to view the list of allowed delivery type codes.>lrn_cls_dty_ilt
response.basetype= Displays+the+abbreviation+of+the+Class+type.+%28%22ILT%22%2C+%22WBT%22%2C+%22VC%22%2C+%22VOD%22+for+Classroom%2C+Web+Based+Class%2C+Virtual+Class+and+Video+Class+respectively.>ILT
response.classprice= Displays the price of the class>0.00
response.language= Displays the language. Please refer to the languages section of the API Codes document to view the list of displayed languages.>English
response.updated_by= Displays the username of the User who last updated this record>1
response.updated_by_name= Displays the full name of the User who last updated this record>Admin
response.is_compliance=Displays+if+the+enrolled+class+is+compliance+or+not.+%221%22+denotes+the+compliance+class+and+%220%22+for+not+a+compliance+class
response.mro=Displays+whether+the+Class+is+Mandatory%2Frecommended%2Foptional.+Please+refer+to+the+MRO+section+of+the+API+codes+document+to+view+the+list+of+MRO+codes+displayed.>
response.mro_id=Displays MRO code of the class. Please refer to the MRO section of the API codes document to view the list of MRO codes displayed.>
response.MarkComplete=+Displays+whether+the+instructor+can+mark+a+class+as+complete.+%28%22Y%22+or+%22N%22%29.>Y
response.launch=  Displays the launch details for only Virtual class.>Array format
response.launch.LaunchType= Displays+the+delivery+type+base+of+the+virtual+class+%27VC%27.
response.launch.ContentType= Null.
response.launch.LearnerLaunchURL= Displays the meeting URL provided for attendee.
response.launch.PresenterLaunchURL= Displays the meeting URL provided for Presenter..
response.launch.sessionId= Displays the meeting URL provided for Presenter.
response.launch.SessionType = Displays the session type of the class.Please refer to the Session type section of the API codes document to view the list of Virtual class Session codes.
response.sessionDetails=  Displays the class session instructor details.>Array format
response.sessionDetails.session_instructor_id= Displays the ID of the instructor for the class.
response.sessionDetails.instructorName= Displays the name of the instructor for the class.
response.classStatus=Displays+the+status+of+the+class.+%28%22scheduled%22+or+%22completed%22%29.>Completed or Scheduled
response.survey_status= Displays the status of the survey. Please refer to the survey status section of the API codes document to view the list of survey statuses displayed.>Attached survey id
response.survey_completed_count= Displays the count of users who attended the survey for the class.>Attached survey id
response.assessment_status=  Display the status of the assessment. Please refer to the assessment status section of the API codes document to view the list of assessment statuses displayed.>Attached survey id
response.assessment_completed_count= SDisplays the count of users who attended the assessment for the class.>Attached survey id
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 81
testengine.capture_response_field = Id ; it will used to run the update survey question
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 50 ; number of request which can be accept per minute

;API for Instructor Mark Completion
[InstructorMarkCompletionAPI]
category = InstructorAPI
display_name = API for marking a users enrollment as completed by Instructor
description = The API is used by instructor to mark complete users registration.
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_instructor_desk/exp_sp_instructor_desk.inc
method_name = markCompleteUserFromCourseClassByAPI;the name of the function that is to be executed when this api is called.
params.user_id = Y > ID of the Instructor who is making this API call >1
params.userid = Y > Enter only numerical values. Enter the ID of the Instructor making this API call.>1
params.regids = Y> Registration ID of the learner. Multiple values can be entered by adding commas>43,44
params.classid = Y> Enter+the+ID+of+the+Instructor%27s+Class.>23
params.completiondate = Y>Enter+the+Course+Completion+Date+for+the+learner+in+the++mm-dd-yyyy+format>
params.score = Y> Enter+the+learner%27s+Score+for+the+Class>100
params.grade = Y> Enter+the+learner%27s+Grade+for+the+Class>Pass
params.attendancetype = Y> Enter+attendance+status+for+the+learner.+Allowed+values+are+%22attended%22+and+%22noshow%22.>attended
params.apicaller = N> For Internal purposes.>mobile
response.id = Displays the Registration ID of the learner >1
response.status = +Displays+the+Enrollment+status+of+the+learner.Possible+value+is+%22success%22.%0A%0A%0A>success
response.compdate = +Displays+the+Class+Completion+Date+for+the+learner.For+example+-+Aug+26%2C+2015%0A%0A%0A>03-26-2013
api_owner.name = Velu;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 82
testengine.capture_response_field = Id ; it will used to run the update survey question
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 40 ; number of request which can be accept per minute

;API for Listing Enrollments By Instructor
[ListEnrollmentsByInstructor]
category = InstructorAPI
display_name = List of enrollments to a class by Instructor
description = The API is used to list the enrollments per class in the my classes view
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_instructor_desk/exp_sp_instructor_desk.inc
method_name = getClassLearnerResultsByAPI;the name of the function that is to be executed when this api is called.
params.classid = Y> Enter the ID of the Class>19
params.userid = Y> Enter the ID of the user making this API call.>11
params.date_from = N >Enter+the+date+from+which+the+enrollments+should+be++displayed+in+YYYY-MM-DD+format.>2015-07-01
params.date_to = N >Enter+the+date+till+till+which+the+list+of+enrollments+should+be++displayed+in+YYYY-MM-DD+format. >2015-07-25
params.page = N>This+field+is+used+to+display+records+from+a+specific+page%2C+to+be+used+in+tandem+with+%22rows%22+field.+For+eg+-+If+there+are+10+pages+with+15+records+displayed+in+each+page%2C+then+entering+%223%22+in+this+field+will+only+display+the+third+page+containing+the+records+31+to+45.>1
params.rows = N>Enter the Rows of records need to be retrieved>10
params.sidx = N>Enter+the+parameter+on+which+basis+the+result+should+get+sorted.+The+allowed+values+are+%22enrolled_on%22+for+sorting+with+enrolled+on+date%2C+%22name%22+for+sorting+with+the+name%2C+%22reached%22+for+sorting+with+attended+time%2C+%22username%22+for+sorting+with+username%2C+%22status%22+for+sorting+with+status. >enrolled_on
params.sord = N>Enter+the+sort+results+in+order+by+ascending+or+descending.+Allowed+values+are+%22asc%22+or+%22desc%22. >asc
params.tab = N>Enter+the+status+of+class+is+to+be+displayed.+Allowed+values+are+%22scheduled%22+or+%22completed%22. >scheduled
params.limit= Y > Enter+only+numerical+values.+This+parameter+sets+the+number+of+records+retrieved+based+on+the+entered+value.+Default+value%3A+10%0A%0ANote%3A+If+optional+parameters+are+blank%2C+then+%27start%27+and+%27limit%27+parameters+become+Mandatory >1
params.searchtext= N > Enter the username if you want to search for a specific user. >searchtext
params.attendance= N > Set+to+filter+attended+and+non+attended+participants.+Allowed+values+are+%22attended%22%2C+%22notattended%22. >
response.enrollid = Displays+the+enrollment+ID+of+the+user+to+the+course%2Fclass>1
response.learnerid = Displays the learners ID>1
response.masterenrollid= Displays the enrollment ID of the user to the Training Plan>1
response.status= statusDisplays the enrollment status of the user.Please refer to the Status section of the API Codes document for the list of displayed statuses.>lrn_crs_reg_cnf
response.compstatus = Displays the Completion Status. Please refer to the Status section of the API Codes document for the list of displayed statuses.>lrn_crs_cmp_enr
response.classtitle = Displays the title of the Class>EONE Test
response.fullname = Displays the full name of the user.>Raj Sundar
response.name = Displays the last name of the user.>Raj
response.username = Displays the username of the user.>raj
response.jobtitle =Displays the Users Job Title >Raj
response.email = Displays the email ID of the user>raj@exp.com
response.phone_no = Displays the phone number>
response.mobile_no =Displays the Mobile number >
response.mandatory = Displays+the+class+is+mandatory+to+the+user+or+not.+%28%22Y%22+if+the+class+is+mandatory+and+%22null%22+if+it+is+not%29>y
response.enrolleddate = Displays+the+enrolled+date.+For+example+-+Jan+20%2C+2015>May 10, 2013
response.statustext = Displays the registration status of the enrollment. Please refer to the Status section of the API Codes document for the list of displayed statuses.>Confirmed
response.compstatustext =Displays the Completion Status of the enrollment. Please refer to the Status section of the API Codes document for the list of displayed statuses.>Enrolled
response.enrolledcount = Displays the count of enrollment for the class.>1
response.profileimage_path = Displays the profile image path > profile image path
response.surveyStatus = Displays the completion status of the survey. Please refer to the Status section of the API Codes document for the list of displayed statuses. > surveyStatus
response.assessmentStatus = Displays the completion status of the assessment Please refer to the Status section of the API Codes document for the list of displayed statuses.> surveyStatus
response.score = Displays the score of the enrolled user. > 50
response.max_score = Display the maximum score for completing the assessment. > 100
response.attendance = Displays if the User has attended the class.> Attended
response.reached =Displays+the+amount+of+time+%28in+miliseconds%29+the+User+has+spent+in+attending+the+class > 1439355414949
api_owner.name = Velu;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 83
testengine.capture_response_field = Id ; it will used to run the update survey question
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 40 ; number of request which can be accept per minute

;API for Add Tax Settings
[AddTaxAPI]
category = AdminAPI
display_name = Create Tax
privilege_parameter = Tax$$$create
description = This API is used to setup the tax.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_commerce/exp_sp_administration_commerce_tax/exp_sp_administration_commerce_tax.inc
method_name = addNewTaxByRestAPI;the name of the function that is to be executed when this api is called.
params.form_state.values.country = Y>Enter the Code of the Country name for which the tax is to be created. Please refer to the Country section of the API Codes document to view the list of allowed country codes.>IN
params.form_state.values.states = N>Enter the codes of the nexus states. Multiple values can be entered by adding commas.>
params.form_state.values.vat_number = Y>Enter the VAT number. Maximum of 10 VAT numbers can be entered by adding commas.>Vat100
params.form_state.values.lrn_cls_dty_ilt = Y>Enter the Product Code for Instructor led training Classroom.>01
params.form_state.values.lrn_cls_dty_vcl = Y>Enter the Product Code for Virtual Class.>01
params.form_state.values.lrn_cls_dty_vod = Y>Enter the Product Code for Video classroom.>01
params.form_state.values.lrn_cls_dty_wbt = Y>Enter the Product Code for Web-Based.>01
params.form_state.values.cre_sys_obt_trp = Y>Enter the Product Code for Training Plan.>01
params.form_state.values.status = Y>Set+to+mark+the+tax+as+Active+or+Inactive.+Allowed+values+for+this+field+are+%22cme_tax_sts_atv%22+to+mark+the+tax+as+active%2C+and+%22cme_tax_sts_itv%22+to+mark+the+tax+as+inactive.>cme_tax_sts_itv
params.userid = Y>Enter the ID of the user making this API call.>1
response.id= Displays the Tax ID>1
api_owner.name = Shobana N;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = add
testengine.category=add
testengine.apitestsequence = 84
testengine.capture_response_field = Id ; it will used to run the update tax
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 50 ; number of request which can be accept per minute

;API for Update Tax Settings
[UpdateTaxAPI]
category = AdminAPI
display_name = Update Tax
privilege_parameter = Tax$$$update
entity_type_parameter = Tax$$$id
description = This API is used to update the details for a Tax which has already been setup.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_commerce/exp_sp_administration_commerce_tax/exp_sp_administration_commerce_tax.inc
method_name = updateTaxByRestAPI;the name of the function that is to be executed when this api is called.
params.form_state.values.id = Y>Enter the ID of the tax. Accepts only numeric values.>
params.form_state.values.country = Y>Enter the name of the country for which the tax is applicable.>IN
params.form_state.values.states = N>Enter+the+name+of+the+states+for+which+the+tax+will+be+applicable.+%28Only+for+Nexus+States%29+Multiple+State+names+can+be+entered+by+adding+commas.>
params.form_state.values.vat_number = Y>Enter the VAT numbers of the tax>VAT100
params.form_state.values.lrn_cls_dty_ilt = Y>Enter the product code for the classroom.>01
params.form_state.values.lrn_cls_dty_vcl = Y>Enter the Product code for the virtual classroom>01
params.form_state.values.lrn_cls_dty_vod = Y>Enter the Product code for video>01
params.form_state.values.lrn_cls_dty_wbt = Y>Enter the Product code for web based>01
params.form_state.values.cre_sys_obt_trp = Y>Enter the product code for the training plan>01
params.form_state.values.status = Y> Enter+the+status+of+the+Tax.+The+allowed+values+are+%22Activate%22+and+%22InActivate%22.>cme_tax_sts_atv
params.userid = N> Enter the ID of the user making this API call.>1
response.id= tax id>1
api_owner.name = Shobana N;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = update
testengine.category=update
testengine.apitestsequence = 85
testengine.use_prev_response_field = Id ; it will used to run the update tax settings
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 50 ; number of request which can be accept per minute

;API for List the tax
[ListTaxAPI]
category = AdminAPI
display_name = List of setup Tax
privilege_parameter = Tax$$$view
description = The API is used to display the list of taxes.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_commerce/exp_sp_administration_commerce_tax/exp_sp_administration_commerce_tax.inc
method_name = listTaxByRestAPI;the name of the function that is to be executed when this api is called.
params.start = N > Enter the starting point from which the Tax records are displayed. Only numerical values are accepted. Default value: 0
params.limit = N > Enter+only+numerical+values.+This+parameter+sets+the+number+of+records+retrieved+based+on+the+entered+value.+Default+value%3A+10 Note%3A+If+optional+parameters+are+blank%2C+then+%27start%27+and+%27limit%27+parameters+become+Mandatory
params.userid = Y > Enter the ID of the user making this API call. >1
response.id= Displays the Tax ID >2
response.country= Displays the Country where the Tax is applied >IN
response.states = Displays the States under the listed Country where the Tax is applied >
response.vat_numbers = Displays the numbers of VATs applied >VATOO1
response.status = Displays+the+Tax+Status.+The+displayed+values+are+%22Active%22+and+%22Suspended%22. > VATOO1
api_owner.name = Shobana N; the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.apitestsequence = 86
testengine.verify_response_field = Id
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for Update Order
[UpdateOrderAPI]
category = AdminAPI
display_name = Update order
privilege_parameter = Orders$$$update
entity_type_parameter = Order$$$order_id
description = The API is used to update the Order.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_commerce/exp_sp_administration_order/exp_sp_administration_order.inc
method_name = updateOrderByRestAPI;the name of the function that is to be executed when this api is called.
params.form_state.values.order_id = Y>Enter the ID of the order to be updated>
params.form_state.values.change_status = Y>Enter+the+status+of+the+order.+The+allowed+values+are+%22Payment+Received%22+and+%22Canceled%22.>payment_received
params.userid = Y>Enter the ID of the user making this API call.>1
response.id= Displays the ID of the Updated Order>1
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = update
testengine.category=update
testengine.apitestsequence = 87
testengine.use_prev_response_field = Id ; it will used to run the update order
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 50 ; number of request which can be accept per minute

;API for Get Assigned Surveys/Assessments
[GetAssignedSurveysAssessmentsAPI]
category = LearnerAPI
display_name = Get assigned Survey/Assessment for a class
description =  The API is used to get the list of Surveys/Assessments assigned to a class
ORM_file = /sites/all/modules/core/exp_sp_survey/exp_sp_survey_learner/exp_sp_surveylearner.inc
method_name = getAssignedSurveysAssessmentsAPI;the name of the function that is to be executed when this api is called.
params.classid = Y>Enter the ID of the Class to which the Survey/Assessments are attached>234
params.surveytype = Y> Enter the code for survey or assessment. Please refer to the Survey & Assessment section to view the list of allowed survey/assessment type codes.>survey
params.userid = Y>Enter the ID of the user making this API call.>1
params.preStatus = N>Denotes the Pre or Post assessment Status of an Assessment>1
params.enrollId = Y> Enter only the numeric value. Enter the enrollment ID of the User who is enrolled to the class>1
response.surveyid= Displays the ID of the Survey/Assessment>2
response.surveytitle= Displays the  Title of the Survey/Assessment>My New Survey details
response.suveycode= Displays the  Code of the Survey/Assessment>346
response.aftercompletion= Null>null
response.objecttype= Object Type>cre_sys_obt_cls
response.objectid= Displays the ID of the Class to which Survey/Assessments are attached>234
response.prestatus= %0ADisplays+the+result+of+the+pre-assessment+result.+If+the+users+is+passed+in+the+pre-assessment+then+it+will+display+%271%27%2Cand+if+he+fails+then+%270%27.If+there+is+no+pre-assessment+attached+to+the+class+then+it+will+show+null.%0A>234
response.surveycount= Displays the number of times the user has attended the assessment/survey as post assessment.>15
response.no_of_attempts = Displays the number of total attempts made+on+the assessment.>1
response.attempts = Displays the number of attempts made by the user.>1
response.scoreConflict=  Null>15
response.presurveycount=  Displays the number of times the user attended the assessment/survey as a pre-assessment.>15
response.preassCount= Display the number of pre-assessments attached to the class.>15
response.progress = Display the progress.
response.attempts_taken = Display the progress.
api_owner.name = Velu;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 88
testengine.use_prev_response_field = Id ; it will used to run the update order
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for Get Survey/Assessment Questions
[GetSurveyAssessmentQuestionsAPI]
category = LearnerAPI
display_name = Get assigned Survey/Assessment question
description = The API is used to get the questions for a survey/assessment.
ORM_file = /sites/all/modules/core/exp_sp_survey/exp_sp_survey_learner/exp_sp_surveylearner.inc
method_name = getSurveyAssessmentQuestionsAPI;the name of the function that is to be executed when this api is called.
params.userid = Y>Enter the ID of the user making this API call.>48
params.SurveyID = N>Enter only the numeric values. Enter the ID of the survey to get the associated questions.>2
params.ObjectId = N>Enter the ID of the class/training plan with which the assessment/survey is associated.>235
params.ObjectType = N>Enter+the+type+of+Class%2FTraining+Plan.+Allowed+values+are+%22cre_sys_obt_crs%22+for+Course%2C+%22cre_sys_obt_cls%22+for+Class%2C+%22cre_sys_obt_crt%22+for+Certification%2C+%22cre_sys_obt_cur%22+for+Curriculum%2C+%22cre_sys_obt_trn%22+for+Learning+Plan.>cre_sys_obt_cls
params.ShowPreview = N>Set+the+preview+option+of+the+survey%2Fassessment.+%221%22+to+allow+preview+and+%220%22+to+not.>0
response.ID= Displays the ID of the survey>2
response.Code= Displays the code of the survey>SUR001
response.Title= Displays the Title of the Survey>Survey1
response.QuestionPerPage= Displays the number of questions that are displayed per page.>2
response.Attempt= Displays+if+the+user+has+taken+the+assessment%2Fsurvey.+%28%22Yes%22+or+%22No%22%29%0A%0A>No
response.Groups=  Displays+the+name+of+the+group+under+the+survey%2Fassessment.>Group1
response.SuspendData = Displays+the+suspenddata
api_owner.name = Velu;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 89
testengine.use_prev_response_field = Id ; it will used to run the update order
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for Submitting Survey
[UpdateSurveyAssessmentResultsAPI]
category = LearnerAPI
display_name = Update Survey results
description = The API is used to update the survey results.
ORM_file = /sites/all/modules/core/exp_sp_survey/exp_sp_survey_learner/exp_sp_surveylearner.inc
method_name = UpdateSurveyAssessmentResultsAPI;the name of the function that is to be executed when this api is called.
params.userid = Y>Enter the ID of the user making this API call.>48
params.type = Y>Enter+the+Type+of+the+Object.+For+the+purposes+of+this+API%2C+Enter+the+value+as+%22Survey%22.>survey
params.enrollId = N>Enter the enrollment ID of the User. Accepts only numeric values.>235
params.prestatus = N>Enter+the+result+of+the+pre-assessment.+If+the+user+has+passed+in+the+pre-assessment+then+update+%221%22%2C+and+if+he+fails+then+%220%22.+For+survey+result+update%2Cleave+it+as+null.>0
params.ObjectId = Y>Enter the ID of the Survey>235
params.ObjectType = Y>Enter the Code of the Survey>cre_sys_obt_cls
params.answers = Y>Denotes the answers of the Survey Questions. Multiple answers can be entered by adding comma as a separator.>true
response.status= +Displays+the+status+message+whether+the+Update+was+successful+or+not.+%28%22success%22+or+%22failure%22%29.>success
response.score= Displays the Survey Score>80
response.minmark=  Displays the Minimum Marks obtained by the user.Note: It will be displayed only for assessment.>10
response.maxmark= Displays the Maximum Marks obtained by the user.Note: It will be displayed only for assessment.>50
response.completionstatus= PASSED, FAILED >PASSED
response.completion_percentage= Percentage of completion > 25
api_owner.name = Velu;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 90
testengine.use_prev_response_field = Id ; it will used to run the update order
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 50 ; number of request which can be accept per minute

;Get Enrollment Summary API
[GetEnrollmentSummaryAPI]
category = AdminAPI
display_name = Get summary by status
privilege_parameter = Course/Class$$$view
entity_type_parameter = User$$$userid
description = The API is used to display the summary of enrollments by status.
ORM_file = /sites/all/modules/core/exp_sp_core/exp_sp_core.inc
method_name = GetEnrollmentSummaryAPI;the name of the function that is to be executed when this api is called.
params.userid = Y>User Id>48
params.classcode = Y>Class code>ASILTC2
response.statuscode= Status code>lrn_crs_cmp_cmp
response.statusname= Status name>Completed
response.title= Class title>Learning IOS
response.rec_count=  Record count>12
api_owner.name = Velu;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 91
testengine.use_prev_response_field = Id ; it will used to run the update order
customer_display = no ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 40 ; number of request which can be accept per minute

;API for Listing Enrollments by Class
[ListEnrollmentsByClass]
category = AdminAPI
display_name = List enrollments by class code
privilege_parameter = Course/Class$$$view
entity_type_parameter = User$$$userid
description = The API is used to retrieve the list of enrollments by class code.
ORM_file = /sites/all/modules/core/exp_sp_core/exp_sp_core.inc
method_name = listEnrollmentsByClass;the name of the function that is to be executed when this api is called.
params.userid = Y>User Id>48
params.classcode = Y>Class code>ASILTC2
params.status = N>Status code>lrn_crs_cmp_cmp
response.learnerid= Learner id>Learner id
response.code= Class code>IOS
response.full_name= full_name>Ramkumar
response.phone_no= Phone no>4033034444
response.username= Username>ram
response.email= Email>ram@learn.com
response.job_title= Job title>Data Manager
response.status= Status>Completed
response.score= Score>100
response.reg_date= Registration date>abc
response.comp_date= Completion date>abc
response.profileimage_path = User profile image>abc
api_owner.name = Velu;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 92
testengine.use_prev_response_field = Id ; it will used to run the update order
customer_display = no ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 40 ; number of request which can be accept per minute

;Team Completion Summary Report API
[GetTeamCompletionSummaryReportAPI]
category = ManagerAPI
display_name = Get team completion summary report
description = The API is used to display the team summary for the class entity.
ORM_file = /sites/all/modules/core/exp_sp_core/exp_sp_core.inc
method_name = teamCompletionSummaryReportAPI;the name of the function that is to be executed when this api is called.
params.userid = Y>User Id>125
params.classcode = Y>Class code>courseBBBB
response.statuscode= Status code>lrn_crs_cmp_cmp
response.statusname= Status name>Completed
response.rec_count=  Record count>12
response.title= Class title>Learning IOS
api_owner.name = Velu;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 93
testengine.use_prev_response_field = Id ; it will used to run the update order
customer_display = no ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 40 ; number of request which can be accept per minute

;API for Listing Team Enrollments by Class
[ListTeamEnrollmentsByClass]
category = ManagerAPI
display_name = List team enrollments by class
description = The API is used to retrieve the team enrollments by class.
ORM_file = /sites/all/modules/core/exp_sp_core/exp_sp_core.inc
method_name = teamCompletionDetailedReportAPI;the name of the function that is to be executed when this api is called.
params.userid = Y>User Id>125
params.classcode = Y>Class code>ASILTC2
params.status = N>Status code>lrn_crs_cmp_cmp
response.learnerid= Learner id>Learner id
response.code= Class code>IOS
response.full_name= full_name>Ramkumar
response.phone_no= Phone no>4033034444
response.username= Username>ram
response.email= Email>ram@learn.com
response.job_title= Job title>Data Manager
response.status= Status>Completed
response.score= Score>100
response.reg_date= Registration date>abc
response.comp_date= Completion date>abc
response.profileimage_path = User profile image>abc
api_owner.name = Velu;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 94
testengine.use_prev_response_field = Id ; it will used to run the update order
customer_display = no ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 40 ; number of request which can be accept per minute

;API for Requesting Participant Contact Info
[RequestParticipantContactByAPI]
category = LearnerAPI
display_name = API for requesting participant contact info
description = The API is used to request the particpant contact information.
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_classdetail/exp_sp_classdetail.inc
method_name = slt_mobile_exchange_contacts;the name of the function that is to be executed when this api is called.
params.userid = Y>User Id>1
params.learnerid = Y>learner Id>48
params.user_fullname = Y>Fullname of user>Ram
params.session_attended_id = Y> Id of the session attended>2
params.contact_needed_of = Y>Participant id whom you need contact information>49
response.id= id>4
api_owner.name = Velu;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = insert
testengine.category=insert
testengine.apitestsequence = 95
testengine.use_prev_response_field = Id ; it will used to run the update order
customer_display = no ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 40 ; number of request which can be accept per minute

;API for Listing Requested Contacts
[ListRequestedContactsByAPI]
category = LearnerAPI
display_name = API for Listing Requested Contacts
description = The API is used to listing requested contacts
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_classdetail/exp_sp_classdetail.inc
method_name = slt_mobile_exchange_contacts;the name of the function that is to be executed when this api is called.
params.userid = Y>User Id>1
params.learnerid = Y>learner Id>48
response.id= id>4
response.status= Possible values. CONTACT_REQUESTED, CONTACT_APPROVED, CONTACT_REJECTED>CONTACT_REQUESTED
response.contact_requester_id =Contact requester learner id>4
response.contact_requester_fullname =Contact requester fullname>Ram
response.job_title =job_title >
response.photo_path =photo_path >
api_owner.name = Velu;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 96
testengine.use_prev_response_field = Id ; it will used to run the update order
customer_display = no ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for Exchanging Contact
[ContactExchangeApprovalAPI]
category = LearnerAPI
display_name = API for exchanging contact
description = The API is used to exchange the class participant contact
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_classdetail/exp_sp_classdetail.inc
method_name = slt_mobile_exchange_contacts;the name of the function that is to be executed when this api is called.
params.userid = Y>User Id>1
params.learnerid = Y>Learner Id>48
params.status =  Y>Possible values. CONTACT_REQUESTED, CONTACT_APPROVED, CONTACT_STORED,CONTACT_REJECTED>CONTACT_REJECTED
params.contact_request_id = Y>Request id > 4
response.id= id>4
api_owner.name = Velu;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 97
testengine.use_prev_response_field = Id ; it will used to run the update order
customer_display = no ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for Getting Approved Contacts
[GetApprovedContactsAPI]
category = LearnerAPI
display_name = API for getting approved contacts.
description = The API is used to getting approved contacts.
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_classdetail/exp_sp_classdetail.inc
method_name = slt_mobile_exchange_contacts;the name of the function that is to be executed when this api is called.
params.userid = Y>User Id>1
params.learnerid = Y>Learner Id>48
response.id= id>4
response.contact_needed_firstname= First name>Ram
response.contact_needed_lastname= Last name>Kumar
response.contact_needed_email= Email>ram@exp.com
response.contact_needed_phoneno= Phoneno>4444444444
response.contact_needed_of = Learner id of the contact > 12
api_owner.name = Velu;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 98
testengine.use_prev_response_field = Id ; it will used to run the update order
customer_display = no ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for Getting Stored Contacts
[GetStroedContactsAPI]
category = LearnerAPI
display_name = API for getting stored contacts.
description = The API is used to getting Stored contacts.
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_classdetail/exp_sp_classdetail.inc
method_name = slt_mobile_exchange_contacts;the name of the function that is to be executed when this api is called.
params.userid = Y>User Id>1
params.learnerid = Y>Learner Id>48
response.id= id>4
response.contact_needed_firstname= First name>Ram
response.contact_needed_lastname= Last name>Kumar
response.contact_needed_email= Email>ram@exp.com
response.contact_needed_phoneno= Phoneno>4444444444
response.contact_needed_of = Learner id of the contact > 12
api_owner.name = sureshkumarm;the developer's name who develops the functionality
api_owner.email = sureshkumarm@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 99
testengine.use_prev_response_field = Id ; it will used to run the update order
customer_display = no ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for Myteam Catalog
[GetMyteamCatalogResultsAPI]
category = ManagerAPI
display_name = API for Listing manager catalog
description = The API is used to retrieve the catalogs for manager role
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_myteam/exp_sp_myteam-catalog-search.inc
method_name = getMyteamCatalogResultsAPI;the name of the function that is to be executed when this api is called.
params.userid = Y>User Id>48
params.start = N>Start index of record set>1
params.rows = N>Number of Rows>10
params.sord = N>Order by asc, desc >asc
params.class_title = N>Class title >Java
params.delivery_type_code = N>Delivery type >lrn_cls_dty_wbt
params.classlangtype = N> classlangtype >cre_sys_lng_eng|cre_sys_lng_gzh
params.limit= N > limit >1
params.paginate= N > Pagination Needed >true
params.action = N>Type of action >countGeneral
params.cls_status = N>Status of the class >lrn_crs_cmp_cmp
params.subOrdinateId = N>SubordinateId >4
params.export = N>Export report >true
params.admin_role = N>Admin role >true
response.delivery_type_code = Delivery type code >lrn_cls_dty_wbt
response.class_id= Class Id>5
response.cls_title= Class title>Ios Test
response.cls_code= Class code>ios
response.cls_short_description =Short description>Test description
response.comp_status =Status of the class>Completed
response.is_compliance =Compliance or not>1
response.subordinate_id =Subordinate Id>4
response.count =Count>4
response.reg_count =Reg count>4
response.full_name =Full name>4
response.user_name =User name>4
response.job_title =Job title>4
response.email =Mail id>4
response.user_picture =Profile picture>4
response.phone_no =Phone number>98
response.mobile_no =Phone number>98
response.status =Status>Completed
response.delivery_type_name =Delivery type>Video
response.mro_status =Mandatory>Y
response.enrolled_id =Enrolled id>4
response.rating =Rating>100
api_owner.name = AjayR;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 100
testengine.use_prev_response_field = Id ; it will used to run the update order
customer_display = no ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 40 ; number of request which can be accept per minute

;API for Add List Values for User
[AddUserListValuesAPI]
category = AdminAPI
display_name = Add User Attributes
privilege_parameter = People Setting$$$create
description = The API is used to add user attributes in the system.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_setup/exp_sp_administration_setup.inc
method_name = addNewListValuesByRestAPI;the name of the function that is to be executed when this api is called.
params.form_state.values.name = Y>Enter the name of the attributes to be added>Dynamic_Org_VERSION
params.form_state.values.code = Y>Enter+the+code+of+the+attributes+to+be+added.+Available+options+are+cre_usr_dpt+%28for+department%29%2C+cre_usr_etp+%28employee+type%29%2C+cre_usr_jrl+%28job+role%29%2C+cre_usr_jtl+%28job+title%29%2C+cre_usr_ptp+%28user+type%29>cre_usr_dpt
params.userid = Y>Enter the ID of the user making this API call.>1
response.id= Displays the Created attribute ID>2
response.code= Displays the Created attribute code>cre_usr_dpt_001
api_owner.name = Shobana N;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = add
testengine.category=add
testengine.apitestsequence = 101
testengine.capture_response_field = Id ; it will used to run the add list values
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 50 ; number of request which can be accept per minute

;API for Update ListValues
[UpdateUserListValuesAPI]
category = AdminAPI
display_name = Update User Attributes
privilege_parameter = People Setting$$$update
description = The API is used to update the ListValues details in the system.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_setup/exp_sp_administration_setup.inc
method_name = updateListValueDetailsByRestAPI;the name of the function that is to be executed when this api is called.
params.form_state.values.id = Y> Enter+the+ID+of+the+user+attributes+%28department%2C+employee+type%2C+job+role%2C+job+title%2C+user+type%29.>1
params.form_state.values.code = Y> Enter+the+code+of+the+user+attribute+%28department%2C+employee+type%2C+job+role%2C+job+title%2C+user+type%29.>cre_usr_dpt
params.form_state.values.name = Y> Enter+the+name+of+the+user+attribute+%28department%2C+employee+type%2C+job+role%2C+job+title%2C+user+type%29.>Dynamic_List_Updated_VERSION
params.userid = Y> Enter the ID of the user making this API call.>1
response.id= ListValues id>1
api_owner.name = Shobana N;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = update
testengine.category=update
testengine.apitestsequence = 102
testengine.use_prev_response_field = Id ; it will used to run the update list values
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 50 ; number of request which can be accept per minute

;API for List the ListValues of users
[ListUserListValuesAPI]
category = AdminAPI
display_name = List User Attributes
privilege_parameter = People Setting$$$view
description = The API is used to display the list of user and other attributes available in the system. Attributes can be Job Role, Job Title, Department, etc. of User or timezone, launguage, class status, etc. available in the system.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_setup/exp_sp_administration_setup.inc
method_name = listUserListValuesByRestAPI;the name of the function that is to be executed when this api is called.
params.start = N >  Enter the starting point from which the user attributes are displayed. Only numerical values are accepted. Default value: 0 >0
params.limit = N > Enter+only+numerical+values.+This+parameter+sets+the+number+of+records+retrieved+based+on+the+entered+value.+Default+value%3A+10 Note%3A+If+optional+parameters+are+blank%2C+then+%27start%27+and+%27limit%27+parameters+become+Mandatory >10
params.form_state.values.code = Y >Enter+the+code+of+the+attributes+to+be+added.+The+allowed+values+are+%22cre_usr_dpt%22+for+department%2C+%22cre_usr_etp%22+for+employee+type%2C+%22cre_usr_jrl%22+for+job+role%2C+%22cre_usr_jtl%22+for+job+title%2C+%22cre_usr_ptp%22+for+user+type..>cre_usr_dpt
params.form_state.values.textfilter = N > Attribute Name to search. e.g. IT Department>IT Department
params.userid = Y > Enter the ID of the user making this API call.>1
response.id= Displays+the+ID+of+a+User%27s+attribute+%28ID+of+Job+role%2C+Department%2C+Job+title+and+User+type.%29 >2
response.name = Displays+the+name+of+a+User%27s+attribute+%28%22Job+role%22%2C+%22Department%22%2C+%22Job+title%22+and+%22User+type%22.%29 >Dynamic_Org_Updated_VERSION
response.code  = Displays+the+code+of+a+User%27s+attribute+%28code+of+Job+role%2C+Department%2C+Job+title+and+User+type.%29
api_owner.name = Shobana N; the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.apitestsequence = 103
testengine.verify_response_field = Id
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for Updating Learner Profile
[UpdateLearnerProfileAPI]
category = LearnerAPI
display_name =  Update User details
description = The API is used to update the User profile.
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning.inc
method_name = updateLearnerProfileAtrributes;the name of the function that is to be executed when this api is called.
params.userid = Y> Enter the ID of the user making this API call.>1
params.timezone = Y>Enter the current Time Zone of the User. Please refer to the Timezone section of the API codes document to view the list of allowed Timezone codes.>cre_sys_tmz_020
params.oldtimezone = Y>Enter the old Time Zone of the User.Please refer to the Timezone section of the API codes document to view the list of allowed Timezone codes.>cre_sys_tmz_020
params.imgdata = N>A+base64+encoded+image+to+be+used+as+the+User%27s+Avatar+image.+ Note%3A+The+field+should+be+left+empty+in+case+the+User+doesn%27t+want+to+upload+the+Avatar+image+>sdfdsjfijiOidkk23
response.status= Displays+the+status+of+the+update+%28%22success%22+or+%22failure%22%29.>success,failure
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 104
testengine.capture_response_field = Id ; it will used to run the user profile
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 40 ; number of request which can be accept per minute

;API for displaying notification details
[DisplayNotificationDetails]
category = LearnerAPI
display_name =  API for displaying notification details
description = The API is used to display the details of the notification where SMS triggered.
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning.inc
method_name = displayNotificationDetailsAPI;the name of the function that is to be executed when this api is called.
params.userid = Y> User Id>1
params.id = Y>Notification ID>1
response.id= id>1
response.status= Success, failure>Success
response.details= Details of the notification>Test notification
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 105
testengine.capture_response_field = Id ; it will used to run the user profile
customer_display = no ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 50 ; number of request which can be accept per minute

;API for List Timezone values
[ListTimezonesAPI]
category = LearnerAPI
display_name = List Time zones
description = The API is used to get the list of timezones which are available in the system.
ORM_file = /sites/all/modules/core/exp_sp_core/exp_sp_core.inc
method_name = listProfileValues;the name of the function that is to be executed when this api is called.
params.timezonecode = Y> Possible values for this field can be seen in Time Zones section of API codes page.>cre_sys_tmz
params.limit= N > limit >1
params.userid = Y > User Id >1
response.name = Timezone name> Mountain Standard Time Kwajalein
response.code= Timezone code>cre_sys_tmz_001
response.attr1= Timezone attr1>GMT-12:00
response.attr2= Timezone attr2>Pacific/Kwajalein
api_owner.name = Gaja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 106
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = no ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for Change class enrollments
[ChangeClassAPI]
category = LearnerAPI
display_name = Change a User%27s enrollment to a Class
description = This API is used to change a User%27s enrollment to a Class
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_lnrlearningplan/exp_sp_lnrlearningplan.inc
method_name = changeClassAPI;the name of the function that is to be executed when this api is called.
params.UserId = Y >Accepts only numerical values. Enter the ID of the Learner who is registered to the class.>1
params.enrollid = Y>Accepts only the numeric value. Enter the enrollment ID of the User who is enrolled to the class>1
params.Classid = Y >Accepts only numerical values. This field contains the Class ID.>1
params.TP_or_class = Y>This field is used to indicate if the User is enrolled from a Training Plan or Class. Allowed values are %22tp%22 or %22class%22> tp
params.userid = Y >Accepts only numerical values. This contains the ID of the User making this API call.>1
response.status=Displays the status of the changed Enrollment %28%22success%22 or %22failure%22%29>success
api_owner.name = Priya C; the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.apitestsequence = 107
testengine.verify_response_field = Id ;it will be user to run change class enrollment
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 40 ; number of request which can be accept per minute

;API for adding class to cart
[addClassToCartAPI]
category = LearnerAPI
display_name = Add class to shopping cart
description = This API is used to add a paid class to the shopping cart.
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_lnrsearch/exp_sp_lnrsearch.inc
method_name = addClassToCartAPI;the name of the function that is to be executed when this api is called.
params.user_id = Y > Enter the ID of the Learner. >1
params.Courseid = Y> Enter the ID of the course to which the paid Class belongs. Enter only numerical values. >1
params.Classid = Y > Enter the ID of the paid class. >1
params.deliveryType = Y > %0AEnter+the+delivery+type+code+of+the+class.+Possible+values+%3A+lrn_cls_dty_ilt%28Classroom%29%2Clrn_cls_dty_wbt%28Web-based%29%2Clrn_cls_dty_vcl%28Virtual+Class%29%2Clrn_cls_dty_vod%28Video%29.%0A >lrn_cls_dty_ilt
params.userid = Y > Enter the ID of the user making this API call. >1
response.status= Displays+the+status+of+the+process+whether+or+not+the+addition+of+the+paid+class+to+the+cart+was+successful.+%28%22CartAdded%22+Or+%22Already+in+your+cart.%22%29+>success,failure
api_owner.name = Shobana N;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 108
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 40 ; number of request which can be accept per minute

;API for getting list of countries
[listCountriesAPI]
category = LearnerAPI
display_name = List of countries
description = The API is used to list the countries.
ORM_file = /sites/all/modules/core/exp_sp_core/exp_sp_core.inc
method_name = getCountriesAPI;the name of the function that is to be executed when this api is called.
params.user_id = Y > Enter the ID of the user who is making this API call. >1
params.userid = Y > Enter the ID of the user making this API call. >1
response.country_code = Displays the Country Code> Code of the country
response.country_name= Displays The Country Name>Name of the country
api_owner.name = Ajay R;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 109
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for getting list of states under the country
[listStatesForCountryAPI]
category = LearnerAPI
display_name = List of states in a country
description = The API is used to list the states for a Class
ORM_file = /sites/all/modules/core/exp_sp_core/exp_sp_core.inc
method_name = getStatesForCountryAPI;the name of the function that is to be executed when this api is called.
params.country_code = Y > Country code >IN
params.user_id = Y > User ID >1
params.userid = Y > User Id >1
response.state_code = State code> Code of the country
response.state_name= State name>Name of the country
api_owner.name = Ajay R;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 110
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = no ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for listing items in cart
[ListItemsInCartAPI]
category = LearnerAPI
display_name = List of items in shopping cart
description = The API is used to list the items in a shopping cart for a user.
ORM_file = /sites/all/modules/core/exp_sp_commerce/modules/exp_sp_cart/exp_sp_cart.inc
method_name = getListOfclassesinCartAPI;the name of the function that is to be executed when this api is called.
params.user_id = Y > Shows the ID of the User who has registered to the Class>1
params.userid = Y > Enter the ID of the user making this API call. >1
params.action = Y >+Enter+the+action+needs+to+be+taken+to+make+this+API+call.+Allowed+values+are+%22delete%22+or+%22get_count%22.>1
params.currency_code = N > Enter the currency type. >INR
;params.currency_sym = N > Enter the currency symbol. >1
response.classid =Displays the ID of the Class which is added to the cart.> class id
response.classtitle =Displays the title of the Class> class title
response.courseid = Displays the ID of the Course> course id
response.description = Displays the description of the Class> description
response.price=Displays the price of the class>price
response.deliverytypename = Displays the Delivery Type name of the class. Please refer to the delivery type section of the API Codes document to view the list of allowed delivery types.> deleivery type name
response.locname = Displays the name of the location of the class.> location name
response.loccity = Displays the city name of the location of the class.> location city
response.loccountry = Displays the Country name of the location of the class.> class id
response.deliverytypeid= Displays the Delivery Type code of the class. Please refer to the delivery type section of the API Codes document to view the list of allowed delivery types.>Delivery type
response.order_id=  Displays the Order ID of the purchase>Order ID
response.total_product= Displays the total number of products in the cart>Total Product
response.payment_gateway=  Displays the Enabled Credit cart payment gateway>
response.enabledPaymentMethod=  Displays the Enabled Payment Method>Enabled Payment Method
api_owner.name = Ajay R;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 111
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 50 ; number of request which can be accept per minute

;API for getting list of states under the country
[getCheckAddressAPI]
category = LearnerAPI
display_name = Get Check address details
description = The API is used to display the Check address details.
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_lnrsearch/exp_sp_lnrsearch.inc
method_name = getCheckAddressAPI;the name of the function that is to be executed when this api is called.
params.user_id = Y > Enter ID of the User for whom the order is to be made. >1
params.userid = Y > Enter the ID of the user making this API call. >1
response.mailing_name = Displays the name of the Person to whom the check has to be addressed> Mailing name
response.mailing_company = Displays the name of the Company to whom the check has to be addressed> Mailing company
response.mailing_street1 = %0ADisplays+the+First+line+of+the+Company%27s+address%0A> Mailing Street1
response.mailing_street2 = %0ADisplays+the+Second+line+of+the+Company%27s+address%0A> Mailing Street 2
response.mailing_city = %0ADisplays+the+City+of+the+Company%27s+address%0A> Mailing Zone
response.mailing_zone = %0ADisplays+the+Zone+of+the+Company%27s+address%0A> Mailing Zone
response.mailing_postal_code = %0ADisplays+the+zipcode+of+the+Company%27s+address%0A%0A> Mailing Postal Code
response.mailing_country= %0ADisplays+the+country+of+the+Company%27s+address%0A%0A>Mailing Country
api_owner.name = Ajay R;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 112
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 50 ; number of request which can be accept per minute

;API for getting list of states under the country
[getBillingAddressAPI]
category = LearnerAPI
display_name = Get Billing address details
description = The API is used to display the Billing address details.
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_lnrsearch/exp_sp_lnrsearch.inc
method_name = getBillingAddressAPI;the name of the function that is to be executed when this api is called.
params.user_id = Y > Enter ID of the User for whom the billing address is to be added for completing the order. >1
params.userid = Y > Enter the ID of the user making this API call. >1
response.first_name = Displays the first name of the User> billing first name
response.last_name = Displays the last name of the User> billing second name
response.phone = Displays the phone number of the User> billing phone
response.company = Displays the company name> billing company
response.street1 = Displays the first line of the billing address> billing street1
response.street2 = Displays the second line of the billing address> billing street2
response.city = Displays the city name of the billing address> billing city
response.zone= Displays the zone of the billing address>billing zone
response.postal_code= Displays the zipcode of the billing address>billing postal code
response.country= Displays the country name of the billing address>billing Country
response.order_id= Displays the ID of the placed order>1
api_owner.name = Ajay R;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 113
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = no ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 50 ; number of request which can be accept per minute

;API for getting list of states under the country
[addNewBillingAddressAPI]
category = LearnerAPI
display_name = Create New billing address
description = This API is used to create a new billing address.
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_lnrsearch/exp_sp_lnrsearch.inc
method_name = addNewBillingAddressAPI;the name of the function that is to be executed when this api is called.
params.user_id = Y > Enter the ID of the User who is making a purchase. >1
params.userid = Y > Enter the ID of the User making this API call. >1
params.order_id = order id > Order ID >1
params.first_name = billing first name> billing first name
params.last_name = billing second name> billing second name
params.phone = billing phone> billing phone
params.company = billing company> billing company
params.street1 = billing street1> billing street1
params.street2 = billing street2> billing street2
params.city = billing city> billing city
params.zone= billing zone>billing zone
params.postal_code= billing postal code>billing postal code
params.country= billing country>billing Country
params.slt_orderID= slt order id>slt order id
params.product_count= product count>2
params.old_order_id= N >Old orderId>2
params.action= N >Action>new address
params.currency_code= N >Currency type>INR
response.status= Displays+the+status+of+the+new+address+is+created+as+%28%22success%22+or+%22failure%22%29+>success,failure
api_owner.name = Ajay R;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 114
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = no ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 50 ; number of request which can be accept per minute

;API for creating new order ID in uc_order country
[createUcOrderIdAPI]
category = LearnerAPI
display_name = Create Order ID
description = The API is used to create an Order ID
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_lnrsearch/exp_sp_lnrsearch.inc
method_name = createUcOrderIdAPI;the name of the function that is to be executed when this api is called.
params.user_id = Y >  This field stores the ID of the User who created the order >1
params.userid = Y > Enter the ID of the user making this API call >1
params.amount = N > Amount >0
params.currency_code = N > Currency type >INR
response.order_id= Displays the Order ID created>Order ID
api_owner.name = Ajay R;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 115
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = no ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 50 ; number of request which can be accept per minute

;API for getting list of users under manager
[listUsersUnderMangerAPI]
category = LearnerAPI
display_name = List of users under manager
description = The API is used to list the users under a manager.
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_lnrsearch/exp_sp_lnrsearch.inc
method_name = listUsersUnderMangerAPI;the name of the function that is to be executed when this api is called.
params.user_id = Y > Enter the ID of the User for whom the Class is to be dropped >4
params.userid = Y > Enter the ID of the user making this API call >1
params.user_name = N > Enter the name of the user>
params.location = N> Enter the location name of the user >
params.reporttype = N>Enter+if+the+user+is+a+direct+or+virtual+report+of+the+Manager..+The+allowed+values+are+%22direct%22+or+%22virtual%22.>direct,virtual
params.country_code = N> Enter the country code >IN
params.state_code = N> Enter the state code. The input parameter country code is required to filter state code >25
params.job_role = N> Enter+the+code+of+the+job+role.+Multiple+values+are+Entered+with+pipe+separator.+For+example+-+cre_usr_jrl_004%7Ccre_usr_jrl_006 >cre_usr_jrl_004
params.job_title = N>  Enter the code of the job title. Please refer to the Job title section of the API Codes document to view the list of allowed job title codes. >
params.sortby = N> Sort by specific value. Possible values are %27AZ%27 for title to sort in ascending order, %27ZA%27 to sort title in descending order, %27dateOld%27 to list from old data, %27dateNew%27 to list data from recent data, %27type%27 to sort by delivery type code in ascending order, Mandatory to list mandatory and compliance data first. >AZ,ZA,time
response.id= Displays the ID of the user >id
response.first_name= Displays the first name of the user >First Name
response.last_name= Displays the last name of the user >Last Name
response.full_name= Displays the full name of the user >Full Name
response.user_name= Displays the user name >User Name
response.phone_no= Displays the phone number of the user >Phone Number
response.mobile_no= Displays the mobile number of the user >Mobile Number
response.email= Displays the email ID of the user >Email
response.manager_id= Displays the manager ID > 4
response.report_type= Displays whether the user is a direct or virtual report.  > Direct
response.job_title= Displays the job title of the user >Job Title
response.job_role= Displays the job role of the user >Job Role
response.points= Displays the number of points gained of the user >Points
response.badges= Displays the list of badges achieved by the user >Badges
response.enroll_count= Displays the total registration count >Registered count
response.user_picture=  Displays the picture of the user >User Picture
api_owner.name = Ajay R;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 116
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 50 ; number of request which can be accept per minute

;API for getting status and score of aicc content
[getAiccStatusAPI]
category = LearnerAPI
display_name = Get AICC content status
description = The API is used to get the score and status of aicc content
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_lnrsearch/exp_sp_lnrsearch.inc
method_name = getAiccStatusAPI;the name of the function that is to be executed when this api is called.
params.user_id = Y > User ID >1
params.userid = Y > User Id >1
params.id = Y > ID >
params.aiccID = N > aiccID >
response.comp_status= comp_status>comp_status
response.score= Score>Score
response.launch= launch>launch
response.session= session>session
response.overallProgress = display overallprogress of the class
api_owner.name = Pradeep R;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 117
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = no ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 50 ; number of request which can be accept per minute

;API for making check payment
[PurchaseClassAPI]
category = LearnerAPI
display_name = Make payment
description = The API is used to make payment.
ORM_file = /sites/all/modules/core/exp_sp_commerce/modules/ubercart/uc_cart/uc_cart.pages.inc
method_name = purchaseClassAPI;the name of the function that is to be executed when this api is called.
params.user_id = Y > Enter the ID of the User who has registered to the Class >1
params.userid = Y > Enter the ID of the user making this API call. >1
params.order_id = Y > Enter the order ID of the user >20
params.payment_method = Y > Enter the payment method type to purchase the order. The allowed values are  %27invoice%27, %27po%27 , %27credit%27. >check
params.po_number = N > Enter the Purchase Order number >12
params.cc_number = N > Enter the Credit Card number >
params.cc_exp_month = N > Enter the month of expiry of the Credit Card >
params.cc_exp_year = N > Enter the year of expiry of the Credit Card >
params.cc_cvv = N > Enter the CVV number of the Credit Card >
params.currency_code = N > Enter the Currency type >
;params.currency_sym = N > Enter the Currency symbol >
params.session_discount = N > Discount details >
response.status= Displays the status of the payment transaction as  %27success%27, %27unprocessed%27  or %27failure%27. >success,failure
api_owner.name = Ajay R;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 118
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = no ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 50 ; number of request which can be accept per minute

;API for updating Uc order product
[updateUcOrderProductAPI]
category = LearnerAPI
display_name = Update UC order product
description = The API is used for updating Uc order product
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_lnrsearch/exp_sp_lnrsearch.inc
method_name = updateUcOrderProductAPI;the name of the function that is to be executed when this api is called.
params.user_id = Y > User ID >1
params.userid = Y > User Id >1
params.order_id = Y > ID >20
params.classID = Y > ID >12
params.classTitle = Y > ID >
params.deliveryTypeName = Y > ID >
params.price = Y > ID >
params.currency_code = N > Currency type >INR
response.status= status>success,failure
api_owner.name = Ajay R;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 119
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = no ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 50 ; number of request which can be accept per minute

;API for deleting items from cart
[deleteItemsFromCartAPI]
category = LearnerAPI
display_name = Delete items in shopping cart
description =  The API is used for deleting items from shopping cart by the learner
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_lnrsearch/exp_sp_lnrsearch.inc
method_name = deleteItemsFromCartAPI;the name of the function that is to be executed when this api is called.
params.user_id = Y > Enter the ID of the user for whom the class is added in the cart. >1
params.userid = Y > Enter the ID of the user making this API call. >1
params.classID = N > Enter the ID of the Class added to the Shopping Cart >12
params.slt_orderID = Y > Enter the ID of the order from slt_order table. >12
params.action = N > Enter+the+remove+action+to+be+performed.+The+allowed+values+is+%22Delete%22+to+remove+the+class+from+the+cart. >delete
params.deliverytypename = N > Enter the delivery type code of the class. Please refer to the delivery type section of the API Codes document to view the list of allowed delivery type codes. >cre_sys_obt_cur
response.status= +Displays+if+the+deletion+has+been+a+%22success%22+or+a+%22failure%22>success,failure
api_owner.name = Ajay R;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 120
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 50 ; number of request which can be accept per minute

;API for Calculating discounts
[calculateDiscountsAPI]
category = LearnerAPI
display_name = Calculate discount
description = The API is used for calculating Discount+on+an order
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_lnrsearch/exp_sp_lnrsearch.inc
method_name = calculateDiscountsAPI;the name of the function that is to be executed when this api is called.
params.user_id = Y > Enter the ID of the User for whom the order is made. >1
params.userid = Y > Enter the ID of the user making this API call. >1
params.orderID = N > Enter the ID of the order for which the discount should be calculated. >12
params.discountCode = Y > Enter the discount Code to be used >diwali
params.currency_code = N > Enter the type of currency >INR
;params.currency_sym = N > Enter the symbol of currency >INR
response.status= Displays the Order details >success,failure
;response.status.line_items= Displays the details of each line item in the order>
;response.status.line_items.id=
;response.status.line_items.type=
;response.status.line_items.title=
;response.status.line_items.amount= Displays the Calculated discount amount.
;response.status.line_items.weight=
;response.status.errors=
;response.status.messages=
;response.status.total_discount= Displays the total Calculated discount amount.
;response.status.total=Total Amount of the order after discount is applied
;response.status.total_discount_theme=
;response.status.total_theme=
;response.status.is_export_compliance=
;response.status.orderid=Displays the ID of  the Order which the discount is applied.
api_owner.name = Ajay R;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 121
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = no ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 50 ; number of request which can be accept per minute

;API for cancelling priced class
[cancelPricedClassAPI]
category = LearnerAPI
display_name = Cancel priced class
description = The API is used for calculating discounts
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_lnrenrollment/exp_sp_lnrenrollment.inc
method_name = cancelPricedClassAPI;the name of the function that is to be executed when this api is called.
params.userid = Y > User Id >1
params.user_id = Y > User ID >1
params.baseType = N > delivery type >VOD
params.enrollId = Y > enrolled ID >1
params.classId = Y > Class Id >1
params.isCommerce = N > is commerce >1
params.assMand = Y > assMand >0
response.status= status>success,failure
response.msg= message>message
api_owner.name = Ajay R;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 122
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = no ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 50 ; number of request which can be accept per minute

;API for Calculating tax
[calculateTaxAPI]
category = LearnerAPI
display_name = Calculate Tax
description = The API is used for calculating tax+on+an order
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_lnrsearch/exp_sp_lnrsearch.inc
method_name = calculateTaxAPI;the name of the function that is to be executed when this api is called.
params.user_id = Y > This field stores the ID of the User making this API call >1
params.userid = Y > Enter the ID of the user making this API call. >1
params.orderID = Y > Enter the Uber Cart Order ID+on+which the Tax is to be calculated >12
params.slt_orderID = Y >Enter the Order ID from slt_order table. >12
params.currency_code =N > Enter the preferred currency type. >INR
;params.currency_sym =N > Enter the preferred currency symbol. >
response.status= Displays the Calculated Tax amount for the order>success,failure
api_owner.name = Pradeep R;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 123
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = no ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 50 ; number of request which can be accept per minute

;API for sharing class
[shareClassAPI]
category = LearnerAPI
display_name = Share class
description = The API is used for sharing class
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_refer_course/exp_sp_refer_course.inc
method_name = shareClassAPI;the name of the function that is to be executed when this api is called.
params.user_id = Y > Enter the ID of the user who is sharing the Class. >1
params.userid = Y > Enter the ID of the user making this API call. >1
params.entityId = Y > Enter ID of the Class/TP which is to be shared. >12
params.entityType = Y >Enter+the+Type+of+the+entity+Class%2FTP+to+be+shared.+The+allowed+values+are+%22cre_sys_obt_crt%22+for+certification%2C+%22cre_sys_obt_trn%22+for+Learning+Plan+%2C+%22cre_sys_obt_cur%22+for+Curricula%2C+%22cre_sys_obt_crs%22+for+Course+%2C+%22cre_sys_obt_cls%22+for+class. >cre_sys_obt_cls
params.referFrom = Y > Enter the Email ID of the User who is sharing the class. >ajay@exp.com
params.referTo = Y >Enter the Email ID of the Receiver >ajay@exp.com
params.comment = N > An Optional message by the User >test
params.ccopy = Y >Set+to+send+the+message+copy+to+the+User%27s+Email+ID.+The+allowed+values+are+%22true%22+or+%22false%22. >2
response.status= Displays+the+message+status+whether+the+Sharing+was+successful+or+not.+%28%22success%22+or+%22failure%22%29.>success,failure
api_owner.name = Ajay R;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 124
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 40 ; number of request which can be accept per minute

;API for GettingTP details
[getTPdetailsAPI]
category = LearnerAPI
display_name = Get Training Plan details
description = This API is is used to populate the Training Plan details
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_lnrsearch/exp_sp_lnrsearch.inc
method_name = getTPDetailsAPI;the name of the function that is to be executed when this api is called.
params.user_id = Y >Enter the ID of the User who has enrolled to the Training Plan>1
params.userid = Y >Accepts only numerical values. This contains the ID of the User making this API call.>1
params.programID = Y >Accepts only numerical values. This contains the ID of the Training Plan.>1
;params.object_type = N > Object Type of the training program. Possible values cre_sys_obt_crt, cre_sys_obt_cur, cre_sys_obt_trn >cre_sys_obt_trn
response.course_data.module_details.module_id=Displays the mapping ID of the course attached to the Training Plan>12
response.course_data.module_details.module_title=Displays the Group name of the courses which are grouped together in the Training Plan>12
response.course_data.module_details.module_code=Displays the Group code of the courses which are grouped together in the Training Plan>12
response.course_data.module_details.tagname=Displays the tag attached to Training Plan>12
response.course_data.module_details.tp_additional_info=Displays additional information for the Training Plan>12
response.course_data.course_details.clscount=Displays the number of classes listed under a course that is attached to the Training Plan>1
response.course_data.course_details.crs_id=Displays the ID of the course that is attached to the Training Plan>48
response.course_data.course_details.is_required=Displays+if+the+course+is+mandatory+to+complete+the+Training+Plan.+%28%22Y%22+if+the+course+is+mandatory%2C+%22N%22+if+it+is+not%29>Y
response.course_data.course_details.sequence_no=Displays the order in which the course is to be taken>1
response.course_data.course_details.crs_title=Displays the title of the course>Content Library to upload and share diverse
response.course_data.course_details.crs_code=Displays the code of the course>Content Library to upload and share diverse
response.course_data.course_details.crs_desc=Displays the description of the course>Content Library to upload and share diverse
response.course_data.course_details.start_date=Displays+the+date+from+which+the+course+is+valid.+%28Only+for+Certification%29>
response.course_data.course_details.end_date=Displays+the+date+till+which+the+course+is+valid.+%28Only+for+Certification%29>
response.course_data.course_details.registered_cnt=Displays the number of users enrolled to the course.>0
response.course_data.course_details.single_class=Displays the ID of the class if the course has only one class listeed under it. This filed will be empty if there are multiple classes listed under the course.>59
response.course_data.course_details.class_details.result.class_details.object_type=Displays+the+type+of+training+object.+In+this+case+the+set+value+is+%22Class%22.>Class
response.course_data.course_details.class_details.result.class_details.crs_id=Displays the ID of the course to which the class belongs>48
response.course_data.course_details.class_details.result.class_details.cls_id=Displays the ID of the class>59
response.course_data.course_details.class_details.result.class_details.cls_code=Displays the code of the class>Content Library to upload and share diverse
response.course_data.course_details.class_details.result.class_details.cls_title=Displays the title of the class>Content Library to upload and share diverse
response.course_data.course_details.class_details.result.class_details.cls_short_description=Displays the summary of the class>Content Library to upload and share diverse
response.course_data.course_details.class_details.result.class_details.class_additional_info=Displays additional information for the Class>Content Library to upload and share diverse
response.course_data.course_details.class_details.result.class_details.delivery_type_code=Displays the delivery type code of the class. Please refer to the Class section of the API codes document to view the list of delivery type codes displayed.>lrn_cls_dty_wbt
;response.course_data.course_details.class_details.result.class_details.currency_type=Displays+the+code+for+the+type+of+currency+used+%28%22cre_sys_crn_usd%22%29>cre_sys_crn_usd
response.course_data.course_details.class_details.result.class_details.currency=Displays the currency type of the Training Plan in short form. %28e.g.+USD%29>USD
response.course_data.course_details.class_details.result.class_details.currency_code= Displays the currency code of the Training Plan. %28e.g.+cre_sys_crn_usd%29. Possible values can be seen in currency type section of %3Ca+href%3D%22%2Fapis%2Fdocs%2Flookupvalues.php%23cre_sys_crn%22%3EAPI+codes+page%3C%2Fa%3E.>cre_sys_crn_usd
response.course_data.course_details.class_details.result.class_details.currency_symbol= Displays the currency symbol of the Training Plan.>%24
;response.course_data.course_details.class_details.result.class_details.export_compliance=>
response.course_data.course_details.class_details.result.class_details.delivery_type_name=Displays the delivery type name of the class. Please refer to the Class delivery type section of the API Codes document to view the list of delivery type names.>Web-based
response.course_data.course_details.class_details.result.class_details.status=Displays+whether+the+class+is+shown+in+Catalog+or+not.+%28%22Hidden+in+Catalog%22+or+%22Shown+in+Catalog%22%29>Shown in Catalog
response.course_data.course_details.class_details.result.class_details.language=Displays the language of the class.Please refer to the Class language section of the API Codes document to view the list of status.>English
response.course_data.course_details.class_details.result.class_details.location=Displays+the+location+of+the+class.+%28only+for+ILT+Class%29>
response.course_data.course_details.class_details.result.class_details.locationname=Displays+the+location+of+the+class.+%28only+for+ILT+Class%29>
response.course_data.course_details.class_details.result.class_details.loationaddr1=Displays+the+first+line+of+the+address+of+the+location.+%28Only+for+ILT+Class%29>
response.course_data.course_details.class_details.result.class_details.locationaddr2=Displays+the+second+line+of+the+address+of+the+location.+%28Only+for+ILT+Class%29>
response.course_data.course_details.class_details.result.class_details.locationcity=Displays+the+city+of+the+class+location.+%28Only+for+ILT+Class%29>
response.course_data.course_details.class_details.result.class_details.locationstate=Displays the state of the class location.+%28Only+for+ILT+Class%29>
response.course_data.course_details.class_details.result.class_details.locationzip=Displays the zipcode of the class location.+%28Only+for+ILT+Class%29>
response.course_data.course_details.class_details.result.class_details.locationphone=Displays the phone number of the class location.+%28Only+for+ILT+Class%29>
response.course_data.course_details.class_details.result.class_details.price=Displays+the+price+of+the+class.+%28if+any%29>0.00
response.course_data.course_details.class_details.result.class_details.session_id=Displays+the+ID+of+the+class+session.+%28only+for+ILT+%2F+VC+class%29>
response.course_data.course_details.class_details.result.class_details.sess_start_date=Displays the start date of the class session.+%28only+for+ILT+%2F+VC+class%29>
response.course_data.course_details.class_details.result.class_details.sess_start_time=Displays the start time of the class session.+%28only+for+ILT+%2F+VC+class%29>
response.course_data.course_details.class_details.result.class_details.sess_end_time=Displays the end time of the class session.+%28only+for+ILT+%2F+VC+class%29>
response.course_data.course_details.class_details.result.class_details.sess_end_date=Displays the end date of the class session.+%28only+for+ILT+%2F+VC+class%29>
response.course_data.course_details.class_details.result.class_details.timezone=Displays the timezone of the class session.+%28only+for+ILT+%2F+VC+class%29>
response.course_data.course_details.class_details.result.class_details.country_name=Displays the country of the class location.+%28Only+for+ILT+Class%29>
response.course_data.course_details.class_details.result.class_details.language_code=Displays the language code of the class. Please refer to the languages section of the API Codes document to view the list of language codes displayed.>cre_sys_lng_eng
response.course_data.course_details.class_details.result.class_details.country_code=Displays the country code of the class location.+%28Only+for+ILT+Class%29>
response.course_data.course_details.class_details.result.class_details.registration_end_on=Displays the date in which enrollment for this class ends.>
response.course_data.course_details.class_details.result.class_details.enrcrs_id=Displays the course ID>
response.course_data.course_details.class_details.result.class_details.enrclsid=Displays the class ID>
response.course_data.course_details.class_details.result.class_details.clscrsid=Displays the ID of the course to which the class belongs>48
response.course_data.course_details.class_details.result.class_details.clsid=DIsplays the ID of the class>59
response.course_data.course_details.class_details.result.class_details.session_end_datetime=Displays the date and time in which the class session ends in YYYY-MM-DD HH:MM:SS format>
response.course_data.course_details.class_details.result.class_details.enrolled_id=Displays the class enrollment ID if the user has enrolled for this class. This field will be empty if User has not enrolled.>
response.course_data.course_details.class_details.result.class_details.waitlist_status=Displays the number of waitlisted seats.+%28only+for+ILT+%2F+VC+class%29>0
response.course_data.course_details.class_details.result.class_details.availableSeats=Displays the number of available seats.+%28only+for+ILT+%2F+VC+class%29>
response.course_data.course_details.class_details.result.class_details.session_details.session_title=Displays the title of the session>
response.course_data.course_details.class_details.result.class_details.session_details.session_day=Displays+the+day+on+which+the+session+is+held.+It+is+a+textual+representation+of+the+day+in+three+letters.+%28Mon%2C+Tue%2C+Wed%2C+Thu%2C+Fri%2C+Sat%2C+Sun%29
response.course_data.course_details.class_details.result.class_details.session_details.start_date=Displays+the+date+on+which+the+session+starts.+%28Example+-+Jan+01%2C+2015%29>
response.course_data.course_details.class_details.result.class_details.session_details.start_time=Displays+the+time+on+which+the+session+starts+in+HH%3AMM+format.+%2812+hour+format%29>
response.course_data.course_details.class_details.result.class_details.session_details.start_form=Displays+the+meridiem+of+the+session+start+time.+%28%22AM%22+or+%22PM%22%29>
response.course_data.course_details.class_details.result.class_details.session_details.end_time=Displays+the+time+on+which+the+session+ends+in+HH%3AMM+format.+%2812+hour+format%29>
response.course_data.course_details.class_details.result.class_details.session_details.end_form=Displays+the+meridiem+of+the+session+end+time.+%28%22AM%22+or+%22PM%22%29>
response.modulelist=Display the certification modules>
api_owner.name = Pradeep R;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 125
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 50 ; number of request which can be accept per minute

;API for GettingTP course class details
[getTPClassesAPI]
category = LearnerAPI
display_name = Get the details of a Class%2FCourse under a Training Plan
description = This API is used to display the details of a Class%2FCourse under a Training Plan
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_lnrsearch/exp_sp_lnrsearch.inc
method_name = getTPCourseClassDetailsAPI;the name of the function that is to be executed when this api is called.
params.user_id = Y >Accepts only numerical values. Enter the ID of the Learner.>10
params.userid = Y >Accepts only numerical values. This contains the ID of the User making this API call.>11
params.programID = Y >Accepts only numerical values. Enter the ID of the Training Plan.>1
params.object_type = Y >Enter+the+type+of+Training+Plan.+Allowed+values+are+%22cre_sys_obt_crt%22%2C+%22cre_sys_obt_cur%22%2C+%22cre_sys_obt_trn%22+for+Certification%2C+Curriculum+and+Learning+Plan+respectively>cre_sys_obt_trn
response.tp_courses= Displays the course details under the training plan.>
response.class_list.result.course_title=Displays the title of the course>course 1 for What is a Training Plan?
response.class_list.result.class_id=Displays the ID of the class>271
response.class_list.result.course_id=Displays the ID of the course>246
response.class_list.result.class_title=Displays the title of the class>course 1 for What is a Training Plan?
response.class_list.result.class_code=Displays the code of the Class>course 1 for What is a Training Plan?
response.class_list.result.delivery_type=Displays the delivery type code of the class. Please refer to the delivery type section of the API Codes document to view the list of delivery type codes available.>lrn_cls_dty_vod
response.class_list.result.description=Displays the description of the class>The training plan will outline who will deliver the training
response.class_list.result.enrolledid.enrolled_id=Displays the enrollment ID of the Learner to the class.>2480
response.class_list.result.enrolledid.enrolled_status=Displays the enrollment status code of the Learner to the class. Please refer to the enrollment status section of the API Codes document to view the list of enrollment status code displayed.>lrn_crs_reg_cnf
response.class_list.result.enrolledid.comp_status=Displays the completion status code of the enrollment. Please refer to the completion status section of the API codes document to view the list of completion status codes displayed.>lrn_crs_cmp_enr
response.class_list.result.enrolledid.waitlist_flag=Displays %22lrn_crs_reg_wtl%22 if the Learner is waitlisted for a ILT or VC class. If not, this field will be displayed blank.>
response.class_list.result.enrolledid.waitlist_priority=Displays the waitlist priority of the learner%27s enrollment. Displays only numeric values.>
response.enrolled_classes.result.id=Displays the enrollment ID of the Learner to the class.>2481
response.enrolled_classes.result.user_id=Displays the user ID of the Learner>49
response.enrolled_classes.result.master_enrollment_id=Displays the enrollment ID of the Learner to the Training Plan>170
response.enrolled_classes.result.user_name=Displays the username of the Learner>Jack
response.enrolled_classes.result.class_id=Displays the ID of the class>275
response.enrolled_classes.result.course_id=Displays the ID of the course>248
response.enrolled_classes.result.reg_status=Displays the completion status of the enrollment. Please refer to the completion status section of the API codes document to view the list of completion status displayed.>Enrolled
response.enrolled_classes.result.reg_status_code=Displays the completion status codes of the enrollment. Please refer to the completion status section of the API codes document to view the list of completion status codes displayed.>lrn_crs_cmp_enr
response.enrolled_classes.result.status_code=Displays the enrollment status code of the Learner to the class. Please refer to the enrollment status section of the API Codes document to view the list of enrollment status code displayed.>lrn_crs_reg_cnf
response.enrolled_classes.result.reg_date=Displays the enrollment date. For example - Aug 23, 2015>Aug 23, 2015
response.enrolled_classes.result.comp_status=Displays the completion status codes of the enrollment. Please refer to the completion status section of the API codes document to view the list of completion status codes displayed.>lrn_crs_cmp_enr
response.enrolled_classes.result.update_date=Displays the last updated date of the enrollment. For example - 23-Aug-2015>23-Aug-2015
response.enrolled_classes.result.comp_date=Displays the completion date of the enrollment. For example - Aug 23, 2015>Aug 23, 2015
response.enrolled_classes.result.valid_from=Displays the date from which the class is valid>
response.enrolled_classes.result.valid_to=Displays the date till which the class is valid>
response.enrolled_classes.result.score=Displays the score obtained by the Learner>
response.enrolled_classes.result.course_quiz_status=Displays the consolidated content launch status of one or more contents attached to the class. Applicable only for Web-based classes. The displayed statuses are %22passed%22, %22failed%22 and %22incomplete%22. If the content is yet to be launched then this field will be displayed as empty.>
response.enrolled_classes.result.updated_on=Displays the last updated date of the enrollment. For example - Aug 23, 2015>Aug 23, 2015
response.enrolled_classes.result.course_title=Displays the title of the course>course 2 for What is a Training Plan?
response.enrolled_classes.result.course_code=Displays the code of the course>course 2 for What is a Training Plan?
response.enrolled_classes.result.cls_title=Displays the title of the class>Useful training plan documents
response.enrolled_classes.result.cls_code=Displays the code of the class>Useful training plan documents 1
response.enrolled_classes.result.cls_status=Displays the status code of the class. Please refer to the Class Status section of the API codes document to view the list of class statuses displayed.>lrn_cls_sts_atv
response.enrolled_classes.result.description=Displays the description of the class>Provides a generic training plan template
response.enrolled_classes.result.delivery_type=Displays the delivery type of the class. Please refer to the delivery type section of the API Codes document to view the list of delivery types available.>Web-based
response.enrolled_classes.result.delivery_type_code=Displays the delivery type codes of the class. Please refer to the delivery type section of the API Codes document to view the list of delivery type codes available.>lrn_cls_dty_wbt
response.enrolled_classes.result.basetype=Displays+the+abbreviation+of+the+class+delivery+type.+%28%22ILT%22%2C+%22WBT%22%2C+%22VC%22%2C+%22VOD%22+for+Classroom%2C+Web-based%2C+Virtual+Class+and+Video+classes+respectively.>WBT
response.enrolled_classes.result.courseid=Displays the ID of the course>248
response.enrolled_classes.result.classprice=Displays the price of the class. Displayed as decimal values.>0.00
response.enrolled_classes.result.orderdatetime=Displays the date and time of the order placed for a priced class.>
response.enrolled_classes.result.session_id=Displays the class session ID. %28Only+for+ILT+%2F+VC+classes%29>
response.enrolled_classes.result.session_start=Displays the start date of the class session in DD-MMM-YYYY format. %28Only for ILT+%2F+VC classes%29>
response.enrolled_classes.result.session_start_day=Displays the start day of the class session. Allowed values are %22Mon%22, %22Tue%22, %22Wed%22, %22Thu%22, %22Fri%22, %22Sat%22, %22Sun%22.>
response.enrolled_classes.result.session_start_format=Displays the session start date. For example - Aug 23, 2015>Aug 23, 2015
response.enrolled_classes.result.sessionDetails.result.session_id=Displays the ID of the class session>95
response.enrolled_classes.result.sessionDetails.result.session_instructor_id=Displays the ID of the instructor who conducts the class session>13
response.enrolled_classes.result.sessionDetails.result.courseid=Displays the ID of the course>301
response.enrolled_classes.result.sessionDetails.result.classid=Displays the ID of the class>343
response.enrolled_classes.result.sessionDetails.result.session_start=Displays the date of the class session in YYYY-MM-DD HH:MM:SS format. The time component will always be zero.>2015-08-31 00:00:00
response.enrolled_classes.result.sessionDetails.result.session_start_day=Displays the start day of the class session. Allowed values are %22Mon%22, %22Tue%22, %22Wed%22, %22Thu%22, %22Fri%22, %22Sat%22, %22Sun%22.>Mon
response.enrolled_classes.result.sessionDetails.result.session_start_time=Displays the start time of the class session in 24 hour format. For example - 18:45>18:45
response.enrolled_classes.result.sessionDetails.result.session_end_time=Displays the end time of the class session in 24 hour format. For example - 19:45>19:45
response.enrolled_classes.result.sessionDetails.result.session_title=Displays the title of the session>session vc two
response.enrolled_classes.result.sessionDetails.result.session_start_format=Displays+the+start+date+and+time+of+the+class+session.+For+example+-+Aug+31%2C+2015+09%3A45+%28Time+is+in+12+hour+format%29>Aug 31, 2015 06:45
response.enrolled_classes.result.sessionDetails.result.session_start_date_format=Displays the start date of the class session. For example - Aug 31, 2015>Aug 31, 2015
response.enrolled_classes.result.sessionDetails.result.session_end_date_format=Displays the end date of the class session. For example - Aug 31, 2015>Aug 31, 2015
response.enrolled_classes.result.sessionDetails.result.session_start_time_format=Displays the start time of the class session in 12 hour format. For example - 09:45>06:45
response.enrolled_classes.result.sessionDetails.result.session_start_end_format=Displays the end time of the class session in 12 hour format. For example - 09:45>08:00
response.enrolled_classes.result.sessionDetails.result.session_start_time_form=Displays the meridiem of the class session start time. %28%22AM%22+or+%22PM%22%29>PM
response.enrolled_classes.result.sessionDetails.result.session_end_time_form=Displays the meridiem of the class session end time. %28%22AM%22+or+%22PM%22%29>PM>PM
response.enrolled_classes.result.sessionDetails.result.session_start_time_full=Displays+the+start+date+and+time+of+the+class+session.+For+example+-+Aug+31%2C+2015+19%3A45+%28Time+is+in+24+hour+format%29>Aug 31, 2015 18:45
response.enrolled_classes.result.sessionDetails.result.session_end_time_full=Displays the end date and time of the class session. +For+example+-+Aug+31%2C+2015+19%3A45+%28Time+is+in+24+hour+format%29>Aug 31, 2015 20:00
response.enrolled_classes.result.sessionDetails.result.ilt_session_start_time=Displays the start time of the ILT class session in 24 hour format. For example - 19:45>22:15
response.enrolled_classes.result.sessionDetails.result.ilt_session_end_time=Displays the end time of the ILT class session in 24 hour format. For example - 19:45>23:30
response.enrolled_classes.result.sessionDetails.result.ilt_session_start_date_format=Displays the start date of the ILT class session. For example - Aug 31, 2015>Aug 31, 2015
response.enrolled_classes.result.sessionDetails.result.ilt_session_end_date_format=Displays the end date of the ILT class session. For example - Aug 31, 2015>Aug 31, 2015
response.enrolled_classes.result.sessionDetails.result.ilt_session_start_time_format=Displays the start time of the ILT class session in 12 hour format. For example - 09:45>10:15
response.enrolled_classes.result.sessionDetails.result.ilt_session_start_end_format=Displays the end time of the ILT class session in 12 hour format. For example - 09:45>11:30
response.enrolled_classes.result.sessionDetails.result.ilt_session_start_time_form=Displays the meridiem of the ILT class session start time. %28%22AM%22+or+%22PM%22%29>PM>PM
response.enrolled_classes.result.sessionDetails.result.ilt_session_end_time_form=Displays the meridiem of the ILT class session end time. %28%22AM%22+or+%22PM%22%29>PM>PM
response.enrolled_classes.result.sessionDetails.result.ilt_session_start_format=Displays the start date and time of the ILT class session. For+example+-+Aug+31%2C+2015+09%3A45+%28Time+is+in+12+hour+format%29>Aug 31, 2015 10:15
response.enrolled_classes.result.sessionDetails.result.ilt_session_start_day=Displays the start day of the ILT class session. Allowed values are %22Mon%22, %22Tue%22, %22Wed%22, %22Thu%22, %22Fri%22, %22Sat%22, %22Sun%22.>Mon
response.enrolled_classes.result.sessionDetails.result.ilt_session_end_format=Displays the end date and time of the ILT class session. For+example+-+Aug+31%2C+2015+09%3A45+%28Time+is+in+12+hour+format%29>Aug 31, 2015 11:30
response.enrolled_classes.result.sessionDetails.result.ilt_session_start_time_full=Displays the start date and time of the ILT class session. For+example+-+Aug+31%2C+2015+19%3A45+%28Time+is+in+24+hour+format%29>Aug 31, 2015 22:15
response.enrolled_classes.result.sessionDetails.result.ilt_session_end_time_full=Displays the end date and time of the ILT class session. For+example+-+Aug+31%2C+2015+19%3A45+%28Time+is+in+24+hour+format%29>Aug 31, 2015 23:30
response.enrolled_classes.result.sessionDetails.result.server_date_time=Displays the date and time of the server in the server%27s timezone. For+example+-+Aug+26%2C+2015+14%3A24+%28Time+is+in+24+hour+format%29>Aug 26, 2015 13:14
response.enrolled_classes.result.sessionDetails.result.session_name=Displays the location name of the ILT class session.>
response.enrolled_classes.result.sessionDetails.result.session_address1=Displays the address line 1 of the ILT class session%27s location.>
response.enrolled_classes.result.sessionDetails.result.session_address2=Displays the address line 2 of the ILT class session%27s location.>
response.enrolled_classes.result.sessionDetails.result.session_country=Displays the country name of the ILT class session%27s location.>
response.enrolled_classes.result.sessionDetails.result.session_state=Displays the state name of the ILT class session%27s location.>
response.enrolled_classes.result.sessionDetails.result.session_city=Displays the city name of the ILT class session%27s location.>
response.enrolled_classes.result.sessionDetails.result.session_zipcode=Displays the zipcode of the ILT class session%27s location.>
response.enrolled_classes.result.sessionDetails.result.sess_timezone=Displays the time zone of the class session in short form. For ILT classes the location%27s time zone will be displayed and for VC classes the user-defined time zone will be diisplayed. For example - Asia/Seoul.>Asia/Seoul
response.enrolled_classes.result.sessionDetails.result.sess_fulltimezone=Displays+the+time+zone+of+the+class+session+in+full.+For+ILT+classes+the+location%27s+time+zone+will+be+displayed+and+for+VC+classes+the+user-defined+time+zone+will+be+diisplayed.+For+example+-+%28GMT+%2B09%3A00%29+Korean+Standard+Time%2FSeoul.>%28GMT+09:00%29 Korean Standard Time/Seoul
response.enrolled_classes.result.sessionDetails.result.session_latitude=Displays the latitude of the ILT class session%27s location. >
response.enrolled_classes.result.sessionDetails.result.session_longitude=Displays the longitude of the ILT class session%27s location.>
response.enrolled_classes.result.location_id=Displays the ID of the ILT class session%27s location>
response.enrolled_classes.result.location_name=Displays the name of the ILT class session%27s location>
response.enrolled_classes.result.location_addr1=Displays the address line 1 of the ILT class session%27s location.>
response.enrolled_classes.result.location_addr2=Displays the address line 2 of the ILT class session%27s location.>
response.enrolled_classes.result.location_city=Displays the city name of the ILT class session%27s location.>
response.enrolled_classes.result.location_state=Displays the state name of the ILT class session%27s location.>
response.enrolled_classes.result.location_zip=Displays the zipcode of the ILT class session%27s location.>
response.enrolled_classes.result.location_phone=Displays the phone number of the ILT class session%27s location.>
response.enrolled_classes.result.location_country=Displays the country name of the ILT class session%27s location.>
response.enrolled_classes.result.language=Displays the language name of the class>English
response.enrolled_classes.result.surveystatus=Displays+if+the+class+has+a+survey+associated+with+it.+%28%22TRUE%22+if+the+class+has+surveys+and+%22FALSE%22+if+the+class+does+not+have+surveys%29>FALSE
response.enrolled_classes.result.launch.result.ID=Displays the ID of the class>37
response.enrolled_classes.result.launch.result.ContentId=Displays the ID of the content attached to the class>33
response.enrolled_classes.result.launch.result.VersionId=Displays the ID of the version of the content attached to the class>35
response.enrolled_classes.result.launch.result.Code=Displays the code of the content>www.google.com
response.enrolled_classes.result.launch.result.Title=Displays the title of the content>www.google.com
response.enrolled_classes.result.launch.result.server_date_time=Displays the current date and time of the server>Aug 23, 2015 23:58
response.enrolled_classes.result.launch.result.Status=Displays the completion status of the enrollment. Please refer to the completion status section of the API codes document to view the list of completion status displayed.>
response.enrolled_classes.result.launch.result.Lessoncnt=Displays the number of lessons in the web-based content.>1
response.enrolled_classes.result.launch.result.LesScore=Displays the score obtainted for the current lesson. A content can have 1 or more lessons.>
response.enrolled_classes.result.launch.result.ClsScore=Displays the score obtained for this enrollment. >
response.enrolled_classes.result.launch.result.ContScore=Displays the Score obtained for the current content. This score is the sum of scores obtained for all the lessons in the current content.>
response.enrolled_classes.result.launch.result.ValidityDays=Displays the validity of a content from the day of enrollment. Can be a positive integer and empty if the content is valid all the time.>
response.enrolled_classes.result.launch.result.regDate=Displays the Date of enrollment>2015-08-23
response.enrolled_classes.result.launch.result.contentQuizStatus=Displays the Quiz completion status of the Web-based contents. Applicable for the SCORM, AICC and Tincan content types.>
response.enrolled_classes.result.launch.result.ContentCompletionStatus=Displays the Lesson completion status of the Web-based contents. Applicable for the SCORM, AICC and Tincan content types.>
response.enrolled_classes.result.launch.result.remDays=Displays the difference in the number of days between the current date and enrollment date. A positive integer or zero if enrollment date is today.>0
response.enrolled_classes.result.launch.result.LaunchType=Displays the abbreviation of the class delivery type. %28%22ILT%22, %22WBT%22, %22VC%22, %22VOD%22 for Classroom, Web-based, Virtual Class and Video classes respectively.>WBT
response.enrolled_classes.result.launch.result.ContentType=Displays the type of Web based content. The allowed values are %22SCORM 2004%22, %22SCORM 1.2%22, %22Tin Can%22, %22AICC%22, %22Video+on+Demand%22 and %22Knowledge Content%22.>Knowledge Content
response.enrolled_classes.result.launch.result.LearnerLaunchURL=Displays the launch URL for Learners. %28Only for Web-based or video content%29>http://www.google.com
response.enrolled_classes.result.launch.result.PresenterLaunchURL=Displays the Instructor URL of the VC class session. >
response.enrolled_classes.result.launch.result.MaxAttempt=Displays the maximum number of attempts a web based or video content can be launched. A positive integer or zero.>
response.enrolled_classes.result.launch.result.AttemptLeft=Displays the number of attempts left for a web based or video content to be launched. A positive integer or zero.>1
response.enrolled_classes.result.launch.result.IsLaunchable=Displays if the content cannot be launched if all the attempts have been consumed or if the validity of the content has expired. %28%221%22 if the content can be launched and %220%22 if the content cannnot be launched%29. Applicable only for Web-based and Video contents.>1
response.enrolled_classes.result.launch.result.LessonLocation=Displays the last viewed lesson of a web based content.>
response.enrolled_classes.result.launch.result.ContentStatus=Displays the consolidated completion statuses of all the lessons in a web based content. Please refer to the completion status section of the API codes document to view the list of displayed completion statuses.>
response.enrolled_classes.result.launch.result.masteryscore=Displays the mastery score set for a Web based content of type SCORM 2004, SCORM 1.2, Tin Can and AICC.>0
response.enrolled_classes.result.show_lnr_attach.result.attachment_id=Displays the ID of the attachment associated with this class>2
response.enrolled_classes.result.show_lnr_attach.result.reading_sequence=Displays the order in which the attachments of a class will be listed>1
response.enrolled_classes.result.show_lnr_attach.result.entity_id=Displays the ID of the class>343
response.enrolled_classes.result.show_lnr_attach.result.reading_title=Displays the name of the attachment>https://docs.google.com/sample
response.enrolled_classes.result.show_lnr_attach.result.reading_content=Displays the URL of the attachment>https://docs.google.com/spreadsheets/d
response.enrolled_classes.result.show_events=Displays if alternate classes are available or not. %28%221%22 if alternate classes are available, %220%22 if alternate classes are not available or are conflicting with the user%27s schedule%29>1
response.enrolled_classes.result.recertify_path=Displays the number of times that this particular class is recertified.>0
response.enrolled_classes.result.isRequired=Displays if the course is mandatory to complete the Training Plan. %28%22Y%22 if the course is mandatory and %22N%22 if the course is optional%29>Y
response.enrolled_classes.result.seqNo=Displays the sequence number of the course attached to the TP. A positive integer.>1
response.enrolled_classes.result.assessmentstatus=Displays if the class has a post assessment. %28%22TRUE%22 if the class has post assessment, %22FALSE%22 if the class does not have a post assessment%29.>FALSE
response.enrolled_classes.result.preassessmentstatus=Displays if the class has a pre assessment. %28%22TRUE%22 if the class has pre assessment, %22FALSE%22 if the class does not have a pre assessment%29.>FALSE
response.enrolled_classes.result.moduleid=Displays the ID of the module under which the particular course is grouped.>75
response.enrolled_classes.result.module_name=Displays the name of the module under which the particular course is grouped.>group1
response.enrolled_classes.result.module_code=Displays the code of the module under which the particular course is grouped.>grpco_32049
response.enrolled_classes.result.waitlist_priority=Displays the waitlist priority of the enrollment. A positive integer value.>
api_owner.name = Pradeep R;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 126
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 50 ; number of request which can be accept per minute

;API for Register TP
[RegisterTPAPI]
category = LearnerAPI
display_name = Enroll Users to a Training Plan
description = This API is used to enroll users to a Training Plan. Each course in a Training Plan should have atleast one class associated with it.
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning.inc
method_name = registerTPbyAPI;the name of the function that is to be executed when this api is called.
params.rosterobj.Learnerid = Y>Enter the ID of the Learner who should be registered. >1
params.rosterobj.ProgramId = Y>Enter the ID of the Training Plan for which the registration should be done.>1
params.rosterobj.ClassIds = N>Enter+the+Class+ID+for+which+the+registration+is+to+be+done.+Learners+should+be+registered+to+atleast+one+class+from+each+course.+Multiple+values+can+be+entered+by+adding+commas.+This+field+becomes+mandatory+if+the+below+parameter+%22RegType%22+contains+%22select_class%22.>1,2
params.rosterobj.RegDate = N>Enter the Date of Registration. The date should be entered in the YYYY-MM-DD format.>2012-07-25
params.rosterobj.RegType = N>Enter+%22select_class%22+to+select+any+one+of+the+class+if+any+of+the+courses+contains+multiple+classes.+If+not%2C+this+field+can+be+left+blank.>
params.userid = Y>Accepts only numerical values. This contains the ID of the User making this API call.>1
params.recertifyid = N>Enter+value+if+the+associated+class+can+be+used+for+recertification+after+the+Training+Plan+%28Certification%29+has+expired.+The+allowed+values+are+%221%22+or+%220%22>1
response.masterEnroll=Displays the training plan enrollment Id of the user>1
response.userid=Displays the id of the user who enrolled to the tp.>1
response.status=Displays the Enrollment status of the User. Please refer to the Class section of the API codes document to view the list of Enrollment statuses displayed for a Class.>Registered
response.username=Displays the name of the user who enrolled to the tp.>Admin
response.class_list.result.course_title=Displays the title of the Course.>
response.class_list.result.class_id=Displays the ID of the Class.
response.class_list.result.course_id=Displays the ID of the Course.
response.class_list.result.class_title=Displays the title of the Class
response.class_list.result.class_code=Displays the code of the Class.
response.class_list.result.delivery_type=Displays the delivery type of the Class.Please refer to the Class Delivery type section of the API Codes document to view the list delivery type codes.
response.class_list.result.description=Displays the description of the Class.
response.tp_courses.module_details.module_id=Displays the mapping ID of the course attached to the Training Plan>12
response.tp_courses.module_details.module_title=Displays the Group name of the courses which are grouped together in the Training Plan>12
response.tp_courses.module_details.module_code=Displays the Group code of the courses which are grouped together in the Training Plan>12
response.tp_courses.module_details.tagname= Displays tags attached to the Training Plan
response.tp_courses.course_details.clscount=Displays the number of classes listed under a course that is attached to the Training Plan>1
response.tp_courses.course_details.crs_id=Displays the ID of the course that is attached to the Training Plan>48
response.tp_courses.course_details.is_required=Displays+if+the+course+is+mandatory+to+complete+the+Training+Plan.+%28%22Y%22+if+the+course+is+mandatory%2C+%22N%22+if+it+is+not%29>Y
response.tp_courses.course_details.sequence_no=Displays the order in which the course is to be taken>1
response.tp_courses.course_details.crs_title=Displays the title of the course>Content Library to upload and share diverse
response.tp_courses.course_details.crs_code=Displays the code of the course>Content Library to upload and share diverse
response.tp_courses.course_details.crs_desc=Displays the description of the course>Content Library to upload and share diverse
response.tp_courses.course_details.start_date=Displays+the+date+from+which+the+course+is+valid.+%28Only+for+Certification%29>
response.tp_courses.course_details.end_date=Displays+the+date+till+which+the+course+is+valid.+%28Only+for+Certification%29>
response.tp_courses.course_details.registered_cnt=Displays the number of users enrolled to the course.>0
response.tp_courses.course_details.single_class=Displays the ID of the class if the course has only one class listeed under it. This filed will be empty if there are multiple classes listed under the course.>59
response.tp_courses.course_details.class_details.result.class_details.object_type=Displays+the+type+of+training+object.+In+this+case+the+set+value+is+%22Class%22.>Class
response.tp_courses.course_details.class_details.result.class_details.crs_id=Displays the ID of the course to which the class belongs>48
response.tp_courses.course_details.class_details.result.class_details.cls_id=Displays the ID of the class>59
response.tp_courses.course_details.class_details.result.class_details.cls_code=Displays the code of the class>Content Library to upload and share diverse
response.tp_courses.course_details.class_details.result.class_details.cls_title=Displays the title of the class>Content Library to upload and share diverse
response.tp_courses.course_details.class_details.result.class_details.cls_short_description=Displays the summary of the class>Content Library to upload and share diverse
response.tp_courses.course_details.class_details.result.class_details.delivery_type_code=Displays the delivery type code of the class. Please refer to the Class section of the API codes document to view the list of delivery type codes displayed.>lrn_cls_dty_wbt
response.tp_courses.course_details.class_details.result.class_details.currency_type=Displays+the+code+for+the+type+of+currency+used+%28%22cre_sys_crn_usd%22%29>cre_sys_crn_usd
;response.tp_courses.course_details.class_details.result.class_details.export_compliance=>
response.tp_courses.course_details.class_details.result.class_details.delivery_type_name=Displays the delivery type name of the class. Please refer to the Class delivery type section of the API Codes document to view the list of delivery type names.>Web-based
response.tp_courses.course_details.class_details.result.class_details.status=Displays+whether+the+class+is+shown+in+Catalog+or+not.+%28%22Hidden+in+Catalog%22+or+%22Shown+in+Catalog%22%29>Shown in Catalog
response.tp_courses.course_details.class_details.result.class_details.language=Displays the language of the class.Please refer to the Class language section of the API Codes document to view the list of status.>English
response.tp_courses.course_details.class_details.result.class_details.location=Displays+the+location+of+the+class.+%28only+for+ILT+Class%29>
response.tp_courses.course_details.class_details.result.class_details.locationname=Displays+the+location+of+the+class.+%28only+for+ILT+Class%29>
response.tp_courses.course_details.class_details.result.class_details.loationaddr1=Displays+the+first+line+of+the+address+of+the+location.+%28Only+for+ILT+Class%29>
response.tp_courses.course_details.class_details.result.class_details.locationaddr2=Displays+the+second+line+of+the+address+of+the+location.+%28Only+for+ILT+Class%29>
response.tp_courses.course_details.class_details.result.class_details.locationcity=Displays+the+city+of+the+class+location.+%28Only+for+ILT+Class%29>
response.tp_courses.course_details.class_details.result.class_details.locationstate=Displays the state of the class location.+%28Only+for+ILT+Class%29>
response.tp_courses.course_details.class_details.result.class_details.locationzip=Displays the zipcode of the class location.+%28Only+for+ILT+Class%29>
response.tp_courses.course_details.class_details.result.class_details.locationphone=Displays the phone number of the class location.+%28Only+for+ILT+Class%29>
response.tp_courses.course_details.class_details.result.class_details.price=Displays+the+price+of+the+class.+%28if+any%29>0.00
response.tp_courses.course_details.class_details.result.class_details.session_id=Displays+the+ID+of+the+class+session.+%28only+for+ILT+%2F+VC+class%29>
response.tp_courses.course_details.class_details.result.class_details.sess_start_date=Displays the start date of the class session.+%28only+for+ILT+%2F+VC+class%29>
response.tp_courses.course_details.class_details.result.class_details.sess_start_time=Displays the start time of the class session.+%28only+for+ILT+%2F+VC+class%29>
response.tp_courses.course_details.class_details.result.class_details.sess_end_time=Displays the end time of the class session.+%28only+for+ILT+%2F+VC+class%29>
response.tp_courses.course_details.class_details.result.class_details.sess_end_date=Displays the end date of the class session.+%28only+for+ILT+%2F+VC+class%29>
response.tp_courses.course_details.class_details.result.class_details.timezone=Displays the timezone of the class session.+%28only+for+ILT+%2F+VC+class%29>
response.tp_courses.course_details.class_details.result.class_details.country_name=Displays the country of the class location.+%28Only+for+ILT+Class%29>
response.tp_courses.course_details.class_details.result.class_details.language_code=Displays the language code of the class. Please refer to the languages section of the API Codes document to view the list of language codes displayed.>cre_sys_lng_eng
response.tp_courses.course_details.class_details.result.class_details.country_code=Displays the country code of the class location.+%28Only+for+ILT+Class%29>
response.tp_courses.course_details.class_details.result.class_details.registration_end_on=Displays the date in which enrollment for this class ends.>
response.tp_courses.course_details.class_details.result.class_details.enrcrs_id=Displays the course ID>
response.tp_courses.course_details.class_details.result.class_details.enrclsid=Displays the class ID>
response.tp_courses.course_details.class_details.result.class_details.clscrsid=Displays the ID of the course to which the class belongs>48
response.tp_courses.course_details.class_details.result.class_details.clsid=Displays the ID of the class>59
response.tp_courses.course_details.class_details.result.class_details.session_end_datetime=Displays the date and time in which the class session ends in YYYY-MM-DD HH:MM:SS format>
response.tp_courses.course_details.class_details.result.class_details.enrolled_id=Displays the class enrollment ID if the user has enrolled for this class. This field will be empty if User has not enrolled.>
response.tp_courses.course_details.class_details.result.class_details.waitlist_status=Displays the number of waitlisted seats.+%28only+for+ILT+%2F+VC+class%29>0
response.tp_courses.course_details.class_details.result.class_details.availableSeats=Displays the number of available seats.+%28only+for+ILT+%2F+VC+class%29>
response.tp_courses.course_details.class_details.result.class_details.session_details.session_title=Displays the title of the session>
response.tp_courses.course_details.class_details.result.class_details.session_details.session_day=Displays+the+day+on+which+the+session+is+held.+It+is+a+textual+representation+of+the+day+in+three+letters.+%28Mon%2C+Tue%2C+Wed%2C+Thu%2C+Fri%2C+Sat%2C+Sun%29
response.tp_courses.course_details.class_details.result.class_details.session_details.start_date=Displays+the+date+on+which+the+session+starts.+%28Example+-+Jan+01%2C+2015%29>
response.tp_courses.course_details.class_details.result.class_details.session_details.start_time=Displays+the+time+on+which+the+session+starts+in+HH%3AMM+format.+%2812+hour+format%29>
response.tp_courses.course_details.class_details.result.class_details.session_details.start_form=Displays+the+meridiem+of+the+session+start+time.+%28%22AM%22+or+%22PM%22%29>
response.tp_courses.course_details.class_details.result.class_details.session_details.end_time=Displays+the+time+on+which+the+session+ends+in+HH%3AMM+format.+%2812+hour+format%29>
response.tp_courses.course_details.class_details.result.class_details.session_details.end_form=Displays+the+meridiem+of+the+session+end+time.+%28%22AM%22+or+%22PM%22%29>
api_owner.name = Pradeep R;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 127
testengine.capture_response_field = Id ; it will used to run the update
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 40 ; number of request which can be accept per minute

;API for adding TP to cart
[addTPToCartAPI]
category = LearnerAPI
display_name = Add training plan to shopping cart
description = This Api is used to add the training plan into the shopping cart
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_lnrsearch/exp_sp_lnrsearch.inc
method_name = addTPToCartAPI;the name of the function that is to be executed when this api is called.
params.user_id = Y > Enter the ID of the Learner. >1
params.tpId=Y >Enter the ID of the training plan>1
params.Classids= N > This field stores the class ID of a class listed under each course that is associated with the Training Plan. Learners should be registered to at least one class from each course. Multiple values can be entered by adding commas. >1
params.object_type = Y > Enter the code for the type of training Plan. Please refer to the Training Plan type section of the API Codes document to view the list of allowed training plan codes. >cre_sys_obt_trn
params.regType = N> %0AEnter+%22select_class%22+if+any+of+the+courses+contains+multiple+classes.+If+not%2C+this+field+can+be+left+blank.%0A >MultiRegister
params.userid = Y > Enter the ID of the user making this API call. >1
response.status= %0ADisplays+the+status+of+adding+the+TPclass+to+cart+as+%28%22Success%22+or+%22Failure%22%29>success,failure
response.class_list= Displays all the Course and Class Details added to the cart.>class_list
response.class_list.course_title= Displays the title of the Course added to the cart.>
response.class_list.class_id= Displays the ID of the Class added to the cart.>
response.class_list.course_id= Displays the ID of the Course added to the cart.>
response.class_list.class_title= Displays the title of the Class added to the cart.>
response.class_list.class_code= Displays the code of the Class added to the cart.>
response.class_list.delivery_type= Displays the delivery type of the Class added to the cart.Please refer to the Class Delivery type section of the API Codes document to view the list delivery type codes.>
response.class_list.description= Displays the description of the Class added to the cart.>
response.class_list.enrolledid= Displays the enrollment ID for the training plan as it is added to cart.>
response.tp_courses= Displays the details of the courses associated to the training plan.>tp_courses
;response.tp_courses.module_details=Displays the details of the groups under the TP.Under each groups one or more courses will be associated.>
;response.tp_courses.module_details.module_id= Displays the module ID of the TP.>
;response.tp_courses.module_details.module_title= Displays the title of module.>
;response.tp_courses.module_details.module_code= Displays the code of module.>
;response.tp_courses.module_details.module_desc= Displays the description  of module.>
;response.tp_courses.course_details= Displays the details of the course associated under the TP.>
;response.tp_courses.course_details.clscount= Displays the count of classes under the course.>
;response.tp_courses.course_details.crs_id= Displays the ID of the course.>
;response.tp_courses.course_details.is_required= Displays+if+the+course+is+mandatory+to+complete+the+TP.+%28%221%22+if+the+course+is+mandatory+and+%220%22+if+it+is+not%29>
;response.tp_courses.course_details.sequence_no= Displays the sequence of the  course that should be displayed to the learner after enrollment.>
;response.tp_courses.course_details.crs_title= Displays the  title of the Course>
;response.tp_courses.course_details.crs_code= Displays the  code of the Course>
;response.tp_courses.course_details.crs_desc= Displays the  description of the Course>
;response.tp_courses.course_details.start_date= Null>
;response.tp_courses.course_details.end_date= Null>
;response.tp_courses.course_details.registered_cnt= Displays the number of times the course has been registered.>
;response.tp_courses.course_details.single_class= Displays the class ID under the course.>
;response.tp_courses.class_details= Displays+the+class+and+session%28for+ILT+%2F+VC%29+details+under+the+course.>
;response.tp_courses.class_details.object_type= Displays+the+object+type+of+training.+Allowed+value+is+%27Class%27.>
;response.tp_courses.class_details.crs_id= Displays the ID of the course.>
;response.tp_courses.class_details.cls_id= Displays the ID of the class.>
;response.tp_courses.class_details.cls_code= Displays the code of the class.>
;response.tp_courses.class_details.cls_title= Displays the title of the class.>
;response.tp_courses.class_details.cls_short_description= Displays the short description of the class.>
;response.tp_courses.class_details.delivery_type_code= Displays the delivery type of the class.Please refer to the Class delivery type section of the API Codes document to view the list of delivery type codes.>
;response.tp_courses.class_details.currency_type=Displays+the+code+for+the+type+of+currency+used+%28%22cre_sys_crn_usd%22%29>cre_sys_crn_usd
;response.tp_courses.class_details.export_compliance= Null>
;response.tp_courses.class_details.delivery_type_name= Displays the delivery type name of the class.Please refer to the Class delivery type section of the API Codes document to view the list of delivery type names.>
;response.tp_courses.class_details.status= Displays the status of the class.Please refer to the Class status section of the API Codes document to view the list of status.>
;response.tp_courses.class_details.language= Displays the language of the class.Please refer to the Class language section of the API Codes document to view the list of status.>
;response.tp_courses.class_details.location= Displays the location where the class session is going to be held.It is only for ITL/VC.>
;response.tp_courses.class_details.locationname= Displays the name of the location where the class session is going to be held.It is only for ITL/VC.>
;response.tp_courses.class_details.locationaddr1= Displays the address 1 of the location where the class session is going to be held.It is only for ITL/VC.>
;response.tp_courses.class_details.locationaddr2= Displays the address 2 of the location where the class session is going to be held.It is only for ITL/VC.>
;response.tp_courses.class_details.locationcity= Displays the city of the location where the class session is going to be held.It is only for ITL/VC.>
;response.tp_courses.class_details.locationstate= Displays the state of the location where the class session is going to be held.It is only for ITL/VC.>
;response.tp_courses.class_details.locationzip= Displays the zipcode of the location where the class session is going to be held.It is only for ITL/VC.>
;response.tp_courses.class_details.locationphone= Displays the phone number of the e location where the class session is going to be held.It is only for ITL/VC.>
;response.tp_courses.class_details.facility_id= Null>
;response.tp_courses.class_details.facl_contact_addr1= Null>
;response.tp_courses.class_details.facl_contact_state= Null>
;response.tp_courses.class_details.facl_contact_zipcode= Null>
;response.tp_courses.class_details.facl_contact_phone= Null>
;response.tp_courses.class_details.node_id= Displays the ID of the node for the class.>
;response.tp_courses.class_details.price= Displays the price of the class.>
;response.tp_courses.class_details.session_id=Displays ID of the session for the class.>
;response.tp_courses.class_details.sess_start_date= Displays the session start date for ILT+%2F+VC class.Date format is YYYY-MM-DD>
;response.tp_courses.class_details.sess_start_time= Displays the session start time for ILT+%2F+VC class.Time format is HH:MM>
;response.tp_courses.class_details.sess_end_time= Displays the session end time for ILT+%2F+VC class.Time format is HH:MM>
;response.tp_courses.class_details.sess_end_date= Displays the session end date for ILT+%2F+VC class.Date format is YYYY-MM-DD.>
;response.tp_courses.class_details.timezone= Displays the session timezone of the class.Please refer to the Timezone section of the API Codes document to view the list of Timezones.>
;response.tp_courses.class_details.country_name= Displays the country name of the session location.Please refer to the Country section of the API Codes document to view the list of Country Names.>
;response.tp_courses.class_details.language_code= Displays the Language code of the Class.Please refer to the Language section of the API Codes document to view the list of Language codes.>
;response.tp_courses.class_details.country_code= Displays the country code of the session location.Please refer to the Country section of the API Codes document to view the list of Country codes.>
;response.tp_courses.class_details.registration_end_on= Displays the end date of the registration allowed for the classs.Date format is YYYY-MM-DD.>
;response.tp_courses.class_details.enrcrs_id= Displays the enrolled course ID if  the user has already enrolled to the class.>
;response.tp_courses.class_details.enrclsid= Displays the enrolled class ID if  the user has already enrolled to the class.>
;response.tp_courses.class_details.clscrsid= Displays the enrolled course ID if the user has already enrolled to the class.>
;response.tp_courses.class_details.clsid= Displays the  class ID.>
;response.tp_courses.class_details.session_end_datetime= Displays the session end date and time of the class.Format is YYYY-MM-DD HH:MM>
;response.tp_courses.class_details.enrolled_id= Displays the ID of the enrollment if the user has already enrolled to the class.>
;response.tp_courses.class_details.availableSeats= Displays the number of seats available for the enrolling of the class.>
;response.tp_courses.class_details.waitlist_status= Displays the waitlist position of the user to the class.>
api_owner.name = Pradeep R;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 128
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 40 ; number of request which can be accept per minute

;API for user class under Manager
[userclassesunderManagerAPI]
category = LearnerAPI
display_name = User classes under Manager
description = The API is used to show user class under Manager.
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_myteam/exp_sp_myteam.module
method_name = getuserclassesunderManagerAPI;the name of the function that is to be executed when this api is called.
params.selobj.user_id= Y> Subordinate id >1
params.selobj.limit= N> Number Of records need to be retrieved. >1
params.selobj.page= N> Page number>1
params.selobj.action= N> Page number>1
params.selobj.startDate= N> Page number>1
params.selobj.endDate= N> Page number>1
params.selobj.cls_title= N> Title>test
params.userid = Y > User Id >1
response.enrolled_id= enrolled id >enrolled_id
response.class_id= class id >class_id
response.course_id= course id >course_id
response.enrolled_on= enrolled_on >enrolled_on
response.completed_on= completed_on >completed_on
response.canceled_on= canceled_on >canceled_on
response.created_on= created_on >created_on
response.updated_on= updated_on >updated_on
response.reg_status= reg_status >reg_status
response.comp_status= comp_status >comp_status
response.mand_status= mand_status >mand_status
response.status= status >status
response.type= type >type
response.class_title= class_title >class_title
response.description= description >description
response.mro_status= mro_status >mro_status
response.current_id= current_id >current_id
response.base_type= base_type >base_type
response.learning_type= learning_type >learning_type
response.sort_comp_status= sort_comp_status >sort_comp_status
response.is_compliance= is_compliance >is_compliance
response.SessionCompleted= SessionCompleted >SessionCompleted
response.row= row >row
response.classprice= classprice >0.0
response.mgrmarkcomp = Manager can mark complete >Y
response.waived_status = Return 1 if waived and return 0 if enrolled
api_owner.name = Sureshkumar M;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 129
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = no ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 50 ; number of request which can be accept per minute

;API for drop TP classes
[dropTPclassesAPI]
category = LearnerAPI
display_name = Cancel classes under a Training Plan
description = This API is used to cancel the class under a Training Plan
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_lnrlearningplan/exp_sp_lnrlearningplan.inc
method_name = dropTPclassunderManagerAPI;the name of the function that is to be executed when this api is called.
params.user_id = Y >This field stores the ID of the User for whom the Class is to be dropped>1
params.userid = Y >Accepts only numerical values. This contains the ID of the User making this API call.>1
params.Enrolled_id = Y > User Id This field stores the Enrollment ID of the User for whom the Class is to be dropped>1
response.status=Displays the status of whether the Class was cancelled or not. Please refer to the Class Section of the API Codes document to view the list of Class cancellation statuses displayed.>Success
api_owner.name = Sureshkumar M;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 130
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 40 ; number of request which can be accept per minute

;API for drop TP classes
[CompleteTPclassesAPI]
category = LearnerAPI
display_name = Mark Classes complete under a training plan
description = The API is used by manager Mark complete the class under a training plan.
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_myteam/exp_sp_myteam-myclass-search.inc
method_name = markcompleteTPclassunderManagerAPI;the name of the function that is to be executed when this api is called.
params.user_id = Y > User ID >1
params.userid = Y > User Id >1
params.Enrolled_id = Y > Enrolled_id >1
params.classId= Y >Class Id > 1
params.completionDate= Y >CompletionDate > 1
params.learning_type= Y > Possible values Class or Training plan > class
params.score= Y >Score > 1
response.title = Title>
response.code = Class Code>
response.description = Short Description>
response.type = Class Type>
response.status= Cancel Status>Success
api_owner.name = Sureshkumar M;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 131
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 50 ; number of request which can be accept per minute
;API for drop TP classes
[CompleteTPclassesAPI]
category = LearnerAPI
display_name = Mark Classes as completed under a Training Plan
description = This API is used by Managers to Mark Classes as completed under a Training Plan
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_myteam/exp_sp_myteam-myclass-search.inc
method_name = markcompleteTPclassunderManagerAPI;the name of the function that is to be executed when this api is called.
params.user_id = Y >Accepts only numerical values. Enter the ID of the User enrolled to the class.>10
params.userid = Y >Accepts only numerical values. This contains the ID of the User making this API call.>18
params.Enrolled_id = Y >Accepts only the numerical values. Enter the enrollment  ID of the User who is enrolled to the class>1
params.classId= Y >Accepts only numerical values. This field contains the Class ID.>1
params.completionDate= Y >Enter the date+on+which the Training Plan was completed. The date should be entered in the mm-dd-yyyy format.> 1
params.learning_type= Y >Enter+the+type+of+learning.+Allowed+values+are+%22Class%22+or+%22Training+plan%22> class
params.score= Y >Enter+the+Learner%27s+assessment+score+associated+with+this+class.> 1
response.title =Displays the title of the Training plan or the associated Class>
response.code =Displays the code of the Class that is associated with the Training Plan>
response.description =Displays the Class description>
response.type =Displays+the+type+of+class.+%28%22Classroom%22%2C+%22Web-based%22%2C+%22Virtual+Class%22%2C+%22Video%22%29>
response.status=Displays+the+status+of+the+class+%28%22Success%22+or+%22Failure%22%29>Success
api_owner.name = Sureshkumar M;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 131
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 50 ; number of request which can be accept per minute

;API for Get Assigned Surveys/Assessments
[getAssessmentDetailsAPI]
category = LearnerAPI
display_name = Get assigned Surveys/Assessments
description = The API is used to get the assigned surveys/assessments count.
ORM_file = /sites/all/modules/core/exp_sp_survey/exp_sp_survey_learner/exp_sp_surveylearner.inc
method_name = getAssessmentDetailsAPI;the name of the function that is to be executed when this api is called.
params.classid = N>Class Id>234
params.surveytype = N> survey, assessment>survey
params.userid = N>User Id>1
response.pre_status= Pre status>2
api_owner.name = AjayR;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 132
testengine.use_prev_response_field = Id ; it will used to run the update order
customer_display = no ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for create a group
[GroupCreationAPI]
category = AdminAPI
display_name = Create Group
description = The API is used to create a group
privilege_parameter = Learner group$$$create
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_people/exp_sp_administration_groups/exp_sp_administration_groups.inc
method_name = addNewGroupByRestAPI;the name of the function that is to be executed when this api is called.
params.form_state.values.name= Y> Enter the group name>GroupName_VERSION
params.form_state.values.org_id= N> Enter the organization ID to set as needed attribute of the group. Multiple values can be entered by adding commas.>
params.form_state.values.is_admin= N> Enter+the+group+type.+%28admin+or+learner%29.>1
params.form_state.values.user_type= N> Enter the user type code to set as needed attribute of the group. Multiple values can be entered by adding commas.>
params.form_state.values.employment_type = N>Enter the employment type code to set as needed attribute of the group. Multiple values can be entered by adding commas.>
params.form_state.values.country = N>Enter the country code to set as needed attribute of the group. Please refer to the Country section of the API Codes document to view the list of allowed Country codes. Multiple values can be entered by adding commas.>
params.form_state.values.state = N>Enter+the+state+code+to+set+as+needed+attribute+of+the+group.Please+refer+to+the+State+section+of+the+API+Codes+document+to+view+the+list+of+allowed+State+codes.The+state+code+should+be+given+with+the+country+code+also.+Example+%3A+%27IN-25%27+for+Country+as+%27India%27+and+state+as+%27Tamilnadu>
params.form_state.values.department = N>Enter the department code to set as needed attribute of the group.>
params.form_state.values.job_role = N>Enter the code of the job role to set as needed attribute of the group.>
params.form_state.values.language = N>Enter the language code to set as needed attribute of the group.Please refer to the language section of the API Codes document to view the list of allowed Language codes.>
params.form_state.values.role = N>Enter+the+role.+Possible+values+are+%22mgr%22+and+%22ins%22+which+refers+to+manager+and+instructor+respectively.+Both+values+can+be+given+using+comma+as+separator.>
params.form_state.values.hire_on_or_after = N>Enter+the+hire+date+with+on+or+after+mode.+Possible+values+are+%22mm-dd-yyyy%22+which+filters+hiredate+in+user.>
params.form_state.values.hire_on_or_before = N>Enter+the+hire+date+with+on+or+before+mode.+Possible+values+are+%22mm-dd-yyyy%22+which+filters+hiredate+in+user.>
params.form_state.values.hire_between = N>Enter+the+hire+between+date.+Possible+value+should+be+given+as+%22mm-dd-yyyyandmm-dd-yyyy%22+which+refers+to+start+and+end+date.>
params.userid = Y > Enter the ID of the user making this API call. >1
response.Id=  Displays the ID of the group created.>1
response.name= Displays the name of the group created.>1
api_owner.name = Amaran;the developer's name who develops the functionality
api_owner.email = ayiilamarans@expertus.com ;the developer's mail id who develops the functionality
test_category = add
testengine.category= add
testengine.apitestsequence = 133
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 30 ; number of request which can be accept per minute

;API for add users in group
[AddUsersInGroup]
category = AdminAPI
display_name = Add users to group
description = The API is used to add a users to group
privilege_parameter = Administrator group$$$update
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_people/exp_sp_administration_groups/exp_sp_administration_groups.inc
method_name = addUsersDetailsListByRestAPI;the name of the function that is to be executed when this api is called.
params.form_state.values.group_name= Y> Enter the Group name to which users are to be added>1
params.form_state.values.user_name= Y> Enter User Name. Multiple Name can be entered by adding commas>
params.form_state.values.add_or_remove= Y>%0AEnter+the+value+as+%22add%22+to+add+a+user+in+a+group+and++%22remove%22+or+%22delete%22+to+remove+the+user+from+the+group.%0A>Add
params.userid = Y > User Id >1
response.Id= Displays the IDs of the users added to the group>1
api_owner.name = Amaran;the developer's name who develops the functionality
api_owner.email = ayiilamarans@expertus.com ;the developer's mail id who develops the functionality
test_category = add
testengine.category= add
testengine.apitestsequence = 134
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 40 ; number of request which can be accept per minute

;API for add users in group
[assignUserToCourseClassAPI]
category = LearnerAPI
display_name = Manager assign user to course or class
description =  This API is used to assign a Course or a Class to a reportee of the manager.
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_myteam/exp_sp_myteam-catalog-search.inc
method_name = assignUserToCourseClassAPI;the name of the function that is to be executed when this api is called.
params.classDetails.crs_id= N>Enter ID of the Course to be assigned>1
params.classDetails.cls_id= N> Enter ID of the Class to be assigned>1
params.classDetails.mandatory= N> Enter+the+Class%2FTP+is+mandatory+or+not.+The+allowed+values+are+%22y%22+if+the+Class%2FTP+is+mandatory+and+%22N%22+if+it+is+not+mandatory.>1
params.classDetails.waitlist_seats= N> Enter+to+force+registration+even+if+the+class+has+only+waitlisted+seats+available.+The+allowed+values+are+%221%22+to+force+registration+and+%220%22+if+force+registration+is+not+needed.>1
params.classDetails.user_id= N> ID of the User to whom the Course/Class is to be assigned>1
params.userid = Y > Enter the ID of the user making this API call. >1
response.msgType=Displays+the+Message+Type.+%28%22Waitlist%22%2C+%22InstructorConflict%22%2C+%22AlreadyEnrolled%22%2C+%22Conflict%22%2C+%22AlreadyReserved%22%2C+%22Invalid%22%2C+%22Full%22%2C+%22InvalidUser%22%2C+%22Reserved%22%2C+%22CourseConflict%22%2C+%22PastRegistration%22%2C+%22Waitlisted%22%29%0A>1
response.msgString= Displays+the+Message+String.%28%22Waitlisted%22%2C+%22Class+title+cannot+be+registered.+User+is+the+instructor+to+the+class%22%2C+%22The+user+is+already+registered+for+this+class%22%2C+%22The+user+has+a+conflicting+class%22%29>1
api_owner.name = Ajay;the developer's name who develops the functionality
api_owner.email = ajayr@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category= list
testengine.apitestsequence = 135
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = no ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 40 ; number of request which can be accept per minute

;API for Get entity details
[GetUserDetailsAPI]
category = AdminAPI
display_name = Get entity details
description =  The API display the details of the entity - user/organization/job_role/job_title/department which is provided as input parameter to the API.
privilege_parameter = User$$$view
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_people/exp_sp_administration_user/exp_sp_administration_user.inc
method_name = getUserDetailsByRestAPI;the name of the function that is to be executed when this api is called.
params.name = Y>  Enter the name of the user to search>
params.type = Y> Enter+the+attribute+type+of+the+user+to+fetch.+Allowed+values+are+%22organization%22+to+fetch+organization%2C+%22job_role%22+to+fetch+job+role%2C+%22job_title%22+to+fetch+job+title+and+%22department%22+to+fetch+department >
params.userid = Y >Enter the ID of the user making this API call. >1
response.object_type = Displays+the+type+of+the+entity.+%28%22User%22%2C+%22Organization%22%2C+%22Job+Role%22%2C+%22Job+Title%22+or+%22Department%22%29.>
response.id= Displays the ID of the User.>1
response.username= Display the name of the user.>Admin
response.firstname= Displays the first name of the user.>Expertus
response.lastname= Displays the last name of the user>Administer
response.email= Displays the email ID of the user>admin@expertus.com
response.mobile_no = Displays the mobile number of the user>
response.orgname= Displays the organisation name of the user.>Expertus Infotech
response.status_code= Displays the status of the user. Please refer to the User status section of the API Codes document to view the list of displayed user statuses.>cre_usr_sts_atv
response.statecode= Displays the state code of the user>25
response.countrycode= Displays the country code of the user>IN
response.manager_id=Displays the manager ID of the user>3
response.dottedmanagersid=Displays the ID of the other managers of the user>3
response.dottedorganizationid=Displays the ID of the other organisation of the user>
response.timezonecode= Displays the timezone code of the user. Please refer to the timezone section of the API Codes document to view the list of allowed timezone codes.>
response.preferredlanguagecode=
Displays the preferred language code of the User. Please refer to the languages section of the API Codes document to view the list of displayed language codes.>
response.usertype= Displays the user type of the user>
response.employeeno= Displays the user employee number>
response.jobrole= Displays the job role of the user>
response.jobtitle= Displays the job title of the user>
response.deptcode= Displays the department of the user>
response.groups = Displays the list of groups name in which the user belongs to.>
;response items for organization
response.org_id = Displays the organization ID of the user if the type is given as Organization>
response.org_name = Displays the name of the organization if the type is given as organization>
response.org_description = Displays the description of the organization if the type given as organization>
response.org_type = Displays the type of the organization. if the type is given as organization>
response.org_status_code = Displays the status code of the organization if the type is given as Organization>
response.org_status = Displays the organization status if the type is given as organization>
;response items for Job role, Job title and Department
response.object_id = +Displays+the+ID+of+the+entity.+The+entity+can+be+of+job+role%2C+job+title%2C+or+Department%0A%0A>
response.object_name = Displays+the+name+of+the+entity.The+entity+can+be+of+job+role%2C+job+title%2C+or+Department%0A%0A%0A>
response.object_code = Displays+the+code+of+the+entity.+The+entity+can+be+of+job+role%2C+job+title%2C+or+Department%0A%0A%0A>
response.is_verified_add=Is address verification done. Possible value can be either+Yes+or+No+depends+on the address verification.>
response.is_valid_add=Is the given address is valid or invalid. Possible value can be either Valid or Invalid >
response.invalid_add_reason=Reason for invalid Address. >
api_owner.name = Ayyappan S;the developer's name who develops the functionality
api_owner.email = ayyappans@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category =list
testengine.apitestsequence = 136
testengine.verify_response_field = Id ; it will used to run the update org
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 50 ; number of request which can be accept per minute

;API for Create Discount
[CreateDiscountAPI]
category = AdminAPI
display_name = Create discount
description = This API is used to create a discount in the system
privilege_parameter = Discounts$$$create
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_commerce/exp_sp_administration_commerce_discounts/exp_sp_administration_commerce_discounts.inc
method_name = createDiscountByRestAPI;the name of the function that is to be executed when this api is called.
params.form_state.values.name = Y> Enter the discount name>
params.form_state.values.description = Y> Enter the description of the discount>
params.form_state.values.type = Y> Enter the type of the discount>percentage_off
params.form_state.values.is_active = Y> Enter+the+status+of+the+discount.+The+allowed+values+are+%220%22+for+deactivating+the+discount+or+%221%22+for+activating+the+discount.>0
params.form_state.values.value = Y> Enter the value of the discount >
params.form_state.values.currency_type = N> Enter the value of the currency type >USD
params.form_state.values.max_uses = Y> Enter the maximum number of times the discount can be used>
params.form_state.values.min_price = Y> Enter the minimum price of the class/TP for which the discount is to be applied. >
params.form_state.values.max_uses_per_user = Y> Enter the maximum number of times that this discount can be used per user >
params.form_state.values.max_uses_per_code = Y> Enter the maximum number of times that this discount can be used per code >
params.form_state.values.code = Y> Enter the unique code for discount.The discount will be applied to any order only by giving the code when purchasing any product.>
params.form_state.values.for_all_trainings = Y> %0AEnter+if+the+discount+is+applicable+to+all+the+classes+and+Training+Plans.+Possible+values+are+%221%22+if+applicable+to+all+classes+and+Training+Plans%2C+and+%220%22+if+not.%0A. >0
params.form_state.values.for_all_users = Y> %0AEnter+if+the+discount+is+applicable+to+all+the+users.%0APossible+values+are+%221%22+if+applicable+to+all+users%2C+and+%220%22+if+not. >0
params.form_state.values.combine_with_others = Y>Enter+if+this+discount+can+be+combined+with+any+other+discount+available+for+an+order.+Possible+values+are+%221%22+if+it+can+be+combined+with+other+discounts%2C+and+%220%22+if+not. >1
params.form_state.values.userid = Y > Enter the ID of the user making this API call. >1
response.id = id> Displays the created discount ID.
api_owner.name = Ayyappan S;the developer's name who develops the functionality
api_owner.email = ayyappans@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category =list
testengine.apitestsequence = 137
testengine.verify_response_field = Id ; it will used to run the update org
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 50 ; number of request which can be accept per minute

;API for Update Discount
[UpdateDiscountAPI]
category = AdminAPI
display_name = Update discount
description = This API is used to update a discount.
privilege_parameter = Discounts$$$update
entity_type_parameter = Discount$$$id
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_commerce/exp_sp_administration_commerce_discounts/exp_sp_administration_commerce_discounts.inc
method_name = updateDiscountByRestAPI;the name of the function that is to be executed when this api is called.
params.form_state.values.id = Y> Enter the ID of the Discount. Accepts only numeric values.>
params.form_state.values.name = Y> Enter the Name of the Discount>
params.form_state.values.description = Y> Enter the Description of the Discount>
params.form_state.values.type = Y> Enter+the+Type+of+the+Discount.+%0AThe+allowed+values+are++%22percentage_off%22+for+apply+the+discount+value+as+percentage+on+order+price+and+%22fixed_amount_off%22++for+reducing+the+value+from+the+order+price.>percentage_off
params.form_state.values.is_active = Y> Discount Status. Possible values are 0 and 1.>0
params.form_state.values.value = Y> Enter the Discount Value to be applied+on+the order price. >
params.form_state.values.currency_type = N> Enter the value of the currency type >USD
params.form_state.values.max_uses = Y> Enter the maximum number of times this discount can be used. >
params.form_state.values.min_price = Y> Enter the minimum billing amount to use the Discount. >
params.form_state.values.max_uses_per_user = Y> Enter the maximum number of times the Discount can be used by a specific User >
params.form_state.values.max_uses_per_code = Y> Enter the maximum number of times the Discount can be used per discount code >
params.form_state.values.code = Y> Enter+the+Discount+Code.+Multiple+Discount+Codes+can+be+entered+by+adding+%27%2F%27.+For+example%3A%0ACODE1%2FCODE2%2FCODE3>
params.form_state.values.for_all_trainings = Y> Set+if+the+Discount+is+applicable+for+all+the+Trainings.+The+allowed+values+are+%270%27+for+mark+the+discount+as+unavailable+for+all+training+and+%0A%271%27+to+mark+the+discount+as+available+for+all+trainings.>0
params.form_state.values.for_all_users = Y>Set+if+the+Discount+can+be+used+by+all+the+Users.+The+allowed+values+are+%271%27+if+the+discount+can+be+used+by+all+users+and+%270%27+if+the+discount+cannot+be+used+for+all+users.+ >0
params.form_state.values.combine_with_others = Y> Set+if+the+Discount+can+be+combined+with+other+Discounts.+The+allowed+values+%270%27+if+the+discount+cannot+be+combined+with+other+discounts+and+%271%27+if+the+discount+can+be+combined+with+other+discounts.>1
params.form_state.values.userid = Y > User Id >1
response.id = id> Discount Id
api_owner.name = Ayyappan S;the developer's name who develops the functionality
api_owner.email = ayyappans@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category =list
testengine.apitestsequence = 138
testengine.verify_response_field = Id ; it will used to run the update org
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 50 ; number of request which can be accept per minute

;API for List Discounts
[ListDiscountAPI]
category = AdminAPI
display_name = List of discounts
description = This API is used to list of discounts.
privilege_parameter = Discounts$$$view
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_commerce/exp_sp_administration_commerce_discounts/exp_sp_administration_commerce_discounts.inc
method_name = listDiscountByRestAPI;the name of the function that is to be executed when this api is called.
params.arguments.start = N > Enter+the+starting+point+from+which+the+Training+Plan+records+are+displayed.+Only+numerical+values+are+accepted.+Default+value%3A+0 >0
params.arguments.limit = N > Enter+only+numerical+values.+This+parameter+sets+the+number+of+records+retrieved+based+on+the+entered+value.+Default+value%3A+10%0A%0ANote%3A+If+optional+parameters+are+blank%2C+then+%27start%27+and+%27limit%27+parameters+become+Mandatory >10
params.arguments.sortby = N> Sort+by+specific+value.+Possible+values+are+%27AZ%27+for+title+to+sort+in+ascending+order%2C+%27ZA%27+to+sort+title+in+descending+order%2C+%27dateOld%27+to+list+from+old+data%2C+%27dateNew%27+to+list+data+from+recent+data%2C+%27type%27+to+sort+by+delivery+type+code+in+ascending+order%2C+Mandatory+to+list+mandatory+and+compliance+data+first.>
params.arguments.textfilter = N> Enter the class name, to filter by Class Name.>
params.arguments.discount_status = N> Enter+the+status+of+the+discount.+%28%221%22+if+the+discount+is+active+and+%220%22+if+the+discount+is+inactive%29>1
params.arguments.discount_type = N> Enter+the+discount+type.+The+allowed+values+are+%22percentage_off%22+and+%22fixed_amount_off%22.>
params.arguments.userid = Y > Enter the ID of the user making this API call.>1
response.id =  Displays the discount ID. >Discount Id
response.name =  Display the name of the discount. >Discount Name
response.description = Display the discount description. >Discount Description
response.type = Display+the+type+of+the+discount.+The+allowed+values+are++%22percentage_off%22+for+apply+the+discount+value+as+percentage+on+order+price+and+%22fixed_amount_off%22++for+reducing+the+value+from+the+order+price.%0AFor+example+-++For+%22percentage_off%22%2C+if+the+value+is+10+then+10%25+of+amount+from+order+price+will+be+deducted+as+discount.%0AFor+%22fixed_amount_off%22%2C+if+the+value+is+10+then+from+the+order+price+10+will+be+deducted. >percentage_off
response.is_active =Display+the+status+of+the+discount.+%22Yes%22+for+active+and+%22No%22+for+inactive. >Active
response.value = Displays+the+value+of+the+discount.It+will+be+deducted+from+the+order%2C+when+it+is+applied. >10
response.max_uses =Displays the maximum number of times this discount can be used. >10
response.min_price = Displays+the+minimum+price+for+the+class%2FTP+for+which+the+discount+is+to+be+applied.>100
response.max_uses_per_user = Displays the maximum numbers of times a user can use the discount. >1
response.max_uses_per_code = Displays+the+maximum+use+count+of+the+discount+per+code%2C+since+the+discount+can+have+multiple+discount+codes. >10
response.code = Displays the discount code. >Discount Code
response.for_all_trainings = +Displays+if+the+discount+is+applicable+to+all+trainings+or+not.+%28%22Yes%22+for+applicable+to+all%2C+%22No%22+for+not+applicable+to+all%29. >No
response.for_all_users = Displays+the+discount+is+applicable+to+all+users+or+not.+%28%22Yes%22+for+applicable+to+all%2C+%22No%22+for+not+applicable+to+all.%29 >No
response.combine_with_others = +Displays+if+this+discount+can+be+combined+with+any+other+discount+available+for+an+order.+%28%221%22+if+it+can+be+combined+with+other+discounts%2C+and+%220%22+if+not%29. >Yes
response.trainings = Displays+the+training+ids+for+which+the+discount+is+applicable+if+the+%27for_all_trainings%27+is+%270%27. >Id1, Id2
response.groups = Displays+the+group+ids+for+which+the+discount+is+applicable+if+the+%27for_all_users%27+is+%270%27. >Group1, Group2
api_owner.name = Ayyappan S;the developer's name who develops the functionality
api_owner.email = ayyappans@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 139
testengine.verify_response_field = Id ; it will used to run the update org
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for getting job_role and job_title
[getJobDetailsAPI]
category = LearnerAPI
display_name = Get all job role and job title
description = This API is used for getting Job roles and Job titles.
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_lnrsearch/exp_sp_lnrsearch.inc
method_name = getJobDetailsAPI;the name of the function that is to be executed when this api is called.
params.entitytype = Y > Enter+the+entity+type+of+job+title+or+job+role.+The+allowed+values+are+%22cre_usr_jtl%22+for+Job+title+and+%22cre_usr_jrl%22+for+Job+role >
params.type = Y >Enter+the+type+of+the+result.+The+allowed+values+are+%22count%22+to+get+the+total+number+of+entities+for+the+type%2C+%22list%22+to+get+the+ID%2Cname+and+code+of+all+the+entities. >list
params.userid = Y > Enter the ID of the user making this API call. >1
response.id= Displays the ID of the Job Role or Job Title >id
response.code= Displays the  Code of the Job Role or Job Title >code
response.name= Displays the Name of the Job Role or Job Title >name
api_owner.name = Pradeep R;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 140
testengine.use_prev_response_field = Id ; it will used to run the update order
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for update a group
[GroupUpdateAPI]
category = AdminAPI
display_name = Update a Group
description = The API is used to update a group
privilege_parameter = Learner group$$$update
entity_type_parameter = Group$$$id
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_people/exp_sp_administration_groups/exp_sp_administration_groups.inc
method_name = updateGroupByRestAPI;the name of the function that is to be executed when this api is called.
params.form_state.values.id= Y> Enter only the numeric values. Enter the ID of the group.>
params.form_state.values.name= Y> Enter the name of the group>GroupName_VERSION
params.form_state.values.org_id= N> Enter the organization ID to set as needed attribute of the group. Multiple values can be entered by adding commas.>
;params.form_state.values.is_admin= N> Enter+the+group+type.+%28admin+or+learner%29.>1
params.form_state.values.user_type= N> Enter the user type code to set as needed attribute of the group. Multiple values can be entered by adding commas.>
params.form_state.values.employment_type = N>Enter the employment type code to set as needed attribute of the group. Multiple values can be entered by adding commas.>
params.form_state.values.country = N>Enter the country code to set as needed attribute of the group. Please refer to the Country section of the API Codes document to view the list of allowed Country codes. Multiple values can be entered by adding commas.>
params.form_state.values.state = N>Enter+the+state+code+to+set+as+needed+attribute+of+the+group.Please+refer+to+the+State+section+of+the+API+Codes+document+to+view+the+list+of+allowed+State+codes.The+state+code+should+be+given+with+the+country+code+also.+Example+%3A+%27IN-25%27+for+Country+as+%27India%27+and+state+as+%27Tamilnadu%27>
params.form_state.values.department = N>Enter the department code to set as needed attribute of the group.>
params.form_state.values.job_role = N>Enter the code of the job role to set as needed attribute of the group.>
params.form_state.values.language = N>Enter the language code to set as needed attribute of the group.Please refer to the language section of the API Codes document to view the list of allowed Language codes.>
params.form_state.values.role = N>Enter+the+role.+Possible+values+are+%22mgr%22+and+%22ins%22+which+refers+to+manager+and+instructor+respectively.+Both+values+can+be+given+using+comma+as+separator.>
params.form_state.values.hire_on_or_after = N>Enter+the+hire+date+with+on+or+after+mode.+Possible+values+are+%22mm-dd-yyyy%22+which+filters+hiredate+in+user.>
params.form_state.values.hire_on_or_before = N>Enter+the+hire+date+with+on+or+before+mode.+Possible+values+are+%22mm-dd-yyyy%22+which+filters+hiredate+in+user.>
params.form_state.values.hire_between = N>Enter+the+hire+between+date.+Possible+value+should+be+given+as+%22mm-dd-yyyyandmm-dd-yyyy%22+which+refers+to+start+and+end+date.>
params.userid = Y > Enter the ID of the user making this API call.>1
response.Id= Displays the ID of the updated group.>1
response.name= Displays the updated Group name.>1
api_owner.name = Amaran;the developer's name who develops the functionality
api_owner.email = ayiilamarans@expertus.com ;the developer's mail id who develops the functionality
test_category = add
testengine.category= add
testengine.apitestsequence = 141
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 30 ; number of request which can be accept per minute

;API for list of group
[ListOfGroup]
category = AdminAPI
display_name = List of Groups
description = The API is used to display the list of groups.
privilege_parameter = Administrator group$$$view
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_people/exp_sp_administration_groups/exp_sp_administration_groups.inc
method_name = listOfAvailableGroupDetail;the name of the function that is to be executed when this api is called.
params.form_state.values.start = N > Enter+the+starting+point+from+which+the+Training+Plan+records+are+displayed.+Only+numerical+values+are+accepted.+Default+value%3A+0>0
params.form_state.values.limit = N > Enter+only+numerical+values.+This+parameter+sets+the+number+of+records+retrieved+based+on+the+entered+value.+Default+value%3A+10%0A%0ANote%3A+If+optional+parameters+are+blank%2C+then+%27start%27+and+%27limit%27+parameters+become+Mandatory >10
params.form_state.values.userid = Y > Enter the country full name >1
params.form_state.values.filter.grpstatus= N>Enter the group status code. Please refer to the User Groups section of the API Codes document to view the list of allowed group status codes.>cre_sec_sts_atv
params.form_state.values.filter.grporg= N>Enter the organization name>
params.form_state.values.filter.role= N>Enter the role name>
params.form_state.values.filter.grpjobrole= N>Enter the job role name>
params.form_state.values.filter.grpusrtyp= N>Enter the user type name>
params.form_state.values.filter.grpempl= N>Enter the employment type name>
params.form_state.values.filter.grpdep= N>Enter the department name>
params.form_state.values.filter.grplang= N>Enter the Language code. Please refer to the languages section of the API COdes document to view the list of allowed language codes.>
params.form_state.values.filter.grpcontry= N>Enter the country full name>
params.form_state.values.filter.grploc= N>Enter the country full name>
response.Id= Displays the group ID.>
response.name= Displays the group name>
response.grpstatus= Displays the group status code. Please refer to the User Groups section of the API Codes document to view the list of allowed group status codes.e>
response.is_admin= Displays the type of group, whether admin or learner group.>
response.users_list= +Displays+the+list+of+users+ID+matched%2Fadded+with+that+group.This+will+displayed+only+for+admin+group.>
response.grporg= Displays the Organization name added as the attribute in that group.>
response.role=  Displays the role name as the attribute in that group.>
response.grpjobrole=  Displays the job role name as the attribute in that group.>
response.grpusrtyp=Displays the user type name as the attribute in that group.>
response.grpempl= Displays the employment type name as the attribute in that group.>
response.hire_date= Displays the hire dates attribute in that group.>
response.grpdep= Displays the department name as the attribute in that group.>
response.grplang=  Displays the language code. Please refer to the languages section of the API Codes document to view the list of displayed language codes.>
response.grpcontry=  Displays the country full name as the attribute in that group.>
response.grploc= Displays the state name as the attribute in that group.>
api_owner.name = Amaran;the developer's name who develops the functionality
api_owner.email = ayiilamarans@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category= list
testengine.apitestsequence = 142
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no=======
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 50 ; number of request which can be accept per minute

;API for Analytics Report
[getAnalyticsReportDataAPI]
category = LearnerAPI
display_name = API for listing analytical data
description = The API is used to retrieve the analytical data of the user
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_myteam/exp_sp_myteam-catalog-search.inc
method_name = getAnalyticsReportDataAPI;the name of the function that is to be executed when this api is called.
params.userid = Y>User Id>6
params.startDate = N>Start Date>
params.endDate = N>End Date>
params.compliance = N>Get Compliance Report>
params.action = N>Action Type>count
params.cls_status = N>Action Type>lrn_crs_cmp_enr
response.my_comp_status = My Comp Status >lrn_crs_reg_cnf
response.my_comp_status_count = My Comp Count>2
response.avg_comp_status = Avg Comp Status >lrn_crs_reg_cnf
response.avg_comp_status_count = Avg Comp Count >4
response.cls_title = Class Title >4
response.cls_code = Class Code >4
response.class_id = Class Id >4
response.course_id = Course Id >4
response.description = Class Description >4
response.comp_status = Class Status >4
response.count = Status Count >4
response.overall_count = Overall Enrollments count >4
response.delivery_type_code = Overall Enrollments count >4
response.mro_id = Overall Enrollments count >4
response.is_compliance = Overall Enrollments count >4
response.avg_score = Average Score >4
api_owner.name = AjayR;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 143
testengine.use_prev_response_field = Id ; it will used to run the update order
customer_display = no ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for displaying dashBoard
[getDashboardDetailsAPI]
category = LearnerAPI
display_name = API for displaying dashBoard
description = The API is used to retrieve the analytical data of the user
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_myteam/exp_sp_myteam-catalog-search.inc
method_name = getDashboardDetailsAPI;the name of the function that is to be executed when this api is called.
params.userid = Y > User ID >1
params.subordinate_id = N>Subordinate Id>3
params.action = N>Action>chartView
params.crs_status = N>Course Status>Course Status
response.report_count = Report count >2
response.manager_id = Manager Id>2
response.user_id = Subordinate Id>2
response.full_name = Test user>2
response.email_id = Email Id>2
response.completed_count = Completion status>2
response.enrolled_count = Status Count>2
response.overall_count = Overall Count>2
response.crs_title = Course Title>2
response.crs_code = Course Code>2
response.crs_id = Course Id>2
response.crs_short_description = Course Id>2
api_owner.name = AjayR;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 144
testengine.use_prev_response_field = Id ; it will used to run the update order
customer_display = no ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute


;API for FiveStarRating
[setFiveStarRatingMobileAPI]
category = LearnerAPI
display_name =  Get Five Star Rating
description = The API is used to rate a Class/Course by the Learner
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning.inc
method_name = setFiveStarRatingMobileAPI;the name of the function that is to be executed when this api is called.
params.userid = Y> Enter the ID of the user making this API call.>1
params.user_id = Y > Enter the ID of the user who is registered to the class. >1
params.classId = Y> Displays the ID of the rated Class >1
params.rating = Y> Enter+Rating+for+the+Class.+The+allowed+values+are+%2220%22%2C+%2240%22%2C+%2260%22%2C+%2280%22+and+%22100%22  >1
params.entityType = Y> Enter+the+Type+of+entity.+The+allowed+values+are+%22Class%22+for+Class%2C+%22cre_sys_obt_trn%22+for+Learning+plan%2C+%22cre_sys_obt_cur%22+for+Curricula%2C+%22cre_sys_obt_crt%22+for+Certification.%0A >class
response.average_rating= Displays the average Rating for the Class >6
response.vote_value= Displays+the+value+of+the+rating+given+for+the+class.+%28%2220%22%2C+%2240%22%2C+%2260%22%2C+%2280%22+and+%22100%22%29 >voting value>6
response.vote_time=  Displays the date+on+which the rating was done in Y-m-d format. >Time voted>6
response.classId = Displays the ID of the rated Class> Class Id>1
response.entity_type = Displays+the+Type+of+entity.+%28%22Class%22+for+Class%2C+%22cre_sys_obt_trn%22+for+Learning+plan%2C+%22cre_sys_obt_cur%22+for+Curricula%2C+%22cre_sys_obt_crt%22+for+Certification%29.>6
response.no_of_rating = Displays the total number of votes >Total voting >6
api_owner.name = Praveenkumar;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 145
testengine.capture_response_field = Id ; it will used to run the user profile
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for storing device ID for push notification
[setPushNotificationServiceAPI]
category = LearnerAPI
display_name = API for storing device ID for push notification
description = The API is used for storing device ID for push notification
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_lnrsearch/exp_sp_lnrsearch.inc
method_name = setPushNotificationServiceAPI;the name of the function that is to be executed when this api is called.
params.userid = Y > User ID >1
params.user_id = Y > User ID >1
params.full_name = Y > Full Name >1
params.email_id = Y > Email ID >1
params.reg_id = N>Device registration Id>3
response.status = Status>Success
api_owner.name = AjayR;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 146
testengine.use_prev_response_field = Id ; it will used to run the update order
customer_display = no ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for getting push notification details
[getPushNotificationDetailsAPI]
category = LearnerAPI
display_name = API for getting fired notification list
description = The API is used for getting fired notification list
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_lnrsearch/exp_sp_lnrsearch.inc
method_name = getPushNotificationDetailsAPI;the name of the function that is to be executed when this api is called.
params.userid = Y > User ID >1
params.user_id = Y > User ID >1
params.action = Y > Action >Get
params.viewed = N > Viewed >1
params.notification_id = N > Notification ID >1
params.soft_delete = N > Soft Delete >1
params.notification_id = N > Notification Id >Get
response.token_str = Token string>Detail
response.action_detail = Action details>Detail
response.msg_id = Message Id>Message Id
response.msg_type = Message type>Message type
response.updated_on = Updated on>Updated
response.db_time = Db time>Db time
response.enrolled_status = Enrolled status>Enrolled status
response.notification_template = Notification template>Notification template
response.notification_id = Notification id>Notification id
response.notification_title = Notification title>Notification title
response.notification_subject = Notification subject>Notification subject
response.notification_notviewed = Notification viewed>Notification viewed
response.cls_status = Class status>Class status
response.delivery_type_name = Delivery type>Delivery type
response.viewed = Viewed>1
response.recertify_path = Recertify>1
response.soft_delete = Soft delete>1
api_owner.name = AjayR;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 147
testengine.use_prev_response_field = Id ; it will used to run the update order
customer_display = no ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for configuring push notification
[configurePushNotificationDetailsAPI]
category = LearnerAPI
display_name = API for configuring push notification
description = The API is used to configuring do not disturb service in push notification
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_lnrsearch/exp_sp_lnrsearch.inc
method_name = configurePushNotificationDetailsAPI;the name of the function that is to be executed when this api is called.
params.userid = Y > User ID >1
params.user_id = Y > User ID >1
params.from_time = N > User ID >1
params.to_time = N > User ID >1
params.weekend = N > User ID >1
params.action = N > Action >get|post
params.certification = N > User ID >1
params.mylearning = N > User ID >1
params.myclasses = N > User ID >1
params.myteam = N > User ID >1
params.receive_notification = N > User ID >1
response.result = Success>Success
response.from_time = From time>1
response.to_time = To time>1
response.weekend = Weekend>1
response.certification = Certification>1
response.mylearning = My learning>1
response.myclasses = My classes>1
response.myteam = My team>1
response.receive_notification = Receive notification>1
api_owner.name = AjayR;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 148
testengine.use_prev_response_field = Id ; it will used to run the update order
customer_display = no ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for Create Custom field to entities
[CreateCustomFieldAPI]
category = AdminAPI
display_name = Create Custom Field
privilege_parameter = Manage Admin API$$$create
description = The API is used to create Custom Fields for an entity.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_learning/exp_sp_administration_custom_fields.inc
method_name = createCustomFieldByRestAPI;the name of the function that is to be executed when this api is called.
params.form_state.values.entity_type = Y> Enter the entity type of the object. Possible values: course, class, trainingplan, survey, assessment, user, organization, location.>course
params.form_state.values.entity_id = Y> Enter the Id of the entity for which the Custom field has to be created.>1
params.form_state.values.custom_label = Y> Enter the custom label value. Enter a valid unique value to the single entity.>custom label
params.form_state.values.custom_value = Y> Enter the value for the custom label.>sample value
params.userid=Y > Enter only numerical values. Enter the ID of the User making this API call. >1
response.id= Displays the created custom field Id>1
api_owner.name = Thamilarasan;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = add
testengine.category=add
testengine.apitestsequence = 149
testengine.capture_response_field = Id ; it will used to run the update Custom Field
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 50 ; number of request which can be accept per minute

;API for Update Custom Field
[UpdateCustomFieldAPI]
category = AdminAPI
display_name = Update Custom Field
privilege_parameter = Manage Admin API$$$update
description = The API is used to update a custom fields in an entity.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_learning/exp_sp_administration_custom_fields.inc
method_name = updateCustomFieldByRestAPI;the name of the function that is to be executed when this api is called.
params.form_state.values.entity_type = Y> Enter the entity type of the object. Possible values: course, class, trainingplan, survey, assessment, user, organization, location.>course
params.form_state.values.entity_id = Y> Enter the Id of the entity for which the Custom field has to be updated.>1
params.form_state.values.custom_label = Y> Enter the custom label value.  >custom label
params.form_state.values.custom_value = Y> Enter the value for the custom label.>sample value
params.userid=Y > Enter only numerical values. Enter the ID of the User making this API call. >1
response.id= Displays the Updated custom field Id>1
api_owner.name = Thamilarasan;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = update
testengine.category=update
testengine.apitestsequence = 150
testengine.capture_response_field = Id ; it will used to run the update Custom Field
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 50 ; number of request which can be accept per minute

;API for List Custom Field
[ListCustomFieldAPI]
category = AdminAPI
display_name = List of Custom Field
privilege_parameter = Manage Admin API$$$view
description = The API is used to get the list of Custom Fields for an entity.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_learning/exp_sp_administration_custom_fields.inc
method_name = listCustomFieldApi;the name of the function that is to be executed when this api is called.
params.entity_type = Y > Enter the entity type of the object. Possible values: course, class, trainingplan, survey, assessment, user, organization, location. >course
params.entity_id = Y > Enter the Id of the entity for which the Custom field list is to be retrieved >1
params.start = N >  Used to retrieve the records from the position that we specify here. Default value: 0 >0
params.limit = N >  Denotes the number of records need to be retrieved. Default value: 10. Note: If optional parameters are blank, then start and limit parameters become Mandatory >10
params.userid = Y > Enter only numerical values. Enter the ID of the User making this API call.  >1
response.id= Displays the Id of the custom field>1
response.field_label= Displays the label of the custom field>Sample Label
response.field_value= Displays the value of the custom field>value
api_owner.name = Thamilarasan;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category = list
testengine.apitestsequence = 151
testengine.verify_response_field = Id
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute


;API for Delete Custom Field
[deleteCustomFieldAPI]
category = AdminAPI
display_name = Delete Custom Field attached to Entity
privilege_parameter = Manage Admin API$$$delete
description = The API is used to delete a Custom Field associated with an entity.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_learning/exp_sp_administration_custom_fields.inc
method_name = deleteCustomFieldByRestAPI;the name of the function that is to be executed when this api is called.
params.form_state.values.entity_type = Y> Enter the entity type of the object. Possible values: course, class, trainingplan, survey, assessment, user, organization, location.>course
params.form_state.values.entity_id = Y> Enter the Id of the entity type.>1
params.form_state.values.custom_label = Y> Enter the value for the custom label. >custom label
params.userid = Y > Accepts only numerical values. This contains the ID of the User making this API call. > 1
response.status= Displays the status of the custom field deletion >Success
api_owner.name = Thamilarasan;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = update
testengine.category=update
testengine.apitestsequence = 152
testengine.capture_response_field = Id ; it will used to list attached content
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for configuring push notification
[getCDNUrlAPI]
category = LearnerAPI
display_name = API for getting CDN URL
description = The API is used to configuring do not disturb service in push notification
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning.inc
method_name = getCDNUrlAPI;the name of the function that is to be executed when this api is called.
params.userid = Y > User ID >1
params.user_id = Y > User ID >1
params.content_url = Y > Content Url >1
response.play_url = Success>Success
api_owner.name = AjayR;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 153
testengine.use_prev_response_field = Id ; it will used to run the update order
customer_display = no ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for configuring push notification
[getCurrencyBaseRateAPI]
category = LearnerAPI
display_name = API for getting currency base rate
description = The API is used to configuring do not disturb service in push notification
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning.inc
method_name = getCurrencyBaseRateAPI;the name of the function that is to be executed when this api is called.
params.userid = Y > User ID >1
params.user_id = Y > User ID >1
params.selected_currency = Y > Selected currency type >1
response.base_type = Base Type>INR
response.convert_type = Convert Type>USD
response.base_rate = Base Rate>1
api_owner.name = AjayR;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 154
testengine.use_prev_response_field = Id ; it will used to run the update order
customer_display = no ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for configuring push notification
[getenabledCurrencyAPI]
category = LearnerAPI
display_name = API for getting enabled currency details
description = The API is used to configuring do not disturb service in push notification
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning.inc
method_name = getenabledCurrencyAPI;the name of the function that is to be executed when this api is called.
params.userid = Y > User ID >1
params.user_id = Y > User ID >1
response.code = Currrency code>cre_sys_crn_inr
response.name = Currrency name>Indian Rupee
response.label = Currrency Label>INR
response.symbol = Currrency Rate>
api_owner.name = AjayR;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 155
testengine.use_prev_response_field = Id ; it will used to run the update order
customer_display = no ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for Update Roster
[UpdateRosterInternalAPI]
category = AdminAPI
display_name = Update user%27s registration to a class internal
description = This API is used to update a User%27s registration to a class
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_learning/exp_sp_administration_class_register.inc
method_name = UpdateRosterInternalAPI;the name of the function that is to be executed when this api is called.
params.form_state.action = Y>This+field+is+used+the+change+the++status+of+an+enrollment.+Allowed+values+are+%22canceled%22%2C+%22enrolled%22%2C+%22completed%22%2C>completed
params.form_state.EnrollId = Y>Enter the Enrollment ID of the User.>
params.form_state.course_id = Y>Enter the Course ID.>
params.form_state.class_id = Y>Enter the Class ID>
params.form_state.RegStatusDate = N>This field stores the date in which the User registration/cancellation to the class was done. The date should be mentioned in mm/dd/yyyy hh:mm:ss format. Time should be entered in 24-hour format.>07/25/2014 12:12:00
params.form_state.CompletionDate = N>This field stores the date in which the class was completed. The date should be entered in mm/dd/yyyy hh:mm:ss format. Time should be entered in 24 hours format.>07/25/2014 12:12:00
params.form_state.Score = N>Enter the Assessment score for the class.>
params.userid=Y >Accepts only numerical values. This contains the ID of the User making this API call.>1
response.Id=Displays the registration ID of the User who has registered for a Class>1
response.Status=Displays+the+User%27s+enrollment+status+for+the+class.+%28Please+refer+to+the+Class+section+in+the+API+Codes+document+to+view+the+list+of+enrollment+status+displayed.%29>Reserved
response.UserId=Displays the ID of the User who has registered for the class>1
response.UserName=Displays the Username of the User who has registered for the class.>admin
api_owner.name = Indhuja;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = update
testengine.category=update
testengine.apitestsequence = 156
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = no ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 40 ; number of request which can be accept per minute

;API for getting comparison details of users under manager
[getUserComparisonResultsAPI]
category = LearnerAPI
display_name = API for getting comparison details of users under manager
description = The API is used for getting comparison details of users under manager
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_lnrsearch/exp_sp_lnrsearch.inc
method_name = getUserComparisonResultsAPI;the name of the function that is to be executed when this api is called.
params.userid = Y > User ID >1
params.user_id = Y > User ID >1
params.input_command = Y > Input Voice commanc >compare ajay and pradeep
params.startDate = Y > Start Date >2015-9-28
params.endDate = Y > Start Date >2015-10-28
response.user_id = User ID>1
response.completed = Completed>2
response.enrolled = Enrolled>1
response.count_reminder = Reminder>1
response.count_calls = Calls>2
response.reminder_overall_count = Reminder overall>1
response.calls_overall_count = Calls overall>1
response.incomplete = Incomplete>2
response.program_completed = Program completed>1
response.program_enrolled = Program enrolled>1
response.program_incomplete = Program incomplete>1
response.compliance_completed = Compliance completed>1
response.compliance_pending = Compliance pending>1
response.compliance_expired = Compliance expired>1
response.certification_completed = Certification completed>1
response.certification_expired = Certification expired>1
response.overall_class_count = Overall class count>1
response.overall_program_count = Overall program count>1
response.overall_certification_count = Overall certification count>1
response.full_name = Full Name>test
response.points = Points>1
response.badges = Badges>1
response.profile_pic = Profile picture>profile pic url
response.email_id = Email Id>Email id
response.employee_no = Employee number>Employee number
response.status = Response text>Success
api_owner.name = AjayR;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 157
testengine.use_prev_response_field = Id ; it will used to run the update order
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for updating reminder details
[UpdateReminderCallAPI]
category = LearnerAPI
display_name = API for updating reminder details
description = The API is used for updating reminder details
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_lnrsearch/exp_sp_lnrsearch.inc
method_name = UpdateReminderCallAPI;the name of the function that is to be executed when this api is called.
params.userid = Y > User ID >1
params.subordinate_id = Y > User ID >1
params.reminder = N > Reminder>1
params.call = N > Call>1
api_owner.name = AjayR;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 158
testengine.use_prev_response_field = Id ; it will used to run the update order
customer_display = no ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for getting list of classes in catalog
[getCatalogClassListAPI]
category = LearnerAPI
display_name = API for getting list of classes in catalog
description = The API is used for updating reminder details
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_lnrsearch/exp_sp_lnrsearch.inc
method_name = getCatalogClassListAPI;the name of the function that is to be executed when this api is called.
params.userid = Y > User ID >1
params.user_id = Y > User ID >1
params.filter_text = N > Text Filter>1
response.cls_title = Class title>test
response.cls_id = Class id>2
response.crs_id = Course id>2
response.dl_type = Delivery type code>lrn_cls_dty_vod
api_owner.name = AjayR;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 159
testengine.use_prev_response_field = Id ; it will used to run the update order
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for Change Registration Status to Waived.
[UpdateRegistrationStatusToWaived]
category = AdminAPI
display_name = Update Registration Status to Waived
privilege_parameter = Course/Class$$$update
description = Update Registration Status to Waived and Can be Revert to Original Status.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_learning/exp_sp_administration_learning.inc
method_name = UpdateRegistrationStatusToWaivedByAPI;the name of the function that is to be executed when this api is called.
params.form_state.values.enrollId = Y>Enrollment Id for Class or Traning Plan. Multiple values can be entered by adding commas>
params.form_state.values.reason = Y>Reason For Registraton Status Change>
params.form_state.values.type = Y> Possible values for this field are class, tp>class
params.form_state.values.status = Y>Possible values for this field are yes,revert>yes
params.form_state.values.user_id = Y>Accepts only numerical values. This contains the ID of the User Id updated by.>1
params.userid=Y >Accepts only numerical values. This contains the ID of the User making this API call.>1
response.Id=Displays the registration ID of the User who has updated for a Class or Tp>1
api_owner.name = Amaran S;the developer's name who develops the functionality
api_owner.email = ayiilamarans@expertus.com ;the developer's mail id who develops the functionality
test_category = update
testengine.category=update
testengine.apitestsequence = 157
testengine.capture_response_field = Id ; it will used to run the update enrollment
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 40 ; number of request which can be accept per minute

;API for getting TP details for an enrollment
[getTPdetailsForEnrollmentAPI]
category = LearnerAPI
display_name = API for getting TP details for an enrollment
description = The API is used for getting TP details for an enrollment
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_lnrenrollment/exp_sp_lnrenrollment.inc
method_name = getTpDetailsForAClass;the name of the function that is to be executed when this api is called.
params.userid = Y > User ID >1
params.user_id = Y > User ID >1
params.master_enrollment_id = Y > Master Enrollment ID >1
params.crs_id = N > Course Id >1
response.tp_details.result.program_id=Id of the training plan.>55
response.tp_details.result.overall_status=Training Plan Enrollment Status. Possible values can be seen in Training Plan Enrollment Status section of API codes page.>lrn_tpm_ovr_enr
response.tp_details.result.percentage_complete=percentage of completion. Possible values from 0 to 100.>0
response.tp_details.result.title=Title of the training plan.>What is a Training Plan?
response.tp_details.result.object_type=Type of the training plan. Possbile values can be seen in Training Plan Type in API codes page.>cre_sys_obt_cur
response.tp_course_data.module_details.module_id=Displays the mapping ID of the course attached to the Training Plan>12
response.tp_course_data.module_details.module_title=Displays the Group name of the courses which are grouped together in the Training Plan>12
response.tp_course_data.module_details.module_code=Displays the Group code of the courses which are grouped together in the Training Plan>12
response.tp_course_data.course_details.clscount=Displays the number of classes listed under a course that is attached to the Training Plan>1
response.tp_course_data.course_details.crs_id=Displays the ID of the course that is attached to the Training Plan>48
response.tp_course_data.course_details.is_required=Displays+if+the+course+is+mandatory+to+complete+the+Training+Plan.+%28%22Y%22+if+the+course+is+mandatory%2C+%22N%22+if+it+is+not%29>Y
response.tp_course_data.course_details.sequence_no=Displays the order in which the course is to be taken>1
response.tp_course_data.course_details.crs_title=Displays the title of the course>Content Library to upload and share diverse
response.tp_course_data.course_details.crs_code=Displays the code of the course>Content Library to upload and share diverse
response.tp_course_data.course_details.crs_desc=Displays the description of the course>Content Library to upload and share diverse
response.tp_course_data.course_details.start_date=Displays+the+date+from+which+the+course+is+valid.+%28Only+for+Certification%29>
response.tp_course_data.course_details.end_date=Displays+the+date+till+which+the+course+is+valid.+%28Only+for+Certification%29>
response.tp_course_data.course_details.registered_cnt=Displays the number of users enrolled to the course.>0
response.tp_course_data.course_details.single_class=Displays the ID of the class if the course has only one class listeed under it. This filed will be empty if there are multiple classes listed under the course.>59
api_owner.name = AjayR;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 158
testengine.use_prev_response_field = Id ; it will used to run the update order
customer_display = no ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute


;API for getting TP details for an enrollment
[getTagsAPI]
category = LearnerAPI
display_name = API for getting the tags
description = The API is used for getting the tags
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_lnrenrollment/exp_sp_core.inc
method_name = getTagsWrapperAPI;the name of the function that is to be executed when this api is called.
params.userid = Y > User ID >1
params.limit = Y > limit >20
params.page = Y > limit >20
params.entitytype = N > entitytype>Course
response.tagname=Displays the tag name>12
response.activity_count=Displays the activity count>12
api_owner.name = PradeepR;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 159
testengine.use_prev_response_field = Id ; it will used to run the update order
customer_display = no ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute


;API for Associate Content with WBT/VOD Class
[UpdateContentwithWBTClassAPI]
category = AdminAPI
display_name = Update existing content URL  
description = The API is used to update the existing content url.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_learning/exp_sp_administration_content_details.inc
method_name = updateNewContentByApi;the name of the function that is to be executed when this api is called.
params.insobj.ContentmasterId= Y> Enter ID of the content master>
params.insobj.ContentversionId= Y> Enter the ID of the content version>
params.insobj.ContentlessonId= Y> Enter ID of the content lesson>
params.insobj.ContentLaunchUrl= Y> Enter launch url of the content lesson>
params.userid = Y > Enter the ID of the user making this API call. >1
response.Id= Displays ID of the content associated with the Class>
response.LaunchUrl= Displays launchurl of the content associated with the Class>
api_owner.name = Bhagyarekha;the developer's name who develops the functionality
api_owner.email = bhagyarekha@expertus.com ;the developer's mail id who develops the functionality
test_category = update
testengine.category=update
testengine.apitestsequence = 160
testengine.capture_response_field = Id ; it will used to update attached content
customer_display = no ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for Removing Catalog Access Control
[RemoveCatalogAccessControlAPI]
category = AdminAPI
display_name = Remove User Catalog Access
description = The API is used to remove the Control for Catalog Access.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_catalog_access/exp_sp_administration_catalog_access.module
method_name = removeCatalogAccessByAPI;the name of the function that is to be executed when this api is called.
params.form_state.values.entity_id= Y> Enter ID of the Entity which the access is to be set.>
params.form_state.values.entity_type= Y> %0ADenotes+the+type+of+entity+which+the+access+is+to+be+set.+The+allowed+values+are+%22cre_sys_obt_crs%22+for+Courses%2C++%22cre_sys_obt_cls%22+for+Classes%2C+%22cre_sys_obt_crt%22+for+Certification%2C+%22cre_sys_obt_cur%22++for+Curricula%2C+%22cre_sys_obt_trn%22+for+Learning+Plan%2C+%22cre_usr%22+for+User%2C+%22cre_org%22+for+Organization+%2C+%22cre_sec%22+for+Groups%2C+%22sry_det_typ_sry%22++for+Survey%2C+%22sry_det_typ_ass%22+for+Assessment%2C+%22sry_det_typ_sry_qus%22+for+Survey+Question%2C+%22sry_det_typ_ass_qus%22+for+Assessment+Question%2C+%22cre_sys_obt_cnt%22+for+Content%2C+%22cbn_anm_typ_ban%22+for+Banner%2C+%22cre_ntn%22+for+Notification%2C+%22cme_ord%22+for+Order%2C+%22cme_dis%22+for+Discount.%0A>cre_sys_obt_cls
params.form_state.values.group_id = N> Denotes+the+group+id+that+to+be+removed+from+the+associated+entity.>
params.form_state.values.user_id = N> Denotes+the+user+id+that+to+be+removed+from+the+associated+entity.> 
params.userid = Y > Enter the ID of the user making this API call. >1
response.id= Displays+the+status+of+setting+access+to+an+entity.+%28%22success%22+or+%22Failure%22%29.>1
api_owner.name = Subin;the developer's name who develops the functionality
api_owner.email = subinrajan@expertus.com ;the developer's mail id who develops the functionality
test_category = add
testengine.category= add
testengine.apitestsequence = 73
testengine.capture_response_field = id ; it will used to run the MRO control
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 50 ; number of request which can be accept per minute

;API for getting User Dashboard details
[getMyDashboardAPI]
category = LearnerAPI
display_name = API for getting User Dashboard details
description = The API is used for getting User Dashboard details
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_lnrenrollment/exp_sp_lnrenrollment.inc
method_name = getMyDashboardAPI;the name of the function that is to be executed when this api is called.
params.userid = Y > User ID >1
params.user_id = N > User ID >1
params.type = Y > type > overall_progress 
params.action = N > action >class
response.overallprogress = Return overall Progress>12
response.learningactivity= Returns Learing Activity>12
response.things_to_be_done= Returns things to be done details>12
response.announcements= Returns things to be done details>12
api_owner.name = PradeepR;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 161
testengine.use_prev_response_field = Id ; it will used to run the update order
customer_display = no ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for Create tag
[CreateTagByAPI]
category = AdminAPI
display_name = Create Tag to an Entity
privilege_parameter = entity_type$$$update
entity_type_parameter = entity_type$$$entity_id
description = The API is used to attach a Tag with an Entity.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_learning/exp_sp_administration_tags.inc
method_name = addCourseTagsDetailsByAPI;the name of the function that is to be executed when this api is called.
params.entity_id = Y> Enter the ID of the Entity to which the Tag should be attached >0
params.entity_type = Y> Enter the name of the Entity to which the Tag should be attached. The allowed values are “Class”, “Course”, “Training Plan”, “Survey Question”, “Assessment Question” or “Content”. >Class
params.tag_name = Y> Enter the Tag to be attached with the Entity. Enter only 1 Tag per request. >Sample Description
params.userid=Y > Enter the ID of the user making this API call. >1
response.id= Displays the created tag definition ID.>1
response.tagname= Displays the created tag ID.>1
api_owner.name = Rajeshwar;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for Update tag
[UpdateTagByAPI]
category = AdminAPI
display_name = Update Tag to an Entity
privilege_parameter = entity_type$$$update
entity_type_parameter = entity_type$$$entity_id
description = The API is used to update a Tag attached with an Entity.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_learning/exp_sp_administration_tags.inc
method_name = updateTagByAPI; the name of the function that is to be executed when this api is called.
params.entity_id = Y> Enter the ID of the Entity with which the Tag is attached. >0
params.entity_type = Y> Enter the name of the Entity with which the Tag is attached. The allowed values are “Class”, “Course”, “Training Plan”, “Survey Question”, “Assessment Question” or “Content”.>Class
params.old_tag_name = Y> Enter the current name of the Tag. > SampleDescription
params.new_tag_name = Y> Enter the new name of the Tag. > newSampleDescription
params.userid=Y > Enter the ID of the user making this API call. >1
response.id= Displays the created tag definition ID.>1
response.tagname= Displays the created tag ID.>1
api_owner.name = Rajeshwar;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for Delete tag
[DeleteTagByAPI]
category = AdminAPI
display_name = Delete Tag from an Entity
privilege_parameter = entity_type$$$update
entity_type_parameter = entity_type$$$entity_id
description = Delete Tag from an Entity.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_learning/exp_sp_administration_tags.inc
method_name = deleteTagByAPI; the name of the function that is to be executed when this api is called.
params.entity_id = Y> Enter the ID of the Entity with which the Tag is attached. >0
params.entity_type = Y> Enter the name of the Entity with which the Tag is attached. The allowed values are “Class”, “Course”, “Training Plan”, “Survey Question”, “Assessment Question” or “Content”.	>Class
params.tag_name = Y> Enter the Tag which is to be deleted >Sample Description
params.userid=Y > Enter the ID of the user making this API call. >1
response.status= Displays the created tag definition ID.>1
api_owner.name = Rajeshwar;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for getting Order details
[getOrdersAPI]
category = LearnerAPI
display_name = API for getting User Order details
description = The API is used for getting User Order details
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_my_account/exp_sp_my_account.inc
method_name = getOrderResultForGrid;the name of the function that is to be executed when this api is called.
params.userid = Y > User ID >1
params.page = Y > page >1
params.rows = Y > rows > 5 
params.searchTxt = N > searchTxt > 5 
params.sidx = N > sidx >  
params.sord = N > sord > desc 
response.orders = Return overall Progress>12
api_owner.name = PradeepR;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 162
testengine.use_prev_response_field = Id ; it will used to run the update order
customer_display = no ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for getting Invoice details
[getOrderInvoiceAPI]
category = LearnerAPI
display_name = API for getting Invoice details
description = The API is used for getting Invoice details
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_my_account/exp_sp_my_account.inc
method_name = getInvoice;the name of the function that is to be executed when this api is called.
params.userid = Y > User ID >1
params.order_id = Y > order_id >1
response.invoicehtml = Return invoicehtml>12
api_owner.name = PradeepR;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 163
testengine.use_prev_response_field = Id ; it will used to run the update order
customer_display = no ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for Updating the Time spent in Mobile App 
[UpdateTimeSpentMobileAPI]
category = LearnerAPI
display_name = API for Updating the Time spent in Mobile App 
description = The API is used for getting and setting the Time spent in Mobile App 
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_lnrenrollment/exp_sp_lnrenrollment.inc
method_name = UpdateTimeSpentMobileAPI;the name of the function that is to be executed when this api is called.
params.userid = Y > User ID >1
params.action = Y > action >20
params.timespent = N > timespent >20
params.date = N > date >20
response.status= Displays the Status>12
response.time_spent = Displays the timespent>12
api_owner.name = PradeepR;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 164
testengine.use_prev_response_field = Id ; it will used to run the update order
customer_display = no ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute


;API for getting Classes available for switch class functionality
[getAvailableClassesAPI]
category = LearnerAPI
display_name = API for getting Classes available
description = The API is used for for getting Classes available for switch class functionality
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_lnrlearningplan/exp_sp_lnrlearningplan.inc
method_name = getAvailableClassResultsAPI;the name of the function that is to be executed when this api is called.
params.userid = Y > User ID >1
params.changesClassId = N > limit >20
params.courseId = N > limit >20
params.myEnrollChangeCls = Y > TP or enroll>Course
params.enrollId = N > entitytype>Course
params.currentClassId = N > entitytype>Course
params.waitlist = N > entitytype>Course
response.availableclasses=Displays the available classes>12
api_owner.name = Sivaramakrishnan M;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 165
testengine.use_prev_response_field = Id ; it will used to run the update order
customer_display = no ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute


;API for Updating the Time spent in Mobile App 
[DeepLinkSurveyAPI]
category = LearnerAPI
display_name = API for DeepLink for Survey in mobile app 
description = The API is used for DeepLink for Survey in mobile app 
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning.inc
method_name = DeepLinkSurveyAPI;the name of the function that is to be executed when this api is called.
params.userid = Y > User id >1
params.linktype = Y > link type >single
params.objectid = Y > objectid >196
params.objecttype = Y > objecttype >cre_sys_obt_cls
params.enrollid = N > enrollid >20
params.enrollstatus = N > enrollstatus >lrn_crs_cmp_enr
params.surveyid = N > surveyid >20
response.details= Displays the Status>12
api_owner.name = PradeepR;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 166
testengine.use_prev_response_field = Id ; it will used to run the update order
customer_display = no ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for Add Custom Attribute - #custom_attribute_0078975
[AddCustomAttributeAPI]
category = AdminAPI
display_name = Create Custom Attribute
privilege_parameter = Custom Attribute$$$create 
description = The API is used to create a Custom Attribute
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_manage/exp_sp_administration_customattribute/exp_sp_administration_customattribute.inc
method_name = addCustomAttributeAPI;the name of the function that is to be executed when this api is called.
params.form_state.values.name = Y>Enter the name for the attribute. This name will be used when displaying the attribute in the associated pages>
params.form_state.values.type = Y>Attribute type.Possible values are TextBox,TextArea,DropDown,RadioButton,CheckBox>TextBox
params.form_state.values.datatype = N>Select the type of data accepted by this attribute.Possible values are Number or Text. This field is mandatory for TextBox attribute>Text
params.form_state.values.datalength = N>Enter the maximum length accepted by this attribute. This field is mandatory for TextBox and TextArea attributes. For datatype Number maximum length is 11.For datatype Text maximum length is 255>
params.form_state.values.mandatory = N>Set this attribute as mandatory while saving a record.Possible values are 0 or 1.If set 1 then field is mandatory>0
params.form_state.values.attr_unique = N>Select to stop duplicate values from being entered in this attribute.Possible values are 0 or 1.If set 1 then accepts>0
params.form_state.values.help_txt = N>Help text of custom attribute>
params.form_state.values.multiple_option = N>Allow selection of multiple values in dropdown.It will be applicable for Dropdown custom field. Possible values are 0 or 1>0
params.form_state.values.display_option = N>Display the list values vertically or horizontally.Possible values are V or H >H
params.form_state.values.opt_name = N>Name of the option for Dropdown,Checkbox and Radiobutton custom attributes. This Field mandatory for Dropdown,Checkbox and Radiobutton attributes. If map more than option,please use comma[,] like Male,Female > 
params.form_state.values.entity_type = N>Entity type.Possible values are Course,Class,TrainingPlan,User,Organization,Content,Location,Order. If mapped more than one entity_type please use comma[,] like Course,Class. entity_screen_option and entity_api_option is mandatory if given value in 'entity_type' field>
params.form_state.values.entity_screen_option = N>Enter screen option.Possible values are 0 or 1.If set 1 then admin can view this attribute in mapped entity screens. if given more than one entity in 'entity_type' field like User,Class then please use comma[,] like 1,1 . This field is mandatory if given value in 'entity_type' field. 
params.form_state.values.entity_api_option = N>Enter api option.Possible values are 0 or 1.If set 1 then admin can view these attributes in api.if given more than one entity in 'entity_type' field like User,Class then please use comma[,] like 1,1. This field is mandatory if given value in 'entity_type' field. 
params.form_state.values.status = Y>Status. Possible values for this field are cre_cattr_sts_atv, cre_cattr_sts_itv>cre_cattr_sts_atv
params.userid = Y>User Id>1
response.id= custom attribute id>2
api_owner.name = rajeshn;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = add
testengine.category=add
testengine.apitestsequence = 1
testengine.capture_response_field = Id ; it will used to run the update Custom Attribute
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 40 ; number of request which can be accept per minute

;API for Update Custom Attribute
[UpdateCustomAttributeAPI]
category = AdminAPI
display_name = Update Custom Attribute
privilege_parameter = Custom Attribute$$$create 
description = The API is used to update a Custom Attribute
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_manage/exp_sp_administration_customattribute/exp_sp_administration_customattribute.inc
method_name = updateCustomAttributeAPI;the name of the function that is to be executed when this api is called.
params.form_state.values.id = Y>Enter the ID of the custom attribute to be updated>
params.form_state.values.name = Y>Enter the name for the attribute. This name will be used when displaying the attribute in the associated pages>
params.form_state.values.datatype = N>Select the type of data accepted by this attribute.Possible values are Number or Text. This field is mandatory for TextBox attribute>Text
params.form_state.values.datalength = N>Enter the maximum length accepted by this attribute. This field is mandatory for TextBox and TextArea attributes. For datatype Number maximum length is 11.For datatype Text maximum length is 255>
params.form_state.values.mandatory = N>Set this attribute as mandatory while saving a record.Possible values are 0 or 1.If set 1 then field is mandatory>0
params.form_state.values.attr_unique = N>Select to stop duplicate values from being entered in this attribute.Possible values are 0 or 1.If set 1 then accepts>0
params.form_state.values.help_txt = N>Help text of custom attribute>
params.form_state.values.multiple_option = N>Allow selection of multiple values in dropdown.It will be applicable for Dropdown custom field. Possible values are 0 or 1>0
params.form_state.values.display_option = N>Display the list values vertically or horizontally.Possible values are V or H >H
params.form_state.values.opt_name = N>Name of the option for Dropdown,Checkbox,Radiobutton custom attributes. This Field mandatory for Dropdown,Checkbox and Radiobutton attributes. If map more than option, please use comma[,] like Male,Female > 
params.form_state.values.entity_type = N>Entity type.Possible values are Course,Class,TrainingPlan,User,Organization,Content,Location,Order. If mapped more than one entity_type please use comma[,] like Course,Class. entity_screen_option and entity_api_option is mandatory if given value in 'entity_type' field>
params.form_state.values.entity_screen_option = N>Enter screen option.Possible values are 0 or 1.If set 1 then admin can view this attribute in mapped entity screens. if given more than one entity in 'entity_type' field like User,Class then please use comma[,] like 1,1 . This field is mandatory if given value in 'entity_type' field 
params.form_state.values.entity_api_option = N>Enter api option.Possible values are 0 or 1.If set 1 then admin can view these attributes in api.if given more than one entity in 'entity_type' field like User,Class then please use comma[,] like 1,1. This field is mandatory if given value in 'entity_type' field.
params.form_state.values.status = Y>Status. Possible values for this field are cre_cattr_sts_atv, cre_cattr_sts_itv>cre_cattr_sts_atv
params.userid = N>Enter the ID of the user making this API call.>1
response.id= custom attribute id>1
api_owner.name = rajeshn;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = update
testengine.category=update
testengine.apitestsequence = 2
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 40 ; number of request which can be accept per minute


;API for List the custom attributes
[ListCustomAttributeAPI]
category = AdminAPI
display_name = List of Custom Attributes
privilege_parameter = Custom Attribute$$$view
description = The API is used to display the list of custom attributes.
ORM_file = /sites/all/modules/core/exp_sp_core/modules/exp_sp_administration/exp_sp_administration_manage/exp_sp_administration_customattribute/exp_sp_administration_customattribute.inc
method_name = listCustomAttributeAPI;the name of the function that is to be executed when this api is called.
params.start = N >  Enter the starting point from which the user records are displayed. Only numerical values are accepted. Default value: 0>0
params.limit = Y > Enter the number of records to be retrieved. Maximum number of records that can be fetched in a single request is 500.>10
params.rows = N > Rows of records need to be retrieved >25
params.name = N > Enter to filter by custom attribute name >
params.type = N > Enter to filter by custom attribute type.Possible values are TextBox,TextArea,DropDown,RadioButton or CheckBox  >
params.entity_type = N >Entity type.Possible values are Course,Class,TrainingPlan,User,Organization,Content,Location,Order. If mapped more than one entity_type please use comma[,] like Course,Class>
params.status = N > Enter to filter by custom attribute Status. Please refer to the custom attribute status section of the API Codes document to view the list of allowed custom attribute statuses.>cre_cattr_sts_atv
params.userid = Y > Enter the ID of the user making this API call. >1
response.id= Displays the custom attribute ID>
response.name= Displays the custom attribute Name>
response.type = Displays the custom attribute type.Possible values are TextBox,TextArea,DropDown,RadioButton,Check Box  >
response.datatype = Displays the custom attribute datatype.Possible values are Number or Text>
response.datalength = Displays the custom attribute data length>
response.mandatory = Displays the custom attribute's mandatory option>
response.attr_unique = Displays the custom attribute's unique option>
response.help_txt = Displays the Help text of custom attribute>
response.multiple_option = Displays that whether attribute has Multiple selection or not >
response.display_option = Display the Checkbox option positioning whether display as vertical[V] and Horizontal[H]>
response.opt_name = Displays the options list of Dropdown/Checkbox custom attribute with | symbol If map more than option> 
response.entity_type = Displays the entity type, which are mapped to custom attribute with | symbol If map more than type>
response.entity_screen_option = Displays the entity screen option for a custom attribute > 
response.entity_api_option = Displays the entity api option for a custom attribute >
response.status = Displays the status of custom attribute > cre_cattr_sts_atv
api_owner.name = rajeshn;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 6
testengine.verify_response_field = Id
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute


;API for getting all the lunchable content of a class
[getLaunchablecontentAPI]
category = LearnerAPI
display_name = API for getting all the lunchable content of a class
description = The API is used for for getting all the lunchable content of a class
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_lnrenrollment/exp_sp_lnrenrollment.inc
method_name = getLaunchablecontentAPI;the name of the function that is to be executed when this api is called.
params.userid = Y > User ID >1
params.ClassId = N > limit >20
params.courseId = N > limit >20
params.enrollId = N > entitytype>Course
response.launchablecontent=Displays the launchable content>12
api_owner.name = Ashutosh Mishra;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 167
testengine.use_prev_response_field = Id ; it will used to run the update order
customer_display = no ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute

;API for adding class to cart
[AddItemsToShoppingCartAPI]
category = LearnerAPI
display_name = Add Items To Shopping Cart
description = This API is used to add a priced class or a training plan to the shopping cart.
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_lnrsearch/exp_sp_lnrsearch.inc
method_name = AddItemsToShoppingCartAPI;the name of the function that is to be executed when this api is called.
params.learner_id = Y > Enter the ID of the Learner >1
params.entity_type = Y > Enter the type of entity being added to the Cart. The possible values are : +%22Class%22+ or +%22Training Plan%22+ >Class
params.entity_id = Y > Enter the ID of the paid Class or Training Plan >1
params.delivery_type = Y > If the entity_type is "Class" provide the delivery type code of the class. The  possible values are : +%22Classroom%22+ for Classroom,+%22Web-based%22+ for Web-based,+%22VirtualClass%22+ for Virtual Class,+%22Video%22+ for Video. If the entity_type is Training Plan provide the object type code of Training Plan. The possible values are: %22+LearningPlan%22+ for Learning plan, %22+Curricula%22+ for Curricula, %22+Certification%22+ for Certification. >ILT
params.class_ids = N > Enter the ID of a Class listed under each course associated with the Training Plan. This field is mandatory if the Training Plan has more than one Class listed under a associated Course. Multiple values can be entered by adding commas. >
params.userid = Y > Provide the ID of the user who making this API call. >1
response.status= Displays if the entity was successfully added to the Cart. %28+%22Added to Cart%22+ Or +%22Already in cart%22+%29.
response.class_list= Displays all the Course and Class Details added to the cart.>class_list
response.tp_courses= Displays the details of the courses associated to the training plan.>tp_courses
api_owner.name = Subramaniyan K;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = add
testengine.category=add
testengine.apitestsequence = 168
testengine.capture_response_field = status ; it will used to run the update org
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 40 ; number of request which can be accept per minute

;API for list items from cart
[ListItemsFromShoppingCartAPI]
category = LearnerAPI
display_name = List Items From Shopping Cart
description = This API is used to checkout the added priced classes and training plans from the shopping cart.
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_lnrsearch/exp_sp_lnrsearch.inc
method_name = ListItemsFromShoppingCartAPI;the name of the function that is to be executed when this api is called.
params.learner_id = Y >  Enter the ID of the Learner  >1
params.entity_id = N > Enter the ID of the entity in the Cart to be displayed. If entity_id is not provided, all items in the Cart will be displayed. >1
params.entity_type = N > Enter the type of entity to be displayed. The allowed values are: +%22Class%22+ or +%22Training Plan%22+. This field is mandatory if +%22entity_id%22+ is entered. >Class
params.userid = Y > Enter the ID of the user who making this API call. >1
response.items.learner_id= Displays the ID of the Learner
response.items.entity_id= Displays the ID of the Class or Training Plan
response.items.entity_type= Displays the type of entity %28+%22Class%22+ or +%22Training Plan%22+%29
response.items.delivery_type =  Displays the delivery type of the entity
response.items.price = Displays the price of the entity.
response.items.currency_type= Displays the currency type of the entity.
response.items.location= Displays the location of the entity.
response.total_price= Displays the total price of the items added in cart.
api_owner.name = Subramaniyan K;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 169
testengine.capture_response_field = status ; it will used to run the update org
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 60 ; number of request which can be accept per minute

;API for checkout the items in cart
[CheckOutAPI]
category = LearnerAPI
display_name = CheckOut API
description = This API is used to list the added classes and training plans in the shopping cart.
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_lnrsearch/exp_sp_lnrsearch.inc
method_name = CheckOutAPI;the name of the function that is to be executed when this api is called.
params.learner_id = Y > Enter the ID of the Learner  >1
params.userid = Y > Enter the id of the user who making this API call. >1
response.learner_id= Displays the ID of the Learner
response.order_id= Displays the ID of the newly created Order
response.order_sub_total=Displays the Order total before applying tax and discount
response.status=Displays the status of the checkout %28+%22Success+%22 or +%22Failure+%22%29
api_owner.name = Subramaniyan K;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = update
testengine.category=update
testengine.apitestsequence = 170
testengine.capture_response_field = status ; it will used to run the update org
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 40 ; number of request which can be accept per minute


;API for remove items from cart
[RemoveItemsFromShoppingCartAPI]
category = LearnerAPI
display_name = Remove Items From Shopping Cart
description = This API is used to remove the added classes and training plans in the shopping cart.
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_lnrsearch/exp_sp_lnrsearch.inc
method_name = RemoveItemsFromShoppingCartAPI;the name of the function that is to be executed when this api is called.
params.learner_id = Y > Enter the ID of the Learner >1
params.entity_type = N > Enter the type of entity to be removed from the Cart. The allowed values are: +%22Class%22+ or +%22Training Plan%22+. This field is mandatory if +%22entity_id%22+ is entered.>Class
params.entity_id = N > Enter the ID of the entity to be removed from the Cart. If entity_id is not entered, all items in the Cart will be removed. >1
params.userid = Y > Enter the id of the user who making this API call. >1
response.learner_id= Displays the ID of the Learner.
response.items.entity_id=  Displays the ID of the Class or Training Plan
response.items.entity_type= Displays the type of Entity %28+%22Class%22+ or +%22Training Plan%22+%29
response.status= Displays the status of the deletion of the entity from the shopping cart. %28"success" Or "failure"%29
api_owner.name = Subramaniyan K;the developer's name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer's mail id who develops the functionality
test_category = update
testengine.category= update
testengine.apitestsequence = 171
testengine.capture_response_field = status ; it will used to run the update org
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 30 ; number of request which can be accept per minute


;;API for Adding the Billing address for an order.
[addBillingAddressAPI]
category = LearnerAPI
display_name = Add Billing Address
description = This API is used to add the billing address for an order
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_lnrsearch/exp_sp_lnrsearch.inc
method_name = addBillingAddressAPI;the name of the function that is to be executed when this api is called.
params.learner_id = Y > Enter the ID of the Learner >1
params.userid = Y > Enter the id of the User who  making this API call. >1
params.order_id = Y > Enter the ID of the Order >1
params.first_name = Y > Enter the first name of the Learner >Test
params.last_name = Y > Enter the last name of the Learner >User
params.address_line1 =Y >Enter the address of the Learner %28line 1%29 >test road
params.state =Y > Enter the State name of the Learner >Alabama
params.zip_code = Y > Enter the Zip code >36008
params.country = Y > Enter the Country name of the Learner >United States
params.city = Y > Enter the City of the Learner >Adger
params.phone_no = N>Enter the phone number of the Learner >
params.address_line2 = N > Enter the address of the Learner %28line 2%29 >
response.status= Displays the status of the addition of the Learner’s address to the Order %28+%22Success%22+ or +%22Failure%22+%29
api_owner.name = yuvanesh R;the developer%27s name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer%27s mail id who develops the functionality
test_category = add
testengine.category=add
testengine.apitestsequence = 172
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 40 ; number of request which can be accept per minute

;API for Calculate discounts
[ApplyDiscountsAPI]
category = LearnerAPI
display_name = Apply Discount
description = This API is used to apply discounts in the order.
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_lnrsearch/exp_sp_lnrsearch.inc
method_name = applyDiscountsAPI;the name of the function that is to be executed when this api is called.
params.learner_id  = Y > Enter the ID of the Learner >1
params.userid = Y > Enter the ID of the user who making  this API call. >1
params.order_id = Y > Enter the ID of the Order. >1
params.discount_code = Y > Enter the discount code to be applied in the Order. Multiple values can be entered by adding comma>test
response.status= Displays the status of applying discount to the Order. %28+%22Success%22+ or +%22Failure%22+%29
api_owner.name = Yuvanesh R;the developer%27s name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer%27s mail id who develops the functionality
test_category = update
testengine.category=update
testengine.apitestsequence = 173
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 40 ; number of request which can be accept per minute

;API for Calculate tax
[ApplyTaxAPI]
category = LearnerAPI
display_name = Apply Tax
description = This API is used to apply tax to the  given order id.
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_lnrsearch/exp_sp_lnrsearch.inc
method_name = applyTaxAPI;the name of the function that is to be executed when this api is called.
params.learner_id = Y > Enter the ID of the Learner >1
params.userid = Y > Enter the ID of the user who making this API call. >1
params.order_id = Y > Enter the ID of the Order >12
response.status= Displays the status of applying discount to the Order %28+%22Success%22+ or +%22Failure%22+%29
response.tax_amount= Displays the Tax amount for the Order
response.pre_tax_amount= Displays the Order total before applying tax
response.post_tax_amount= Displays the Order total after applying Tax
api_owner.name = Yuvanesh R;the developer%27s name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer%27s mail id who develops the functionality
test_category = update
testengine.category=update
testengine.apitestsequence = 174
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 40 ; number of request which can be accept per minute

;API for Getting the Order Status
[GetOrderStatusAPI]
category = LearnerAPI
display_name = Get Order Status
description = This API is used to get the status of the given order id.
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_lnrsearch/exp_sp_lnrsearch.inc
method_name = getOrderStatusApi;the name of the function that is to be executed when this api is called.
params.learner_id = Y > Enter the ID of the Learner>1
params.userid = Y > Enter the ID of the user who making this API call. >1
params.order_id = Y > Enter the ID of the Order >12
response.status = Displays the Order status %28+%22canceled%22+, +%22completed%22+, +%22reserved_cancelled%22+, +%22pending%22+, +%22payment_received%22+, +%22in_checkout%22+%29
response.order_id = Displays the Order ID
response.learner_id = Displays the ID of the Learner
api_owner.name = Yuvanesh R;the developer%27s name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer%27s mail id who develops the functionality
test_category = list
testengine.category=list
testengine.apitestsequence = 175
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 80 ; number of request which can be accept per minute


;API for Getting the Order Details
[GetOrderDetailsAPI]
category = LearnerAPI
display_name = Get Order Details
description = This API is used to get the order details for the given order
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_lnrsearch/exp_sp_lnrsearch.inc
method_name = getOrderDetailsApi;the name of the function that is to be executed when this api is called.
params.learner_id = Y > Enter the ID of the Learner >1
params.userid = Y > Enter the ID of the user who making this API call. >1
params.order_id = Y > Enter the ID of the Order >12
response.order_id = Displays the ID of the Order
response.learner_id = Displays the ID of the Learner
response.order_details.order_status = Displays the status of the order
response.order_details.order_total = Displays the total amount of the order.  
response.order_details.first_name = Displays the first name of the Learner
response.order_details.last_name = Displays the last name of the Learner
response.order_details.address_line1 = Displays the address of the Learner %28line 1%29
response.order_details.address_line2 = Displays the address of the Learner %28line 2%29
response.order_details.city = Displays the city of the Learner
response.order_details.state = Displays the state name
response.order_details.zip_code = Displays the Learner’s zipcode
response.order_details.country = Displays the country name
response.order_details.phone_no = Displays the phone number of the Learner
response.order_details.discount_amount = Displays the discounted_amount of the order.
response.order_details.tax_amount = Displays the tax amount of the order.  
response.total_items = Displays the total items in the order.  
response.order_items= Collection of the items in the given order with the entity_type, entity_id, delivery_type, price, currency_type, entity_code, title, description ,enrollment_id of the entity
api_owner.name = Yuvanesh R;the developer%27s name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer%27s mail id who develops the functionality
test_category = list
testengine.category= list
testengine.apitestsequence = 176
testengine.capture_response_field = Id ; it will used to run the update org
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 60 ; number of request which can be accept per minute

;API for list items from cart
[PurchaseAPI]
category = LearnerAPI
display_name = Purchase API
description = This API is used to complete the payment of the Order.
ORM_file = /sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_lnrsearch/exp_sp_lnrsearch.inc
method_name = PurchaseAPI;the name of the function that is to be executed when this api is called.
params.learner_id = Y > Enter the ID of the Learner >1
params.order_id  = Y > Enter the ID of the Order >1
params.payment_method  = Y > Enter the payment method for completing the Order. The allowed values are:  +%22invoice%22+, +%22check%22+, +%22po%22+, +%22creditcard%22+ >invoice
params.userid = Y > Enter the ID of the user who making this API call. >1
params.po_number = N >Enter the PO number. This field is mandatory when the payment_method is entered as +%22po%22+.>
params.cc_number  = N > Enter the AES encrypted Credit card number. This field is mandatory when the payment_method is entered as +%22creditcard%22+.>
params.cc_exp_month = N > Enter the AES encrypted month of expiry of the Credit card. This field is mandatory when the payment_method is entered as +%22creditcard%22+. >
params.cc_exp_year = N >  Enter the AES encrypted year of expiry of the Credit card. This field is mandatory when the payment_method is entered as +%22creditcard%22+.>
params.cc_cvv = N > Enter the AES encrypted CVV number of the Credit card. This field is mandatory when the payment_method is entered as +%22creditcard%22+. >
params.currency_type = N > Enter the Currency type for the Order. >
params.order_comments = N > Enter the comments for the Order >
response.order_id= Displays the ID of the Order
response.status= Displays the status of payment for the order. %28+%22Success%22+ or +%22Failure%22+%29
api_owner.name = Subramaniyan K;the developer%27s name who develops the functionality
api_owner.email = smart_portal@expertus.com ;the developer%27s mail id who develops the functionality
test_category = update
testengine.category=update
testengine.apitestsequence = 177
testengine.capture_response_field = status ; it will used to run the update org
customer_display = yes ; it is used For Customer Visibility and parameter To Show == > yes or no
throttle = 30 ; number of request which can be accept per minute