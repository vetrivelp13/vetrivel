<?php 

class AdministrationTaxTestHelper extends ExpertusWebTestCase {
	private $searchResultContent=null;
	
	protected $testcases = array();

	public $listContent = '';
	private $srcParam = array(
			'title'=>'',		// Title base search
			'announcementdaterange'=>'',		// date range on announcement
			'announcementlang'=>'cre_sys_lng_eng', 	// Selected languages pipe separated
			'sortby'=> 'desc',		//	Sort by option
			'announcemanage' => 'cre_sys_fop_me'
	);

	public function setUp() {
		parent::setUp();
		$this->drupalLogin($this->admin); // login as admin
		$this->getTaxTestCases();
		// set refer to prevent access denied error
		$this->setHttpReferer('learning/enrollment-search');
	}
	
	public function manageAdminTax($scope = 'basic') {
	
		// Get Main HTML content
		$this->drupalPost('administration/commerce/tax');
		$content = $this->content;
	
		// Get Filters
		$this->drupalGetAJAX('administration/search-filter/tax');
		$this->content = drupal_json_decode($this->content);
			
		//Update filters with existing response
		$replArray = array(
				'rendered_narrow_search_filters' => 'narrow-search',
				'rendered_main_div' => 'root-admin-results',
				'rendered_tab_content_main' => 'tab-content-main',
				'rendered_narrow_search_sortbar' => 'admin-maincontent_tab',
				'rendered_narrow_search_actionbar' => 'sort-bar-V2'
		);
			
		$this->updateSearchFilters($content, $replArray, 'div', 'tag', 'div' );
	
		$this->displayTagsById('narrow-search');
		$this->displayTagsById('root-admin-results');
	
		// Based on the scope set the data to test
		if ($scope == 'all') {
			$testCases = $this->testcases['taxList'];
		} else {
			$testCases = array($this->testcases['taxList'][$scope]);
		}
		
		//Get search results
		foreach($testCases as $test){
			$this->getAdministrationTaxList($test);
		}
	}
	
	public function getAdministrationTaxList($opt = array()){
		$opt = array_merge($this->basicParam, $opt);
		$this->listContent = $this->content;
		$srcRc = $this->drupalGetAJAX('administration/commerce/tax/search/all/	',array('query'=>$opt));
		$this->updateSearchResults($this->listContent,$srcRc,'narrow-search-results-holder');
	}

	protected function getTaxTestCases(){
		$rand = $this->randomName();
		$this->testcases = array(
				'taxList' => array(
						'basic' => array(),
						'case1' => array(),
				),		
				'taxCreate' => array(
		  				'us' => array(
		  						"country"						=> 'US',
		  						"states[]"						=> 'AL',
		  						"states[]"						=> 'AK',
								"vat_number"					=> '01', 
								"lrn_cls_dty_ilt" 				=> '01', 
								"lrn_cls_dty_vod"				=> '01',
								"lrn_cls_dty_vcl"				=> '01',
								"lrn_cls_dty_wbt"				=> '01',
		  						"cre_sys_obt_trp"				=> '01',
		  				 ),
						'in' => array(
		  						"country"						=> 'IN',
		  						"vat_number"					=> '01', 
								"lrn_cls_dty_ilt" 				=> '01', 
								"lrn_cls_dty_vod"				=> '01',
								"lrn_cls_dty_vcl"				=> '01',
								"lrn_cls_dty_wbt"				=> '01',
		  						"cre_sys_obt_trp"				=> '01',
						),
				),
				'taxUpdate' => array(
						'us' 	=> array(
							"lrn_cls_dty_ilt"			=> '02',
							"id"						=> $this->getTaxId('US'),	
						 ),
						'in' => array(
							"lrn_cls_dty_ilt"			=> '02',
							"id"						=> $this->getTaxId('IN'),
						),
				),
				'taxDelete' => array(
						'us' 	=> array( 'id'	 	=> $this->getTaxId('US') ),
						'in' 	=> array( 'id' 		=> $this->getTaxId('IN') ),
				),
				'taxStatus' => array(
						'us' 	=> array( 'id'	 	=> $this->getTaxId('US') ),
						'in' 	=> array( 'id' 		=> $this->getTaxId('IN') ),
				),
		);
	}
	
	public function getTaxTitle($taxId = '') {
		$taxTitle = db_query("SELECT country FROM slt_tax_settings WHERE id = :tax_id", array(':tax_id' => $taxId ))->fetchField();
		return $taxTitle;
	}
	
	public function getTaxStatus($taxId = '') {
		$taxStatus = db_query("SELECT status FROM slt_tax_settings WHERE id = :tax_id", array(':tax_id' => $taxId ))->fetchField();
		return $taxStatus;
	}
	
	public function getTaxId($search_str = '') {
		$select = db_select('slt_tax_settings', 'tax');
		$select->addField('tax', 'id', 'id');
		$select->condition('tax.country', '%' . db_like($search_str) . '%', 'LIKE');
		$select->orderBy('tax.id', 'DESC');
		$select->range(0,1);
		$taxId = $select->execute()->fetchField();
		return $taxId;
	}
}


class AdministrationTaxListBase extends AdministrationTaxTestHelper
{
	
}

class AdministrationTaxListAll extends AdministrationTaxListBase
{
	public static function getInfo() {
		return array(
				'name' => 'Administration - Tax - List - All Tests',
				'description' => 'Module : exp_sp_administration_commerce_tax',
				'group' => '1703 - Administration - Manage - Tax - List',
		);
	}
	
	public function testTaxListAll() {
		debug('testAdminTaxListAll called');
		$this->manageAdminTax('all');
	}
}

class AdministrationTaxListCase1 extends AdministrationTaxListBase
{
	public static function getInfo() {
		return array(
				'name' => 'Administration - Tax - List - Case 1',
				'description' => 'Module : exp_sp_administration_commerce_tax',
				'group' => '1703 - Administration - Manage - Tax - List',
		);
	}

	public function testTaxListCase1() {
		debug('testAdminTaxListCase1 called');
		$this->manageAdminTax('case1');
	}
}


/**
 *  Tax change status test cases
 *  Created By :Maheswari.M
 *  Created Date:28.12.2016
 *  To check the functionality for the tax active/suspend .
 */

class AdministrationTaxStatusBase extends AdministrationTaxTestHelper
{
	public function statusTestCase($scope = 'all') {
		// Based on the scope set the data to test
		if ($scope == 'all') {
			$testCases = $this->testcases['taxStatus'];
		} else {
			$testCases = array($this->testcases['taxStatus'][$scope]);
		}
		foreach($testCases as $test){
			$taxId = $test['id'];
			if ($taxId != '') {
			//fetching the tax status
			$status=$this->getTaxStatus($taxId);	
			$this->changeStatus($taxId,$status);
			$status=$this->getTaxStatus($taxId);
			$this->changeStatus($taxId,$status);
			$this->content = $this->listContent;
			$this->getAdministrationTaxList();			
			} else
				debug ( 'The tax id not found' );
		}
	}

	public function changeStatus($taxId,$status) {		
		if($status=='cme_tax_sts_atv'){	
			//tax is activated status.
			$this->changeTaxStatus($taxId);
			$this->assertResponse(200,'Tax status suspended successfully');
		}else{			
			//tax is suspended status.
			$this->changeTaxStatus($taxId);
			$this->assertResponse(200,'Tax status activated successfully');
		}
	}

	public function changeTaxStatus($taxId) {
		$this->drupalPostAJAX(null, $edit,'Save','?q=ajax/administration/commerce/tax/publish-and-unpublish/' . $taxId,array(),array(),'',$post_field);
		$this->verbose('Request to: ' . $this->getUrl() . '<hr />' . $this->content);
	}

}

class AdministrationTaxStatusCase1 extends AdministrationTaxStatusBase
{
	public static function getInfo() {
		return array(
			'name' => 'Administration - Tax - Status - Case 1',
				'description' => 'Module : exp_sp_administration_commerce_tax',
				'group' => '1703 - Administration - Manage - Tax - Status',
		);
	}

	public function testTaxPublishCase1() {
		debug('testTaxPublishCase1 called');
		$this->manageAdminTax('case1');
		$this->statusTestCase('us');
	}
}


class AdministrationTaxStatusCase2 extends AdministrationTaxStatusBase
{
	public static function getInfo() {
		return array(
				'name' => 'Administration - Tax - Status - Case 2',
				'description' => 'Module : exp_sp_administration_commerce_tax',
				'group' => '1703 - Administration - Manage - Tax - Status',
		);
	}

	public function testTaxPublishCase2() {
		debug('testTaxPublishCase2 called');
		$this->manageAdminTax('case1');
		$this->statusTestCase('in');
	}
}





?>