<?php 

class AdministrationSetupTestHelper extends ExpertusWebTestCase {
	private $searchResultContent=null;
	
	protected $testcases = array();

	
	private $srcParam = array(
			'title'=>'',		// Title base search
			'announcementdaterange'=>'',		// date range on announcement
			'announcementlang'=>'cre_sys_lng_eng', 	// Selected languages pipe separated
			'sortby'=> 'desc',		//	Sort by option
			'announcemanage' => 'cre_sys_fop_me'
	);

	public function setUp() {
		parent::setUp();
		$this->drupalLogin($this->admin); // login as admin
		$this->getSetupTestCases();
		// set refer to prevent access denied error
		$this->setHttpReferer('learning/enrollment-search');
	}
	
	public function manageAdminSetup($scope = 'basic', $type = '') {
		
		$attrType = $this->getProfileListCode($type);
		
		// Get Main HTML content
		$this->drupalPost('administration/people/setup');
		$content = $this->content;
	
		// Get Filters
		$this->drupalGetAJAX('administration/search-filter/setup');
		$this->content = drupal_json_decode($this->content);
			
		//Update filters with existing response
		$replArray = array(
				//'rendered_narrow_search_filters' => 'narrow-search',
				'rendered_main_div' => 'root-admin-results',
				'rendered_tab_content_main' => 'tab-content-main',
				'rendered_narrow_search_sortbar' => 'admin-maincontent_tab',
				'rendered_narrow_search_actionbar' => 'sort-bar-V2'
		);
			
		$this->updateSearchFilters($content, $replArray, 'div', 'tag', 'div' );
	
		$this->displayTagsById('narrow-search');
		$this->displayTagsById('root-admin-results');
	
		// Based on the scope set the data to test
		if ($scope == 'all') {
			$testCases = $this->testcases[$type['code']]['setupList'];
		} else {
			$testCases = array($this->testcases[$type['code']]['setupList'][$scope]);
		}
		
		//Get search results
		foreach($testCases as $test){
			$this->getAdministrationSetupList($test, $attrType);
		}
	}
	
	public function getAdministrationSetupList($opt = array(), $type = array()){
		//$opt = array_merge($this->basicParam, $opt);
		$opt =  array('page' => 1, 'rows' => 10);
		$content = $this->content;
		$srcRc = $this->drupalGetAJAX('administration/people/setup/search/all/',array('query'=>$opt));
		//debug("result content: " . print_r($srcRc, 1));
		$this->updateSearchResults($content,$srcRc,'narrow-search-results-holder');
		
		$ctoolModel = array(
				'modelWidth' => 890,
				'modelClass' => 'ctools-admin-setup-addedit-wrapper',
				'modelTitle' => t($type['title']),
				'contentWidth' => 570,
				'contentMhight' => 335,
				'outerHeight' => 620,
				'outerWidth' => 336,
				'blockHeight' => 1232,
				'blockWidth' => 1343,
				'modelTop' => 150,
				'modelLeft' => 226.5,
				'docHeight' => 1232,
				'docWidth' => 1343
		);
		$this->addCtoolModelContent($ctoolModel);
		$modelContent = $this->content;
		
		//Reset content with the ctool model
		$this->content = $modelContent;
		
		//Get empty form
		$post_field = array('wrapper'=>'paint-narrow-search-results');
		$listPath = '?q=/administration/people/setup/'. $type['title'] .'/'. $type['code'] .'/ajax/addedit/';
		$out = $this->drupalPostAJAX(null, $edit,'Save',$listPath, array(),array(),'',$post_field);
		
		$this->verbose('Request to: ' . $this->getUrl() . '<hr />' . $this->content);
		
		// Do General validations
		$this->assertResponse(200,'Form Rended successfully');
		$webError = "Website encountered an unexpected error";
		$this->assertNoText(t($webError),'Web errors not found','catalog_admin');
		
	}

	protected function getSetupTestCases(){
		$rand = $this->randomName();
		$this->testcases = array(
								'department' => array(
													'setupList' => array(
															'basic' => array(),
															'case1' => array(),
													),		
													'setupCreate' => array(
											  				'st_case1' => array("name"	=> 'st_case1 department - '.$rand),	
											  				'st_case2' => array("name"	=> 'st_case2 department - '.$rand),	
													),
													'setupUpdate' => array(
															'st_case1' => array( "search" => 'st_case1', "name" => 'st_case1 department changed- '.$rand, "detail"	 => $this->getSetupDetails('st_case1', 'department')),
															'st_case2' => array( "search" => 'st_case2', "name" => 'st_case1 department changed- '.$rand, "detail"	 => $this->getSetupDetails('st_case1', 'department')),													),
													'setupDelete' => array(
															'st_case1' => array( "search" => 'st_case1','detail' => $this->getSetupDetails('st_case1', 'department')),
															'st_case2' => array( "search" => 'st_case2','detail' => $this->getSetupDetails('st_case2', 'department')),
													),
												),
								'employment-type' => array(
													'setupList' => array(
															'basic' => array(),
															'case1' => array(),
													),		
													'setupCreate' => array(
											  				'st_case1' => array("name"	=> 'st_case1 employment-type - '.$rand),	
											  				'st_case2' => array("name"	=> 'st_case2 employment-type - '.$rand),	
													),
													'setupUpdate' => array(
															'st_case1' => array( "search" => 'st_case1', "name" => 'st_case1 employment-type changed- '.$rand, "detail"	 => $this->getSetupDetails('st_case1', 'employment-type')),
															'st_case2' => array( "search" => 'st_case2', "name" => 'st_case1 employment-type changed- '.$rand, "detail"	 => $this->getSetupDetails('st_case1', 'employment-type')),													),
													'setupDelete' => array(
															'st_case1' => array( "search" => 'st_case1','detail' => $this->getSetupDetails('st_case1', 'employment-type')),
															'st_case2' => array( "search" => 'st_case2','detail' => $this->getSetupDetails('st_case2', 'employment-type')),
													),
								),
								'job-role' => array(
													'setupList' => array(
															'basic' => array(),
															'case1' => array(),
													),		
													'setupCreate' => array(
											  				'st_case1' => array("name"	=> 'st_case1 job-role - '.$rand),	
											  				'st_case2' => array("name"	=> 'st_case2 job-role - '.$rand),	
													),
													'setupUpdate' => array(
															'st_case1' => array( "search" => 'st_case1', "name" => 'st_case1 job-role changed- '.$rand, "detail"	 => $this->getSetupDetails('st_case1', 'job-role')),
															'st_case2' => array( "search" => 'st_case2', "name" => 'st_case1 job-role changed- '.$rand, "detail"	 => $this->getSetupDetails('st_case1', 'job-role')),													),
													'setupDelete' => array(
															'st_case1' => array( "search" => 'st_case1','detail' => $this->getSetupDetails('st_case1', 'job-role')),
															'st_case2' => array( "search" => 'st_case2','detail' => $this->getSetupDetails('st_case2', 'job-role')),
													),
								),
								'job-title' => array(
													'setupList' => array(
															'basic' => array(),
															'case1' => array(),
													),		
													'setupCreate' => array(
											  				'st_case1' => array("name"	=> 'st_case1 job-title - '.$rand),	
											  				'st_case2' => array("name"	=> 'st_case2 job-title - '.$rand),	
													),
													'setupUpdate' => array(
															'st_case1' => array( "search" => 'st_case1', "name" => 'st_case1 job-title changed- '.$rand, "detail"	 => $this->getSetupDetails('st_case1', 'job-title')),
															'st_case2' => array( "search" => 'st_case2', "name" => 'st_case1 job-title changed- '.$rand, "detail"	 => $this->getSetupDetails('st_case1', 'job-title')),													),
													'setupDelete' => array(
															'st_case1' => array( "search" => 'st_case1','detail' => $this->getSetupDetails('st_case1', 'job-title')),
															'st_case2' => array( "search" => 'st_case2','detail' => $this->getSetupDetails('st_case2', 'job-title')),
													),
								),
								'user-type' => array(
													'setupList' => array(
															'basic' => array(),
															'case1' => array(),
													),
													'setupCreate' => array(
															'st_case1' => array("name"	=> 'st_case1 user-type - '.$rand),
															'st_case2' => array("name"	=> 'st_case2 user-type - '.$rand),
													),
													'setupUpdate' => array(
															'st_case1' => array( "search" => 'st_case1', "name" => 'st_case1 user-type changed- '.$rand, "detail"	 => $this->getSetupDetails('st_case1', 'user-type')),
															'st_case2' => array( "search" => 'st_case2', "name" => 'st_case1 user-type changed- '.$rand, "detail"	 => $this->getSetupDetails('st_case1', 'user-type')),													),
													'setupDelete' => array(
															'st_case1' => array( "search" => 'st_case1','detail' => $this->getSetupDetails('st_case1', 'user-type')),
															'st_case2' => array( "search" => 'st_case2','detail' => $this->getSetupDetails('st_case2', 'user-type')),
													),
								),
								
							);
	}
	
	public function getSetupTitle($setupId = '', $type = '') {
		$attrType  = $this->getProfileListCode($type);
		$setupTitle = db_query("SELECT name FROM slt_profile_list_items WHERE id = :setup_id", array(':setup_id' => $setupId ))->fetchField();
		return $setupTitle;
	}
	
	public function getSetupStatus($setupId = '', $type = '') {
		$attrType  = $this->getProfileListCode($type);
		$setupStatus = db_query("SELECT status FROM slt_profile_list_items WHERE id = :setup_id", array(':setup_id' => $setupId ))->fetchField();
		return $setupStatus;
	}
	
	public function getSetupDetails($search_str = '', $type = '') {
		$attrType  = $this->getProfileListCode($type);
		$select = db_select('slt_profile_list_items', 'sp');
		$select->addField('sp', 'id', 'id');
		$select->addField('sp', 'code', 'code');
		$select->condition('sp.name', '%' . db_like($search_str) . '%', 'LIKE');
		$select->condition('sp.code', '%' . db_like($attrType['code']) . '%', 'LIKE');
		$select->condition('sp.is_active', 'Y');
		$select->orderBy('sp.id', 'DESC');
		$select->range(0,1);
		$setupId = $select->execute()->fetchAssoc();
		return $setupId;
	}
	
	public function getProfileListCode($type = '') {
		$typeCode = '';
		$title = '';
		switch ($type) {
			case 'department':
				$typeCode = 'cre_usr_dpt';
				$title	= 'Department';
				break;
			case 'employment-type':
				$typeCode = 'cre_usr_etp';
				$title	= 'Department';
				break;
			case 'job-role':
				$typeCode = 'cre_usr_jrl';
				$title	= 'Department';
				break;
			case 'job-title':
				$typeCode = 'cre_usr_jtl';
				$title	= 'Department';
				break;
			case 'user-type':
				$typeCode = 'cre_usr_ptp';
				$title	= 'Department';
				break;
			default:
				break;	
		}
		return array('title' => $title, 'code' => $typeCode);
	}
}


class AdministrationSetupListBase extends AdministrationSetupTestHelper
{
	
}

/*class AdministrationSetupListAll extends AdministrationSetupListBase
{
	public static function getInfo() {
		return array(
				'name' => 'Administration - Setup - List - All Tests',
				'description' => 'Module : exp_sp_administration_people',
				'group' => '1204 - Administration - People - Setup - List',
		);
	}
	
	public function testSetupListAll() {
		debug('testAdminSetupListAll called');
		$this->manageAdminSetup('all');
	}
}*/

class AdministrationSetupListDepartment extends AdministrationSetupListBase
{
	public static function getInfo() {
		return array(
				'name' => 'Administration - Setup - List - Department',
				'description' => 'Module : exp_sp_administration_people',
				'group' => '1204 - Administration - People - Setup - List',
		);
	}

	public function testSetupListCase1() {
		debug('testAdminSetupListCase1 called');
		$this->manageAdminSetup('basic', 'department');
	}
}

class AdministrationSetupListEmploymentType extends AdministrationSetupListBase
{
	public static function getInfo() {
		return array(
				'name' => 'Administration - Setup - List - EmploymentType',
				'description' => 'Module : exp_sp_administration_people',
				'group' => '1204 - Administration - People - Setup - List',
		);
	}

	public function testSetupListEmploymentType() {
		debug('testSetupListEmploymentType called');
		$this->manageAdminSetup('basic', 'employment-type');
	}
}

class AdministrationSetupListJobRole extends AdministrationSetupListBase
{
	public static function getInfo() {
		return array(
				'name' => 'Administration - Setup - List - JobRole',
				'description' => 'Module : exp_sp_administration_people',
				'group' => '1204 - Administration - People - Setup - List',
		);
	}

	public function testSetupListJobRole() {
		debug('testAdminSetupListJobRole called');
		$this->manageAdminSetup('basic', 'job-role');
	}
}

class AdministrationSetupListJobTitle extends AdministrationSetupListBase
{
	public static function getInfo() {
		return array(
				'name' => 'Administration - Setup - List - JobTitle',
				'description' => 'Module : exp_sp_administration_people',
				'group' => '1204 - Administration - People - Setup - List',
		);
	}

	public function testSetupListJobTitle() {
		debug('testSetupListJobTitle called');
		$this->manageAdminSetup('basic', 'job-title');
	}
}

class AdministrationSetupListUserType extends AdministrationSetupListBase
{
	public static function getInfo() {
		return array(
				'name' => 'Administration - Setup - List - UserType',
				'description' => 'Module : exp_sp_administration_people',
				'group' => '1204 - Administration - People - Setup - List',
		);
	}

	public function testSetupListUserType() {
		debug('testAdminSetupListUserType called');
		$this->manageAdminSetup('basic', 'user-type');
	}
}







?>