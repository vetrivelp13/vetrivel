<?php
class AdministrationAnnouncementTestHelper extends ExpertusWebTestCase {
	private $searchResultContent = null;
	public $listContent = '';
	protected $testcases = array ();
	private $srcParam = array (
			'title' => '', // Title base search
			'announcementdaterange' => '', // date range on announcement
			'announcementlang' => 'cre_sys_lng_eng', // Selected languages pipe separated
			'sortby' => 'desc', // Sort by option
			'announcemanage' => 'cre_sys_fop_me' 
	);
	public function setUp() {
		parent::setUp ();
		$this->drupalLogin ( $this->admin ); // login as admin
		$this->getAnnouncementTestCases ();
		// set refer to prevent access denied error
		$this->setHttpReferer ( 'learning/enrollment-search' );
	}
	public function manageAdminAnnouncement($scope = 'basic') {
		
		// Get Main HTML content
		$this->drupalPost ( 'administration/manage/announcement' );
		$content = $this->content;
		
		// Get Filters
		$this->drupalGetAJAX ( 'administration/search-filter/announcement' );
		$this->content = drupal_json_decode ( $this->content );
		
		// Update filters with existing response
		$replArray = array (
				'rendered_narrow_search_filters' => 'narrow-search',
				'rendered_main_div' => 'root-admin-results',
				'rendered_tab_content_main' => 'tab-content-main',
				'rendered_narrow_search_sortbar' => 'admin-maincontent_tab',
				'rendered_narrow_search_actionbar' => 'sort-bar-V2' 
		);
		
		$this->updateSearchFilters ( $content, $replArray, 'div', 'tag', 'div' );
		
		$this->displayTagsById ( 'narrow-search' );
		$this->displayTagsById ( 'root-admin-results' );
		
		// Based on the scope set the data to test
		if ($scope == 'all') {
			$testCases = $this->testcases ['announcementList'];
		} else {
			$testCases = array (
					$this->testcases ['announcementList'] [$scope] 
			);
		}
		
		// Get search results
		foreach ( $testCases as $test ) {
			$this->getAdministrationAnnouncementList ( $test );
		}
	}
	public function getAdministrationAnnouncementList($opt = array()) {
		$opt = array_merge ( $this->basicParam, $opt );
		$this->listContent = $this->content;
		$srcRc = $this->drupalGetAJAX ( 'administration/manage/announcement/search/all/', array (
				'query' => $opt 
		) );
		$this->updateSearchResults ( $this->listContent, $srcRc, 'narrow-search-results-holder' );
	}
	protected function getAnnouncementTestCases() {
		$rand = $this->randomName ();
		$this->testcases = array (
				'announcementList' => array (
						'basic' => array (),
						'case1' => array () 
				),
				'announcementCreate' => array (
						'st_case1' => array (
								"description[value]" => 'st_case1 announcement ' . $rand,
								"from_date" => date ( 'm-d-Y' ),
								"from_time" => 'hh:mm',
								"to_date" => date ( 'm-d-Y' ),
								"to_time" => 'hh:mm',
								"lang_code" => 'cre_sys_lng_eng',
								"priority" => 1 
						),
						'st_case2' => array (
								"description[value]" => 'st_case2 announcement ' . $rand,
								"from_date" => date ( 'm-d-Y' ),
								"from_time" => 'hh:mm',
								"to_date" => date ( 'm-d-Y' ),
								"to_time" => 'hh:mm',
								"lang_code" => 'cre_sys_lng_eng',
								"priority" => 1 
						) 
				),
				'announcementUpdate' => array (
						'st_case1' => array (
								"description[value]" => 'st_case1 announcement changed ' . $rand,
								"lang_code" => 'cre_sys_lng_eng',
								"priority" => 1,
								"id" => $this->getAnnouncementId ( 'st_case1' ) 
						),
						'st_case2' => array (
								"description[value]" => 'st_case2 announcement changed ' . $rand,
								"lang_code" => 'cre_sys_lng_eng',
								"priority" => 1,
								"id" => $this->getAnnouncementId ( 'st_case2' ) 
						) 
				),
				'announcementDelete' => array (
						'st_case1' => array (
								'id' => $this->getAnnouncementId ( 'st_case1' ) 
						),
						'st_case2' => array (
								'id' => $this->getAnnouncementId ( 'st_case2' ) 
						) 
				),
				'announcementView' => array (
						'st_case1' => array (
								'id' => $this->getAnnouncementId ( 'st_case1' ) 
						) 
				),
				'announcementStatus' => array (
						'st_case1' => array (
								'id' => $this->getAnnouncementId ( 'st_case1' ) 
						),
						'st_case2' => array (
								'id' => $this->getAnnouncementId ( 'st_case2' ) 
						) 
				) 
		);
	}
	public function getAnnouncementTitle($announcementId = '') {
		$announcementTitle = db_query ( "SELECT description FROM slt_site_notice WHERE id = :announcement_id", array (
				':announcement_id' => $announcementId 
		) )->fetchField ();
		return $announcementTitle;
	}
	public function getAnnouncementStatus($announcementId = '') {
		$announcementStatus = db_query ( "SELECT status FROM slt_site_notice WHERE id = :announcement_id", array (
				':announcement_id' => $announcementId 
		) )->fetchField ();
		return $announcementStatus;
	}
	public function getAnnouncementId($search_str = '') {
		$select = db_select ( 'slt_site_notice', 'nt' );
		$select->addField ( 'nt', 'id', 'id' );
		$select->condition ( 'nt.status', 'cre_sys_obt_not_del', '!=' );
		$select->condition ( 'nt.description', '%' . db_like ( $search_str ) . '%', 'LIKE' );
		$select->orderBy ( 'nt.id', 'DESC' );
		$select->range ( 0, 1 );
		$announcementId = $select->execute ()->fetchField ();
		return $announcementId;
	}
}
class AdministrationAnnouncementListBase extends AdministrationAnnouncementTestHelper {
}
class AdministrationAnnouncementListAll extends AdministrationAnnouncementListBase {
	public static function getInfo() {
		return array (
				'name' => 'Administration - Announcement - List - All Tests',
				'description' => 'Module : exp_sp_administration_announcement',
				'group' => '1506 - Administration - Manage - Announcement - List' 
		);
	}
	public function testAnnouncementListAll() {
		debug ( 'testAdminAnnouncementListAll called' );
		$this->manageAdminAnnouncement ( 'all' );
	}
}
class AdministrationAnnouncementListCase1 extends AdministrationAnnouncementListBase {
	public static function getInfo() {
		return array (
				'name' => 'Administration - Announcement - List - Case 1',
				'description' => 'Module : exp_sp_administration_announcement',
				'group' => '1506 - Administration - Manage - Announcement - List' 
		);
	}
	public function testAnnouncementListCase1() {
		debug ( 'testAdminAnnouncementListCase1 called' );
		$this->manageAdminAnnouncement ( 'case1' );
	}
}

/**
 * Announcement view test cases
 * Created By :Maheswari.M
 * Created Date:22.12.2016
 */
class AdministrationAnnouncementViewBase extends AdministrationAnnouncementTestHelper {
	public function viewAnnouncementTestCase($scope) {
		$ctoolModel = array (
				'modelWidth' => 890,
				'modelClass' => 'ctools-modal-ctools-viewscreen-wrapper',
				'modelTitle' => t ( 'View' ),
				'contentWidth' => 680,
				'contentMhight' => 335,
				'outerHeight' => 620,
				'outerWidth' => 336,
				'blockHeight' => 1232,
				'blockWidth' => 1343,
				'modelTop' => 150,
				'modelLeft' => 226.5,
				'docHeight' => 1232,
				'docWidth' => 1343 
		);
		$this->addCtoolModelContent ( $ctoolModel );
		
		$modelContent = $this->content;
		
		$testCases = $this->testcases ['announcementView'] [$scope];
		
		if ($testCases ['id'] == 'null' || $testCases ['id'] == '') {
			debug ( 'there is no announcement exists' );
		} else {
			
			// Reset content with the ctool model
			$this->content = $modelContent;
			
			// Get empty form
			$post_field = array (
					'wrapper' => 'paint-narrow-search-results' 
			);
			$groupId = $testCases ['id'];
			
			$out = $this->drupalPostAJAX ( null, $edit, 'Save', '?q=administration/view-announce/ajax/addedit/' . $groupId, array (), array (), '', $post_field );
			$this->verbose ( 'Request to: ' . $this->getUrl () . '<hr />' . $this->content );
			// Do General validations
			$this->assertResponse ( 200, 'Form Rended successfully' );
			$webError = "Website encountered an unexpected error";
			$this->assertNoText ( t ( $webError ), 'Web errors not found', 'catalog_admin' );
		}
	}
}
class AdministrationAnnouncementViewCase1 extends AdministrationAnnouncementViewBase {
	public static function getInfo() {
		return array (
				'name' => 'Administration - Announcement - View - Case 1',
				'description' => 'Module : exp_sp_administration_announcement',
				'group' => '1506 - Administration - Manage - Announcement - View' 
		);
	}
	public function testAnnouncementViewCase1() {
		debug ( 'testAnnouncementViewCase1 called' );
		$this->manageAdminAnnouncement ( 'case1' );
		$this->viewAnnouncementTestCase ( 'st_case1' );
	}
}

/**
 * Announcement change status test cases
 * Created By :Maheswari.M
 * Created Date:30.12.2016
 * To check the functionality for the announcement publish/unpublish .
 */
class AdministrationAnnouncementStatusBase extends AdministrationAnnouncementTestHelper {
	public function statusGroupTestCase($scope = 'all') {
		// Based on the scope set the data to test
		if ($scope == 'all') {
			$testCases = $this->testcases ['announcementStatus'];
		} else {
			$testCases = array (
					$this->testcases ['announcementStatus'] [$scope] 
			);
		}
		
		foreach ( $testCases as $test ) {
			$announcementId = $test ['id'];
			if ($announcementId != '') {
				// fetching the announcement status
				$status = $this->getAnnouncementStatus ( $announcementId );
				$this->changeStatus ( $announcementId, $status );
				$status = $this->getAnnouncementStatus ( $announcementId );
				$this->changeStatus ( $announcementId, $status );
				$this->getAdministrationAnnouncementList ();
			} else
				debug ( 'The announcement id not found' );
		}
	}
	public function changeStatus($announcementId, $status) {
		if ($status == 'cre_sys_obt_not_atv') {
			// announcement is published status.
			$this->changeAnnouncementStatus ( $announcementId );
			$this->assertResponse ( 200, 'Announcement status unpublished successfully' );
		} else {
			// announcement is unpublished status.
			$this->changeAnnouncementStatus ( $announcementId );
			$this->assertResponse ( 200, 'Announcement status published successfully' );
		}
	}
	public function changeAnnouncementStatus($announcementId) {
		$this->drupalPostAJAX ( null, $edit, 'Save', '?q=ajax/administration/manage/announcement/publish-and-unpublish/' . $announcementId . '/announcement', array (), array (), '', $post_field );
		$this->verbose ( 'Request to: ' . $this->getUrl () . '<hr />' . $this->content );
	}
}
class AdministrationAnnouncementStatusCase1 extends AdministrationAnnouncementStatusBase {
	public static function getInfo() {
		return array (
				'name' => 'Administration - Announcement - Status - Case1',
				'description' => 'Module : exp_sp_administration_announcement',
				'group' => '1506 - Administration - Manage - Announcement - Status' 
		);
	}
	public function testAnnouncementPublishCase1() {
		debug ( 'testAnnouncementPublishCase1 called' );
		$this->manageAdminAnnouncement ( 'case1' );
		$this->statusGroupTestCase ( 'st_case1' );
	}
}
class AdministrationAnnouncementStatusCase2 extends AdministrationAnnouncementStatusBase {
	public static function getInfo() {
		return array (
				'name' => 'Administration - Announcement - Status - Case2',
				'description' => 'Module : exp_sp_administration_announcement',
				'group' => '1506 - Administration - Manage - Announcement - Status' 
		);
	}
	public function testAnnouncementPublishCase2() {
		debug ( 'testAnnouncementPublishCase1 called' );
		$this->manageAdminAnnouncement ( 'case1' );
		$this->statusGroupTestCase ( 'st_case2' );
	}
}

?>