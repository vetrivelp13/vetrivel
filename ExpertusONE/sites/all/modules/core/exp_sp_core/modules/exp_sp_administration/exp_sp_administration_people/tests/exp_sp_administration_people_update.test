<?php 

class AdministrationUserUpdateBase extends AdministrationUserTestHelper
{
	public function updateUserTestCase($scope = 'all') {
		$ctoolModel = array(
				'modelWidth' => 890,
				'modelClass' => 'ctools-modal-ctools-admin-user-addedit-style',
				'modelTitle' => t('User'),
				'contentWidth' => 548,		// from #modal-content
				'contentMhight' => 235,		// from #modal-content
				'outerHeight' => 378,
				'outerWidth' => 593,
				'blockHeight' => 1232,		// Document Height
				'blockWidth' => 1343,		// Document Height
				'modelTop' => 72,			// from #modalContent
				'modelLeft' => 630,			// from #modalContent
				'docHeight' => 1232,		// Document Height
				'docWidth' => 1343			// Document Width
		);
		$this->addCtoolModelContent($ctoolModel);

		$modelContent = $this->content;
		
		// Based on the scope set the data to test
		if ($scope == 'all') {
			$testCases = $this->testcases['userUpdate'];
		} else {
			$testCases = array($this->testcases['userUpdate'][$scope]);
		}

		foreach($testCases as $test){
			//Reset content with the ctool model
			$this->content = $modelContent;

			//Get empty form
			$post_field = array('wrapper'=>'paint-narrow-search-results');
			$update_id = $test['id'];
			unset($test['id']);
			$out = $this->drupalPostAJAX(null, $edit,'Save','?q=/administration/people/user/ajax/addedit/' . $update_id, array(), array(), '', $post_field);

			$this->verbose('Request to: ' . $this->getUrl() . '<hr />' . $this->content);

			// Do General validations
			$this->assertResponse(200,'Form Rended successfully');
			$webError = "Website encountered an unexpected error";
			$this->assertNoText(t($webError),'Web errors not found','catalog_admin');

			// Save form
			$param = array(
					"form_id"=>"exp_sp_administration_user_basic_addedit_form",
					"_triggering_element_name" 	=>"hidden-save",
					"_triggering_element_value"	=>"hidden-save",
			);

			$post_field = array('submit'=>$param,'wrapper'=>'user-basic-addedit-form');

			$out = $this->drupalPostAJAX(null, $test,'Save','?q=system/ajax',array(),array(),'',$post_field);


			$this->verbose('Request to: ' . $this->getUrl() .	'<hr />' . $this->content);


			//Check if any error thrown
			$isError = $this->xpath('//div[@class="messages error"]//ul/li');
			$error = '';
			debug("ERROR STRINGS ");

			if(sizeOf($isError) > 0){
				$error = (string) $isError[0];
			}
			$this->assertResponse(200,'Form Repainted successfully');
			$txt = 'updated successfully';
			$this->assertText(t($txt),'Updated changes successfully','catalog_admin');
			$this->assertNoText(t($error),'Error - '.$error,'catalog_admin');
			$webError = "Website encountered an unexpected error";
			$this->assertNoText(t($webError),'Web errors not found','catalog_admin');
/** Added by Hari **/			
			if($scope == 'st_suspend_manager'){
				$this->suspendUser($update_id);
			}
/** Added by Hari **/			
		}
	}
}


class AdministrationUserUpdateAll extends AdministrationUserCreateBase
{
	public static function getInfo() {
		return array(
				'name' => 'Administration - User - Update - All Tests',
				'description' => 'Module : exp_sp_administration_people',
				'group' => '1201 - Administration - People - User - Update',
		);
	}

	public function testUserUpdateAll() {
		$this->manageAdminUser();
		debug('testUserUpdateAll called');
		$this->updateUserTestCase('all');
	}
}

class AdministrationUserUpdateLearner extends AdministrationUserUpdateBase
{
	public static function getInfo() {
		return array(
				'name' => 'Administration - User - Update - Learner',
				'description' => 'Module : exp_sp_administration_people',
				'group' => '1201 - Administration - People - User - Update',
		);
	}

	public function testUserUpdateLearner() {
		$this->manageAdminUser();
		debug('testUserUpdateLearner called');
		$this->updateUserTestCase('st_learner');
	}
}

class AdministrationUserUpdateInstructor extends AdministrationUserUpdateBase
{
	public static function getInfo() {
		return array(
				'name' => 'Administration - User - Update - Instructor',
				'description' => 'Module : exp_sp_administration_people',
				'group' => '1201 - Administration - People - User - Update',
		);
	}

	public function testUserUpdateInstructor() {
		$this->manageAdminUser();
		debug('testUserUpdateInstructor called');
		$this->updateUserTestCase('st_instructor');
	}
}

class AdministrationUserUpdateManager extends AdministrationUserUpdateBase
{
	public static function getInfo() {
		return array(
				'name' => 'Administration - User - Update - Manager',
				'description' => 'Module : exp_sp_administration_people',
				'group' => '1201 - Administration - People - User - Update',
		);
	}

	public function testUserUpdateManager() {
		$this->manageAdminUser();
		debug('testUserUpdateManager called');
		$this->updateUserTestCase('st_manager');
	}
}
/** Added by Hari Starts **/
class AdministrationUserUpdateSuspendManager extends AdministrationUserUpdateBase
{
	public static function getInfo() {
		return array(
				'name' => 'Administration - User - Update - Suspend - Manager',
				'description' => 'Module : exp_sp_administration_people',
				'group' => '1201 - Administration - People - User - Update',
		);
	}

	public function testUserUpdateSuspendManager() {
		$this->manageAdminUser();
		debug('testUserUpdateManager called');
		$this->updateUserTestCase('st_suspend_manager');
		//$this->callSuspendMethod();
	}
	
	public function suspendUser($user){
		//invoke method to suspend the selected user
		$post_field = array('wrapper'=>'paint-narrow-search-results');
		if(empty($user)){
			debug('no user to suspend');
		}
		else{
			$user = core_encrypt($user);
			$out = $this->drupalPostAJAX(null, $edit,'Save','?q=/ajax/administration/people/activate-and-deactivate/' . $user, array(), array(), '', $post_field);
		}
		
	}
}
/** Added by Hari Ends **/
?>