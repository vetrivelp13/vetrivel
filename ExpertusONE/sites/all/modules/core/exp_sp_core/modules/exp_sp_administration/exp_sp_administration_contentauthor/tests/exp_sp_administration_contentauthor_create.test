<?php 
class AdministrationContentAuthorCreateBase extends AdministrationContentAuthorTestHelper
{
	public function createContentAuthorTestCase($scope = 'all') {
		$ctoolModel = array(
				'modelWidth' => 890,
				'modelClass' => 'ctools-modal-ctools-admin-content-addedit-style',
				'modelTitle' => t('Upload Video'),
				'contentWidth' => 570,
				'contentMhight' => 335,
				'outerHeight' => 620,
				'outerWidth' => 336,
				'blockHeight' => 1232,
				'blockWidth' => 1343,
				'modelTop' => 150,
				'modelLeft' => 226.5,
				'docHeight' => 1232,
				'docWidth' => 1343
		);
		$this->addCtoolModelContent($ctoolModel);

		$modelContent = $this->content;
		
		// Based on the scope set the data to test
		if ($scope == 'all') {
			$testCases = $this->testcases['contentCreate'];
		} else {
			$testCases = array($this->testcases['contentCreate'][$scope]);
		}

		foreach($testCases as $test){
			
			//Reset content with the ctool model
			$this->content = $modelContent;
				
			//Get empty form
			$post_field = array('wrapper'=>'paint-narrow-search-results');

			$out = $this->drupalPostAJAX(null, $edit,'Save','?q=/administration/contentauthor/video/ajax/addedit',array(),array(),'',$post_field);

			$this->verbose('Request to: ' . $this->getUrl() . '<hr />' . $this->content);

			// Do General validations
			$this->assertResponse(200,'Form Rended successfully');
			$webError = "Website encountered an unexpected error";
			$this->assertNoText(t($webError),'Web errors not found','catalog_admin');
			
			// select a content type field to populate other form values
			// $this->drupalPostAJAX(null, array("content_type" => $test['content_type']), 'content_type');

			// Save form
			$param = array(
					"form_id"=>"exp_sp_administration_contentauthor_addedit_form",
					"_triggering_element_name" 	=>"saveandpublish",
					"_triggering_element_value"	=>"Save and Publish",
			);
				
			$post_field = array('submit'=>$param,	'wrapper'=>'contentauthor-addedit-form');

			$out = $this->drupalPostAJAX(null, $test,'Save','?q=system/ajax',array(),array(),'',$post_field);
				
				
			$this->verbose('Request to: ' . $this->getUrl() .	'<hr />' . $this->content);


			//Check if any error thrown
			$isError = $this->xpath('//div[@class="messages error"]//ul/li');
			$error = '';
			debug("ERROR STRINGS ");

			if(sizeOf($isError) > 0){
				$error = (string) $isError[0];
			}
			$this->assertResponse(200,'Form Repainted successfully');
			$txt = 'Details saved successfully';
			$this->assertText(t($txt),'Details saved successfully','catalog_admin');
			$this->assertNoText(t($error),'Error - '.$error,'catalog_admin');
			$webError = "Website encountered an unexpected error";
			$this->assertNoText(t($webError),'Web errors not found','catalog_admin');
		}
	}

}

class AdministrationContentAuthorCreateAll extends AdministrationContentAuthorCreateBase
{
	public static function getInfo() {
		return array(
				'name' => 'Administration - Content Author - Create - All Tests',
				'description' => 'Module : exp_sp_administration_contentauthor',
				'group' => '1601 - Administration - Content Author - Video - Create',
		);
	}
	
	public function testContentAuthorCreateAll() {
		$this->manageAdminContentAuthor();
		debug('testAdminContentAuthorCreateAll called');
		$this->createContentAuthorTestCase('all');
	}
}

class AdministrationContentAuthorCreateCase1 extends AdministrationContentAuthorCreateBase
{
	public static function getInfo() {
		return array(
				'name' => 'Administration - Content Author - Create - Case 1',
				'description' => 'Module : exp_sp_administration_contentauthor',
				'group' => '1601 - Administration - Content Author - Video - Create',
		);
	}

	public function testContentAuthorCreateCase1() {
		$this->manageAdminContentAuthor();
		debug('testContentAuthorCreateCase1 called');
		$this->createContentAuthorTestCase('st_case1');
	}
}

class AdministrationContentAuthorCreateCase2 extends AdministrationContentAuthorCreateBase
{
	public static function getInfo() {
		return array(
				'name' => 'Administration - Content Author - Create - Case 2',
				'description' => 'Module : exp_sp_administration_contentauthor',
				'group' => '1601 - Administration - Content Author - Video - Create',
		);
	}

	public function testContentAuthorCreateCase2() {
		$this->manageAdminContentAuthor();
		debug('testContentAuthorCreateCase2 called');
		$this->createContentAuthorTestCase('st_case2');
	}
}
?>