<?php
/**
 * Implements hook_block_info().
 */
function currency_dropdown_block_info() {
	$blocks = array();
	$blocks['currency_selection'] = array(
			'info' => t('MultiCurrency Selection'),
			'cache' => DRUPAL_CACHE_PER_ROLE,
			'visibility' => BLOCK_VISIBILITY_LISTED

	);
	$blocks['admin_currency_selection'] = array(
			'info' => t('MultiCurrency Selection Admin'),
			'cache' => DRUPAL_CACHE_PER_ROLE,
			'visibility' => BLOCK_VISIBILITY_LISTED

	);
	return $blocks;
}

//'pages' => 'learning/catalog-search
//learning/class-details/*
//learning/course-details/*
//learning/learning-plan-details/*
//administration/order/create'

/**
 * Implements hook_block_view().
 */
function currency_dropdown_block_view($delta = '') {
	if(module_exists('exp_sp_commerce')) {
			global $user;
 			$block = array();
    	$path = drupal_is_front_page() ? '<front>' : $_GET['q'];
      switch ($delta) {
      	case 'currency_selection':
      		$block['content'] = drupal_get_form('currency_dropdown_form');
      		break;

      	case 'admin_currency_selection':
      		$block['content'] = drupal_get_form('admin_currency_dropdown_form');
      		break;
      }
      return $block;
	}
}

/**
 * Implementation of hook_menu().
 */
function currency_dropdown_menu() {
	try{
		$items = array();
		$items['ajax/currency_dropdown/update/%'] = array(
		'title' => 'Update User Curreny',
		'page callback' => 'updateusercurrency',
		'page arguments' => array(3),
		'access arguments' => array('access content'),
		'type' => MENU_CALLBACK,
		);
		$items['ajax/admin_currency_dropdown/update/%'] = array(
				'title' => 'Update admin order Curreny',
				'page callback' => 'updateadminordercurrency',
				'page arguments' => array(3),
				'access arguments' => array('access content'),
				'type' => MENU_CALLBACK,
		);
return $items;
}catch (Exception $ex) {
	watchdog_exception('currency_dropdown_menu', $ex);
	expertusErrorThrow($ex);
}
}
/**
 * Function to build the admin currency dropdown form.
 */

function admin_currency_dropdown_form($form,&$form_state,$orderUserId='') {
	try{
		global $user;
		global $theme_key;
		$settings = _currency_dropdown_get_settings();

		$module_path = drupal_get_path('module', 'currency_dropdown');

		$options = $js_settings = $hidden_elements = array();

		// Added by Subin. Ticket #59698
		$loginUserId = getIdOfLoggedInUser();
		$orderUserInfo = getPersonDetails($orderUserId,array('preferred_currency'));
		$default_profile_currency = getCurrencyDefDetails();
		$allow_currency_change = restrict_user_currency_select();

		//$selected_option='';
		$preferredCurrencysym='';
		$userProfileCurrency = ($orderUserId == 0) ? $default_profile_currency : $orderUserInfo['preferred_currency'];
		//$getDefaultCurrency = getDefaultCurrency();

		//$selected_option=(isset($_SESSION['admin_shop_cart_currency_code']) && !empty($_SESSION['admin_shop_cart_currency_code']))?$_SESSION['admin_shop_cart_currency_code']:$_SESSION['user_preferred_currency_code'];
		//$preferredCurrencysym=(isset($_SESSION['admin_shop_cart_currency_sym']) && !empty($_SESSION['admin_shop_cart_currency_sym']))?$_SESSION['admin_shop_cart_currency_sym']:(isset($_SESSION['user_preferred_currency_sym']) && !empty($_SESSION['user_preferred_currency_sym']))?$_SESSION['user_preferred_currency_sym']:'';
		$getCurrencySymbol = getCurrencySymbol($userProfileCurrency);
		$preferredCurrencysym = empty($getCurrencySymbol['attr2'])? '' : $getCurrencySymbol['attr2'];
		if(!isset($_SESSION['admin_shop_cart_currency_code']) && empty($_SESSION['admin_shop_cart_currency_code'])){
			$_SESSION['admin_shop_cart_currency_code'] =$userProfileCurrency;
			$_SESSION['admin_shop_cart_currency_sym'] = $preferredCurrencysym;
		}
		//  expDebug::dprint('REQUEST_URI QUERY_STRING currency_dropdown_form '.print_r($_SERVER['QUERY_STRING'],true),5);

		$queryurl=str_replace("q=","",$_SERVER['QUERY_STRING']);
		$explode_url = explode("/", $queryurl);
		$expCurrencyList = expertus_currency_list_profile_item();
		if(count($expCurrencyList) > 1  && $allow_currency_change == FALSE){
			foreach ($expCurrencyList as $key=>$val){
				$lagval = $key." <span class='spansym'>".$val."</span>";
				$options += array($key => $lagval);
			}
		//If count of currency is one then return empty form
		if(count($options) == 1){
			return '';
		}
		// Now we build the $form array.
		$form['admin_currency_dropdown_select'] = array(
				'#type' => 'select',
				'#default_value' => isset($userProfileCurrency) ? $userProfileCurrency : key($options),
				'#options' => $options,
				'#attributes' => array(
						'style' => 'width:' . $settings['js_widget_settings']['width'] . 'px',
						'class' => array('admin-currency-dropdown-select-element','hide_multicurrency_select'),
				),
				'#attached' => array(
						'js' => array($module_path . '/admin_currency_dropdown.js'),
						'css' => ($settings['js_widget']) ? array() : array($module_path . '/currency_dropdown.css'),
				),
		);

		$form['submit'] = array(
				'#type' => 'submit',
				'#value' => t('Go'),
				// The below prefix & suffix for gracefull fallback if JavaScript was disabled
				'#prefix' => "<noscript><div>\n",
				'#suffix' => "\n</div></noscript>",
		);
		}else{
			$preferredCurrencycode = isset($userProfileCurrency) ? $userProfileCurrency : key($options);
			$form['currency_dropdown_auser'] = array(
					'#type' => 'markup',
					'#prefix' => '<div class="currencynoselect" id ="language_flag">'.(($theme_key == 'expertusoneV2') ? '<span >'.$preferredCurrencycode.' <span class="spansym">'.$preferredCurrencysym.'</span></span>' : ''),
					'#suffix' => '</div>',
			);
		}
		return $form;
	}catch (Exception $ex) {
		watchdog_exception('admin_currency_dropdown_form', $ex);
		expertusErrorThrow($ex);
	}
}
/**
 * Function to build the currency dropdown form.
 */

function currency_dropdown_form($form,&$form_state) {
  try{
  global $user;
  global $theme_key;
  $settings = _currency_dropdown_get_settings();

  $module_path = drupal_get_path('module', 'currency_dropdown');

  $options = $js_settings = $hidden_elements = array();
  
  //Added by Subin. Ticket #59698
  $loginUserId = getIdOfLoggedInUser();
  $default_profile_currency = getCurrencyDefDetails();
  $allow_currency_change = restrict_user_currency_select();

  $selected_option='';
  $preferredCurrencysym='';
  //$getDefaultCurrency = getDefaultCurrency();
  $selected_option=$_SESSION['user_preferred_currency_code'];
  $preferredCurrencysym=$_SESSION['user_preferred_currency_sym'];
//  expDebug::dprint('REQUEST_URI QUERY_STRING currency_dropdown_form '.print_r($_SERVER['QUERY_STRING'],true),5);

  $queryurl=str_replace("q=","",$_SERVER['QUERY_STRING']);
  $explode_url = explode("/", $queryurl);
  if ((!in_array("cart", $explode_url) || (in_array("cart", $explode_url) && count($explode_url)==1)) ){

  $expCurrencyList = expertus_currency_list_profile_item();
  if(count($expCurrencyList) > 1 && ($allow_currency_change == FALSE || $loginUserId == 0)){
  foreach ($expCurrencyList as $key=>$val){
  	$lagval = $key." <span class='spansym'>".$val."</span>";
  	$options += array($key => $lagval);
  }

  //If count of currency is one then return empty form
  if(count($options) == 1){
    return '';
  }
    // Add required files and settings for JS widget.
    if ($settings['js_widget']) {
      drupal_add_js($module_path . '/msdropdown/jquery.dd.js');

      $js_settings += array(
        'visibleRows' => $settings['js_widget_settings']['visible_rows'],
        'rowHeight' => $settings['js_widget_settings']['row_height'],
        'animStyle' => $settings['js_widget_settings']['animation'],
      );

        drupal_add_css($module_path . '/msdropdown/dd_currency.css');
        $js_settings += array(
          'mainCSS' => 'dd',
        );

      drupal_add_js(array('currency_dropdown' => array('jsWidget' => $js_settings)), 'setting');
    }
   // if($loggedUserId!=''){

    // Now we build the $form array.
   $form['currency_dropdown_select'] = array(
      '#type' => 'select',
      '#default_value' => isset($selected_option) ? $selected_option : key($options),
      '#options' => $options,
      '#attributes' => array(
        'style' => 'width:' . $settings['js_widget_settings']['width'] . 'px',
        'class' => array('currency-dropdown-select-element','hide_multicurrency_select'),
      ),
      '#attached' => array(
        'js' => array($module_path . '/currency_dropdown.js'),
        'css' => ($settings['js_widget']) ? array() : array($module_path . '/currency_dropdown.css'),
      ),
    );

    $form['submit'] = array(
      '#type' => 'submit',
      '#value' => t('Go'),
      // The below prefix & suffix for gracefull fallback if JavaScript was disabled
      '#prefix' => "<noscript><div>\n",
      '#suffix' => "\n</div></noscript>",
    );
  }else{
  	$preferredCurrencycode = isset($selected_option) ? $selected_option : key($options);
  	$form['currency_dropdown_auser'] = array(
  			'#type' => 'mockup',
  			'#prefix' => '<div class="currencynoselect" id ="language_flag">'.(($theme_key == 'expertusoneV2') ? '<span >'.$preferredCurrencycode.' <span class="spansym">'.$preferredCurrencysym.'</span></span>' : ''),
  			'#suffix' => '</div>',
  	);
  }
}else{
  		$preferredCurrencycode = isset($selected_option) ? $selected_option : key($options);
  		$form['currency_dropdown_auser'] = array(
  				'#type' => 'mockup',
  				'#prefix' => '<div id ="language_flag">'.(($theme_key == 'expertusoneV2') ? '<span >'.$preferredCurrencycode.' <span class="spansym">'.$preferredCurrencysym.'</span></span>' : ''),
  				'#suffix' => '</div>',
  		);
  }

  return $form;
  }catch (Exception $ex) {
    watchdog_exception('currency_dropdown_form', $ex);
    expertusErrorThrow($ex);
  }
}

/**
 * Returns array of Profile currency Code and Symbol
 */
function expertus_currency_list_profile_item() {
  try{
  $expcurrency = db_select('slt_profile_list_items','profList');
  $expcurrency->addField('profList','attr1');
  $expcurrency->addField('profList','attr2');
  $expcurrency->Condition('profList.code','cre_sys_crn_%','LIKE');
  $expcurrency->Condition('profList.attr3','Y');
  $expcurrency->Condition('profList.is_active','Y');
  $expcurrency->orderBy('profList.attr1', 'ASC');
  $expcurrencyList = $expcurrency->execute()->fetchAllKeyed();
  return $expcurrencyList;
  }catch (Exception $ex) {
    watchdog_exception('expertus_currency_list_profile_item', $ex);
    expertusErrorThrow($ex);
  }
}

/**
 * Returns array of Profile preferred currency code
 */
function exp_person_selected_currency($uid) {
	try{
 		$expselcurrency = db_select('slt_person','sltper');
		$expselcurrency->addField('sltper','preferred_currency');
		$expselcurrency->Condition('sltper.id',$uid);
		$expselcurrencyList = $expselcurrency->execute()->fetchAssoc();
		return $expselcurrencyList;
	}catch (Exception $ex) {
		watchdog_exception('exp_person_selected_currency', $ex);
		expertusErrorThrow($ex);
	}
}

/**
 * Helper function to get currency switcher dropdown settings
 */
function _currency_dropdown_get_settings($settings = NULL) {
  $defaults = array(
    'showall' => 0,
    'js_widget' => 1,
    'js_widget_settings' => array(
      'row_height' => 23,
      'width' => '65',
      'animation' => 'slideDown',
    ),
    /*'currencyicons' => array(
      'flag_position' => 1,
    ),*/
  );
  return array_merge($defaults, variable_get('currency_dropdown', $defaults));
}

/**
 * Update Currency code to slt_person table and reset tthe session variable.
 */
function updateusercurrency($code){
	//global $user;

	$loggedUserId = getSltpersonUserId();
	/*$select = db_update('slt_person');
	$select->fields(array('preferred_currency'=>$code));
	$select->condition('id', $loggedUserId, '=');
	expDebug::dPrintDBAPI('Qery of updateCurrencyList Code', $select);
	$select->execute();*/
	unset($_SESSION['user_preferred_currency_code']);
	unset($_SESSION['user_preferred_currency_sym']);
	// Unset the filters in admin catalog page.
//	cache_set('catalog_filters','');
	cache_set('program_filters','');
	$_SESSION['user_preferred_currency_code'] = empty($code)? '' : $code;
	$getCurrencySymbol = getCurrencySymbol($code);
	$_SESSION['user_preferred_currency_sym'] = empty($getCurrencySymbol['attr2'])? '' : $getCurrencySymbol['attr2'];
	drupal_add_js(array('user_prefference' => array('currency_code' =>  $code, 'currency_sym' =>  $_SESSION['user_preferred_currency_sym'])), 'setting');
	echo "success";
}
function updateadminordercurrency($code){
	$loggedUserId = getSltpersonUserId();
	unset($_SESSION['shop_cart_currency_code']);
	unset($_SESSION['shop_cart_currency_sym']);
	unset($_SESSION['admin_shop_cart_currency_code']);
	unset($_SESSION['admin_shop_cart_currency_sym']);
	unset($_COOKIE['admin_shop_cart_currency_code']);
	unset($_COOKIE['admin_shop_cart_currency_sym']);
	setcookie("TestCookie", $value);
	// Unset the filters in admin catalog page.
	//cache_set('catalog_filters','');
	cache_set('program_filters','');
	$_SESSION['admin_shop_cart_currency_code'] = empty($code)? '' : $code;
	setcookie("admin_shop_cart_currency_code", $_SESSION['admin_shop_cart_currency_code']);
	$getCurrencySymbol = getCurrencySymbol($code);
	$_SESSION['admin_shop_cart_currency_sym'] = empty($getCurrencySymbol['attr2'])? '' : $getCurrencySymbol['attr2'];
	setcookie("admin_shop_cart_currency_sym", $_SESSION['admin_shop_cart_currency_sym']);
	foreach ($_SESSION['cartform']['clone_uc_cart_review_table']['#items'] as $item) {
  		$cClassId 	= $item->classId;
  		$cCourseId 	= $item->courseId;
  		$ucOrderId 	= $item->order_id;
  		$nodeid  		= $item->nid;
  		$Object_Type = $item->delivery_type_code;
  		$order_product_id = $item->order_product_id;
  		$orderDet = db_query('select user_id,id from slt_order where uc_order_id = '.$ucOrderId)->fetchAll();
  		$cartFrom = 'adminorder';
  		updateSltOrederItems($cCourseId,$cClassId,$Object_Type,$orderDet[0]->id,$orderDet[0]->user_id,$order_product_id,$nodeid,$ucOrderId,$cartFrom);
  	}
	echo "success";
	exit();
}

