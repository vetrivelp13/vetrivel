<?php
/**
 * Implementation of hook_init().
 */
function exp_sp_my_profile_init() {
	try{
  global $user;
  if((arg(1) == 'my-profile') && ($user->uid==0)) {
    $query = array('destination' => "learning/my-profile");
    drupal_goto('/', array('query' => $query));
  }
  $setting['activeModulesList'] = array(
    'myactivity' => (module_exists('exp_sp_my_activity')) ? 'Y' : 'N',
    'myskill' => (module_exists('exp_sp_my_skill')) ? 'Y' : 'N' 
  );
  drupal_add_js($setting, 'setting');
  }catch (Exception $ex) {
  	watchdog_exception('exp_sp_my_profile_init', $ex);
  	expertusErrorThrow($ex);
  }
}

/**
 * Implementation of hook_block_info().
 */
function exp_sp_my_profile_block_info() {
	try{
  $blocks = array();
  $blocks['my_details'] = array(
    'info' => t('My_details'),
  	'cache' => DRUPAL_CACHE_PER_ROLE,
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages' => 'learning/my-profile
    learning/my-profile/skills
    learning/ajax/myprofile/user/*
    '
  );
  return $blocks;
  }catch (Exception $ex) {
  	watchdog_exception('exp_sp_my_profile_block_info', $ex);
  	expertusErrorThrow($ex);
  }
}

/**
 * Implementation of hook_block_view().
 */
function exp_sp_my_profile_block_view($delta = ''){
  try{
  $block = array();
  switch ($delta) {
    case 'my_details':
      include_once(drupal_get_path('module', 'exp_sp_administration') .'/exp_sp_administration.inc');
      drupal_add_js(drupal_get_path('module', 'exp_sp_administration').'/exp_sp_administration.js', array('type' => 'file', 'group' => JS_DEFAULT));
      include_once(drupal_get_path('module', 'exp_sp_learning') .'/exp_sp_learning.inc');
      drupal_add_js(drupal_get_path('module', 'exp_sp_my_profile').'/exp_sp_my_profile.js', array('type' => 'file', 'group' => JS_DEFAULT));
      global $theme_key;
      if($theme_key == 'expertusoneV2') {
  		//NEWUI THEME STYLE SHEET
      drupal_add_css(drupal_get_path('module', 'exp_sp_my_profile') .'/exp_sp_my_profile_v2.css', array('type' => 'file', 'group' => CSS_DEFAULT));
      	} else {
      drupal_add_css(drupal_get_path('module', 'exp_sp_my_profile') .'/exp_sp_my_profile.css', array('type' => 'file', 'group' => CSS_DEFAULT));		
      	}
      if(module_exists('exp_sp_esignature')){ 
      	 if($theme_key == 'expertusoneV2') {
  		//NEWUI THEME STYLE SHEET  	   
          drupal_add_css(drupal_get_path('module', 'exp_sp_esignature') .'/exp_sp_esignature_v2.css', array('type' => 'file', 'group' => CSS_DEFAULT));
      	 }else{
      	  drupal_add_css(drupal_get_path('module', 'exp_sp_esignature') .'/exp_sp_esignature.css', array('type' => 'file', 'group' => CSS_DEFAULT));
      	 }
      }
      $js_module_optional = array('type' => 'file', 'group' => JS_DEFAULT);
      drupal_add_js(drupal_get_path('module', 'exp_sp_administration') .'/exp_sp_administration_addedit_behaviours.js', $js_module_optional);
       require_once('exp_sp_my_profile.inc');
        $block['subject'] = t('LBL272');
        if(arg(2)=='skills'){
          $block['content'] =  drupal_get_form('exp_sp_my_skill_form');
        }elseif(arg(3)=='user') {
          $block['content'] = drupal_get_form('exp_sp_my_profile_form',arg(4));
        }
        else {
             $my_profile_form = drupal_get_form('exp_sp_my_profile_form');
             expDebug::dPrint('$function = ' . print_r($my_profile_form,true), 5);
             $my_profile_form_html = drupal_render($my_profile_form);
             expDebug::dPrint('$function = ' . print_r($my_profile_form_html,true), 5);
             $block['content'] = $my_profile_form_html;
        }
        if(arg(1) == 'my-profile'){
        	enableCtool();
        }
        break;
  }
  return $block;
  }catch (Exception $ex) {
    watchdog_exception('exp_sp_my_profile_block_view', $ex);
    expertusErrorThrow($ex);
  } 
}

/**
 * Implementation of hook_menu().
 */
function exp_sp_my_profile_menu() {
  try{
    $items = array();
    
    $items['learning/my-profile'] = array(
      'title' => 'My Profile',
      'page callback' => 'empty_value',
      'access arguments' => array('expertus learner'),
      'access callback' => array('user_is_logged_in'),
      'type' => MENU_CALLBACK
    );
   $items['learning/ajax/myprofile/user/%'] = array(
      'title' => 'My Profile',
      'page callback' => 'profileOtherUser',
       'page arguments' => array(4),
      'access arguments' => array('expertus learner'),
      'type' => MENU_CALLBACK
    ); 
    $items['learning/company-autocomplete'] = array(
      'title' => 'Company Autocomplete',
      'page callback' => 'getOrganizationAutoComplete',
      'access arguments' => array('expertus learner'),    
      'type' => MENU_CALLBACK,
    );

     return $items;
    }catch (Exception $ex) {
        watchdog_exception('exp_sp_my_profile_menu', $ex);
        expertusErrorThrow($ex);
  } 
}

/**
 * Implements hook_theme().
 */
function exp_sp_my_profile_theme() {
	try{
  return array(
    'my_profile' => array(
      'variables' => array('results' => array()),
      'template' => 'exp_sp_my_profile-view',
    ),
    'my_organization' => array(
      'variables' => array('results' => array()),
      'template' => 'exp_sp_my_organization-view',
    ),
    'my_skills' => array(
      'variables' => array('results' => array()),
      'template' => 'exp_sp_my_skills-view',
    ),
  );
  }catch (Exception $ex) {
  	watchdog_exception('exp_sp_my_profile_theme', $ex);
  	expertusErrorThrow($ex);
  }
}

/**
 * Render Other User profile information
 */
function profileOtherUser($userId){
	try{
		/* $js_module_optional = array('type' => 'file', 'group' => JS_DEFAULT);
		drupal_add_js(drupal_get_path('module', 'exp_sp_my_profile') .'/exp_sp_my_profile.js',$js_module_optional);
		drupal_add_js(drupal_get_path('module', 'exp_sp_my_skill') .'/exp_sp_my_skill.js',$js_module_optional);
		drupal_add_js(drupal_get_path('module', 'exp_sp_my_activity') .'/exp_sp_my_activity.js',$js_module_optional);  */
		$userId = (int)$userId; // Fix for Security issues.
  $out = "<div id='myprofile-myactivity-screen'>";
  $out .= '<img src="'.base_path().'sites/all/themes/core/expertusone/expertusone-internals/images/drag.png" width="0" height="0" onload="onLoadClick('.$userId.');" style="display:none;" />';
  $out .= "<input type ='hidden' id='hidden-other-userid' value=".$userId.">";   
  $block_profile = block_load('exp_sp_my_profile', 'my_details');
  $output1 = drupal_render(_block_get_renderable_array(_block_render_blocks(array($block_profile))));
  
  if(module_exists('exp_sp_my_skill')){
  	$block_skillset = block_load('exp_sp_my_skill', 'my_skill');
  	$output2 = drupal_render(_block_get_renderable_array(_block_render_blocks(array($block_skillset))));
  }
  if(module_exists('exp_sp_my_activity')){
  	$block_activity = block_load('exp_sp_my_activity', 'my_activity');
  	$output3 = drupal_render(_block_get_renderable_array(_block_render_blocks(array($block_activity))));
  }
  $out .=  $output1."<div></div>";//<div id='myprofile-myskillset-screen'>".$output2."</div><div>".$output3."</div>";
  if($output2){
  	$out .=  "<div id='myprofile-myskillset-screen'>".$output2."</div>";
  }
  if($output3){
  	$out .=  "<div>".$output3."</div>";
  }
  $out .= "</div>";
  echo $out;
  //return '';
  }catch (Exception $ex) {
  	watchdog_exception('profileOtherUser', $ex);
  	expertusErrorThrow($ex);
  }
}

/**
 * Implements My Profile Form
 */
function exp_sp_my_profile_form($form, &$form_state, $personUserId) {
  try{
     global $user;
     global $theme_key;
     $ieBrowser = (preg_match('/MSIE/',$_SERVER['HTTP_USER_AGENT'])) ? true : false;//upload picture issue in IE
     if(!empty($personUserId)){
        $getPersonId = $personUserId;
       }else{
        $getPersonId = getIdOfLoggedInUser();
     }
  if(module_exists('ldap_authentication'))
    {
      $auth_conf = ldap_authentication_get_valid_conf();
      $authenticationMode=$auth_conf->authenticationMode;
      $const_var=LDAP_AUTHENTICATION_EXCLUSIVE;
    }
  include_once(drupal_get_path('module', 'exp_sp_admin_userpoints') .'/exp_sp_admin_userpoints.inc');
  $profile = getMyProfile($getPersonId);
  $form = array();
  $form['#prefix'] = '<div id="show_expertus_message"></div><div id="my-profile-form-wrapper" class="my-profile-form-wrapper">';
  $form['#suffix'] = '</div>';
  $form['start-my-profile'] = array(
    '#type' => 'markup',
    '#markup' => '<div id="myprofile-parent">'
  );
 /* $form['aboutme-part-start'] = array(
    '#type' => 'markup',
    '#markup' => '<p class="myprofile-aboutme-part-start">'
  );*/
  $form['myavatar']['prefix'] = array(
    '#type' => 'markup',
    '#markup' => '<div id="myprofile-myavatar-start">'
  );
  
  $drupaluid  = getDrupalIdOfUser($getPersonId);
  $account    = user_load($drupaluid,TRUE);
  $profile_image_path='';
  if(!empty($account->picture)){
    $filepath  = $account->picture->uri;
     $profile_image_path = $filepath;
     $headerProfileImage = file_create_url($profile_image_path);
      if($theme_key == 'expertusoneV2'){	
     if(!empty($personUserId)){
       $src_image_name = "<img src='$headerProfileImage' width='100' height='100'>";
     }else{
       $src_image_name = "<img src='$headerProfileImage' width='123' height='119'>";  
     }
     }else{
     if(!empty($personUserId)){
       $src_image_name = "<img src='$headerProfileImage' width='100' height='100'>";
     }else{
       $src_image_name = "<img src='$headerProfileImage' width='160' height='160'>";  
     }
     }
     $upload_type= t("LBL831");
     $addPictureClass = "attach-btn-addpicture";
     $spanclass = '<span class="pipe-type"> | </span>';
     $hiddenbuttonClass = "myprofile-browse-hidden-emptyimage";
	}else{
	  if($theme_key == 'expertusoneV2'){	
	  if(!empty($personUserId)){
	     $src_image_name = "<img src='sites/default/files/pictures/user_profile_icon.png' width='124' height='120'>";
	  }else{
	     $src_image_name = "<img src='sites/default/files/pictures/user_profile_icon.png' width='124' height='108'>";
	  }
	  }else{
	  if(!empty($personUserId)){
	     $src_image_name = "<img src='sites/default/files/pictures/default_user_big.png' width='100' height='100'>";
	  }else{
	     $src_image_name = "<img src='sites/default/files/pictures/default_user_big.png' width='160' height='160'>";
	  } 	
	  }
	  $upload_type= t("LBL830");
	  $addPictureClass = "attach-btn-addpicture-new";
	  $spanclass='';
	  $hiddenbuttonClass = "myprofile-browse-hidden";
	}
	
  	
  $form['myavatar']['myavatar-image'] = array(
    '#type' => 'markup',
    '#prefix' => '<div id="myprofile-myavatar-image" class="profile-detail-border-img">'.$src_image_name,
    '#suffix' => '</div>',
  );
  if(empty($personUserId)){
   $browseAttributes             = array();
   $browseAttributes['class'][]  = 'myprofile-browse';
   if($ieBrowser == 1)
   	$browseAttributes['class'][]  = ($theme_key=='expertusoneV2')?"file-upload-browser":'';
   $browseAttributes['class'][]  = $hiddenbuttonClass; //'myprofile-browse-hidden';
   $browseAttributes['onChange'] = 'document.getElementById(\'myprofile_done_btn\').click();';
   $form['myavatar']['myprofile_upload_file'] = array(
      '#type'          => 'file',
      '#id'            => 'myprofile_upload_file',
      '#title'   	   => t('Choose a file'),
     // '#title_display' => 'invisible',
      '#attributes'    => $browseAttributes,   
      '#size'          => 1,
      '#theme_wrappers' => array(),
      '#prefix'     => '<div id="add-picture-button" style="'.(($theme_key == "expertusoneV2") ? ($ieBrowser==1)?'opacity: 0;':'display: none;' : '').'"><span class="'.$addPictureClass.'" >'.$upload_type.'</span>'.$spanclass.'<div style="display:inline;" id="attach_up_file" >',
      '#suffix'     => '</div></div>',
    );
   }
  if(!empty($account->picture)&& empty($personUserId)){
  	     $form['myavatar']['delete-profile-image-container'] = array(
      		'#type' => 'submit',	
      		'#attributes' => array('Class' => 'del-link addedit-form-expertusone-throbber','data-wrapperid'=>'myprofile-parent'),
      		'#value' => t('LBL369'),
  	     	'#id'   => 'delete-profile-image-id',
    		'#name' => 'delete-profile-image',
  	     	'#prefix' => '<div style="'.(($theme_key == "expertusoneV2") ? 'display:none;' : '').'">',
  	        '#suffix' => '</div>',
      		'#ajax' => array(
        			'wrapper' => 'myprofile-myavatar-start',
        			//'callback' => 'exp_sp_my_profile_form_callback',
  	                'callback'    => 'exp_sp_myprofile_picture_repaint', 
        			'method' => 'replace',
        			'effect' => 'none',
        			'event'=>'click',
  	                 'keypress'  => true,
  	                'progress' => array(
		            'type'    => 'throbber',
		            'message' => ''
		                        ), 
                        ),
     ); 
  	     
  	  }
    
    $wrapperId                              = 'myprofile-myavatar-start';    
    $doneBtnAttributes                      = array();
    $doneBtnAttributes['class'][]           = 'addedit-form-expertusone-throbber';
    $doneBtnAttributes['data-wrapperid']    = array('myprofile-parent'); 
  
    $form['myavatar']["attachment_done"] = array(
  	    '#type'       => 'submit',
        '#id'         => 'myprofile_done_btn',
  	    '#prefix'     => '<div style="display:none;">',
  	    '#suffix'     => '</div>',
  	    '#value'      => t('Done'),
        '#name'       => 'profiledone',
  	    '#attributes' => $doneBtnAttributes,       
        '#ajax' => array(
		      'wrapper'   => $wrapperId,
		     // 'callback'  => 'exp_sp_my_profile_form_callback',
    		  'callback'    => 'exp_sp_myprofile_picture_repaint',
		      'method'    => 'replace',
		      'effect'    => 'none', // 'fade',
		      'event'     =>'click',
		      'keypress'  => true,
		      'progress' => array(
		        'type'    => 'throbber',
		        'message' => ''
		      ),
	    	),
  	   );

  $form['myavatar']['suffix'] = array(
    '#type' => 'markup',
    '#markup' => '</div>'
  );
  
  $form['editorsection']['prefix'] = array(
    '#type' => 'markup',
    '#markup' => '<div id="my-profile-editor-content">'
  );

  $form['editorsection']['userprofile-start'] = array(
    '#type' => 'markup',
    '#markup' => '<span id="userprofile-part">'
  );
  $restrictChar = ($theme_key == "expertusoneV2")? 13 :14;
    if(empty($personUserId)) {
     $restrictChar = ($theme_key == "expertusoneV2")? 26 :22;
    }
  $form['editorsection']['userprofile-username-head'] = array(
    '#type' => 'markup',
    '#markup' => ' <div class="profile-name-inline"> <div class="limit-title-row"><span class="limit-title vtip my-profile-head-title" title="'.sanitize_data($profile->person_full_name).'">'.$profile->person_full_name.'</span> </div>',
    //  '#markup' => '<div class="profile-name-inline">' .
                 //  '<span class="vtip my-profile-head-title" title="'.sanitize_data($profile->person_full_name).'">'.titleController('EXP-SP-MYPROFILE-FULL-NAME', $profile->person_full_name,$restrictChar).'</span>',
                   
  );
  
  $step = (empty($form_state['storage']['step'])) ? 1 : $form_state['storage']['step'];
  expDebug::dPrint('Storage step = ' . print_r($form_state['storage']['step'], true) , 4);
  expDebug::dPrint('Form State values = ' . print_r($form['editorsection'], true) , 5);
  expDebug::dPrint('Storage step = ' . print_r($step, true) , 4);  
  $form_state['storage']['step'] = $step;
  if($step == 1 && empty($personUserId)){
     if($theme_key == "expertusoneV2"){
	     //$form['editorsection']['user-profile-picture'] = array();
	     $form['editorsection']['user-profile-picture']['prefix'] = array(
		    '#type' => 'markup',
		    '#markup' => '<div id = "myactions-div">'
	  	 );
	  	 $markup = '';
	  	 
	     if(empty($personUserId) && $upload_type != t('LBL831')){
	      	$pngPath = "/sites/all/themes/core/expertusoneV2/expertusone-internals/images/user-photo-upload.png";
			     if($ieBrowser == 1){
			  	 	$markup = '<span id="add-pic-anchor" class="vtip" title="'.t(LBL170).'"><img  id= "user-profile-add-picture-id" src="'.$pngPath.'" /></span>';
			  	 }else{
			  	 	$markup = '<a  class="vtip" title="'.t('LBL170').'" id="add-pic-anchor" href="javascript:void(0);" onclick = "$(\'#myprofile_upload_file\').click();return false;"><img id= "user-profile-add-picture-id" src="'.$pngPath.'"></a>';
			  	 }
	      	$form['editorsection']['user-profile-picture']['user-profile-add-picture'] = array(
			    '#type' => 'markup',
			    '#markup' => $markup,
	  	  	);
	     }
	     if(!empty($account->picture) && empty($personUserId)){  
	  	  	$pngPath = "/sites/all/themes/core/expertusoneV2/expertusone-internals/images/user-photo-upload.png";
	     	$form['editorsection']['user-profile-picture']['user-profile-delete-picture'] = array(
			    '#type' => 'markup',
			    '#markup' => '<a id="del-pic-anchor" href="javascript:void(0);" onclick = "$(\'#delete-profile-image-id\').click();return false;"><img id= "user-profile-add-picture-id" src="'.$pngPath.'"></a>',
	  	  	);
	     }
	     $form['editorsection']['user-profile-picture']['suffix'] = array(
		    '#type' => 'markup',
		    '#markup' => '</div>'
	  	 );
     }
     $profileEditAttributes['Class'][] = ($theme_key == "expertusoneV2")? 'my-profile-edit-button vtip' : 'my-profile-edit-button';
     $profileEditAttributes['title'][] = ($theme_key == "expertusoneV2")? t('LBL063') : '';
	 $profileEditAttributes['data-wrapperid'] = array('my-profile-form-wrapper');
	 $profileEditAttributes['Class'][] = 'addedit-form-expertusone-throbber';
     $form['editorsection']['edit-userprofile-detail'] = array(
      		'#type' => 'submit',	
      		'#attributes' => $profileEditAttributes,
            '#prefix'     => ($theme_key == "expertusoneV2") ? '<div class="my-profile-edit-section"><span class="pipe-type" style="margin-top:2px"> | </span>' : '<div class="my-profile-edit-section">',
  	        '#suffix'     => '</div>', 
      		'#value' => ($theme_key == "expertusoneV2") ? '' : t('LBL063'),
    		'#name' => 'profile-edit',
      		'#ajax' => array(
        			'wrapper' => 'my-profile-editor-content',
        			'callback' => 'exp_sp_myprofile_save_repaint',
        			'method' => 'replace',
        			'effect' => 'fade',
        			'event'=>'click',
              ),
      ); 
  }
		
        
        if(module_exists('exp_sp_admin_userpoints')) {
  		
	 	 $totalPoints = getActionPointsForUser($getPersonId);
    	$userBadgesView = '<div class="total-points">'.BadgesCount($totalPoints).'</div><div class="points-text-uppercase">'.t('LBL1066').'</div>';
    	$form['editorsection']['userprofile-user-totalbadges'] = array(
      '#type' => 'markup',
      '#markup' => '<div class="total-badge-points">'.$userBadgesView.'</div>',
      );
	$userPointView = '<div class="total-points">'.getTotalPointsGainedByUser($getPersonId,$action_code='').'</div><div class="points-text-uppercase">'.t('LBL1064').'</div>';
    $form['editorsection']['userprofile-user-totalpoints'] = array(
      '#type' => 'markup',
      '#markup' => '<div class="total-user-points">'.$userPointView.'</div><div class="clearBoth"></div>',
    );
	 }
 
  $form['editorsection']['userprofile-username-headend'] = array(
    '#type' => 'markup',
    '#markup' => '</div>',
  );
  if($step == 1){
  	$form['editorsection']['box_edit'] = array(
    	'#type' => 'markup',
    	'#markup' => theme('my_organization', array('results' => $profile, 'manager_detail' => getManager($profile->person_manager_id))),
      );
      
    $name = 'ANNOUNCEMENT_SHORTTITLE';
  //  $shortTitle = titleController($name, $profile->about_me,450);
  $shortTitle=str_replace(array("<p>", "</p>"),"",$profile->about_me);
  /*  if(substr($shortTitle, strlen($shortTitle)-3, 3)=='...'){ 
      $spanTag = '<span class="profile-desc-more-text" onClick="toggleProfileDesc('.$profile->person_id.',1);return false;" ><a class="profile-desc-show-short-text "></a></span>';
    }*/
    $form['editorsection']['userprofile-short-desc-aboutme'] = array(
      '#type' => 'markup',
      '#markup' => '<div class ="limit-desc-row"><span  id="'.$profile->person_id.'_short-desc-toggle" class="limit-desc short-desc-toggle myprofile-about-me vtip"><span class="cls-learner-descriptions">'.$shortTitle. '</span></span></div>',
    );
    
 /*   $arraytag= array("<p>", "</p>");
    $longSpanTag = '<span class="profile-desc-more-text" onClick="toggleProfileDesc('.$profile->person_id.',2);return false;" ><a class="profile-desc-show-full-text "></a></span>';
    $form['editorsection']['userprofile-long-desc-aboutme'] = array(
      '#type' => 'markup',
      '#markup' => '<span id="'.$profile->person_id.'_long-desc-toggle" class="long-desc-toggle myprofile-about-me" style="display:none;">'.str_replace($arraytag,"",$profile->about_me). '</span>',
    );*/
    
  }
  else{
    // Include file for html editor
 // include_once(drupal_get_path('module', 'exp_sp_administration') .'/exp_sp_administration.inc');
  //drupal_add_js(drupal_get_path('module', 'exp_sp_administration').'/exp_sp_administration.js', array('type' => 'file', 'group' => JS_DEFAULT));
  //include_once(drupal_get_path('module', 'exp_sp_learning') .'/exp_sp_learning.inc');
    $form['editorsection']['userprofile-action-headstart'] = array(
      '#type' => 'markup',
      '#markup' => '<div>',
    );
    $form['editorsection']['box'] = array(
    	'#type' => 'markup',
    	'#markup' => theme('my_organization', array('results' => $profile, 'manager_detail' => getManager($profile->person_manager_id))),
      );
 	if($theme_key != "expertusoneV2")
    addHiddenFieldToAddEditFormNew($form['editorsection'], 'ckeditor_word_count', '500');
    
    $form['editorsection']['addedit-long-description-container'] = array(
      '#type'   => 'markup',
      '#markup' => '<div class="addedit-about-me-container profile-detail-editor-section">',
    );
    
    //$profHtml = ($theme_key == "expertusoneV2") ? 'filtered_html' : 'full_html';
    if($theme_key == 'expertusoneV2') {
      $defaultValue = empty($form_state['values']['about_me']) ? $profile->about_me : $form_state['values']['about_me']; 
      addProfileTextAreaFieldToAddEditForm($form['editorsection'], 'about_me', '', $defaultValue, 2,false,false);
    }
    else{
      $defaultValue = empty($form_state['values']['about_me']['value']) ? $profile->about_me : $form_state['values']['about_me']['value']; 
      addTextFormatFieldToAddEditFormNew($form['editorsection'], 'about_me', t('About Me'), $defaultValue, 'full_html' , 2,false,false,500);
    }
  
    
    
  $profileCancelAttributes['Class'] = array('my-profile-cancel-button');
	$profileCancelAttributes['Class'][] = ($theme_key == "expertusoneV2")? 'addedit-form-expertusone-throbber vtip' : 'addedit-form-expertusone-throbber';
	$profileCancelAttributes['title'][] = ($theme_key == "expertusoneV2")? t('LBL109') : '';
	$profileCancelAttributes['data-wrapperid'] = array('my-profile-form-wrapper');
    $form['editorsection']['user_profile_cancel'] = array(
        '#type' => 'submit',
        '#value' => ($theme_key == "expertusoneV2") ? '' : t("LBL109"),
   	 	  '#name' => 'profile-cancel',
        '#prefix' =>'<table cellspacing="2" cellpadding="2" class="my-profile-box my-profile-useraction-box">' .
                      '<tr>' .
                        '<td class="my-account-title">' .
                          '<span class="my-account-title-text">'.$fldName.'</span>' .
                          '<span class="action-button"><div class="profile-detail-cancel">',
        '#suffix' =>  '</div>',
       // '#limit_validation_errors' => array(),
        // #submit is required to use #limit_validation_errors
        '#submit' => array('exp_sp_my_profile_form_submit'),
        '#attributes' => $profileCancelAttributes,
        '#ajax' => array(
          'wrapper' => 'my-profile-editor-content',
          'callback' => 'exp_sp_myprofile_save_repaint',
          'event'=>'click',
        ),
	  );
	  
	  $customHiddenButtonId = 'esign-myprofile-user-save';
  	//$setAttributes['tabindex'] = array('11');
  	  if($theme_key != "expertusoneV2")
	  $setAttributes['Class'] =  array('admin-save-button-middle-bg');
	  $setAttributes['onclick'] = array();
	  
	  $setAttributes['onclick'][] = 'remove_messages();';
	  $setAttributes['data-wrapperid'] = array('my-profile-form-wrapper');
	  $setAttributes['Class'][] = 'addedit-form-expertusone-throbber';
	  $setAttributes['Class'][] = ($theme_key == "expertusoneV2")? 'my-profile-save vtip' : 'my-profile-save';
	  $setAttributes['title'][] = ($theme_key == "expertusoneV2")? t('LBL141') : '';
	  
	// Disable the e-signature because user only change description   
    if(module_exists('exp_sp_esignature') && isActiveEsignRegion() && 1==0){
      $form['editorsection']['user_profile_save'] = array(
        '#type' => 'button',
        '#prefix' =>'<div class="admin-save-button-container">' .
                      '<div class="admin-save-button-left-bg"></div>',
        '#suffix' =>  '<div class="admin-save-button-right-bg"></div>'.
                    '</div>' .
                  '</span>' .
                '</td>' .
              '</tr>' .
            '</table>',
        '#title' => t('LBL141'),
        '#value' => ($theme_key == "expertusoneV2") ? '' : t('LBL141'),
        '#name' => 'save',
        //'#submit' => array('addNewEnrollTPUserDetails'),
        '#attributes' => $setAttributes,
        '#ajax' => array(
         'callback' => 'exp_sp_myprofile_save_repaint',
         'wrapper' => 'my-profile-editor-content',
         'customButtonId'=>$customHiddenButtonId,
         'method' => 'replace',
  		   'effect' => 'none', // 'fade',
  		   'event'=>'click',
  		   'keypress' => true,
  		   'progress' => array(
  		     'type' => 'throbber',
  		     'message' => ''
  		   ),
       ),
     );
 	  }
 	  else {	  
 	    if($theme_key == "expertusoneV2"){
 	      $prefix = '<div class="profile-detail-save-container">';
 	      $suffix = '</div></span></td></tr></table>';
 	      $labelText = '';
 	    }else {
 	      $prefix = '<div class="admin-save-button-container"><div class="admin-save-button-left-bg"></div>';
 	      $suffix = '<div class="admin-save-button-right-bg"></div></div></span></td></tr></table>';
 	      $labelText = t('LBL141');
 	    }
  	  $setAttributes['onclick'][] = '$("#'.$customHiddenButtonId.'").click(); return false;';
      $form['editorsection']['user_profile_save'] = array (
        '#type' => 'button',
        '#prefix' => $prefix,
  	    '#suffix' => $suffix.'<div class="clearBoth"></div>',
        '#title' => t('LBL141'),
        '#value' => $labelText ,
        '#name' => 'save',
        '#attributes' => $setAttributes, 
      );
	 }
	 
	 $setAttributes = array();  // Initialize
	 $setAttributes['onclick'] = array();
	 $setAttributes['onclick'][] = 'remove_messages();';
	 $setAttributes['Class'][] = 'addedit-form-expertusone-throbber';
	 $setAttributes['data-wrapperid'] = array('my-profile-form-wrapper');
   $form['editorsection'][$customHiddenButtonId] = array(
     '#type' => 'submit',
     '#value' => t('hidden-save'),
     '#name'	=> 'user-hidden-save',
     '#prefix' => '<span id = "esign-admin-div" style="display:none;">',
     '#suffix' => '</span>',
     '#id' =>$customHiddenButtonId,
     '#attributes' => $setAttributes,
     '#ajax' => array(
       'wrapper' => 'my-profile-editor-content',
      // 'callback' => 'exp_sp_myprofile_save_repaint',//0059040: Issue in my profile page
       'method' => 'replace',
       'effect' => 'none', // 'fade',
       'event'=>'click',
       'keypress' => true,
    	 'progress' => array(
    	   'type' => 'throbber',
    	   'message' => ''
    	 ),			  
    ),  
  );
  
	$form['editorsection']['userprofile-action-headend'] = array(
      '#type' => 'markup',
      '#markup' => '</div>',
    );
    
    $form['editorsection']['addedit-about-me-container1'] = array(
      '#type'   => 'markup',
      '#markup' => '</div>',
    );  
    
    
  }
  
  $form['editorsection']['userprofile-end'] = array(
    '#type' => 'markup',
    '#markup' => '</span>'
  );
  
  /*$form['aboutme-part-end'] = array(
    '#type' => 'markup',
    '#markup' => '</p>'
  );*/
  $form['editorsection']['myprofile-mediator'] = array(
    '#type' => 'markup',
    '#markup' => '<div class="clearBoth"></div>'
  );
  
  $form['editorsection']['suffix'] = array(
    '#type' => 'markup',
    '#markup' => '</div><div class="clearBoth"></div>'
  );
  
  $form['end-my-profile'] = array(
    '#type' => 'markup',
    '#markup' => '</div>'
  );
  return $form;
 }
 catch (Exception $ex) {
    watchdog_exception('exp_sp_my_profile_form', $ex);
    expertusErrorThrow($ex);
  } 
}


/**
 * Ajax Callback in My profile render
 */
function exp_sp_my_profile_form_callback($form, &$form_state) {
  try{	
  $commands = array();
  if(module_exists('exp_sp_esignature') && isActiveEsignRegion() && $form_state['triggering_element']['#name'] ==  'save'){
	  if(!form_set_error()){
	  		$form_state['esign_show_popup'] = true;	  		
	  }else{	  	
	  	$form_state['esign_show_popup'] = false;
	  }
      $custButtonId  = $form_state['triggering_element']['#ajax']['customButtonId'];
      $esignObj  = '{"popupDiv":"ctools-face-table","esignFor":"AddAdmin","esignButtId":"'.$custButtonId.'"}';
      if($form_state['esign_show_popup']==true){
	      $commands[] = ajax_command_invoke(NULL, 'getNewEsignPopup',array($esignObj));
	      return array('#type' => 'ajax', '#commands' => $commands);
      }else{
    	  //$form['#prefix'] = '<div id="wizard-form-wrapper" class="my-profile-wrapper">';
		 // $form['#suffix'] = '</div>';
		  return $form;
      }
  }else{
  	  //$form['#prefix'] = '<div id="wizard-form-wrapper" class="my-profile-wrapper">';
	  //$form['#suffix'] = '</div>';
	  return $form;
  }
  }catch (Exception $ex) {
    watchdog_exception('exp_sp_my_profile_form_callback', $ex);
    expertusErrorThrow($ex);
  } 
}

function exp_sp_my_profile_form_submit($form, &$form_state) {
  try{
	expDebug::dPrint(' $form = ' . print_r($form, true) , 5);   
    expDebug::dPrint(' $form_state = ' . print_r($form_state, true) , 5); 
    expDebug::dPrint('Storage step = ' . print_r($form_state['storage']['step'], true) , 4); 
  require_once('exp_sp_my_profile.inc');
  //require_once "./getLearnerInfo.php";
 // $obj = new GetLearnerInfo();
  //$result->UserId = $obj->getValue('userid');

  $triggerElement = $form_state['triggering_element']['#name'];
  if ($triggerElement == 'profile-edit') {
    $form_state['storage']['step'] = 2;
   // $form_state['storage']['orgstep'] = 1;
  }
  /*elseif($triggerElement == 'org-edit'){
    $form_state['storage']['orgstep'] = 2;
    $form_state['storage']['step'] = 1;
  }*/
  
  if ($triggerElement == 'profile-cancel') {
    $form_state['storage']['step'] = 1;
  }
  /*elseif($triggerElement == 'org-cancel'){
    $form_state['storage']['orgstep'] = 1;
  }*/
  if ($triggerElement == t('user-hidden-save')) {
	    $form_state['esign_show_popup']= false;
    	exp_sp_my_profile_form_commonsave($form, $form_state,getIdOfLoggedInUser());  	  
  }
  /*if ($triggerElement == t('org-hidden-save')) {
	    $form_state['esign_show_popup']= false;
    	exp_sp_my_profile_organization_form_commonsave($form, $form_state,$result);  	  
  }
  */
  if ($triggerElement == 'profiledone') {
        if(!empty ($_FILES['files']['name']['myprofile_upload_file'])){
    	 exp_sp_my_profile_upload_picture($form, $form_state);
        }
    	//command tis line for ticket 0020710 on 21-01-13 by priya.c
    	//drupal_set_message(t('MSG518'));  	  
  }
  if ($triggerElement == 'delete-profile-image') {
       //command tis line for ticket 0020710 on 21-01-13 by priya.c
      //drupal_set_message(t('MSG519')); 	
      delete_upload_images($form, $form_state);
  }
  // Otherwise, we still have work to do.
  $form_state['rebuild'] = TRUE;
  }catch (Exception $ex) {
    watchdog_exception('exp_sp_my_profile_form_submit', $ex);
    expertusErrorThrow($ex);
  } 
}

function exp_sp_my_profile_form_commonsave($form,&$form_state,$user_id){
  try{
    expDebug::dPrint('Profile Save storage'.print_r($form_state['values'],true),5);
    expDebug::dPrint('Profile Save default values'.print_r($form_state['storage']['default_values'],true), 5);
    expDebug::dPrint('Profile user id'.print_r($result->UserId,true), 5);
	updateProfile($form_state['values'], $user_id, $form_state['storage']['default_values']);
    $form_state['storage']['step'] = 1;
    //command tis line for ticket 0020710 on 21-01-13 by priya.c  
    //drupal_set_message(t('MSG012'));
  }catch (Exception $ex) {
    watchdog_exception('exp_sp_my_profile_form_commonsave', $ex);
    expertusErrorThrow($ex);
  } 
}

function exp_sp_myprofile_picture_repaint(&$form, $form_state) {
	try {
  global $theme_key;
  //return $form['myavatar'];
  expDebug::dPrint(' form elementss = ' . print_r($form['myavatar'], true)  , 4);
  $renderavatarHTML = drupal_render($form['myavatar']);  
  expDebug::dPrint(' $renderHTML = ' . print_r($renderavatarHTML, true)  , 5);
  $commands[] = ajax_command_replace('#myprofile-myavatar-start', $renderavatarHTML);
  if($theme_key == "expertusoneV2"){
	  $renderactionHTML = drupal_render($form['editorsection']['user-profile-picture']);
	  $commands[] = ajax_command_replace('#myactions-div', $renderactionHTML);
	  $commands[] = ajax_command_invoke(NULL, "uploadProfilePicture",array());
  }

  $statusMsgHTML = theme('status_messages');
  expDebug::dPrint(' $statusMsgHTML = ' . print_r($statusMsgHTML, true) , 4);
  if (!empty($statusMsgHTML)) {
  	// Show the messages
  	$commands[] = ajax_command_html('#show_expertus_message', $statusMsgHTML);
  }
 /* $renderPointsHTML = drupal_render($form['editorsection']['userprofile-user-totalpoints']);  
  expDebug::dPrint(' $$renderPointsHTML = ' . print_r($renderPointsHTML, true)  , 5);
  $commands[] = ajax_command_replace('#mypoints-div', $renderPointsHTML);*/
  return array('#type' => 'ajax', '#commands' => $commands); 
  }catch (Exception $ex) {
  	watchdog_exception('exp_sp_myprofile_picture_repaint', $ex);
  	expertusErrorThrow($ex);
  }
   
}

function exp_sp_myprofile_save_repaint($form, $form_state) {
	try{
  expDebug::dPrint(' form elementss = ' . print_r( $form['editorsection'], true)  , 5);
  $renderHTML = drupal_render( $form['editorsection']);
  expDebug::dPrint(' $renderHTML = ' . print_r($renderHTML, true)  , 5);
  $commands[] = ajax_command_replace(null, $renderHTML);
  $commands[] = initializeVtipMyProfile();
  
  $statusMsgHTML = theme('status_messages');
  expDebug::dPrint(' $statusMsgHTML = ' . print_r($statusMsgHTML, true) , 4);
  if (!empty($statusMsgHTML)) {
  	// Show the messages
  	$commands[] = ajax_command_html('#show_expertus_message', $statusMsgHTML);
  }
  
  return array('#type' => 'ajax', '#commands' => $commands); 
  }catch (Exception $ex) {
  	watchdog_exception('exp_sp_myprofile_save_repaint', $ex);
  	expertusErrorThrow($ex);
  }
}

function exp_sp_my_profile_upload_picture ($form, &$form_state) {
  try{
    global $user;
    $oldPhotoFileId = $user->picture;
    $userId = getIdOfLoggedInUser(); 
    expDebug::dPrint('Submit form '.print_r($form_state["values"],true) , 5);
    $updatedPhoto = uploadUserPicture('myprofile_upload_file', $user->uid);
    $account = user_load($user->uid, TRUE);
    // If any module has implemented hook_user_picture_updated invoke it
    foreach (module_implements('user_picture_updated') as $module) {
      $function = $module . '_user_picture_updated';
      expDebug::dPrint('$function = ' . $function, 4);
      $function($user->uid);
    }
    add_audit_trail_entry($userId, $userId, 'cre_sys_obt_usr', 'exp_sp_my_account', 'myaccount', "Added Picture", $userId, $oldPhotoFileId, $account->picture->fid);
  }catch (Exception $ex) {
    watchdog_exception('exp_sp_my_profile_upload_picture', $ex);
    expertusErrorThrow($ex);
  }
}

/**
 * Wrapper for Drupal ajax command initializeVtip
 */
function initializeVtipMyProfile(){
	try {
		return array(
				'command' => 'initializeVtipMyProfile',
		);
	} catch (Exception $ex) {
		watchdog_exception('initializeVtipMyProfile', $ex);
		expertusErrorThrow($ex);
	}
}
?>
