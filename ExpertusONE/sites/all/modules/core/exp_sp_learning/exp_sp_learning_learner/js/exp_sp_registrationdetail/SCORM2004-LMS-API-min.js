function SCORM_API_2004(){try{}catch(a){}}SCORM_API_2004.prototype._version="SCORM 2004 LMSAPI1.0.0";SCORM_API_2004.prototype._desc="SCORM 2004 LMS API Adaptor Version 1.0.0";SCORM_API_2004.prototype._callback="";SCORM_API_2004.prototype._isInitialized="false";SCORM_API_2004.prototype._cmiBooleanFalse="";SCORM_API_2004.prototype._cmiBooleanTrue="";SCORM_API_2004.prototype._errorCode=0;SCORM_API_2004.prototype._valueStr="";SCORM_API_2004.prototype._errStr="";SCORM_API_2004.prototype._CMIDATA=new Array();SCORM_API_2004.prototype._ErrorCodes={"201":"Invalid argument error","202":"Element cannot have children","203":"Element not an array. Cannot have count.","301":"Not initialized","401":"Not implemented error","402":"Invalid set value, element is a keyword","403":"Element is read only.","404":"Element is write only","405":"Element is write only","0":"No Error.The previous LMS API Function call completed successfully.","101":"General Exception.An unspecified, unexpected exception has occured"};
SCORM_API_2004.prototype.Initialize=function(b){try{debugLog("inside actual Initialize function");result=this._cmiBooleanFalse;if(b!=""){this._errorCode=201;this._isInitialized="false";}else{this._isInitialized="true";}return this._isInitialized;}catch(a){}};SCORM_API_2004.prototype.Terminate=function(b){try{debugLog("inside actual Terminate function");if(b==""){result=this.Commit("");if(!result){debugLog("Error Occured in Terminate while calling Commit; ErrorCode:"+this._errorCode);this._errorCode=201;return"false";}else{debugLog("inside Commit is succeeded");this._isInitialized="false";result=this._cmiBooleanTrue;this._callback();}}else{this._errorCode=201;debugLog("Error Occured in LMSFinish. ErrorCode:"+this._errorCode);return"false";}return"true";}catch(a){}};SCORM_API_2004.prototype.Commit=function(b){try{debugLog("inside LMSCommit");if(b!=""){this._errorCode=201;this._isInitialized="false";}else{this._errorCode=0;this._isInitialized="true";}return this._isInitialized;}catch(a){}};
SCORM_API_2004.prototype.GetValue=function(c){try{if(c!=""){var a=this._CMIDATA[c];if(a==null){a=" ";}}else{this._errorCode=301;a="";}return a;}catch(b){}};SCORM_API_2004.prototype.SetValue=function(c,a){try{debugLog("==> param:"+c+" value:"+a);this._CMIDATA[c]=a;if(c!=null&&c!=undefined&&c!=""){return"true";}else{this._errorCode=351;return"false";}}catch(b){}};SCORM_API_2004.prototype.GetLastError=function(){try{return this._errorCode;}catch(a){}};SCORM_API_2004.prototype.GetErrorString=function(a){try{var c=this._ErrorCodes[a];if(c==null){c="Undefined Error Code";}return c;}catch(b){}};SCORM_API_2004.prototype.GetDiagnostic=function(){try{return" ";}catch(a){}};SCORM_API_2004.prototype.getAllCMIData=function(){try{return this._CMIDATA;}catch(a){}};SCORM_API_2004.prototype.setCallBack=function(a){try{this._callback=a;}catch(b){}};var findAPITries=0;function findAPI(b){try{debugLog("inside findAPI");while((b.API==null)&&(b.parent!=null)&&(b.parent!=b)){findAPITries++;if(findAPITries>7){debugLog("Error finding API -- too deeply nested.");
return null;}b=b.parent;}return b.API;}catch(a){}}function getAPI(){try{debugLog("inside getAPI");var a=findAPI(window);if((a==null)&&(window.opener!=null)&&(typeof(window.opener)!="undefined")){a=findAPI(window.opener);}if(a==null){debugLog("Unable to find an API adapter");}return a;}catch(b){}}function debugLog(f){try{var c=document.getElementById("debugConsole");var b=new Date().toString();if(c!=null){var a=document.getElementById("debugConsole").innerHTML;document.getElementById("debugConsole").innerHTML=a+"<br>"+b+" "+f;}}catch(d){}}