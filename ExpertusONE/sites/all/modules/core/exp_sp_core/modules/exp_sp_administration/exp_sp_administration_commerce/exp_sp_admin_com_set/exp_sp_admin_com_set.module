<?php 
/**
* Implementation of hook_init().
*/
function exp_sp_admin_com_set_init(){
	try {
  include_once(drupal_get_path('module', 'exp_sp_admin_com_set') . '/exp_sp_admin_com_country_setting.inc');
  include_once(drupal_get_path('module', 'exp_sp_admin_com_set') . '/exp_sp_admin_com_payment_method.inc');
  include_once(drupal_get_path('module', 'exp_sp_admin_com_set') . '/exp_sp_admin_com_payment_check_setting.inc');
  include_once(drupal_get_path('module', 'exp_sp_admin_com_set') . '/exp_sp_admin_com_payment_cc_settings.inc');
  include_once(drupal_get_path('module', 'exp_sp_admin_com_set') . '/exp_sp_admin_com_cancellation_policy.inc');

  if ((substr($_SERVER['REQUEST_URI'], -strlen('administration/commerce/setting')) == 'administration/commerce/setting')) {
       global $theme_key;
       $css_theme_optional = array('type' => 'file', 'group' => CSS_THEME);
    	if($theme_key == 'expertusoneV2') {
    		//NEWUI THEME STYLE SHEET
    		drupal_add_css(drupal_get_path('module', 'exp_sp_admin_com_set') .'/exp_sp_admin_com_set_v2.css', $css_theme_optional);
    		drupal_add_css(drupal_get_path('module', 'exp_sp_administration_learning') .'/exp_sp_administration_data_grid_v2.css', $css_theme_optional);
    	}else {
  		   drupal_add_css(drupal_get_path('module', 'exp_sp_admin_com_set') .'/exp_sp_admin_com_set.css', $css_theme_optional);  
  		   drupal_add_css(drupal_get_path('module', 'exp_sp_administration_learning') .'/exp_sp_administration_data_grid.css', $css_theme_optional);
    	}     
    $js_module_optional = array('type' => 'file', 'group' => JS_DEFAULT);
    drupal_add_js(drupal_get_path('module', 'exp_sp_admin_com_set') .'/exp_sp_admin_com_payment_cc_settings.js', $js_module_optional);
    drupal_add_js(drupal_get_path('module', 'exp_sp_administration_learning') .'/exp_sp_administration_data_grid.js', $js_module_optional);
  }
  } catch (Exception $ex) {
  	watchdog_exception('exp_sp_admin_com_set_init', $ex);
  	expertusErrorThrow($ex);
  }
}

 /**
 * Implementation of hook_menu().
 */
function exp_sp_admin_com_set_menu() {
	try {
  $items = array(); 
  $items['administration/commerce/setting'] = array(
    'title' => t('LBL1021'),
    'page callback' => 'empty_value', 
    'access callback' => 'user_access',
    'type' => MENU_CALLBACK,
    'weight' => 4,
    'access arguments' => array('Commerce setup perm'),
  );
  $items['administration/commerce/setting/search/all'] = array( 
    'title' => 'Fetch Setting list to display in JQGrid',
    'page callback' => 'sendCommerceSettingListToJqGrid',
    'access callback' => 'user_access',
    'access arguments' => array('Commerce setup perm'),
    'type' => MENU_CALLBACK,
    'file' => 'exp_sp_admin_com_set.inc'
  );
  $items['administration/commerce/setting/textfilter-autocomplete'] = array(
    'title' => 'Search By Setting Filter Autocomplete',
    'page callback' => 'getsettingNameFilterAutoComplete',
    'access callback' => 'user_access',
    'access arguments' => array('Commerce setup perm'),
    'type' => MENU_CALLBACK,
    'file' => 'exp_sp_admin_com_set.inc',
  );     
  
  $items['administration/commerce/setting/cancellationpolicy/%ctools_js/addedit'] = array(
    'title' => 'Cancellation Policies Admin Main',
    'page callback' => 'render_cpolicy_admin_screen_in_ctools_modal',
    'access callback' => 'user_access',
    'page arguments' => array(4),
    'access arguments' => array('Commerce setup perm'),
    'type' => MENU_CALLBACK,
    'file' => 'exp_sp_admin_com_cancellation_policy.inc',
  );
  
  $items['ajax/administration/cancelpolicy/addedit/%/%'] = array(
    'title' => 'Add/Edit Cancellation Policy',
    'page callback' => 'render_cpolicy_addedit_form_in_qtip_popup',
    'access callback' => 'user_access',
    'page arguments' => array(4, 5),
    'access arguments' => array('Commerce setup perm'),
    'type' => MENU_CALLBACK,
    'file' => 'exp_sp_admin_com_cancellation_policy.inc',
  );
  
  $items['ajax/administration/cancelpolicy/delete/%'] = array(
    'title' => 'Delete Cancellation Policy',
    'page callback' => 'exp_sp_administration_delete_cancellation_policy',
    'access callback' => 'user_access',
    'page arguments' => array(4),
    'access arguments' => array('Commerce setup perm'),
    'type' => MENU_CALLBACK,
    'file' => 'exp_sp_admin_com_cancellation_policy.inc'
  );
  
  $items['administration/commerce/setting/countrysetting/%ctools_js/addedit'] = array(
    'title' => 'Edit Country Setting Details',
    'page callback' => 'exp_sp_administration_country_setting_display_form',
    'access callback' => 'user_access',
    'page arguments' => array(4),
    'access arguments' => array('Commerce setup perm'),
    'type' => MENU_CALLBACK,
    'file' => 'exp_sp_admin_com_country_setting.inc',
  );
  
  $items['administration/commerce/setting/paymentmethod/%ctools_js/addedit'] = array(
    'title' => 'Edit Payment Details',
    'page callback' => 'exp_sp_administration_payment_method_display_form',
    'access callback' => 'user_access',
    'page arguments' => array(4),
    'access arguments' => array('Commerce setup perm'),
    'type' => MENU_CALLBACK,
    'file' => 'exp_sp_admin_com_payment_method.inc',
  );
  
  $items['administration/commerce/setting/country/allcountry-autocomplete'] = array(
    'title' => 'Get Country List',
    'page callback' => 'getAutoCompleteCountryList',
    'access callback' => 'user_access',
    'access arguments' => array('Commerce setup perm'),
    'type' => MENU_CALLBACK,
    'file' => 'exp_sp_admin_com_country_setting.inc',
  );
  
  $items['administration/commerce/setting/country/action/%/%'] = array(
    'title' => 'Country Setting',
    'page callback' => 'enableOrDisableCountry',
    'access callback' => 'user_access',
    'page arguments' => array(5,6),
    'access arguments' => array('Commerce setup perm'),
    'type' => MENU_CALLBACK,
    'file' => 'exp_sp_admin_com_country_setting.inc',
  );
    
  $items['administration/commerce/setting/payment/action/%'] = array(
    'title' => 'Payment Setting',
    'page callback' => 'enableOrDisablePayment',
    'access callback' => 'user_access',
    'page arguments' => array(5),
    'access arguments' => array('Commerce setup perm'),
    'type' => MENU_CALLBACK,
    'file' => 'exp_sp_admin_com_payment_method.inc',
  );

  $items['administration/commerce/setting/payment/check'] = array(
    'title' => 'Payment Check setting',
    'page callback' => 'getcheckSettingDisplay',
    'access callback' => 'user_access',
    'page arguments' => array(4),
    'access arguments' => array('Commerce setup perm'),
    'type' => MENU_CALLBACK,
    'file' => 'exp_sp_admin_com_payment_check_setting.inc',
  );

  $items['administration/commerce/setting/payment/credit'] = array(
    'title' => 'Payment Credit setting',
    'page callback' => 'exp_sp_administration_commerce_cc_settings_display_form',
    'access callback' => 'user_access',
    'page arguments' => array(),
    'access arguments' => array('Commerce setup perm'),
    'type' => MENU_CALLBACK,
    'file' => 'exp_sp_admin_com_payment_cc_settings.inc',
  );
 
  return $items;
  } catch (Exception $ex) {
  	watchdog_exception('exp_sp_admin_com_set_menu', $ex);
  	expertusErrorThrow($ex);
  }
}

/**
 * Implementation of hook_theme().
 */
function exp_sp_admin_com_set_theme() {
	try {
  $themes = array();
  $themes['commerce-payment-cc-settings-screen'] = array(
    'template' => 'exp_sp_admin_com_payment_cc_settings_screen',
    'variables' => array('rendered_tabs' => '', 'rendered_settings_form' => '')
  );
  
  $themes['cancellation-policy-admin-screen'] = array(
    'template' => 'exp_sp_admin_com_cancellation_policy',
    'variables' => array()
  );
  
  $themes['exp_sp_administration_cpolicy_addedit_form'] = array(
    'render element' => 'form',
    'file' => 'exp_sp_admin_com_cancellation_policy.inc',
  );
  
  return $themes;
  } catch (Exception $ex) {
  	watchdog_exception('exp_sp_admin_com_set_theme', $ex);
  	expertusErrorThrow($ex);
  }
}

/**
 * Implementation of hook_permission().
 */
function exp_sp_admin_com_set_permission() {
	try {
  return array(
    'Commerce setup perm' => array(
      'title' => t('Commerce setup perm')
    ),
  );
  } catch (Exception $ex) {
  	watchdog_exception('exp_sp_admin_com_set_permission', $ex);
  	expertusErrorThrow($ex);
  }
}

?>
