<?php 
/**
 * Implementation of hook_menu().
 */
function exp_sp_administration_surveyquestions_menu() {
  try {
	  $items = array(); 
	 
	  $items['administration/survey/surveyquestions'] = array(
	    'title' => t('LBL240'),
	    'page callback' => 'empty_value', 
	    'access callback' => 'user_access',
	    'type' => MENU_CALLBACK,
	    'weight' => 2,
	    'access arguments' => array('Survey Questions Admin Perm'),
	    );
	
	  $items['administration/assessment/assessmentquestions'] = array(
	    'title' => t('LBL240'),
	    'page callback' => 'empty_value', 
	    'access callback' => 'user_access',
	    'type' => MENU_CALLBACK,
	    'weight' => 2,
	    'access arguments' => array('Assessment Questions Admin Perm'),
	    );
	    
	  $items['administration/survey/surveyquestions/search/all'] = array(
	    'title' => 'Fetch Survey Details List to display in JQGrid',
	    'page callback' => 'sendsurveyquestionsListToJqGrid',
	    'access callback' => 'user_access',
	    'page arguments' => array(2), 
	    'access arguments' => array('Survey Questions Admin Perm'),
	    'type' => MENU_CALLBACK,
	    'file' => 'exp_sp_administration_surveyquestions.inc'
	    );
	
	  $items['administration/assessment/assessmentquestions/search/all'] = array(
	    'title' => 'Fetch Survey Details List to display in JQGrid',
	    'page callback' => 'sendsurveyquestionsListToJqGrid',
	    'access callback' => 'user_access',
	    'page arguments' => array(2), 
	    'access arguments' => array('Assessment Questions Admin Perm'),
	    'type' => MENU_CALLBACK,
	    'file' => 'exp_sp_administration_surveyquestions.inc'
	    );
	    
	  $items['administration/survey/surveyquestions/textfilter-autocomplete'] = array(
	    'title' => 'Search By Text Filter Autocomplete',
	    'page callback' => 'getsurveyquestionsTextFilterAutoComplete',
	    'access callback' => 'user_access',
	    'access arguments' => array('Survey Questions Admin Perm'),
	    'type' => MENU_CALLBACK,
	    'file' => 'exp_sp_administration_surveyquestions.inc',
	  );
	  
	  $items['administration/assessment/assessmentquestions/textfilter-autocomplete'] = array(
	  'title' => 'Search By Text Filter Autocomplete',
	  'page callback' => 'getsurveyquestionsTextFilterAutoComplete',
	  'access callback' => 'user_access',
	  'access arguments' => array('Assessment Questions Admin Perm'),
	  'type' => MENU_CALLBACK,
	  'file' => 'exp_sp_administration_surveyquestions.inc',
	  );
	
	$items['administration/survey/surveyquestions/survey-question-autocomplete'] = array(
	  'title' => 'Search By Survey Question Autocomplete',
	  'page callback' => 'getsurveyquestionsQuestionTextFilterAutoComplete',
	  'access callback' => 'user_access',
	  'access arguments' => array('Survey Questions Admin Perm'),
	  'type' => MENU_CALLBACK,
	  'file' => 'exp_sp_administration_surveyquestions.inc',
	  );
	    
	   $items['administration/survey/%/export'] = array(
	    'title' => 'Survey Question Search Results CSV Export',
	    'page callback' => 'fetchsurveyquestionsAll',
	    'page arguments' => array('CSV','','',2),
	    'access callback' => 'user_access',
	    'access arguments' => array('Survey Questions Admin Perm'),
	    'type' => MENU_CALLBACK,
	    'file' => 'exp_sp_administration_surveyquestions.inc',
	    );
	    
	    $items['administration/assessment/%/export'] = array(
	      'title' => 'Assessment Question Search Results CSV Export',
	      'page callback' => 'fetchsurveyquestionsAll',
	      'page arguments' => array('CSV','','',2),
	      'access callback' => 'user_access',
	      'access arguments' => array('Assessment Questions Admin Perm'),
	      'type' => MENU_CALLBACK,
	      'file' => 'exp_sp_administration_surveyquestions.inc',
	    );
	     
	  $items['administration/survey/%/print'] = array( 
	     'title' => 'Assessment Questions Results Print to PDF',
	     'page callback' => 'fetchsurveyquestionsAll',
	     'page arguments' => array('PDF','','',2),
	     'access callback' => 'user_access',
	     'access arguments' => array('Survey Questions Admin Perm'),
	     'type' => MENU_CALLBACK,
	     'file' => 'exp_sp_administration_surveyquestions.inc',
	    );
	   $items['administration/assessment/%/print'] = array( 
	     'title' => 'Survey Questions Results Print to PDF',
	     'page callback' => 'fetchsurveyquestionsAll',
	     'page arguments' => array('PDF','','',2),
	     'access callback' => 'user_access',
	     'access arguments' => array('Assessment Questions Admin Perm'),
	     'type' => MENU_CALLBACK,
	     'file' => 'exp_sp_administration_surveyquestions.inc',
	    );
	        
	  $items['administration/survey/surveyquestions/%ctools_js/addedit'] = array(
	    'title' => 'Question',
	    'page callback' => 'exp_sp_administration_surveyquestion_form',
	    'page arguments' => array(3,5,2),
	    'access callback' => 'user_access',
	    'access arguments' => array('Survey Questions Admin Perm'),
	    'type' => MENU_CALLBACK,
	    'file' => 'exp_sp_administration_questions.inc',
	    ); 
	
	  $items['administration/assessment/assessmentquestions/%ctools_js/addedit'] = array(
	    'title' => 'Question',
	    'page callback' => 'exp_sp_administration_surveyquestion_form',
	    'page arguments' => array(3,5,2),
	    'access callback' => 'user_access',
	    'access arguments' => array('Assessment Questions Admin Perm'),
	    'type' => MENU_CALLBACK,
	    'file' => 'exp_sp_administration_questions.inc',
	    );     
	    
	  $items['ajax/administration/survey/survey-assessment-questions/publish-and-unpublish/%'] = array (
	    'title' => 'Publish Or Unpublish Survey for a user',
	    'page callback' => 'publishOrUnpublishSurveyAssessmentQuestions',
	    'page arguments' => array(5),
	    'type' => MENU_CALLBACK,
	    'access arguments' => array('Survey Questions Admin Perm'),
	    'file' => 'exp_sp_administration_surveyquestions.inc'
	  );
	
	  $items['ajax/administration/assessment/survey-assessment-questions/publish-and-unpublish/%'] = array (
	    'title' => 'Publish Or Unpublish Assesment for a user',
	    'page callback' => 'publishOrUnpublishSurveyAssessmentQuestions',
	    'page arguments' => array(5),
	    'type' => MENU_CALLBACK,
	    'access arguments' => array('Assessment Questions Admin Perm'),
	    'file' => 'exp_sp_administration_surveyquestions.inc'
	  );
	  $items['administration/survey/surveyquestions/view-question/%ctools_js/addedit/%/%/%'] = array(
	  		'title' => 'view question',
	  		'page callback' => 'exp_sp_administration_viewquestion_addedit_form',
	  		'page arguments' => array(4,5,6,7,8),
	  		'access callback' => 'user_access',
	  		'access arguments' => array('Survey Questions Admin Perm'),
	  		'file' => 'exp_sp_administration_surveyquestions.inc',
	  		'type' => MENU_CALLBACK
	  );
	  $items['administration/assessment/assessmentquestions/view-question/%ctools_js/addedit/%/%/%'] = array(
	  		'title' => 'view question',
	  		'page callback' => 'exp_sp_administration_viewquestion_addedit_form',
	  		'page arguments' => array(4,5,6,7,8),
	  		'access callback' => 'user_access',
	  		'access arguments' => array('Assessment Questions Admin Perm'),
	  		'file' => 'exp_sp_administration_surveyquestions.inc',
	  		'type' => MENU_CALLBACK
	  );
	  
	  
		return $items;
  }
  catch (Exception $ex) {
    watchdog_exception('exp_sp_administration_surveyquestions_menu', $ex);
    expertusErrorThrow($ex);
  } 
} 

function exp_sp_administration_surveyquestions_init() {
	global $theme_key;
  $css_theme_optional = array('type' => 'file', 'group' => CSS_THEME);
	if($theme_key == 'expertusoneV2') {
  	drupal_add_css(drupal_get_path('module', 'exp_sp_administration_surveyquestions') .'/exp_sp_administration_surveyquestions_v2.css', $css_theme_optional);
  	drupal_add_css(drupal_get_path('module', 'exp_sp_administration') .'/exp_sp_administration_view_v2.css', $css_theme_optional);
include_once(drupal_get_path('module', 'exp_sp_administration_learning') .'/exp_sp_administration_tags.inc');
  }
  else{
  	drupal_add_css(drupal_get_path('module', 'exp_sp_administration_surveyquestions') .'/exp_sp_administration_surveyquestions.css', $css_theme_optional); 
  	drupal_add_css(drupal_get_path('module', 'exp_sp_administration') .'/exp_sp_administration_view.css', $css_theme_optional);
include_once(drupal_get_path('module', 'exp_sp_administration_learning') .'/exp_sp_administration_tags.inc');
  }
	try {
		$request_uri = request_uri();
		if(stripos(request_uri(),'administration/survey/surveyquestions')!==false || stripos(request_uri(),'administration/assessment/assessmentquestions')!==false ){
			global $theme_key;
			// Multiselect
			$js_module_optional = array('type' => 'file', 'group' => JS_DEFAULT);
	
			if($theme_key == "expertusoneV2"){
				drupal_add_css(drupal_get_path('module', 'exp_sp_administration_learning') .'/exp_sp_administration_learning_v2.css');
			}else{
				drupal_add_css(drupal_get_path('module', 'exp_sp_administration_learning') .'/exp_sp_administration_learning.css');
			}
			//CUSTOM SCROLLBAR "JSscrollbar"
			drupal_add_js(drupal_get_path('module', 'exp_sp_lnrreports') .'/jscrollbar/jquery.jscrollpane.js', $js_module_optional);
	
		}
	} catch (Exception $ex) {
		watchdog_exception('exp_sp_administration_surveyquestions_init', $ex);
		expertusErrorThrow($ex);
	}
}

/**
 * Implements hook_theme.
 */
function exp_sp_administration_surveyquestions_theme() {
  $themes = array();
  
  $themes['asmt_yntf_radios'] = array (
    'render element' => 'element'
  );

  $themes['asmt_mch_checkboxes'] = array (
    'render element' => 'element'
  );

  $themes['asmt_dpn_radios'] = array (
    'render element' => 'element'
  );
  
  $themes['survey_question_fields'] = array (
    'render element' => 'element'
  );  
  
  return $themes;
}

/**
 * Implements hook_element_info.
 */
function exp_sp_administration_surveyquestions_element_info() {
	$types = array();
	
  $types['asmt_mch_checkboxes'] = array(
    '#input' => TRUE,
    '#process' => array('process_asmt_mch_checkboxes'),
    '#theme' => array('asmt_mch_checkboxes'),
    '#pre_render' => array('form_pre_render_conditional_form_element'),
    '#value_callback' => 'asmt_mch_checkboxes_value_callback',
    '#element_validate' => array('asmt_mch_checkboxes_element_validate'),
  );
  
  $types['asmt_dpn_radios'] = array(
    '#input' => TRUE,
    '#process' => array('process_asmt_dpn_radios'),
    '#theme' => array('asmt_dpn_radios'),
    '#pre_render' => array('form_pre_render_conditional_form_element'),
    '#value_callback' => 'asmt_dpn_radios_value_callback',
    '#element_validate' => array('asmt_dpn_radios_element_validate'),
  );

  $types['survey_question_fields'] = array(
    '#input' => TRUE,
    '#process' => array('process_survey_question_fields'),
    '#theme' => array('survey_question_fields'),
    '#theme_wrappers' => array('form_element'),
    '#value_callback' => 'survey_question_fields_value_callback',
    '#element_validate' => array('survey_question_fields_element_validate'),
  );

  return $types;
}


/*
 * exp_sp_administration_surveyquestion_form() - Form implementation for Questions
 */
function exp_sp_administration_surveyquestion_form($js = NULL, $questionId, $surveyType = 'surveyquestions'){
  try{
	  if ($js) {
	  	global $theme_key;
		  include_once(drupal_get_path('module', 'exp_sp_administration_surveyquestions') .'/exp_sp_administration_questions.inc');
		
		  // Ctools modal settings for questions modal dialog
		  // Default modalTheme is ExpertusCToolsModalTheme (see exp_sp_core_extend_ctools_ajax.js:Drupal.CTools.Modal.show())
		  $sample_style = array(
		    'ctools-admin-questions-addedit-style' => array(
		      'modalSize' => array(
		        'width' => 575,
		        'minHeight' => 150,
		       ),
		    ),
		  );
	    drupal_add_js($sample_style, 'setting');
	  
	    $js_module_optional = array('type' => 'file', 'group' => JS_DEFAULT);
	    drupal_add_js(drupal_get_path('module', 'exp_sp_administration') .'/exp_sp_administration_addedit_behaviours.js', $js_module_optional);
	    
      $css_theme_optional = array('type' => 'file', 'group' => CSS_THEME);
      if($theme_key == 'expertusoneV2') {
      	drupal_add_css(drupal_get_path('module', 'exp_sp_administration_surveyquestions') .'/exp_sp_administration_surveyquestions_v2.css', $css_theme_optional);
      	drupal_add_css(drupal_get_path('module', 'exp_sp_administration_catalog_access') .'/exp_sp_administration_catalog_access_v2.css', $css_theme_optional);
      }
      else{
      	drupal_add_css(drupal_get_path('module', 'exp_sp_administration_surveyquestions') .'/exp_sp_administration_surveyquestions.css', $css_theme_optional);
      	drupal_add_css(drupal_get_path('module', 'exp_sp_administration_catalog_access') .'/exp_sp_administration_catalog_access.css', $css_theme_optional);
      }
   
      $js_module_optional = array('type' => 'file', 'group' => JS_DEFAULT);
      drupal_add_js(drupal_get_path('module', 'exp_sp_administration_surveyquestions') .'/exp_sp_administration_surveyquestions.js', $js_module_optional);
      drupal_add_js(drupal_get_path('module', 'exp_sp_administration_catalog_access') .'/exp_sp_administration_catalog_access.js', $js_module_optional);
      
	
	    // Prepare the arguments list to be passed to $formState['build_info']['args'] of each form
	    $argsList    			= array();
	    $QuesTitle   			= '';
	    
	    if (!empty($questionId)) {
	      $argsList[] 			= $questionId;
	    }
	    
	    $otherArgsList[] = $surveyType; 
	    $formIdList = array(
	                         array('id' => 'exp_sp_administration_question_addedit_form', 'title' => (t('LBL325') . $QuesTitle)),
	                        );
	
	    exp_ctools_modal_multi_ajaxonly_forms_display($formIdList, $argsList, $otherArgsList);
	  }
	  else {
	  	throw new Exception('exp_sp_administration_surveyquestions.module: exp_sp_administration_surveyquestion_form() : nojs');
	  }
  }
  catch (Exception $ex) {
    watchdog_exception('exp_sp_administration_surveyquestion_form', $ex);
    expertusErrorThrow($ex);
  }
} 

function exp_sp_administration_surveyquestions_permission() {
    return array(    
    'Survey Questions Admin Perm' => array(
      'title' => t('Survey Questions Admin Perm')
    ),
    'Assessment Questions Admin Perm' => array(
      'title' => t('Assessment Questions Admin Perm')
    )
  );
} 

?>