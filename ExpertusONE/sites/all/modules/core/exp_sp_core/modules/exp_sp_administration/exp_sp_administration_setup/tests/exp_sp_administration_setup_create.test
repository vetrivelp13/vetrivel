<?php 
class AdministrationSetupCreateBase extends AdministrationSetupTestHelper
{
	public function createSetupTestCase($scope = 'all', $type = '') {

		$attrType = $this->getProfileListCode($type);
		$idPath = 'qtip_addlistvalues_visible_disp_0_' . $attrType['code'];
		$path = '//*[@id="' . $idPath . '"]';
		$addClassObj = $this->getQtipAttributes($path,'onmousedown');
		
		
		//Add qtip popup for class
		$qtipDef = array(
				'tipWidth'=>$addClassObj['wBubble'],
				'tipTop'=>128,
				'tipLeft'=>139.767,
				'tipId'=>$addClassObj['catalogVisibleId'],
				'tipObjectId'=>$addClassObj['courseId'],
				'tipTableWidht'=>373,
				'tipContentId'=>$addClassObj['popupDispId'],
				'tipEntityType'=>'cre_sys_obt_cls',
				'tipClass'=>'qtip-parent',
				'tipPos'=>'bottomRight'
		
		);
		
		$this->addQtipModel($qtipDef);
		 
		// Keep final content including qtip popup for multiple test
		$qtipContent = $this->content;
		
		debug('attribute type: ' . $type);
		
		// Based on the scope set the data to test
		if ($scope == 'all') {
			$testCases = $this->testcases[$type]['setupCreate'];
		} else {
			$testCases = array($this->testcases[$type]['setupCreate'][$scope]);
		}

		foreach($testCases as $test){
			
			//Reset content with the ctool model
			$this->content = $qtipContent;
				
			//Get empty form
			$post_field = array('wrapper'=>'paintContent'.$addClassObj['popupDispId']);
	  	
	  		$out = $this->drupalPostAJAX(null,$edit,'Add another','?q='.$addClassObj['url'],array(),array(),'',$post_field);
			
			$this->verbose('Class Empty Form: ' . $this->getUrl() .
					'<hr />' . $this->content);

			// Do General validations
			$this->assertResponse(200,'Form Rended successfully');
			$webError = "Website encountered an unexpected error";
			$this->assertNoText(t($webError),'Web errors not found','catalog_admin');

			// Save form
			$param = array(
					"form_id"=>"exp_sp_administration_setup_addedit_list_form",
					"_triggering_element_name" 	=>"hidden-Save",
					"_triggering_element_value"	=>"hidden-Save",
			);
				
			$post_field = array('submit'=>$param,	'wrapper'=>'addedit-listvalues-detail-wrapper');

			$out = $this->drupalPostAJAX(null, $test,'Save','?q=system/ajax',array(),array(),'',$post_field);
				
				
			$this->verbose('Request to: ' . $this->getUrl() .	'<hr />' . $this->content);


			//Check if any error thrown
			$isError = $this->xpath('//div[@class="messages error"]//ul/li');
			$error = '';
			debug("ERROR STRINGS ");

			if(sizeOf($isError) > 0){
				$error = (string) $isError[0];
			}
			$this->assertResponse(200,'Form Repainted successfully');
			//$txt = 'Details saved successfully..';
			//$this->assertText(t($txt),'Details saved successfully.','catalog_admin');
			$this->assertNoText(t($error),'Error - '.$error,'catalog_admin');
			$webError = "Website encountered an unexpected error";
			$this->assertNoText(t($webError),'Web errors not found','catalog_admin');
		}
	}

}

class AdministrationSetupCreateDepartmentAll extends AdministrationSetupCreateBase
{
	public static function getInfo() {
		return array(
				'name' => 'Administration - Setup - Create - Department - All Tests',
				'description' => 'Module : exp_sp_administration_people',
				'group' => '1204 - Administration - People - Setup - Create',
		);
	}
	
	public function testSetupCreateDepartmentAll() {
		$this->manageAdminSetup('basic', 'department');
		debug('testSetupCreateDepartmentAll called');
		$this->createSetupTestCase('all', 'department');
	}
}

class AdministrationSetupCreateDepartmentCase1 extends AdministrationSetupCreateBase
{
	public static function getInfo() {
		return array(
				'name' => 'Administration - Setup - Create - Department - Case 1',
				'description' => 'Module : exp_sp_administration_people',
				'group' => '1204 - Administration - People - Setup - Create',
		);
	}

	public function testSetupCreateDepartmentCase1() {
		$this->manageAdminSetup('basic', 'department');
		debug('testSetupCreateDepartmentCase1 called');
		$this->createSetupTestCase('st_case1', 'department');
	}
}

class AdministrationSetupCreateDepartmentCase2 extends AdministrationSetupCreateBase
{
	public static function getInfo() {
		return array(
				'name' => 'Administration - Setup - Create - Department - Case 2',
				'description' => 'Module : exp_sp_administration_people',
				'group' => '1204 - Administration - People - Setup - Create',
		);
	}

	public function testSetupCreateDepartmentCase2() {
		$this->manageAdminSetup('basic', 'department');
		debug('testSetupCreateDepartmentCase2 called');
		$this->createSetupTestCase('st_case2', 'department');
	}
}

class AdministrationSetupCreateEmploymentTypeAll extends AdministrationSetupCreateBase
{
	public static function getInfo() {
		return array(
				'name' => 'Administration - Setup - Create - EmploymentType - All Tests',
				'description' => 'Module : exp_sp_administration_people',
				'group' => '1204 - Administration - People - Setup - Create',
		);
	}

	public function testSetupCreateEmploymentTypeAll() {
		$this->manageAdminSetup('basic', 'employment-type');
		debug('testSetupCreateEmploymentTypeAll called');
		$this->createSetupTestCase('all', 'employment-type');
	}
}

class AdministrationSetupCreateEmploymentTypeCase1 extends AdministrationSetupCreateBase
{
	public static function getInfo() {
		return array(
				'name' => 'Administration - Setup - Create - EmploymentType - Case 1',
				'description' => 'Module : exp_sp_administration_people',
				'group' => '1204 - Administration - People - Setup - Create',
		);
	}

	public function testSetupCreateEmploymentTypeCase1() {
		$this->manageAdminSetup('basic', 'employment-type');
		debug('testSetupCreateEmploymentTypeCase1 called');
		$this->createSetupTestCase('st_case1', 'employment-type');
	}
}

class AdministrationSetupCreateEmploymentTypeCase2 extends AdministrationSetupCreateBase
{
	public static function getInfo() {
		return array(
				'name' => 'Administration - Setup - Create - EmploymentType - Case 2',
				'description' => 'Module : exp_sp_administration_people',
				'group' => '1204 - Administration - People - Setup - Create',
		);
	}

	public function testSetupCreateEmploymentTypeCase2() {
		$this->manageAdminSetup('basic', 'employment-type');
		debug('testSetupCreateEmploymentTypeCase2 called');
		$this->createSetupTestCase('st_case2', 'employment-type');
	}
}


class AdministrationSetupCreateJobRoleAll extends AdministrationSetupCreateBase
{
	public static function getInfo() {
		return array(
				'name' => 'Administration - Setup - Create - JobRole - All Tests',
				'description' => 'Module : exp_sp_administration_people',
				'group' => '1204 - Administration - People - Setup - Create',
		);
	}

	public function testSetupCreateJobRoleAll() {
		$this->manageAdminSetup('basic', 'job-role');
		debug('testSetupCreateJobRoleAll called');
		$this->createSetupTestCase('all', 'job-role');
	}
}

class AdministrationSetupCreateJobRoleCase1 extends AdministrationSetupCreateBase
{
	public static function getInfo() {
		return array(
				'name' => 'Administration - Setup - Create - JobRole - Case 1',
				'description' => 'Module : exp_sp_administration_people',
				'group' => '1204 - Administration - People - Setup - Create',
		);
	}

	public function testSetupCreateJobRoleCase1() {
		$this->manageAdminSetup('basic', 'job-role');
		debug('testSetupCreateJobRoleCase1 called');
		$this->createSetupTestCase('st_case1', 'job-role');
	}
}

class AdministrationSetupCreateJobRoleCase2 extends AdministrationSetupCreateBase
{
	public static function getInfo() {
		return array(
				'name' => 'Administration - Setup - Create - JobRole - Case 2',
				'description' => 'Module : exp_sp_administration_people',
				'group' => '1204 - Administration - People - Setup - Create',
		);
	}

	public function testSetupCreateJobRoleCase2() {
		$this->manageAdminSetup('basic', 'job-role');
		debug('testSetupCreateJobRoleCase2 called');
		$this->createSetupTestCase('st_case2', 'job-role');
	}
}

class AdministrationSetupCreateJobTitleAll extends AdministrationSetupCreateBase
{
	public static function getInfo() {
		return array(
				'name' => 'Administration - Setup - Create - JobTitle - All Tests',
				'description' => 'Module : exp_sp_administration_people',
				'group' => '1204 - Administration - People - Setup - Create',
		);
	}

	public function testSetupCreateJobTitleAll() {
		$this->manageAdminSetup('basic', 'job-title');
		debug('testSetupCreateJobTitleAll called');
		$this->createSetupTestCase('all', 'job-title');
	}
}

class AdministrationSetupCreateJobTitleCase1 extends AdministrationSetupCreateBase
{
	public static function getInfo() {
		return array(
				'name' => 'Administration - Setup - Create - JobTitle - Case 1',
				'description' => 'Module : exp_sp_administration_people',
				'group' => '1204 - Administration - People - Setup - Create',
		);
	}

	public function testSetupCreateJobTitleCase1() {
		$this->manageAdminSetup('basic', 'job-title');
		debug('testSetupCreateJobTitleCase1 called');
		$this->createSetupTestCase('st_case1', 'job-title');
	}
}

class AdministrationSetupCreateJobTitleCase2 extends AdministrationSetupCreateBase
{
	public static function getInfo() {
		return array(
				'name' => 'Administration - Setup - Create - JobTitle - Case 2',
				'description' => 'Module : exp_sp_administration_people',
				'group' => '1204 - Administration - People - Setup - Create',
		);
	}

	public function testSetupCreateJobTitleCase2() {
		$this->manageAdminSetup('basic', 'job-title');
		debug('testSetupCreateJobTitleCase2 called');
		$this->createSetupTestCase('st_case2', 'job-title');
	}
}


class AdministrationSetupCreateUserTypeAll extends AdministrationSetupCreateBase
{
	public static function getInfo() {
		return array(
				'name' => 'Administration - Setup - Create - UserType - All Tests',
				'description' => 'Module : exp_sp_administration_people',
				'group' => '1204 - Administration - People - Setup - Create',
		);
	}

	public function testSetupCreateUserTypeAll() {
		$this->manageAdminSetup('basic', 'user-type');
		debug('testSetupCreateUserTypeAll called');
		$this->createSetupTestCase('all', 'user-type');
	}
}

class AdministrationSetupCreateUserTypeCase1 extends AdministrationSetupCreateBase
{
	public static function getInfo() {
		return array(
				'name' => 'Administration - Setup - Create - UserType - Case 1',
				'description' => 'Module : exp_sp_administration_people',
				'group' => '1204 - Administration - People - Setup - Create',
		);
	}

	public function testSetupCreateUserTypeCase1() {
		$this->manageAdminSetup('basic', 'user-type');
		debug('testSetupCreateUserTypeCase1 called');
		$this->createSetupTestCase('st_case1', 'user-type');
	}
}

class AdministrationSetupCreateUserTypeCase2 extends AdministrationSetupCreateBase
{
	public static function getInfo() {
		return array(
				'name' => 'Administration - Setup - Create - UserType - Case 2',
				'description' => 'Module : exp_sp_administration_people',
				'group' => '1204 - Administration - People - Setup - Create',
		);
	}

	public function testSetupCreateUserTypeCase2() {
		$this->manageAdminSetup('basic', 'user-type');
		debug('testSetupCreateUserTypeCase2 called');
		$this->createSetupTestCase('st_case2', 'user-type');
	}
}




?>