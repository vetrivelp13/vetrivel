<?php
/**
 * Implementation of hook_block_info().
 */
function exp_sp_my_activity_block_info() {
	try{
  $blocks = array();
  $blocks['my_activity'] = array(
    'info' => t('My Activity'),
  	'cache' => DRUPAL_CACHE_PER_ROLE,
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages' => 'learning/my-profile
     learning/my-profile/skills
     learning/ajax/user/*'
  );

  return $blocks;
  }catch (Exception $ex) {
  	watchdog_exception('exp_sp_my_activity_block_info', $ex);
  	expertusErrorThrow($ex);
  }
}

/**
 * Implementation of hook_block_view().
 */
function exp_sp_my_activity_block_view($delta = ''){
  try{
  $block = array();
  switch ($delta) {
    case 'my_activity':
    if(arg(3)=='user') {
          $block['subject'] = t('LBL856');
          includeJqGridJsCss();
          $js_module_optional = array('type' => 'file', 'group' => JS_DEFAULT);
          drupal_add_js(drupal_get_path('module', 'exp_sp_my_activity') .'/exp_sp_my_activity.js',$js_module_optional);
          drupal_add_js(drupal_get_path('module', 'exp_sp_core').'/js/qtippopup.js',$js_module_optional);
          $block['content'] = drupal_get_form('exp_sp_my_activity_form');
        }else{
          $block['subject'] = t('LBL849');
          includeJqGridJsCss();
          $js_module_optional = array('type' => 'file', 'group' => JS_DEFAULT);
          drupal_add_js(drupal_get_path('module', 'exp_sp_my_activity') .'/exp_sp_my_activity.js',$js_module_optional);
          drupal_add_js(drupal_get_path('module', 'exp_sp_core').'/js/qtippopup.js',$js_module_optional);
          $block['content'] = drupal_get_form('exp_sp_my_activity_form');
        }
        break;
  }
  return $block;
  }catch (Exception $ex) {
    watchdog_exception('exp_sp_my_activity_block_view', $ex);
    expertusErrorThrow($ex);
  } 
}

/**
 * Implementation of hook_menu().
 */
function exp_sp_my_activity_menu() {
  try{
    $items = array();
    /*$items['learning/my-profile/activity'] = array(
      'title' => 'My Activity',
      'page callback' => 'empty_value',
      'access arguments' => array('expertus learner'),
      'access callback' => array('user_is_logged_in'),
      'type' => MENU_CALLBACK
    );*/
  		
   $items['learning/my-profile/activity/%'] = array (
    'title' => 'Fetch the list of activity details',
  	'page callback' => 'getActivityResultForGrid',
    'access callback' => array('user_is_logged_in'),
    'page arguments' => array(3),  
  	'type' => MENU_CALLBACK,
  	'access arguments' => array('expertus learner'),
  	'file' => 'exp_sp_my_activity.inc'
  );

  $items['learning/my-profile/activity/remove/%/%/%/%'] = array (
    'title' => 'Remove activity details',
  	'page callback' => 'delete_activity_process',
    'page arguments' => array(4,5,6,7),  
    'access callback' => array('user_is_logged_in'),
  	'type' => MENU_CALLBACK,
  	'access arguments' => array('expertus learner'),
  	'file' => 'exp_sp_my_activity.inc'
  ); 
   return $items;
   }catch (Exception $ex) {
    watchdog_exception('exp_sp_my_activity_menu', $ex);
    expertusErrorThrow($ex);
  } 
}
/**
 * Implements hook_theme().
 */
function exp_sp_my_activity_theme() {
	try {
  return array(
    'my_activity' => array(
      'variables' => array('results' => array()),
      'template' => 'exp_sp_my_activity_details-view',
    ),
    'exp_sp_my_activity_list' => array(
      'variables' => array('results' => array()),
      'template' => 'exp_sp_my_activity_list-view',
    ),
  );
  }catch (Exception $ex) {
  	watchdog_exception('exp_sp_my_activity_theme', $ex);
  	expertusErrorThrow($ex);
  }
}
function exp_sp_my_activity_form ($form, &$form_state){
try{
  global $user;
  global $theme_key;
  drupal_add_js(drupal_get_path('module', 'exp_sp_my_activity').'/exp_sp_my_activity.js', array('type' => 'file', 'group' => JS_DEFAULT));
  drupal_add_js(drupal_get_path('module', 'exp_sp_core').'/js/qtippopup.js',$js_module_optional);
  
   if($theme_key == 'expertusoneV2') {
  	//NEWUI THEME STYLE SHEET
  drupal_add_css(drupal_get_path('module', 'exp_sp_my_activity') .'/exp_sp_my_activity_v2.css', array('type' => 'file', 'group' => CSS_DEFAULT));
   }else
   {
   	 drupal_add_css(drupal_get_path('module', 'exp_sp_my_activity') .'/exp_sp_my_activity.css', array('type' => 'file', 'group' => CSS_DEFAULT));
   }
  
  require_once('exp_sp_my_activity.inc');
  $form = array();
  //$loggedUserId = getSltpersonUserId();
  $form['box'] = array(
    	    '#type' => 'markup',
    	    '#markup' => theme('my_activity', array('results' => '')),
      );
      
  return $form;
  }catch (Exception $ex) {
    watchdog_exception('exp_sp_my_activity_form', $ex);
    expertusErrorThrow($ex);
  }
  
  
}

/*
 * In the datagrid get total completed orders
 */
function getActivityResultForGrid($getUserId){
  try{
    global $user;
    $page         = $_GET['page']; 
    $limit        = $_GET['rows'];
    if($getUserId =='emptyvalue'){
      $userid       = getSltpersonUserId();
     }else{
      $userid     = $getUserId;
    }
    $drupalUserId = getDrupalIdOfUser($userid);
    $count      = getMyProfileActivityDetails($userid,TRUE);
    /* Paging Related */
    $start = $limit * $page - $limit;
    $listquery  = getMyProfileActivityDetails($userid,false);

    $listquery->range($start, $limit);
    // Execute query
    $queryResult = $listquery->execute()->fetchAll();
    if( $count >0 ){ 
      $total_pages = ceil($count/$limit); 
    }else{ 
      $total_pages = 0; 
    }	  
    if($page > $total_pages) 
    	$page = $total_pages;
    if($start < 0) {
    	$start = 0;
    }
  
    $srch_result_response_activity->total   = $total_pages;
    $srch_result_response_activity->records = $count;
    $srch_result_response_activity->page    = $page;
    $_SESSION['jq_count'] = array();
    $i=0;
    $k=1;
    $account    = user_load($drupalUserId,TRUE);
    $profile_image_path='';
	 if(!empty($account->picture)){
		$filepath  = $account->picture->uri;
		$profile_image_path = $filepath;
	  }
    foreach ($queryResult as $rec_search_results){
      $rec_search_results->profile_image_path =$profile_image_path;
      $rec_search_results->person_id   = $userid;
      $rec_search_results->getuserid   = $getUserId;
      $srch_result_response_activity->rows[$i]['id']   = $rec_search_results->order_id;
     $srch_result_response_activity->rows[$i]['cell'] = array(
           	'details'     => theme('exp_sp_my_activity_list', array('results' => $rec_search_results)),
     		'actions'	  => ($rec_search_results->getuserid == 'emptyvalue') ? ('<div class= "myactivity-actions"><a class="activity-remove-link vtip" title="'.t('LBL286').'" onclick="$(\'#wizarad-myprofile-activity\').data(\'myprofileactivity\').callDeleteProcess('.$rec_search_results->entity_id.',\''.$rec_search_results->entity_type.'\',\''.$rec_search_results->functionality_name.'\','. $rec_search_results->activityid.')"></a></div>') : '',
     );
      /*$srch_result_response_activity->rows[$i]['cell'] = array(
      	 'entityid' 	       => $rec_search_results->entity_id, //$rec_search_results->order_id,
      	 'Fucntionname'        => $rec_search_results->order_id,
      	 'newvalue' 	       => $rec_search_results->functionality_name,
         'oldvalue' 	       =>  $rec_search_results->old_value,
         'module_name'         => $rec_search_results->module_name,
      );*/
      $i++; $k++; 
    }
    
    print drupal_json_encode($srch_result_response_activity);
  }catch (Exception $ex) {
    watchdog_exception('getActivityResultForGrid', $ex);
    expertusErrorThrow($ex);  
  }
}
?>