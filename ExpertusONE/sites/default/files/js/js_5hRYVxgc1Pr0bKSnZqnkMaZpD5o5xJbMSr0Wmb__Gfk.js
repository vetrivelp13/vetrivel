
/*!
 * jQuery JavaScript Library v1.4.4
 * http://jquery.com/
 *
 * Copyright 2010, John Resig
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * Includes Sizzle.js
 * http://sizzlejs.com/
 * Copyright 2010, The Dojo Foundation
 * Released under the MIT, BSD, and GPL Licenses.
 *
 * Date: Thu Nov 11 19:04:53 2010 -0500
 */
(function(E,B){function ka(a,b,d){if(d===B&&a.nodeType===1){d=a.getAttribute("data-"+b);if(typeof d==="string"){try{d=d==="true"?true:d==="false"?false:d==="null"?null:!c.isNaN(d)?parseFloat(d):Ja.test(d)?c.parseJSON(d):d}catch(e){}c.data(a,b,d)}else d=B}return d}function U(){return false}function ca(){return true}function la(a,b,d){d[0].type=a;return c.event.handle.apply(b,d)}function Ka(a){var b,d,e,f,h,l,k,o,x,r,A,C=[];f=[];h=c.data(this,this.nodeType?"events":"__events__");if(typeof h==="function")h=
h.events;if(!(a.liveFired===this||!h||!h.live||a.button&&a.type==="click")){if(a.namespace)A=RegExp("(^|\\.)"+a.namespace.split(".").join("\\.(?:.*\\.)?")+"(\\.|$)");a.liveFired=this;var J=h.live.slice(0);for(k=0;k<J.length;k++){h=J[k];h.origType.replace(X,"")===a.type?f.push(h.selector):J.splice(k--,1)}f=c(a.target).closest(f,a.currentTarget);o=0;for(x=f.length;o<x;o++){r=f[o];for(k=0;k<J.length;k++){h=J[k];if(r.selector===h.selector&&(!A||A.test(h.namespace))){l=r.elem;e=null;if(h.preType==="mouseenter"||
h.preType==="mouseleave"){a.type=h.preType;e=c(a.relatedTarget).closest(h.selector)[0]}if(!e||e!==l)C.push({elem:l,handleObj:h,level:r.level})}}}o=0;for(x=C.length;o<x;o++){f=C[o];if(d&&f.level>d)break;a.currentTarget=f.elem;a.data=f.handleObj.data;a.handleObj=f.handleObj;A=f.handleObj.origHandler.apply(f.elem,arguments);if(A===false||a.isPropagationStopped()){d=f.level;if(A===false)b=false;if(a.isImmediatePropagationStopped())break}}return b}}function Y(a,b){return(a&&a!=="*"?a+".":"")+b.replace(La,
"`").replace(Ma,"&")}function ma(a,b,d){if(c.isFunction(b))return c.grep(a,function(f,h){return!!b.call(f,h,f)===d});else if(b.nodeType)return c.grep(a,function(f){return f===b===d});else if(typeof b==="string"){var e=c.grep(a,function(f){return f.nodeType===1});if(Na.test(b))return c.filter(b,e,!d);else b=c.filter(b,e)}return c.grep(a,function(f){return c.inArray(f,b)>=0===d})}function na(a,b){var d=0;b.each(function(){if(this.nodeName===(a[d]&&a[d].nodeName)){var e=c.data(a[d++]),f=c.data(this,
e);if(e=e&&e.events){delete f.handle;f.events={};for(var h in e)for(var l in e[h])c.event.add(this,h,e[h][l],e[h][l].data)}}})}function Oa(a,b){b.src?c.ajax({url:b.src,async:false,dataType:"script"}):c.globalEval(b.text||b.textContent||b.innerHTML||"");b.parentNode&&b.parentNode.removeChild(b)}function oa(a,b,d){var e=b==="width"?a.offsetWidth:a.offsetHeight;if(d==="border")return e;c.each(b==="width"?Pa:Qa,function(){d||(e-=parseFloat(c.css(a,"padding"+this))||0);if(d==="margin")e+=parseFloat(c.css(a,
"margin"+this))||0;else e-=parseFloat(c.css(a,"border"+this+"Width"))||0});return e}function da(a,b,d,e){if(c.isArray(b)&&b.length)c.each(b,function(f,h){d||Ra.test(a)?e(a,h):da(a+"["+(typeof h==="object"||c.isArray(h)?f:"")+"]",h,d,e)});else if(!d&&b!=null&&typeof b==="object")c.isEmptyObject(b)?e(a,""):c.each(b,function(f,h){da(a+"["+f+"]",h,d,e)});else e(a,b)}function S(a,b){var d={};c.each(pa.concat.apply([],pa.slice(0,b)),function(){d[this]=a});return d}function qa(a){if(!ea[a]){var b=c("<"+
a+">").appendTo("body"),d=b.css("display");b.remove();if(d==="none"||d==="")d="block";ea[a]=d}return ea[a]}function fa(a){return c.isWindow(a)?a:a.nodeType===9?a.defaultView||a.parentWindow:false}var t=E.document,c=function(){function a(){if(!b.isReady){try{t.documentElement.doScroll("left")}catch(j){setTimeout(a,1);return}b.ready()}}var b=function(j,s){return new b.fn.init(j,s)},d=E.jQuery,e=E.$,f,h=/^(?:[^<]*(<[\w\W]+>)[^>]*$|#([\w\-]+)$)/,l=/\S/,k=/^\s+/,o=/\s+$/,x=/\W/,r=/\d/,A=/^<(\w+)\s*\/?>(?:<\/\1>)?$/,
C=/^[\],:{}\s]*$/,J=/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,w=/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,I=/(?:^|:|,)(?:\s*\[)+/g,L=/(webkit)[ \/]([\w.]+)/,g=/(opera)(?:.*version)?[ \/]([\w.]+)/,i=/(msie) ([\w.]+)/,n=/(mozilla)(?:.*? rv:([\w.]+))?/,m=navigator.userAgent,p=false,q=[],u,y=Object.prototype.toString,F=Object.prototype.hasOwnProperty,M=Array.prototype.push,N=Array.prototype.slice,O=String.prototype.trim,D=Array.prototype.indexOf,R={};b.fn=b.prototype={init:function(j,
s){var v,z,H;if(!j)return this;if(j.nodeType){this.context=this[0]=j;this.length=1;return this}if(j==="body"&&!s&&t.body){this.context=t;this[0]=t.body;this.selector="body";this.length=1;return this}if(typeof j==="string")if((v=h.exec(j))&&(v[1]||!s))if(v[1]){H=s?s.ownerDocument||s:t;if(z=A.exec(j))if(b.isPlainObject(s)){j=[t.createElement(z[1])];b.fn.attr.call(j,s,true)}else j=[H.createElement(z[1])];else{z=b.buildFragment([v[1]],[H]);j=(z.cacheable?z.fragment.cloneNode(true):z.fragment).childNodes}return b.merge(this,
j)}else{if((z=t.getElementById(v[2]))&&z.parentNode){if(z.id!==v[2])return f.find(j);this.length=1;this[0]=z}this.context=t;this.selector=j;return this}else if(!s&&!x.test(j)){this.selector=j;this.context=t;j=t.getElementsByTagName(j);return b.merge(this,j)}else return!s||s.jquery?(s||f).find(j):b(s).find(j);else if(b.isFunction(j))return f.ready(j);if(j.selector!==B){this.selector=j.selector;this.context=j.context}return b.makeArray(j,this)},selector:"",jquery:"1.4.4",length:0,size:function(){return this.length},
toArray:function(){return N.call(this,0)},get:function(j){return j==null?this.toArray():j<0?this.slice(j)[0]:this[j]},pushStack:function(j,s,v){var z=b();b.isArray(j)?M.apply(z,j):b.merge(z,j);z.prevObject=this;z.context=this.context;if(s==="find")z.selector=this.selector+(this.selector?" ":"")+v;else if(s)z.selector=this.selector+"."+s+"("+v+")";return z},each:function(j,s){return b.each(this,j,s)},ready:function(j){b.bindReady();if(b.isReady)j.call(t,b);else q&&q.push(j);return this},eq:function(j){return j===
-1?this.slice(j):this.slice(j,+j+1)},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return this.pushStack(N.apply(this,arguments),"slice",N.call(arguments).join(","))},map:function(j){return this.pushStack(b.map(this,function(s,v){return j.call(s,v,s)}))},end:function(){return this.prevObject||b(null)},push:M,sort:[].sort,splice:[].splice};b.fn.init.prototype=b.fn;b.extend=b.fn.extend=function(){var j,s,v,z,H,G=arguments[0]||{},K=1,Q=arguments.length,ga=false;
if(typeof G==="boolean"){ga=G;G=arguments[1]||{};K=2}if(typeof G!=="object"&&!b.isFunction(G))G={};if(Q===K){G=this;--K}for(;K<Q;K++)if((j=arguments[K])!=null)for(s in j){v=G[s];z=j[s];if(G!==z)if(ga&&z&&(b.isPlainObject(z)||(H=b.isArray(z)))){if(H){H=false;v=v&&b.isArray(v)?v:[]}else v=v&&b.isPlainObject(v)?v:{};G[s]=b.extend(ga,v,z)}else if(z!==B)G[s]=z}return G};b.extend({noConflict:function(j){E.$=e;if(j)E.jQuery=d;return b},isReady:false,readyWait:1,ready:function(j){j===true&&b.readyWait--;
if(!b.readyWait||j!==true&&!b.isReady){if(!t.body)return setTimeout(b.ready,1);b.isReady=true;if(!(j!==true&&--b.readyWait>0))if(q){var s=0,v=q;for(q=null;j=v[s++];)j.call(t,b);b.fn.trigger&&b(t).trigger("ready").unbind("ready")}}},bindReady:function(){if(!p){p=true;if(t.readyState==="complete")return setTimeout(b.ready,1);if(t.addEventListener){t.addEventListener("DOMContentLoaded",u,false);E.addEventListener("load",b.ready,false)}else if(t.attachEvent){t.attachEvent("onreadystatechange",u);E.attachEvent("onload",
b.ready);var j=false;try{j=E.frameElement==null}catch(s){}t.documentElement.doScroll&&j&&a()}}},isFunction:function(j){return b.type(j)==="function"},isArray:Array.isArray||function(j){return b.type(j)==="array"},isWindow:function(j){return j&&typeof j==="object"&&"setInterval"in j},isNaN:function(j){return j==null||!r.test(j)||isNaN(j)},type:function(j){return j==null?String(j):R[y.call(j)]||"object"},isPlainObject:function(j){if(!j||b.type(j)!=="object"||j.nodeType||b.isWindow(j))return false;if(j.constructor&&
!F.call(j,"constructor")&&!F.call(j.constructor.prototype,"isPrototypeOf"))return false;for(var s in j);return s===B||F.call(j,s)},isEmptyObject:function(j){for(var s in j)return false;return true},error:function(j){throw j;},parseJSON:function(j){if(typeof j!=="string"||!j)return null;j=b.trim(j);if(C.test(j.replace(J,"@").replace(w,"]").replace(I,"")))return E.JSON&&E.JSON.parse?E.JSON.parse(j):(new Function("return "+j))();else b.error("Invalid JSON: "+j)},noop:function(){},globalEval:function(j){if(j&&
l.test(j)){var s=t.getElementsByTagName("head")[0]||t.documentElement,v=t.createElement("script");v.type="text/javascript";if(b.support.scriptEval)v.appendChild(t.createTextNode(j));else v.text=j;s.insertBefore(v,s.firstChild);s.removeChild(v)}},nodeName:function(j,s){return j.nodeName&&j.nodeName.toUpperCase()===s.toUpperCase()},each:function(j,s,v){var z,H=0,G=j.length,K=G===B||b.isFunction(j);if(v)if(K)for(z in j){if(s.apply(j[z],v)===false)break}else for(;H<G;){if(s.apply(j[H++],v)===false)break}else if(K)for(z in j){if(s.call(j[z],
z,j[z])===false)break}else for(v=j[0];H<G&&s.call(v,H,v)!==false;v=j[++H]);return j},trim:O?function(j){return j==null?"":O.call(j)}:function(j){return j==null?"":j.toString().replace(k,"").replace(o,"")},makeArray:function(j,s){var v=s||[];if(j!=null){var z=b.type(j);j.length==null||z==="string"||z==="function"||z==="regexp"||b.isWindow(j)?M.call(v,j):b.merge(v,j)}return v},inArray:function(j,s){if(s.indexOf)return s.indexOf(j);for(var v=0,z=s.length;v<z;v++)if(s[v]===j)return v;return-1},merge:function(j,
s){var v=j.length,z=0;if(typeof s.length==="number")for(var H=s.length;z<H;z++)j[v++]=s[z];else for(;s[z]!==B;)j[v++]=s[z++];j.length=v;return j},grep:function(j,s,v){var z=[],H;v=!!v;for(var G=0,K=j.length;G<K;G++){H=!!s(j[G],G);v!==H&&z.push(j[G])}return z},map:function(j,s,v){for(var z=[],H,G=0,K=j.length;G<K;G++){H=s(j[G],G,v);if(H!=null)z[z.length]=H}return z.concat.apply([],z)},guid:1,proxy:function(j,s,v){if(arguments.length===2)if(typeof s==="string"){v=j;j=v[s];s=B}else if(s&&!b.isFunction(s)){v=
s;s=B}if(!s&&j)s=function(){return j.apply(v||this,arguments)};if(j)s.guid=j.guid=j.guid||s.guid||b.guid++;return s},access:function(j,s,v,z,H,G){var K=j.length;if(typeof s==="object"){for(var Q in s)b.access(j,Q,s[Q],z,H,v);return j}if(v!==B){z=!G&&z&&b.isFunction(v);for(Q=0;Q<K;Q++)H(j[Q],s,z?v.call(j[Q],Q,H(j[Q],s)):v,G);return j}return K?H(j[0],s):B},now:function(){return(new Date).getTime()},uaMatch:function(j){j=j.toLowerCase();j=L.exec(j)||g.exec(j)||i.exec(j)||j.indexOf("compatible")<0&&n.exec(j)||
[];return{browser:j[1]||"",version:j[2]||"0"}},browser:{}});b.each("Boolean Number String Function Array Date RegExp Object".split(" "),function(j,s){R["[object "+s+"]"]=s.toLowerCase()});m=b.uaMatch(m);if(m.browser){b.browser[m.browser]=true;b.browser.version=m.version}if(b.browser.webkit)b.browser.safari=true;if(D)b.inArray=function(j,s){return D.call(s,j)};if(!/\s/.test("\u00a0")){k=/^[\s\xA0]+/;o=/[\s\xA0]+$/}f=b(t);if(t.addEventListener)u=function(){t.removeEventListener("DOMContentLoaded",u,
false);b.ready()};else if(t.attachEvent)u=function(){if(t.readyState==="complete"){t.detachEvent("onreadystatechange",u);b.ready()}};return E.jQuery=E.$=b}();(function(){c.support={};var a=t.documentElement,b=t.createElement("script"),d=t.createElement("div"),e="script"+c.now();d.style.display="none";d.innerHTML="   <link/><table></table><a href='/a' style='color:red;float:left;opacity:.55;'>a</a><input type='checkbox'/>";var f=d.getElementsByTagName("*"),h=d.getElementsByTagName("a")[0],l=t.createElement("select"),
k=l.appendChild(t.createElement("option"));if(!(!f||!f.length||!h)){c.support={leadingWhitespace:d.firstChild.nodeType===3,tbody:!d.getElementsByTagName("tbody").length,htmlSerialize:!!d.getElementsByTagName("link").length,style:/red/.test(h.getAttribute("style")),hrefNormalized:h.getAttribute("href")==="/a",opacity:/^0.55$/.test(h.style.opacity),cssFloat:!!h.style.cssFloat,checkOn:d.getElementsByTagName("input")[0].value==="on",optSelected:k.selected,deleteExpando:true,optDisabled:false,checkClone:false,
scriptEval:false,noCloneEvent:true,boxModel:null,inlineBlockNeedsLayout:false,shrinkWrapBlocks:false,reliableHiddenOffsets:true};l.disabled=true;c.support.optDisabled=!k.disabled;b.type="text/javascript";try{b.appendChild(t.createTextNode("window."+e+"=1;"))}catch(o){}a.insertBefore(b,a.firstChild);if(E[e]){c.support.scriptEval=true;delete E[e]}try{delete b.test}catch(x){c.support.deleteExpando=false}a.removeChild(b);if(d.attachEvent&&d.fireEvent){d.attachEvent("onclick",function r(){c.support.noCloneEvent=
false;d.detachEvent("onclick",r)});d.cloneNode(true).fireEvent("onclick")}d=t.createElement("div");d.innerHTML="<input type='radio' name='radiotest' checked='checked'/>";a=t.createDocumentFragment();a.appendChild(d.firstChild);c.support.checkClone=a.cloneNode(true).cloneNode(true).lastChild.checked;c(function(){var r=t.createElement("div");r.style.width=r.style.paddingLeft="1px";t.body.appendChild(r);c.boxModel=c.support.boxModel=r.offsetWidth===2;if("zoom"in r.style){r.style.display="inline";r.style.zoom=
1;c.support.inlineBlockNeedsLayout=r.offsetWidth===2;r.style.display="";r.innerHTML="<div style='width:4px;'></div>";c.support.shrinkWrapBlocks=r.offsetWidth!==2}r.innerHTML="<table><tr><td style='padding:0;display:none'></td><td>t</td></tr></table>";var A=r.getElementsByTagName("td");c.support.reliableHiddenOffsets=A[0].offsetHeight===0;A[0].style.display="";A[1].style.display="none";c.support.reliableHiddenOffsets=c.support.reliableHiddenOffsets&&A[0].offsetHeight===0;r.innerHTML="";t.body.removeChild(r).style.display=
"none"});a=function(r){var A=t.createElement("div");r="on"+r;var C=r in A;if(!C){A.setAttribute(r,"return;");C=typeof A[r]==="function"}return C};c.support.submitBubbles=a("submit");c.support.changeBubbles=a("change");a=b=d=f=h=null}})();var ra={},Ja=/^(?:\{.*\}|\[.*\])$/;c.extend({cache:{},uuid:0,expando:"jQuery"+c.now(),noData:{embed:true,object:"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",applet:true},data:function(a,b,d){if(c.acceptData(a)){a=a==E?ra:a;var e=a.nodeType,f=e?a[c.expando]:null,h=
c.cache;if(!(e&&!f&&typeof b==="string"&&d===B)){if(e)f||(a[c.expando]=f=++c.uuid);else h=a;if(typeof b==="object")if(e)h[f]=c.extend(h[f],b);else c.extend(h,b);else if(e&&!h[f])h[f]={};a=e?h[f]:h;if(d!==B)a[b]=d;return typeof b==="string"?a[b]:a}}},removeData:function(a,b){if(c.acceptData(a)){a=a==E?ra:a;var d=a.nodeType,e=d?a[c.expando]:a,f=c.cache,h=d?f[e]:e;if(b){if(h){delete h[b];d&&c.isEmptyObject(h)&&c.removeData(a)}}else if(d&&c.support.deleteExpando)delete a[c.expando];else if(a.removeAttribute)a.removeAttribute(c.expando);
else if(d)delete f[e];else for(var l in a)delete a[l]}},acceptData:function(a){if(a.nodeName){var b=c.noData[a.nodeName.toLowerCase()];if(b)return!(b===true||a.getAttribute("classid")!==b)}return true}});c.fn.extend({data:function(a,b){var d=null;if(typeof a==="undefined"){if(this.length){var e=this[0].attributes,f;d=c.data(this[0]);for(var h=0,l=e.length;h<l;h++){f=e[h].name;if(f.indexOf("data-")===0){f=f.substr(5);ka(this[0],f,d[f])}}}return d}else if(typeof a==="object")return this.each(function(){c.data(this,
a)});var k=a.split(".");k[1]=k[1]?"."+k[1]:"";if(b===B){d=this.triggerHandler("getData"+k[1]+"!",[k[0]]);if(d===B&&this.length){d=c.data(this[0],a);d=ka(this[0],a,d)}return d===B&&k[1]?this.data(k[0]):d}else return this.each(function(){var o=c(this),x=[k[0],b];o.triggerHandler("setData"+k[1]+"!",x);c.data(this,a,b);o.triggerHandler("changeData"+k[1]+"!",x)})},removeData:function(a){return this.each(function(){c.removeData(this,a)})}});c.extend({queue:function(a,b,d){if(a){b=(b||"fx")+"queue";var e=
c.data(a,b);if(!d)return e||[];if(!e||c.isArray(d))e=c.data(a,b,c.makeArray(d));else e.push(d);return e}},dequeue:function(a,b){b=b||"fx";var d=c.queue(a,b),e=d.shift();if(e==="inprogress")e=d.shift();if(e){b==="fx"&&d.unshift("inprogress");e.call(a,function(){c.dequeue(a,b)})}}});c.fn.extend({queue:function(a,b){if(typeof a!=="string"){b=a;a="fx"}if(b===B)return c.queue(this[0],a);return this.each(function(){var d=c.queue(this,a,b);a==="fx"&&d[0]!=="inprogress"&&c.dequeue(this,a)})},dequeue:function(a){return this.each(function(){c.dequeue(this,
a)})},delay:function(a,b){a=c.fx?c.fx.speeds[a]||a:a;b=b||"fx";return this.queue(b,function(){var d=this;setTimeout(function(){c.dequeue(d,b)},a)})},clearQueue:function(a){return this.queue(a||"fx",[])}});var sa=/[\n\t]/g,ha=/\s+/,Sa=/\r/g,Ta=/^(?:href|src|style)$/,Ua=/^(?:button|input)$/i,Va=/^(?:button|input|object|select|textarea)$/i,Wa=/^a(?:rea)?$/i,ta=/^(?:radio|checkbox)$/i;c.props={"for":"htmlFor","class":"className",readonly:"readOnly",maxlength:"maxLength",cellspacing:"cellSpacing",rowspan:"rowSpan",
colspan:"colSpan",tabindex:"tabIndex",usemap:"useMap",frameborder:"frameBorder"};c.fn.extend({attr:function(a,b){return c.access(this,a,b,true,c.attr)},removeAttr:function(a){return this.each(function(){c.attr(this,a,"");this.nodeType===1&&this.removeAttribute(a)})},addClass:function(a){if(c.isFunction(a))return this.each(function(x){var r=c(this);r.addClass(a.call(this,x,r.attr("class")))});if(a&&typeof a==="string")for(var b=(a||"").split(ha),d=0,e=this.length;d<e;d++){var f=this[d];if(f.nodeType===
1)if(f.className){for(var h=" "+f.className+" ",l=f.className,k=0,o=b.length;k<o;k++)if(h.indexOf(" "+b[k]+" ")<0)l+=" "+b[k];f.className=c.trim(l)}else f.className=a}return this},removeClass:function(a){if(c.isFunction(a))return this.each(function(o){var x=c(this);x.removeClass(a.call(this,o,x.attr("class")))});if(a&&typeof a==="string"||a===B)for(var b=(a||"").split(ha),d=0,e=this.length;d<e;d++){var f=this[d];if(f.nodeType===1&&f.className)if(a){for(var h=(" "+f.className+" ").replace(sa," "),
l=0,k=b.length;l<k;l++)h=h.replace(" "+b[l]+" "," ");f.className=c.trim(h)}else f.className=""}return this},toggleClass:function(a,b){var d=typeof a,e=typeof b==="boolean";if(c.isFunction(a))return this.each(function(f){var h=c(this);h.toggleClass(a.call(this,f,h.attr("class"),b),b)});return this.each(function(){if(d==="string")for(var f,h=0,l=c(this),k=b,o=a.split(ha);f=o[h++];){k=e?k:!l.hasClass(f);l[k?"addClass":"removeClass"](f)}else if(d==="undefined"||d==="boolean"){this.className&&c.data(this,
"__className__",this.className);this.className=this.className||a===false?"":c.data(this,"__className__")||""}})},hasClass:function(a){a=" "+a+" ";for(var b=0,d=this.length;b<d;b++)if((" "+this[b].className+" ").replace(sa," ").indexOf(a)>-1)return true;return false},val:function(a){if(!arguments.length){var b=this[0];if(b){if(c.nodeName(b,"option")){var d=b.attributes.value;return!d||d.specified?b.value:b.text}if(c.nodeName(b,"select")){var e=b.selectedIndex;d=[];var f=b.options;b=b.type==="select-one";
if(e<0)return null;var h=b?e:0;for(e=b?e+1:f.length;h<e;h++){var l=f[h];if(l.selected&&(c.support.optDisabled?!l.disabled:l.getAttribute("disabled")===null)&&(!l.parentNode.disabled||!c.nodeName(l.parentNode,"optgroup"))){a=c(l).val();if(b)return a;d.push(a)}}return d}if(ta.test(b.type)&&!c.support.checkOn)return b.getAttribute("value")===null?"on":b.value;return(b.value||"").replace(Sa,"")}return B}var k=c.isFunction(a);return this.each(function(o){var x=c(this),r=a;if(this.nodeType===1){if(k)r=
a.call(this,o,x.val());if(r==null)r="";else if(typeof r==="number")r+="";else if(c.isArray(r))r=c.map(r,function(C){return C==null?"":C+""});if(c.isArray(r)&&ta.test(this.type))this.checked=c.inArray(x.val(),r)>=0;else if(c.nodeName(this,"select")){var A=c.makeArray(r);c("option",this).each(function(){this.selected=c.inArray(c(this).val(),A)>=0});if(!A.length)this.selectedIndex=-1}else this.value=r}})}});c.extend({attrFn:{val:true,css:true,html:true,text:true,data:true,width:true,height:true,offset:true},
attr:function(a,b,d,e){if(!a||a.nodeType===3||a.nodeType===8)return B;if(e&&b in c.attrFn)return c(a)[b](d);e=a.nodeType!==1||!c.isXMLDoc(a);var f=d!==B;b=e&&c.props[b]||b;var h=Ta.test(b);if((b in a||a[b]!==B)&&e&&!h){if(f){b==="type"&&Ua.test(a.nodeName)&&a.parentNode&&c.error("type property can't be changed");if(d===null)a.nodeType===1&&a.removeAttribute(b);else a[b]=d}if(c.nodeName(a,"form")&&a.getAttributeNode(b))return a.getAttributeNode(b).nodeValue;if(b==="tabIndex")return(b=a.getAttributeNode("tabIndex"))&&
b.specified?b.value:Va.test(a.nodeName)||Wa.test(a.nodeName)&&a.href?0:B;return a[b]}if(!c.support.style&&e&&b==="style"){if(f)a.style.cssText=""+d;return a.style.cssText}f&&a.setAttribute(b,""+d);if(!a.attributes[b]&&a.hasAttribute&&!a.hasAttribute(b))return B;a=!c.support.hrefNormalized&&e&&h?a.getAttribute(b,2):a.getAttribute(b);return a===null?B:a}});var X=/\.(.*)$/,ia=/^(?:textarea|input|select)$/i,La=/\./g,Ma=/ /g,Xa=/[^\w\s.|`]/g,Ya=function(a){return a.replace(Xa,"\\$&")},ua={focusin:0,focusout:0};
c.event={add:function(a,b,d,e){if(!(a.nodeType===3||a.nodeType===8)){if(c.isWindow(a)&&a!==E&&!a.frameElement)a=E;if(d===false)d=U;else if(!d)return;var f,h;if(d.handler){f=d;d=f.handler}if(!d.guid)d.guid=c.guid++;if(h=c.data(a)){var l=a.nodeType?"events":"__events__",k=h[l],o=h.handle;if(typeof k==="function"){o=k.handle;k=k.events}else if(!k){a.nodeType||(h[l]=h=function(){});h.events=k={}}if(!o)h.handle=o=function(){return typeof c!=="undefined"&&!c.event.triggered?c.event.handle.apply(o.elem,
arguments):B};o.elem=a;b=b.split(" ");for(var x=0,r;l=b[x++];){h=f?c.extend({},f):{handler:d,data:e};if(l.indexOf(".")>-1){r=l.split(".");l=r.shift();h.namespace=r.slice(0).sort().join(".")}else{r=[];h.namespace=""}h.type=l;if(!h.guid)h.guid=d.guid;var A=k[l],C=c.event.special[l]||{};if(!A){A=k[l]=[];if(!C.setup||C.setup.call(a,e,r,o)===false)if(a.addEventListener)a.addEventListener(l,o,false);else a.attachEvent&&a.attachEvent("on"+l,o)}if(C.add){C.add.call(a,h);if(!h.handler.guid)h.handler.guid=
d.guid}A.push(h);c.event.global[l]=true}a=null}}},global:{},remove:function(a,b,d,e){if(!(a.nodeType===3||a.nodeType===8)){if(d===false)d=U;var f,h,l=0,k,o,x,r,A,C,J=a.nodeType?"events":"__events__",w=c.data(a),I=w&&w[J];if(w&&I){if(typeof I==="function"){w=I;I=I.events}if(b&&b.type){d=b.handler;b=b.type}if(!b||typeof b==="string"&&b.charAt(0)==="."){b=b||"";for(f in I)c.event.remove(a,f+b)}else{for(b=b.split(" ");f=b[l++];){r=f;k=f.indexOf(".")<0;o=[];if(!k){o=f.split(".");f=o.shift();x=RegExp("(^|\\.)"+
c.map(o.slice(0).sort(),Ya).join("\\.(?:.*\\.)?")+"(\\.|$)")}if(A=I[f])if(d){r=c.event.special[f]||{};for(h=e||0;h<A.length;h++){C=A[h];if(d.guid===C.guid){if(k||x.test(C.namespace)){e==null&&A.splice(h--,1);r.remove&&r.remove.call(a,C)}if(e!=null)break}}if(A.length===0||e!=null&&A.length===1){if(!r.teardown||r.teardown.call(a,o)===false)c.removeEvent(a,f,w.handle);delete I[f]}}else for(h=0;h<A.length;h++){C=A[h];if(k||x.test(C.namespace)){c.event.remove(a,r,C.handler,h);A.splice(h--,1)}}}if(c.isEmptyObject(I)){if(b=
w.handle)b.elem=null;delete w.events;delete w.handle;if(typeof w==="function")c.removeData(a,J);else c.isEmptyObject(w)&&c.removeData(a)}}}}},trigger:function(a,b,d,e){var f=a.type||a;if(!e){a=typeof a==="object"?a[c.expando]?a:c.extend(c.Event(f),a):c.Event(f);if(f.indexOf("!")>=0){a.type=f=f.slice(0,-1);a.exclusive=true}if(!d){a.stopPropagation();c.event.global[f]&&c.each(c.cache,function(){this.events&&this.events[f]&&c.event.trigger(a,b,this.handle.elem)})}if(!d||d.nodeType===3||d.nodeType===
8)return B;a.result=B;a.target=d;b=c.makeArray(b);b.unshift(a)}a.currentTarget=d;(e=d.nodeType?c.data(d,"handle"):(c.data(d,"__events__")||{}).handle)&&e.apply(d,b);e=d.parentNode||d.ownerDocument;try{if(!(d&&d.nodeName&&c.noData[d.nodeName.toLowerCase()]))if(d["on"+f]&&d["on"+f].apply(d,b)===false){a.result=false;a.preventDefault()}}catch(h){}if(!a.isPropagationStopped()&&e)c.event.trigger(a,b,e,true);else if(!a.isDefaultPrevented()){var l;e=a.target;var k=f.replace(X,""),o=c.nodeName(e,"a")&&k===
"click",x=c.event.special[k]||{};if((!x._default||x._default.call(d,a)===false)&&!o&&!(e&&e.nodeName&&c.noData[e.nodeName.toLowerCase()])){try{if(e[k]){if(l=e["on"+k])e["on"+k]=null;c.event.triggered=true;e[k]()}}catch(r){}if(l)e["on"+k]=l;c.event.triggered=false}}},handle:function(a){var b,d,e,f;d=[];var h=c.makeArray(arguments);a=h[0]=c.event.fix(a||E.event);a.currentTarget=this;b=a.type.indexOf(".")<0&&!a.exclusive;if(!b){e=a.type.split(".");a.type=e.shift();d=e.slice(0).sort();e=RegExp("(^|\\.)"+
d.join("\\.(?:.*\\.)?")+"(\\.|$)")}a.namespace=a.namespace||d.join(".");f=c.data(this,this.nodeType?"events":"__events__");if(typeof f==="function")f=f.events;d=(f||{})[a.type];if(f&&d){d=d.slice(0);f=0;for(var l=d.length;f<l;f++){var k=d[f];if(b||e.test(k.namespace)){a.handler=k.handler;a.data=k.data;a.handleObj=k;k=k.handler.apply(this,h);if(k!==B){a.result=k;if(k===false){a.preventDefault();a.stopPropagation()}}if(a.isImmediatePropagationStopped())break}}}return a.result},props:"altKey attrChange attrName bubbles button cancelable charCode clientX clientY ctrlKey currentTarget data detail eventPhase fromElement handler keyCode layerX layerY metaKey newValue offsetX offsetY pageX pageY prevValue relatedNode relatedTarget screenX screenY shiftKey srcElement target toElement view wheelDelta which".split(" "),
fix:function(a){if(a[c.expando])return a;var b=a;a=c.Event(b);for(var d=this.props.length,e;d;){e=this.props[--d];a[e]=b[e]}if(!a.target)a.target=a.srcElement||t;if(a.target.nodeType===3)a.target=a.target.parentNode;if(!a.relatedTarget&&a.fromElement)a.relatedTarget=a.fromElement===a.target?a.toElement:a.fromElement;if(a.pageX==null&&a.clientX!=null){b=t.documentElement;d=t.body;a.pageX=a.clientX+(b&&b.scrollLeft||d&&d.scrollLeft||0)-(b&&b.clientLeft||d&&d.clientLeft||0);a.pageY=a.clientY+(b&&b.scrollTop||
d&&d.scrollTop||0)-(b&&b.clientTop||d&&d.clientTop||0)}if(a.which==null&&(a.charCode!=null||a.keyCode!=null))a.which=a.charCode!=null?a.charCode:a.keyCode;if(!a.metaKey&&a.ctrlKey)a.metaKey=a.ctrlKey;if(!a.which&&a.button!==B)a.which=a.button&1?1:a.button&2?3:a.button&4?2:0;return a},guid:1E8,proxy:c.proxy,special:{ready:{setup:c.bindReady,teardown:c.noop},live:{add:function(a){c.event.add(this,Y(a.origType,a.selector),c.extend({},a,{handler:Ka,guid:a.handler.guid}))},remove:function(a){c.event.remove(this,
Y(a.origType,a.selector),a)}},beforeunload:{setup:function(a,b,d){if(c.isWindow(this))this.onbeforeunload=d},teardown:function(a,b){if(this.onbeforeunload===b)this.onbeforeunload=null}}}};c.removeEvent=t.removeEventListener?function(a,b,d){a.removeEventListener&&a.removeEventListener(b,d,false)}:function(a,b,d){a.detachEvent&&a.detachEvent("on"+b,d)};c.Event=function(a){if(!this.preventDefault)return new c.Event(a);if(a&&a.type){this.originalEvent=a;this.type=a.type}else this.type=a;this.timeStamp=
c.now();this[c.expando]=true};c.Event.prototype={preventDefault:function(){this.isDefaultPrevented=ca;var a=this.originalEvent;if(a)if(a.preventDefault)a.preventDefault();else a.returnValue=false},stopPropagation:function(){this.isPropagationStopped=ca;var a=this.originalEvent;if(a){a.stopPropagation&&a.stopPropagation();a.cancelBubble=true}},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=ca;this.stopPropagation()},isDefaultPrevented:U,isPropagationStopped:U,isImmediatePropagationStopped:U};
var va=function(a){var b=a.relatedTarget;try{for(;b&&b!==this;)b=b.parentNode;if(b!==this){a.type=a.data;c.event.handle.apply(this,arguments)}}catch(d){}},wa=function(a){a.type=a.data;c.event.handle.apply(this,arguments)};c.each({mouseenter:"mouseover",mouseleave:"mouseout"},function(a,b){c.event.special[a]={setup:function(d){c.event.add(this,b,d&&d.selector?wa:va,a)},teardown:function(d){c.event.remove(this,b,d&&d.selector?wa:va)}}});if(!c.support.submitBubbles)c.event.special.submit={setup:function(){if(this.nodeName.toLowerCase()!==
"form"){c.event.add(this,"click.specialSubmit",function(a){var b=a.target,d=b.type;if((d==="submit"||d==="image")&&c(b).closest("form").length){a.liveFired=B;return la("submit",this,arguments)}});c.event.add(this,"keypress.specialSubmit",function(a){var b=a.target,d=b.type;if((d==="text"||d==="password")&&c(b).closest("form").length&&a.keyCode===13){a.liveFired=B;return la("submit",this,arguments)}})}else return false},teardown:function(){c.event.remove(this,".specialSubmit")}};if(!c.support.changeBubbles){var V,
xa=function(a){var b=a.type,d=a.value;if(b==="radio"||b==="checkbox")d=a.checked;else if(b==="select-multiple")d=a.selectedIndex>-1?c.map(a.options,function(e){return e.selected}).join("-"):"";else if(a.nodeName.toLowerCase()==="select")d=a.selectedIndex;return d},Z=function(a,b){var d=a.target,e,f;if(!(!ia.test(d.nodeName)||d.readOnly)){e=c.data(d,"_change_data");f=xa(d);if(a.type!=="focusout"||d.type!=="radio")c.data(d,"_change_data",f);if(!(e===B||f===e))if(e!=null||f){a.type="change";a.liveFired=
B;return c.event.trigger(a,b,d)}}};c.event.special.change={filters:{focusout:Z,beforedeactivate:Z,click:function(a){var b=a.target,d=b.type;if(d==="radio"||d==="checkbox"||b.nodeName.toLowerCase()==="select")return Z.call(this,a)},keydown:function(a){var b=a.target,d=b.type;if(a.keyCode===13&&b.nodeName.toLowerCase()!=="textarea"||a.keyCode===32&&(d==="checkbox"||d==="radio")||d==="select-multiple")return Z.call(this,a)},beforeactivate:function(a){a=a.target;c.data(a,"_change_data",xa(a))}},setup:function(){if(this.type===
"file")return false;for(var a in V)c.event.add(this,a+".specialChange",V[a]);return ia.test(this.nodeName)},teardown:function(){c.event.remove(this,".specialChange");return ia.test(this.nodeName)}};V=c.event.special.change.filters;V.focus=V.beforeactivate}t.addEventListener&&c.each({focus:"focusin",blur:"focusout"},function(a,b){function d(e){e=c.event.fix(e);e.type=b;return c.event.trigger(e,null,e.target)}c.event.special[b]={setup:function(){ua[b]++===0&&t.addEventListener(a,d,true)},teardown:function(){--ua[b]===
0&&t.removeEventListener(a,d,true)}}});c.each(["bind","one"],function(a,b){c.fn[b]=function(d,e,f){if(typeof d==="object"){for(var h in d)this[b](h,e,d[h],f);return this}if(c.isFunction(e)||e===false){f=e;e=B}var l=b==="one"?c.proxy(f,function(o){c(this).unbind(o,l);return f.apply(this,arguments)}):f;if(d==="unload"&&b!=="one")this.one(d,e,f);else{h=0;for(var k=this.length;h<k;h++)c.event.add(this[h],d,l,e)}return this}});c.fn.extend({unbind:function(a,b){if(typeof a==="object"&&!a.preventDefault)for(var d in a)this.unbind(d,
a[d]);else{d=0;for(var e=this.length;d<e;d++)c.event.remove(this[d],a,b)}return this},delegate:function(a,b,d,e){return this.live(b,d,e,a)},undelegate:function(a,b,d){return arguments.length===0?this.unbind("live"):this.die(b,null,d,a)},trigger:function(a,b){return this.each(function(){c.event.trigger(a,b,this)})},triggerHandler:function(a,b){if(this[0]){var d=c.Event(a);d.preventDefault();d.stopPropagation();c.event.trigger(d,b,this[0]);return d.result}},toggle:function(a){for(var b=arguments,d=
1;d<b.length;)c.proxy(a,b[d++]);return this.click(c.proxy(a,function(e){var f=(c.data(this,"lastToggle"+a.guid)||0)%d;c.data(this,"lastToggle"+a.guid,f+1);e.preventDefault();return b[f].apply(this,arguments)||false}))},hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)}});var ya={focus:"focusin",blur:"focusout",mouseenter:"mouseover",mouseleave:"mouseout"};c.each(["live","die"],function(a,b){c.fn[b]=function(d,e,f,h){var l,k=0,o,x,r=h||this.selector;h=h?this:c(this.context);if(typeof d===
"object"&&!d.preventDefault){for(l in d)h[b](l,e,d[l],r);return this}if(c.isFunction(e)){f=e;e=B}for(d=(d||"").split(" ");(l=d[k++])!=null;){o=X.exec(l);x="";if(o){x=o[0];l=l.replace(X,"")}if(l==="hover")d.push("mouseenter"+x,"mouseleave"+x);else{o=l;if(l==="focus"||l==="blur"){d.push(ya[l]+x);l+=x}else l=(ya[l]||l)+x;if(b==="live"){x=0;for(var A=h.length;x<A;x++)c.event.add(h[x],"live."+Y(l,r),{data:e,selector:r,handler:f,origType:l,origHandler:f,preType:o})}else h.unbind("live."+Y(l,r),f)}}return this}});
c.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error".split(" "),function(a,b){c.fn[b]=function(d,e){if(e==null){e=d;d=null}return arguments.length>0?this.bind(b,d,e):this.trigger(b)};if(c.attrFn)c.attrFn[b]=true});E.attachEvent&&!E.addEventListener&&c(E).bind("unload",function(){for(var a in c.cache)if(c.cache[a].handle)try{c.event.remove(c.cache[a].handle.elem)}catch(b){}});
(function(){function a(g,i,n,m,p,q){p=0;for(var u=m.length;p<u;p++){var y=m[p];if(y){var F=false;for(y=y[g];y;){if(y.sizcache===n){F=m[y.sizset];break}if(y.nodeType===1&&!q){y.sizcache=n;y.sizset=p}if(y.nodeName.toLowerCase()===i){F=y;break}y=y[g]}m[p]=F}}}function b(g,i,n,m,p,q){p=0;for(var u=m.length;p<u;p++){var y=m[p];if(y){var F=false;for(y=y[g];y;){if(y.sizcache===n){F=m[y.sizset];break}if(y.nodeType===1){if(!q){y.sizcache=n;y.sizset=p}if(typeof i!=="string"){if(y===i){F=true;break}}else if(k.filter(i,
[y]).length>0){F=y;break}}y=y[g]}m[p]=F}}}var d=/((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^\[\]]*\]|['"][^'"]*['"]|[^\[\]'"]+)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?((?:.|\r|\n)*)/g,e=0,f=Object.prototype.toString,h=false,l=true;[0,0].sort(function(){l=false;return 0});var k=function(g,i,n,m){n=n||[];var p=i=i||t;if(i.nodeType!==1&&i.nodeType!==9)return[];if(!g||typeof g!=="string")return n;var q,u,y,F,M,N=true,O=k.isXML(i),D=[],R=g;do{d.exec("");if(q=d.exec(R)){R=q[3];D.push(q[1]);if(q[2]){F=q[3];
break}}}while(q);if(D.length>1&&x.exec(g))if(D.length===2&&o.relative[D[0]])u=L(D[0]+D[1],i);else for(u=o.relative[D[0]]?[i]:k(D.shift(),i);D.length;){g=D.shift();if(o.relative[g])g+=D.shift();u=L(g,u)}else{if(!m&&D.length>1&&i.nodeType===9&&!O&&o.match.ID.test(D[0])&&!o.match.ID.test(D[D.length-1])){q=k.find(D.shift(),i,O);i=q.expr?k.filter(q.expr,q.set)[0]:q.set[0]}if(i){q=m?{expr:D.pop(),set:C(m)}:k.find(D.pop(),D.length===1&&(D[0]==="~"||D[0]==="+")&&i.parentNode?i.parentNode:i,O);u=q.expr?k.filter(q.expr,
q.set):q.set;if(D.length>0)y=C(u);else N=false;for(;D.length;){q=M=D.pop();if(o.relative[M])q=D.pop();else M="";if(q==null)q=i;o.relative[M](y,q,O)}}else y=[]}y||(y=u);y||k.error(M||g);if(f.call(y)==="[object Array]")if(N)if(i&&i.nodeType===1)for(g=0;y[g]!=null;g++){if(y[g]&&(y[g]===true||y[g].nodeType===1&&k.contains(i,y[g])))n.push(u[g])}else for(g=0;y[g]!=null;g++)y[g]&&y[g].nodeType===1&&n.push(u[g]);else n.push.apply(n,y);else C(y,n);if(F){k(F,p,n,m);k.uniqueSort(n)}return n};k.uniqueSort=function(g){if(w){h=
l;g.sort(w);if(h)for(var i=1;i<g.length;i++)g[i]===g[i-1]&&g.splice(i--,1)}return g};k.matches=function(g,i){return k(g,null,null,i)};k.matchesSelector=function(g,i){return k(i,null,null,[g]).length>0};k.find=function(g,i,n){var m;if(!g)return[];for(var p=0,q=o.order.length;p<q;p++){var u,y=o.order[p];if(u=o.leftMatch[y].exec(g)){var F=u[1];u.splice(1,1);if(F.substr(F.length-1)!=="\\"){u[1]=(u[1]||"").replace(/\\/g,"");m=o.find[y](u,i,n);if(m!=null){g=g.replace(o.match[y],"");break}}}}m||(m=i.getElementsByTagName("*"));
return{set:m,expr:g}};k.filter=function(g,i,n,m){for(var p,q,u=g,y=[],F=i,M=i&&i[0]&&k.isXML(i[0]);g&&i.length;){for(var N in o.filter)if((p=o.leftMatch[N].exec(g))!=null&&p[2]){var O,D,R=o.filter[N];D=p[1];q=false;p.splice(1,1);if(D.substr(D.length-1)!=="\\"){if(F===y)y=[];if(o.preFilter[N])if(p=o.preFilter[N](p,F,n,y,m,M)){if(p===true)continue}else q=O=true;if(p)for(var j=0;(D=F[j])!=null;j++)if(D){O=R(D,p,j,F);var s=m^!!O;if(n&&O!=null)if(s)q=true;else F[j]=false;else if(s){y.push(D);q=true}}if(O!==
B){n||(F=y);g=g.replace(o.match[N],"");if(!q)return[];break}}}if(g===u)if(q==null)k.error(g);else break;u=g}return F};k.error=function(g){throw"Syntax error, unrecognized expression: "+g;};var o=k.selectors={order:["ID","NAME","TAG"],match:{ID:/#((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,CLASS:/\.((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,NAME:/\[name=['"]*((?:[\w\u00c0-\uFFFF\-]|\\.)+)['"]*\]/,ATTR:/\[\s*((?:[\w\u00c0-\uFFFF\-]|\\.)+)\s*(?:(\S?=)\s*(['"]*)(.*?)\3|)\s*\]/,TAG:/^((?:[\w\u00c0-\uFFFF\*\-]|\\.)+)/,CHILD:/:(only|nth|last|first)-child(?:\((even|odd|[\dn+\-]*)\))?/,
POS:/:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^\-]|$)/,PSEUDO:/:((?:[\w\u00c0-\uFFFF\-]|\\.)+)(?:\((['"]?)((?:\([^\)]+\)|[^\(\)]*)+)\2\))?/},leftMatch:{},attrMap:{"class":"className","for":"htmlFor"},attrHandle:{href:function(g){return g.getAttribute("href")}},relative:{"+":function(g,i){var n=typeof i==="string",m=n&&!/\W/.test(i);n=n&&!m;if(m)i=i.toLowerCase();m=0;for(var p=g.length,q;m<p;m++)if(q=g[m]){for(;(q=q.previousSibling)&&q.nodeType!==1;);g[m]=n||q&&q.nodeName.toLowerCase()===
i?q||false:q===i}n&&k.filter(i,g,true)},">":function(g,i){var n,m=typeof i==="string",p=0,q=g.length;if(m&&!/\W/.test(i))for(i=i.toLowerCase();p<q;p++){if(n=g[p]){n=n.parentNode;g[p]=n.nodeName.toLowerCase()===i?n:false}}else{for(;p<q;p++)if(n=g[p])g[p]=m?n.parentNode:n.parentNode===i;m&&k.filter(i,g,true)}},"":function(g,i,n){var m,p=e++,q=b;if(typeof i==="string"&&!/\W/.test(i)){m=i=i.toLowerCase();q=a}q("parentNode",i,p,g,m,n)},"~":function(g,i,n){var m,p=e++,q=b;if(typeof i==="string"&&!/\W/.test(i)){m=
i=i.toLowerCase();q=a}q("previousSibling",i,p,g,m,n)}},find:{ID:function(g,i,n){if(typeof i.getElementById!=="undefined"&&!n)return(g=i.getElementById(g[1]))&&g.parentNode?[g]:[]},NAME:function(g,i){if(typeof i.getElementsByName!=="undefined"){for(var n=[],m=i.getElementsByName(g[1]),p=0,q=m.length;p<q;p++)m[p].getAttribute("name")===g[1]&&n.push(m[p]);return n.length===0?null:n}},TAG:function(g,i){return i.getElementsByTagName(g[1])}},preFilter:{CLASS:function(g,i,n,m,p,q){g=" "+g[1].replace(/\\/g,
"")+" ";if(q)return g;q=0;for(var u;(u=i[q])!=null;q++)if(u)if(p^(u.className&&(" "+u.className+" ").replace(/[\t\n]/g," ").indexOf(g)>=0))n||m.push(u);else if(n)i[q]=false;return false},ID:function(g){return g[1].replace(/\\/g,"")},TAG:function(g){return g[1].toLowerCase()},CHILD:function(g){if(g[1]==="nth"){var i=/(-?)(\d*)n((?:\+|-)?\d*)/.exec(g[2]==="even"&&"2n"||g[2]==="odd"&&"2n+1"||!/\D/.test(g[2])&&"0n+"+g[2]||g[2]);g[2]=i[1]+(i[2]||1)-0;g[3]=i[3]-0}g[0]=e++;return g},ATTR:function(g,i,n,
m,p,q){i=g[1].replace(/\\/g,"");if(!q&&o.attrMap[i])g[1]=o.attrMap[i];if(g[2]==="~=")g[4]=" "+g[4]+" ";return g},PSEUDO:function(g,i,n,m,p){if(g[1]==="not")if((d.exec(g[3])||"").length>1||/^\w/.test(g[3]))g[3]=k(g[3],null,null,i);else{g=k.filter(g[3],i,n,true^p);n||m.push.apply(m,g);return false}else if(o.match.POS.test(g[0])||o.match.CHILD.test(g[0]))return true;return g},POS:function(g){g.unshift(true);return g}},filters:{enabled:function(g){return g.disabled===false&&g.type!=="hidden"},disabled:function(g){return g.disabled===
true},checked:function(g){return g.checked===true},selected:function(g){return g.selected===true},parent:function(g){return!!g.firstChild},empty:function(g){return!g.firstChild},has:function(g,i,n){return!!k(n[3],g).length},header:function(g){return/h\d/i.test(g.nodeName)},text:function(g){return"text"===g.type},radio:function(g){return"radio"===g.type},checkbox:function(g){return"checkbox"===g.type},file:function(g){return"file"===g.type},password:function(g){return"password"===g.type},submit:function(g){return"submit"===
g.type},image:function(g){return"image"===g.type},reset:function(g){return"reset"===g.type},button:function(g){return"button"===g.type||g.nodeName.toLowerCase()==="button"},input:function(g){return/input|select|textarea|button/i.test(g.nodeName)}},setFilters:{first:function(g,i){return i===0},last:function(g,i,n,m){return i===m.length-1},even:function(g,i){return i%2===0},odd:function(g,i){return i%2===1},lt:function(g,i,n){return i<n[3]-0},gt:function(g,i,n){return i>n[3]-0},nth:function(g,i,n){return n[3]-
0===i},eq:function(g,i,n){return n[3]-0===i}},filter:{PSEUDO:function(g,i,n,m){var p=i[1],q=o.filters[p];if(q)return q(g,n,i,m);else if(p==="contains")return(g.textContent||g.innerText||k.getText([g])||"").indexOf(i[3])>=0;else if(p==="not"){i=i[3];n=0;for(m=i.length;n<m;n++)if(i[n]===g)return false;return true}else k.error("Syntax error, unrecognized expression: "+p)},CHILD:function(g,i){var n=i[1],m=g;switch(n){case "only":case "first":for(;m=m.previousSibling;)if(m.nodeType===1)return false;if(n===
"first")return true;m=g;case "last":for(;m=m.nextSibling;)if(m.nodeType===1)return false;return true;case "nth":n=i[2];var p=i[3];if(n===1&&p===0)return true;var q=i[0],u=g.parentNode;if(u&&(u.sizcache!==q||!g.nodeIndex)){var y=0;for(m=u.firstChild;m;m=m.nextSibling)if(m.nodeType===1)m.nodeIndex=++y;u.sizcache=q}m=g.nodeIndex-p;return n===0?m===0:m%n===0&&m/n>=0}},ID:function(g,i){return g.nodeType===1&&g.getAttribute("id")===i},TAG:function(g,i){return i==="*"&&g.nodeType===1||g.nodeName.toLowerCase()===
i},CLASS:function(g,i){return(" "+(g.className||g.getAttribute("class"))+" ").indexOf(i)>-1},ATTR:function(g,i){var n=i[1];n=o.attrHandle[n]?o.attrHandle[n](g):g[n]!=null?g[n]:g.getAttribute(n);var m=n+"",p=i[2],q=i[4];return n==null?p==="!=":p==="="?m===q:p==="*="?m.indexOf(q)>=0:p==="~="?(" "+m+" ").indexOf(q)>=0:!q?m&&n!==false:p==="!="?m!==q:p==="^="?m.indexOf(q)===0:p==="$="?m.substr(m.length-q.length)===q:p==="|="?m===q||m.substr(0,q.length+1)===q+"-":false},POS:function(g,i,n,m){var p=o.setFilters[i[2]];
if(p)return p(g,n,i,m)}}},x=o.match.POS,r=function(g,i){return"\\"+(i-0+1)},A;for(A in o.match){o.match[A]=RegExp(o.match[A].source+/(?![^\[]*\])(?![^\(]*\))/.source);o.leftMatch[A]=RegExp(/(^(?:.|\r|\n)*?)/.source+o.match[A].source.replace(/\\(\d+)/g,r))}var C=function(g,i){g=Array.prototype.slice.call(g,0);if(i){i.push.apply(i,g);return i}return g};try{Array.prototype.slice.call(t.documentElement.childNodes,0)}catch(J){C=function(g,i){var n=0,m=i||[];if(f.call(g)==="[object Array]")Array.prototype.push.apply(m,
g);else if(typeof g.length==="number")for(var p=g.length;n<p;n++)m.push(g[n]);else for(;g[n];n++)m.push(g[n]);return m}}var w,I;if(t.documentElement.compareDocumentPosition)w=function(g,i){if(g===i){h=true;return 0}if(!g.compareDocumentPosition||!i.compareDocumentPosition)return g.compareDocumentPosition?-1:1;return g.compareDocumentPosition(i)&4?-1:1};else{w=function(g,i){var n,m,p=[],q=[];n=g.parentNode;m=i.parentNode;var u=n;if(g===i){h=true;return 0}else if(n===m)return I(g,i);else if(n){if(!m)return 1}else return-1;
for(;u;){p.unshift(u);u=u.parentNode}for(u=m;u;){q.unshift(u);u=u.parentNode}n=p.length;m=q.length;for(u=0;u<n&&u<m;u++)if(p[u]!==q[u])return I(p[u],q[u]);return u===n?I(g,q[u],-1):I(p[u],i,1)};I=function(g,i,n){if(g===i)return n;for(g=g.nextSibling;g;){if(g===i)return-1;g=g.nextSibling}return 1}}k.getText=function(g){for(var i="",n,m=0;g[m];m++){n=g[m];if(n.nodeType===3||n.nodeType===4)i+=n.nodeValue;else if(n.nodeType!==8)i+=k.getText(n.childNodes)}return i};(function(){var g=t.createElement("div"),
i="script"+(new Date).getTime(),n=t.documentElement;g.innerHTML="<a name='"+i+"'/>";n.insertBefore(g,n.firstChild);if(t.getElementById(i)){o.find.ID=function(m,p,q){if(typeof p.getElementById!=="undefined"&&!q)return(p=p.getElementById(m[1]))?p.id===m[1]||typeof p.getAttributeNode!=="undefined"&&p.getAttributeNode("id").nodeValue===m[1]?[p]:B:[]};o.filter.ID=function(m,p){var q=typeof m.getAttributeNode!=="undefined"&&m.getAttributeNode("id");return m.nodeType===1&&q&&q.nodeValue===p}}n.removeChild(g);
n=g=null})();(function(){var g=t.createElement("div");g.appendChild(t.createComment(""));if(g.getElementsByTagName("*").length>0)o.find.TAG=function(i,n){var m=n.getElementsByTagName(i[1]);if(i[1]==="*"){for(var p=[],q=0;m[q];q++)m[q].nodeType===1&&p.push(m[q]);m=p}return m};g.innerHTML="<a href='#'></a>";if(g.firstChild&&typeof g.firstChild.getAttribute!=="undefined"&&g.firstChild.getAttribute("href")!=="#")o.attrHandle.href=function(i){return i.getAttribute("href",2)};g=null})();t.querySelectorAll&&
function(){var g=k,i=t.createElement("div");i.innerHTML="<p class='TEST'></p>";if(!(i.querySelectorAll&&i.querySelectorAll(".TEST").length===0)){k=function(m,p,q,u){p=p||t;m=m.replace(/\=\s*([^'"\]]*)\s*\]/g,"='$1']");if(!u&&!k.isXML(p))if(p.nodeType===9)try{return C(p.querySelectorAll(m),q)}catch(y){}else if(p.nodeType===1&&p.nodeName.toLowerCase()!=="object"){var F=p.getAttribute("id"),M=F||"__sizzle__";F||p.setAttribute("id",M);try{return C(p.querySelectorAll("#"+M+" "+m),q)}catch(N){}finally{F||
p.removeAttribute("id")}}return g(m,p,q,u)};for(var n in g)k[n]=g[n];i=null}}();(function(){var g=t.documentElement,i=g.matchesSelector||g.mozMatchesSelector||g.webkitMatchesSelector||g.msMatchesSelector,n=false;try{i.call(t.documentElement,"[test!='']:sizzle")}catch(m){n=true}if(i)k.matchesSelector=function(p,q){q=q.replace(/\=\s*([^'"\]]*)\s*\]/g,"='$1']");if(!k.isXML(p))try{if(n||!o.match.PSEUDO.test(q)&&!/!=/.test(q))return i.call(p,q)}catch(u){}return k(q,null,null,[p]).length>0}})();(function(){var g=
t.createElement("div");g.innerHTML="<div class='test e'></div><div class='test'></div>";if(!(!g.getElementsByClassName||g.getElementsByClassName("e").length===0)){g.lastChild.className="e";if(g.getElementsByClassName("e").length!==1){o.order.splice(1,0,"CLASS");o.find.CLASS=function(i,n,m){if(typeof n.getElementsByClassName!=="undefined"&&!m)return n.getElementsByClassName(i[1])};g=null}}})();k.contains=t.documentElement.contains?function(g,i){return g!==i&&(g.contains?g.contains(i):true)}:t.documentElement.compareDocumentPosition?
function(g,i){return!!(g.compareDocumentPosition(i)&16)}:function(){return false};k.isXML=function(g){return(g=(g?g.ownerDocument||g:0).documentElement)?g.nodeName!=="HTML":false};var L=function(g,i){for(var n,m=[],p="",q=i.nodeType?[i]:i;n=o.match.PSEUDO.exec(g);){p+=n[0];g=g.replace(o.match.PSEUDO,"")}g=o.relative[g]?g+"*":g;n=0;for(var u=q.length;n<u;n++)k(g,q[n],m);return k.filter(p,m)};c.find=k;c.expr=k.selectors;c.expr[":"]=c.expr.filters;c.unique=k.uniqueSort;c.text=k.getText;c.isXMLDoc=k.isXML;
c.contains=k.contains})();var Za=/Until$/,$a=/^(?:parents|prevUntil|prevAll)/,ab=/,/,Na=/^.[^:#\[\.,]*$/,bb=Array.prototype.slice,cb=c.expr.match.POS;c.fn.extend({find:function(a){for(var b=this.pushStack("","find",a),d=0,e=0,f=this.length;e<f;e++){d=b.length;c.find(a,this[e],b);if(e>0)for(var h=d;h<b.length;h++)for(var l=0;l<d;l++)if(b[l]===b[h]){b.splice(h--,1);break}}return b},has:function(a){var b=c(a);return this.filter(function(){for(var d=0,e=b.length;d<e;d++)if(c.contains(this,b[d]))return true})},
not:function(a){return this.pushStack(ma(this,a,false),"not",a)},filter:function(a){return this.pushStack(ma(this,a,true),"filter",a)},is:function(a){return!!a&&c.filter(a,this).length>0},closest:function(a,b){var d=[],e,f,h=this[0];if(c.isArray(a)){var l,k={},o=1;if(h&&a.length){e=0;for(f=a.length;e<f;e++){l=a[e];k[l]||(k[l]=c.expr.match.POS.test(l)?c(l,b||this.context):l)}for(;h&&h.ownerDocument&&h!==b;){for(l in k){e=k[l];if(e.jquery?e.index(h)>-1:c(h).is(e))d.push({selector:l,elem:h,level:o})}h=
h.parentNode;o++}}return d}l=cb.test(a)?c(a,b||this.context):null;e=0;for(f=this.length;e<f;e++)for(h=this[e];h;)if(l?l.index(h)>-1:c.find.matchesSelector(h,a)){d.push(h);break}else{h=h.parentNode;if(!h||!h.ownerDocument||h===b)break}d=d.length>1?c.unique(d):d;return this.pushStack(d,"closest",a)},index:function(a){if(!a||typeof a==="string")return c.inArray(this[0],a?c(a):this.parent().children());return c.inArray(a.jquery?a[0]:a,this)},add:function(a,b){var d=typeof a==="string"?c(a,b||this.context):
c.makeArray(a),e=c.merge(this.get(),d);return this.pushStack(!d[0]||!d[0].parentNode||d[0].parentNode.nodeType===11||!e[0]||!e[0].parentNode||e[0].parentNode.nodeType===11?e:c.unique(e))},andSelf:function(){return this.add(this.prevObject)}});c.each({parent:function(a){return(a=a.parentNode)&&a.nodeType!==11?a:null},parents:function(a){return c.dir(a,"parentNode")},parentsUntil:function(a,b,d){return c.dir(a,"parentNode",d)},next:function(a){return c.nth(a,2,"nextSibling")},prev:function(a){return c.nth(a,
2,"previousSibling")},nextAll:function(a){return c.dir(a,"nextSibling")},prevAll:function(a){return c.dir(a,"previousSibling")},nextUntil:function(a,b,d){return c.dir(a,"nextSibling",d)},prevUntil:function(a,b,d){return c.dir(a,"previousSibling",d)},siblings:function(a){return c.sibling(a.parentNode.firstChild,a)},children:function(a){return c.sibling(a.firstChild)},contents:function(a){return c.nodeName(a,"iframe")?a.contentDocument||a.contentWindow.document:c.makeArray(a.childNodes)}},function(a,
b){c.fn[a]=function(d,e){var f=c.map(this,b,d);Za.test(a)||(e=d);if(e&&typeof e==="string")f=c.filter(e,f);f=this.length>1?c.unique(f):f;if((this.length>1||ab.test(e))&&$a.test(a))f=f.reverse();return this.pushStack(f,a,bb.call(arguments).join(","))}});c.extend({filter:function(a,b,d){if(d)a=":not("+a+")";return b.length===1?c.find.matchesSelector(b[0],a)?[b[0]]:[]:c.find.matches(a,b)},dir:function(a,b,d){var e=[];for(a=a[b];a&&a.nodeType!==9&&(d===B||a.nodeType!==1||!c(a).is(d));){a.nodeType===1&&
e.push(a);a=a[b]}return e},nth:function(a,b,d){b=b||1;for(var e=0;a;a=a[d])if(a.nodeType===1&&++e===b)break;return a},sibling:function(a,b){for(var d=[];a;a=a.nextSibling)a.nodeType===1&&a!==b&&d.push(a);return d}});var za=/ jQuery\d+="(?:\d+|null)"/g,$=/^\s+/,Aa=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/ig,Ba=/<([\w:]+)/,db=/<tbody/i,eb=/<|&#?\w+;/,Ca=/<(?:script|object|embed|option|style)/i,Da=/checked\s*(?:[^=]|=\s*.checked.)/i,fb=/\=([^="'>\s]+\/)>/g,P={option:[1,
"<select multiple='multiple'>","</select>"],legend:[1,"<fieldset>","</fieldset>"],thead:[1,"<table>","</table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],area:[1,"<map>","</map>"],_default:[0,"",""]};P.optgroup=P.option;P.tbody=P.tfoot=P.colgroup=P.caption=P.thead;P.th=P.td;if(!c.support.htmlSerialize)P._default=[1,"div<div>","</div>"];c.fn.extend({text:function(a){if(c.isFunction(a))return this.each(function(b){var d=
c(this);d.text(a.call(this,b,d.text()))});if(typeof a!=="object"&&a!==B)return this.empty().append((this[0]&&this[0].ownerDocument||t).createTextNode(a));return c.text(this)},wrapAll:function(a){if(c.isFunction(a))return this.each(function(d){c(this).wrapAll(a.call(this,d))});if(this[0]){var b=c(a,this[0].ownerDocument).eq(0).clone(true);this[0].parentNode&&b.insertBefore(this[0]);b.map(function(){for(var d=this;d.firstChild&&d.firstChild.nodeType===1;)d=d.firstChild;return d}).append(this)}return this},
wrapInner:function(a){if(c.isFunction(a))return this.each(function(b){c(this).wrapInner(a.call(this,b))});return this.each(function(){var b=c(this),d=b.contents();d.length?d.wrapAll(a):b.append(a)})},wrap:function(a){return this.each(function(){c(this).wrapAll(a)})},unwrap:function(){return this.parent().each(function(){c.nodeName(this,"body")||c(this).replaceWith(this.childNodes)}).end()},append:function(){return this.domManip(arguments,true,function(a){this.nodeType===1&&this.appendChild(a)})},
prepend:function(){return this.domManip(arguments,true,function(a){this.nodeType===1&&this.insertBefore(a,this.firstChild)})},before:function(){if(this[0]&&this[0].parentNode)return this.domManip(arguments,false,function(b){this.parentNode.insertBefore(b,this)});else if(arguments.length){var a=c(arguments[0]);a.push.apply(a,this.toArray());return this.pushStack(a,"before",arguments)}},after:function(){if(this[0]&&this[0].parentNode)return this.domManip(arguments,false,function(b){this.parentNode.insertBefore(b,
this.nextSibling)});else if(arguments.length){var a=this.pushStack(this,"after",arguments);a.push.apply(a,c(arguments[0]).toArray());return a}},remove:function(a,b){for(var d=0,e;(e=this[d])!=null;d++)if(!a||c.filter(a,[e]).length){if(!b&&e.nodeType===1){c.cleanData(e.getElementsByTagName("*"));c.cleanData([e])}e.parentNode&&e.parentNode.removeChild(e)}return this},empty:function(){for(var a=0,b;(b=this[a])!=null;a++)for(b.nodeType===1&&c.cleanData(b.getElementsByTagName("*"));b.firstChild;)b.removeChild(b.firstChild);
return this},clone:function(a){var b=this.map(function(){if(!c.support.noCloneEvent&&!c.isXMLDoc(this)){var d=this.outerHTML,e=this.ownerDocument;if(!d){d=e.createElement("div");d.appendChild(this.cloneNode(true));d=d.innerHTML}return c.clean([d.replace(za,"").replace(fb,'="$1">').replace($,"")],e)[0]}else return this.cloneNode(true)});if(a===true){na(this,b);na(this.find("*"),b.find("*"))}return b},html:function(a){if(a===B)return this[0]&&this[0].nodeType===1?this[0].innerHTML.replace(za,""):null;
else if(typeof a==="string"&&!Ca.test(a)&&(c.support.leadingWhitespace||!$.test(a))&&!P[(Ba.exec(a)||["",""])[1].toLowerCase()]){a=a.replace(Aa,"<$1></$2>");try{for(var b=0,d=this.length;b<d;b++)if(this[b].nodeType===1){c.cleanData(this[b].getElementsByTagName("*"));this[b].innerHTML=a}}catch(e){this.empty().append(a)}}else c.isFunction(a)?this.each(function(f){var h=c(this);h.html(a.call(this,f,h.html()))}):this.empty().append(a);return this},replaceWith:function(a){if(this[0]&&this[0].parentNode){if(c.isFunction(a))return this.each(function(b){var d=
c(this),e=d.html();d.replaceWith(a.call(this,b,e))});if(typeof a!=="string")a=c(a).detach();return this.each(function(){var b=this.nextSibling,d=this.parentNode;c(this).remove();b?c(b).before(a):c(d).append(a)})}else return this.pushStack(c(c.isFunction(a)?a():a),"replaceWith",a)},detach:function(a){return this.remove(a,true)},domManip:function(a,b,d){var e,f,h,l=a[0],k=[];if(!c.support.checkClone&&arguments.length===3&&typeof l==="string"&&Da.test(l))return this.each(function(){c(this).domManip(a,
b,d,true)});if(c.isFunction(l))return this.each(function(x){var r=c(this);a[0]=l.call(this,x,b?r.html():B);r.domManip(a,b,d)});if(this[0]){e=l&&l.parentNode;e=c.support.parentNode&&e&&e.nodeType===11&&e.childNodes.length===this.length?{fragment:e}:c.buildFragment(a,this,k);h=e.fragment;if(f=h.childNodes.length===1?h=h.firstChild:h.firstChild){b=b&&c.nodeName(f,"tr");f=0;for(var o=this.length;f<o;f++)d.call(b?c.nodeName(this[f],"table")?this[f].getElementsByTagName("tbody")[0]||this[f].appendChild(this[f].ownerDocument.createElement("tbody")):
this[f]:this[f],f>0||e.cacheable||this.length>1?h.cloneNode(true):h)}k.length&&c.each(k,Oa)}return this}});c.buildFragment=function(a,b,d){var e,f,h;b=b&&b[0]?b[0].ownerDocument||b[0]:t;if(a.length===1&&typeof a[0]==="string"&&a[0].length<512&&b===t&&!Ca.test(a[0])&&(c.support.checkClone||!Da.test(a[0]))){f=true;if(h=c.fragments[a[0]])if(h!==1)e=h}if(!e){e=b.createDocumentFragment();c.clean(a,b,e,d)}if(f)c.fragments[a[0]]=h?e:1;return{fragment:e,cacheable:f}};c.fragments={};c.each({appendTo:"append",
prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(a,b){c.fn[a]=function(d){var e=[];d=c(d);var f=this.length===1&&this[0].parentNode;if(f&&f.nodeType===11&&f.childNodes.length===1&&d.length===1){d[b](this[0]);return this}else{f=0;for(var h=d.length;f<h;f++){var l=(f>0?this.clone(true):this).get();c(d[f])[b](l);e=e.concat(l)}return this.pushStack(e,a,d.selector)}}});c.extend({clean:function(a,b,d,e){b=b||t;if(typeof b.createElement==="undefined")b=b.ownerDocument||
b[0]&&b[0].ownerDocument||t;for(var f=[],h=0,l;(l=a[h])!=null;h++){if(typeof l==="number")l+="";if(l){if(typeof l==="string"&&!eb.test(l))l=b.createTextNode(l);else if(typeof l==="string"){l=l.replace(Aa,"<$1></$2>");var k=(Ba.exec(l)||["",""])[1].toLowerCase(),o=P[k]||P._default,x=o[0],r=b.createElement("div");for(r.innerHTML=o[1]+l+o[2];x--;)r=r.lastChild;if(!c.support.tbody){x=db.test(l);k=k==="table"&&!x?r.firstChild&&r.firstChild.childNodes:o[1]==="<table>"&&!x?r.childNodes:[];for(o=k.length-
1;o>=0;--o)c.nodeName(k[o],"tbody")&&!k[o].childNodes.length&&k[o].parentNode.removeChild(k[o])}!c.support.leadingWhitespace&&$.test(l)&&r.insertBefore(b.createTextNode($.exec(l)[0]),r.firstChild);l=r.childNodes}if(l.nodeType)f.push(l);else f=c.merge(f,l)}}if(d)for(h=0;f[h];h++)if(e&&c.nodeName(f[h],"script")&&(!f[h].type||f[h].type.toLowerCase()==="text/javascript"))e.push(f[h].parentNode?f[h].parentNode.removeChild(f[h]):f[h]);else{f[h].nodeType===1&&f.splice.apply(f,[h+1,0].concat(c.makeArray(f[h].getElementsByTagName("script"))));
d.appendChild(f[h])}return f},cleanData:function(a){for(var b,d,e=c.cache,f=c.event.special,h=c.support.deleteExpando,l=0,k;(k=a[l])!=null;l++)if(!(k.nodeName&&c.noData[k.nodeName.toLowerCase()]))if(d=k[c.expando]){if((b=e[d])&&b.events)for(var o in b.events)f[o]?c.event.remove(k,o):c.removeEvent(k,o,b.handle);if(h)delete k[c.expando];else k.removeAttribute&&k.removeAttribute(c.expando);delete e[d]}}});var Ea=/alpha\([^)]*\)/i,gb=/opacity=([^)]*)/,hb=/-([a-z])/ig,ib=/([A-Z])/g,Fa=/^-?\d+(?:px)?$/i,
jb=/^-?\d/,kb={position:"absolute",visibility:"hidden",display:"block"},Pa=["Left","Right"],Qa=["Top","Bottom"],W,Ga,aa,lb=function(a,b){return b.toUpperCase()};c.fn.css=function(a,b){if(arguments.length===2&&b===B)return this;return c.access(this,a,b,true,function(d,e,f){return f!==B?c.style(d,e,f):c.css(d,e)})};c.extend({cssHooks:{opacity:{get:function(a,b){if(b){var d=W(a,"opacity","opacity");return d===""?"1":d}else return a.style.opacity}}},cssNumber:{zIndex:true,fontWeight:true,opacity:true,
zoom:true,lineHeight:true},cssProps:{"float":c.support.cssFloat?"cssFloat":"styleFloat"},style:function(a,b,d,e){if(!(!a||a.nodeType===3||a.nodeType===8||!a.style)){var f,h=c.camelCase(b),l=a.style,k=c.cssHooks[h];b=c.cssProps[h]||h;if(d!==B){if(!(typeof d==="number"&&isNaN(d)||d==null)){if(typeof d==="number"&&!c.cssNumber[h])d+="px";if(!k||!("set"in k)||(d=k.set(a,d))!==B)try{l[b]=d}catch(o){}}}else{if(k&&"get"in k&&(f=k.get(a,false,e))!==B)return f;return l[b]}}},css:function(a,b,d){var e,f=c.camelCase(b),
h=c.cssHooks[f];b=c.cssProps[f]||f;if(h&&"get"in h&&(e=h.get(a,true,d))!==B)return e;else if(W)return W(a,b,f)},swap:function(a,b,d){var e={},f;for(f in b){e[f]=a.style[f];a.style[f]=b[f]}d.call(a);for(f in b)a.style[f]=e[f]},camelCase:function(a){return a.replace(hb,lb)}});c.curCSS=c.css;c.each(["height","width"],function(a,b){c.cssHooks[b]={get:function(d,e,f){var h;if(e){if(d.offsetWidth!==0)h=oa(d,b,f);else c.swap(d,kb,function(){h=oa(d,b,f)});if(h<=0){h=W(d,b,b);if(h==="0px"&&aa)h=aa(d,b,b);
if(h!=null)return h===""||h==="auto"?"0px":h}if(h<0||h==null){h=d.style[b];return h===""||h==="auto"?"0px":h}return typeof h==="string"?h:h+"px"}},set:function(d,e){if(Fa.test(e)){e=parseFloat(e);if(e>=0)return e+"px"}else return e}}});if(!c.support.opacity)c.cssHooks.opacity={get:function(a,b){return gb.test((b&&a.currentStyle?a.currentStyle.filter:a.style.filter)||"")?parseFloat(RegExp.$1)/100+"":b?"1":""},set:function(a,b){var d=a.style;d.zoom=1;var e=c.isNaN(b)?"":"alpha(opacity="+b*100+")",f=
d.filter||"";d.filter=Ea.test(f)?f.replace(Ea,e):d.filter+" "+e}};if(t.defaultView&&t.defaultView.getComputedStyle)Ga=function(a,b,d){var e;d=d.replace(ib,"-$1").toLowerCase();if(!(b=a.ownerDocument.defaultView))return B;if(b=b.getComputedStyle(a,null)){e=b.getPropertyValue(d);if(e===""&&!c.contains(a.ownerDocument.documentElement,a))e=c.style(a,d)}return e};if(t.documentElement.currentStyle)aa=function(a,b){var d,e,f=a.currentStyle&&a.currentStyle[b],h=a.style;if(!Fa.test(f)&&jb.test(f)){d=h.left;
e=a.runtimeStyle.left;a.runtimeStyle.left=a.currentStyle.left;h.left=b==="fontSize"?"1em":f||0;f=h.pixelLeft+"px";h.left=d;a.runtimeStyle.left=e}return f===""?"auto":f};W=Ga||aa;if(c.expr&&c.expr.filters){c.expr.filters.hidden=function(a){var b=a.offsetHeight;return a.offsetWidth===0&&b===0||!c.support.reliableHiddenOffsets&&(a.style.display||c.css(a,"display"))==="none"};c.expr.filters.visible=function(a){return!c.expr.filters.hidden(a)}}var mb=c.now(),nb=/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,
ob=/^(?:select|textarea)/i,pb=/^(?:color|date|datetime|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,qb=/^(?:GET|HEAD)$/,Ra=/\[\]$/,T=/\=\?(&|$)/,ja=/\?/,rb=/([?&])_=[^&]*/,sb=/^(\w+:)?\/\/([^\/?#]+)/,tb=/%20/g,ub=/#.*$/,Ha=c.fn.load;c.fn.extend({load:function(a,b,d){if(typeof a!=="string"&&Ha)return Ha.apply(this,arguments);else if(!this.length)return this;var e=a.indexOf(" ");if(e>=0){var f=a.slice(e,a.length);a=a.slice(0,e)}e="GET";if(b)if(c.isFunction(b)){d=b;b=null}else if(typeof b===
"object"){b=c.param(b,c.ajaxSettings.traditional);e="POST"}var h=this;c.ajax({url:a,type:e,dataType:"html",data:b,complete:function(l,k){if(k==="success"||k==="notmodified")h.html(f?c("<div>").append(l.responseText.replace(nb,"")).find(f):l.responseText);d&&h.each(d,[l.responseText,k,l])}});return this},serialize:function(){return c.param(this.serializeArray())},serializeArray:function(){return this.map(function(){return this.elements?c.makeArray(this.elements):this}).filter(function(){return this.name&&
!this.disabled&&(this.checked||ob.test(this.nodeName)||pb.test(this.type))}).map(function(a,b){var d=c(this).val();return d==null?null:c.isArray(d)?c.map(d,function(e){return{name:b.name,value:e}}):{name:b.name,value:d}}).get()}});c.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "),function(a,b){c.fn[b]=function(d){return this.bind(b,d)}});c.extend({get:function(a,b,d,e){if(c.isFunction(b)){e=e||d;d=b;b=null}return c.ajax({type:"GET",url:a,data:b,success:d,dataType:e})},
getScript:function(a,b){return c.get(a,null,b,"script")},getJSON:function(a,b,d){return c.get(a,b,d,"json")},post:function(a,b,d,e){if(c.isFunction(b)){e=e||d;d=b;b={}}return c.ajax({type:"POST",url:a,data:b,success:d,dataType:e})},ajaxSetup:function(a){c.extend(c.ajaxSettings,a)},ajaxSettings:{url:location.href,global:true,type:"GET",contentType:"application/x-www-form-urlencoded",processData:true,async:true,xhr:function(){return new E.XMLHttpRequest},accepts:{xml:"application/xml, text/xml",html:"text/html",
script:"text/javascript, application/javascript",json:"application/json, text/javascript",text:"text/plain",_default:"*/*"}},ajax:function(a){var b=c.extend(true,{},c.ajaxSettings,a),d,e,f,h=b.type.toUpperCase(),l=qb.test(h);b.url=b.url.replace(ub,"");b.context=a&&a.context!=null?a.context:b;if(b.data&&b.processData&&typeof b.data!=="string")b.data=c.param(b.data,b.traditional);if(b.dataType==="jsonp"){if(h==="GET")T.test(b.url)||(b.url+=(ja.test(b.url)?"&":"?")+(b.jsonp||"callback")+"=?");else if(!b.data||
!T.test(b.data))b.data=(b.data?b.data+"&":"")+(b.jsonp||"callback")+"=?";b.dataType="json"}if(b.dataType==="json"&&(b.data&&T.test(b.data)||T.test(b.url))){d=b.jsonpCallback||"jsonp"+mb++;if(b.data)b.data=(b.data+"").replace(T,"="+d+"$1");b.url=b.url.replace(T,"="+d+"$1");b.dataType="script";var k=E[d];E[d]=function(m){if(c.isFunction(k))k(m);else{E[d]=B;try{delete E[d]}catch(p){}}f=m;c.handleSuccess(b,w,e,f);c.handleComplete(b,w,e,f);r&&r.removeChild(A)}}if(b.dataType==="script"&&b.cache===null)b.cache=
false;if(b.cache===false&&l){var o=c.now(),x=b.url.replace(rb,"$1_="+o);b.url=x+(x===b.url?(ja.test(b.url)?"&":"?")+"_="+o:"")}if(b.data&&l)b.url+=(ja.test(b.url)?"&":"?")+b.data;b.global&&c.active++===0&&c.event.trigger("ajaxStart");o=(o=sb.exec(b.url))&&(o[1]&&o[1].toLowerCase()!==location.protocol||o[2].toLowerCase()!==location.host);if(b.dataType==="script"&&h==="GET"&&o){var r=t.getElementsByTagName("head")[0]||t.documentElement,A=t.createElement("script");if(b.scriptCharset)A.charset=b.scriptCharset;
A.src=b.url;if(!d){var C=false;A.onload=A.onreadystatechange=function(){if(!C&&(!this.readyState||this.readyState==="loaded"||this.readyState==="complete")){C=true;c.handleSuccess(b,w,e,f);c.handleComplete(b,w,e,f);A.onload=A.onreadystatechange=null;r&&A.parentNode&&r.removeChild(A)}}}r.insertBefore(A,r.firstChild);return B}var J=false,w=b.xhr();if(w){b.username?w.open(h,b.url,b.async,b.username,b.password):w.open(h,b.url,b.async);try{if(b.data!=null&&!l||a&&a.contentType)w.setRequestHeader("Content-Type",
b.contentType);if(b.ifModified){c.lastModified[b.url]&&w.setRequestHeader("If-Modified-Since",c.lastModified[b.url]);c.etag[b.url]&&w.setRequestHeader("If-None-Match",c.etag[b.url])}o||w.setRequestHeader("X-Requested-With","XMLHttpRequest");w.setRequestHeader("Accept",b.dataType&&b.accepts[b.dataType]?b.accepts[b.dataType]+", */*; q=0.01":b.accepts._default)}catch(I){}if(b.beforeSend&&b.beforeSend.call(b.context,w,b)===false){b.global&&c.active--===1&&c.event.trigger("ajaxStop");w.abort();return false}b.global&&
c.triggerGlobal(b,"ajaxSend",[w,b]);var L=w.onreadystatechange=function(m){if(!w||w.readyState===0||m==="abort"){J||c.handleComplete(b,w,e,f);J=true;if(w)w.onreadystatechange=c.noop}else if(!J&&w&&(w.readyState===4||m==="timeout")){J=true;w.onreadystatechange=c.noop;e=m==="timeout"?"timeout":!c.httpSuccess(w)?"error":b.ifModified&&c.httpNotModified(w,b.url)?"notmodified":"success";var p;if(e==="success")try{f=c.httpData(w,b.dataType,b)}catch(q){e="parsererror";p=q}if(e==="success"||e==="notmodified")d||
c.handleSuccess(b,w,e,f);else c.handleError(b,w,e,p);d||c.handleComplete(b,w,e,f);m==="timeout"&&w.abort();if(b.async)w=null}};try{var g=w.abort;w.abort=function(){w&&Function.prototype.call.call(g,w);L("abort")}}catch(i){}b.async&&b.timeout>0&&setTimeout(function(){w&&!J&&L("timeout")},b.timeout);try{w.send(l||b.data==null?null:b.data)}catch(n){c.handleError(b,w,null,n);c.handleComplete(b,w,e,f)}b.async||L();return w}},param:function(a,b){var d=[],e=function(h,l){l=c.isFunction(l)?l():l;d[d.length]=
encodeURIComponent(h)+"="+encodeURIComponent(l)};if(b===B)b=c.ajaxSettings.traditional;if(c.isArray(a)||a.jquery)c.each(a,function(){e(this.name,this.value)});else for(var f in a)da(f,a[f],b,e);return d.join("&").replace(tb,"+")}});c.extend({active:0,lastModified:{},etag:{},handleError:function(a,b,d,e){a.error&&a.error.call(a.context,b,d,e);a.global&&c.triggerGlobal(a,"ajaxError",[b,a,e])},handleSuccess:function(a,b,d,e){a.success&&a.success.call(a.context,e,d,b);a.global&&c.triggerGlobal(a,"ajaxSuccess",
[b,a])},handleComplete:function(a,b,d){a.complete&&a.complete.call(a.context,b,d);a.global&&c.triggerGlobal(a,"ajaxComplete",[b,a]);a.global&&c.active--===1&&c.event.trigger("ajaxStop")},triggerGlobal:function(a,b,d){(a.context&&a.context.url==null?c(a.context):c.event).trigger(b,d)},httpSuccess:function(a){try{return!a.status&&location.protocol==="file:"||a.status>=200&&a.status<300||a.status===304||a.status===1223}catch(b){}return false},httpNotModified:function(a,b){var d=a.getResponseHeader("Last-Modified"),
e=a.getResponseHeader("Etag");if(d)c.lastModified[b]=d;if(e)c.etag[b]=e;return a.status===304},httpData:function(a,b,d){var e=a.getResponseHeader("content-type")||"",f=b==="xml"||!b&&e.indexOf("xml")>=0;a=f?a.responseXML:a.responseText;f&&a.documentElement.nodeName==="parsererror"&&c.error("parsererror");if(d&&d.dataFilter)a=d.dataFilter(a,b);if(typeof a==="string")if(b==="json"||!b&&e.indexOf("json")>=0)a=c.parseJSON(a);else if(b==="script"||!b&&e.indexOf("javascript")>=0)c.globalEval(a);return a}});
if(E.ActiveXObject)c.ajaxSettings.xhr=function(){if(E.location.protocol!=="file:")try{return new E.XMLHttpRequest}catch(a){}try{return new E.ActiveXObject("Microsoft.XMLHTTP")}catch(b){}};c.support.ajax=!!c.ajaxSettings.xhr();var ea={},vb=/^(?:toggle|show|hide)$/,wb=/^([+\-]=)?([\d+.\-]+)(.*)$/,ba,pa=[["height","marginTop","marginBottom","paddingTop","paddingBottom"],["width","marginLeft","marginRight","paddingLeft","paddingRight"],["opacity"]];c.fn.extend({show:function(a,b,d){if(a||a===0)return this.animate(S("show",
3),a,b,d);else{d=0;for(var e=this.length;d<e;d++){a=this[d];b=a.style.display;if(!c.data(a,"olddisplay")&&b==="none")b=a.style.display="";b===""&&c.css(a,"display")==="none"&&c.data(a,"olddisplay",qa(a.nodeName))}for(d=0;d<e;d++){a=this[d];b=a.style.display;if(b===""||b==="none")a.style.display=c.data(a,"olddisplay")||""}return this}},hide:function(a,b,d){if(a||a===0)return this.animate(S("hide",3),a,b,d);else{a=0;for(b=this.length;a<b;a++){d=c.css(this[a],"display");d!=="none"&&c.data(this[a],"olddisplay",
d)}for(a=0;a<b;a++)this[a].style.display="none";return this}},_toggle:c.fn.toggle,toggle:function(a,b,d){var e=typeof a==="boolean";if(c.isFunction(a)&&c.isFunction(b))this._toggle.apply(this,arguments);else a==null||e?this.each(function(){var f=e?a:c(this).is(":hidden");c(this)[f?"show":"hide"]()}):this.animate(S("toggle",3),a,b,d);return this},fadeTo:function(a,b,d,e){return this.filter(":hidden").css("opacity",0).show().end().animate({opacity:b},a,d,e)},animate:function(a,b,d,e){var f=c.speed(b,
d,e);if(c.isEmptyObject(a))return this.each(f.complete);return this[f.queue===false?"each":"queue"](function(){var h=c.extend({},f),l,k=this.nodeType===1,o=k&&c(this).is(":hidden"),x=this;for(l in a){var r=c.camelCase(l);if(l!==r){a[r]=a[l];delete a[l];l=r}if(a[l]==="hide"&&o||a[l]==="show"&&!o)return h.complete.call(this);if(k&&(l==="height"||l==="width")){h.overflow=[this.style.overflow,this.style.overflowX,this.style.overflowY];if(c.css(this,"display")==="inline"&&c.css(this,"float")==="none")if(c.support.inlineBlockNeedsLayout)if(qa(this.nodeName)===
"inline")this.style.display="inline-block";else{this.style.display="inline";this.style.zoom=1}else this.style.display="inline-block"}if(c.isArray(a[l])){(h.specialEasing=h.specialEasing||{})[l]=a[l][1];a[l]=a[l][0]}}if(h.overflow!=null)this.style.overflow="hidden";h.curAnim=c.extend({},a);c.each(a,function(A,C){var J=new c.fx(x,h,A);if(vb.test(C))J[C==="toggle"?o?"show":"hide":C](a);else{var w=wb.exec(C),I=J.cur()||0;if(w){var L=parseFloat(w[2]),g=w[3]||"px";if(g!=="px"){c.style(x,A,(L||1)+g);I=(L||
1)/J.cur()*I;c.style(x,A,I+g)}if(w[1])L=(w[1]==="-="?-1:1)*L+I;J.custom(I,L,g)}else J.custom(I,C,"")}});return true})},stop:function(a,b){var d=c.timers;a&&this.queue([]);this.each(function(){for(var e=d.length-1;e>=0;e--)if(d[e].elem===this){b&&d[e](true);d.splice(e,1)}});b||this.dequeue();return this}});c.each({slideDown:S("show",1),slideUp:S("hide",1),slideToggle:S("toggle",1),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(a,b){c.fn[a]=function(d,e,f){return this.animate(b,
d,e,f)}});c.extend({speed:function(a,b,d){var e=a&&typeof a==="object"?c.extend({},a):{complete:d||!d&&b||c.isFunction(a)&&a,duration:a,easing:d&&b||b&&!c.isFunction(b)&&b};e.duration=c.fx.off?0:typeof e.duration==="number"?e.duration:e.duration in c.fx.speeds?c.fx.speeds[e.duration]:c.fx.speeds._default;e.old=e.complete;e.complete=function(){e.queue!==false&&c(this).dequeue();c.isFunction(e.old)&&e.old.call(this)};return e},easing:{linear:function(a,b,d,e){return d+e*a},swing:function(a,b,d,e){return(-Math.cos(a*
Math.PI)/2+0.5)*e+d}},timers:[],fx:function(a,b,d){this.options=b;this.elem=a;this.prop=d;if(!b.orig)b.orig={}}});c.fx.prototype={update:function(){this.options.step&&this.options.step.call(this.elem,this.now,this);(c.fx.step[this.prop]||c.fx.step._default)(this)},cur:function(){if(this.elem[this.prop]!=null&&(!this.elem.style||this.elem.style[this.prop]==null))return this.elem[this.prop];var a=parseFloat(c.css(this.elem,this.prop));return a&&a>-1E4?a:0},custom:function(a,b,d){function e(l){return f.step(l)}
var f=this,h=c.fx;this.startTime=c.now();this.start=a;this.end=b;this.unit=d||this.unit||"px";this.now=this.start;this.pos=this.state=0;e.elem=this.elem;if(e()&&c.timers.push(e)&&!ba)ba=setInterval(h.tick,h.interval)},show:function(){this.options.orig[this.prop]=c.style(this.elem,this.prop);this.options.show=true;this.custom(this.prop==="width"||this.prop==="height"?1:0,this.cur());c(this.elem).show()},hide:function(){this.options.orig[this.prop]=c.style(this.elem,this.prop);this.options.hide=true;
this.custom(this.cur(),0)},step:function(a){var b=c.now(),d=true;if(a||b>=this.options.duration+this.startTime){this.now=this.end;this.pos=this.state=1;this.update();this.options.curAnim[this.prop]=true;for(var e in this.options.curAnim)if(this.options.curAnim[e]!==true)d=false;if(d){if(this.options.overflow!=null&&!c.support.shrinkWrapBlocks){var f=this.elem,h=this.options;c.each(["","X","Y"],function(k,o){f.style["overflow"+o]=h.overflow[k]})}this.options.hide&&c(this.elem).hide();if(this.options.hide||
this.options.show)for(var l in this.options.curAnim)c.style(this.elem,l,this.options.orig[l]);this.options.complete.call(this.elem)}return false}else{a=b-this.startTime;this.state=a/this.options.duration;b=this.options.easing||(c.easing.swing?"swing":"linear");this.pos=c.easing[this.options.specialEasing&&this.options.specialEasing[this.prop]||b](this.state,a,0,1,this.options.duration);this.now=this.start+(this.end-this.start)*this.pos;this.update()}return true}};c.extend(c.fx,{tick:function(){for(var a=
c.timers,b=0;b<a.length;b++)a[b]()||a.splice(b--,1);a.length||c.fx.stop()},interval:13,stop:function(){clearInterval(ba);ba=null},speeds:{slow:600,fast:200,_default:400},step:{opacity:function(a){c.style(a.elem,"opacity",a.now)},_default:function(a){if(a.elem.style&&a.elem.style[a.prop]!=null)a.elem.style[a.prop]=(a.prop==="width"||a.prop==="height"?Math.max(0,a.now):a.now)+a.unit;else a.elem[a.prop]=a.now}}});if(c.expr&&c.expr.filters)c.expr.filters.animated=function(a){return c.grep(c.timers,function(b){return a===
b.elem}).length};var xb=/^t(?:able|d|h)$/i,Ia=/^(?:body|html)$/i;c.fn.offset="getBoundingClientRect"in t.documentElement?function(a){var b=this[0],d;if(a)return this.each(function(l){c.offset.setOffset(this,a,l)});if(!b||!b.ownerDocument)return null;if(b===b.ownerDocument.body)return c.offset.bodyOffset(b);try{d=b.getBoundingClientRect()}catch(e){}var f=b.ownerDocument,h=f.documentElement;if(!d||!c.contains(h,b))return d||{top:0,left:0};b=f.body;f=fa(f);return{top:d.top+(f.pageYOffset||c.support.boxModel&&
h.scrollTop||b.scrollTop)-(h.clientTop||b.clientTop||0),left:d.left+(f.pageXOffset||c.support.boxModel&&h.scrollLeft||b.scrollLeft)-(h.clientLeft||b.clientLeft||0)}}:function(a){var b=this[0];if(a)return this.each(function(x){c.offset.setOffset(this,a,x)});if(!b||!b.ownerDocument)return null;if(b===b.ownerDocument.body)return c.offset.bodyOffset(b);c.offset.initialize();var d,e=b.offsetParent,f=b.ownerDocument,h=f.documentElement,l=f.body;d=(f=f.defaultView)?f.getComputedStyle(b,null):b.currentStyle;
for(var k=b.offsetTop,o=b.offsetLeft;(b=b.parentNode)&&b!==l&&b!==h;){if(c.offset.supportsFixedPosition&&d.position==="fixed")break;d=f?f.getComputedStyle(b,null):b.currentStyle;k-=b.scrollTop;o-=b.scrollLeft;if(b===e){k+=b.offsetTop;o+=b.offsetLeft;if(c.offset.doesNotAddBorder&&!(c.offset.doesAddBorderForTableAndCells&&xb.test(b.nodeName))){k+=parseFloat(d.borderTopWidth)||0;o+=parseFloat(d.borderLeftWidth)||0}e=b.offsetParent}if(c.offset.subtractsBorderForOverflowNotVisible&&d.overflow!=="visible"){k+=
parseFloat(d.borderTopWidth)||0;o+=parseFloat(d.borderLeftWidth)||0}d=d}if(d.position==="relative"||d.position==="static"){k+=l.offsetTop;o+=l.offsetLeft}if(c.offset.supportsFixedPosition&&d.position==="fixed"){k+=Math.max(h.scrollTop,l.scrollTop);o+=Math.max(h.scrollLeft,l.scrollLeft)}return{top:k,left:o}};c.offset={initialize:function(){var a=t.body,b=t.createElement("div"),d,e,f,h=parseFloat(c.css(a,"marginTop"))||0;c.extend(b.style,{position:"absolute",top:0,left:0,margin:0,border:0,width:"1px",
height:"1px",visibility:"hidden"});b.innerHTML="<div style='position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;'><div></div></div><table style='position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;' cellpadding='0' cellspacing='0'><tr><td></td></tr></table>";a.insertBefore(b,a.firstChild);d=b.firstChild;e=d.firstChild;f=d.nextSibling.firstChild.firstChild;this.doesNotAddBorder=e.offsetTop!==5;this.doesAddBorderForTableAndCells=
f.offsetTop===5;e.style.position="fixed";e.style.top="20px";this.supportsFixedPosition=e.offsetTop===20||e.offsetTop===15;e.style.position=e.style.top="";d.style.overflow="hidden";d.style.position="relative";this.subtractsBorderForOverflowNotVisible=e.offsetTop===-5;this.doesNotIncludeMarginInBodyOffset=a.offsetTop!==h;a.removeChild(b);c.offset.initialize=c.noop},bodyOffset:function(a){var b=a.offsetTop,d=a.offsetLeft;c.offset.initialize();if(c.offset.doesNotIncludeMarginInBodyOffset){b+=parseFloat(c.css(a,
"marginTop"))||0;d+=parseFloat(c.css(a,"marginLeft"))||0}return{top:b,left:d}},setOffset:function(a,b,d){var e=c.css(a,"position");if(e==="static")a.style.position="relative";var f=c(a),h=f.offset(),l=c.css(a,"top"),k=c.css(a,"left"),o=e==="absolute"&&c.inArray("auto",[l,k])>-1;e={};var x={};if(o)x=f.position();l=o?x.top:parseInt(l,10)||0;k=o?x.left:parseInt(k,10)||0;if(c.isFunction(b))b=b.call(a,d,h);if(b.top!=null)e.top=b.top-h.top+l;if(b.left!=null)e.left=b.left-h.left+k;"using"in b?b.using.call(a,
e):f.css(e)}};c.fn.extend({position:function(){if(!this[0])return null;var a=this[0],b=this.offsetParent(),d=this.offset(),e=Ia.test(b[0].nodeName)?{top:0,left:0}:b.offset();d.top-=parseFloat(c.css(a,"marginTop"))||0;d.left-=parseFloat(c.css(a,"marginLeft"))||0;e.top+=parseFloat(c.css(b[0],"borderTopWidth"))||0;e.left+=parseFloat(c.css(b[0],"borderLeftWidth"))||0;return{top:d.top-e.top,left:d.left-e.left}},offsetParent:function(){return this.map(function(){for(var a=this.offsetParent||t.body;a&&!Ia.test(a.nodeName)&&
c.css(a,"position")==="static";)a=a.offsetParent;return a})}});c.each(["Left","Top"],function(a,b){var d="scroll"+b;c.fn[d]=function(e){var f=this[0],h;if(!f)return null;if(e!==B)return this.each(function(){if(h=fa(this))h.scrollTo(!a?e:c(h).scrollLeft(),a?e:c(h).scrollTop());else this[d]=e});else return(h=fa(f))?"pageXOffset"in h?h[a?"pageYOffset":"pageXOffset"]:c.support.boxModel&&h.document.documentElement[d]||h.document.body[d]:f[d]}});c.each(["Height","Width"],function(a,b){var d=b.toLowerCase();
c.fn["inner"+b]=function(){return this[0]?parseFloat(c.css(this[0],d,"padding")):null};c.fn["outer"+b]=function(e){return this[0]?parseFloat(c.css(this[0],d,e?"margin":"border")):null};c.fn[d]=function(e){var f=this[0];if(!f)return e==null?null:this;if(c.isFunction(e))return this.each(function(l){var k=c(this);k[d](e.call(this,l,k[d]()))});if(c.isWindow(f))return f.document.compatMode==="CSS1Compat"&&f.document.documentElement["client"+b]||f.document.body["client"+b];else if(f.nodeType===9)return Math.max(f.documentElement["client"+
b],f.body["scroll"+b],f.documentElement["scroll"+b],f.body["offset"+b],f.documentElement["offset"+b]);else if(e===B){f=c.css(f,d);var h=parseFloat(f);return c.isNaN(h)?f:h}else return this.css(d,typeof e==="string"?e:e+"px")}})})(window);
;

/**
 * jQuery Once Plugin v1.2
 * http://plugins.jquery.com/project/once
 *
 * Dual licensed under the MIT and GPL licenses:
 *   http://www.opensource.org/licenses/mit-license.php
 *   http://www.gnu.org/licenses/gpl.html
 */

(function ($) {
  var cache = {}, uuid = 0;

  /**
   * Filters elements by whether they have not yet been processed.
   *
   * @param id
   *   (Optional) If this is a string, then it will be used as the CSS class
   *   name that is applied to the elements for determining whether it has
   *   already been processed. The elements will get a class in the form of
   *   "id-processed".
   *
   *   If the id parameter is a function, it will be passed off to the fn
   *   parameter and the id will become a unique identifier, represented as a
   *   number.
   *
   *   When the id is neither a string or a function, it becomes a unique
   *   identifier, depicted as a number. The element's class will then be
   *   represented in the form of "jquery-once-#-processed".
   *
   *   Take note that the id must be valid for usage as an element's class name.
   * @param fn
   *   (Optional) If given, this function will be called for each element that
   *   has not yet been processed. The function's return value follows the same
   *   logic as $.each(). Returning true will continue to the next matched
   *   element in the set, while returning false will entirely break the
   *   iteration.
   */
  $.fn.once = function (id, fn) {
    if (typeof id != 'string') {
      // Generate a numeric ID if the id passed can't be used as a CSS class.
      if (!(id in cache)) {
        cache[id] = ++uuid;
      }
      // When the fn parameter is not passed, we interpret it from the id.
      if (!fn) {
        fn = id;
      }
      id = 'jquery-once-' + cache[id];
    }
    // Remove elements from the set that have already been processed.
    var name = id + '-processed';
    var elements = this.not('.' + name).addClass(name);

    return $.isFunction(fn) ? elements.each(fn) : elements;
  };

  /**
   * Filters elements that have been processed once already.
   *
   * @param id
   *   A required string representing the name of the class which should be used
   *   when filtering the elements. This only filters elements that have already
   *   been processed by the once function. The id should be the same id that
   *   was originally passed to the once() function.
   * @param fn
   *   (Optional) If given, this function will be called for each element that
   *   has not yet been processed. The function's return value follows the same
   *   logic as $.each(). Returning true will continue to the next matched
   *   element in the set, while returning false will entirely break the
   *   iteration.
   */
  $.fn.removeOnce = function (id, fn) {
    var name = id + '-processed';
    var elements = this.filter('.' + name).removeClass(name);

    return $.isFunction(fn) ? elements.each(fn) : elements;
  };
})(jQuery);
;

var Drupal = Drupal || { 'settings': {}, 'behaviors': {}, 'locale': {} };

// Allow other JavaScript libraries to use $.
jQuery.noConflict();

(function ($) {

/**
 * Attach all registered behaviors to a page element.
 *
 * Behaviors are event-triggered actions that attach to page elements, enhancing
 * default non-JavaScript UIs. Behaviors are registered in the Drupal.behaviors
 * object using the method 'attach' and optionally also 'detach' as follows:
 * @code
 *    Drupal.behaviors.behaviorName = {
 *      attach: function (context, settings) {
 *        ...
 *      },
 *      detach: function (context, settings, trigger) {
 *        ...
 *      }
 *    };
 * @endcode
 *
 * Drupal.attachBehaviors is added below to the jQuery ready event and so
 * runs on initial page load. Developers implementing AHAH/Ajax in their
 * solutions should also call this function after new page content has been
 * loaded, feeding in an element to be processed, in order to attach all
 * behaviors to the new content.
 *
 * Behaviors should use
 * @code
 *   $(selector).once('behavior-name', function () {
 *     ...
 *   });
 * @endcode
 * to ensure the behavior is attached only once to a given element. (Doing so
 * enables the reprocessing of given elements, which may be needed on occasion
 * despite the ability to limit behavior attachment to a particular element.)
 *
 * @param context
 *   An element to attach behaviors to. If none is given, the document element
 *   is used.
 * @param settings
 *   An object containing settings for the current context. If none given, the
 *   global Drupal.settings object is used.
 */
Drupal.attachBehaviors = function (context, settings) {
  context = context || document;
  settings = settings || Drupal.settings;
  // Execute all of them.
  $.each(Drupal.behaviors, function () {
    if ($.isFunction(this.attach)) {
      this.attach(context, settings);
    }
  });
};

/**
 * Detach registered behaviors from a page element.
 *
 * Developers implementing AHAH/Ajax in their solutions should call this
 * function before page content is about to be removed, feeding in an element
 * to be processed, in order to allow special behaviors to detach from the
 * content.
 *
 * Such implementations should look for the class name that was added in their
 * corresponding Drupal.behaviors.behaviorName.attach implementation, i.e.
 * behaviorName-processed, to ensure the behavior is detached only from
 * previously processed elements.
 *
 * @param context
 *   An element to detach behaviors from. If none is given, the document element
 *   is used.
 * @param settings
 *   An object containing settings for the current context. If none given, the
 *   global Drupal.settings object is used.
 * @param trigger
 *   A string containing what's causing the behaviors to be detached. The
 *   possible triggers are:
 *   - unload: (default) The context element is being removed from the DOM.
 *   - move: The element is about to be moved within the DOM (for example,
 *     during a tabledrag row swap). After the move is completed,
 *     Drupal.attachBehaviors() is called, so that the behavior can undo
 *     whatever it did in response to the move. Many behaviors won't need to
 *     do anything simply in response to the element being moved, but because
 *     IFRAME elements reload their "src" when being moved within the DOM,
 *     behaviors bound to IFRAME elements (like WYSIWYG editors) may need to
 *     take some action.
 *   - serialize: When an Ajax form is submitted, this is called with the
 *     form as the context. This provides every behavior within the form an
 *     opportunity to ensure that the field elements have correct content
 *     in them before the form is serialized. The canonical use-case is so
 *     that WYSIWYG editors can update the hidden textarea to which they are
 *     bound.
 *
 * @see Drupal.attachBehaviors
 */
Drupal.detachBehaviors = function (context, settings, trigger) {
  context = context || document;
  settings = settings || Drupal.settings;
  trigger = trigger || 'unload';
  // Execute all of them.
  $.each(Drupal.behaviors, function () {
    if ($.isFunction(this.detach)) {
      this.detach(context, settings, trigger);
    }
  });
};

/**
 * Encode special characters in a plain-text string for display as HTML.
 */
Drupal.checkPlain = function (str) {
  var character, regex,
  // Changes made by Vincent on 07 Sep 2011 for handling single quote in admin pages
  //    replace = { '&': '&amp;', '"': '&quot;', '<': '&lt;', '>': '&gt;' };
   replace = { '&': '&amp;', '"': '&quot;', '<': '&lt;', '>': '&gt;', "'":"''" };
  str = String(str);
  for (character in replace) {
    if (replace.hasOwnProperty(character)) {
      regex = new RegExp(character, 'g');
      str = str.replace(regex, replace[character]);
    }
  }
  return str;
};

/**
 * Translate strings to the page language or a given language.
 *
 * See the documentation of the server-side t() function for further details.
 *
 * @param str
 *   A string containing the English string to translate.
 * @param args
 *   An object of replacements pairs to make after translation. Incidences
 *   of any key in this array are replaced with the corresponding value.
 *   Based on the first character of the key, the value is escaped and/or themed:
 *    - !variable: inserted as is
 *    - @variable: escape plain text to HTML (Drupal.checkPlain)
 *    - %variable: escape text and theme as a placeholder for user-submitted
 *      content (checkPlain + Drupal.theme('placeholder'))
 * @return
 *   The translated string.
 */
Drupal.t = function (str, args) {
  // Fetch the localized version of the string.
  if (Drupal.locale.strings && Drupal.locale.strings[str]) {
    str = Drupal.locale.strings[str];
  }

  if (args) {
    // Transform arguments before inserting them.
    for (var key in args) {
      switch (key.charAt(0)) {
        // Escaped only.
        case '@':
          args[key] = Drupal.checkPlain(args[key]);
        break;
        // Pass-through.
        case '!':
          break;
        // Escaped and placeholder.
        case '%':
        default:
          args[key] = Drupal.theme('placeholder', args[key]);
          break;
      }
      str = str.replace(key, args[key]);
    }
  }
  return str;
};

/**
 * Format a string containing a count of items.
 *
 * This function ensures that the string is pluralized correctly. Since Drupal.t() is
 * called by this function, make sure not to pass already-localized strings to it.
 *
 * See the documentation of the server-side format_plural() function for further details.
 *
 * @param count
 *   The item count to display.
 * @param singular
 *   The string for the singular case. Please make sure it is clear this is
 *   singular, to ease translation (e.g. use "1 new comment" instead of "1 new").
 *   Do not use @count in the singular string.
 * @param plural
 *   The string for the plural case. Please make sure it is clear this is plural,
 *   to ease translation. Use @count in place of the item count, as in "@count
 *   new comments".
 * @param args
 *   An object of replacements pairs to make after translation. Incidences
 *   of any key in this array are replaced with the corresponding value.
 *   Based on the first character of the key, the value is escaped and/or themed:
 *    - !variable: inserted as is
 *    - @variable: escape plain text to HTML (Drupal.checkPlain)
 *    - %variable: escape text and theme as a placeholder for user-submitted
 *      content (checkPlain + Drupal.theme('placeholder'))
 *   Note that you do not need to include @count in this array.
 *   This replacement is done automatically for the plural case.
 * @return
 *   A translated string.
 */
Drupal.formatPlural = function (count, singular, plural, args) {
  var args = args || {};
  args['@count'] = count;
  // Determine the index of the plural form.
  var index = Drupal.locale.pluralFormula ? Drupal.locale.pluralFormula(args['@count']) : ((args['@count'] == 1) ? 0 : 1);

  if (index == 0) {
    return Drupal.t(singular, args);
  }
  else if (index == 1) {
    return Drupal.t(plural, args);
  }
  else {
    args['@count[' + index + ']'] = args['@count'];
    delete args['@count'];
    return Drupal.t(plural.replace('@count', '@count[' + index + ']'), args);
  }
};

/**
 * Generate the themed representation of a Drupal object.
 *
 * All requests for themed output must go through this function. It examines
 * the request and routes it to the appropriate theme function. If the current
 * theme does not provide an override function, the generic theme function is
 * called.
 *
 * For example, to retrieve the HTML for text that should be emphasized and
 * displayed as a placeholder inside a sentence, call
 * Drupal.theme('placeholder', text).
 *
 * @param func
 *   The name of the theme function to call.
 * @param ...
 *   Additional arguments to pass along to the theme function.
 * @return
 *   Any data the theme function returns. This could be a plain HTML string,
 *   but also a complex object.
 */
Drupal.theme = function (func) {
  var args = Array.prototype.slice.apply(arguments, [1]);

  return (Drupal.theme[func] || Drupal.theme.prototype[func]).apply(this, args);
};

/**
 * Freeze the current body height (as minimum height). Used to prevent
 * unnecessary upwards scrolling when doing DOM manipulations.
 */
Drupal.freezeHeight = function () {
  Drupal.unfreezeHeight();
  $('<div id="freeze-height"></div>').css({
    position: 'absolute',
    top: '0px',
    left: '0px',
    width: '1px',
    height: $('body').css('height')
  }).appendTo('body');
};

/**
 * Unfreeze the body height.
 */
Drupal.unfreezeHeight = function () {
  $('#freeze-height').remove();
};

/**
 * Encodes a Drupal path for use in a URL.
 *
 * For aesthetic reasons slashes are not escaped.
 */
Drupal.encodePath = function (item, uri) {
  uri = uri || location.href;
  return encodeURIComponent(item).replace(/%2F/g, '/');
};

/**
 * Get the text selection in a textarea.
 */
Drupal.getSelection = function (element) {
  if (typeof element.selectionStart != 'number' && document.selection) {
    // The current selection.
    var range1 = document.selection.createRange();
    var range2 = range1.duplicate();
    // Select all text.
    range2.moveToElementText(element);
    // Now move 'dummy' end point to end point of original range.
    range2.setEndPoint('EndToEnd', range1);
    // Now we can calculate start and end points.
    var start = range2.text.length - range1.text.length;
    var end = start + range1.text.length;
    return { 'start': start, 'end': end };
  }
  return { 'start': element.selectionStart, 'end': element.selectionEnd };
};

/**
 * Build an error message from an Ajax response.
 */
Drupal.ajaxError = function (xmlhttp, uri) {
  var statusCode, statusText, pathText, responseText, readyStateText, message;
  if (xmlhttp.status) {
    statusCode = "\n" + Drupal.t("An AJAX HTTP error occurred.") +  "\n" + Drupal.t("HTTP Result Code: !status", {'!status': xmlhttp.status});
  }
  else {
    statusCode = "\n" + Drupal.t("An AJAX HTTP request terminated abnormally.");
  }
  statusCode += "\n" + Drupal.t("Debugging information follows.");
  pathText = "\n" + Drupal.t("Path: !uri", {'!uri': uri} );
  statusText = '';
  // In some cases, when statusCode == 0, xmlhttp.statusText may not be defined.
  // Unfortunately, testing for it with typeof, etc, doesn't seem to catch that
  // and the test causes an exception. So we need to catch the exception here.
  try {
    statusText = "\n" + Drupal.t("StatusText: !statusText", {'!statusText': $.trim(xmlhttp.statusText)});
  }
  catch (e) {}

  responseText = '';
  // Again, we don't have a way to know for sure whether accessing
  // xmlhttp.responseText is going to throw an exception. So we'll catch it.
  try {
    responseText = "\n" + Drupal.t("ResponseText: !responseText", {'!responseText': $.trim(xmlhttp.responseText) } );
  } catch (e) {}

  // Make the responseText more readable by stripping HTML tags and newlines.
  responseText = responseText.replace(/<("[^"]*"|'[^']*'|[^'">])*>/gi,"");
  responseText = responseText.replace(/[\n]+\s+/g,"\n");

  // We don't need readyState except for status == 0.
  readyStateText = xmlhttp.status == 0 ? ("\n" + Drupal.t("ReadyState: !readyState", {'!readyState': xmlhttp.readyState})) : "";

  message = statusCode + pathText + statusText + responseText + readyStateText;

  // Expertusone custom error log
  if (window.console != 'undefined') {
	  console.error('Expertusone error log: ' + message);
  }

  // Expertusone custom error message to end users
  var statusCodeFromExpertus = "\n" + Drupal.t("ERR057");
  if(xmlhttp.responseText == "Login again since your session has expired" || xmlhttp.responseText == "" || xmlhttp.responseText == Drupal.t("ERR055"))
	  statusCodeFromExpertus = "\n" + Drupal.t("ERR055");


  return statusCodeFromExpertus;
};

// Class indicating that JS is enabled; used for styling purpose.
$('html').addClass('js');

// 'js enabled' cookie.
document.cookie = 'has_js=1; path=/';

/**
 * Additions to jQuery.support.
 */
$(function () {
  /**
   * Boolean indicating whether or not position:fixed is supported.
   */
  if (jQuery.support.positionFixed === undefined) {
    var el = $('<div style="position:fixed; top:10px" />').appendTo(document.body);
    jQuery.support.positionFixed = el[0].offsetTop === 10;
    el.remove();
  }
});

//Attach all behaviors.
$(function () {
  Drupal.attachBehaviors(document, Drupal.settings);
});

/**
 * The default themes.
 */
Drupal.theme.prototype = {

  /**
   * Formats text for emphasized display in a placeholder inside a sentence.
   *
   * @param str
   *   The text to format (plain-text).
   * @return
   *   The formatted text (html).
   */
  placeholder: function (str) {
    return '<em class="placeholder">' + Drupal.checkPlain(str) + '</em>';
  }
};

})(jQuery);
;

/*!
 * jQuery UI 1.8.7
 *
 * Copyright 2010, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI
 */
(function(c,j){function k(a){return!c(a).parents().andSelf().filter(function(){return c.curCSS(this,"visibility")==="hidden"||c.expr.filters.hidden(this)}).length}c.ui=c.ui||{};if(!c.ui.version){c.extend(c.ui,{version:"1.8.7",keyCode:{ALT:18,BACKSPACE:8,CAPS_LOCK:20,COMMA:188,COMMAND:91,COMMAND_LEFT:91,COMMAND_RIGHT:93,CONTROL:17,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,INSERT:45,LEFT:37,MENU:93,NUMPAD_ADD:107,NUMPAD_DECIMAL:110,NUMPAD_DIVIDE:111,NUMPAD_ENTER:108,NUMPAD_MULTIPLY:106,
NUMPAD_SUBTRACT:109,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SHIFT:16,SPACE:32,TAB:9,UP:38,WINDOWS:91}});c.fn.extend({_focus:c.fn.focus,focus:function(a,b){return typeof a==="number"?this.each(function(){var d=this;setTimeout(function(){c(d).focus();b&&b.call(d)},a)}):this._focus.apply(this,arguments)},scrollParent:function(){var a;a=c.browser.msie&&/(static|relative)/.test(this.css("position"))||/absolute/.test(this.css("position"))?this.parents().filter(function(){return/(relative|absolute|fixed)/.test(c.curCSS(this,
"position",1))&&/(auto|scroll)/.test(c.curCSS(this,"overflow",1)+c.curCSS(this,"overflow-y",1)+c.curCSS(this,"overflow-x",1))}).eq(0):this.parents().filter(function(){return/(auto|scroll)/.test(c.curCSS(this,"overflow",1)+c.curCSS(this,"overflow-y",1)+c.curCSS(this,"overflow-x",1))}).eq(0);return/fixed/.test(this.css("position"))||!a.length?c(document):a},zIndex:function(a){if(a!==j)return this.css("zIndex",a);if(this.length){a=c(this[0]);for(var b;a.length&&a[0]!==document;){b=a.css("position");
if(b==="absolute"||b==="relative"||b==="fixed"){b=parseInt(a.css("zIndex"),10);if(!isNaN(b)&&b!==0)return b}a=a.parent()}}return 0},disableSelection:function(){return this.bind((c.support.selectstart?"selectstart":"mousedown")+".ui-disableSelection",function(a){a.preventDefault()})},enableSelection:function(){return this.unbind(".ui-disableSelection")}});c.each(["Width","Height"],function(a,b){function d(f,g,l,m){c.each(e,function(){g-=parseFloat(c.curCSS(f,"padding"+this,true))||0;if(l)g-=parseFloat(c.curCSS(f,
"border"+this+"Width",true))||0;if(m)g-=parseFloat(c.curCSS(f,"margin"+this,true))||0});return g}var e=b==="Width"?["Left","Right"]:["Top","Bottom"],h=b.toLowerCase(),i={innerWidth:c.fn.innerWidth,innerHeight:c.fn.innerHeight,outerWidth:c.fn.outerWidth,outerHeight:c.fn.outerHeight};c.fn["inner"+b]=function(f){if(f===j)return i["inner"+b].call(this);return this.each(function(){c(this).css(h,d(this,f)+"px")})};c.fn["outer"+b]=function(f,g){if(typeof f!=="number")return i["outer"+b].call(this,f);return this.each(function(){c(this).css(h,
d(this,f,true,g)+"px")})}});c.extend(c.expr[":"],{data:function(a,b,d){return!!c.data(a,d[3])},focusable:function(a){var b=a.nodeName.toLowerCase(),d=c.attr(a,"tabindex");if("area"===b){b=a.parentNode;d=b.name;if(!a.href||!d||b.nodeName.toLowerCase()!=="map")return false;a=c("img[usemap=#"+d+"]")[0];return!!a&&k(a)}return(/input|select|textarea|button|object/.test(b)?!a.disabled:"a"==b?a.href||!isNaN(d):!isNaN(d))&&k(a)},tabbable:function(a){var b=c.attr(a,"tabindex");return(isNaN(b)||b>=0)&&c(a).is(":focusable")}});
c(function(){var a=document.body,b=a.appendChild(b=document.createElement("div"));c.extend(b.style,{minHeight:"100px",height:"auto",padding:0,borderWidth:0});c.support.minHeight=b.offsetHeight===100;c.support.selectstart="onselectstart"in b;a.removeChild(b).style.display="none"});c.extend(c.ui,{plugin:{add:function(a,b,d){a=c.ui[a].prototype;for(var e in d){a.plugins[e]=a.plugins[e]||[];a.plugins[e].push([b,d[e]])}},call:function(a,b,d){if((b=a.plugins[b])&&a.element[0].parentNode)for(var e=0;e<b.length;e++)a.options[b[e][0]]&&
b[e][1].apply(a.element,d)}},contains:function(a,b){return document.compareDocumentPosition?a.compareDocumentPosition(b)&16:a!==b&&a.contains(b)},hasScroll:function(a,b){if(c(a).css("overflow")==="hidden")return false;b=b&&b==="left"?"scrollLeft":"scrollTop";var d=false;if(a[b]>0)return true;a[b]=1;d=a[b]>0;a[b]=0;return d},isOverAxis:function(a,b,d){return a>b&&a<b+d},isOver:function(a,b,d,e,h,i){return c.ui.isOverAxis(a,d,h)&&c.ui.isOverAxis(b,e,i)}})}})(jQuery);
;

/*!
 * jQuery UI Widget 1.8.7
 *
 * Copyright 2010, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Widget
 */
(function(b,j){if(b.cleanData){var k=b.cleanData;b.cleanData=function(a){for(var c=0,d;(d=a[c])!=null;c++)b(d).triggerHandler("remove");k(a)}}else{var l=b.fn.remove;b.fn.remove=function(a,c){return this.each(function(){if(!c)if(!a||b.filter(a,[this]).length)b("*",this).add([this]).each(function(){b(this).triggerHandler("remove")});return l.call(b(this),a,c)})}}b.widget=function(a,c,d){var e=a.split(".")[0],f;a=a.split(".")[1];f=e+"-"+a;if(!d){d=c;c=b.Widget}b.expr[":"][f]=function(h){return!!b.data(h,
a)};b[e]=b[e]||{};b[e][a]=function(h,g){arguments.length&&this._createWidget(h,g)};c=new c;c.options=b.extend(true,{},c.options);b[e][a].prototype=b.extend(true,c,{namespace:e,widgetName:a,widgetEventPrefix:b[e][a].prototype.widgetEventPrefix||a,widgetBaseClass:f},d);b.widget.bridge(a,b[e][a])};b.widget.bridge=function(a,c){b.fn[a]=function(d){var e=typeof d==="string",f=Array.prototype.slice.call(arguments,1),h=this;d=!e&&f.length?b.extend.apply(null,[true,d].concat(f)):d;if(e&&d.charAt(0)==="_")return h;
e?this.each(function(){var g=b.data(this,a),i=g&&b.isFunction(g[d])?g[d].apply(g,f):g;if(i!==g&&i!==j){h=i;return false}}):this.each(function(){var g=b.data(this,a);g?g.option(d||{})._init():b.data(this,a,new c(d,this))});return h}};b.Widget=function(a,c){arguments.length&&this._createWidget(a,c)};b.Widget.prototype={widgetName:"widget",widgetEventPrefix:"",options:{disabled:false},_createWidget:function(a,c){b.data(c,this.widgetName,this);this.element=b(c);this.options=b.extend(true,{},this.options,
this._getCreateOptions(),a);var d=this;this.element.bind("remove."+this.widgetName,function(){d.destroy()});this._create();this._trigger("create");this._init()},_getCreateOptions:function(){return b.metadata&&b.metadata.get(this.element[0])[this.widgetName]},_create:function(){},_init:function(){},destroy:function(){this.element.unbind("."+this.widgetName).removeData(this.widgetName);this.widget().unbind("."+this.widgetName).removeAttr("aria-disabled").removeClass(this.widgetBaseClass+"-disabled ui-state-disabled")},
widget:function(){return this.element},option:function(a,c){var d=a;if(arguments.length===0)return b.extend({},this.options);if(typeof a==="string"){if(c===j)return this.options[a];d={};d[a]=c}this._setOptions(d);return this},_setOptions:function(a){var c=this;b.each(a,function(d,e){c._setOption(d,e)});return this},_setOption:function(a,c){this.options[a]=c;if(a==="disabled")this.widget()[c?"addClass":"removeClass"](this.widgetBaseClass+"-disabled ui-state-disabled").attr("aria-disabled",c);return this},
enable:function(){return this._setOption("disabled",false)},disable:function(){return this._setOption("disabled",true)},_trigger:function(a,c,d){var e=this.options[a];c=b.Event(c);c.type=(a===this.widgetEventPrefix?a:this.widgetEventPrefix+a).toLowerCase();d=d||{};if(c.originalEvent){a=b.event.props.length;for(var f;a;){f=b.event.props[--a];c[f]=c.originalEvent[f]}}this.element.trigger(c,d);return!(b.isFunction(e)&&e.call(this.element[0],c,d)===false||c.isDefaultPrevented())}}})(jQuery);
;

/*!
 * jQuery UI Mouse 1.8.7
 *
 * Copyright 2010, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Mouse
 *
 * Depends:
 *	jquery.ui.widget.js
 */
(function(c){c.widget("ui.mouse",{options:{cancel:":input,option",distance:1,delay:0},_mouseInit:function(){var a=this;this.element.bind("mousedown."+this.widgetName,function(b){return a._mouseDown(b)}).bind("click."+this.widgetName,function(b){if(true===c.data(b.target,a.widgetName+".preventClickEvent")){c.removeData(b.target,a.widgetName+".preventClickEvent");b.stopImmediatePropagation();return false}});this.started=false},_mouseDestroy:function(){this.element.unbind("."+this.widgetName)},_mouseDown:function(a){a.originalEvent=
a.originalEvent||{};if(!a.originalEvent.mouseHandled){this._mouseStarted&&this._mouseUp(a);this._mouseDownEvent=a;var b=this,e=a.which==1,f=typeof this.options.cancel=="string"?c(a.target).parents().add(a.target).filter(this.options.cancel).length:false;if(!e||f||!this._mouseCapture(a))return true;this.mouseDelayMet=!this.options.delay;if(!this.mouseDelayMet)this._mouseDelayTimer=setTimeout(function(){b.mouseDelayMet=true},this.options.delay);if(this._mouseDistanceMet(a)&&this._mouseDelayMet(a)){this._mouseStarted=
this._mouseStart(a)!==false;if(!this._mouseStarted){a.preventDefault();return true}}this._mouseMoveDelegate=function(d){return b._mouseMove(d)};this._mouseUpDelegate=function(d){return b._mouseUp(d)};c(document).bind("mousemove."+this.widgetName,this._mouseMoveDelegate).bind("mouseup."+this.widgetName,this._mouseUpDelegate);a.preventDefault();return a.originalEvent.mouseHandled=true}},_mouseMove:function(a){if(c.browser.msie&&!(document.documentMode>=9)&&!a.button)return this._mouseUp(a);if(this._mouseStarted){this._mouseDrag(a);
return a.preventDefault()}if(this._mouseDistanceMet(a)&&this._mouseDelayMet(a))(this._mouseStarted=this._mouseStart(this._mouseDownEvent,a)!==false)?this._mouseDrag(a):this._mouseUp(a);return!this._mouseStarted},_mouseUp:function(a){c(document).unbind("mousemove."+this.widgetName,this._mouseMoveDelegate).unbind("mouseup."+this.widgetName,this._mouseUpDelegate);if(this._mouseStarted){this._mouseStarted=false;a.target==this._mouseDownEvent.target&&c.data(a.target,this.widgetName+".preventClickEvent",
true);this._mouseStop(a)}return false},_mouseDistanceMet:function(a){return Math.max(Math.abs(this._mouseDownEvent.pageX-a.pageX),Math.abs(this._mouseDownEvent.pageY-a.pageY))>=this.options.distance},_mouseDelayMet:function(){return this.mouseDelayMet},_mouseStart:function(){},_mouseDrag:function(){},_mouseStop:function(){},_mouseCapture:function(){return true}})})(jQuery);
;

/*
 * jQuery UI Draggable 1.8.7
 *
 * Copyright 2010, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Draggables
 *
 * Depends:
 *	jquery.ui.core.js
 *	jquery.ui.mouse.js
 *	jquery.ui.widget.js
 */
(function(d){d.widget("ui.draggable",d.ui.mouse,{widgetEventPrefix:"drag",options:{addClasses:true,appendTo:"parent",axis:false,connectToSortable:false,containment:false,cursor:"auto",cursorAt:false,grid:false,handle:false,helper:"original",iframeFix:false,opacity:false,refreshPositions:false,revert:false,revertDuration:500,scope:"default",scroll:true,scrollSensitivity:20,scrollSpeed:20,snap:false,snapMode:"both",snapTolerance:20,stack:false,zIndex:false},_create:function(){if(this.options.helper==
"original"&&!/^(?:r|a|f)/.test(this.element.css("position")))this.element[0].style.position="relative";this.options.addClasses&&this.element.addClass("ui-draggable");this.options.disabled&&this.element.addClass("ui-draggable-disabled");this._mouseInit()},destroy:function(){if(this.element.data("draggable")){this.element.removeData("draggable").unbind(".draggable").removeClass("ui-draggable ui-draggable-dragging ui-draggable-disabled");this._mouseDestroy();return this}},_mouseCapture:function(a){var b=
this.options;if(this.helper||b.disabled||d(a.target).is(".ui-resizable-handle"))return false;this.handle=this._getHandle(a);if(!this.handle)return false;return true},_mouseStart:function(a){var b=this.options;this.helper=this._createHelper(a);this._cacheHelperProportions();if(d.ui.ddmanager)d.ui.ddmanager.current=this;this._cacheMargins();this.cssPosition=this.helper.css("position");this.scrollParent=this.helper.scrollParent();this.offset=this.positionAbs=this.element.offset();this.offset={top:this.offset.top-
this.margins.top,left:this.offset.left-this.margins.left};d.extend(this.offset,{click:{left:a.pageX-this.offset.left,top:a.pageY-this.offset.top},parent:this._getParentOffset(),relative:this._getRelativeOffset()});this.originalPosition=this.position=this._generatePosition(a);this.originalPageX=a.pageX;this.originalPageY=a.pageY;b.cursorAt&&this._adjustOffsetFromHelper(b.cursorAt);b.containment&&this._setContainment();if(this._trigger("start",a)===false){this._clear();return false}this._cacheHelperProportions();
d.ui.ddmanager&&!b.dropBehaviour&&d.ui.ddmanager.prepareOffsets(this,a);this.helper.addClass("ui-draggable-dragging");this._mouseDrag(a,true);return true},_mouseDrag:function(a,b){this.position=this._generatePosition(a);this.positionAbs=this._convertPositionTo("absolute");if(!b){b=this._uiHash();if(this._trigger("drag",a,b)===false){this._mouseUp({});return false}this.position=b.position}if(!this.options.axis||this.options.axis!="y")this.helper[0].style.left=this.position.left+"px";if(!this.options.axis||
this.options.axis!="x")this.helper[0].style.top=this.position.top+"px";d.ui.ddmanager&&d.ui.ddmanager.drag(this,a);return false},_mouseStop:function(a){var b=false;if(d.ui.ddmanager&&!this.options.dropBehaviour)b=d.ui.ddmanager.drop(this,a);if(this.dropped){b=this.dropped;this.dropped=false}if(!this.element[0]||!this.element[0].parentNode)return false;if(this.options.revert=="invalid"&&!b||this.options.revert=="valid"&&b||this.options.revert===true||d.isFunction(this.options.revert)&&this.options.revert.call(this.element,
b)){var c=this;d(this.helper).animate(this.originalPosition,parseInt(this.options.revertDuration,10),function(){c._trigger("stop",a)!==false&&c._clear()})}else this._trigger("stop",a)!==false&&this._clear();return false},cancel:function(){this.helper.is(".ui-draggable-dragging")?this._mouseUp({}):this._clear();return this},_getHandle:function(a){var b=!this.options.handle||!d(this.options.handle,this.element).length?true:false;d(this.options.handle,this.element).find("*").andSelf().each(function(){if(this==
a.target)b=true});return b},_createHelper:function(a){var b=this.options;a=d.isFunction(b.helper)?d(b.helper.apply(this.element[0],[a])):b.helper=="clone"?this.element.clone():this.element;a.parents("body").length||a.appendTo(b.appendTo=="parent"?this.element[0].parentNode:b.appendTo);a[0]!=this.element[0]&&!/(fixed|absolute)/.test(a.css("position"))&&a.css("position","absolute");return a},_adjustOffsetFromHelper:function(a){if(typeof a=="string")a=a.split(" ");if(d.isArray(a))a={left:+a[0],top:+a[1]||
0};if("left"in a)this.offset.click.left=a.left+this.margins.left;if("right"in a)this.offset.click.left=this.helperProportions.width-a.right+this.margins.left;if("top"in a)this.offset.click.top=a.top+this.margins.top;if("bottom"in a)this.offset.click.top=this.helperProportions.height-a.bottom+this.margins.top},_getParentOffset:function(){this.offsetParent=this.helper.offsetParent();var a=this.offsetParent.offset();if(this.cssPosition=="absolute"&&this.scrollParent[0]!=document&&d.ui.contains(this.scrollParent[0],
this.offsetParent[0])){a.left+=this.scrollParent.scrollLeft();a.top+=this.scrollParent.scrollTop()}if(this.offsetParent[0]==document.body||this.offsetParent[0].tagName&&this.offsetParent[0].tagName.toLowerCase()=="html"&&d.browser.msie)a={top:0,left:0};return{top:a.top+(parseInt(this.offsetParent.css("borderTopWidth"),10)||0),left:a.left+(parseInt(this.offsetParent.css("borderLeftWidth"),10)||0)}},_getRelativeOffset:function(){if(this.cssPosition=="relative"){var a=this.element.position();return{top:a.top-
(parseInt(this.helper.css("top"),10)||0)+this.scrollParent.scrollTop(),left:a.left-(parseInt(this.helper.css("left"),10)||0)+this.scrollParent.scrollLeft()}}else return{top:0,left:0}},_cacheMargins:function(){this.margins={left:parseInt(this.element.css("marginLeft"),10)||0,top:parseInt(this.element.css("marginTop"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var a=this.options;if(a.containment==
"parent")a.containment=this.helper[0].parentNode;if(a.containment=="document"||a.containment=="window")this.containment=[(a.containment=="document"?0:d(window).scrollLeft())-this.offset.relative.left-this.offset.parent.left,(a.containment=="document"?0:d(window).scrollTop())-this.offset.relative.top-this.offset.parent.top,(a.containment=="document"?0:d(window).scrollLeft())+d(a.containment=="document"?document:window).width()-this.helperProportions.width-this.margins.left,(a.containment=="document"?
0:d(window).scrollTop())+(d(a.containment=="document"?document:window).height()||document.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top];if(!/^(document|window|parent)$/.test(a.containment)&&a.containment.constructor!=Array){var b=d(a.containment)[0];if(b){a=d(a.containment).offset();var c=d(b).css("overflow")!="hidden";this.containment=[a.left+(parseInt(d(b).css("borderLeftWidth"),10)||0)+(parseInt(d(b).css("paddingLeft"),10)||0)-this.margins.left,a.top+(parseInt(d(b).css("borderTopWidth"),
10)||0)+(parseInt(d(b).css("paddingTop"),10)||0)-this.margins.top,a.left+(c?Math.max(b.scrollWidth,b.offsetWidth):b.offsetWidth)-(parseInt(d(b).css("borderLeftWidth"),10)||0)-(parseInt(d(b).css("paddingRight"),10)||0)-this.helperProportions.width-this.margins.left,a.top+(c?Math.max(b.scrollHeight,b.offsetHeight):b.offsetHeight)-(parseInt(d(b).css("borderTopWidth"),10)||0)-(parseInt(d(b).css("paddingBottom"),10)||0)-this.helperProportions.height-this.margins.top]}}else if(a.containment.constructor==
Array)this.containment=a.containment},_convertPositionTo:function(a,b){if(!b)b=this.position;a=a=="absolute"?1:-1;var c=this.cssPosition=="absolute"&&!(this.scrollParent[0]!=document&&d.ui.contains(this.scrollParent[0],this.offsetParent[0]))?this.offsetParent:this.scrollParent,f=/(html|body)/i.test(c[0].tagName);return{top:b.top+this.offset.relative.top*a+this.offset.parent.top*a-(d.browser.safari&&d.browser.version<526&&this.cssPosition=="fixed"?0:(this.cssPosition=="fixed"?-this.scrollParent.scrollTop():
f?0:c.scrollTop())*a),left:b.left+this.offset.relative.left*a+this.offset.parent.left*a-(d.browser.safari&&d.browser.version<526&&this.cssPosition=="fixed"?0:(this.cssPosition=="fixed"?-this.scrollParent.scrollLeft():f?0:c.scrollLeft())*a)}},_generatePosition:function(a){var b=this.options,c=this.cssPosition=="absolute"&&!(this.scrollParent[0]!=document&&d.ui.contains(this.scrollParent[0],this.offsetParent[0]))?this.offsetParent:this.scrollParent,f=/(html|body)/i.test(c[0].tagName),e=a.pageX,g=a.pageY;
if(this.originalPosition){if(this.containment){if(a.pageX-this.offset.click.left<this.containment[0])e=this.containment[0]+this.offset.click.left;if(a.pageY-this.offset.click.top<this.containment[1])g=this.containment[1]+this.offset.click.top;if(a.pageX-this.offset.click.left>this.containment[2])e=this.containment[2]+this.offset.click.left;if(a.pageY-this.offset.click.top>this.containment[3])g=this.containment[3]+this.offset.click.top}if(b.grid){g=this.originalPageY+Math.round((g-this.originalPageY)/
b.grid[1])*b.grid[1];g=this.containment?!(g-this.offset.click.top<this.containment[1]||g-this.offset.click.top>this.containment[3])?g:!(g-this.offset.click.top<this.containment[1])?g-b.grid[1]:g+b.grid[1]:g;e=this.originalPageX+Math.round((e-this.originalPageX)/b.grid[0])*b.grid[0];e=this.containment?!(e-this.offset.click.left<this.containment[0]||e-this.offset.click.left>this.containment[2])?e:!(e-this.offset.click.left<this.containment[0])?e-b.grid[0]:e+b.grid[0]:e}}return{top:g-this.offset.click.top-
this.offset.relative.top-this.offset.parent.top+(d.browser.safari&&d.browser.version<526&&this.cssPosition=="fixed"?0:this.cssPosition=="fixed"?-this.scrollParent.scrollTop():f?0:c.scrollTop()),left:e-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+(d.browser.safari&&d.browser.version<526&&this.cssPosition=="fixed"?0:this.cssPosition=="fixed"?-this.scrollParent.scrollLeft():f?0:c.scrollLeft())}},_clear:function(){this.helper.removeClass("ui-draggable-dragging");this.helper[0]!=
this.element[0]&&!this.cancelHelperRemoval&&this.helper.remove();this.helper=null;this.cancelHelperRemoval=false},_trigger:function(a,b,c){c=c||this._uiHash();d.ui.plugin.call(this,a,[b,c]);if(a=="drag")this.positionAbs=this._convertPositionTo("absolute");return d.Widget.prototype._trigger.call(this,a,b,c)},plugins:{},_uiHash:function(){return{helper:this.helper,position:this.position,originalPosition:this.originalPosition,offset:this.positionAbs}}});d.extend(d.ui.draggable,{version:"1.8.7"});
d.ui.plugin.add("draggable","connectToSortable",{start:function(a,b){var c=d(this).data("draggable"),f=c.options,e=d.extend({},b,{item:c.element});c.sortables=[];d(f.connectToSortable).each(function(){var g=d.data(this,"sortable");if(g&&!g.options.disabled){c.sortables.push({instance:g,shouldRevert:g.options.revert});g._refreshItems();g._trigger("activate",a,e)}})},stop:function(a,b){var c=d(this).data("draggable"),f=d.extend({},b,{item:c.element});d.each(c.sortables,function(){if(this.instance.isOver){this.instance.isOver=
0;c.cancelHelperRemoval=true;this.instance.cancelHelperRemoval=false;if(this.shouldRevert)this.instance.options.revert=true;this.instance._mouseStop(a);this.instance.options.helper=this.instance.options._helper;c.options.helper=="original"&&this.instance.currentItem.css({top:"auto",left:"auto"})}else{this.instance.cancelHelperRemoval=false;this.instance._trigger("deactivate",a,f)}})},drag:function(a,b){var c=d(this).data("draggable"),f=this;d.each(c.sortables,function(){this.instance.positionAbs=
c.positionAbs;this.instance.helperProportions=c.helperProportions;this.instance.offset.click=c.offset.click;if(this.instance._intersectsWith(this.instance.containerCache)){if(!this.instance.isOver){this.instance.isOver=1;this.instance.currentItem=d(f).clone().appendTo(this.instance.element).data("sortable-item",true);this.instance.options._helper=this.instance.options.helper;this.instance.options.helper=function(){return b.helper[0]};a.target=this.instance.currentItem[0];this.instance._mouseCapture(a,
true);this.instance._mouseStart(a,true,true);this.instance.offset.click.top=c.offset.click.top;this.instance.offset.click.left=c.offset.click.left;this.instance.offset.parent.left-=c.offset.parent.left-this.instance.offset.parent.left;this.instance.offset.parent.top-=c.offset.parent.top-this.instance.offset.parent.top;c._trigger("toSortable",a);c.dropped=this.instance.element;c.currentItem=c.element;this.instance.fromOutside=c}this.instance.currentItem&&this.instance._mouseDrag(a)}else if(this.instance.isOver){this.instance.isOver=
0;this.instance.cancelHelperRemoval=true;this.instance.options.revert=false;this.instance._trigger("out",a,this.instance._uiHash(this.instance));this.instance._mouseStop(a,true);this.instance.options.helper=this.instance.options._helper;this.instance.currentItem.remove();this.instance.placeholder&&this.instance.placeholder.remove();c._trigger("fromSortable",a);c.dropped=false}})}});d.ui.plugin.add("draggable","cursor",{start:function(){var a=d("body"),b=d(this).data("draggable").options;if(a.css("cursor"))b._cursor=
a.css("cursor");a.css("cursor",b.cursor)},stop:function(){var a=d(this).data("draggable").options;a._cursor&&d("body").css("cursor",a._cursor)}});d.ui.plugin.add("draggable","iframeFix",{start:function(){var a=d(this).data("draggable").options;d(a.iframeFix===true?"iframe":a.iframeFix).each(function(){d('<div class="ui-draggable-iframeFix" style="background: #fff;"></div>').css({width:this.offsetWidth+"px",height:this.offsetHeight+"px",position:"absolute",opacity:"0.001",zIndex:1E3}).css(d(this).offset()).appendTo("body")})},
stop:function(){d("div.ui-draggable-iframeFix").each(function(){this.parentNode.removeChild(this)})}});d.ui.plugin.add("draggable","opacity",{start:function(a,b){a=d(b.helper);b=d(this).data("draggable").options;if(a.css("opacity"))b._opacity=a.css("opacity");a.css("opacity",b.opacity)},stop:function(a,b){a=d(this).data("draggable").options;a._opacity&&d(b.helper).css("opacity",a._opacity)}});d.ui.plugin.add("draggable","scroll",{start:function(){var a=d(this).data("draggable");if(a.scrollParent[0]!=
document&&a.scrollParent[0].tagName!="HTML")a.overflowOffset=a.scrollParent.offset()},drag:function(a){var b=d(this).data("draggable"),c=b.options,f=false;if(b.scrollParent[0]!=document&&b.scrollParent[0].tagName!="HTML"){if(!c.axis||c.axis!="x")if(b.overflowOffset.top+b.scrollParent[0].offsetHeight-a.pageY<c.scrollSensitivity)b.scrollParent[0].scrollTop=f=b.scrollParent[0].scrollTop+c.scrollSpeed;else if(a.pageY-b.overflowOffset.top<c.scrollSensitivity)b.scrollParent[0].scrollTop=f=b.scrollParent[0].scrollTop-
c.scrollSpeed;if(!c.axis||c.axis!="y")if(b.overflowOffset.left+b.scrollParent[0].offsetWidth-a.pageX<c.scrollSensitivity)b.scrollParent[0].scrollLeft=f=b.scrollParent[0].scrollLeft+c.scrollSpeed;else if(a.pageX-b.overflowOffset.left<c.scrollSensitivity)b.scrollParent[0].scrollLeft=f=b.scrollParent[0].scrollLeft-c.scrollSpeed}else{if(!c.axis||c.axis!="x")if(a.pageY-d(document).scrollTop()<c.scrollSensitivity)f=d(document).scrollTop(d(document).scrollTop()-c.scrollSpeed);else if(d(window).height()-
(a.pageY-d(document).scrollTop())<c.scrollSensitivity)f=d(document).scrollTop(d(document).scrollTop()+c.scrollSpeed);if(!c.axis||c.axis!="y")if(a.pageX-d(document).scrollLeft()<c.scrollSensitivity)f=d(document).scrollLeft(d(document).scrollLeft()-c.scrollSpeed);else if(d(window).width()-(a.pageX-d(document).scrollLeft())<c.scrollSensitivity)f=d(document).scrollLeft(d(document).scrollLeft()+c.scrollSpeed)}f!==false&&d.ui.ddmanager&&!c.dropBehaviour&&d.ui.ddmanager.prepareOffsets(b,a)}});d.ui.plugin.add("draggable",
"snap",{start:function(){var a=d(this).data("draggable"),b=a.options;a.snapElements=[];d(b.snap.constructor!=String?b.snap.items||":data(draggable)":b.snap).each(function(){var c=d(this),f=c.offset();this!=a.element[0]&&a.snapElements.push({item:this,width:c.outerWidth(),height:c.outerHeight(),top:f.top,left:f.left})})},drag:function(a,b){for(var c=d(this).data("draggable"),f=c.options,e=f.snapTolerance,g=b.offset.left,n=g+c.helperProportions.width,m=b.offset.top,o=m+c.helperProportions.height,h=
c.snapElements.length-1;h>=0;h--){var i=c.snapElements[h].left,k=i+c.snapElements[h].width,j=c.snapElements[h].top,l=j+c.snapElements[h].height;if(i-e<g&&g<k+e&&j-e<m&&m<l+e||i-e<g&&g<k+e&&j-e<o&&o<l+e||i-e<n&&n<k+e&&j-e<m&&m<l+e||i-e<n&&n<k+e&&j-e<o&&o<l+e){if(f.snapMode!="inner"){var p=Math.abs(j-o)<=e,q=Math.abs(l-m)<=e,r=Math.abs(i-n)<=e,s=Math.abs(k-g)<=e;if(p)b.position.top=c._convertPositionTo("relative",{top:j-c.helperProportions.height,left:0}).top-c.margins.top;if(q)b.position.top=c._convertPositionTo("relative",
{top:l,left:0}).top-c.margins.top;if(r)b.position.left=c._convertPositionTo("relative",{top:0,left:i-c.helperProportions.width}).left-c.margins.left;if(s)b.position.left=c._convertPositionTo("relative",{top:0,left:k}).left-c.margins.left}var t=p||q||r||s;if(f.snapMode!="outer"){p=Math.abs(j-m)<=e;q=Math.abs(l-o)<=e;r=Math.abs(i-g)<=e;s=Math.abs(k-n)<=e;if(p)b.position.top=c._convertPositionTo("relative",{top:j,left:0}).top-c.margins.top;if(q)b.position.top=c._convertPositionTo("relative",{top:l-c.helperProportions.height,
left:0}).top-c.margins.top;if(r)b.position.left=c._convertPositionTo("relative",{top:0,left:i}).left-c.margins.left;if(s)b.position.left=c._convertPositionTo("relative",{top:0,left:k-c.helperProportions.width}).left-c.margins.left}if(!c.snapElements[h].snapping&&(p||q||r||s||t))c.options.snap.snap&&c.options.snap.snap.call(c.element,a,d.extend(c._uiHash(),{snapItem:c.snapElements[h].item}));c.snapElements[h].snapping=p||q||r||s||t}else{c.snapElements[h].snapping&&c.options.snap.release&&c.options.snap.release.call(c.element,
a,d.extend(c._uiHash(),{snapItem:c.snapElements[h].item}));c.snapElements[h].snapping=false}}}});d.ui.plugin.add("draggable","stack",{start:function(){var a=d(this).data("draggable").options;a=d.makeArray(d(a.stack)).sort(function(c,f){return(parseInt(d(c).css("zIndex"),10)||0)-(parseInt(d(f).css("zIndex"),10)||0)});if(a.length){var b=parseInt(a[0].style.zIndex)||0;d(a).each(function(c){this.style.zIndex=b+c});this[0].style.zIndex=b+a.length}}});d.ui.plugin.add("draggable","zIndex",{start:function(a,
b){a=d(b.helper);b=d(this).data("draggable").options;if(a.css("zIndex"))b._zIndex=a.css("zIndex");a.css("zIndex",b.zIndex)},stop:function(a,b){a=d(this).data("draggable").options;a._zIndex&&d(b.helper).css("zIndex",a._zIndex)}})})(jQuery);
;

/*
 * jQuery UI Position 1.8.7
 *
 * Copyright 2010, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Position
 */
(function(c){c.ui=c.ui||{};var n=/left|center|right/,o=/top|center|bottom/,t=c.fn.position,u=c.fn.offset;c.fn.position=function(b){if(!b||!b.of)return t.apply(this,arguments);b=c.extend({},b);var a=c(b.of),d=a[0],g=(b.collision||"flip").split(" "),e=b.offset?b.offset.split(" "):[0,0],h,k,j;if(d.nodeType===9){h=a.width();k=a.height();j={top:0,left:0}}else if(d.setTimeout){h=a.width();k=a.height();j={top:a.scrollTop(),left:a.scrollLeft()}}else if(d.preventDefault){b.at="left top";h=k=0;j={top:b.of.pageY,
left:b.of.pageX}}else{h=a.outerWidth();k=a.outerHeight();j=a.offset()}c.each(["my","at"],function(){var f=(b[this]||"").split(" ");if(f.length===1)f=n.test(f[0])?f.concat(["center"]):o.test(f[0])?["center"].concat(f):["center","center"];f[0]=n.test(f[0])?f[0]:"center";f[1]=o.test(f[1])?f[1]:"center";b[this]=f});if(g.length===1)g[1]=g[0];e[0]=parseInt(e[0],10)||0;if(e.length===1)e[1]=e[0];e[1]=parseInt(e[1],10)||0;if(b.at[0]==="right")j.left+=h;else if(b.at[0]==="center")j.left+=h/2;if(b.at[1]==="bottom")j.top+=
k;else if(b.at[1]==="center")j.top+=k/2;j.left+=e[0];j.top+=e[1];return this.each(function(){var f=c(this),l=f.outerWidth(),m=f.outerHeight(),p=parseInt(c.curCSS(this,"marginLeft",true))||0,q=parseInt(c.curCSS(this,"marginTop",true))||0,v=l+p+parseInt(c.curCSS(this,"marginRight",true))||0,w=m+q+parseInt(c.curCSS(this,"marginBottom",true))||0,i=c.extend({},j),r;if(b.my[0]==="right")i.left-=l;else if(b.my[0]==="center")i.left-=l/2;if(b.my[1]==="bottom")i.top-=m;else if(b.my[1]==="center")i.top-=m/2;
i.left=Math.round(i.left);i.top=Math.round(i.top);r={left:i.left-p,top:i.top-q};c.each(["left","top"],function(s,x){c.ui.position[g[s]]&&c.ui.position[g[s]][x](i,{targetWidth:h,targetHeight:k,elemWidth:l,elemHeight:m,collisionPosition:r,collisionWidth:v,collisionHeight:w,offset:e,my:b.my,at:b.at})});c.fn.bgiframe&&f.bgiframe();f.offset(c.extend(i,{using:b.using}))})};c.ui.position={fit:{left:function(b,a){var d=c(window);d=a.collisionPosition.left+a.collisionWidth-d.width()-d.scrollLeft();b.left=
d>0?b.left-d:Math.max(b.left-a.collisionPosition.left,b.left)},top:function(b,a){var d=c(window);d=a.collisionPosition.top+a.collisionHeight-d.height()-d.scrollTop();b.top=d>0?b.top-d:Math.max(b.top-a.collisionPosition.top,b.top)}},flip:{left:function(b,a){if(a.at[0]!=="center"){var d=c(window);d=a.collisionPosition.left+a.collisionWidth-d.width()-d.scrollLeft();var g=a.my[0]==="left"?-a.elemWidth:a.my[0]==="right"?a.elemWidth:0,e=a.at[0]==="left"?a.targetWidth:-a.targetWidth,h=-2*a.offset[0];b.left+=
a.collisionPosition.left<0?g+e+h:d>0?g+e+h:0}},top:function(b,a){if(a.at[1]!=="center"){var d=c(window);d=a.collisionPosition.top+a.collisionHeight-d.height()-d.scrollTop();var g=a.my[1]==="top"?-a.elemHeight:a.my[1]==="bottom"?a.elemHeight:0,e=a.at[1]==="top"?a.targetHeight:-a.targetHeight,h=-2*a.offset[1];b.top+=a.collisionPosition.top<0?g+e+h:d>0?g+e+h:0}}}};if(!c.offset.setOffset){c.offset.setOffset=function(b,a){if(/static/.test(c.curCSS(b,"position")))b.style.position="relative";var d=c(b),
g=d.offset(),e=parseInt(c.curCSS(b,"top",true),10)||0,h=parseInt(c.curCSS(b,"left",true),10)||0;g={top:a.top-g.top+e,left:a.left-g.left+h};"using"in a?a.using.call(b,g):d.css(g)};c.fn.offset=function(b){var a=this[0];if(!a||!a.ownerDocument)return null;if(b)return this.each(function(){c.offset.setOffset(this,b)});return u.call(this)}}})(jQuery);
;

/*
 * jQuery UI Dialog 1.8.7
 *
 * Copyright 2010, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Dialog
 *
 * Depends:
 *	jquery.ui.core.js
 *	jquery.ui.widget.js
 *  jquery.ui.button.js
 *	jquery.ui.draggable.js
 *	jquery.ui.mouse.js
 *	jquery.ui.position.js
 *	jquery.ui.resizable.js
 */
(function(c,j){var k={buttons:true,height:true,maxHeight:true,maxWidth:true,minHeight:true,minWidth:true,width:true},l={maxHeight:true,maxWidth:true,minHeight:true,minWidth:true};c.widget("ui.dialog",{options:{autoOpen:true,buttons:{},closeOnEscape:true,closeText:"close",dialogClass:"",draggable:true,hide:null,height:"auto",maxHeight:false,maxWidth:false,minHeight:150,minWidth:150,modal:false,position:{my:"center",at:"center",collision:"fit",using:function(a){var b=c(this).css(a).offset().top;b<0&&
c(this).css("top",a.top-b)}},resizable:true,show:null,stack:true,title:"",width:300,zIndex:1E3},_create:function(){this.originalTitle=this.element.attr("title");if(typeof this.originalTitle!=="string")this.originalTitle="";this.options.title=this.options.title||this.originalTitle;var a=this,b=a.options,d=b.title||"&#160;",e=c.ui.dialog.getTitleId(a.element),g=(a.uiDialog=c("<div></div>")).appendTo(document.body).hide().addClass("ui-dialog ui-widget ui-widget-content ui-corner-all "+b.dialogClass).css({zIndex:b.zIndex}).attr("tabIndex",
-1).css("outline",0).keydown(function(i){if(b.closeOnEscape&&i.keyCode&&i.keyCode===c.ui.keyCode.ESCAPE){a.close(i);i.preventDefault()}}).attr({role:"dialog","aria-labelledby":e}).mousedown(function(i){a.moveToTop(false,i)});a.element.show().removeAttr("title").addClass("ui-dialog-content ui-widget-content").appendTo(g);var f=(a.uiDialogTitlebar=c("<div></div>")).addClass("ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix").prependTo(g),h=c('<a href="#"></a>').addClass("ui-dialog-titlebar-close ui-corner-all").attr("role",
"button").hover(function(){h.addClass("ui-state-hover")},function(){h.removeClass("ui-state-hover")}).focus(function(){h.addClass("ui-state-focus")}).blur(function(){h.removeClass("ui-state-focus")}).click(function(i){a.close(i);return false}).appendTo(f);(a.uiDialogTitlebarCloseText=c("<span></span>")).addClass("ui-icon ui-icon-closethick").text(b.closeText).appendTo(h);c("<span></span>").addClass("ui-dialog-title").attr("id",e).html(d).prependTo(f);if(c.isFunction(b.beforeclose)&&!c.isFunction(b.beforeClose))b.beforeClose=
b.beforeclose;f.find("*").add(f).disableSelection();b.draggable&&c.fn.draggable&&a._makeDraggable();b.resizable&&c.fn.resizable&&a._makeResizable();a._createButtons(b.buttons);a._isOpen=false;c.fn.bgiframe&&g.bgiframe()},_init:function(){this.options.autoOpen&&this.open()},destroy:function(){var a=this;a.overlay&&a.overlay.destroy();a.uiDialog.hide();a.element.unbind(".dialog").removeData("dialog").removeClass("ui-dialog-content ui-widget-content").hide().appendTo("body");a.uiDialog.remove();a.originalTitle&&
a.element.attr("title",a.originalTitle);return a},widget:function(){return this.uiDialog},close:function(a){var b=this,d,e;if(false!==b._trigger("beforeClose",a)){b.overlay&&b.overlay.destroy();b.uiDialog.unbind("keypress.ui-dialog");b._isOpen=false;if(b.options.hide)b.uiDialog.hide(b.options.hide,function(){b._trigger("close",a)});else{b.uiDialog.hide();b._trigger("close",a)}c.ui.dialog.overlay.resize();if(b.options.modal){d=0;c(".ui-dialog").each(function(){if(this!==b.uiDialog[0]){e=c(this).css("z-index");
isNaN(e)||(d=Math.max(d,e))}});c.ui.dialog.maxZ=d}return b}},isOpen:function(){return this._isOpen},moveToTop:function(a,b){var d=this,e=d.options;if(e.modal&&!a||!e.stack&&!e.modal)return d._trigger("focus",b);if(e.zIndex>c.ui.dialog.maxZ)c.ui.dialog.maxZ=e.zIndex;if(d.overlay){c.ui.dialog.maxZ+=1;d.overlay.$el.css("z-index",c.ui.dialog.overlay.maxZ=c.ui.dialog.maxZ)}a={scrollTop:d.element.attr("scrollTop"),scrollLeft:d.element.attr("scrollLeft")};c.ui.dialog.maxZ+=1;d.uiDialog.css("z-index",c.ui.dialog.maxZ);
d.element.attr(a);d._trigger("focus",b);return d},open:function(){if(!this._isOpen){var a=this,b=a.options,d=a.uiDialog;a.overlay=b.modal?new c.ui.dialog.overlay(a):null;a._size();a._position(b.position);d.show(b.show);a.moveToTop(true);b.modal&&d.bind("keypress.ui-dialog",function(e){if(e.keyCode===c.ui.keyCode.TAB){var g=c(":tabbable",this),f=g.filter(":first");g=g.filter(":last");if(e.target===g[0]&&!e.shiftKey){f.focus(1);return false}else if(e.target===f[0]&&e.shiftKey){g.focus(1);return false}}});
c(a.element.find(":tabbable").get().concat(d.find(".ui-dialog-buttonpane :tabbable").get().concat(d.get()))).eq(0).focus();a._isOpen=true;a._trigger("open");return a}},_createButtons:function(a){var b=this,d=false,e=c("<div></div>").addClass("ui-dialog-buttonpane ui-widget-content ui-helper-clearfix"),g=c("<div></div>").addClass("ui-dialog-buttonset").appendTo(e);b.uiDialog.find(".ui-dialog-buttonpane").remove();typeof a==="object"&&a!==null&&c.each(a,function(){return!(d=true)});if(d){c.each(a,function(f,
h){h=c.isFunction(h)?{click:h,text:f}:h;f=c('<button type="button"></button>').attr(h,true).unbind("click").click(function(){h.click.apply(b.element[0],arguments)}).appendTo(g);c.fn.button&&f.button()});e.appendTo(b.uiDialog)}},_makeDraggable:function(){function a(f){return{position:f.position,offset:f.offset}}var b=this,d=b.options,e=c(document),g;b.uiDialog.draggable({cancel:".ui-dialog-content, .ui-dialog-titlebar-close",handle:".ui-dialog-titlebar",containment:"document",start:function(f,h){g=
d.height==="auto"?"auto":c(this).height();c(this).height(c(this).height()).addClass("ui-dialog-dragging");b._trigger("dragStart",f,a(h))},drag:function(f,h){b._trigger("drag",f,a(h))},stop:function(f,h){d.position=[h.position.left-e.scrollLeft(),h.position.top-e.scrollTop()];c(this).removeClass("ui-dialog-dragging").height(g);b._trigger("dragStop",f,a(h));c.ui.dialog.overlay.resize()}})},_makeResizable:function(a){function b(f){return{originalPosition:f.originalPosition,originalSize:f.originalSize,
position:f.position,size:f.size}}a=a===j?this.options.resizable:a;var d=this,e=d.options,g=d.uiDialog.css("position");a=typeof a==="string"?a:"n,e,s,w,se,sw,ne,nw";d.uiDialog.resizable({cancel:".ui-dialog-content",containment:"document",alsoResize:d.element,maxWidth:e.maxWidth,maxHeight:e.maxHeight,minWidth:e.minWidth,minHeight:d._minHeight(),handles:a,start:function(f,h){c(this).addClass("ui-dialog-resizing");d._trigger("resizeStart",f,b(h))},resize:function(f,h){d._trigger("resize",f,b(h))},stop:function(f,
h){c(this).removeClass("ui-dialog-resizing");e.height=c(this).height();e.width=c(this).width();d._trigger("resizeStop",f,b(h));c.ui.dialog.overlay.resize()}}).css("position",g).find(".ui-resizable-se").addClass("ui-icon ui-icon-grip-diagonal-se")},_minHeight:function(){var a=this.options;return a.height==="auto"?a.minHeight:Math.min(a.minHeight,a.height)},_position:function(a){var b=[],d=[0,0],e;if(a){if(typeof a==="string"||typeof a==="object"&&"0"in a){b=a.split?a.split(" "):[a[0],a[1]];if(b.length===
1)b[1]=b[0];c.each(["left","top"],function(g,f){if(+b[g]===b[g]){d[g]=b[g];b[g]=f}});a={my:b.join(" "),at:b.join(" "),offset:d.join(" ")}}a=c.extend({},c.ui.dialog.prototype.options.position,a)}else a=c.ui.dialog.prototype.options.position;(e=this.uiDialog.is(":visible"))||this.uiDialog.show();this.uiDialog.css({top:0,left:0}).position(c.extend({of:window},a));e||this.uiDialog.hide()},_setOptions:function(a){var b=this,d={},e=false;c.each(a,function(g,f){b._setOption(g,f);if(g in k)e=true;if(g in
l)d[g]=f});e&&this._size();this.uiDialog.is(":data(resizable)")&&this.uiDialog.resizable("option",d)},_setOption:function(a,b){var d=this,e=d.uiDialog;switch(a){case "beforeclose":a="beforeClose";break;case "buttons":d._createButtons(b);break;case "closeText":d.uiDialogTitlebarCloseText.text(""+b);break;case "dialogClass":e.removeClass(d.options.dialogClass).addClass("ui-dialog ui-widget ui-widget-content ui-corner-all "+b);break;case "disabled":b?e.addClass("ui-dialog-disabled"):e.removeClass("ui-dialog-disabled");
break;case "draggable":var g=e.is(":data(draggable)");g&&!b&&e.draggable("destroy");!g&&b&&d._makeDraggable();break;case "position":d._position(b);break;case "resizable":(g=e.is(":data(resizable)"))&&!b&&e.resizable("destroy");g&&typeof b==="string"&&e.resizable("option","handles",b);!g&&b!==false&&d._makeResizable(b);break;case "title":c(".ui-dialog-title",d.uiDialogTitlebar).html(""+(b||"&#160;"));break}c.Widget.prototype._setOption.apply(d,arguments)},_size:function(){var a=this.options,b,d,e=
this.uiDialog.is(":visible");this.element.show().css({width:"auto",minHeight:0,height:0});if(a.minWidth>a.width)a.width=a.minWidth;b=this.uiDialog.css({height:"auto",width:a.width}).height();d=Math.max(0,a.minHeight-b);if(a.height==="auto")if(c.support.minHeight)this.element.css({minHeight:d,height:"auto"});else{this.uiDialog.show();a=this.element.css("height","auto").height();e||this.uiDialog.hide();this.element.height(Math.max(a,d))}else this.element.height(Math.max(a.height-b,0));this.uiDialog.is(":data(resizable)")&&
this.uiDialog.resizable("option","minHeight",this._minHeight())}});c.extend(c.ui.dialog,{version:"1.8.7",uuid:0,maxZ:0,getTitleId:function(a){a=a.attr("id");if(!a){this.uuid+=1;a=this.uuid}return"ui-dialog-title-"+a},overlay:function(a){this.$el=c.ui.dialog.overlay.create(a)}});c.extend(c.ui.dialog.overlay,{instances:[],oldInstances:[],maxZ:0,events:c.map("focus,mousedown,mouseup,keydown,keypress,click".split(","),function(a){return a+".dialog-overlay"}).join(" "),create:function(a){if(this.instances.length===
0){setTimeout(function(){c.ui.dialog.overlay.instances.length&&c(document).bind(c.ui.dialog.overlay.events,function(d){if(c(d.target).zIndex()<c.ui.dialog.overlay.maxZ)return false})},1);c(document).bind("keydown.dialog-overlay",function(d){if(a.options.closeOnEscape&&d.keyCode&&d.keyCode===c.ui.keyCode.ESCAPE){a.close(d);d.preventDefault()}});c(window).bind("resize.dialog-overlay",c.ui.dialog.overlay.resize)}var b=(this.oldInstances.pop()||c("<div></div>").addClass("ui-widget-overlay")).appendTo(document.body).css({width:this.width(),
height:this.height()});c.fn.bgiframe&&b.bgiframe();this.instances.push(b);return b},destroy:function(a){var b=c.inArray(a,this.instances);b!=-1&&this.oldInstances.push(this.instances.splice(b,1)[0]);this.instances.length===0&&c([document,window]).unbind(".dialog-overlay");a.remove();var d=0;c.each(this.instances,function(){d=Math.max(d,this.css("z-index"))});this.maxZ=d},height:function(){var a,b;if(c.browser.msie&&c.browser.version<7){a=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight);
b=Math.max(document.documentElement.offsetHeight,document.body.offsetHeight);return a<b?c(window).height()+"px":a+"px"}else return c(document).height()+"px"},width:function(){var a,b;if(c.browser.msie&&c.browser.version<7){a=Math.max(document.documentElement.scrollWidth,document.body.scrollWidth);b=Math.max(document.documentElement.offsetWidth,document.body.offsetWidth);return a<b?c(window).width()+"px":a+"px"}else return c(document).width()+"px"},resize:function(){var a=c([]);c.each(c.ui.dialog.overlay.instances,
function(){a=a.add(this)});a.css({width:0,height:0}).css({width:c.ui.dialog.overlay.width(),height:c.ui.dialog.overlay.height()})}});c.extend(c.ui.dialog.overlay.prototype,{destroy:function(){c.ui.dialog.overlay.destroy(this.$el)}})})(jQuery);
;

/*
 * jQuery UI Resizable 1.8.7
 *
 * Copyright 2010, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Resizables
 *
 * Depends:
 *	jquery.ui.core.js
 *	jquery.ui.mouse.js
 *	jquery.ui.widget.js
 */
(function(e){e.widget("ui.resizable",e.ui.mouse,{widgetEventPrefix:"resize",options:{alsoResize:false,animate:false,animateDuration:"slow",animateEasing:"swing",aspectRatio:false,autoHide:false,containment:false,ghost:false,grid:false,handles:"e,s,se",helper:false,maxHeight:null,maxWidth:null,minHeight:10,minWidth:10,zIndex:1E3},_create:function(){var b=this,a=this.options;this.element.addClass("ui-resizable");e.extend(this,{_aspectRatio:!!a.aspectRatio,aspectRatio:a.aspectRatio,originalElement:this.element,
_proportionallyResizeElements:[],_helper:a.helper||a.ghost||a.animate?a.helper||"ui-resizable-helper":null});if(this.element[0].nodeName.match(/canvas|textarea|input|select|button|img/i)){/relative/.test(this.element.css("position"))&&e.browser.opera&&this.element.css({position:"relative",top:"auto",left:"auto"});this.element.wrap(e('<div class="ui-wrapper" style="overflow: hidden;"></div>').css({position:this.element.css("position"),width:this.element.outerWidth(),height:this.element.outerHeight(),
top:this.element.css("top"),left:this.element.css("left")}));this.element=this.element.parent().data("resizable",this.element.data("resizable"));this.elementIsWrapper=true;this.element.css({marginLeft:this.originalElement.css("marginLeft"),marginTop:this.originalElement.css("marginTop"),marginRight:this.originalElement.css("marginRight"),marginBottom:this.originalElement.css("marginBottom")});this.originalElement.css({marginLeft:0,marginTop:0,marginRight:0,marginBottom:0});this.originalResizeStyle=
this.originalElement.css("resize");this.originalElement.css("resize","none");this._proportionallyResizeElements.push(this.originalElement.css({position:"static",zoom:1,display:"block"}));this.originalElement.css({margin:this.originalElement.css("margin")});this._proportionallyResize()}this.handles=a.handles||(!e(".ui-resizable-handle",this.element).length?"e,s,se":{n:".ui-resizable-n",e:".ui-resizable-e",s:".ui-resizable-s",w:".ui-resizable-w",se:".ui-resizable-se",sw:".ui-resizable-sw",ne:".ui-resizable-ne",
nw:".ui-resizable-nw"});if(this.handles.constructor==String){if(this.handles=="all")this.handles="n,e,s,w,se,sw,ne,nw";var c=this.handles.split(",");this.handles={};for(var d=0;d<c.length;d++){var f=e.trim(c[d]),g=e('<div class="ui-resizable-handle '+("ui-resizable-"+f)+'"></div>');/sw|se|ne|nw/.test(f)&&g.css({zIndex:++a.zIndex});"se"==f&&g.addClass("ui-icon ui-icon-gripsmall-diagonal-se");this.handles[f]=".ui-resizable-"+f;this.element.append(g)}}this._renderAxis=function(h){h=h||this.element;for(var i in this.handles){if(this.handles[i].constructor==
String)this.handles[i]=e(this.handles[i],this.element).show();if(this.elementIsWrapper&&this.originalElement[0].nodeName.match(/textarea|input|select|button/i)){var j=e(this.handles[i],this.element),k=0;k=/sw|ne|nw|se|n|s/.test(i)?j.outerHeight():j.outerWidth();j=["padding",/ne|nw|n/.test(i)?"Top":/se|sw|s/.test(i)?"Bottom":/^e$/.test(i)?"Right":"Left"].join("");h.css(j,k);this._proportionallyResize()}e(this.handles[i])}};this._renderAxis(this.element);this._handles=e(".ui-resizable-handle",this.element).disableSelection();
this._handles.mouseover(function(){if(!b.resizing){if(this.className)var h=this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i);b.axis=h&&h[1]?h[1]:"se"}});if(a.autoHide){this._handles.hide();e(this.element).addClass("ui-resizable-autohide").hover(function(){e(this).removeClass("ui-resizable-autohide");b._handles.show()},function(){if(!b.resizing){e(this).addClass("ui-resizable-autohide");b._handles.hide()}})}this._mouseInit()},destroy:function(){this._mouseDestroy();var b=function(c){e(c).removeClass("ui-resizable ui-resizable-disabled ui-resizable-resizing").removeData("resizable").unbind(".resizable").find(".ui-resizable-handle").remove()};
if(this.elementIsWrapper){b(this.element);var a=this.element;a.after(this.originalElement.css({position:a.css("position"),width:a.outerWidth(),height:a.outerHeight(),top:a.css("top"),left:a.css("left")})).remove()}this.originalElement.css("resize",this.originalResizeStyle);b(this.originalElement);return this},_mouseCapture:function(b){var a=false;for(var c in this.handles)if(e(this.handles[c])[0]==b.target)a=true;return!this.options.disabled&&a},_mouseStart:function(b){var a=this.options,c=this.element.position(),
d=this.element;this.resizing=true;this.documentScroll={top:e(document).scrollTop(),left:e(document).scrollLeft()};if(d.is(".ui-draggable")||/absolute/.test(d.css("position")))d.css({position:"absolute",top:c.top,left:c.left});e.browser.opera&&/relative/.test(d.css("position"))&&d.css({position:"relative",top:"auto",left:"auto"});this._renderProxy();c=m(this.helper.css("left"));var f=m(this.helper.css("top"));if(a.containment){c+=e(a.containment).scrollLeft()||0;f+=e(a.containment).scrollTop()||0}this.offset=
this.helper.offset();this.position={left:c,top:f};this.size=this._helper?{width:d.outerWidth(),height:d.outerHeight()}:{width:d.width(),height:d.height()};this.originalSize=this._helper?{width:d.outerWidth(),height:d.outerHeight()}:{width:d.width(),height:d.height()};this.originalPosition={left:c,top:f};this.sizeDiff={width:d.outerWidth()-d.width(),height:d.outerHeight()-d.height()};this.originalMousePosition={left:b.pageX,top:b.pageY};this.aspectRatio=typeof a.aspectRatio=="number"?a.aspectRatio:
this.originalSize.width/this.originalSize.height||1;a=e(".ui-resizable-"+this.axis).css("cursor");e("body").css("cursor",a=="auto"?this.axis+"-resize":a);d.addClass("ui-resizable-resizing");this._propagate("start",b);return true},_mouseDrag:function(b){var a=this.helper,c=this.originalMousePosition,d=this._change[this.axis];if(!d)return false;c=d.apply(this,[b,b.pageX-c.left||0,b.pageY-c.top||0]);if(this._aspectRatio||b.shiftKey)c=this._updateRatio(c,b);c=this._respectSize(c,b);this._propagate("resize",
b);a.css({top:this.position.top+"px",left:this.position.left+"px",width:this.size.width+"px",height:this.size.height+"px"});!this._helper&&this._proportionallyResizeElements.length&&this._proportionallyResize();this._updateCache(c);this._trigger("resize",b,this.ui());return false},_mouseStop:function(b){this.resizing=false;var a=this.options,c=this;if(this._helper){var d=this._proportionallyResizeElements,f=d.length&&/textarea/i.test(d[0].nodeName);d=f&&e.ui.hasScroll(d[0],"left")?0:c.sizeDiff.height;
f={width:c.size.width-(f?0:c.sizeDiff.width),height:c.size.height-d};d=parseInt(c.element.css("left"),10)+(c.position.left-c.originalPosition.left)||null;var g=parseInt(c.element.css("top"),10)+(c.position.top-c.originalPosition.top)||null;a.animate||this.element.css(e.extend(f,{top:g,left:d}));c.helper.height(c.size.height);c.helper.width(c.size.width);this._helper&&!a.animate&&this._proportionallyResize()}e("body").css("cursor","auto");this.element.removeClass("ui-resizable-resizing");this._propagate("stop",
b);this._helper&&this.helper.remove();return false},_updateCache:function(b){this.offset=this.helper.offset();if(l(b.left))this.position.left=b.left;if(l(b.top))this.position.top=b.top;if(l(b.height))this.size.height=b.height;if(l(b.width))this.size.width=b.width},_updateRatio:function(b){var a=this.position,c=this.size,d=this.axis;if(b.height)b.width=c.height*this.aspectRatio;else if(b.width)b.height=c.width/this.aspectRatio;if(d=="sw"){b.left=a.left+(c.width-b.width);b.top=null}if(d=="nw"){b.top=
a.top+(c.height-b.height);b.left=a.left+(c.width-b.width)}return b},_respectSize:function(b){var a=this.options,c=this.axis,d=l(b.width)&&a.maxWidth&&a.maxWidth<b.width,f=l(b.height)&&a.maxHeight&&a.maxHeight<b.height,g=l(b.width)&&a.minWidth&&a.minWidth>b.width,h=l(b.height)&&a.minHeight&&a.minHeight>b.height;if(g)b.width=a.minWidth;if(h)b.height=a.minHeight;if(d)b.width=a.maxWidth;if(f)b.height=a.maxHeight;var i=this.originalPosition.left+this.originalSize.width,j=this.position.top+this.size.height,
k=/sw|nw|w/.test(c);c=/nw|ne|n/.test(c);if(g&&k)b.left=i-a.minWidth;if(d&&k)b.left=i-a.maxWidth;if(h&&c)b.top=j-a.minHeight;if(f&&c)b.top=j-a.maxHeight;if((a=!b.width&&!b.height)&&!b.left&&b.top)b.top=null;else if(a&&!b.top&&b.left)b.left=null;return b},_proportionallyResize:function(){if(this._proportionallyResizeElements.length)for(var b=this.helper||this.element,a=0;a<this._proportionallyResizeElements.length;a++){var c=this._proportionallyResizeElements[a];if(!this.borderDif){var d=[c.css("borderTopWidth"),
c.css("borderRightWidth"),c.css("borderBottomWidth"),c.css("borderLeftWidth")],f=[c.css("paddingTop"),c.css("paddingRight"),c.css("paddingBottom"),c.css("paddingLeft")];this.borderDif=e.map(d,function(g,h){g=parseInt(g,10)||0;h=parseInt(f[h],10)||0;return g+h})}e.browser.msie&&(e(b).is(":hidden")||e(b).parents(":hidden").length)||c.css({height:b.height()-this.borderDif[0]-this.borderDif[2]||0,width:b.width()-this.borderDif[1]-this.borderDif[3]||0})}},_renderProxy:function(){var b=this.options;this.elementOffset=
this.element.offset();if(this._helper){this.helper=this.helper||e('<div style="overflow:hidden;"></div>');var a=e.browser.msie&&e.browser.version<7,c=a?1:0;a=a?2:-1;this.helper.addClass(this._helper).css({width:this.element.outerWidth()+a,height:this.element.outerHeight()+a,position:"absolute",left:this.elementOffset.left-c+"px",top:this.elementOffset.top-c+"px",zIndex:++b.zIndex});this.helper.appendTo("body").disableSelection()}else this.helper=this.element},_change:{e:function(b,a){return{width:this.originalSize.width+
a}},w:function(b,a){return{left:this.originalPosition.left+a,width:this.originalSize.width-a}},n:function(b,a,c){return{top:this.originalPosition.top+c,height:this.originalSize.height-c}},s:function(b,a,c){return{height:this.originalSize.height+c}},se:function(b,a,c){return e.extend(this._change.s.apply(this,arguments),this._change.e.apply(this,[b,a,c]))},sw:function(b,a,c){return e.extend(this._change.s.apply(this,arguments),this._change.w.apply(this,[b,a,c]))},ne:function(b,a,c){return e.extend(this._change.n.apply(this,
arguments),this._change.e.apply(this,[b,a,c]))},nw:function(b,a,c){return e.extend(this._change.n.apply(this,arguments),this._change.w.apply(this,[b,a,c]))}},_propagate:function(b,a){e.ui.plugin.call(this,b,[a,this.ui()]);b!="resize"&&this._trigger(b,a,this.ui())},plugins:{},ui:function(){return{originalElement:this.originalElement,element:this.element,helper:this.helper,position:this.position,size:this.size,originalSize:this.originalSize,originalPosition:this.originalPosition}}});e.extend(e.ui.resizable,
{version:"1.8.7"});e.ui.plugin.add("resizable","alsoResize",{start:function(){var b=e(this).data("resizable").options,a=function(c){e(c).each(function(){var d=e(this);d.data("resizable-alsoresize",{width:parseInt(d.width(),10),height:parseInt(d.height(),10),left:parseInt(d.css("left"),10),top:parseInt(d.css("top"),10),position:d.css("position")})})};if(typeof b.alsoResize=="object"&&!b.alsoResize.parentNode)if(b.alsoResize.length){b.alsoResize=b.alsoResize[0];a(b.alsoResize)}else e.each(b.alsoResize,
function(c){a(c)});else a(b.alsoResize)},resize:function(b,a){var c=e(this).data("resizable");b=c.options;var d=c.originalSize,f=c.originalPosition,g={height:c.size.height-d.height||0,width:c.size.width-d.width||0,top:c.position.top-f.top||0,left:c.position.left-f.left||0},h=function(i,j){e(i).each(function(){var k=e(this),q=e(this).data("resizable-alsoresize"),p={},r=j&&j.length?j:k.parents(a.originalElement[0]).length?["width","height"]:["width","height","top","left"];e.each(r,function(n,o){if((n=
(q[o]||0)+(g[o]||0))&&n>=0)p[o]=n||null});if(e.browser.opera&&/relative/.test(k.css("position"))){c._revertToRelativePosition=true;k.css({position:"absolute",top:"auto",left:"auto"})}k.css(p)})};typeof b.alsoResize=="object"&&!b.alsoResize.nodeType?e.each(b.alsoResize,function(i,j){h(i,j)}):h(b.alsoResize)},stop:function(){var b=e(this).data("resizable"),a=b.options,c=function(d){e(d).each(function(){var f=e(this);f.css({position:f.data("resizable-alsoresize").position})})};if(b._revertToRelativePosition){b._revertToRelativePosition=
false;typeof a.alsoResize=="object"&&!a.alsoResize.nodeType?e.each(a.alsoResize,function(d){c(d)}):c(a.alsoResize)}e(this).removeData("resizable-alsoresize")}});e.ui.plugin.add("resizable","animate",{stop:function(b){var a=e(this).data("resizable"),c=a.options,d=a._proportionallyResizeElements,f=d.length&&/textarea/i.test(d[0].nodeName),g=f&&e.ui.hasScroll(d[0],"left")?0:a.sizeDiff.height;f={width:a.size.width-(f?0:a.sizeDiff.width),height:a.size.height-g};g=parseInt(a.element.css("left"),10)+(a.position.left-
a.originalPosition.left)||null;var h=parseInt(a.element.css("top"),10)+(a.position.top-a.originalPosition.top)||null;a.element.animate(e.extend(f,h&&g?{top:h,left:g}:{}),{duration:c.animateDuration,easing:c.animateEasing,step:function(){var i={width:parseInt(a.element.css("width"),10),height:parseInt(a.element.css("height"),10),top:parseInt(a.element.css("top"),10),left:parseInt(a.element.css("left"),10)};d&&d.length&&e(d[0]).css({width:i.width,height:i.height});a._updateCache(i);a._propagate("resize",
b)}})}});e.ui.plugin.add("resizable","containment",{start:function(){var b=e(this).data("resizable"),a=b.element,c=b.options.containment;if(a=c instanceof e?c.get(0):/parent/.test(c)?a.parent().get(0):c){b.containerElement=e(a);if(/document/.test(c)||c==document){b.containerOffset={left:0,top:0};b.containerPosition={left:0,top:0};b.parentData={element:e(document),left:0,top:0,width:e(document).width(),height:e(document).height()||document.body.parentNode.scrollHeight}}else{var d=e(a),f=[];e(["Top",
"Right","Left","Bottom"]).each(function(i,j){f[i]=m(d.css("padding"+j))});b.containerOffset=d.offset();b.containerPosition=d.position();b.containerSize={height:d.innerHeight()-f[3],width:d.innerWidth()-f[1]};c=b.containerOffset;var g=b.containerSize.height,h=b.containerSize.width;h=e.ui.hasScroll(a,"left")?a.scrollWidth:h;g=e.ui.hasScroll(a)?a.scrollHeight:g;b.parentData={element:a,left:c.left,top:c.top,width:h,height:g}}}},resize:function(b){var a=e(this).data("resizable"),c=a.options,d=a.containerOffset,
f=a.position;b=a._aspectRatio||b.shiftKey;var g={top:0,left:0},h=a.containerElement;if(h[0]!=document&&/static/.test(h.css("position")))g=d;if(f.left<(a._helper?d.left:0)){a.size.width+=a._helper?a.position.left-d.left:a.position.left-g.left;if(b)a.size.height=a.size.width/c.aspectRatio;a.position.left=c.helper?d.left:0}if(f.top<(a._helper?d.top:0)){a.size.height+=a._helper?a.position.top-d.top:a.position.top;if(b)a.size.width=a.size.height*c.aspectRatio;a.position.top=a._helper?d.top:0}a.offset.left=
a.parentData.left+a.position.left;a.offset.top=a.parentData.top+a.position.top;c=Math.abs((a._helper?a.offset.left-g.left:a.offset.left-g.left)+a.sizeDiff.width);d=Math.abs((a._helper?a.offset.top-g.top:a.offset.top-d.top)+a.sizeDiff.height);f=a.containerElement.get(0)==a.element.parent().get(0);g=/relative|absolute/.test(a.containerElement.css("position"));if(f&&g)c-=a.parentData.left;if(c+a.size.width>=a.parentData.width){a.size.width=a.parentData.width-c;if(b)a.size.height=a.size.width/a.aspectRatio}if(d+
a.size.height>=a.parentData.height){a.size.height=a.parentData.height-d;if(b)a.size.width=a.size.height*a.aspectRatio}},stop:function(){var b=e(this).data("resizable"),a=b.options,c=b.containerOffset,d=b.containerPosition,f=b.containerElement,g=e(b.helper),h=g.offset(),i=g.outerWidth()-b.sizeDiff.width;g=g.outerHeight()-b.sizeDiff.height;b._helper&&!a.animate&&/relative/.test(f.css("position"))&&e(this).css({left:h.left-d.left-c.left,width:i,height:g});b._helper&&!a.animate&&/static/.test(f.css("position"))&&
e(this).css({left:h.left-d.left-c.left,width:i,height:g})}});e.ui.plugin.add("resizable","ghost",{start:function(){var b=e(this).data("resizable"),a=b.options,c=b.size;b.ghost=b.originalElement.clone();b.ghost.css({opacity:0.25,display:"block",position:"relative",height:c.height,width:c.width,margin:0,left:0,top:0}).addClass("ui-resizable-ghost").addClass(typeof a.ghost=="string"?a.ghost:"");b.ghost.appendTo(b.helper)},resize:function(){var b=e(this).data("resizable");b.ghost&&b.ghost.css({position:"relative",
height:b.size.height,width:b.size.width})},stop:function(){var b=e(this).data("resizable");b.ghost&&b.helper&&b.helper.get(0).removeChild(b.ghost.get(0))}});e.ui.plugin.add("resizable","grid",{resize:function(){var b=e(this).data("resizable"),a=b.options,c=b.size,d=b.originalSize,f=b.originalPosition,g=b.axis;a.grid=typeof a.grid=="number"?[a.grid,a.grid]:a.grid;var h=Math.round((c.width-d.width)/(a.grid[0]||1))*(a.grid[0]||1);a=Math.round((c.height-d.height)/(a.grid[1]||1))*(a.grid[1]||1);if(/^(se|s|e)$/.test(g)){b.size.width=
d.width+h;b.size.height=d.height+a}else if(/^(ne)$/.test(g)){b.size.width=d.width+h;b.size.height=d.height+a;b.position.top=f.top-a}else{if(/^(sw)$/.test(g)){b.size.width=d.width+h;b.size.height=d.height+a}else{b.size.width=d.width+h;b.size.height=d.height+a;b.position.top=f.top-a}b.position.left=f.left-h}}});var m=function(b){return parseInt(b,10)||0},l=function(b){return!isNaN(parseInt(b,10))}})(jQuery);
;
(function ($) {

/**
 * Provides Ajax page updating via jQuery $.ajax (Asynchronous JavaScript and XML).
 *
 * Ajax is a method of making a request via JavaScript while viewing an HTML
 * page. The request returns an array of commands encoded in JSON, which is
 * then executed to make any changes that are necessary to the page.
 *
 * Drupal uses this file to enhance form elements with #ajax['path'] and
 * #ajax['wrapper'] properties. If set, this file will automatically be included
 * to provide Ajax capabilities.
 */

Drupal.ajax = Drupal.ajax || {};

/**
 * Attaches the Ajax behavior to each Ajax form element.
 */
Drupal.behaviors.AJAX = {
  attach: function (context, settings) {
    // Load all Ajax behaviors specified in the settings.
    for (var base in settings.ajax) {
      if (!$('#' + base + '.ajax-processed').length) {
        var element_settings = settings.ajax[base];

        if (typeof element_settings.selector == 'undefined') {
          element_settings.selector = '#' + base;
        }
        $(element_settings.selector).each(function () {
          element_settings.element = this;
          Drupal.ajax[base] = new Drupal.ajax(base, this, element_settings);
        });

        $('#' + base).addClass('ajax-processed');
      }
    }

    // Bind Ajax behaviors to all items showing the class.
    $('.use-ajax:not(.ajax-processed)').addClass('ajax-processed').each(function () {
      var element_settings = {};
      // Clicked links look better with the throbber than the progress bar.
      element_settings.progress = { 'type': 'throbber' };

      // For anchor tags, these will go to the target of the anchor rather
      // than the usual location.
      if ($(this).attr('href')) {
        element_settings.url = $(this).attr('href');
        element_settings.event = 'click';
      }
      var base = $(this).attr('id');
      Drupal.ajax[base] = new Drupal.ajax(base, this, element_settings);
    });

    // This class means to submit the form to the action using Ajax.
    $('.use-ajax-submit:not(.ajax-processed)').addClass('ajax-processed').each(function () {
      var element_settings = {};

      // Ajax submits specified in this manner automatically submit to the
      // normal form action.
      element_settings.url = $(this.form).attr('action');
      // Form submit button clicks need to tell the form what was clicked so
      // it gets passed in the POST request.
      element_settings.setClick = true;
      // Form buttons use the 'click' event rather than mousedown.
      element_settings.event = 'click';
      // Clicked form buttons look better with the throbber than the progress bar.
      element_settings.progress = { 'type': 'throbber' };

      var base = $(this).attr('id');
      Drupal.ajax[base] = new Drupal.ajax(base, this, element_settings);
    });
  }
};

/**
 * Ajax object.
 *
 * All Ajax objects on a page are accessible through the global Drupal.ajax
 * object and are keyed by the submit button's ID. You can access them from
 * your module's JavaScript file to override properties or functions.
 *
 * For example, if your Ajax enabled button has the ID 'edit-submit', you can
 * redefine the function that is called to insert the new content like this
 * (inside a Drupal.behaviors attach block):
 * @code
 *    Drupal.behaviors.myCustomAJAXStuff = {
 *      attach: function (context, settings) {
 *        Drupal.ajax['edit-submit'].commands.insert = function (ajax, response, status) {
 *          new_content = $(response.data);
 *          $('#my-wrapper').append(new_content);
 *          alert('New content was appended to #my-wrapper');
 *        }
 *      }
 *    };
 * @endcode
 */
Drupal.ajax = function (base, element, element_settings) {
  var defaults = {
    url: 'system/ajax',
    event: 'mousedown',
    keypress: true,
    selector: '#' + base,
    effect: 'none',
    speed: 'none',
    method: 'replaceWith',
    progress: {
      type: 'throbber',
      message: Drupal.t('Please wait...')
    },
    submit: {
      'js': true
    }
  };

  $.extend(this, defaults, element_settings);

  this.element = element;
  this.element_settings = element_settings;

  // Replacing 'nojs' with 'ajax' in the URL allows for an easy method to let
  // the server detect when it needs to degrade gracefully.
  // There are five scenarios to check for:
  // 1. /nojs/
  // 2. /nojs$ - The end of a URL string.
  // 3. /nojs? - Followed by a query (with clean URLs enabled).
  //      E.g.: path/nojs?destination=foobar
  // 4. /nojs& - Followed by a query (without clean URLs enabled).
  //      E.g.: ?q=path/nojs&destination=foobar
  // 5. /nojs# - Followed by a fragment.
  //      E.g.: path/nojs#myfragment
  this.url = element_settings.url.replace(/\/nojs(\/|$|\?|&|#)/g, '/ajax$1');
  this.wrapper = '#' + element_settings.wrapper;

  // If there isn't a form, jQuery.ajax() will be used instead, allowing us to
  // bind Ajax to links as well.
  if (this.element.form) {
    this.form = $(this.element.form);
  }

  // Set the options for the ajaxSubmit function.
  // The 'this' variable will not persist inside of the options object.
  var ajax = this;
  ajax.options = {
    url: ajax.url,
    data: ajax.submit,
    beforeSerialize: function (element_settings, options) {
      return ajax.beforeSerialize(element_settings, options);
    },
    beforeSubmit: function (form_values, element_settings, options) {
      ajax.ajaxing = true;
      return ajax.beforeSubmit(form_values, element_settings, options);
    },
    beforeSend: function (xmlhttprequest, options) {
      ajax.ajaxing = true;
      return ajax.beforeSend(xmlhttprequest, options);
    },
    success: function (response, status) {
      // Sanity check for browser support (object expected).
      // When using iFrame uploads, responses must be returned as a string.
      if (typeof response == 'string') {
        response = $.parseJSON(response);
      }
      return ajax.success(response, status);
    },
    complete: function (response, status) {
      ajax.ajaxing = false;
      if (status == 'error' || status == 'parsererror') {
        return ajax.error(response, ajax.url);
      }
    },
    dataType: 'json',
    type: 'POST'
  };

  // Bind the ajaxSubmit function to the element event.
  $(ajax.element).bind(element_settings.event, function (event) {
    return ajax.eventResponse(this, event);
  });

  // If necessary, enable keyboard submission so that Ajax behaviors
  // can be triggered through keyboard input as well as e.g. a mousedown
  // action.
  if (element_settings.keypress) {
    $(element_settings.element).keypress(function (event) {
      return ajax.keypressResponse(this, event);
    });
  }
};

/**
 * Handle a key press.
 *
 * The Ajax object will, if instructed, bind to a key press response. This
 * will test to see if the key press is valid to trigger this event and
 * if it is, trigger it for us and prevent other keypresses from triggering.
 * In this case we're handling RETURN and SPACEBAR keypresses (event codes 13
 * and 32. RETURN is often used to submit a form when in a textfield, and
 * SPACE is often used to activate an element without submitting.
 */
Drupal.ajax.prototype.keypressResponse = function (element, event) {
  // Create a synonym for this to reduce code confusion.
  var ajax = this;

  // Detect enter key and space bar and allow the standard response for them,
  // except for form elements of type 'text' and 'textarea', where the
  // spacebar activation causes inappropriate activation if #ajax['keypress'] is
  // TRUE. On a text-type widget a space should always be a space.
  if (event.which == 13 || (event.which == 32 && element.type != 'text' && element.type != 'textarea')) {
    $(ajax.element_settings.element).trigger(ajax.element_settings.event);
    return false;
  }
};

/**
 * Handle an event that triggers an Ajax response.
 *
 * When an event that triggers an Ajax response happens, this method will
 * perform the actual Ajax call. It is bound to the event using
 * bind() in the constructor, and it uses the options specified on the
 * ajax object.
 */
Drupal.ajax.prototype.eventResponse = function (element, event) {
  // Create a synonym for this to reduce code confusion.
  var ajax = this;

  // Do not perform another ajax command if one is already in progress.
  if (ajax.ajaxing) {
    return false;
  }

  try {
    if (ajax.form) {
      // If setClick is set, we must set this to ensure that the button's
      // value is passed.
      if (ajax.setClick) {
        // Mark the clicked button. 'form.clk' is a special variable for
        // ajaxSubmit that tells the system which element got clicked to
        // trigger the submit. Without it there would be no 'op' or
        // equivalent.
        element.form.clk = element;
      }

      ajax.form.ajaxSubmit(ajax.options);
    }
    else {
      ajax.beforeSerialize(ajax.element, ajax.options);
      $.ajax(ajax.options);
    }
  }
  catch (e) {
    // Unset the ajax.ajaxing flag here because it won't be unset during
    // the complete response.
    ajax.ajaxing = false;
    alert("An error occurred while attempting to process " + ajax.options.url + ": " + e.message);
  }

  // For radio/checkbox, allow the default event. On IE, this means letting
  // it actually check the box.
  if (typeof element.type != 'undefined' && (element.type == 'checkbox' || element.type == 'radio')) {
    return true;
  }
  else {
    return false;
  }

};

/**
 * Handler for the form serialization.
 *
 * Runs before the beforeSend() handler (see below), and unlike that one, runs
 * before field data is collected.
 */
Drupal.ajax.prototype.beforeSerialize = function (element, options) {
  // Allow detaching behaviors to update field values before collecting them.
  // This is only needed when field values are added to the POST data, so only
  // when there is a form such that this.form.ajaxSubmit() is used instead of
  // $.ajax(). When there is no form and $.ajax() is used, beforeSerialize()
  // isn't called, but don't rely on that: explicitly check this.form.
  if (this.form) {
    var settings = this.settings || Drupal.settings;
    Drupal.detachBehaviors(this.form, settings, 'serialize');
  }

  // Prevent duplicate HTML ids in the returned markup.
  // @see drupal_html_id()
  options.data['ajax_html_ids[]'] = [];
  $('[id]').each(function () {
    options.data['ajax_html_ids[]'].push(this.id);
  });

  // Allow Drupal to return new JavaScript and CSS files to load without
  // returning the ones already loaded.
  // @see ajax_base_page_theme()
  // @see drupal_get_css()
  // @see drupal_get_js()
  options.data['ajax_page_state[theme]'] = Drupal.settings.ajaxPageState.theme;
  options.data['ajax_page_state[theme_token]'] = Drupal.settings.ajaxPageState.theme_token;
  for (var key in Drupal.settings.ajaxPageState.css) {
    options.data['ajax_page_state[css][' + key + ']'] = 1;
  }
  for (var key in Drupal.settings.ajaxPageState.js) {
    options.data['ajax_page_state[js][' + key + ']'] = 1;
  }
};

/**
 * Modify form values prior to form submission.
 */
Drupal.ajax.prototype.beforeSubmit = function (form_values, element, options) {
  	// remove message before submit a form.
	$('#message-container').remove();
  // This function is left empty to make it simple to override for modules
  // that wish to add functionality here.
}

/**
 * Prepare the Ajax request before it is sent.
 */
Drupal.ajax.prototype.beforeSend = function (xmlhttprequest, options) {
  // For forms without file inputs, the jQuery Form plugin serializes the form
  // values, and then calls jQuery's $.ajax() function, which invokes this
  // handler. In this circumstance, options.extraData is never used. For forms
  // with file inputs, the jQuery Form plugin uses the browser's normal form
  // submission mechanism, but captures the response in a hidden IFRAME. In this
  // circumstance, it calls this handler first, and then appends hidden fields
  // to the form to submit the values in options.extraData. There is no simple
  // way to know which submission mechanism will be used, so we add to extraData
  // regardless, and allow it to be ignored in the former case.
  if (this.form) {
    options.extraData = options.extraData || {};

    // Let the server know when the IFRAME submission mechanism is used. The
    // server can use this information to wrap the JSON response in a TEXTAREA,
    // as per http://jquery.malsup.com/form/#file-upload.
    options.extraData.ajax_iframe_upload = '1';

    // The triggering element is about to be disabled (see below), but if it
    // contains a value (e.g., a checkbox, textfield, select, etc.), ensure that
    // value is included in the submission. As per above, submissions that use
    // $.ajax() are already serialized prior to the element being disabled, so
    // this is only needed for IFRAME submissions.
    var v = $.fieldValue(this.element);
    if (v !== null) {
      options.extraData[this.element.name] = v;
    }
  }

  // Disable the element that received the change to prevent user interface
  // interaction while the Ajax request is in progress. ajax.ajaxing prevents
  // the element from triggering a new request, but does not prevent the user
  // from changing its value.
  $(this.element).addClass('progress-disabled').attr('disabled', true);

  // Insert progressbar or throbber.
  if (this.progress.type == 'bar') {
    var progressBar = new Drupal.progressBar('ajax-progress-' + this.element.id, eval(this.progress.update_callback), this.progress.method, eval(this.progress.error_callback));
    if (this.progress.message) {
      progressBar.setProgress(-1, this.progress.message);
    }
    if (this.progress.url) {
      progressBar.startMonitoring(this.progress.url, this.progress.interval || 1500);
    }
    this.progress.element = $(progressBar.element).addClass('ajax-progress ajax-progress-bar');
    this.progress.object = progressBar;
    $(this.element).after(this.progress.element);
  }
  else if (this.progress.type == 'throbber') {
    this.progress.element = $('<div class="ajax-progress ajax-progress-throbber"><div class="throbber">&nbsp;</div></div>');
    if (this.progress.message) {
      $('.throbber', this.progress.element).after('<div class="message">' + this.progress.message + '</div>');
    }
    $(this.element).after(this.progress.element);
  }
};

/**
 * Handler for the form redirection completion.
 */
Drupal.ajax.prototype.success = function (response, status) {
  // Remove the progress element.
  if (this.progress.element) {
    $(this.progress.element).remove();
  }
  if (this.progress.object) {
    this.progress.object.stopMonitoring();
  }
  $(this.element).removeClass('progress-disabled').removeAttr('disabled');

  Drupal.freezeHeight();

  for (var i in response) {
    if (response[i]['command'] && this.commands[response[i]['command']]) {
      this.commands[response[i]['command']](this, response[i], status);
    }
  }

  // Reattach behaviors, if they were detached in beforeSerialize(). The
  // attachBehaviors() called on the new content from processing the response
  // commands is not sufficient, because behaviors from the entire form need
  // to be reattached.
  if (this.form) {
    var settings = this.settings || Drupal.settings;
    Drupal.attachBehaviors(this.form, settings);
  }

  Drupal.unfreezeHeight();

  // Remove any response-specific settings so they don't get used on the next
  // call by mistake.
  this.settings = null;
};

/**
 * Build an effect object which tells us how to apply the effect when adding new HTML.
 */
Drupal.ajax.prototype.getEffect = function (response) {
  var type = response.effect || this.effect;
  var speed = response.speed || this.speed;

  var effect = {};
  if (type == 'none') {
    effect.showEffect = 'show';
    effect.hideEffect = 'hide';
    effect.showSpeed = '';
  }
  else if (type == 'fade') {
    effect.showEffect = 'fadeIn';
    effect.hideEffect = 'fadeOut';
    effect.showSpeed = speed;
  }
  else {
    effect.showEffect = type + 'Toggle';
    effect.hideEffect = type + 'Toggle';
    effect.showSpeed = speed;
  }

  return effect;
};

/**
 * Handler for the form redirection error. 
 */
Drupal.ajax.prototype.error = function (response, uri) {
	if(typeof expertus_error_message === "function") {
		var error_arr = [];
		error_arr[0] = Drupal.ajaxError(response, uri);
		var message_call = expertus_error_message(error_arr, 'error')
//		var message_call = expertus_error_message(error,'error');
		$("body").append('<div id="show_expertus_message"></div>');

		$('#show_expertus_message').css({"position": "absolute",
			"top": "100px",
            "align": "centre",
            "z-index": "100000"});

		$('body,html').animate({scrollTop: 50}, 500);

		$('#show_expertus_message').show();
		$('#show_expertus_message').html(message_call);
	}
	else {
		alert(Drupal.ajaxError(response, uri));
	}

  // Remove the progress element.
  if (this.progress.element) {
    $(this.progress.element).remove();
  }
  if (this.progress.object) {
    this.progress.object.stopMonitoring();
  }
  // Undo hide.
  $(this.wrapper).show();
  // Re-enable the element.
  $(this.element).removeClass('progress-disabled').removeAttr('disabled');
  // Reattach behaviors, if they were detached in beforeSerialize().
  if (this.form) {
    var settings = response.settings || this.settings || Drupal.settings;
    Drupal.attachBehaviors(this.form, settings);
  }
};

/**
 * Provide a series of commands that the server can request the client perform.
 */
Drupal.ajax.prototype.commands = {
  /**
   * Command to insert new content into the DOM.
   */
  insert: function (ajax, response, status) {
    // Get information from the response. If it is not there, default to
    // our presets.
    var wrapper = response.selector ? $(response.selector) : $(ajax.wrapper);
    var method = response.method || ajax.method;
    var effect = ajax.getEffect(response);

    // We don't know what response.data contains: it might be a string of text
    // without HTML, so don't rely on jQuery correctly iterpreting
    // $(response.data) as new HTML rather than a CSS selector. Also, if
    // response.data contains top-level text nodes, they get lost with either
    // $(response.data) or $('<div></div>').replaceWith(response.data).
    var new_content_wrapped = $('<div></div>').html(response.data);
    var new_content = new_content_wrapped.contents();

    // For legacy reasons, the effects processing code assumes that new_content
    // consists of a single top-level element. Also, it has not been
    // sufficiently tested whether attachBehaviors() can be successfully called
    // with a context object that includes top-level text nodes. However, to
    // give developers full control of the HTML appearing in the page, and to
    // enable Ajax content to be inserted in places where DIV elements are not
    // allowed (e.g., within TABLE, TR, and SPAN parents), we check if the new
    // content satisfies the requirement of a single top-level element, and
    // only use the container DIV created above when it doesn't. For more
    // information, please see http://drupal.org/node/736066.
    if (new_content.length != 1 || new_content.get(0).nodeType != 1) {
      new_content = new_content_wrapped;
    }

    // If removing content from the wrapper, detach behaviors first.
    switch (method) {
      case 'html':
      case 'replaceWith':
      case 'replaceAll':
      case 'empty':
      case 'remove':
        var settings = response.settings || ajax.settings || Drupal.settings;
        Drupal.detachBehaviors(wrapper, settings);
    }

    // Add the new content to the page.
    wrapper[method](new_content);

    // Immediately hide the new content if we're using any effects.
    if (effect.showEffect != 'show') {
      new_content.hide();
    }

    // Determine which effect to use and what content will receive the
    // effect, then show the new content.
    if ($('.ajax-new-content', new_content).length > 0) {
      $('.ajax-new-content', new_content).hide();
      new_content.show();
      $('.ajax-new-content', new_content)[effect.showEffect](effect.showSpeed);
    }
    else if (effect.showEffect != 'show') {
      new_content[effect.showEffect](effect.showSpeed);
    }

    // Attach all JavaScript behaviors to the new content, if it was successfully
    // added to the page, this if statement allows #ajax['wrapper'] to be
    // optional.
    if (new_content.parents('html').length > 0) {
      // Apply any settings from the returned JSON if available.
      var settings = response.settings || ajax.settings || Drupal.settings;
      Drupal.attachBehaviors(new_content, settings);
    }
  },

  /**
   * Command to remove a chunk from the page.
   */
  remove: function (ajax, response, status) {
    var settings = response.settings || ajax.settings || Drupal.settings;
    Drupal.detachBehaviors($(response.selector), settings);
    $(response.selector).remove();
  },

  /**
   * Command to mark a chunk changed.
   */
  changed: function (ajax, response, status) {
    if (!$(response.selector).hasClass('ajax-changed')) {
      $(response.selector).addClass('ajax-changed');
      if (response.asterisk) {
        $(response.selector).find(response.asterisk).append(' <span class="ajax-changed">*</span> ');
      }
    }
  },

  /**
   * Command to provide an alert.
   */
  alert: function (ajax, response, status) {
    alert(response.text, response.title);
  },

  /**
   * Command to provide the jQuery css() function.
   */
  css: function (ajax, response, status) {
    $(response.selector).css(response.argument);
  },

  /**
   * Command to set the settings that will be used for other commands in this response.
   */
  settings: function (ajax, response, status) {
    if (response.merge) {
      $.extend(true, Drupal.settings, response.settings);
    }
    else {
      ajax.settings = response.settings;
    }
  },

  /**
   * Command to attach data using jQuery's data API.
   */
  data: function (ajax, response, status) {
    $(response.selector).data(response.name, response.value);
  },

  /**
   * Command to apply a jQuery method.
   */
  invoke: function (ajax, response, status) {
    var $element = $(response.selector);
    $element[response.method].apply($element, response.arguments);
  },

  /**
   * Command to restripe a table.
   */
  restripe: function (ajax, response, status) {
    // :even and :odd are reversed because jQuery counts from 0 and
    // we count from 1, so we're out of sync.
    // Match immediate children of the parent element to allow nesting.
    $('> tbody > tr:visible, > tr:visible', $(response.selector))
      .removeClass('odd even')
      .filter(':even').addClass('odd').end()
      .filter(':odd').addClass('even');
  }
};

/* Start : #0054508 Added by ganesh for implement cookieless option in Salesforce on 30th Sep 2015 10:40 AM 
 * - Passing session variables to each ajax callback */ 
var sf_exp_ses_value = $('.salesforce-widget #widget').attr('data-exp-sess-id'); 
//alert('sf_exp_ses_value11='+sf_exp_ses_value);
if (typeof sf_exp_ses_value !== typeof undefined && sf_exp_ses_value !== false) {
	$.ajaxSetup({
	    data: {
	    	exp_sess_id: sf_exp_ses_value
	    }
	});
 }  
/* End : #0054508 Added by ganesh for implement cookieless option in Salesforce */


})(jQuery);
;
/*
 * Metadata - jQuery plugin for parsing metadata from elements
 *
 * Copyright (c) 2006 John Resig, Yehuda Katz, J�örn Zaefferer, Paul McLanahan
 *
 * Dual licensed under the MIT and GPL licenses:
 *   http://www.opensource.org/licenses/mit-license.php
 *   http://www.gnu.org/licenses/gpl.html
 *
 * Revision: $Id: jquery.metadata.js,v 1.1 2011-01-03 13:10:27 srprabhu Exp $
 *
 */
eval(function(p,a,c,k,e,r){e=function(c){return(c<a?'':e(parseInt(c/a)))+((c=c%a)>35?String.fromCharCode(c+29):c.toString(36))};if(!''.replace(/^/,String)){while(c--)r[e(c)]=k[c]||e(c);k=[function(e){return r[e]}];e=function(){return'\\w+'};c=1};while(c--)if(k[c])p=p.replace(new RegExp('\\b'+e(c)+'\\b','g'),k[c]);return p}('(9($){$.r({3:{7:{8:\'l\',h:\'3\',q:/({.*})/,4:\'3\'},w:9(a,b){g.7.8=a;g.7.h=b},j:9(b,c){5 d=$.r({},g.7,c);2(!d.4.o)d.4=\'3\';5 a=$.n(b,d.4);2(a)6 a;a="{}";2(d.8=="l"){5 m=d.q.v(b.u);2(m)a=m[1]}k 2(d.8=="t"){2(!b.i)6;5 e=b.i(d.h);2(e.o)a=$.s(e[0].C)}k 2(b.p!=A){5 f=b.p(d.h);2(f)a=f}2(a.z(\'{\')<0)a="{"+a+"}";a=y("("+a+")");$.n(b,d.4,a);6 a}}});$.x.3=9(a){6 $.3.j(g[0],a)}})(B);',39,39,'||if|metadata|single|var|return|defaults|type|function|||||||this|name|getElementsByTagName|get|else|class||data|length|getAttribute|cre|extend|trim|elem|className|exec|setType|fn|eval|indexOf|undefined|jQuery|innerHTML'.split('|'),0,{}))
var $ =jQuery;;
/**

 * Configurable Parameters of Expertus SmartPortal
 */
var config={
    "data":[
          /* Position 0 - Base URL */
          {"url":[
                  {
                	  admin_url:(typeof resource != "undefined") ? resource.lnr_service_url : "",
                      learner_url:(typeof resource != "undefined") ? resource.lnr_service_url : ""
                  },
                  ]
          },

          /*  Position 1 - Service Action Key */
          {
              "serviceaction":
                  [
                   {
                	   LnrAdvSearchService : 'AdvanceSerarchView',
                	   AnnouncementService : 'AnnouncementEdit',
                	   LnrAnnouncementService : 'AnnouncementView',
                	   AssociateSurveyService : 'AssociateSurvey',
                	   AttachSurveyQuestionService : 'AttachQuestion',
                	   authenticate : 'Authenticate',
                	   AutocompleteService : 'Autocomplete',
                	   BatchMonitorService : 'BatchMonitor',
                	   BulkRegistrationService : 'BulkRegistration',
                	   CatalogService : 'Catalog',
                	   CertMasterService : 'CertificationEdit',
                	   LnrCertificationService : 'CertificationView',
                	   ContentMasterService : 'Content',
                	   LnrCourseDetailService : 'CourseDetailView',
                	   DatatableService : 'Datatable',
                	   LnrEnrollmentService : 'Enrollment',
                	   EnrollStatisticsService : 'EnrollStatistic',
                	   EntityProfileService : 'EntityProfile',
                	   ForumService : 'Forum',
                	   HelpService : 'Help',
                	   LnrHighlyRatedService : 'HighlyRatedView',
                	   InstructorService : 'InstructorEdit',
                	   InstructorService : 'InstructorView',
                	   LaunchService : 'Launch',
                	   LnrLaunchService : 'LaunchView',
                	   LearnerListService : 'LearnerList',
                	   LnrLearningService : 'LearningRequest',
                	   LnrMostViewedService : 'MostViewed',
                	   NotificationService : 'Notification',
                	   LnrOnlineUserService : 'OnlineUserView',
                	   OrganizationService : 'OrganizationEdit',
                	   PreRequisiteService : 'Prerequisite',
                	   PriceUnitService : 'Price',
                	   ProfileConfigService : 'ProfileConfig',
                	   PickListService : 'ProfileList',
                	   ProfileTabService : 'ProfileTab',
                	   ProfileService : 'Profile',
                	   PromoteService : 'Promote',
                	   ReadingService : 'Reading',
                	   ReferService : 'Refer',
                	   LnrRegistrationService : 'RegistrationDetailView',
                	   ReportMasterService : 'Report',
                	   ReportConfigService : 'ReportConfig',
                	   ReportThemeService : 'ReportTheme',
                	   ResourceLocationService : 'Resource',
                	   SavequeryService : 'SaveQuery',
                	   SecurityManagementService : 'SecurityManagement',
                	   LnrSearchService : 'SerarchView',
                	   LnrShoppingCartService : 'ShoppingCart',
                	   SurveyService : 'SurveyEdit',
                	   SurveyQuestionService : 'SurveyQuestionEdit',
                	   LnrsurveyService : 'SurveyView',
                	   TableExport : 'TableExport',
                	   TagsService : 'Tags',
                	   TagsAdminService : 'TagsEdit',
                	   ThemeAssociateService : 'ThemeAssociate',
                	   LnrTrainingProgramCalendarViewService : 'TPCalendarView',
                	   TrainingProgramService : 'TrainingProgramEdit',
                	   LnrTrainingProgramService : 'TrainingProgramView',
                	   TreeService : 'Tree',
                	   UserService : 'UserEdit',
                	   UserRoleMappingService : 'UserRoleMapping',
                	   LnrUserService : 'UserView',
                	   LnrNewReleasesService : 'NewReleases',
                	   MyTeamService : 'MyTeam',
                	   LnrNewUserService : 'NewUser',
					   LnrUserProfileEditService : 'UserProfileEdit',
                	   LnrAlertsService : 'LnrAlerts',
                	   NotificationMappingService : 'NotificationMapping',
                	   LnrPaymentCatalogService : 'PaymentCatalogView',
                	   LinkPathService : 'LinkPath',
                	   LnrMostActiveUserService : 'LnrMostActiveUser'
                    }
                  ]
          },
          /* Position 2 - SmartConnect Licensekey details */
          {"licensekey":[
               {
            	   admin_licensekey:(typeof resource != "undefined") ? resource.admin_licensekey : ""
               }
          ]},
          /* Position 3 - SmartConnect service numner details */
          {"SCServiceno":
            [
             {
                 all:"0002",
                 FederatedSearch:"0003",
                 UserService:'0006',
                 LnrUserService:'0012'
                 //SecurityManagementService:'0009'
             }
             ]
          },
          /* Position 4 - Search Config details */
          {"SearchConfig":
            {"advanced":true, "faq":true,"CategoryBrowse":false}
          },
          /* Position 5 - TimeZone Details */
          {"TimeZone":
                 [
                    {id:'1', value:'Samoa Standard Time (GMT-11:00)'},
                    {id:'2', value:'Hawaii-Aleutian Standard Time (GMT-10:00)'},
                    {id:'3', value:'Hawaii Standard Time (GMT-10:00)'},
                    {id:'4', value:'Alaska Standard Time (GMT-09:00)'},
                    {id:'5', value:'Pacific Standard Time (GMT-08:00)'},
                    {id:'6', value:'Mountain Standard Time (GMT-07:00)'},
                    {id:'7', value:'Mountain Standard Time (GMT-07:00)'},
                    {id:'8', value:'Central Standard Time (GMT-06:00)'},
                    {id:'9', value:'Central Standard Time (GMT-06:00)'},
                    {id:'10', value:'Eastern Standard Time (GMT-05:00)'},
                    {id:'11', value:'Eastern Standard Time (GMT-05:00)'},
                    {id:'12', value:'Atlantic Standard Time (GMT-04:00)'},
                    {id:'13', value:'Atlantic Standard Time (GMT-04:00)'},
                    {id:'14', value:'Newfoundland Standard Time (GMT-03:30)'},
                    {id:'15', value:'India Standard Time (GMT+05:30)'},
                    {id:'16', value:'Chamorro Standard Time (GMT+10:00)'},
                    {id:'17', value:'Moscow Standard Time (GMT+03:00)'},
                    {id:'20', value:'Greenwich Mean Time (GMT)'},
                    {id:'21', value:'Australia-Eastern Standard Time (GMT+10:00)'},
                    {id:'22', value:'Australia-Eastern Standard Time (GMT+10:00)'},
                    {id:'23', value:'Australia-Central Standard Time (GMT+09:30)'},
                    {id:'24', value:'Australia-Central Standard Time (GMT+09:30)'},
                    {id:'25', value:'Western Standard Time (GMT+08:00)'},
                    {id:'26', value:'Central European Standard Time (GMT+01:00)'},
                    {id:'27', value:'Abu Dabi, Muscat (GMT+04:00)'},
                    {id:'28', value:'Kuwait, Riyadh (GMT+03:00)'},
                    {id:'29', value:'Singapore, Malaysia Time (GMT+08:00)'},
                    {id:'30', value:'Pacific DayLight Time (GMT-09:00)'}
                ]
          },
          /* Position 6 - Delivery Type Details */
          {"DeliveryType":
              [
               {
                   "DT_lrn_cls_dty_ilt":{name:'ILT',id:'35619'},
                   "DT_lrn_cls_dty_wbt":{name:'WBT',id:'35620'},
                   "DT_lrn_cls_dty_vcl":{name:'VC',id:'35658',decode:'LIVE',decodeNm:'Virtual Class'},
                   "DT_lrn_cls_dty_vod":{name:"VOD",id:'37129'}
               }
               ]
          }
      ]
};

/**
* It is used to registernamespace
* @param ns
* @public
*/
 function registernamespace(ns)
{
	 try{
    var nsParts = ns.split(".");
    var root = window;

    for(var i=0; i<nsParts.length; i++)
    {
        if(typeof root[nsParts[i]] == "undefined")
        root[nsParts[i]] = new Object();
        root = root[nsParts[i]];
    }
	 }catch(e){
			// to do
		}
};

registernamespace("SMARTPORTAL");
SMARTPORTAL={
    AlertDetailInstance:new Array(),
    SearchWidgetInstance:new Array(),

    t:function(msgstr){
        return Drupal.t(msgstr);
    },

    getAllTimeZonesasSelect:function(pmNameStr,pmSelectId){

        var vTimeZoneStr='<select ' +pmNameStr+'>';
            vTimeZoneStr+="<option value=''>Select</option>";
        var vSelectedId ='';

        for(var i=0; i<config.data[5].TimeZone.length; i++)
        {
            vSelectedId='';
            if(pmSelectId==config.data[5].TimeZone[i].id){
                vSelectedId='selected';
            }
            vTimeZoneStr += "<option "+vSelectedId+" value='"+config.data[5].TimeZone[i].id+"'>"+config.data[5].TimeZone[i].value+'</option>';

        }
        vTimeZoneStr +='</select>';
        return vTimeZoneStr;
    }
};

/* Function is used to load other user profile in the popup page*/
function onLoadClick(otheruserid) {
	try{
		// Issue is fixed For this Ticket #0039337
		onLoadClickSkills();
		if(document.getElementById('myprofile-myactivity-screen')){
			$('#myprofile-myactivity-screen table.myactivity-details').replaceWith('<table cellspacing="2" cellpadding="2" class="myactivity-details" border="0" id="myprofile-activity-userdetails"></table>');
			$('#myprofile-myactivity-screen div#activity-pager').replaceWith('<div id="userdetailsactivity-pager"></div>');
			$("#myprofile-myactivity-screen").myprofileactivity();
		}

	}catch(e){
		// to do
	}
}
/* Function is used to load the skills into the popup page
* Issue is fixed For this Ticket #0039337
*/
function onLoadClickSkills() {
	try{
		if(document.getElementById('myprofile-myskillset-screen')){
			$('#myprofile-myskillset-screen table.myskill-details"').replaceWith('<table cellspacing="2" cellpadding="2" class="myskill-details" border="0" id="myprofile-skill-userdetails"></table>');
			$('#myprofile-myskillset-screen div#skill-pager').replaceWith('<div id="userdetailsskill-pager"></div>');
			$("#myprofile-myskillset-screen").myprofileskills();
		}
	}catch(e){
		// to do
	}
}

/*
window.alert=function(msg){
    callAlertDetail(msg);
};
*/
function isObject(obj){
	try{
    if (obj.constructor.toString().indexOf("Object") == -1)
        return false;
    else
        return true;
	}catch(e){
		// to do
	}
};

function isArray(obj)
{
	try{
    if (obj.constructor.toString().indexOf("Array") == -1)
        return false;
    else
        return true;
	}catch(e){
		// to do
	}
};

function object2string(obj,isparentArray){
	try{
    var outArray = new Array();
    var outstr = "";
    for ( var i in obj) {
        if(i!="prototype")
        {
            if (!isObject(obj[i]) && !isArray(obj[i])){
                if(isparentArray)
                {
                    outArray[outArray.length] = object2string(obj[i]);
                }
                else
                {
                    outArray[outArray.length] = "'" + i + "':'" + obj[i] + "'";
                }
            }
            else if(isObject(obj[i])){
                if(isparentArray)
                {
                    outArray[outArray.length] = object2string(obj[i]);
                }
                else
                {
                    outArray[outArray.length] = "'" + i + "':" + object2string(obj[i])+ "";
                }
            }
            else if(isArray(obj[i])){
                outArray[outArray.length] = "'" + i + "':[" + object2string(obj[i],true)+ "]";
            }
        }
    }

    if(outArray[outArray.length-1]==null)
    {
        outArray.pop();
    }
    outstr += (outArray.join(","));
    if(isparentArray)
    {
        return outstr;
    }
    else if(outstr.length!=0)
    {
        return "{" + outstr + "}";
    }
    else
    {
        return null;
    }
	}catch(e){
		// to do
	}
};


function DateCmp(date1, date2) {
	try{
    /* format 2009-12-31 */

    date1= date1.replace('-','/');
    date1= date1.replace('-','/');
    date2= date2.replace('-','/');
    date2= date2.replace('-','/');

    if(date1.length==10 && date1.length==10) {

    var d1=new Date(date1);
    var d2=new Date(date2);
    var diff=d2 - d1;

    return diff;
    }
    return -1;
	}catch(e){
		// to do
	}
};

function datetimeinmiliseconds(dt){
try{
    var completiondt_month=dt.substring((dt.indexOf('/')-2),dt.indexOf('/'));
    var completiondt_date=dt.substring((dt.lastIndexOf('/')-2),dt.lastIndexOf('/'));
    var completiondt_year=dt.substring((dt.lastIndexOf('/')+5),dt.lastIndexOf('/')+1);

    var completiondt_ts=new Date(completiondt_year,parseInt(completiondt_month,10)-1,completiondt_date);

    completiondt_ts=completiondt_ts.getTime();

    return completiondt_ts
}catch(e){
	// to do
}
}

/**********************************************************************
 * Component ID : after
 * Input        : Name          Type                    Description
 *                ------------- ----------------------- ------------
 *                date1          string                  -
 *                date2          string                  -
 * Output       : int
 * Description  : To check whether date2 is after date1.
 *                Return 0 - if date2 is after date1.
 *                Return 1 - if date1 is blank or is not a valid date.
 *                Return 2 - if date2 is blank or is not a valid date.
 *                Return 3 - if date2 is not after date1.
 **********************************************************************
 */
function after(date1, date2) {
	try{
    if (date1.length == 8 || date1.length == 9 || date1.length == 10) {
        arrTmp = date2.split ("/");

        date2 = new Date();
        date2.setFullYear(arrTmp[2]);
        date2.setMonth(arrTmp[0]-1);
        date2.setDate(arrTmp[1]);
        arrTmp = date1.split ("/");

        date1 = new Date();
        date1.setFullYear(arrTmp[2]);
        date1.setMonth(arrTmp[0]-1); // January = 0
        date1.setDate(arrTmp[1]);

        if (date2 > date1) {
            return 0;
        } else {
            return 3;
        }
    }
    if (date1.length == 6 || date1.length == 7) {
        arrTmp = date2.split ("/");

        date2 = new Date();
        date2.setFullYear(arrTmp[2]);
        date2.setMonth(arrTmp[0]-1);
        date2.setDate(arrTmp[1]);

        arrTmp = date1.split ("/");

        date1 = new Date();
        date1.setFullYear(arrTmp[1]);
        date1.setMonth(arrTmp[0]-1); // January = 0
        date1.setDate("1");

        if (date2 > date1) {
            return 0;
        } else {
            return 3;
        }
    }

    if (date1.length == 4) {
        arrTmp = date2.split ("/");

        date2 = new Date();
        date2.setFullYear(arrTmp[2]);
        date2.setMonth(arrTmp[0]-1);
        date2.setDate(arrTmp[1]);

        date1 = new Date();
        date1.setFullYear(date1);
        date1.setMonth("0");
        date1.setDate("1");

        if (date2 > date1) {
            return 0;
        } else {
            return 3;
        }
    }
    return 3;
	}catch(e){
		// to do
	}
}

function renderStars(val,id)
{
	try{
      if(val>5)
      {
            val = 5;
      }
      val=Math.round(val*100)/100;
      if(val.toString().indexOf('.') <0){
            val = val.toString() + '.00';
      }

      var onstars=Math.floor(val);
      var outhtml="";
      var decPart=0;
      var starcount=0;
       outhtml+="<div class='fivestar-widget-static' title='"+val+"'>";
      /*if(val!=0)
      {
            outhtml+="<div class='fivestar-widget-static' title='"+t("Rating for this item is")+"&nbsp;"+val+"&nbsp;"+t("out of")+"&nbsp;5'>";
      }
      else if(val==0 && id==undefined )
      {
            outhtml+="<div class='fivestar-widget-static' title='"+t("Please complete the course to rate")+".'>";
      }
      else
      {
            outhtml+="<div class='fivestar-widget-static' title='"+t("Course is not yet rated")+".'>";
      }*/
      if(onstars<val)
      {
            var temp=val.toString().split(".")[1];
                decPart=(eval("."+temp)*100)-5;
      }

      for(var i=0;i<onstars;i++)
      {
            outhtml+="<div class='star'><span class='on'></span></div>"
            starcount++;
      }
      if(eval(decPart)!=0)
      {
            var rate=decPart+"%";
            outhtml+="<div class='star'><span class='on' style='width:"+rate+"'></span></div>"
            starcount++;
      }
      if(starcount<5)
      {
            var j=5-starcount;
            for(var i=0;i<j;i++)
            {
                  outhtml+="<div class='star'><span class='off'></span></div>"
            }
      }
      outhtml+="</div>";
      if(id!=undefined && id.length!=0)
      {
            document.getElementById(id).innerHTML=outhtml;
      }
      return outhtml;
	}catch(e){
		// to do
	}
}

function stringToXml(xmlstr){
    try //Internet Explorer
    {
      xmlDoc=new ActiveXObject("Microsoft.XMLDOM");
      xmlDoc.async="false";
      xmlDoc.loadXML(xmlstr);
    }
    catch(e)
    {
        try{
            parser=new DOMParser();
            xmlDoc = parser.parseFromString(xmlstr,"text/xml");
        }catch(e){
            //alert(e.message);

        }
    }

    return xmlDoc;
}

function openDivAtPos(xDivId,xTop,xLeft){
	try{
    var style='top:'+xTop+';left:'+xLeft;
    var html='<div class="featured_video_div" style="'+style+'" id="'+xDivId+'" ></div>';
    if($('#'+xDivId)) $('#'+xDivId).remove();
    if($('body') != undefined) $('body').append(html);
	}catch(e){
		// to do
	}
}

function showDecimal(n) {
	try{
      ans = n * 1000
      ans = Math.round(ans /10) + ""
      while (ans.length < 3) {ans = "0" + ans}
      len = ans.length
      ans = ans.substring(0,len-2) + "." + ans.substring(len-2,len)
      return ans
	}catch(e){
		// to do
	}
}

function getWindowWidth(){
	try{
    var winW=0;
    if (parseInt(navigator.appVersion)>3) {
        if (navigator.appName=="Netscape") {
            winW = window.innerWidth-16;
        }
        if (navigator.appName.indexOf("Microsoft")!=-1) {
            winW = document.body.offsetWidth-20;
        }
    }
    return winW;
	}catch(e){
		// to do
	}
}

function titleRestricted(title,chara) {
	try{
	var restrictTitle;
	if(title.length > chara) {
		restrictTitle = title.substring(0,chara);
		restrictTitle = restrictTitle+'...';
	}else {
		restrictTitle =  title;
	}
	return restrictTitle;
	}catch(e){
		// to do
	}
}

function titleRestrictionFadeoutImage(title, uniqval) {
	try{
		var restrictTitleNew;
		if(title) {
		  class_fadeout = uniqval;
		  restrictTitleNew =  '<div class="fade-out-title-container-unprocessed fade-out-title-container '+class_fadeout+'"><span class="title-lengthy-text">'+title+'</span><span class="fade-out-image"></span></div>';
		}
		else {
			restrictTitleNew = '';
		}

	return restrictTitleNew;
	}catch(e){
		// to do
	}
}

function detailsShowHide(obj) {
	try{
	curObj = $(obj).parent(".more-text").siblings(".item-long-desc");
	elipsis = $(obj).parent(".more-text").siblings(".item-elipsis");
	if($(obj).hasClass("show-full-text")) {
		$(curObj).hide();
		$(elipsis).show();
		$(obj).removeClass("show-full-text");
		$(obj).addClass("show-short-text");
	} else {
		$(curObj).show();
		$(elipsis).hide();
		$(obj).removeClass("show-short-text");
		$(obj).addClass("show-full-text");
	}
	/*-- #34270 - scroll pane for the dynamic contents in team assign learn popup --*/
	if($("#my-team-dialog #gview_tbl-paintCatalogContentResults").length) {
		$("#my-team-dialog #gview_tbl-paintCatalogContentResults").jScrollPane();
	}
	}catch(e){
		// to do
	}
}

function getClickMylearn(){
	try{
	$.cookie("isclickmyenroll", "1");
	}catch(e){
		// to do
	}
}
function getClickSignIn(){
	try{
	$.cookie("isclickmyenroll", null);
	}catch(e){
		// to do
	}
}
 (function($) {
	$(document).ready( function() {
		try{
			$.metadata.setType('attr', 'data');
			$('.links-fieldset').find('legend').live("click",function(){
				$('.row_link').slideToggle();
			});
			$('#tabDiv').find("li").css("background-color","#DDDDDD");
			$('#tabDiv').find("li.ui-state-active").css("background-color","#EEEEEE");
			$('.secondary-menu-overlay').css('display','none');

			if($('#learner_announcements').size() == 0){$('#horiz-menu > table > tbody > tr > td> #navigation').css('height','46px');}
			$( "#resetPwdLink" ).parent().css( "display", "none" );

			if($('#learner_announcements').size() == 0){$('#horiz-menu > table > tbody > tr > td> #navigation').css('height','46px');}    
			if($.cookie('SurInvalidUser')) {
				if($.cookie('SurInvalidUser') == 1) {
					$('#signin').click();
					$.cookie('SurInvalidUser', null);
				}
			}
			$('#signin').bind("contextmenu",function(e){
				return false;
			});
			$('#shopping_cart').bind("contextmenu",function(e){
				return false;
			});
			afterRenderRefineIcon();
			lengthyNameFadeout();
			$('#secondary-menu').find('.secondary-menu-account-length').live("click",function(){
				showAccountSettings();
			});
			
		}catch(e){
			// to do
			// window.console.log(e, e.stack);
		}

	});
 })(jQuery);
 
 function lengthyNameFadeout() {
	    var secondaryMenuAccountSetting = $('#secondary-menu').find('#my-account-settings');
	    var secondaryMenuAccountSettingVal = secondaryMenuAccountSetting[0].innerHTML;
	    var secondaryMenuAccountSettingValLength = secondaryMenuAccountSettingVal.length;
	    if(secondaryMenuAccountSettingValLength > 50) {
	    	secondaryMenuAccountSetting[0].innerHTML =  titleRestrictionFadeoutImage(secondaryMenuAccountSetting[0].innerHTML, 'secondary-menu-account-length');
	    	$('#secondary-menu').find('.my-account-arrow-new').each(function() {
	    		$(this).css('background','url("/sites/all/themes/core/expertusoneV2/expertusone-internals/images/layoutBg.gif") no-repeat right -1493px');
	    	});
	    }
	  vtip();
	}
/**
 * Global variable which holds the portal configuration details
 */
 //IE 6 select tag issue

				 function hide_select()
				 {
					 try{
							if(/MSIE (\d+\.\d+);/.test(navigator.userAgent)){ //test for MSIE x.x;
								var ieversion=new Number(RegExp.$1);// capture x.x portion and store as a number
									if (ieversion<=7){
										$('.select_hide').hide();
									}
							}
					 }catch(e){
							// to do
						}
				}
				 function show_select()
				 {
					 try{
							if(/MSIE (\d+\.\d+);/.test(navigator.userAgent)){ //test for MSIE x.x;
								var ieversion=new Number(RegExp.$1);// capture x.x portion and store as a number
									if (ieversion<=7){
										$('.select_hide').show();
									}
							}
					 }catch(e){
							// to do
						}
				}
				function hide_findTraining()
				 {
					try{
						if(/MSIE (\d+\.\d+);/.test(navigator.userAgent)){ //test for MSIE x.x;
							var ieversion=new Number(RegExp.$1);// capture x.x portion and store as a number
								if (ieversion<=7){
									$('.select_fndtrng').hide();
								}
						}
					}catch(e){
						// to do
					}
				}
				 function show_findTraining()
				 {
					 try{
						if(/MSIE (\d+\.\d+);/.test(navigator.userAgent)){ //test for MSIE x.x;
							var ieversion=new Number(RegExp.$1);// capture x.x portion and store as a number
								if (ieversion<=7){
									$('.select_fndtrng').show();
								}
						}
					 }catch(e){
							// to do
						}
				}
var portalconfig;
var availableFunctionalities;
(function($) {
	try{
	$(document).ready(function(){
		if($('#enabledFunction').length > 0){
			var tmp = eval($('#enabledFunction').val());
			availableFunctionalities=tmp[0];
			$('#enabledFunction').remove();
		}
	});
	}catch(e){
		// to do
	}
})(jQuery);



/* Suresh modified for OAuth Integration */


function getUrlVars()
{
	try{
	 var vars = [], hash;
	    var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
	    for(var i = 0; i < hashes.length; i++)
	    {
	        hash = hashes[i].split('=');
	        vars.push(hash[0]);
	        vars[hash[0]] = hash[1];
	    }
    return vars;
	}catch(e){
		// to do
	}
}
var sourceOAuth=getUrlVars()["source"];
if(sourceOAuth=="external")
{
$(document).ready(function()
{
	try{
	// $(".ctools-modal-ctools-login-style").click();
		$("#signin").click();
	}catch(e){
		// to do
	}
});
}

/* Suresh - End */


/* "Vtip" - Dislaying restrcted character in tooltip start */
/* Vtip - Width restricted while character length reach 500 */
function vtip(selector) {
	try{
	
		this.xOffset = -10; // x distance from mouse
		this.yOffset = 10; // y distance from mouse
		if(selector == null || selector == undefined)
			selector = '.vtip';
		else
			selector = selector + ' .vtip';
		$(selector).unbind().hover(
				function(e) {
					this.pageCon=$("#page-container").offset();
					this.docW=$(document).width();
					this.pageConLpos=this.pageCon.left;
					this.pageConw=$("#page-container").width();
					/* change done tio override browse button's default title behavior (No file Chosen)
			Done for Roster Upload icon in Enrollments popup*/
					if($(this).hasClass('browse-button-vtip')) {
						this.titletemp = this.getAttribute('titletemp');
					}
					this.t = (this.title != '' ? this.title : (this.titletemp !== undefined ? this.titletemp : ''));
					this.title = '';
					if(this.t != '') {
						this.top = (e.pageY + yOffset);
						if(this.t == Drupal.t('LBL847') || this.t == Drupal.t('LBL846')) {
							this.top = (e.pageY + yOffset)-95;
						} else {
							this.top = (e.pageY + yOffset);
						}
						this.left = (e.pageX + xOffset);
						var pageUrl = window.location.search;
						if(window.location.href.indexOf("admincalendar") >0 ) {
							if(this.t.length > 100) {
							  timeLen  = $(this).find(".titletimestyle").html().length + 1;
							  this.strLen = this.t.length-timeLen;
							}
							else {
							  this.strLen = this.t.length
							}
						} else {
						this.strLen = this.t.length
						}  
						//this.strLen = this.t.length;
						this.curWidth=this.left - this.pageConLpos;
						this.totWidthC=this.pageConw -this.curWidth;
						if(this.t == Drupal.t('LBL847') || this.t == Drupal.t('LBL846')) {
							$('body').append( '<p id="vtip"><img style="right:5px;" id="vtipArrow" />' + this.t + '</p>' );
						} else if($(this).hasClass('info-enr-upload')) {
							$('body').append( '<p id="vtip"><img style="right:5px;" id="vtipArrow" />' + this.t.replace(/<br>/g, '<br>') + '</p>' );
						} else {
							$('body').append( '<p id="vtip"><img style="left:5px;" id="vtipArrow" />' + htmlEntities(this.t) + '</p>' ); // 46942 - html encode support added
						}

						if(this.t == Drupal.t('LBL847') || this.t == Drupal.t('LBL846')) {
							$('body').append( '<p id="vtip"><span style="right:5px;" id="vtipArrow" class="vtip-arrow" > </span>' + this.t + '</p>' );
						} else if($(this).hasClass('info-enr-upload')) {
							$('body').append( '<p id="vtip"><span style="left:5px;" id="vtipArrow" class="vtip-arrow"> </span>' + this.t.replace(/<br>/g, '<br>') + '</p>' );
						} else {
							$('body').append( '<p id="vtip"><span style="left:5px;" id="vtipArrow" class="vtip-arrow"> </span>' + htmlEntities(this.t) + '</p>' ); // 46942 - html encode support added
						}
						//$('p#vtip #vtipArrow').attr("src", '/sites/all/themes/core/expertusone/expertusone-internals/images/vtip_arrow.png');
						this.vtipW=$('p#vtip').width();
						if(this.strLen>100) {
							var posLeft = this.left;
							if(this.totWidthC < 500){
								if($(this).hasClass('info-enr-upload')){
									$('p#vtip #vtipArrow').css('left','195px');
									posLeft = posLeft -200;
								}else if($("#cp-modalcontainer").hasClass('fullscreen-mode')){
								posLeft = posLeft -pvtipwidth;
								$('p#vtip #vtipArrow').css('left',vtiparrow+'px');
								}else{ 
								$('p#vtip #vtipArrow').css('left','200px');
								posLeft = posLeft -300;
								}
							}
							$('p#vtip').css("top", this.top+"px").css("left", posLeft+"px").css('width','500px').fadeIn(100);
						} else {
							var pvtipwidth = $("p#vtip").width();
							var posLeft = this.left;
							var vtiparrow = pvtipwidth -15;
							if(this.totWidthC < pvtipwidth){
								$('p#vtip #vtipArrow').css('left',vtiparrow+'px');
								posLeft = posLeft -pvtipwidth;
							}
							$('p#vtip').css("top", this.top+"px").css("left", posLeft+"px").fadeIn(100);
							$("p#vtip").css('max-width', '600px');
						}
						if($(this).hasClass('short-vtip')) {
							$("p#vtip").css('width', '200px').css('word-break', 'break-all');
						}
						else if($(this).hasClass('info-enr-upload')) {
							$("p#vtip").css('max-width', '230px');
						}
					}
					this.titletemp = this.t;
					
				},
				function() {
					if($(this).hasClass('browse-button-vtip')) {
						this.title = "";
					} else {
						this.title = this.t;
					}
					$("p#vtip").fadeOut("slow").remove();
				}
		).mousemove(
				function(e) {
					if(this.t != '') {
						this.pageCon=$("#page-container").offset();
						this.docW=$(document).width();
						this.pageConLpos=this.pageCon.left;
						this.pageConw=$("#page-container").width();
						this.curWidth=this.left - this.pageConLpos;
						this.totWidthC=this.pageConw -this.curWidth;
						this.top = (e.pageY + yOffset);
						//this.left = (e.pageX + xOffset);

						if(this.t == Drupal.t('LBL847') || this.t == Drupal.t('LBL846')) {
							this.left = (e.pageX + xOffset)-95;
						} else {
							this.left = (e.pageX + xOffset);
						}
						if(this.strLen>100) {
							var pvtipwidth = $("p#vtip").width();
							var posLeft = this.left;
							var vtiparrow = pvtipwidth -15;
							if(this.totWidthC < 500){
								if($(this).hasClass('info-enr-upload')){
									$('p#vtip #vtipArrow').css('left','195px');
									posLeft = posLeft -200;
								}else if($("#cp-modalcontainer").hasClass('fullscreen-mode')){
								posLeft = posLeft -pvtipwidth;
								$('p#vtip #vtipArrow').css('left',vtiparrow+'px');
								}else{ 
								$('p#vtip #vtipArrow').css('left','200px');
								posLeft = posLeft -300;
								}
							}else{
								$('p#vtip #vtipArrow').css('left','5px');
							}
							
							$('p#vtip').css("top", this.top+"px").css("left", posLeft+"px").css('width','500px').fadeIn(100);
						} else {
							var pvtipwidth = $("p#vtip").width();
							var posLeft = this.left;
							var vtiparrow = pvtipwidth -10;
							if(this.totWidthC < pvtipwidth){
								posLeft = posLeft -pvtipwidth;
								$('p#vtip #vtipArrow').css('left',vtiparrow+'px');
							}else{
								$('p#vtip #vtipArrow').css('left','5px');
							}
							$('p#vtip').css("top", this.top+"px").css("left", posLeft+"px").fadeIn(100);
							$("p#vtip").css('max-width', '600px');
						}
						if($(this).hasClass('short-vtip')) {
							$("p#vtip").css('width', '200px').css('word-break', 'break-all');
						}
						else if($(this).hasClass('info-enr-upload')) {
							$("p#vtip").css('max-width', '230px');
						}
					}
				}
		).mousedown(
				function(e) {
					if($(this).hasClass('browse-button-vtip')) {
						this.title = "";
					} else {
						this.title = this.t;
					}
					$("p#vtip").fadeOut("slow").remove();
				}
		);
		$('.lnrreports-search-display-table-name').removeClass('fade-out-title-container-unprocessed');
		$('.lnrreports-search-table-accordion-content').removeClass('fade-out-title-container-unprocessed');//fix for reports issue
		$('.fade-out-title-container-unprocessed').each(function() {
			//console.log('unprocessed'+$(this).width());
			//console.log('span'+$(this).find('.title-lengthy-text').width());
			if(($(this).width() >= $(this).find('.title-lengthy-text').width() && $(this).find('.title-lengthy-text').width() != 0) || $(this).find('.title-lengthy-text').text() == '') {
				$(this).find('.fade-out-image').remove();
			}
			$(this).removeClass('fade-out-title-container-unprocessed');
		});
		/*0051180: Title Restriction - Space available to display the report name */
		$('#paintLearnerReportsResults').find('.spotlight-item-title').each(function() {
			if($(this).width() >= $(this).find('.title-lengthy-text').width() && $(this).find('.title-lengthy-text').width() != 0) {
				$(this).find('.fade-out-image').remove();
			}
		});
		/*0051207: In Class page,fadeout effect were applied even it is small text. */
		$('#narrow-search-filtersets-holder').find('.narrow-search-filterset-item-label').each(function() {
			if($(this).width() >= $(this).find('.title-lengthy-text').width() && $(this).find('.title-lengthy-text').width() != 0) {
				$(this).find('.fade-out-image').remove();
			}
		});
		$('#paintLanguage').find('.srch-label-cls').each(function() {
			if($(this).width() >= $(this).find('.title-lengthy-text').width() && $(this).find('.title-lengthy-text').width() != 0) {
				$(this).find('.fade-out-image').remove();
			}
		});
		$('#admin-add-permissions').find('.user-list-detail').each(function() {
			if($(this).width() >= $(this).find('.title-lengthy-text').width() && $(this).find('.title-lengthy-text').width() != 0) {
				$(this).find('.fade-out-image').remove();
			}
		});
		$('#group-scroll-wrapper').find('.cls-access-list-select').each(function() {
			if($(this).width() >= $(this).find('.title-lengthy-text').width() && $(this).find('.title-lengthy-text').width() != 0) {
				$(this).find('.fade-out-image').remove();
			}
		});
		/*$('.session-details-warpper').find('.class-detail-session-instructor-fadeout-container').each(function() {
			if($(this).width() >= $(this).find('.title-lengthy-text').width() && $(this).find('.title-lengthy-text').width() != 0) {
				$(this).find('.fade-out-image').remove();
			}
		});
		$('.content-instructor-detail').find('.class-detail-ins-details-name-fadeout-container').each(function() {
			if($(this).width() >= $(this).find('.title-lengthy-text').width() && $(this).find('.title-lengthy-text').width() != 0) {
				$(this).find('.fade-out-image').remove();
			}
		});
		$('.content-instructor-detail').find('.class-detail-ins-details-job-fadeout-container').each(function() {
			if($(this).width() >= $(this).find('.title-lengthy-text').width() && $(this).find('.title-lengthy-text').width() != 0) {
				$(this).find('.fade-out-image').remove();
			}
		});*/
	}catch(e){
		// to do
	}
}
/*
 * Added by Vincent on July 18, 2012 to fix issue #0013955: The tooltip of announcement in homepage is displayed as 'undefined'
 * The root cause of the above issue is the vtip() is called on mouseover then only it has initialized and show the content
 * but before that the browsers default tooltip will be displayed. To avoid that here I called this function to initialize it.
 */

resetFadeOutByClass('.embedWigetPageContainer #class_detail_content .content-row-container','content-detail-code','line-item-container','class_details'); 
resetFadeOutByClass('.embedWigetPageContainer #course_detail_content .content-row-container','content-detail-code','line-item-container','class_details'); 
resetFadeOutByClass('.embedWigetPageContainer #lnp-details-content .content-row-container','content-detail-code','line-item-container','class_details'); 
 
vtip();

/* "Vtip" - tooltip end*/

//#6034 - To popup the user login screen, while user click the account link from mail
$(function() {
	try{
    var curUrl     	= window.location.search.substring(1);
    var splitUrl 	= curUrl.split('&');

    if(splitUrl[1] == 'destination=learning/my-account' || splitUrl[1] == 'destination=learning/enrollment-search' || splitUrl[1] == 'destination=learning/myteam-search') {
    	$(document).ready(function() {
    		//$(".ctools-modal-ctools-login-style").click();
    		$("#signin").click();
    	});
    }
	}catch(e){
		// to do
	}
});
/*
* The below statement is common for all the ctool popup start
*/
$('body').live('hover', function(){
	try{
	if($('#modalBackdrop').is(':visible') == true) {
		var getPopupCurrentHeight = '';
		getPopupCurrentHeight = $(document).height();
		$('#modalBackdrop').css('height',getPopupCurrentHeight+'px');
	}
	}catch(e){
		// to do
	}
});
$('body').live('mouseover', function(){
	try{
	if($('#modalBackdrop').is(':visible') == true) {
		var getPopupCurrentHeight = '';
		getPopupCurrentHeight = $(document).height();
		$('#modalBackdrop').css('height',getPopupCurrentHeight+'px');
	}
	}catch(e){
		// to do
	}
});
$('#modalBackdrop').live('hover', function(){
	try{
	if($('#modalBackdrop').is(':visible') == true) {
		var getPopupCurrentHeight = '';
		getPopupCurrentHeight = $(document).height();
		$('#modalBackdrop').css('height',getPopupCurrentHeight+'px');
	}
	}catch(e){
		// to do
	}
});
$('body').live('mousedown', function(){
	try{
	if($('#modalBackdrop').is(':visible') == true) {
		var getPopupCurrentHeight = '';
		getPopupCurrentHeight = $(document).height();
		$('#modalBackdrop').css('height',getPopupCurrentHeight+'px');
	}
	}catch(e){
		// to do
	}
});
$('body').live('DOMMouseScroll', function(){
	try{
	if($('#modalBackdrop').is(':visible') == true) {
		var getPopupCurrentHeight = '';
		getPopupCurrentHeight = $(document).height();
		$('#modalBackdrop').css('height',getPopupCurrentHeight+'px');
	}
	}catch(e){
		// to do
	}
});
$('body').live('keydown', function(){
	try{
	if($('#modalBackdrop').is(':visible') == true) {
		var getPopupCurrentHeight = '';
		getPopupCurrentHeight = $(document).height();
		$('#modalBackdrop').css('height',getPopupCurrentHeight+'px');
	}
	}catch(e){
		// to do
	}
});
/*
* The changes end
*/
$('body').click(function (event) {
	try{
	if(event.target.id!='pub-unpub-action-btn') {
		$('.narrowsearch-pub-add-list').hide();
	}
	}catch(e){
		// to do
	}
});
$('body').click(function (event) {
	try{
	if(event.target.className!='enroll-launch-more') {
		$('.enroll-action').hide();
	}
	}catch(e){
		// to do
	}
});
$('body').click(function (event) {
	try{
	if(event.target.className!='myteam-learning-arrow') {
		$('.myteam-more-action').hide();
	}
	}catch(e){
		// to do
	}
});
$('body').click(function (event) {
	try{
	if(event.target.className!='resource-add-action-wrapper') {
		$('.resource-add-list').hide();
	}
	}catch(e){
		// to do
	}
});

$('body').click(function (event) {
	try{
	if(event.target.id!='pub-unpub-action-btn' && event.target.id!='completedandsave_trigger' && $('.ui-datepicker').is(':hidden')
			&& !$(event.target).hasClass('enrollement-date-picker') && !$(event.target).hasClass('completion_container_roster')) {
		$('.catalog-pub-add-list').hide();
	}
	}catch(e){
		// to do
	}
});
$('body').click(function (event) {
	try{
	if(event.target.className!='man-opt-selection') {
			$('.sub-menu').hide();
		}
	}catch(e){
		// to do
	}
});
/* Catalog addmore button implemented  */
$('body').click(function (event) {
	try{
	if(event.target.className!='pub-unpub-add-action-wrapper') {
		$('.resource-add-list').hide();
	}
	}catch(e){
		// to do
	}
});
$('body .item-long-desc a,body .detail-desc a,body .item-short-desc a').live("click",function() {
	try{
	 $(this).attr('target', '_blank');
	}catch(e){
		// to do
	}
});
$('body .more-text a').live("click",function(event) {
	try{
	event.preventDefault();
	}catch(e){
		// to do
	}
});
$('body').click(function(event){
	try{
	if(Drupal.settings.ajaxPageState.theme == "expertusoneV2"){
	if(event.target.className != 'find-trng-sort-text' && event.target.className != 'frm-topic-list-sort-text' && event.target.className != 'frm-list-sort-text' && event.target.className != 'sort-by-text' && event.target.className !='narrow-search-sortbar-sorttext' && event.target.className !='find-trng-sortby' && event.target.className !='find-trng-sort-arrow-icon' && event.target.className != 'sort-by-text active') {
         $('.sort-by-links').hide();
		$('.sort-by-links').parents('#find-trng-sort-display').removeClass('sort-active');
         $('.narrow-search-sortbar-sortlinks').hide();
         $('.sort-by-change-links').hide();
        }
	if(event.target.className !='myteam-cat-delivery-type-link')	{
		       $('#myteam-cat-delivery-type-list').hide();
		}
	 var target = $(event.target).parents('.attach-grp-links');
	 if(target.length == 0 && $(event.target).parents('#list-options-tp').length == 0 && !$(event.target).hasClass('msg-close-btn')){
			$('.attach-grp-links').hide();
		}
	}

	}catch(e){
		// to do
	}
    });

/* Vtip tooltip */
$('.vtip').mouseover(function () {
	try{
	vtip();
	}catch(e){
		// to do
	}
});

/* System admin in home page */
$("#secondary-menu li a:contains('System Admin')").replaceWith('<span class="system-admin-arrow-link">System Admin</span>');
$('.system-admin-arrow-link').click(function() {
	try{
	$('#system-admin-menu').toggle();
	}catch(e){
		// to do
	}
});
$('body').click(function (event) {
	try{
	if(event.target.className!='system-admin-arrow-link') {
		$('#system-admin-menu').hide();
	}
	}catch(e){
		// to do
	}
});

/*
 * updateSelectFieldStyleOnChange() - 'Select' text in select fields when showing is to be greyed out.
 */
function updateSelectFieldStyleOnChange(obj) {
	try{
  //console.log('In updateSelectFieldStyleOnChange');
  //console.log(obj);
  var selectTxt = $('option:selected', obj).text();
  //console.log('selectTxt = ' + selectTxt);
  if(selectTxt == 'Select') {
    $(obj).removeClass('select-normal-text');
    $(obj).addClass('select-greyed-out-text');
  } else {
    $(obj).removeClass('select-greyed-out-text');
    $(obj).addClass('select-normal-text');
  }
	}catch(e){
		// to do
	}
}

/*
 * Drupal.behaviors.expSelectFieldStyle to show 'Select' text in select fields as greyed out
 */
Drupal.behaviors.expSelectFieldStyle =  {
  attach: function (context, settings) {
	  try{
    $('.exp-select-field-style:not(.exp-select-style-processed)').addClass('exp-select-style-processed').each(function () {
      var selectTxt = $('option:selected', this).text();
      //console.log('selectTxt = ' + selectTxt);
      if(selectTxt == 'Select') {
        $(this).removeClass('select-normal-text');
        $(this).addClass('select-greyed-out-text');
      } else {
        $(this).removeClass('select-greyed-out-text');
        $(this).addClass('select-normal-text');
      }
    });
	  }catch(e){
			// to do
	  }
  }
};

/**
 * Added by vincent on 09 Jan 2012 to fix serializeToString issue
 * for IE9. IE9 is not supporting serializeToString function and
 * it throws "no such interface supported" error. To avoid this
 * error and make our product to support IE9 the following fix
 * is needed. This is a temporary fix, if this issue is sorted out
 * in IE9 remove this fix.
 */
//if(Sarissa._SARISSA_IS_IE && parseFloat(navigator.appVersion.substring(navigator.appVersion.indexOf("MSIE")+5)) >=9) {
if(parseFloat(navigator.appVersion.substring(navigator.appVersion.indexOf("MSIE")+5)) >=9) {
	try{
	window.XMLSerializer = function(){};
	window.XMLSerializer.prototype.serializeToString=function(oNode){return oNode.xml;}
	}catch(e){
		// to do
	}
}

$(document).keydown(function(e){
	try{
    if ( e.keyCode == 8 && e.target.tagName != 'INPUT' && e.target.tagName != 'TEXTAREA') {
        e.preventDefault();
    }
	}catch(e){
		// to do
	}
});

function showAccountSettings () {
	try{
	if(Drupal.settings.ajaxPageState.theme == "expertusoneV2"){
		$('#account_setting').toggle();
	}else{
		$('#account_setting').show();
	}
	}catch(e){
		// to do
	}
}

//Close styling pop-up
$('.account-close-popup').live('click', function(){
	try{
	$('#account_setting').css('display','none');
	}catch(e){
		// to do
	}
});

$('body').bind('click', function(event) {
 try{
  if(event.target.id != 'my-account-settings'){
   $('#account_setting').css('display','none');
  }
 }catch(e){
		// to do
	}
});


/*
 * descController() - To Return Short and Long Description according to the number of characters required. Already we have same function in core.inc for PHP usage
 * This Function has Two Parameters
 * No.1 : $keyword - a unique keyword to be checked inside to change the function level variable
 * No.2 : $cString - the source string which would be worked upon.
 *
 * RETURN VALUES
 *     1. The Short Description String along with its tag element.
 *     2. The ellipsis along with its tag element
 *     3. The Long Description String along with its tag elements.
 *     4. The Anchor link showing up the arrow, which carries its show/hide functionality.
 */
function descController(keyword, cString,len) {
try{
  var cString 		= cString.replace(/(<([^>]+)>)/ig,"");
  var string_len 	= cString.length;
  var keyword 		= keyword.toUpperCase();
  var maxLength 	= 0;
  switch(keyword) {
    case 'ADMIN FORUM COURSES':
      maxLength = 250;
      break;
    case 'CALENDAR CODE':
      maxLength = 7;
      break;
  }
  if(typeof len != 'undefined')
	  maxLength = len;
  //var isutfstr = cString.fromCharCode(ascii_code);
  var res ='';
  if (typeof(cString) == 'string'){
	  if(string_len > maxLength) {
		  if(keyword != 'FADE OUT'){
	 		res +=  '<span class="item-short-desc">'+cString.substr(0, maxLength-1)+'</span>';
	        res += '<span class="item-elipsis">...</span>';
	        res += '<span class="item-long-desc">'+cString.substr(maxLength-1)+'</span>';
	        res += '<span class="more-text">';
	        res += '<a href="javascript:void(0)" onclick="detailsShowHide(this);" class="show-short-text more-icon-sec">&nbsp;</a></span>';
		  }else{
			  var sText = cString.substr(0, maxLength-1);
			  res += sText+'<span class ="textfade">'+cString.substr(sText.length, 2)+'</span><span class ="textfade1">'+cString.substr((sText.length + 2), 1)+'</span>';
		  }
	  } else {
		  if(keyword != 'FADE OUT'){
			  res += '<span class="item-short-desc">'+cString+'</span>';
		  }else{
			  res += cString;
		  }
	  }
  }else{
		if(string_len > maxLength) {
				var pos=0;
				for(var i = maxLength; i >= 0; i--){
					var chara = Substr(cString,i,1);
					if(empty(chara) || chara == ' ' || ctype_space(chara) || preg_match('/\s/', chara, m, PREG_OFFSET_CAPTURE) || is_null(chara)){
						pos = i;
						break;
					}
				}
				if(pos != 0) {
					if(keyword != 'FADE OUT'){
						res += '<span class="item-short-desc">'+cString.substr(0, pos)+'</span>';
						res += '<span class="item-elipsis">...</span>';
						res += '<span class="item-long-desc">'+cString.substr(pos)+'</span>';
						res += '<span class="more-text">';
						res += '<a href="javascript:void(0)" onclick="detailsShowHide(this);" class="show-short-text">&nbsp;</a></span>';
					}else{
						var sText = cString.substr(0, pos);
						res += sText+'<span class ="textfade">'+cString.substr(sText.length, 2)+'</span><span class ="textfade1">'+cString.substr((sText.length + 2), 1)+'</span>';
					}
	      } else {
	    	  if(keyword != 'FADE OUT'){
	    		  res += '<span class="item-short-desc">'+cString+'</span>';
	    	  }else{
	    		  res += cString;
	    	  }
	      }
  	} else {
  		if(keyword != 'FADE OUT'){
  			res += '<span class="item-short-desc">'+cString+'</span>';
  		}else{
  			res += cString;
  		}
  	}

  }
  return res;
}catch(e){
	// to do
}
}
/*Strip tag for removing html in JS*/

/*function strip_tags_addComments(html) {
	//PROCESS STRING
	if(arguments.length < 3) {
		html=html.replace(/<\/?(?!\!)[^>]*>/gi, '');
	} else {
		var allowed = arguments[1];
		var specified = eval("["+arguments[2]+"]");
		if(allowed){
			var regex='</?(?!(' + specified.join('|') + '))\b[^>]*>';
			html=html.replace(new RegExp(regex, 'gi'), '');
		} else{
			var regex='</?(' + specified.join('|') + ')\b[^>]*>';
			html=html.replace(new RegExp(regex, 'gi'), '');
		}
	}

	//CHANGE NAME TO CLEAN JUST BECAUSE
	var shortForum_string = html;

	//RETURN THE CLEAN STRING
	return shortForum_string;
}*/
/**
 * To display forum description with html entities.
 * @param shortString
 * @param fullString
 * @return
 */
function addExpanColapse(shortString,fullString,dataDelTypeCode,type,enr_id){
	try{
	if(Drupal.settings.ajaxPageState.theme == "expertusoneV2") {
		if(typeof(dataDelTypeCode)==='undefined') dataDelTypeCode = '';
	}else{
		dataDelTypeCode = '';
	}
	var res='';
	//var shortString=strip_tags_addComments(shortString);//strip tag for forum add comments
	var dispLength = shortString.length;
	var fullLenght = fullString.length;
	//console.log(shortDescForum);
	if(shortString.substr(dispLength-3)=="..."){
		res +=  '<span class="item-short-desc">'+shortString.substr(0,dispLength-3)+'</span>';
	    res += '<span class="item-elipsis">...</span>';
	    res += '<span class="item-long-desc">'+fullString+'</span>';
	    res += '<span class="more-text">';
	    if(type!='' && type != null && type!= undefined){
	    	if(type == 'TP')
	    		res += '<a href="javascript:void(0)" onclick="$(\'#prg-accodion-prg_'+enr_id+'\').click();" class="show-short-text more-icon-'+dataDelTypeCode.split('_').pop()+'">&nbsp;</a></span>';
	    	if(type=='ME')
	    		res += '<a href="javascript:void(0)" onclick="$(\'#class-accodion-'+enr_id+'\').click();" class="show-short-text more-icon-'+dataDelTypeCode.split('_').pop()+'">&nbsp;</a></span>';
	    	if(type=='MC')
	    		res += '<a href="javascript:void(0)" onclick="$(\'#enroll-main-action-'+enr_id+' [name='+Drupal.t('LBL816')+']\').click();" class="show-short-text more-icon-'+dataDelTypeCode.split('_').pop()+'">&nbsp;</a></span>';

	    }else
	    	res += '<a href="javascript:void(0)" onclick="descriptionShowHide(this);" class="show-short-text more-icon-'+dataDelTypeCode.split('_').pop()+'">&nbsp;</a></span>';
	}else{
		res += '<span class="item-short-desc">'+/*strip_tags_addComments(*/shortString/*)*/+'</span>';
	}
    return res;
	}catch(e){
		// to do
	}
}

/**
 * Forum description show/hide function
 * @param obj
 * @return
 */

function descriptionShowHide(obj){
	try{
	curObj = $(obj).parent(".more-text").siblings(".item-long-desc");
	shortObj = $(obj).parent(".more-text").siblings(".item-short-desc");
	elipsis = $(obj).parent(".more-text").siblings(".item-elipsis");
	if($(obj).hasClass("show-full-text")) {
		$(curObj).hide();
		$(elipsis).show();
		$(shortObj).show();
		$(obj).removeClass("show-full-text");
		$(obj).addClass("show-short-text");
		if($('#my-team-dialog #tbl-paintCatalogContentResults .find-training-txt span.more-text .show-full-text').length == 0) {
			$('#my-team-dialog #gview_tbl-paintCatalogContentResults').data('jsp') !== undefined && $('#my-team-dialog #gview_tbl-paintCatalogContentResults').data('jsp').destroy();
		}

	} else {
		$(curObj).show();
		$(elipsis).hide();
		$(shortObj).hide();
		$(obj).removeClass("show-short-text");
		$(obj).addClass("show-full-text");
		if($('#my-team-dialog #gview_tbl-paintCatalogContentResults').length){
		  $('#my-team-dialog #gview_tbl-paintCatalogContentResults').jScrollPane();
		}
	}
	/*-- #40207 - Jscrollpane container has more course/class --*/
	if ($('#lnr-prerequisite-container #gview_lnr-prerequisite').length) {
		$('#lnr-prerequisite-container #gview_lnr-prerequisite').jScrollPane();
	}
	if($('#select-class-dialog #gview_tbl-paintCatalogContentResults').length){
		$('#select-class-dialog #gview_tbl-paintCatalogContentResults').jScrollPane();
	}
	if($('.calviewmorepopup-content').length){
		$('.calviewmorepopup-content').jScrollPane();
	}
	}catch(e){
		// to do
	}
}

/**
 * Setting the cursor possion at the end of the content in the html editor
 * @param ed - tinyMCE active editor
 * @param node - tinyMCE active editor body node
 * @param start - (0 or 1)whether to update the dummy character at start or end
 * @param return_node - booleon whether to remove the added dummy character or not
 * @return
 */

function setCursor(ed, node, start, return_node){
	try{
	  tn = ed.getDoc().createTextNode("");
	  if (start){
	    node.insertBefore(tn, node.firstChild);
	  }
	  else node.lastChild.appendChild(tn);
	  rng = ed.selection.getRng();
	  rng.selectNode(tn);
	  rng.setStartBefore(tn);
	  rng.setStartAfter(tn);
	  ed.selection.setRng(rng);
	  if (return_node) return tn;
	  node.lastChild.removeChild(tn);
	  //callMessageWindow('Warnning','Maximum character reached',ed);
	  ed.focus();
	}catch(e){
		// to do
	}
 }

function expertus_error_message(message,type){
	try{
	var nsParts = window.location.href.split("/?q=");
	var html = '';
	var html1 = '';
	var commonErrorMessage = Drupal.t('ERR101');
	var multiplemessage =  Drupal.t('ERR169');
	var conMessage = Drupal.t('LBL647');
	conMessage = conMessage.toLowerCase();
	conMessage = ' '+conMessage+' ';
	var newmessage = new Array();
	newmessage[0] = '';
	var count = message.length;
	var newcount;
	var pos;
	var inc = 1;
	var replace_message;
	if (count>1){
		for(var i=0;i<count;i++){
			message[i] =  $.trim(message[i]);
			if(message[i].indexOf(commonErrorMessage)>=0){
				replace_message = message[i].replace(commonErrorMessage,'');
				replace_message = $.trim(replace_message);
				newmessage[0] = (newmessage[0] =='') ? replace_message : newmessage[0]+','+replace_message;
			}
			else{
				newmessage[inc] = message[i];
		        inc++;
		      }
		}
		if(newmessage[0] != ''){
			var position = newmessage[0].lastIndexOf(',');
			if(position>=0){
				var firstMsg = newmessage[0].substring(0,position);
				var secondMsg = newmessage[0].substring(position);
				secondMsg = secondMsg.replace(',' , conMessage);
				newmessage[0] = firstMsg+secondMsg +multiplemessage;
			}
			else{
				newmessage[0] = newmessage[0]+commonErrorMessage;
			}
			message = newmessage;
		}
	}
	newcount = message.length;
	if(newcount >0){
		html1+='<div id="message-container"><div class="messages '+type+'">';
		if(newcount >1){
			var outputval = '';
			for(var start=0; start < newcount; start++){
				outputval += '<li class="hide"><span>' + message[start]+ '</span></li>';
	        }
			html+='<span class="qtip-error-msg-display"><ul>'+outputval+'</ul></span>';
		}
		else {
			html+='<ul><li><span>'+message[0]+'</span></li></ul>';
		}
	}
	/*if(newcount>1){
		html+= "<div class='msg-minmax-icon'></div>";
      }*/
	if(nsParts[1] == 'cart/checkout'){
	var msgVal = $('#message-container').html();
	if(msgVal == null || msgVal ==''){
		html=html1+html;
		html+='<div class="msg-close-btn" onclick="$(\'body\').data(\'learningcore\').closeErrorMessage();"></div></div></div>';
		html+='<img onload="$(\'body\').data(\'learningcore\').showHideMultipleLi();" style="display:none;" src="sites/all/themes/core/expertusone/expertusone-internals/images/close.png" height="0" width="0" />';
	}else{
		html = '</br>'+html;
	}
	return html;
	}else{
		html=html1+html;
		html+='<div class="msg-close-btn" onclick="$(\'body\').data(\'learningcore\').closeErrorMessage();"></div></div></div>';
		html+='<img onload="$(\'body\').data(\'learningcore\').showHideMultipleLi();" style="display:none;" src="sites/all/themes/core/expertusone/expertusone-internals/images/close.png" height="0" width="0" />';
		return html;
	}
	}catch(e){
		// to do
	}
}
function checkboxSelectedUnselectedCommon(id,entityId,entityType){
	try{
	if($(id).attr('type')!='radio'){
		if($(id).is(':checked')){
			$(id).parent().removeClass('checkbox-unselected');
			$(id).parent().addClass('checkbox-selected');
		}
		else {
			$(id).parent().removeClass('checkbox-selected');
			$(id).parent().addClass('checkbox-unselected');
		}
	}

	var txtInput = $(id).attr('name').split('-');
	if(txtInput[0].indexOf('attach_attributes[]') != -1) {
		var bool=true;
		$("input[name='"+id.name+"']").each(function(){
			if(!($(this).is(":checked")))
			{
				bool=false;
			}
		});
		if(bool)
		{
			$("#usr_select").parent().removeClass('checkbox-unselected');
			$("#usr_select").parent().addClass('checkbox-selected');
		}
		else
		{
			$("#usr_select").parent().removeClass('checkbox-selected');
			$("#usr_select").parent().addClass('checkbox-unselected');
		}
	}
	
	/*--#38292 - issue fix--*/
	if(txtInput[0].indexOf('attach_business_rules') != -1) {
		var cheklen = $('#business-rules-table .brl-checkbox-input').length;
		var tempResult = $('#business-rules-table #business-rule-' + $(id).attr('value')).attr('checked');
		if(cheklen > 1) {
			$('#business-rules-table .brl-checkbox-input').each(function(index, value) {
				$(this).parent('div').addClass('checkbox-unselected');
				$(this).removeAttr('checked');
			});
		}
		if(tempResult == true) {
			$('#business-rules-table #business-rule-' + $(id).attr('value')).parent('div').removeClass('checkbox-selected');
			$('#business-rules-table #business-rule-' + $(id).attr('value')).parent('div').removeClass('checkbox-unselected');
			$('#business-rules-table #business-rule-' + $(id).attr('value')).parent('div').addClass('checkbox-selected');
			$('#business-rules-table #business-rule-' + $(id).attr('value')).attr('checked', 'checked');
		}
	}
	if(txtInput[1] == 'assessment' && $(id).attr('type') == 'radio'){
		var getID = $(id).attr('name').split('_');
        $('#assessment-maxattempt-'+getID[4]).removeAttr('disabled');
        $('#assessment-maxattempt-'+getID[4]).val("1");
        var $inputs = $("#datagrid-container-assessment-"+entityId+"-"+entityType+" :text");
        var values = {};
        $inputs.each(function() {
            values[this.name] = $(this).attr('id');
            if($('#assessment-maxattempt-'+getID[4])){
            	$('#assessment-maxattempt-'+getID[4]).removeAttr('disabled');
                $('#assessment-maxattempt-'+getID[4]).val("1");
            }
            if('#'+values[this.name] != '#assessment-maxattempt-'+getID[4]){
            	$('#'+values[this.name]).attr('disabled','disabled');
            	$('#'+values[this.name]).val("");
            }


        });
	}else if(txtInput[0] == 'groupuser'){
		var attr = $(id).attr('id').split('-'),
		grpId = attr[2],
		usrId = attr[3],
		action = '';
		if($(id).is(':checked')){
			action = 'remove';
		}else{
			action = 'add';
		}
		$('#root-admin').data('peoplegroup').rowEditGroupuser(grpId,usrId,action);
	}

	//Custom Attribute Changes #custom_attribute_0078975
	if(txtInput[0].indexOf('ent_view_opt[]') != -1) {

		/*if($('input[id^="view_opt_"]').parent().hasClass('checkbox-selected')){
			$('input[id^="edit_opt_"]').parent().removeClass('checkbox-unselected');
			$('input[id^="edit_opt_"]').parent().addClass('checkbox-selected'); 
			$('input[id^="edit_opt_"]').prop( "checked", true );
			
		}*/
		if($('#view_opt_' + $(id).attr('value')).parent().hasClass('checkbox-selected')){
			$('#edit_opt_' + $(id).attr('value')).parent().removeClass('checkbox-unselected');
			$('#edit_opt_' + $(id).attr('value')).parent().addClass('checkbox-selected'); 
			$('#edit_opt_' + $(id).attr('value')).prop( "checked", true );
			
		}	
	} else if(txtInput[0].indexOf('ent_edit_opt[]') != -1) {

		/*if($('input[id^="edit_opt_"]').parent().hasClass('checkbox-unselected')){
			$('input[id^="view_opt_"]').parent().removeClass('checkbox-selected');
			$('input[id^="view_opt_"]').parent().addClass('checkbox-unselected');
			$('input[id^="view_opt_"]').prop( "checked", false );
		}*/
		if($('#edit_opt_' + $(id).attr('value')).parent().hasClass('checkbox-unselected')){
			$('#view_opt_' + $(id).attr('value')).parent().removeClass('checkbox-selected');
			$('#view_opt_' + $(id).attr('value')).parent().addClass('checkbox-unselected');
			$('#view_opt_' + $(id).attr('value')).prop( "checked", false );
		}
	}
	
	}catch(e){
		// to do
	}
}

function sortTypeToggle(toggleClassName) {
	try{
	$('.'+toggleClassName).toggle();
	}catch(e){
		// to do
	}
}
//$('#message-container').remove();

function changeDialogPopUI()
{
	try{
	var recls=$('.removebutton').css("display");
	 var chkchangeClsOverride=$( ".ui-dialog" ).hasClass("popupLeftCorner" );
     if(chkchangeClsOverride==false){
	 $('.ui-dialog-titlebar').wrapAll(document.createElement('div'));
	 $('.ui-dialog-titlebar').parents('div').addClass('popupLeftCorner');
	 $('.ui-dialog-titlebar').wrapAll(document.createElement('div'));
	 $('.ui-dialog-titlebar').parents('div').addClass('popupRightCorner');
	 $('.ui-dialog').find('.popupLeftCorner').removeClass('popupRightCorner');
	 $('.ui-dialog').addClass('expertusV2PopupContainer');
	 $('.ui-dialog-buttonpane,.launch-wizard-content,.user-popout-container,.assign-learning-team,.edit-report-wizard, .launch-lp-wizard-content, #lesson-wizard, .pre-select-class').after('<div class="popupBotLeftCorner ui-helper-clearfix"><div class="popupBotRightCorner"><div class="popupBotmiddle"></div></div></div>');

	//close button script
	// $('.removebutton').wrapAll(document.createElement('div'));
	 //$('.removebutton').parent('div').addClass('white-btn-bg-container');
	// alert(recls);
	 if(recls=="block" || recls=='inline-block'){
	 $('.removebutton').before('<div class="white-btn-bg-left"></div>');
	 $('.removebutton').addClass('white-btn-bg-middle');
	 $('.removebutton').after('<div class="white-btn-bg-right"></div>');
	 }
	}}catch(e){
		// to do
	}
}
function changeChildDialogPopUI(parentDiv)
{
	try{
	var recls=$('#' + parentDiv + ' .removebutton').css("display");
	//var chkchangeClsOverride1=$( ".ui-dialog" ).hasClass("popupLeftCorner" );
	var chkchangeClsOverride1=$( '#' + parentDiv + ' .ui-dialog' ).hasClass("popupLeftCorner" );
    if(chkchangeClsOverride1==false){
	 $('#' + parentDiv + ' .ui-dialog-titlebar').wrapAll(document.createElement('div'));
	 $('#' + parentDiv + ' .ui-dialog-titlebar').parents('div').addClass('popupLeftCorner');
	 $('#' + parentDiv + ' .ui-dialog-titlebar').wrapAll(document.createElement('div'));
	 $('#' + parentDiv + ' .ui-dialog-titlebar').parents('div').addClass('popupRightCorner');
	 $('#' + parentDiv + ' .ui-dialog').find('.popupLeftCorner').removeClass('popupRightCorner');
	 $('#' + parentDiv + ' .ui-dialog').addClass('expertusV2PopupContainer');
	 $('#' + parentDiv + ' .ui-dialog-buttonpane').after('<div class="popupBotLeftCorner ui-helper-clearfix"><div class="popupBotRightCorner"><div class="popupBotmiddle"></div></div></div>');

	 if(recls=="block" || recls=='inline-block'){
	   $('#' + parentDiv + ' .removebutton').before('<div class="white-btn-bg-left"></div>');
	   $('#' + parentDiv + ' .removebutton').addClass('white-btn-bg-middle');
	   $('#' + parentDiv + ' .removebutton').after('<div class="white-btn-bg-right"></div>');
	 }
	}}catch(e){
		// to do
	}
}

function xss_validation(x){
	try{
		//change by ayyappans for 40543: Irrelavant Validation message appears
		var Re = /(<[^>]+?[\x00-\x20\"\'])(?:on|xmlns)|(<[^>]+?[\x00-\x20\"\'])(?:script)|(<+?(script|img|image|input|body|alert|meta|&lt;|&gt;|xmlns|iframe|br|frameset)\s)|(<+?(script|xmlns|iframe|frameset|body))/ig;
		x = x.replace(Re," ");
		return x;
	}catch(e){
		// to do
	}
}

var nsParts = window.location.href.split("/?q=");
// Restrict the Page For Expertus Show Message
if(nsParts[1] != 'cart/checkout' && nsParts[1] != 'cart/checkout/paymethod' && nsParts[1] != 'cart/checkout/review' && nsParts[1] != 'user/password'
	&& (window.location.href.indexOf('user/password&language')< 0) && nsParts[1] !='learning/reset-password' && nsParts[1] != 'administration/order/create'
	&& nsParts[1] != 'administration/order/pay' && nsParts[1] != 'cart' && (nsParts[1] !=undefined && nsParts[1].indexOf('clientcreation') < 0)){
	$('#message-container').remove();
}
Drupal.t('English');
Drupal.t('Simplified Chinese');
Drupal.t('German');
Drupal.t('French');
Drupal.t('Spanish');
Drupal.t('Italian');
Drupal.t('Japanese');
Drupal.t('Korean');
Drupal.t('Russian');

function editorOnClick(id){
	try{
	if(document.getElementById('cursor_id')!= null){//id == 'edit-message-value'){
		$('#cursor_id').val(id);
	}
	$('#message-container').remove();
	}catch(e){
			// To Do
		}
}

// Added by Vincent on 17 Jul 2014.
// Since IE8 does not support indexOf on array
// Below code will make that support.
if($.browser.msie && $.browser.version == 8){
	if (!Array.prototype.indexOf) {
		Array.prototype.indexOf = function(val,start){
		    var len = this.length;
		    start = (typeof start === 'number')?start:0;
		    if(start>=0){
		    	for (; start < len; start++){
		  	      if (start in this && this[start] === val) return start;
		  	    }
		    }else{
		    	start = len;
		    	for (; start >= 0; start--){
		  	      if (start in this && this[start] === val) return start;
		  	    }
		    }
		    return -1;
		  };
	}
}

//widget class/course/tp detail page table title controler
function class_course_tp_title_controler_for_widget(title){
	var widget_class_title = titleRestrictionFadeoutImage(title,'widget-class-title-default-value');
	var iwidth = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);
	return widget_class_title;
}

function scrollBar_Refresh(page){
	if(typeof(page)==='undefined') page = '';
	if(page == 'learning'){
		$('#my-team-dialog #gview_tbl-paintCatalogContentResults').css('height','662px'); // Default Height of the change class popup in my learning & programs
	}else if(page == 'catalog'){
		$('#select-class-dialog #gview_tbl-paintCatalogContentResults').css('height','780px'); // Default Height of the Select class popup in catalog
	}else if(page == 'tp-select-class'){
	    $('.lnr-tainingplan-register').css('height','500px');	    
		$('.lnr-tainingplan-register').jScrollPane().data().jsp.reinitialise();
		$("body").data("learningcore").refreshJScrollPane(".lnr-tainingplan-register");
		//return;
	}else{
		$('#my-team-dialog #gview_tbl-paintCatalogContentResults').css('height','600px'); // Default Height of the My team assign popup
	}
	var Resizedheight = $('#tbl-paintCatalogContentResults').height(); // Calculate Height

	if(page != 'catalog'){ // For learning and My team  and prerequisite pages
		if(page == 'prerequisite'){
			var preResizedheight = $('#gview_lnr-prerequisite #lnr-prerequisite').height(); // Calculate Height
			var PredefaultSize = $('#gbox_lnr-prerequisite .ui-jqgrid-view').height();
			if (PredefaultSize > preResizedheight) { // Resize the grid
				preResizedheight = (preResizedheight < 300) ? 300 : preResizedheight;
				$("#gview_lnr-prerequisite ").css("height", (preResizedheight + 5) + "px");
				$("#gview_lnr-prerequisite .jspContainer").css("height", (preResizedheight + 5) + "px");
			}
			if ($('#PrerequisteErrorMsg').length) {
				$("#gview_lnr-prerequisite ").css("height", (150) + "px");
				$("#gview_lnr-prerequisite .jspContainer").css("height", (150) + "px");
			}
			$("#gbox_lnr-prerequisite .jspContainer").jScrollPane();
		}else if(page == 'tp-select-class'){
		var Resizedheight = $('.lnr-tainingplan-register .enroll-show-morecourse').height(); // Calculate Height
		var defaultSize = $('.lnr-tainingplan-register').height();
			if (defaultSize > Resizedheight) { // Resize the grid
				$(".lnr-tainingplan-register").css("height", (Resizedheight + 3) + "px");
				$(".lnr-tainingplan-register .jspContainer").css("height", (Resizedheight + 3) + "px");
			}
		}else{
			var defaultSize = $('#my-team-dialog .ui-jqgrid-view').height();
			if (defaultSize > Resizedheight) { // Resize the grid
				$("#my-team-dialog #gview_tbl-paintCatalogContentResults ").css("height", (Resizedheight + 3) + "px");
				$("#my-team-dialog #gview_tbl-paintCatalogContentResults .jspContainer").css("height", (Resizedheight + 3) + "px");
			}
			$("#my-team-dialog #gview_tbl-paintCatalogContentResults").jScrollPane();
		}

	}else{
		var defaultSize = $('#select-class-dialog .ui-jqgrid-view ').height();
		if (defaultSize > Resizedheight) { // Resize the grid
			$("#select-class-dialog #gview_tbl-paintCatalogContentResults ").css("height", (Resizedheight + 20) + "px");
			$("#select-class-dialog #gview_tbl-paintCatalogContentResults .jspContainer").css("height", (Resizedheight + 20) + "px");
		}
		$("#select-class-dialog #gview_tbl-paintCatalogContentResults").jScrollPane();
	}
}

//after login auto register or add to cart related work start
$(function() {
	try{
		$("#user-login .learner-sign-close-link").live('click',function(){
			var user_selected_class_id = $.cookie("user_selected_class_id");
			 if(user_selected_class_id != null && user_selected_class_id !=undefined){
				 $.cookie("user_selected_class_id",'',{expires: -300});
				 $.cookie("user_selected_url", '',{ expires: -300 });
			 }
			 var user_selected_page_number = $.cookie("user_selected_page_number");
			 if(user_selected_page_number != null && user_selected_page_number !=undefined)
				 $.cookie("user_selected_page_number",'',{expires: -300});
			 var user_selected_row_number = $.cookie("user_selected_row_number");
			 if(user_selected_row_number != null && user_selected_row_number !=undefined)
				$.cookie("user_selected_row_number",'',{expires: -300});
		});
		$(".ctool-login-modal .popups-close").live('hover',function(){
			$('form').each( function(){
				if($(this).attr('id') == 'user-login'){
					$(".ctool-login-modal .popups-close a").each(function(){
					  this.setAttribute('onclick','clearCookie();');
					});
				}
			});
		});
	}catch(e){
		 // to do
	 }
});
function clearCookie(){
	var user_selected_class_id = $.cookie("user_selected_class_id");
	if(user_selected_class_id != null && user_selected_class_id !=undefined){
		 $.cookie("user_selected_class_id",'',{expires: -300});
		 $.cookie("user_selected_url", '',{ expires: -300 });
	}
	var user_selected_page_number = $.cookie("user_selected_page_number");
	if(user_selected_page_number != null && user_selected_page_number !=undefined)
		 $.cookie("user_selected_page_number",'',{expires: -300});
	var user_selected_row_number = $.cookie("user_selected_row_number");
	if(user_selected_row_number != null && user_selected_row_number !=undefined)
		 $.cookie("user_selected_row_number",'',{expires: -300});
}
//after login auto register or add to cart related work End
function HtmlEncode(s)
{
  var el = document.createElement("div");
  el.innerText = el.textContent = s;
  s = el.innerHTML;
  return s;
}

//To replace some special characters into html entities in javascript
function htmlEntities(str) {
    return String(str).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&#039;'); //54112
}

//after login auto register or add to cart related work End
$(function() {
	try{
	$('.enroll-launch-more').live("click",function(){
	var chkOverflow=$('#enroll-lp-result-container .enroll-action, #enroll-result-container .enroll-action').css("overflow");
    if(chkOverflow=="hidden" || chkOverflow=="visible" ){
    	$('#enroll-lp-result-container .enroll-action, #enroll-result-container .enroll-action').css("overflow","");
    }
	});
	}catch(e){
		 // to do
	}
});

function generateMyLearningActionList(actionList, actionKey) {
	  var listStr = '';
	  //console.log('actionKey: ' + actionKey);
	  for (var key in actionList) {
		if (key != actionKey) {
			listStr += '<li class="action-enable">' + actionList[key] + '</li>';
		}
	  }
	  return listStr;
}
function calRefreshAftClose() {
	if ($("#calendarprimaryview").size()) {
		calendarallpopupclose();
		getCalendarData();
		if ($.cookie != undefined) {
			$.cookie("delivery_type", "");
        	$.cookie("startdate", "");
		}
	}
}

function adminCalSuffix()
{
	if($.cookie != undefined && $.cookie("startdate") != null && $.cookie("startdate") != '')
		$("#start_date").val($.cookie("startdate"));//, moment(date).format("MM-DD-YYYY"));

	if($.cookie != undefined && $.cookie("delivery_type") != null && $.cookie("delivery_type") != "null" && $.cookie("delivery_type") != "") 
	{
		$("#delivery_type").val($.cookie("delivery_type"));
	}
	if($.cookie != undefined && $.cookie("delivery_type") == "lrn_cls_dty_vcl")
	{
		$(".addedit-edit-new_location").addClass("addedit-readonly-textfield");
		$(".addedit-edit-new_location").attr("disabled","disabled");
		$(".addedit-edit-new_location").attr("value","");
		$("#edit-max-seats").focus();
		
		
	}
}
/**
	function to dispose all/specific videojs player(s)
**/
function disposeVideoJSPlayer(playerId) {
  if(videojs.getPlayers()[playerId] !== undefined && videojs.getPlayers()[playerId] !== null) {
    videojs(playerId).dispose();
  } else if (playerId == 'all') {
	$.each(videojs.getPlayers(), function(index, player){
		if(player !== undefined && player != null) {
			videojs(index).dispose();
		}
	});
  }
 saveInterval = (typeof saveInterval == 'undefined' ? null : saveInterval);
 ajaxInterval = (typeof ajaxInterval == 'undefined' ? null : ajaxInterval);
 updateStatusToDB = (typeof updateStatusToDB == 'undefined' ? null : updateStatusToDB);
 videoTrackerProgress = null;
 clearInterval(saveInterval);
 clearInterval(ajaxInterval);
 clearInterval(updateStatusToDB);
}
function saniztizeJSData(str) {
	if (str == '' || str === null) {
		return '';
	}
	return htmlEntities(decodeURIComponent(str));
}
function openAttachmentCommon(url){
	try{
		url = prepareFileURL(url);
	var woption = "width=800,height=900,toolbar=no,location=yes,status=yes,menubar=no,scrollbars=yes,resizable=1";
	window.open(url, "_blank", woption);
	}catch(e){
		 // to do
	 }
}
function prepareFileURL(url){
	if(url=='')
		return '';
	url =decodeURIComponent(url);
	var url_arr = url.split('/');
	var url_len = url_arr.length;
	var old_file = url_arr[url_len-1];
	var new_file = encodeURIComponent(url_arr[url_len-1]);
	url = url.replace(old_file, new_file);
	return url;
}

function addslashesForReport(string) {
	try{
        return string.replace(/\\/g, '\\\\').replace(/</g, '&lt;').replace(/>/g, '&gt;').
        replace(/'/g, '\\\'').
        replace(/"/g, '&quot;'); 
  	}catch(e){
 		//Nothing to do
	}
}


function qtip_popup_paint(session_id,sessionDate,multisession,label, pageFrom){
	try {
	//	console.log(session_id);
		var html = '';
		var label = (label == 1 ? '(Location TZ)' : '(TZ)');	
		var width = (multisession > 1 ? '370' : '304');     
	    var  session_id = session_id+"-"+Math.floor(Math.random() * 1000000);
		var $qtipOptClassObj = {
			'entityId': session_id,
			'popupDispId' : 'location-session-details_'+session_id,
			'wid': width,
			'heg' : 60,
			'postype' : 'bottomright',
			'linkid' : 'manage-location-time-'+session_id,
			'dispDown' : 'Y'
		}
		
		if(pageFrom == 'mylearning-calendar') {
			$qtipOptClassObj.wid = 214;
			$qtipOptClassObj.top = -14;
			$qtipOptClassObj.heg = 57;
			$qtipOptClassObj.postype = 'bottomleft';
			$qtipOptClassObj.dispDown = 'N';
		}
		var stringified = JSON.stringify($qtipOptClassObj).replace(/"/g, '\'');
		
		html += '<div id="location-session-details_'+session_id+'" class="location-session-detail line-item-container">';
		html += '<span><a id="manage-location-time-'+session_id+'" class="manage-location-time" onclick="locationdetails('+stringified+');" href="javascript:void(0);">'+label+'</a></span>';
		html += '<span id="selSessionId-'+session_id+'" style="display: none;">'+sessionDate+'</span>';
		html += '<span style=" position:absolute; left:0px; top:0px;" class="qtip-popup-visible" id="visible-popup-'+session_id+'"></span>';
		html += '</div>';
		html += '<span id="visible-popup-'+session_id+'" class="qtip-popup-visible" style="display:none; position:absolute; left:0px; top:0px;"></span>';
		//html += '</div>';

		return html;

	} catch (e) {
		// TODO: handle exception
	window.console.log(e, e.stack);
	}
}
function enableLogin(e) {
    if (e.keyCode == 13) {
    	$('#my-login-container').find('form').submit();
 	    return false;  
    }
}
function checkEncodedState(data) {
try{
	if (encodeURIComponent(decodeURIComponent(data)) === data) {
		//console.log('$data is urlencoded');
		return true;
	} else {
		//console.log('$data is NOT urlencoded');
		return false;
	}
	}catch (e) {
       // window.console.log(e, e.stack);
       return false;
    }
}

function afterRenderRefineIcon(selector) {
    try {
        if (selector !== undefined) {
            var refineSelector = $(selector).find('.criteria-refine-icon');
        } else {
            var refineSelector = $('.criteria-refine-icon');
        }
        refineSelector.each(function() {
            //window.console.log($(this).find('div.refine-text'), $(this).find('div.refine-text .refine-text-span'));
            //window.console.log("'div.refine-text').width()", $(this).find('div.refine-text').width(), "('div.refine-text .refine-text-span').width()", $(this).find('div.refine-text .refine-text-span').width());
            if (($(this).find('div.refine-text').width() >= $(this).find('div.refine-text .refine-text-span').width()) && $(this).find('div.refine-text .refine-text-span').width() != 0) {
                $(this).find('div.refine-text .refine-text-fade').remove();
            }
        });
    } catch (e) {
        window.console.log(e, e.stack);
    }
}

function progressBarRound(dataId, value1, section,type,obj) {
	try {
		if(typeof obj == 'undefined'){
			obj = this;
		}
		var elementId = type + dataId;
		var strokeVal = 7;
		// If browser is IE then set value as 6
		if (navigator.userAgent.indexOf('MSIE') !== -1 || navigator.appVersion.indexOf('Trident/') != -1 || navigator.userAgent.indexOf('Edge/') != -1) {
			strokeVal = 6;   
		}
		if (!$('#'+elementId).hasClass('progress-updated')) {
    		setTimeout(function(){
    			if(typeof obj.bar == 'undefined' || typeof obj.bar[elementId] == 'undefined') {
    				var bar = new ProgressBar.Circle('#'+elementId, {
					  color: '#505050',
					 
					  // This has to be the same size as the maximum width to
					  // prevent clipping
					  strokeWidth: strokeVal,
					  trailWidth: strokeVal,
					  easing: 'easeInOut',
					  duration: 1400,
					  text: {
					    autoStyleContainer: false
					  },
					  from: { color: '#86D752', width: strokeVal},
					  to: { color: '#86D752', width: strokeVal},
					  // Set default step function for all animate calls
					  step: function(state, circle) {
					    circle.path.setAttribute('stroke', state.color);
					    circle.path.setAttribute('stroke-width', state.width);

					    var value = Math.round(value1 * 100);
					      circle.setText(value+"%");
					  }
					});
					if(typeof obj.bar == 'undefined') {
						obj.bar = [];
					}
    				obj.bar[elementId] = bar;
        			if (section == 'lp_class_progress') {
        				bar.text.style.fontSize = '9px';
        				bar.text.style.marginTop = '1px';
        			} else {
        				bar.text.style.fontSize = '0.8rem';
        			}
					bar.text.style.fontFamily = 'Ariel,,"Raleway", Helvetica, sans-serif';
					bar.animate(value1);
    			} else {
    				obj.bar[elementId].destroy();
    				var bar = new ProgressBar.Circle('#'+elementId, {
  					  color: '#505050',
  					 
  					  // This has to be the same size as the maximum width to
  					  // prevent clipping
  					  strokeWidth: strokeVal,
  					  trailWidth: strokeVal,
  					  easing: 'easeInOut',
  					  duration: 1400,
  					  text: {
  					    autoStyleContainer: false
  					  },
  					  from: { color: '#86D752', width: strokeVal},
  					  to: { color: '#86D752', width: strokeVal},
  					  // Set default step function for all animate calls
  					  step: function(state, circle) {
  					    circle.path.setAttribute('stroke', state.color);
  					    circle.path.setAttribute('stroke-width', state.width);
  					    var value = Math.round(value1 * 100);
					      circle.setText(value+"%");
  					  }
  					});
      				obj.bar[elementId] = bar;
          			if (section == 'lp_class_progress') {
          				bar.text.style.fontSize = '9px';
          				bar.text.style.marginTop = '1px';
          			} else {
          				bar.text.style.fontSize = '0.8rem';
          			}
  					bar.text.style.fontFamily = 'Ariel,,"Raleway", Helvetica, sans-serif';
  					bar.animate(value1);
    			}
			},100);
		}	
	} catch(e) {
		// console.log(e);
	}
}



function resetFadeOutByClass(selector,pcont,lcont,fromPage){
	try{
		// Selector required if page has multiple line item widgets 
		selector = (selector == null || selector == undefined) ? '' : selector; 
		pcont = (pcont == null || pcont == undefined) ? 'content-detail-code' : pcont; // Class of the parent level container
		lcont = (lcont == null || lcont == undefined) ? 'line-item-container' : lcont; // Class of each attribute container
		var lineWidth = $(selector + " ."+pcont).width() - 10; // Total width of the entire attribute line
		$(selector + ' .'+pcont).each(function(){ // Loop start for the parent level 
			var cnt = $(this).find("."+lcont).size(); // Number of line items
			//var parent = this;
			var data = [];
			if(cnt > 1){ // Line has more than one item
				// Calculate container total width with subtract the space of the pipe separator
				var contWidth = lineWidth - ((cnt - 1) * 10);
				// Calculate applicable width allocation for each item
				var avgWidth = Math.ceil(contWidth/cnt);
				var sWidth = contWidth; // Set total width of the container into the sharable width variable
				$(this).find('.'+lcont).not('.fadeout-applied').each(function(){ // Start loop for each items for calculation
					// Max with of the attribute
					if($(this).find('.fade-out-title-container').size() > 0){
						var mWidth = $(this).find('.fade-out-title-container').css('max-width').replace('px','');
						// Actual text width
						var aWidth = $(this).find('.title-lengthy-text').width();
						// Check for fade out required or not
						var fadeReq = (aWidth > avgWidth) ? 1 : 0;
						if(fadeReq == 0){
							// subtract the total container width with the actual text width if fade out not required
							// for identify the sharable width
							sWidth -= aWidth; 
							// Subtract the item count if fade out not required
							cnt--;
						}
						var tmp = {
						           'maxWidth':mWidth,
						           'textWidth':aWidth,
						           'avgSpace':avgWidth,
						           'fade':fadeReq
						};
					}else{
						var aWidth = $(this).width();
						var tmp = {
						           'maxWidth':0,
						           'textWidth':aWidth,
						           'avgSpace':0,
						           'fade':0
						};
						sWidth -= aWidth; 
						cnt--;
					}
					
					data.push(tmp);
				}); // End of line item loop
				//console.log(data);
				contWidth = sWidth; // reset container width with actual sharable width
				var idx = 0;
				$(this).find('.'+lcont).not('.fadeout-applied').each(function(){ // Start loop for each line item for set width
					var removeFade = false;
					if(data[idx].fade == 0){
						if($(this).find('.fade-out-title-container').size() > 0){
							$(this).find('.fade-out-title-container').css('max-width',data[idx].textWidth+"px");
							removeFade = true;
						}
					}else{
						if($(this).find('.location-session-detail').size() > 0){
							// Subtract width of the timezone link
							contWidth -= $(this).find('.location-session-detail').width() + 5;
						}
						//console.log("contewidht "+contWidth+" / "+cnt);
						
						// Recalculate the available space for each item based on the sharable space
						avgWidth = Math.ceil(contWidth/cnt); 
						mWidth = data[idx].maxWidth;
						aWidth = data[idx].textWidth;
						var setWidth = ''; 
						//console.log('aw - '+aWidth+" avw - "+avgWidth + " mw - "+mWidth);
						if(aWidth >= avgWidth){ // if actual text width grater than the available space for each item
							setWidth = avgWidth;
							contWidth -= avgWidth; 
						}else{
							setWidth = aWidth;
							contWidth -= aWidth; 
							removeFade = true;
						}
						
						$(this).find('.fade-out-title-container').css('max-width',setWidth+"px");
						cnt--; 
					}
					idx++;
					// Remove fade out image if not required
					if(removeFade == true) {
						$(this).find('.fade-out-image').remove();
					};
					$(this).addClass('fadeout-applied');
				});
			}else{
				var aWidth = $(this).find('.title-lengthy-text').width();
				if(aWidth <= lineWidth){
					$(this).find('.fade-out-title-container').css('max-width',aWidth+"px");
					$(this).find('.fade-out-image').remove();
				}else{
					$(this).find('.fade-out-title-container').css('max-width',lineWidth+"px");
				}
				$(this).addClass('fadeout-applied');
			}
		});
	}catch(e){
		//console.log(e);
	}
}
/* Need to look at this function later for session-width which might change when the function is called from any page other than My Learning */
function resetFadeOutForAttributes(selector,pcont,lcont,fcont,fromtab){
	try{
		var width = new Array();
		var finalWidth;
		var maxwidth;
		var lineWidth = $(selector).width();
		if(fromtab == 'myenrollment' || fromtab == 'myinstructor')
			lineWidth = lineWidth - 10;
		else if(fromtab == 'myprogramclass' || fromtab == 'myprogramtp')
			 lineWidth = lineWidth - 80;
		$(selector + ' .'+pcont).each(function(){  //Process through each main-item-container
			$(this).find("."+lcont).each(function(){  // Process through each line-item-container
					var awidth  = 	$(this).find("."+fcont).width(); // Width of each container
					if(awidth != null){
						width.push(awidth);
	    			}
	    		maxwidth = Math.max.apply(null,width);
	    		width = [];
	    	});
	    		var session_width = $(this).find('.session-container').width(); // check whether session exist
	    		if(session_width == null)
	    			 finalWidth = lineWidth - maxwidth;
	    		else 
	    			finalWidth = lineWidth - maxwidth - session_width ;
	    	
	    	$(this).find('.fade-out-title-container').css('max-width',finalWidth+"px");
	    });
 }catch(e){
		//console.log(e);
	}
}

//h5pcustomization - 
$(document).ready(function()
{
	try
	{
		if(availableFunctionalities.exp_sp_administration_contentauthor != undefined && availableFunctionalities.exp_sp_administration_contentauthor == "exp_sp_administration_contentauthor" )
		{
			if(window.location.href.indexOf("?q=learning/class-details") > 0 || window.location.href.indexOf("?q=learning/course-details") > 0 || window.location.href.indexOf("?q=learning/learning-plan-details") > 0|| window.location.href.indexOf("?q=learning/catalog-search") > 0 || window.location.href.indexOf("?q=learning/enrollment-search") > 0)
			{
				preLoadH5PFiles();
			}
		}
	}catch(e){}
});
function preLoadH5PFiles()
{
$.ajax({
  type: "GET",
  url: "/h5pmerge/embedpresentjs.js",
  dataType: "text",
  async:true,
  success:function(data){
	var pre=document.createElement('pre');
	pre.style ="display:none;"
	pre.value=data;
	pre.id="previewpresentationjsfiles";
	$("body").append(pre);
	}
	});



$.ajax({
  type: "GET",
  url: "/h5pmerge/embedpresentcss.css",
  dataType: "text",
  async:true,
  success:function(data){
	var pre=document.createElement('pre');
	pre.style ="display:none;"
	pre.value=data;
	pre.id="previewpresentationcssfiles";
	$("body").append(pre);
	}
	});


$.ajax({
  type: "GET",
  url: "/h5pmerge/embedvideojs.js",
  dataType: "text",
  async:true,
  success:function(data){
	var pre=document.createElement('pre');
	pre.style ="display:none;"
	pre.value=data;
	pre.id="previewvideojsfiles";
	$("body").append(pre);
	}
	});



$.ajax({
  type: "GET",
  url: "/h5pmerge/embedvideocss.css",
  dataType: "text",
  async:true,
  success:function(data){
	var pre=document.createElement('pre');
	pre.style ="display:none;"
	pre.value=data;
	pre.id="previewvideocssfiles";
	$("body").append(pre);
	}
	});


}
;
/**
 * The Abstract Details Widget is the base component of LPP framework. It consists the base LPP framework libary methods.
 * It helps to develop a any new learning widget as a subwidget of this.
 * @class AbstractDetailsWidget
 * @module BaseWidget
 * @namespace EXPERTUS.SMARTPORTAL
 * @uses JQuery libraries, prototype library
 * @constructor
 * @param panelAttributes {namedargument}-  It contains the panel level attributes(height, width,etc...)
 * @param serviceAttributes1 {namedargument} It contains the service level attributes ( certificateid, learnerid,etc....)
 */

/**
 * Contains the id of the previous widget which should be destroyed when a new widget is invoked
 * @property destroyPreviousWidget
 * @type String
 * @default null
 * @scope Stores the value through out the application.
*/
//registernamespace("EXPERTUS.SMARTPORTAL.AbstractDetailsWidget");
var EXPERTUS_SMARTPORTAL_AbstractDetailsWidget ={


        /**
        * If it is false it makes the sync request to the LMS system.
        * @property this.asyncReq
        * @type Boolean -
        * @default true
        * @Instance level variable
        */
        asyncReq:true,

        /**
        * It is used to store the labels for the learning components.
        * @property this.labelsBundle
        * @type JSONObject
        * @default null
        * @Instance level variable
        */
        labelsBundle:null,

        /**
        * It is used to display the grey out box in the browser.
        * @property this.isModal
        * @type boolean
        * @default true
        * @Instance level variable
        */
        isModal:true,

        /**
        * It is used to persist the web service response xml as a text from xmlhttprequest
        * @property this.responseText
        * @type String
        * @default null
        * @Instance level variable
        */
        responseText:null,
        /**
        * It is used to persist  the web service response xml object from xmlhttprequest
        * @property this.responseXml
        * @type Object
        * @default null
        * @Instance level variable
        */
        responseXml:null,

        /**
        * It says how long web service request will be alive. If web service request takes processing time more than specified the value,
        * application abort the request. It will throw the error "Connection timeout".
        * @property this.timeOut
        * @type Object
        * @default null
        * @Instance level variable
        */
        timeOut:null,


        /**
        * Endpoint URL. It specifies where web service request has to hit.
        * @property this.url
        * @type String
        * @default null
        * @Instance level variable
        */
        url:null,

        /**
        * It is used to maintain the service level attributes values (Example:- certificateid,learnerid, etc... )
        * @property this.serviceAttributes
        * @type namedargument
        * @default  values populated from sub widget.
        * @Instance level variable
        */
        serviceAttributes:null,

        /**
        * In order to maintain the parent widget reference to the sub widget. It helps.
        * @property this.widgetCallingFrom
        * @type Object
        * @default null
        * @Instance level variable
        */
        widgetCallingFrom:null,

        /**
        * It is used to store the xmlhttprequest this. It will help to do the request object based services.E.g: abort the connection, check the
        * status of http request.
        * @property this.httpRequest
        * @type Object
        * @default null
        * @Instance level variable
        */
        httpRequest:null,

        /**
        * It is used to render the content of the panel. It persist all the html element whichever needs to be render.
        * @property this.bodyHtml
        * @type String
        * @default  ""
        * @Instance level variable
        */
        bodyHtml:"",

        /**
        * panel object will load using this value.It is nothing but unique div id value which is used to load the panel this.
        * @property this.uniqueWidgetId
        * @type String
        * @default null
        * @Instance level variable
        */
        uniqueWidgetId:null,

        /**
        * Message to display the widget title.
        * @property this.widgetTitle
        * @type String
        * @default null
        * @Instance level variable
        */
        widgetTitle:null,

        /**
        * It is used to the xml and cookies related operations.
        * @property this.xmlutil
        * @type Object
        * @default null
        * @Instance level variable
        */
        xmlutil:null,

        /**
        * if inline==true then widget will display using accordian effect. (inline widget).It will not show the header and footer.
        * @property this.inline
        * @type boolean
        * @default false
        * @Instance level variable
        */
        inline:false,

        /**
        * According to the locale value, widget will pick the labels and other properties from i18n repository.
        * @property this.locale
        * @type String
        * @default english
        * @Instance level variable
        */
        locale:null,

        /**
        * Variable to hold the soap action name.
        * @property this.SOAPActionName
        * @type String
        * @default english
        * @Instance level variable
        */
        SOAPActionName:null,

        /**
        * Variable to hold the request method name.
        * @property this.methodName
        * @type String
        * @default english
        * @Instance level variable
        */
        methodName:null,

        /**
        * Variable to hold the service name or number.
        * @property this.serviceName
        * @type String
        * @default english
        * @Instance level variable
        */
        actionKey:null,

        /**
        * It is used to store the widget details. - Dont use this method.
        * @property this.widgetDetailsObject
        * @type Object
        * @default null
        * @Instance level variable
        */
        widgetDetailsObject:null,

        lovXml:null,

        /**
        * Overridable method which is used to set the locale of the widget.
        * @method this.setLocale
        * @param locale{String} locale value
        * @public
        */
        setLocale:function(locale)
        {
            this.locale=locale;
        },

        /**
        * Overridable method which is used to set the soap action name of the widget.
        * @method this.setSOAPActionName
        * @param SOAPActionName{String} soap action name
        * @public
        */
        setSOAPActionName:function(SOAPActionName)
        {
            this.SOAPActionName=SOAPActionName;
        },

        /**
        * Overridable method which is used to get the SOAP action name of the widget.
        * @method this.getSOAPActionName
        * @public
        * @return String
        */
        getSOAPActionName:function()
        {
            return this.SOAPActionName;
        },

        /**
        * Overridable method which is used to set the method name of the request.
        * @method this.setMethodName
        * @param methodName{String} soap action name
        * @public
        */
        setMethodName:function(methodName)
        {
            this.methodName=methodName;
        },

        /**
        * Overridable method which is used to get the name of the request.
        * @method this.getSOAPActionName
        * @public
        * @return String
        */
        getMethodName:function()
        {
            return this.methodName;
        },

        /**
        * Overridable method which is used to get the locale of the widget.
        * @method this.getLocale
        * @return String
        * @public
        */
        getLocale:function()
        {
            return  this.locale;
        },

          /**
         * Overridable method which is used to set the http request from manager layer.
         * @param reqObj - XmlHttpRequestObj
         * @method this.setHttpReqObj
         * @public
         *
         */
        setHttpReqObj:function(reqObj)
        {
            this.httpRequest=reqObj;
        },

        /**
         * Overridable method which is used to get the current Instance Object name.
         * @method this.getObjectName
         * @return {String} Name of the widget instance.
         * @public
         */
        getObjectName:function()
        {
            return this.widgetGlobalName;
        },

        /**
        * Method which is used trim a string means remove the leading and trailing space.
        * @method this.Trim()
        * @return {String}
        * @public
        */
         Trim:function(str){
            //return str.replace(/(^\s*)|(\s*$)/g, "");
        	return $.trim(str);
         },

        /**
        * Method which is used to Left trim a string.
        * @method this.LTrim()
        * @return {String}
        * @public
        */
         LTrim:function(str){
             //return str.replace(/(^\s*)/g, "");
        	 return $.trim(str);
        },

        /**
        * Method which is used to Right trim a string.
        * @method this.RTrim()
        * @return {String}
        * @public
        */
        RTrim:function(str)
        {
            //return str.replace(/(\s*$)/g, "");
        	return $.trim(str);
        },

        /**
         * Overridable method which is used to get the current Instance Object name with index position of WidgetEngine properties.
         * @method this.getWidgetInstanceName
         * @return {String} Name of the widget instance.
         * @public
         */
        getWidgetInstanceName:function()
        {
            //return this.widgetGlobalName+"["+this.widgetIdx+"]";
            return this.widgetGlobalName;
        },

        /**
        * Overridable method which is used to executes when the web service response is success.
        * @method this.getResponseXml
        * @return responseXml {Object}
        * @public
        */
        getResponseXml:function()
        {
               return this.responseXml
        },

        /**
        * Overridable method which is used to convert the response into proper xml format (incase the response
        * contain &gt; instead of >).
        * @method this.convertResponseXml
        * @return responseXml {Object}
        * @public
        */

       convertResponseXml:function()
       {

            //var formated=this.replaceAll(this.responseText,"&","&amp;");
            // var formated=(this.responseText).replace( new RegExp('&',"g"), 'ampersand');

    /*      var formated=this.replaceAll(this.responseText,"&lt;","<");
            formated=this.replaceAll(formated,"&gt;",">");
            formated=formated.replace( new RegExp('&',"g"), '&amp;');
            //prompt('',formated);*/
            var responsetext =this.responseText;
            try //Internet Explorer
            {
              xmlDoc=new ActiveXObject("Microsoft.XMLDOM");
              xmlDoc.async="false";
              xmlDoc.loadXML(responsetext);
            this.responseXml = xmlDoc;
            }
            catch(e)
            {
                try{
                    parser=new DOMParser();
                    this.responseXml = parser.parseFromString(responsetext,"text/xml");
                }catch(e){
                    //alert(e.message);
                }

            }
       },


        /**
        * Overridable method which is used to set the  web service url.
        * @method this.setEndPointURL
        * @param {String} - URL of the LMS Server
        * @public
        */
        setEndPointURL:function(url)
        {
            this.url = url;
            //alert("URL_:"+this.url);
        },

        /**
        * Overridable method which is used to get the  web service url.
        * @method this.getEndPointURL
        * @return  {String} - URL of the LMS Server
        * @public
        */
        getEndPointURL:function()
        {
            return this.url;
        },

        /**
        * Overridable method which is used to set the  service number or name .
        * @method this.setactionKey
        * @param  {String} - Service number or name
        * @public
        */
        setActionKey:function(no){
            this.actionKey=no;
            //alert(this.actionKey);
        },

        /**
        * Overridable method which is used to get the  service number or name .
        * @method this.getActionKey
        * @return  {String} - Service number or name
        * @public
        */
        getActionKey:function(){
            return this.actionKey;
        },

        /**
        * Overridable method which is used to set the timeout value for ajax call.
        * @method this.setTimeout
        * @param {int} - time in milliseconds
        * @public
        */
        setTimeout:function(timeoutvalue)
        {
            callback.timeout=timeoutvalue;
        },

        /**
        * Overridable method which is used to get the timeout value for ajax call.
        * @method this.getTimeout
        * @return {int} - time in milliseconds
        * @public
        */
        getTimeout:function()
        {
            return callback.timeout;
        },


        /**
        * Overridable method which is used to set the parent widget to the current widget object.
        * @method this.setWidgetCallingFrom
        * @param {Object} - Parent widget object
        * @public
        */
        setWidgetCallingFrom:function(widgetCallFrom)
        {
            this.widgetCallingFrom=widgetCallFrom;
        },

        /**
        * Overridable method which is used to get the parent widget of the current widget object.
        * @method this.getWidgetCallingFrom
        * @return {Object} - Parent widget object
        * @public
        */
        getWidgetCallingFrom:function()
        {
            return this.widgetCallingFrom;
        },

        /**
        * Overridable method which is used to set unique widget id which is used to creating the panel dom ids.
        * @method this.setUniqueWidgetId
        * @param {String} - Unique widget id of the widget
        * @public
        */
        setUniqueWidgetId:function(uniqueWidgetId)
        {
            this.uniqueWidgetId=uniqueWidgetId
            this.setAlertSpace(uniqueWidgetId);
        },

        setAlertSpace:function(id){
            var id = document.getElementById("AlertMessage");
            if(id==null || id==undefined || id=='') {
            	(function($) {
            		$('#'+id).parent().append("<div id='AlertMessage'></div>");
            	})(jQuery);
            }
        },

        /**
        * Overridable method which is used to get unique widget id which is used to creating the panel dom ids.
        * @method this.getUniqueWidgetId
        * @return {String} - Unique widget id of the widget
        * @public
        */
        getUniqueWidgetId:function()
        {
            return this.uniqueWidgetId;
        },

        /**
        * Overridable method which is used to set the necessary parameters for the widget and set
        * the base display for the widget.
        * @method this.renderDialog
        * @param {namedarguments} - It contains panel attributes i.e width,height,x,y
        * @public
        */
        renderDialog:function(params,serviceAttributes)
        {
            /* Get User Options */
            //this.setServiceAttributes(serviceAttributes);
            //alert(this.serviceAttributes.Certificate)
            var isResizable=params.resizable;
            var isDraggable=params.draggable;
            var isAutoOpen=params.autoOpen;
            var isModal=params.modal;
            var panelwidth=params.width;
            var height=params.height;

            //var position=params.position;
            //place the dialog at the center
            var wleft = (screen.width - panelwidth) / 2;
            var wtop = 60;
            if(height!='undefined' && height != 'auto') {
                wtop=(screen.height - height) / 2;
            }
            var position = [wleft,wtop];

            var isCloseOnEscape=params.CloseOnEscape;
            var panelTitle=(params.title==undefined)?this.getWidgetTitle():params.title;
            var panelButtons=params.buttons;
            var v = document.createElement("div");
            var destroyable=params.destroyable;
            var isAlert = params.isAlert;
            // If a widget is said as destroyable.
            var body = (params.body==null || params.body=='')?this.bodyHtml:params.body;
            var uniqueID=this.getUniqueWidgetId();
            var dialogid=(params.dialogid==undefined)?'':params.dialogid;
            var stack = params.stack;
            v.id =uniqueID+dialogid;
            var btns=new Array("Validate","Change Password ")
            v.style.position='relative';
            var obj=document.getElementById(uniqueID+params.parentid);
            if(obj!=null){
                //$(obj).add(v);
                obj.appendChild(v);
            }else{
                document.body.appendChild(v);
            }
            $("#"+v.id).html(body);
            jQuery.ui.dialog.defaults.bgiframe = true;
            var wobj = eval(this.getWidgetInstanceName());
            var wname = this.getWidgetInstanceName();
            $(function() {
            /*  $("#"+v.id).dialog({
                    position: position,
                    resizable:isResizable,
                    draggable:isDraggable,
                    autoOpen: isAutoOpen,
                    width:panelwidth,
                    closeOnEscape:isCloseOnEscape,
                    title:panelTitle,
                    height:height,
                    buttons:panelButtons,
                    modal:isModal,
                    bgiframe:true,
                    close:function(){
                        jQuery(this).remove();
                    }
                });*/
                $("#"+v.id).dialog("open");
                    var closeButt={};
                    closeButt[SMARTPORTAL.t('Close')]=function(){ wobj.destroyDialog(this,v.id); };
                    var actions = params.dialogActions;
                    if(actions!=undefined && actions.length>0){
                        for(var i=0;i<actions.length;i++){
                            var fn=actions[i].actionFn;
                            fn=wname+'.'+fn+'()';
                            closeButt[actions[i].actionName]=function(){eval(fn);};
                        }
                    }

                    $("#"+v.id).dialog({
                        width:panelwidth,
                        height:height,
                        title:panelTitle,
                        //top:top,
                        //left:left,
                        position: position,
                        modal: isModal,
                        resizable:false,
                        bgiframe:true,
                        stack:stack,
                        buttons:closeButt,
                        overlay: {
                            opacity: 0.5,
                            background: "black"
                        }
                    });
            });


        /*
                if(destroyPreviousWidget !=''){
                    if(destroyPreviousWidget != v.id && !isAlert){
                        this.destroyDialog(destroyPreviousWidget);
                    }
                }
                if(destroyable){
                    destroyPreviousWidget=v.id;
                }
            */
            // jQuery("#"+v.id).show('blind', {},800,'');
        },

        destroyDialog:function(obj,id){
            $(obj).dialog('destroy');
            $(obj).dialog('close');
            $('#'+id).remove();
        },

         /**
           *  @method Method to display alert messages.
           */
        createLoader:function(resultPanel,scroll){
            //alert("resultPanel :"+resultPanel);
        	scroll = (scroll == undefined) ? true : false;
            var divid= "loaderdiv"+resultPanel;
            if(document.getElementById(divid)==null && document.getElementById(resultPanel)!=null){
                var divobj=document.createElement('div');
                divobj.id=divid;
                var height;
                if(navigator.appName=="Microsoft Internet Explorer") {
                    height = document.getElementById(resultPanel).offsetHeight;
                } else {
                    height = document.getElementById(resultPanel).clientHeight;
                }
                var width = document.getElementById(resultPanel).offsetWidth;
                //38708: Location creating twice when clicking save button twice
               	var org_height = height;
                if(height < 100) {
	                 height = 75;
	            } else if (height >= 1024) {
	                 height = height/3;
	            } else if (height < 1024 ) {
	                 height = height/2;
	            }
                //42360: when we clicks on share link catalog page loader icon is not showing
                if(parseInt(org_height)==0)
                	org_height = height;
                divobj.innerHTML='<div height="'+parseInt(height)+'" width="'+parseInt(width)+'"><table border="0" width="100%"><tr><td align="center" height="'+parseInt(height)+'" width="'+parseInt(width)+'" valign="middle"><div class="loaderimg"></div></td></tr></table></div>';
                if(width == 0) {
                	width = '800';
                }
            	$($("#"+resultPanel)).prepend(divobj);
                $('#'+divid).addClass("loadercontent");
                $('#'+divid).width(width);
                $('#'+divid).height(org_height);
                $('#'+divid).css("z-index",1003);

                if(((divid.indexOf('divtag') == -1) && (divid.indexOf('divcatalog-attachment') > 0)) || ((divid.indexOf('divtag') > 0) && (divid.indexOf('divcatalog-attachment') == -1))){
                } else {
                	$('#'+divid).css("left","0px");
                }

                var marginHeight = (height-80)/2;
            	$('#'+divid+' .loaderimg').css("margin-top",marginHeight+"px");
            }
          },

          /**
           *  @method Method to display alert messages.
           */
        destroyLoader:function(loaderTarget){
              var divid= "loaderdiv"+loaderTarget;
                if(document.getElementById(divid)!=null){
                    //Element.remove(divid);
                        $('#'+divid).remove();

                }
          },


        /**
        * Overridable method which is used to set the base tempate of the widget. It is mandatory to set the div id as given in this method
        * otherwise CSS will break depends on the browser type.
        * @method this.setBodyTemplate
        * @param {obj} - It contains the current widget object.
        * @public
        */
        setBodyTemplate:function(obj,inline)
        {
            var width1=this.panelAttributes.width;
            width1 = width1.split('px');
            var width = width1[0]-80;
            var widthmid = width1[0]-40
            /* Condition added for avoid leftside panel for inline widget : Vincent */
            this.bodyHtml='';
            if(inline==true){
                this.bodyHtml=this.bodyHtml+"<div  style=''></div>";
                this.bodyHtml=this.bodyHtml+"  <div class='bdc-in'>";
            }else{
                this.bodyHtml=this.bodyHtml+"<div id='"+this.uniqueWidgetId+"utilcontainer' ></div><div class='bl'></div>";
                this.bodyHtml=this.bodyHtml+"<div class='bdc'>";

                //Sangeetha: Added Padding style for Greyed part out of border in registration widget
                this.bodyHtml=this.bodyHtml+"<div style='width:"+widthmid+"px;padding:6px;'><div class='top-img'><div class='left-top'></div><div class='middle-bg' style='width:190px;'></div><div class='right-top'></div></div><div class='mid-img' style='width:230px; padding-top:1em;'>";
                //this.bodyHtml=this.bodyHtml+"<div style='width:98%;padding:15px;overflow:hidden;'><div class='top-img'><div class='left-top'></div><div class='middle-bg' style='width:98%;'></div><div class='right-top'></div></div><div class='mid-img' style='width:100%'>";
            }
        },

        /**
        * Overridable method which is used to set the closure phase of base tempate of the widget. It is mandatory to set the div id as given in this method
        * otherwise CSS will break depends on the browser type.
        * @method this.setBodyCloseAndFooterTemplate
        * @param {obj} - It contains the current widget object.
        * @public
        */
        setBodyCloseAndFooterTemplate:function(obj)
        {
            var width1=this.panelAttributes.width;
            width1 = width1.split('px');
            var width = width1[0]-80;
            if(this.inline!=true)
            {
                this.bodyHtml=this.bodyHtml+"</div><div class='top-img'><div class='left-bot'></div><div class='middle-bg' style='width:190px;'></div><div class='right-bot'></div></div>";
                //this.bodyHtml=this.bodyHtml+"</div><div class='top-img'><div class='middle-bg' style='width:98%;'><div class='left-bot'></div><div class='right-bot'></div></div></div>";
                //this.bodyHtml=this.bodyHtml+"</div><div class='top-img'><div class='left-bot'></div><div class='middle-bg' style='width:98%;'></div><div class='right-bot'></div></div>";
                this.bodyHtml=this.bodyHtml+"</div><div class='br'></div>";
            }
            else
            {
                this.bodyHtml=this.bodyHtml+"</div>";
            }
        },

        /**
        * Overridable method which is used to set the header section of the widget(including close,min,refresh button).
        * @method this.setHeaderHtml
        * @param {obj} - It contains the current widget object.
        * @public
        */
        setHeaderHtml:function(obj)
        {
            var locale=obj.getLocale();

            var objName=obj.getObjectName();
            var width1=this.panelAttributes.width;
            width1 = width1.split('px');
            var width = width1[0]-14;
            this.headerHtml="<div class='header' id='headerdiv' style='width:"+width1[0]+"px;'><div class='header-lf'></div><div class='header-md' id='headermddiv' style='width:"+width+"px;'><div class='header-lg'><img src='"+config.data[1].paths[0].componentroot+config.data[1].paths[3].imgpath+"logo.gif'/></div>";
            var objj=eval(objName+"["+this.widgetIdx+"]");
             if(this.panelAttributes.close==true)
             {
                    var clickParams="";
                     if(objName!=null && objName=="EXPERTUS.service.WidgetEngine.dropPolicyWidgetInstances")
                     {
                         clickParams=objName+"["+this.widgetIdx+"].closeWidget()";
                     }
                     else
                     {
                         clickParams="EXPERTUS.util.GlobalMethods.closeWidget("+objName+"["+this.widgetIdx+"])";
                     }
                     this.headerHtml=this.headerHtml+EXPERTUS.util.GlobalMethods.getCloseButton(objj,clickParams);
                     this.headerHtml=this.headerHtml+"</div></div><div class='header-rt'></div></div>";
             }
             if(this.panelAttributes.min==true)
             {
                       this.headerHtml=this.headerHtml+EXPERTUS.util.GlobalMethods.getMinimizeButton(objj);
             }
             if(this.panelAttributes.max==true)
             {
                       this.headerHtml=this.headerHtml+EXPERTUS.util.GlobalMethods.getMaximizeButton(objj);
             }
             if(this.panelAttributes.refresh==true)
             {
                       var clickParams=objName+"["+this.widgetIdx+"].refreshWidget()";
                       this.headerHtml=this.headerHtml+EXPERTUS.util.GlobalMethods.getRefreshButton(objj,clickParams);
             }
             if(this.panelAttributes.showthemes!=null && (this.panelAttributes.showthemes==true || this.panelAttributes.showthemes=='true'))
             {
                       var clickParams=objName+"["+this.widgetIdx+"].displayChangeThemePopup()";
                       this.headerHtml=this.headerHtml+EXPERTUS.util.GlobalMethods.getThemesIcon(objj,clickParams);
             }
             if(this.panelAttributes.showlocale!=null && (this.panelAttributes.showlocale==true || this.panelAttributes.showlocale=='true'))
             {
                       var clickParams=objName+"["+this.widgetIdx+"].displayLocalePopup()";
                       this.headerHtml=this.headerHtml+EXPERTUS.util.GlobalMethods.getLocaleIcon(objj,clickParams);
             }
             if(this.panelAttributes.showReport!=null && (this.panelAttributes.showReport==true || this.panelAttributes.showReport=='true'))
             {
                       this.headerHtml=this.headerHtml+EXPERTUS.util.GlobalMethods.getReportIcon(objj,clickParams);
             }
             if(this.panelAttributes.autoCenter!=null && (this.panelAttributes.autoCenter==true || this.panelAttributes.autoCenter=='true'))
             {
                       //EXPERTUS.util.GlobalMethods.centerWidget(this.uniqueWidgetId);
             }

        },

        /**
        * Overridable method which is used to set the footer section of the widget.
        * @method this.setFooterHtml
        * @param {obj} - It contains the current widget object.
        * @public
        */
        setFooterHtml:function(obj)
        {
              this.footerHtml="";
              this.footerHtml=this.footerHtml+"<div class='dl' width='100%'></div>";
              this.footerHtml=this.footerHtml+"<div class='dr'></div>";

        },

        /**
        * Overridable method which is used to set the mask effect to the web page.
        * @method this.setGreyOut
        * @public
        */
        setGreyOut:function()
        {
                var modaldiv=document.createElement("div");
                modaldiv.className="mask";
                modaldiv.id="LPPMASK";
                document.getElementsByTagName("body")[0].appendChild(modaldiv);
        },


        /**
        * Overridable method which is used to hide the drop down when sub widget launch on top of parent widget.
        * @method this.dropDownOverLayHide
        * @public
        */
        dropDownOverLayHide:function()
        {
            try
            {
                        if(this.widgetCallingFrom!=null)
                        {
                            var dropDownlist=$(this.widgetCallingFrom.uniqueWidgetId).getElementsByTagName("select");
                            var droplength=$(this.widgetCallingFrom.uniqueWidgetId).getElementsByTagName("select").length;
                            for(var i=0;i<droplength;i++)
                            {
                                dropDownlist[i].style.visibility='hidden';
                                if(dropDownlist[i].style.visibility=='visible')
                                {
                                    dropDownlist[i].style.visibility='hidden';
                                }
                            }
                        }
             }
             catch(e)
             {}
        },

        /**
        * Overridable method which is used to show the drop down in the parent widget when sub widget getting closed.
        * @method this.dropDownOverLayHide
        * @public
        */
        dropDownOverLayShow:function()
        {
            try
            {
                        if(this.widgetCallingFrom!=null)
                        {
                            var dropDownlist=$(this.widgetCallingFrom.uniqueWidgetId).getElementsByTagName("select");
                            var droplength=$(this.widgetCallingFrom.uniqueWidgetId).getElementsByTagName("select").length;
                            for(var i=0;i<droplength;i++)
                            {
                                dropDownlist[i].style.visibility='visible';
                            }
                        }
             }
             catch(e)
             {}
        },


        /**
        * Overridable method which is used to initiate the web service request.
        * @method this.initiateRequestBase
        * @param {String} - It contains the div object which is used by the ImageLoader component.
        * @public
        */
        initiateRequestBase:function(loaderDivName)
        {
            this.abortReq();
            $(this.uniqueWidgetId+loaderDivName).innerHTML=EXPERTUS.util.GlobalMethods.loaderImage({align:'center'});
            this.initiateRequest();
        },

        /**
        * Overridable method which is used to initialize the widget instance in widgetengine.
        * Without core team concern dont do the changes in this method.
        * @method this.initializeWidgetInstance
        * @param {Object} - It contains the current widget object.
        * @public
        */
        initializeWidgetInstance:function(obj)
        {
            //this.widgetIdx=EXPERTUS.service.WidgetEngine.getIdxOfWidget(eval(obj.getObjectName()));
            //var assignObj=obj.getObjectName()+"["+this.widgetIdx+"]=obj";
            var assignObj=obj.getObjectName()+"=obj";
            eval(assignObj);
        },

        /**
        * Overridable method which is used to print the datatable contents in new window.
        * @method this.doPrintWidgetHtml
        * @public
        */
        doPrintWidgetHtml:function()
        {
                this.getPrinthtml();
        },

        /**
        * Overridable method which is used to export  the datatable contents in CSV format.
        * @method this.doPrintWidgetHtml
        * @public
        */
        doExportWidgetHtml:function()
        {
                this.getExporthtml();
        },

        /**
        * Overridable method which is used to clone the result set object.
        * @method this.cloneResultSet
        * @param {Object} - Datatable object
        * @public
        */
        cloneResultSet:function(dataTableObj)
        {
                var rs=dataTableObj.getRecordSet();
                var len=rs.getLength();
                for(var i=0;i<len;i++)
                {
                    this.rsCompleteObj[i]=rs.getRecord(i);
                }

                this.rsCompleteObj=this.rsCompleteObj.clone();


        },


            /**
        * Overridable method which is used to set the result set according to the user filteration in widget.
        * (User filteration currently support checkbox.)
        * @method this.setResultSet
        * @param {Object} - Widget Object.
        * @param {String} - Filter control  id which is used to get the current selection of the records.
        * How many checkbox field enabled and disabled.
        * @public
        */
        setResultSetNew:function(obj,id)
        {
                var ll=document.getElementById(id).parentNode.childNodes.length;
                for(var kk=0;kk<ll;kk++)
                {
                    id=document.getElementById(id).parentNode.childNodes[kk].id;
                    var colNameCount=id.lastIndexOf("_");
                    var colName=id.substring((colNameCount+1),id.length);
                    var idval=escape(id+"_"+obj.value);
                    if(document.getElementById(idval)!=null && document.getElementById(idval).checked==true)
                    {
                    }
                    else
                    {
                        this.dontDisplayValues[0]={"colName":colName,"contains":obj.value,"display":false};

                    }
                }
                var existDT=this.getDataTableObj();
                existDT.showPage(1);
        },

        /**
        * Overridable method which is used to set the result set according to the user filteration in widget.
        * (User filteration currently support checkbox.)
        * @method this.setResultSet
        * @param {Object} - Widget Object.
        * @param {String} - Filter control  id which is used to get the current selection of the records.
        * How many checkbox field enabled and disabled.
        * @public
        */
        setResultSet:function(obj,id)
        {

                var widObj=this.getWidgetObject();
                var locale = widObj.getLocale();
                var existDT=this.getDataTableObj();
                var existRs=existDT.getRecordSet();
                existDT.deleteRows(0,existRs.getLength());
                var colSet=existDT.getColumnSet().keys;
                var isShow="";
                var totalCount=0;
                var isDTEmpty=true;
                var len=this.rsCompleteObj.length;

                for(var i=0;i<len;i++)
                {
                    var row=this.rsCompleteObj[i];
                    if(row!=null)
                    {

                        var ll=document.getElementById(id).parentNode.childNodes.length;

                        enabledCheckBoxCount=0;
                        isShow=false;
                        for(var kk=0;kk<ll;kk++)
                        {
                            id=document.getElementById(id).parentNode.childNodes[kk].id;
                            var colNameCount=id.lastIndexOf("_");
                            var colName=id.substring((colNameCount+1),id.length);
                            var rowCol="row.getData('"+colName+"')";
                            var idval=escape(id+"_"+eval(rowCol));

                            if(document.getElementById(idval)!=null && document.getElementById(idval).checked==true)
                            {
                                enabledCheckBoxCount++;
                            }
                        }

                        if(enabledCheckBoxCount==ll)
                        {
                            isShow=true;
                            totalCount++;
                        }
                        if(isShow)
                        {
                            existDT.addRow(row._oData);
                            isDTEmpty=false;
                        }
                    }
                }
                if(isDTEmpty==true)
                {

                    if($(this.uniqueWidgetId+"_menu"))
                        $(this.uniqueWidgetId+"_menu").style.display="none";
                        EXPERTUS.util.GlobalMethods.alerts(this.labelsBundle.i18nSelectDelivery,locale); // "Select Delivery mode and Status to view"
                        this.dataTableObj.showTableMessage("<b>"+ this.labelsBundle.i18nEnrollmentEmptyTableMesg + "</b>","yui-dt-liner; yui-dt-empty");  // No Enrollments/Transcripts found
                }
                else
                {
                    if($(this.uniqueWidgetId+"_menu"))
                        $(this.uniqueWidgetId+"_menu").style.display="block";
                    if(existDT.initViewChart=="true")
                    {
                        this.viewChart(this.uniqueWidgetId+"chartView");
                    }
                }
        },

        /**
        * Overridable method which is used to get the default time out of the ajax request setted by LPP.
        * @method this.getDefaultTimeOut
        * @param {String} - name of the widget.
        * @public
        */
        getDefaultTimeOut:function(widget)
        {
            var retValue="";
            if(this.timeOut!=null)  //  Widget specific timeout value , first preference
            {
                return this.timeOut;
            }
            else if(cfgObj==null || cfgObj=='undefined')
            {
                retValue=config.data[3].timeout;
            }
            else
            {
                var obName=this.getObjectName();
                var objName=obName.substring("EXPERTUS.service.WidgetEngine.".length,obName.length);
                var cfgObj=eval("config.data[4]."+objName);
                retValue=cfgObj;
            }
            return retValue;
        },

        /**
        * It is used to set the widget object.
        * @property this.setWidgetObject
        * @param {Object} obj contains the widget Object.
        */
        setWidgetObject:function(widgetObj)
        {
            this.widgetDetailsObject = widgetObj;
        },

        /**
        * Overridable method which is used to set the  widget Title.
        * @method this.setWidgetTitle
        * @param {String} - Widget title
        * @public
        */
        setWidgetTitle:function(widgetTitle)
        {
            this.widgetTitle=widgetTitle;
        },

        /**
        * Overridable method which is used to get the  widget Title.
        * @method this.getWidgetTitle
        * @return {String} - Widget title
        * @public
        */
        getWidgetTitle:function()
        {
            return this.widgetTitle;
        },

        /**
        * It is used to get the widget object.
        * @property this.getWidgetObject
        * @param {Object} obj contains the widget Object.
        */
        getWidgetObject:function()
        {
            return this.widgetDetailsObject;
        },

        /**
        * Overridable method which is used to check locale values already loaded or not.
        * @method this.checkLocaleAlreadyLoaded
        * @param {fileId} - It contains the id value of the locale script tag.
        * @public
        */
        checkLocaleAlreadyLoaded:function(fileId)
        {
            if($(fileId))
            {
                return true;
            }
            else
            {
                return false;
            }
        },


        /**
        * @author Sanjeth
        * @date 26/Nov/08
        * Overridable method which is used to load the i18n labels js.
        * @method this.loadi18nFiles
        * @param {obj} - It contains the current widget object.
        * @public
        */

        loadi18nFiles:function()
        {
                var wa=this.getWidgetInstanceName();
                var l="EXPERTUS.service.WidgetEngine.".length;
                var label=wa.substring(l,wa.length);
                var removeBrack=label.indexOf("Instance");
                var wName = label.substring(0,removeBrack);

                var url="";
                url=config.data[1].paths[0].componentroot+config.data[1].paths[6].localepath+wName+"_labels_"+this.locale+".js";
                var oXML=getXMLHttpObj();
                oXML.open('GET', url, false);
                oXML.setRequestHeader("Accept-Charset","UTF-8");
                oXML.send('');
                var e = document.createElement("script");
                e.text=oXML.responseText;
                e.setAttribute("charset","UTF-8");
                e.setAttribute("id",wName + "_labels_"+this.locale+".js");
                document.getElementsByTagName("head")[0].appendChild(e);

                this.setLocaleJsonObject();

        },



        /**
        * Overridable method which is used to set the locale label values in  json object.
        * @method this.getLocaleJsonObject
        * @public
        */
        setLocaleJsonObject:function()
        {
            var na=this.getWidgetInstanceName();
            var l="EXPERTUS.service.WidgetEngine.".length;
            var label=na.substring(l,na.length);
            var removeBrack=label.indexOf("[");
            this.labelsBundle=label.substring(0,removeBrack)+"_labels_"+this.getLocale();
            this.labelsBundle=eval(this.labelsBundle);

        },

        /**
        * Overridable method which is used to get the locale json object.
        * @method this.getLocaleJsonObject
        * @return jsonObject
        * @public
        */
        getLocaleJsonObject:function()
        {
            return this.labelsBundle;
        },
        /**
        * Overridable method which is used to set the online request flag.
        * @method this.setOnlineRequest
        * @param Boolean
        * @public
        */
        setOnlineRequest:function(val)
        {
            this.onlineRequest=val;
        },


        /**
        * Overridable method which is used to get the online request flag.
        * @method this.getOnlineRequest
        * @return Boolean|String
        * @public
        */
        getOnlineRequest:function()
        {
            return this.onlineRequest;
        },


        /**
        * Overridable method which is used to set the necessary parameters for the widget and set
        * the base display for the widget.
        * @method this.renderBase
        * @param {namedarguments} - It contains panel attributes i.e width,height,x,y
        * @param {namedarguments} - It contains service  attributes i.e soap certificate id and parameters required for web services.
        * @param {boolean} - If it true widget will display as a inline model.
        * @param {Object} - It contains the current widget object. It equals to  (this).
        * @public
        */
        renderBase:function(serviceattributes,obj)
        {
            this.serviceAttributes = serviceattributes;
            this.initializeWidgetInstance(obj);
            this.setWidgetObject(obj);
            if(this.uniqueWidgetId.toLowerCase().indexOf('lnr')>=0 || this.uniqueWidgetId.toLowerCase().indexOf('team')>=0){
            	this.setEndPointURL(config.data[0].url[0].learner_url);
            }else{
            	this.setEndPointURL(config.data[0].url[0].admin_url);
            }

            this.setActionKey(eval('config.data[1].serviceaction[0].'+this.uniqueWidgetId))
        },


        /**
        * Overridable method which is used to the service attributes.
        * @method this.setServiceAttributes
        * @param sa {named argument}
        * @public
        */
        setServiceAttributes:function(sa)
        {
            this.serviceAttributes=sa;
        },

        /**
        * Overridable method which is used to set http request type sync or async.
        * @method this.setRequestType
        * @param {boolean} - true | false
        * @public
        */
        setRequestTypeASync:function(syncReq)
        {
            this.asyncReq=syncReq;
        },

        /**
        * This method is used to get the datatable object.
        * @method this.getDataTableObj
        * @public
        * @return dataTableObj.
        */
        setTitleForXML:function(title)
        {
            this.xmlTitle=title;
        },

        /**
         * Overridable method which handles the soap errors.
         * If any common operations like session timed out are
         * handled in this method, after executing this method this
         * will calls the default renderError method (if the error is not
         * a common error).
         * @method this.renderError()
         * @return error string
         */
        renderErrorCommon:function(){
        	 var errcode =$(this.responseXml).find("faultcode").text();
             var errstring = $(this.responseXml).find("faultstring").text();
             var errmsg ="";
             if(errcode!=null && errcode!=undefined)
                 errmsg += "["+errcode+"]: ";
             errmsg += errstring;
             if(errstring=='Your session has expired'){
             	var loc = '';
             	//var ermsg=SMARTPORTAL.t('ERR055');
 	           	//alert(ermsg);
             	var user=this.getUserName();
             	/**
             	 * Clear all cookies
             	 */
             	var cok = document.cookie;
             	var lst = cok.split(";");
             	for(var x=0;x<lst.length;x++){
             		var name=lst[x].split("=");
             		document.cookie = name[0]+"=";
             	}
             	if(user != null && user != undefined && user != '' && user != 'guest')
             		loc = resource.base_url+"/?q=user/logout";
             	else
             		loc = resource.base_url;
             	window.location.href=loc;
             }else{
            	 this.renderError();
             }
        },

        /**
         * Overridable method which handles the soap errors.
         * @method this.renderError()
         * @return error string
         */
        renderError:function(){
            var errcode =$(this.responseXml).find("faultcode").text();
            var errstring = $(this.responseXml).find("faultstring").text();
            var errmsg ="";
            if(errcode!=null && errcode!=undefined)
                errmsg += "["+errcode+"]: ";
            errmsg += errstring;
            if(document.getElementById("msgDiv")){
                $('#msgDiv').css('display','block');
                $('#msgDiv').removeClass('sp_msgbox');
                $('#msgDiv').addClass('sp_alertbox');
                $('#msgDiv').html(SMARTPORTAL.t(errmsg));
            }else if(document.getElementById("main-content")){
                var newdiv=document.createElement("div");
                newdiv.id='msgDiv';
                $('#main-content').before(newdiv);
                $('#msgDiv').css('display','block');
                $('#msgDiv').css('width','688px');
                $('#msgDiv').addClass('sp_alertbox');
                $('#msgDiv').html(SMARTPORTAL.t(errmsg));
            }else{
            	//alert(SMARTPORTAL.t(errmsg));
            	var newdiv=document.createElement("div");
                newdiv.id='msgDiv';
                $("div :first").before(newdiv);
                $('#msgDiv').css('display','block');
                $('#msgDiv').css('width','688px');
                $('#msgDiv').css('color','red');
                $('#msgDiv').addClass('sp_alertbox');
                $('#msgDiv').html(SMARTPORTAL.t(errmsg));
            }
            return errmsg;
        },

        mandatoryCheck:function(divId){
            var str="";
            var flag=true;
            var newDiv="";
            var nextDiv="";
            str1 = new RegExp( );
     	    str1.compile( '^[\s ]*$','gi' );
            if(divId != undefined){
                if($('#'+divId).find('.mandatory')){
                    $('#'+divId).find('.mandatory').each(function(){
                        var valEntered=$(this).val();
                        var name=$(this).attr('name');
                            str =$(this).val();
                            var inputType = $(this).attr("type");
                            newDiv = '';
              		      /* For Learner side Survey*/
                            if(inputType=="checkbox" || inputType=="radio"){
                            	  var id=$(this).attr('id');
                            	  var checked = $("input[id="+id+"]:checked").length;
                            	  if (checked == 0)
                                  {
                            		newDiv=document.createElement('div');
                            		$(newDiv).addClass('local_style_for_div_newid'); // class to be used for fine tuning display of error message in widgets
                                    newDiv.id=this.id+"_newid";
                                    $("#"+this.id+"_newid").remove();
                                    $(newDiv).css({'color':'red','display':'none','float':'left','font-size':'0.9em','text-align':'right','width':'50%'});
                                    $(newDiv).html(Drupal.t("ERR106"));
                                    flag=false;
                                  }
                            	  $('#'+id+'_'+inputType).html(newDiv);
                                  $("#"+this.id+"_newid").show();  /* End For Learner side Survey*/
                            } else if( valEntered=="" || valEntered == null || valEntered == undefined || str1.test(valEntered)==true ){
                            	if (inputType=="select-one") {
                            		newDiv=document.createElement('span');
                            		$(newDiv).addClass('local_style_for_span_newid'); // class to be used for fine tuning display of error message in widgets
                            		newDiv.id=this.id+"_newid";
                            		$("#"+this.id+"_newid").remove();
                            		$(newDiv).css({'color':'red','display':'none','font-size':'0.9em','padding-left': '10px'});
                            		//$(newDiv).html(SMARTPORTAL.t("Please select ") + " " + SMARTPORTAL.t(name) + ".");
                            		$(newDiv).html(Drupal.t("MSG687"));
                            		$(this).closest(".expertus-dropdown-bg").after(newDiv);
                            		$("#"+this.id+"_newid").show();
                            		flag=false;
                            	} else if ($(this).hasClass('hasDatepicker')) {
                            		newDiv=document.createElement('span');
                            		$(newDiv).addClass('local_style_for_span_newid'); // class to be used for fine tuning display of error message in widgets
                            		newDiv.id=this.id+"_newid";
                            		$("#"+this.id+"_newid").remove();
                            		$(newDiv).css({'color':'red','display':'none','font-size':'0.9em','padding-left': '10px'});
                            		$(newDiv).html(SMARTPORTAL.t("Please enter ") + " " + SMARTPORTAL.t(name) + ".");
                            		nextDiv = $(this).next();
                            		if($(nextDiv).is('img') && $(nextDiv).hasClass('ui-datepicker-trigger')) {
                            			$(nextDiv).after(newDiv);
                            		} else {
                            			$(this).after(newDiv);
                            		}
                            		$("#"+this.id+"_newid").show();
                            		flag=false;
                            	} else {
                            		newDiv=document.createElement('span');
                            		$(newDiv).addClass('local_style_for_span_newid'); // class to be used for fine tuning display of error message in widgets
                            		newDiv.id=this.id+"_newid";
                            		$("#"+this.id+"_newid").remove();
                            		$(newDiv).css({'color':'red','display':'none','font-size':'0.9em','padding-left': '10px'});
                            		//$(newDiv).html(SMARTPORTAL.t("Please enter ") + " " + SMARTPORTAL.t(name) + ".");
                            		// Multi lang Issue Is fixed for this Ticket #0044270
                            		$(newDiv).html(Drupal.t("LBL868"));
                            		$(this).after(newDiv);
                            		$("#"+this.id+"_newid").show();
                            		flag=false;
                            	}
                            }else{
                            	$("#"+this.id+"_newid").remove();
                            }
                 });
            }
        }
        return flag;
        },

        addAccordionToTable:function(openCloseClass,openpos,closepos,childClass,callback,obj,parentObj,isRemove) {
            if(openCloseClass!=undefined && childClass!=undefined && callback!=undefined) {
                //var mainObj=$(obj).parent().get(0).nodeName.toLowerCase()=="td"?$(obj).parent():$(obj).parent().parent();
            	var mainObj=$(obj).parents('td');
                $('.'+openCloseClass).each(function(){
                    $(this).css("background-position",closepos);
                });

            	//SULTHAN
            	//ORIGINAL LINE - THIS WILL FETCH ANY ELEMENTS THAT IS PARENT OF THE CURRENT ELEMENT STORED IN OBJ
                //var cols=mainObj.parent().children().size();
            	//THE FOLLOWING LINE ONLY FETCHES THE COUNT OF THE ELEMENT IF IT IS 'TD'
            	var cols = $(obj).parent('td').siblings().length;
            	if(String(mainObj.parent().next().attr("class")).indexOf(childClass+" dt-acc-row")<0) {
                    $("tr."+childClass+" > td > div").slideUp({complete:function(){
                            if(isRemove!=undefined && isRemove==true)
                                $(this).parent().parent().remove();
                            else
                                $(this).parent().parent().css('display','none');
                        //  mainObj.parent().parent().css('border-collapse','collapse');
                        }
                    });
                    var newObj=mainObj.parent().after("<tr class='"+childClass+" dt-acc-row'><td colspan='"+cols+"'><div class='"+childClass+"-data' style='display:none;width=100%;'></div></td></tr>").next(0).find("div."+childClass+"-data");
                    if(callback!=undefined) {
                        callback(newObj,$(obj),parentObj);
                    }
                    $(obj).children().css("background-position",openpos);
                }else{
                    if(mainObj.parent().next().css('display')=='table-row' || mainObj.parent().next().css('display')!='none'){
                        $(obj).children().css("background-position",closepos);
                        $("tr."+childClass+" > td > div").slideUp({complete:function(){
                                if(isRemove!=undefined && isRemove==true)
                                    $(this).parent().parent().remove();
                                else
                                    $(this).parent().parent().css('display','none');
                            //  mainObj.parent().parent().css('border-collapse','collapse');
                            }
                        });
                    } else {
                        $("tr."+childClass+" > td > div").slideUp({complete:function(){
                                $(this).parent().parent().css('display','none');

                            }
                        });
                        //mainObj.parent().parent().css('height','auto');
                        mainObj.parent().next().css('display','table-row');
                        mainObj.parent().after().next(0).find("div."+childClass+"-data").css('display','block');
                        $(obj).children().css("background-position",openpos);
                    }
                }
            } else {
                throw("addAccordionTable : Parameters not specified");
            }
        },

        updateLovOptions:function(opid,opname,selected){

            var obj =  document.getElementById(opid);
            obj.option=0;
            var ct=1;
            $(this.lovXml).find("ListItem").each(function(){
                if($(this).attr("code")==opname){
                    $(this).find("Item").each(function(){
                        var op = new Option();
                        var tname = $(this).find("Name").text();
                        var tvalue = $(this).find("Code").text();
                        op.text = tname;
                        op.value = tvalue;
                        op.title = tname;
                        if((tname==selected)||(tvalue==selected)){
                            op.selected=true;
                        }
                        if(tname){
                            obj.options[ct]=op;
                            ct++;
                        }
                    });
                }
            });
        },

        updateAttrValues:function(opname,opid){
        var op='';
        	$(this.lovXml).find("ListItem").each(function(){
        		$(this).find("Item").each(function(){
        			if($(this).find("Code").text()==opname){
        				op = $(this).find("attr"+opid).text();
        				return op;
        			}
        	  	});
        	});

        	return op;
        },

	    getLovValue:function(opname,opval,type){
            var outvar = '';
            $(this.lovXml).find("ListItem").each(function(){
                if($(this).attr("name")==opname || $(this).attr("code")==opname){
                    $(this).find("Item").each(function(){
                        var tname = $(this).find("Name").text();
                        var tvalue = $(this).find("Code").text();
                        if((tname==opval)||(tvalue==opval)){
                            if(type=='Name' || type=='name'){
                                outvar = tname;
                            }else{
                                outvar = tvalue;
                            }
                            return false;
                        }
                    });
                }
            });
            return outvar;
        },

        validateFieldCheck:function(divId){
            var isValid=true;
            var str="";
            var validateTt="";
            var flag=true;
            var newDiv="";
            //$(newDiv).remove();
            if(divId != undefined){
                if($('#'+divId).find('.validateText')){
                    $('#'+divId).find('.validateText').each(function(){
                        var valEntered=$(this).val();
                            str =$(this).val();
                            validateTt = str.match(/[^\d\w\s*!<>.,#:&%(-_+=)]/);
                            if(validateTt){
                                //alert("validatetext:");
                                newDiv=document.createElement('div');
                                newDiv.id=this.id+"_newid";
                                $("#"+this.id+"_newid").remove();
                                $(newDiv).css({'color':'red','display':'none','float':'right'});
                                $(newDiv).html(SMARTPORTAL.t("Please enter a valid text."));
                                $(this).before(newDiv);
                                $("#"+this.id+"_newid").show();
                                flag=false;
                            }else{
                                $("#"+this.id+"_newid").remove();
                            }
                     });
                }
                 if($('#'+divId).find('.validateNum')){
                     $('#'+divId).find('.validateNum').each(function(){
                      var valEntered=$(this).val();
                      str =$(this).val();
                      var tval = valEntered.split('.');
                      if(tval[0]==undefined)
                          tval[0]='';
                      if(tval[1]==undefined)
                          tval[1]='';
                      var format=$(this).metadata();

                      if(format.formater != undefined && format.formater!="" && format.formater != null){
                        var isFormat=format.formater.split('.');
                        if(isFormat[0]==undefined)
                            isFormat[0]='';
                        if(isFormat[1]==undefined)
                            isFormat[1]='';
                        if(!isNaN(valEntered)){
                          if(isFormat[0]!='*' || isFormat[1]!='*'){}
                            if((isFormat[0].indexOf("#")==0 && isFormat[1].indexOf("#")==0) || (isFormat[0].indexOf("#")==0) || (isFormat[1].indexOf("#")==0)){
                              if((isFormat[0].indexOf("#")==0) && (!(tval[0].length<=isFormat[0].length)) && (isFormat[0].indexOf("*")!=0)){
                                  newDiv=document.createElement('div');
                                  newDiv.id=this.id+"_newid";
                                  $("#"+this.id+"_newid").remove();
                                  $(newDiv).css({'color':'red','display':'none','float':'right'});
                                  $(newDiv).html('Invalid Number format ');
                                  $(this).before(newDiv);
                                  $("#"+this.id+"_newid").show();
                                  flag=false;
                                  }
                              if((isFormat[1].indexOf("#")==0) && (!(tval[1].length<=isFormat[1].length)) && (isFormat[1].indexOf("*")!=0) && tval[1]!=''){
                                  newDiv=document.createElement('div');
                                  newDiv.id=this.id+"_newid";
                                  $(newDiv).css({'color':'red','display':'none','float':'right'});
                                  $(newDiv).html('Invalid Number format ');
                                  $(this).before(newDiv);
                                  $("#"+this.id+"_newid").show();
                                  flag=false;
                              }
                            }
                    //  }
                        }else{
                          newDiv=document.createElement('div');
                          newDiv.id=this.id+"_newid";
                          $("#"+this.id+"_newid").remove();
                          $(newDiv).css({'color':'red','display':'none','float':'right'});
                          $(newDiv).html(SMARTPORTAL.t("Please enter a valid number."))
                          $(this).before(newDiv);
                          $("#"+this.id+"_newid").show();
                          flag=false;
                      }
                      }else if($(this).val().match(/[^\d\-()]/)){
                          newDiv=document.createElement('div');
                          newDiv.id=this.id+"_newid";
                          $("#"+this.id+"_newid").remove();
                          $(newDiv).css({'color':'red','display':'none','float':'right'});
                          $(newDiv).html(SMARTPORTAL.t("Please enter a valid number."))
                          $(this).before(newDiv);
                          $("#"+this.id+"_newid").show();
                          flag=false;
                      }else{
                          $("#"+this.id+"_newid").remove();
                      }
                      });
                     }
                 if($('#'+divId).find('.validatePho')){
                        $('#'+divId).find('.validatePho').each(function(){
                            var valEntered=$(this).val();
                                var s =$(this).val();
                                if(s != ''){
                                    //var rePhoneNumber = new RegExp(/^\([1-9]\d{2}\)\s?\d{3}\-\d{4}$/);
                                    //var rePhoneNumber = new RegExp(/^\d{3}\-\d{3}\-\d{4}$/);
                                    //  var rePhoneNumber = new RegExp(/^\d{10}$/);
                                    var rePhoneNumber = new RegExp(/^-{0,1}\d*\.{0,1}\d+$/);
                                    //var rePhoneNumber = new RegExp(/^\([1-9]\d{2}\)\s$/);
                                    if(!rePhoneNumber.test(s)){
                                     // if(isNaN(parseInt(s)))
                                     // {
                                        newDiv=document.createElement('div');
                                        newDiv.id=this.id+"_newid";
                                        $("#"+this.id+"_newid").remove();
                                        $(newDiv).css({'color':'red','display':'none','float':'right'});
                                        $(newDiv).html(SMARTPORTAL.t('Please enter no. as: XXXXXXXXXX'));
                                        $(this).before(newDiv);
                                        $("#"+this.id+"_newid").show();
                                        flag=false;
                                    }
                                    else{
                                        $("#"+this.id+"_newid").remove();
                                    }
                                } else{
                                    $("#"+this.id+"_newid").remove();
                                }

                        });
                    }
                if($('#'+divId).find('.validatePh')){
                    $('#'+divId).find('.validatePh').each(function(){
                        var valEntered=$(this).val();
                            var s =$(this).val();
                            if(s != ''){
                                //var rePhoneNumber = new RegExp(/^\([1-9]\d{2}\)\s?\d{3}\-\d{4}$/);
                                var rePhoneNumber = new RegExp(/^\d{3}\-\d{3}\-\d{4}$/);
                                //var rePhoneNumber = new RegExp(/^\d{10}$/);
                                //var rePhoneNumber = new RegExp(/^\([1-9]\d{2}\)$/);
                                if(!rePhoneNumber.test(s)){
                                    newDiv=document.createElement('div');
                                    newDiv.id=this.id+"_newid";
                                    $("#"+this.id+"_newid").remove();
                                    $(newDiv).css({'color':'red','display':'none','float':'right'});
                                    $(newDiv).html(SMARTPORTAL.t('Please enter no. as: XXX-XXX-XXXX'));
                                    $(this).before(newDiv);
                                    $("#"+this.id+"_newid").show();
                                    flag=false;
                                }
                                else{
                                    $("#"+this.id+"_newid").remove();
                                }
                            } else{
                                $("#"+this.id+"_newid").remove();
                            }

                    });
                }
                if($('#'+divId).find('.validateDate')){
                    $('#'+divId).find('.validateDate').each(function(){
                        var dateStr =$(this).val();
                        var datePat = /^(\d{1,2})(\/|-)(\d{1,2})(\/|-)(\d{4})$/;
                        var matchArray = dateStr.match(datePat); // is the format ok?
                        newDiv=document.createElement('div');
                        newDiv.id=this.id+"_newid";
                        $("#"+this.id+"_newid").remove();
                        $(newDiv).css({'color':'red','display':'none','float':'right'});
                        $(this).before(newDiv);
                        if (matchArray == null) {
                            $(newDiv).html('Date can be mm/dd/yyyy or mm-dd-yyyy.')
                            $("#"+this.id+"_newid").show();
                            flag=false;
                        }
                        month = matchArray[1]; // p@rse date into variables
                        day = matchArray[3];
                        year = matchArray[5];
                        if (month < 1 || month > 12) { // check month range
                            $(newDiv).html('Month must be between 1 and 12.');
                            $("#"+this.id+"_newid").show();
                            flag=false;
                        }
                        if (day < 1 || day > 31) {
                            $(newDiv).html('Day must be between 1 and 31.');
                            $("#"+this.id+"_newid").show();
                            flag=false;
                        }
                        if ((month==4 || month==6 || month==9 || month==11) && day==31) {
                            $(newDiv).html("Month "+month+" doesn`t have 31 days:");
                            $("#"+this.id+"_newid").show();
                            flag=false;
                        }
                        if (month == 2) { // check for february 29th
                        var isleap = (year % 4 == 0 && (year % 100 != 0 || year % 400 == 0));
                        if (day > 29 || (day==29 && !isleap)) {
                            $(newDiv).html("February " + year + " doesn`t have " + day + " days!");
                            $("#"+this.id+"_newid").show();
                            flag=false;
                        }
                        }
                    //  flag=true; // date is valid
                    });
                }
                if($('#'+divId).find('.validateURL')){
                    $('#'+divId).find('.validateURL').each(function(){
                        var url=$(this).val();
                      if(url!="" && url!= null && url!= undefined){
                        var RegExp = /(ftp|http|https):\/\/(\w+:{0,1}\w*@)?(\S+)(:[0-9]+)?(\/|\/([\w#!:.?+=&%@!\-\/]))?/;
                        //var RegExp = /http:\/\/[A-Za-z0-9\.-]{3,}\.[A-Za-z]{3}/;
                            if(!RegExp.test(url)){
                                newDiv=document.createElement('div');
                                newDiv.id=this.id+"_newid";
                                $("#"+this.id+"_newid").remove();
                                $(newDiv).css({'color':'red','display':'none','float':'right'});
                                $(newDiv).html(SMARTPORTAL.t("Please enter a valid URL."));
                                $(this).before(newDiv);
                                $("#"+this.id+"_newid").show();
                                flag=false;
                            }else{
                                $("#"+this.id+"_newid").remove();
                            }
                         }

                    });
                }
                if($('#'+divId).find('.validateEmail')){
                    $('#'+divId).find('.validateEmail').each(function(){
                        var email=$(this).val();
                        //var RegExp = /^((([a-z]|[0-9]|!|#|$|%|&|'|\*|\+|\-|\/|=|\?|\^|_|`|\{|\||\}|~)+(\.([a-z]|[0-9]|!|#|$|%|&|'|\*|\+|\-|\/|=|\?|\^|_|`|\{|\||\}|~)+)*)@((((([a-z]|[0-9])([a-z]|[0-9]|\-){0,61}([a-z]|[0-9])\.))*([a-z]|[0-9])([a-z]|[0-9]|\-){0,61}([a-z]|[0-9])\.)[\w]{2,4}|(((([0-9]){1,3}\.){3}([0-9]){1,3}))|(\[((([0-9]){1,3}\.){3}([0-9]){1,3})\])))$/;
                        var RegExp = /^((([a-z]|[A-Z]|[0-9]|!|#|$|%|&|'|\*|\+|\-|\/|=|\?|\^|_|`|\{|\||\}|~)+(\.([a-z]|[A-Z]|[0-9]|!|#|$|%|&|'|\*|\+|\-|\/|=|\?|\^|_|`|\{|\||\}|~)+)*)@((((([a-z]|[A-Z]|[0-9])([a-z]|[A-Z]|[0-9]|\-){0,61}([a-z]|[A-Z]|[0-9])\.))*([a-z]|[A-Z]|[0-9])([a-z]|[A-Z]|[0-9]|\-){0,61}([a-z]|[A-Z]|[0-9])\.)[\w]{2,4}|(((([0-9]){1,3}\.){3}([0-9]){1,3}))|(\[((([0-9]){1,3}\.){3}([0-9]){1,3})\])))$/;
                        newDiv=document.createElement('div');
                        newDiv.id=this.id+"_newid";
                        $("#"+this.id+"_newid").remove();
                        $(newDiv).css({'color':'red','display':'none','float':'right'});
                        $(newDiv).html(SMARTPORTAL.t("Please enter a valid e-mail address."));
                        $(this).before(newDiv);

                        if(email != ''){
                            if(!RegExp.test(email)){
                                $("#"+this.id+"_newid").show();
                                flag=false;
                            }else{
                                $("#"+this.id+"_newid").remove();
                            }
                        }else{
                            $("#"+this.id+"_newid").remove();
                        }


                    });
                }
            }
            return flag;
        },

        formatRelatedLinks: function(params){
            //var html ='<div id="related_links" style="width:'+params.width+'px;">';
            var html ='<div id="related_links" style="padding-right:8px;">';
            html += '<fieldset class="links-fieldset">';
            html += '<legend align="left">'+SMARTPORTAL.t("Related Links")+'</legend>';

            //html +='<ul>';
            for(var i=0;i<params.items.length;i++){
                html += '<div class="row_link"><div class="bullet_par"><div class="bullet"></div></div><div class="link"><a title="'+params.items[i].desc+'" href="javascript:void(0);" onclick="'+this.getWidgetInstanceName()+'.'+params.items[i].jsFunc+'">'+ params.items[i].title +'</a></div></div>';
            }
            //html+="</ul>";
            html += "</fieldset>";
            html += "</div>";

            return html;
        },
        include:function(filename,callback,widgetObj)
        {
            var LazyLoader = {};
            LazyLoader.timer = {};
            try{
                var body = document.getElementsByTagName('body').item(0);
                var crob = eval(this.getWidgetInstanceName());
                script = document.createElement('script');
                script.src = filename;
                script.type = 'text/javascript';
                body.appendChild(script);
                if(callback){
                    script.onreadystatechange = function () {
                        if(script.readyState=="complete" || script.readyState=='loaded'){ //IE Support
                            callback(script,widgetObj);
                        }
                    }
                    script.onload = function(){
                        callback(script,widgetObj);
                    }
                    if ((Prototype.Browser.WebKit && !navigator.userAgent.match(/Version\/3/)) || Prototype.Browser.Opera) { // safari
                        LazyLoader.timer[url] = setInterval(function() {
                            if (/loaded|complete/.test(document.readyState)) {
                                clearInterval(LazyLoader.timer[url]);
                                callback(script,widgetObj);
                            }
                        }, 10);
                    }
                }
            }catch(e){}
        },
      //0033772: Code Re-Factoring - Home page - Remove unwanted JavaScript
        includecss:function(filename)
        {
            try{
            	$('head').append('<link rel="stylesheet" href= "'+filename+'" type="text/css" />');
            }catch(e){}
        },

        /**
         * @desc convert a string to xmlobject
         * @param string - xml string
         * @return object - xml object
         */
        stringToXml:function(xmlstr){
            try //Internet Explorer
            {
              xmlDoc=new ActiveXObject("Microsoft.XMLDOM");
              xmlDoc.async="false";
              xmlDoc.loadXML(xmlstr);
            }
            catch(e)
            {
                try{
                    parser=new DOMParser();
                    xmlDoc = parser.parseFromString(xmlstr,"text/xml");
                }catch(e){
                    //alert(e.message);
                }

            }
            return xmlDoc;
        },

        renderNoRecs:function(mesg, buttString, func){
            var html='';
            if(buttString!=null && func!=null && buttString!=undefined && func!=undefined ){
                html ='<div style="display: block;"><table style="padding: 5px;width:100%;"><tr><td class="sp_erromsg" width="100%">'+SMARTPORTAL.t(mesg)+'</td><td align="right"><input type="button" class="spButtonSpan" onclick="' + func +';" value="'+ buttString +'" style="margin-left: 25px;"/></td></tr></table></div>';
            }else{
                html ='<div style="display: block;"><table style="width:100%;"><tr><td class="sp_erromsg" width="100%">'+SMARTPORTAL.t(mesg)+'</td><td></td></tr></table></div>';
            }
            return html;
        },


        openWindow:function(obj,callback,widgetObj){
            if(obj.options==undefined)
                obj.options='';
            if(obj.url==undefined)
                obj.url='';
            if(obj.name==undefined)
                obj.name=='_blank';

            var newWindow = window.open(obj.url,obj.name,obj.options);
            this.checkIfLoaded(newWindow,callback,widgetObj);

        },

        checkIfLoaded:function(obname,callback,widgetObj){
            if((window.navigator.appName).indexOf("Microsoft")>=0){
                if(obname.document.readyState=="complete"){
                    callback(obname,widgetObj);
                }else{
                    this.checkIfLoaded(obname,callback);
                }
            }else{
                obname.onload=callback(obname,widgetObj);
            }
        },

        pausescript:function(millis){
            var date = new Date();
            var curDate = null;
            do {
                curDate = new Date();
            }while(curDate - date < millis);
        },

        getLearnerDetail:function(prm){
        	var stdinfo=false;
        	jQuery.ajaxSetup({
	            xhr: function() {
	                    //return new window.XMLHttpRequest();
/*	                    try{
	                        if(window.ActiveXObject)
	                            return new window.ActiveXObject("Microsoft.XMLHTTP");
	                    } catch(e) { }

	                    return new window.XMLHttpRequest();*/
	         //AJAX xmlHTTPRequest to IE browser(all browsers)
	             if(window.ActiveXObject) {
	         	       try {
	         	    	   ajxobj = new ActiveXObject("Msxml2.XMLHTTP");
	         	       } catch (e) {
		         	       try {
		         	    	  ajxobj = new ActiveXObject("Microsoft.XMLHTTP");
		         	       } catch (e) {
		         	    	  ajxobj = false;
		         	       }
	         	      }
	         	  }else{
	         		 ajxobj = new XMLHttpRequest();
	        	  }
        	  return ajxobj;
	          }
	        });
        	
        	/* Added by ganeshbabuv on Sep 30th 2015 to pass the salesforce session variable to avoid to take the value (logged user details) from cookie. Instead of that, reload values from session varible. Ref :0054508 on 30th sep 2015 10:40 AM */
        	var sf_exp_ses_value = $('.salesforce-widget #widget').attr('data-exp-sess-id'); 
        	//alert('sf_exp_ses_value='+sf_exp_ses_value);
        	if (typeof sf_exp_ses_value !== typeof undefined && sf_exp_ses_value !== false) {
                var getvalue_url=resource.base_host+"/?q=getLearnerInfo/getvalue/"+prm+"/"+sf_exp_ses_value;
             }else{
            	var getvalue_url=resource.base_host+"/getLearnerInfo.php?getvalue="+prm;
             } 
        	
        	jQuery.ajax({
			   type: "GET",
			   url: getvalue_url,  //Changed according to cookieless option
			   processData: false,
			   dataType:'text',
			   contentType:'text/xml',
			   async: false,
			   cache: false,
			   success: function(respText){
					stdinfo = respText;
			   }
			 });
			return stdinfo;
        },

        getLearnerId:function(){
        	return this.getLearnerDetail("userid");
        },

        getUserName:function(){
        	return this.getLearnerDetail("username");
        },

        getUserFullName:function(){
        	return this.getLearnerDetail("userfullname");
        },

        getUserEmail:function(){
        	return this.getLearnerDetail("usermail");
        },

        getUserRole:function(){
        	return this.getLearnerDetail("userrole");
        },

        readCookie:function(cookieName){
            var theCookie=""+document.cookie;
            var ind=theCookie.indexOf(cookieName);
            var ind1=theCookie.indexOf(';',ind);
            if (ind1==-1) ind1=theCookie.length;
            var cookinfo = unescape(theCookie.substring(ind+cookieName.length+1,ind1));
            return cookinfo;
        },

        setReportHeader:function(){
            var html='';
            html +='<div class="report-header-left"></div><div class="report-header-middle">';
            html +='<a href="#" title="Home"><img src="'+themepath+'/logo.png" alt="Home" id="logo"></a>';
            html += '<div id="top-sign" style="padding: 0px 8px 0px 0px; position: relative; top: 25px; color: white; text-align: right; font-family: arial; font-size: 10px; font-weight: bold; text-decoration: none;">';
            html += '<br><br><br><br><br></div>';
            html +='</div><div class="report-header-right"></div>';
            return html;
        },

        setReportFooter:function(){
            var html ="";

            /*html += '<div class="copyright-page">';
            html += '<div class="ftrLeft">Copyright 2011 Expertus Inc. All rights reserved.&nbsp;&nbsp;&nbsp;</div>';
            html += '<div class="ftrRight"><a href="" target="_blank"><img src="sites/all/themes/core/AdministrationTheme/images/expertus_power.png"></a>';
            html += '</div></div>';*/

            html += '<div class="region region-footer"><div class="block block-menu contextual-links-region first odd" id="block-menu-menu-footer-menu">';
            html += '<h2 class="title">Footer Menu</h2><div class="content"><ul class="menu"><li class="first leaf"><a title="" href="/?q=node/1">About Us</a></li>';
            html += '<li class="leaf"><a title="" href="/?q=node/2">Feedback</a></li><li class="leaf"><a title="" href="/?q=node/5">Legal Notices</a></li>';
            html += '<li class="leaf"><a title="" href="/?q=node/3">Privacy Policy</a></li><li class="last leaf"><a title="" href="/?q=node/4">Trademark</a></li>';
            html += '</ul></div></div><div class="block block-exp-sp-footer contextual-links-region last even" id="block-exp-sp-footer-footer">';
            html += '<div class="content"><div id="footer"><div class="copyright-page">';
            html += '<div class="ftrLeft"><span class="FooterCpyText">v3.2.7.3GA | Copyright 2011 Expertus, Inc. All rights reserved.</span>';
            html += '</div><div class="poweredby"><a href="#"><img height="25" width="140" src="sites/all/themes/core/AdministrationTheme/images/powered-by.png"></a></div>';
            html += '</div></div></div></div></div>';
            return html;
        },

        setHourMin:function(totalminutes){

            var tHours = Math.floor(totalminutes/60);
            var tMinutes = totalminutes%60;

            if(tHours > 1) {
            var Hours = tHours + " Hours";
            }else{
            var Hours = tHours + " Hour";
            }

            if(tMinutes > 0) {
            var Minutes = ", " + tMinutes + " Mins" ;
            }else{
            var Minutes = '';
            }

            var Time = Hours + Minutes;

            return Time;
        },
        setDrupalCall:function(requestData){
			var widObj = this;
			var requestDataType ='';
			/*if(widObj.renderId === undefined || widObj.renderId === null)
				alert("renderId is undefined");*/
			if(requestData === undefined || requestData === null)
				requestData = {};
			if(requestData.returntype === undefined || requestData.returntype === null)
				requestDataType = "text";
			if(requestData.returntype == 'xml')
				requestDataType = "type/xml";

			this.currentAjaxRequest=$.ajax({
				type: "POST",
				url: resource.drupal_service_url,
				data:requestData,
				processData:true,
				dataType:requestDataType,
				async: true,
				beforeSend: function() {
					//widObj.createLoader(widObj.renderId);
				},
				success: function(outputData){
					//try
					//{
						if(requestData.returntype == "xml")
						{
							widObj.responseText=widObj.Trim(outputData);
							widObj.convertResponseXml(outputData);
							widObj.successHandler(outputData);
							widObj.destroyLoader(widObj.renderId);
						}
						else if(requestDataType == "text")
						{
							var json = eval("(" + outputData + ")");
							widObj.successHandler(json);
							//widObj.destroyLoader(widObj.renderId);
						}
					//}
					/*catch(error)
					{
						alert("Invalid Ajax callback function name."+error.toString());
					}*/
		  		},
		  		failure:function(msg){
		  			widObj.renderError();
		  		},
		  		error:function (XMLHttpRequest, textStatus, errorThrown) {
		  			widObj.renderError();
			   	}
			});
			return this.currentAjaxRequest;
		},
        setRedirectUrl:function(querystring){
        	if(querystring !='' && querystring != undefined)
        		window.location = this.constructUrl(querystring);
        	else
        		window.location = resource.base_url;
        },
        constructUrl:function(querystring){
        	if(querystring !='' && querystring != undefined)
        		return resource.base_url+'/?q='+querystring;
        	else
        		return resource.base_url;
        },
        windowOpen:function(url,title,width,height)
        {
        	title=title!=undefined?title:"ExpertusONE";
        	var windowWidth=width!=undefined?width:850;
        	var windowHeight=height!=undefined?height:800;
        	var windowName=title;
        	var centerWidth = (window.screen.width - windowWidth) / 2;
            var centerHeight = (window.screen.height - windowHeight) / 2;
            var windowOptions="toolbar=yes,menubar=no,scrollbars=yes,status=yes,location=no,resizable=1,width="+windowWidth+",height="+windowHeight+",left="+centerWidth+",top="+centerHeight;
            var newWindow = window.open(url,'',windowOptions);
            // newWindow.document.title=title;
            //newWindow.document.location.href=url;
            if(newWindow)
        	{
        		 newWindow.focus();
        		 return newWindow;
        	}
        	else
        	{
        		alert(SMARTPORTAL.t("Your browser blocked the popup. Disable popup blocker in your browser and try again."));
        	}
        },


        /**
         * Overridable method which is used to split the string.
         * @method this.spiltString
         * @param String,Int
         * @public
         */
		spiltString : function(str, n){
		    var split= str.indexOf(' ', n);
		    if(split== -1) return str;
		    return str.substring(0, split);
		},


        /**
		 * Overridable method which is used to get the updated time.
		*/
		modifiedTime:function(days, hrs, mins){
		   var timeStamp='';
			if(days > 0) {
				timeStamp = days + ' ' + SMARTPORTAL.t('days');
			if(hrs > 0) {
				timeStamp += ','+ hrs + ' ' + SMARTPORTAL.t('hours ago');
			}else{
				timeStamp += ','+ mins + ' ' + SMARTPORTAL.t('mins ago');
			}

			}else if(days == 0 && hrs > 0) {
			timeStamp = hrs + ' ' + SMARTPORTAL.t('hours')+','+ mins + ' ' + SMARTPORTAL.t('mins ago');
			}else{
			timeStamp = mins + ' ' + SMARTPORTAL.t('mins ago');
			}
          return timeStamp;
        },

        /**
		 * Overridable method which is used to get the popup for all alert messages.
		*/
		getAlertPopup:function(msg){
			$('#alertMsg-wizard').remove();
	        var html = '';
	        html+='<div id="alertMsg-wizard" style="display:none; padding: 0px;">';
	        html+='<table width="100%" border="0" valign="center">';
	        html+='<tr><td height="30"></td></tr>';
	        html+='<tr>';
	       	html+= '<td align="center"><span><b>'+msg+'<b></span><br /></td>';
	        html+='</tr>';
	        html+='</table>';
	        html+='</div>';
	        $("body").append(html);
	        var closeButt={};

		    closeButt[SMARTPORTAL.t('OK')]=function(){ $(this).dialog('destroy');$(this).dialog('close');$('#alertMsg-wizard').remove();};

	        $("#alertMsg-wizard").dialog({
	            position:[(getWindowWidth()-500)/2,100],
	            bgiframe: true,
	            width:500,
	            resizable:false,
	            modal: true,
	            title:'Launch',
	            buttons:closeButt,
	            closeOnEscape: false,
	            draggable:false,
	            overlay:
	             {
	               opacity: 0.9,
	               background: "black"
	             }
	        });

	        $('.ui-dialog').wrap("<div class='portal-ui-element'></div>");
	        $('.ui-widget-overlay').wrap("<div class='portal-ui-element'></div>");
	        //$('.ui-dialog-titlebar-close').remove();

	        $("#alertMsg-wizard").css({height:'auto', width:'100%'});
	        $("#alertMsg-wizard").show();

			$('.ui-dialog-titlebar-close').click(function(){
	            $("#alertMsg-wizard").remove();
	        });

		}



};;
/**
 * The Abstract Manager is the base component of LPP framework. It consists the base LPP framework libary methods.
 * @module BaseWidget
 * @requires JQuery Lib
 * @title AbstractManager
 * @beta
 */


/****************************************************************************/
/****************************************************************************/
/****************************************************************************/

/**
 * AbstractManager  class for the LPP Learning widgets
 * @namespace EXPERTUS.widget
 * @class AbstractManager
 * @uses JQuery Lib
 * @constructor
 */

//registernamespace("EXPERTUS.SMARTPORTAL.AbstractManager");
var EXPERTUS_SMARTPORTAL_AbstractManager ={

		/**
	    * If it is false it makes the sync request to the LMS system.
	    * @property this.asyncReq
	    * @type Boolean -
	    * @default true
	    * @Instance level variable
		*/
		asyncReq:true,


		/**
	    * It is used to persist the requestXml of the web service.
	    * @property this.requestXml
	    * @type String - Value hold as xml format.
	    * @default ""
	    * @Instance level variable
		*/
		requestXml:"",

		/**
	    * It is used to track the http request connection status.
	    * @property this.connectionStatus
	    * @type String - http status value.
	    * @default ""
	    * @Instance level variable
		*/
		connectionStatus:"",

		/**
	    * It is used to hold the http object.
	    * @property this.httpRequest
	    * @type Object - xmlhttprequest object.
	    * @default null
	    * @Instance level variable
		*/
		httpRequest:null,

		/**
	    * Web  service URL.
	    * @property this.url
	    * @type String - url
	    * @default ""
	    * @Instance level variable
		*/
		url:"",

		/**
	    * Web  service name which gets invoked in the Ajax request.
	    * @property this.soapAction
	    * @type String - web service name
	    * @default ""
	    * @Instance level variable
		*/
		soapAction:"",

		/**
	    * Method name of the http request.
	    * @property this.methodName
	    * @type String - GET/POST/PUT
	    * @default ""
	    * @Instance level variable
		*/
		methodName:"",

		/**
	    * Service name.
	    * @property this.serviceName
	    * @type String -
	    * @default null
	    * @Instance level variable
		*/
		actionKey:null,

		/**
	    * Callback handler of the http request. It hold the methods for success and failure scenario.
	    * @property this.callback
	    * @type {Object}
	    * @default ""
	    * @Instance level variable
		*/
		callback:"",

		/**
	    * Timeout value of the http request.
	    * @property this.timeOut
	    * @type {int}
	    * @default null
	    * @Instance level variable
		*/
		timeOut:null,

		/**
	    * Web services related parameters hold into this variable.
	    * @property this.serviceAttributes
	    * @type {named argument}
	    * @default null
	    * @Instance level variable
		*/
		serviceAttributes:null,

		/**
	    * Context path of the LPP framework
	    * @property this.xmlResponseBaseURL
	    * @type {String} - URL
	    * @default _ It inherits from config.js
	    * @Instance level variable
		*/
		xmlResponseBaseURL:null,

		/**
	    * Used to hold the widget object
	    * @property this.widgetObject
	    * @type {Object} - URL
	    * @Instance level variable
		*/
		widgetObject:null,

		/**
	    * Used to hold the callback function of ajax call
	    * @property this.callback
	    * @type {string} - funcion
	    * @Instance level variable
		*/
		callback:null,

		/**
	    * Used to hold the id of the div where the loader will place
	    * @property this.loaderobj
	    * @type {string} - id
	    * @Instance level variable
		*/
		loaderobj:null,

		/**
	    * Overridable method used to initialize abstract manager variables
	    * @property this.initialize
	    * @param {Obj} - Detail widget object
	    * @Instance level variable
		*/
		initialize:function(obj){
			this.setwidgetObject(obj);
			this.setActionKey(obj.getActionKey());
			this.setEndPointURL(obj.getEndPointURL());

		},

		/**
	    * Overridable method used to set the loader id
	    * @property this.setLoaderObj
	    * @param {String} - id
	    * @Instance level variable
		*/
		setLoaderObj:function(){
			this.loaderobj=id;
		},

		/**
	    * Overridable method used to get the loader id
	    * @property this.setLoaderObj
	    * @param {String} - id
	    * @Instance level variable
		*/
		getLoaderObj:function(){
			return this.loaderobj;
		},

		/**
	    * Overridable method used to set the widget object
	    * @property this.initialize
	    * @param {Obj} - Detail widget object
	    * @Instance level variable
		*/
		setwidgetObject:function(obj){
			this.widgetObject=obj;
		},

		/**
		 * Overridable method used to set the callback funtion for
		 * ajax call.
		 * @property this.setCallBack()
		 * @param String - call back function name
		 * @param obj - arguments list (if any)
		 * @Instance level variable
		 */

		setCallBack:function(fnName,obj){
			this.callback = fnName;
			if(obj!=null && obj!=undefined && obj!='' && typeof obj == 'object' ){
				var t=this.convertJsonToString(obj);
				this.callback = this.callback+"("+t+")";
			}else if(obj!=null && obj!=undefined && obj!='' && typeof obj == 'string' ){
				this.callback = this.callback+"(\""+obj+"\")";
			}else{
				this.callback = this.callback+"()";
			}
		},
		
		convertJsonToString:function(obj){
			var t='';
			if(obj!=null && obj!=undefined && obj!='' && typeof obj == 'object' ){
				t = "{";

				for (var key in obj){
					if(t.length>2)
						t+=",";
					var tmp=(typeof obj[key]=='object')?this.convertJsonToString(obj[key]):
						(typeof obj[key]=='string'?(obj[key].indexOf('"')>0?"'"+obj[key]+"'":'"'+obj[key]+'"'):obj[key]);
					tmp=String(tmp).length>0?tmp:'""';
					t += '"'+key+'":'+tmp;
				}
				t += "}";
			}
			return t;
		},

		/**
		 * Overridable method used to get the callback funtion for
		 * ajax call.
		 * @property this.setCallBack()
		 * @Instance level variable
		 */

		getCallBack:function(){
			return this.callback;
		},

		/**
	    * Overridable method used to get the widget object
	    * @property this.initialize
	    * @return {Obj} - Detail widget object
	    * @Instance level variable
		*/
		getwidgetObject:function(){
			return this.widgetObject;
		},

 		/**
		* Overridable method which is used to set the appropriate parameter for web service request and initiate the request from sub widget.
		* @method this.execute
		* @param {namedargument} - Service related paramaters.
		* @public
		*/

		execute:function()
		  {
				var returnFunction = (this.getCallBack()==null || this.getCallBack()==undefined)?'renderResults()':this.getCallBack();
			  	var widgetObj = this.getwidgetObject();
			  	var loader = '';

			  	if(this.getLoaderObj()!=null && this.getLoaderObj() != undefined && this.getLoaderObj() != 'null'){
				  	if(document.getElementById(this.getLoaderObj())!=null)
				  		loader = this.getLoaderObj()
				  	else
				  		loader = widgetObj.getUniqueWidgetId()+((this.getLoaderObj()!=null && this.getLoaderObj()!=undefined)?this.getLoaderObj():'');
			  	}else{
			  		loader = null;
			  	}
			  	if(loader!=null)
			  		widgetObj.createLoader(loader);
			  	$('#msgDiv').css('display','none');
			  	var mgr=this;
			  	// Implemented for Ajax Request failing in IE8
			  	jQuery.ajaxSetup({
		            xhr: function() {
		                    //return new window.XMLHttpRequest();
		                    try{
		                        if(window.ActiveXObject)
		                            return new window.ActiveXObject("Microsoft.XMLHTTP");
		                    } catch(e) { }

		                    return new window.XMLHttpRequest();
		                }
		        });
				jQuery.ajax({
				   type: "POST",
				   url: this.url,
				   processData: false,
				   data:  this.requestXml,
				   dataType:'text',
				   contentType:'text/xml',
				   async: true,
				   //Arthi - added to send the soapaction in the request header - start
				   beforeSend: function(req) {
						req.setRequestHeader("SOAPAction",mgr.getActionKey());
						req.setRequestHeader("Accept-Encoding", "gzip, deflate");
					 },
					 //Arthi - added to send the soapaction in the request header - end
				   success: function(respText){
			  			widgetObj.responseText=widgetObj.Trim(respText);
			  			widgetObj.convertResponseXml();
			  			if(loader!=null)
			  				widgetObj.destroyLoader(loader);
			  			eval('widgetObj.'+returnFunction);
			  			//widgetObj.renderResults();
			  		},
			  		failure:function(msg){
			  			widgetObj.responseText=widgetObj.Trim(msg);
			  			widgetObj.convertResponseXml();
			  			if(loader!=null)
			  				widgetObj.destroyLoader(loader);
			  			widgetObj.renderErrorCommon();
				   },error:function (XMLHttpRequest, textStatus, errorThrown) {
					   widgetObj.responseText=widgetObj.Trim(XMLHttpRequest.responseText);
					   widgetObj.convertResponseXml();
					   if(loader!=null)
						   widgetObj.destroyLoader(loader);
					   widgetObj.renderErrorCommon();
				   	 }
				 });

		  },


		/**
		* Overridable method which is used to get the request xml of the xmlhttprequest.
		* @method this.getRequestXML
		* @return {String} - Request string in xml format
		* @public
		*/
		getRequestXML:function()
		 {
			return this.requestXml;
		 },

		/**
		* Method which is used trim a string means remove the leading and trailing space.
		* @method this.Trim()
		* @return {String}
		* @public
		*/
		 Trim:function(str){
			//return str.replace(/(^\s*)|(\s*$)/g, "");
			 return $.trim(str);
		 },

		/**
		* Method which is used to Left trim a string.
		* @method this.LTrim()
		* @return {String}
		* @public
		*/
		 LTrim:function(str){
			 //return str.replace(/(^\s*)/g, "");
			 return $.trim(str);
		},

		/**
		* Method which is used to Right trim a string.
		* @method this.RTrim()
		* @return {String}
		* @public
		*/
		RTrim:function(str)
		{
			//return str.replace(/(\s*$)/g, "");
			return $.trim(str);
		},

		/**
		* Overridable method which is used to get the response xml of the xmlhttprequest.
		* @method this.getResponseXML
		* @return {Object} - Response object.
		* @public
		*/
		getResponseXML:function()
		 {
			return this.responseXml;
		 },


		/**
		* Overridable method which is used to get the request object of the xmlhttprequest.
		* @method this.getRequestObj
		* @return {Object} - Request object.
		* @public
		*/
		getRequestObj:function()
		 {
			return this.httpRequest;
		 },

		/**
		* Set the request method name.
		* @method this.setMethodName
		* @param {String} - GET/POST/PUT
		* @public
		*/
		setMethodName:function(methodname)
		 {
			this.methodName = methodname;
		 },

		/**
		* Overridable method which is used to set the  service number or name .
		* @method this.setServiceName
		* @param  {String} - Service number or name
		* @public
		*/
		setActionKey:function(no){
			this.actionKey=no;
		},

		/**
		* Overridable method which is used to get the  service number or name .
		* @method this.getServiceName
		* @return  {String} - Service number or name
		* @public
		*/
		getActionKey:function(){
			return this.actionKey;
		},

		/**
		* Set the soap action name.
		* @method this.setSOAPAction
		* @param {String} - Web service name
		* @public
		*/
		setSOAPAction:function(soapaction)
		 {

			this.soapAction = soapaction;
		 },

		/**
		* Set the end point URL.
		* @method this.setEndPointURL
		* @param {String} - URL
		* @public
		*/
        setEndPointURL:function(url)
         {
			 var widgetObj = this.getwidgetObject();
			 if(widgetObj.getUniqueWidgetId().toLowerCase().indexOf('lnr')>=0 || widgetObj.getUniqueWidgetId().toLowerCase().indexOf('team')>=0){
				 this.url = url + widgetObj.getUniqueWidgetId();
			 }else{
				 this.url = url + this.generateQueryString();
			 }

         },
         /**
         * Method used to set the Query String which append to the end point url.
         * @method this.generateQueryString
         * @param {String}
         * @public
         */
         generateQueryString:function(){
            var qstr = "";
            var widgetObj = this.getwidgetObject();
            if(this.getActionKey()!=null && this.getActionKey()!=undefined && this.getActionKey().length>0)
            	//Arthi - changed toremove the service no from QueryString - start
                qstr += qstr.length>0?"&actionkey="+this.getActionKey():"?actionkey="+this.getActionKey();
            	//Arthi - changed toremove the service no from QueryString - end
                if(config.data[2].licensekey[0].admin_licensekey!=null && config.data[2].licensekey[0].admin_licensekey!=undefined && config.data[2].licensekey[0].admin_licensekey!=''){
                    qstr += qstr.length>0?"&licensekey="+config.data[2].licensekey[0].admin_licensekey:"?licensekey="+config.data[2].licensekey[0].admin_licensekey;
                	var srvno=eval('config.data[3].SCServiceno[0].'+widgetObj.getUniqueWidgetId());
                    qstr += srvno==undefined?"&SCServiceno="+config.data[3].SCServiceno[0].all:"&SCServiceno="+srvno;

            }
            return qstr;
         },
		/**
		* Set the call back functions.
		* @method this.setCallbackFunctions
		* @param {Object}
		* @public
		*/
		setCallbackFunctions:function(callback)
		 {
			this.callback = callback;
		 },

		 getLovRequest:function(obj){
				var widgetObj = this.getwidgetObject();
				this.setActionKey(eval('config.data[1].serviceaction[0].PickListService'));
				this.setEndPointURL(widgetObj.getEndPointURL());
				var request=new Object();
				request.query = new SOAPObject("PickList").attr("xsi:type","null");
				if(obj!=undefined && obj.length>0){
					for(var i=0;i<obj.length;i++){
						var request1=new Object();
						var code = (obj[i].code!=null && obj[i].code!=undefined)?obj[i].code:'';
						var language = (obj[i].language!=null && obj[i].language!=undefined)?obj[i].language:'';
						request1.query = new SOAPObject("Lists").attr("xsi:type","null");
						request1.query.appendChild(new SOAPObject("Code").attr("xsi:type","null").val(code));
						request1.query.appendChild(new SOAPObject("Language").attr("xsi:type","null").val(language));
						request.query.appendChild(request1.query);
					}
				}
				//var sr = new SOAPRequest("PickList", request); Arthi - changed to include SOAP headers
				var sr = new SOAPRequest("PickList",request,this.getSOAPHeader());
				sr="<?xml version='1.0' encoding='UTF-8'?>"+sr;
				sr=sr.toString();
				return sr;
			},

		getLinkPathRequest:function(obj){
				var widgetObj = this.getwidgetObject();
				this.setActionKey(eval('config.data[1].serviceaction[0].LinkPathService'));
				this.setEndPointURL(widgetObj.getEndPointURL());
				var request=new Object();
				request.query = new SOAPObject("LinkPath").attr("xsi:type","null");
				request.query.appendChild(new SOAPObject("LinkTitle").attr("xsi:type","null").val(obj.LinkTitle));
				var sr = new SOAPRequest("LinkPath",request,this.getSOAPHeader());
				sr="<?xml version='1.0' encoding='UTF-8'?>"+sr;
				sr=sr.toString();
				return sr;
			},

		//Arthi - Added to generate the generate SOAP request, with SOAP headers  - start//
		getSOAPRequest:function(action,soapObj){
			var sr = new SOAPRequest(action,soapObj,this.getSOAPHeader());
			sr = "<?xml version='1.0' encoding='UTF-8'?>" + sr;
			sr = sr.toString();
			return sr;
		},

		getSOAPHeader:function(){
			var hdr = new Object();
			hdr.query = new SOAPObject("MessageHeaderInfo").attr(
					"xsi:type", "null");
			hdr.query.appendChild(new SOAPObject("PortalLicenseKey").attr("xsi:type","null").val(this.getCookie("SPLearnerLicense")));
			hdr.query.appendChild(new SOAPObject("PortalAuthKey").attr("xsi:type","null").val(this.getCookie("SPCertificate")));
			return hdr;
		},

		getCookie:function(c_name){
			if (document.cookie.length>0)
			  {
			  c_start=document.cookie.indexOf(c_name + "=");
			  if (c_start!=-1)
			    {
			    c_start=c_start + c_name.length+1;
			    c_end=document.cookie.indexOf(";",c_start);
			    if (c_end==-1) c_end=document.cookie.length;
			    return unescape(document.cookie.substring(c_start,c_end));
			    }
			  }
			return "";
		}
		//Arthi - Added to generate the generate SOAP request, with SOAP headers  - end


};
;
/*
 * jquery.qtip. The jQuery tooltip plugin
 *
 * Copyright (c) 2009 Craig Thompson
 * http://craigsworks.com
 *
 * Licensed under MIT
 * http://www.opensource.org/licenses/mit-license.php
 *
 * Launch  : February 2009
 * Version : 1.0.0-rc3
 * Released: Tuesday 12th May, 2009 - 00:00
 * Debug: jquery.qtip.debug.js
 */
(function(f){f.fn.qtip=function(B,u){var y,t,A,s,x,w,v,z;if(typeof B=="string"){if(typeof f(this).data("qtip")!=="object"){f.fn.qtip.log.error.call(self,1,f.fn.qtip.constants.NO_TOOLTIP_PRESENT,false)}if(B=="api"){return f(this).data("qtip").interfaces[f(this).data("qtip").current]}else{if(B=="interfaces"){return f(this).data("qtip").interfaces}}}else{if(!B){B={}}if(typeof B.content!=="object"||(B.content.jquery&&B.content.length>0)){B.content={text:B.content}}if(typeof B.content.title!=="object"){B.content.title={text:B.content.title}}if(typeof B.position!=="object"){B.position={corner:B.position}}if(typeof B.position.corner!=="object"){B.position.corner={target:B.position.corner,tooltip:B.position.corner}}if(typeof B.show!=="object"){B.show={when:B.show}}if(typeof B.show.when!=="object"){B.show.when={event:B.show.when}}if(typeof B.show.effect!=="object"){B.show.effect={type:B.show.effect}}if(typeof B.hide!=="object"){B.hide={when:B.hide}}if(typeof B.hide.when!=="object"){B.hide.when={event:B.hide.when}}if(typeof B.hide.effect!=="object"){B.hide.effect={type:B.hide.effect}}if(typeof B.style!=="object"){B.style={name:B.style}}B.style=c(B.style);s=f.extend(true,{},f.fn.qtip.defaults,B);s.style=a.call({options:s},s.style);s.user=f.extend(true,{},B)}return f(this).each(function(){if(typeof B=="string"){w=B.toLowerCase();A=f(this).qtip("interfaces");if(typeof A=="object"){if(u===true&&w=="destroy"){while(A.length>0){A[A.length-1].destroy()}}else{if(u!==true){A=[f(this).qtip("api")]}for(y=0;y<A.length;y++){if(w=="destroy"){A[y].destroy()}else{if(A[y].status.rendered===true){if(w=="show"){A[y].show()}else{if(w=="hide"){A[y].hide()}else{if(w=="focus"){A[y].focus()}else{if(w=="disable"){A[y].disable(true)}else{if(w=="enable"){A[y].disable(false)}}}}}}}}}}}else{v=f.extend(true,{},s);v.hide.effect.length=s.hide.effect.length;v.show.effect.length=s.show.effect.length;if(v.position.container===false){v.position.container=f(document.body)}if(v.position.target===false){v.position.target=f(this)}if(v.show.when.target===false){v.show.when.target=f(this)}if(v.hide.when.target===false){v.hide.when.target=f(this)}t=f.fn.qtip.interfaces.length;for(y=0;y<t;y++){if(typeof f.fn.qtip.interfaces[y]=="undefined"){t=y;break}}x=new d(f(this),v,t);f.fn.qtip.interfaces[t]=x;if(typeof f(this).data("qtip")=="object"){if(typeof f(this).attr("qtip")==="undefined"){f(this).data("qtip").current=f(this).data("qtip").interfaces.length}f(this).data("qtip").interfaces.push(x)}else{f(this).data("qtip",{current:0,interfaces:[x]})}if(v.content.prerender===false&&v.show.when.event!==false&&v.show.ready!==true){v.show.when.target.bind(v.show.when.event+".qtip-"+t+"-create",{qtip:t},function(C){z=f.fn.qtip.interfaces[C.data.qtip];z.options.show.when.target.unbind(z.options.show.when.event+".qtip-"+C.data.qtip+"-create");z.cache.mouse={x:C.pageX,y:C.pageY};p.call(z);z.options.show.when.target.trigger(z.options.show.when.event)})}else{x.cache.mouse={x:v.show.when.target.offset().left,y:v.show.when.target.offset().top};p.call(x)}}})};function d(u,t,v){var s=this;s.id=v;s.options=t;s.status={animated:false,rendered:false,disabled:false,focused:false};s.elements={target:u.addClass(s.options.style.classes.target),tooltip:null,wrapper:null,content:null,contentWrapper:null,title:null,button:null,tip:null,bgiframe:null};s.cache={mouse:{},position:{},toggle:0};s.timers={};f.extend(s,s.options.api,{show:function(y){var x,z;if(!s.status.rendered){return f.fn.qtip.log.error.call(s,2,f.fn.qtip.constants.TOOLTIP_NOT_RENDERED,"show")}if(s.elements.tooltip.css("display")!=="none"){return s}s.elements.tooltip.stop(true,false);x=s.beforeShow.call(s,y);if(x===false){return s}function w(){if(s.options.position.type!=="static"){s.focus()}s.onShow.call(s,y);if(f.browser.msie){s.elements.tooltip.get(0).style.removeAttribute("filter")}}s.cache.toggle=1;if(s.options.position.type!=="static"){s.updatePosition(y,(s.options.show.effect.length>0))}if(typeof s.options.show.solo=="object"){z=f(s.options.show.solo)}else{if(s.options.show.solo===true){z=f("div.qtip").not(s.elements.tooltip)}}if(z){z.each(function(){if(f(this).qtip("api").status.rendered===true){f(this).qtip("api").hide()}})}if(typeof s.options.show.effect.type=="function"){s.options.show.effect.type.call(s.elements.tooltip,s.options.show.effect.length);s.elements.tooltip.queue(function(){w();f(this).dequeue()})}else{switch(s.options.show.effect.type.toLowerCase()){case"fade":s.elements.tooltip.fadeIn(s.options.show.effect.length,w);break;case"slide":s.elements.tooltip.slideDown(s.options.show.effect.length,function(){w();if(s.options.position.type!=="static"){s.updatePosition(y,true)}});break;case"grow":s.elements.tooltip.show(s.options.show.effect.length,w);break;default:s.elements.tooltip.show(null,w);break}s.elements.tooltip.addClass(s.options.style.classes.active)}return f.fn.qtip.log.error.call(s,1,f.fn.qtip.constants.EVENT_SHOWN,"show")},hide:function(y){var x;if(!s.status.rendered){return f.fn.qtip.log.error.call(s,2,f.fn.qtip.constants.TOOLTIP_NOT_RENDERED,"hide")}else{if(s.elements.tooltip.css("display")==="none"){return s}}clearTimeout(s.timers.show);s.elements.tooltip.stop(true,false);x=s.beforeHide.call(s,y);if(x===false){return s}function w(){s.onHide.call(s,y)}s.cache.toggle=0;if(typeof s.options.hide.effect.type=="function"){s.options.hide.effect.type.call(s.elements.tooltip,s.options.hide.effect.length);s.elements.tooltip.queue(function(){w();f(this).dequeue()})}else{switch(s.options.hide.effect.type.toLowerCase()){case"fade":s.elements.tooltip.fadeOut(s.options.hide.effect.length,w);break;case"slide":s.elements.tooltip.slideUp(s.options.hide.effect.length,w);break;case"grow":s.elements.tooltip.hide(s.options.hide.effect.length,w);break;default:s.elements.tooltip.hide(null,w);break}s.elements.tooltip.removeClass(s.options.style.classes.active)}return f.fn.qtip.log.error.call(s,1,f.fn.qtip.constants.EVENT_HIDDEN,"hide")},updatePosition:function(w,x){var C,G,L,J,H,E,y,I,B,D,K,A,F,z;if(!s.status.rendered){return f.fn.qtip.log.error.call(s,2,f.fn.qtip.constants.TOOLTIP_NOT_RENDERED,"updatePosition")}else{if(s.options.position.type=="static"){return f.fn.qtip.log.error.call(s,1,f.fn.qtip.constants.CANNOT_POSITION_STATIC,"updatePosition")}}G={position:{left:0,top:0},dimensions:{height:0,width:0},corner:s.options.position.corner.target};L={position:s.getPosition(),dimensions:s.getDimensions(),corner:s.options.position.corner.tooltip};if(s.options.position.target!=="mouse"){if(s.options.position.target.get(0).nodeName.toLowerCase()=="area"){J=s.options.position.target.attr("coords").split(",");for(C=0;C<J.length;C++){J[C]=parseInt(J[C])}H=s.options.position.target.parent("map").attr("name");E=f('img[usemap="#'+H+'"]:first').offset();G.position={left:Math.floor(E.left+J[0]),top:Math.floor(E.top+J[1])};switch(s.options.position.target.attr("shape").toLowerCase()){case"rect":G.dimensions={width:Math.ceil(Math.abs(J[2]-J[0])),height:Math.ceil(Math.abs(J[3]-J[1]))};break;case"circle":G.dimensions={width:J[2]+1,height:J[2]+1};break;case"poly":G.dimensions={width:J[0],height:J[1]};for(C=0;C<J.length;C++){if(C%2==0){if(J[C]>G.dimensions.width){G.dimensions.width=J[C]}if(J[C]<J[0]){G.position.left=Math.floor(E.left+J[C])}}else{if(J[C]>G.dimensions.height){G.dimensions.height=J[C]}if(J[C]<J[1]){G.position.top=Math.floor(E.top+J[C])}}}G.dimensions.width=G.dimensions.width-(G.position.left-E.left);G.dimensions.height=G.dimensions.height-(G.position.top-E.top);break;default:return f.fn.qtip.log.error.call(s,4,f.fn.qtip.constants.INVALID_AREA_SHAPE,"updatePosition");break}G.dimensions.width-=2;G.dimensions.height-=2}else{if(s.options.position.target.add(document.body).length===1){G.position={left:f(document).scrollLeft(),top:f(document).scrollTop()};G.dimensions={height:f(window).height(),width:f(window).width()}}else{if(typeof s.options.position.target.attr("qtip")!=="undefined"){G.position=s.options.position.target.qtip("api").cache.position}else{G.position=s.options.position.target.offset()}G.dimensions={height:s.options.position.target.outerHeight(),width:s.options.position.target.outerWidth()}}}y=f.extend({},G.position);if(G.corner.search(/right/i)!==-1){y.left+=G.dimensions.width}if(G.corner.search(/bottom/i)!==-1){y.top+=G.dimensions.height}if(G.corner.search(/((top|bottom)Middle)|center/)!==-1){y.left+=(G.dimensions.width/2)}if(G.corner.search(/((left|right)Middle)|center/)!==-1){y.top+=(G.dimensions.height/2)}}else{G.position=y={left:s.cache.mouse.x,top:s.cache.mouse.y};G.dimensions={height:1,width:1}}if(L.corner.search(/right/i)!==-1){y.left-=L.dimensions.width}if(L.corner.search(/bottom/i)!==-1){y.top-=L.dimensions.height}if(L.corner.search(/((top|bottom)Middle)|center/)!==-1){y.left-=(L.dimensions.width/2)}if(L.corner.search(/((left|right)Middle)|center/)!==-1){y.top-=(L.dimensions.height/2)}I=(f.browser.msie)?1:0;B=(f.browser.msie&&parseInt(f.browser.version.charAt(0))===6)?1:0;if(s.options.style.border.radius>0){if(L.corner.search(/Left/)!==-1){y.left-=s.options.style.border.radius}else{if(L.corner.search(/Right/)!==-1){y.left+=s.options.style.border.radius}}if(L.corner.search(/Top/)!==-1){y.top-=s.options.style.border.radius}else{if(L.corner.search(/Bottom/)!==-1){y.top+=s.options.style.border.radius}}}if(I){if(L.corner.search(/top/)!==-1){y.top-=I}else{if(L.corner.search(/bottom/)!==-1){y.top+=I}}if(L.corner.search(/left/)!==-1){y.left-=I}else{if(L.corner.search(/right/)!==-1){y.left+=I}}if(L.corner.search(/leftMiddle|rightMiddle/)!==-1){y.top-=1}}if(s.options.position.adjust.screen===true){y=o.call(s,y,G,L)}if(s.options.position.target==="mouse"&&s.options.position.adjust.mouse===true){if(s.options.position.adjust.screen===true&&s.elements.tip){K=s.elements.tip.attr("rel")}else{K=s.options.position.corner.tooltip}y.left+=(K.search(/right/i)!==-1)?-6:6;y.top+=(K.search(/bottom/i)!==-1)?-6:6}if(!s.elements.bgiframe&&f.browser.msie&&parseInt(f.browser.version.charAt(0))==6){f("select, object").each(function(){A=f(this).offset();A.bottom=A.top+f(this).height();A.right=A.left+f(this).width();if(y.top+L.dimensions.height>=A.top&&y.left+L.dimensions.width>=A.left){k.call(s)}})}y.left+=s.options.position.adjust.x;y.top+=s.options.position.adjust.y;F=s.getPosition();if(y.left!=F.left||y.top!=F.top){z=s.beforePositionUpdate.call(s,w);if(z===false){return s}s.cache.position=y;if(x===true){s.status.animated=true;s.elements.tooltip.animate(y,200,"swing",function(){s.status.animated=false})}else{s.elements.tooltip.css(y)}s.onPositionUpdate.call(s,w);if(typeof w!=="undefined"&&w.type&&w.type!=="mousemove"){f.fn.qtip.log.error.call(s,1,f.fn.qtip.constants.EVENT_POSITION_UPDATED,"updatePosition")}}return s},updateWidth:function(w){var x;if(!s.status.rendered){return f.fn.qtip.log.error.call(s,2,f.fn.qtip.constants.TOOLTIP_NOT_RENDERED,"updateWidth")}else{if(w&&typeof w!=="number"){return f.fn.qtip.log.error.call(s,2,"newWidth must be of type number","updateWidth")}}x=s.elements.contentWrapper.siblings().add(s.elements.tip).add(s.elements.button);if(!w){if(typeof s.options.style.width.value=="number"){w=s.options.style.width.value}else{s.elements.tooltip.css({width:"auto"});x.hide();if(f.browser.msie){s.elements.wrapper.add(s.elements.contentWrapper.children()).css({zoom:"normal"})}w=s.getDimensions().width+1;if(!s.options.style.width.value){if(w>s.options.style.width.max){w=s.options.style.width.max}if(w<s.options.style.width.min){w=s.options.style.width.min}}}}if(w%2!==0){w-=1}s.elements.tooltip.width(w);x.show();if(s.options.style.border.radius){s.elements.tooltip.find(".qtip-betweenCorners").each(function(y){f(this).width(w-(s.options.style.border.radius*2))})}if(f.browser.msie){s.elements.wrapper.add(s.elements.contentWrapper.children()).css({zoom:"1"});s.elements.wrapper.width(w);if(s.elements.bgiframe){s.elements.bgiframe.width(w).height(s.getDimensions.height)}}return f.fn.qtip.log.error.call(s,1,f.fn.qtip.constants.EVENT_WIDTH_UPDATED,"updateWidth")},updateStyle:function(w){var z,A,x,y,B;if(!s.status.rendered){return f.fn.qtip.log.error.call(s,2,f.fn.qtip.constants.TOOLTIP_NOT_RENDERED,"updateStyle")}else{if(typeof w!=="string"||!f.fn.qtip.styles[w]){return f.fn.qtip.log.error.call(s,2,f.fn.qtip.constants.STYLE_NOT_DEFINED,"updateStyle")}}s.options.style=a.call(s,f.fn.qtip.styles[w],s.options.user.style);s.elements.content.css(q(s.options.style));if(s.options.content.title.text!==false){s.elements.title.css(q(s.options.style.title,true))}s.elements.contentWrapper.css({borderColor:s.options.style.border.color});if(s.options.style.tip.corner!==false){if(f("<canvas>").get(0).getContext){z=s.elements.tooltip.find(".qtip-tip canvas:first");x=z.get(0).getContext("2d");x.clearRect(0,0,300,300);y=z.parent("div[rel]:first").attr("rel");B=b(y,s.options.style.tip.size.width,s.options.style.tip.size.height);h.call(s,z,B,s.options.style.tip.color||s.options.style.border.color)}else{if(f.browser.msie){z=s.elements.tooltip.find('.qtip-tip [nodeName="shape"]');z.attr("fillcolor",s.options.style.tip.color||s.options.style.border.color)}}}if(s.options.style.border.radius>0){s.elements.tooltip.find(".qtip-betweenCorners").css({backgroundColor:s.options.style.border.color});if(f("<canvas>").get(0).getContext){A=g(s.options.style.border.radius);s.elements.tooltip.find(".qtip-wrapper canvas").each(function(){x=f(this).get(0).getContext("2d");x.clearRect(0,0,300,300);y=f(this).parent("div[rel]:first").attr("rel");r.call(s,f(this),A[y],s.options.style.border.radius,s.options.style.border.color)})}else{if(f.browser.msie){s.elements.tooltip.find('.qtip-wrapper [nodeName="arc"]').each(function(){f(this).attr("fillcolor",s.options.style.border.color)})}}}return f.fn.qtip.log.error.call(s,1,f.fn.qtip.constants.EVENT_STYLE_UPDATED,"updateStyle")},updateContent:function(A,y){var z,x,w;if(!s.status.rendered){return f.fn.qtip.log.error.call(s,2,f.fn.qtip.constants.TOOLTIP_NOT_RENDERED,"updateContent")}else{if(!A){return f.fn.qtip.log.error.call(s,2,f.fn.qtip.constants.NO_CONTENT_PROVIDED,"updateContent")}}z=s.beforeContentUpdate.call(s,A);if(typeof z=="string"){A=z}else{if(z===false){return}}if(f.browser.msie){s.elements.contentWrapper.children().css({zoom:"normal"})}if(A.jquery&&A.length>0){A.clone(true).appendTo(s.elements.content).show()}else{s.elements.content.html(A)}x=s.elements.content.find("img[complete=false]");if(x.length>0){w=0;x.each(function(C){f('<img src="'+f(this).attr("src")+'" />').load(function(){if(++w==x.length){B()}})})}else{B()}function B(){s.updateWidth();if(y!==false){if(s.options.position.type!=="static"){s.updatePosition(s.elements.tooltip.is(":visible"),true)}if(s.options.style.tip.corner!==false){n.call(s)}}}s.onContentUpdate.call(s);return f.fn.qtip.log.error.call(s,1,f.fn.qtip.constants.EVENT_CONTENT_UPDATED,"loadContent")},loadContent:function(w,z,A){var y;if(!s.status.rendered){return f.fn.qtip.log.error.call(s,2,f.fn.qtip.constants.TOOLTIP_NOT_RENDERED,"loadContent")}y=s.beforeContentLoad.call(s);if(y===false){return s}if(A=="post"){f.post(w,z,x)}else{f.get(w,z,x)}function x(B){s.onContentLoad.call(s);f.fn.qtip.log.error.call(s,1,f.fn.qtip.constants.EVENT_CONTENT_LOADED,"loadContent");s.updateContent(B)}return s},updateTitle:function(w){if(!s.status.rendered){return f.fn.qtip.log.error.call(s,2,f.fn.qtip.constants.TOOLTIP_NOT_RENDERED,"updateTitle")}else{if(!w){return f.fn.qtip.log.error.call(s,2,f.fn.qtip.constants.NO_CONTENT_PROVIDED,"updateTitle")}}returned=s.beforeTitleUpdate.call(s);if(returned===false){return s}if(s.elements.button){s.elements.button=s.elements.button.clone(true)}s.elements.title.html(w);if(s.elements.button){s.elements.title.prepend(s.elements.button)}s.onTitleUpdate.call(s);return f.fn.qtip.log.error.call(s,1,f.fn.qtip.constants.EVENT_TITLE_UPDATED,"updateTitle")},focus:function(A){var y,x,w,z;if(!s.status.rendered){return f.fn.qtip.log.error.call(s,2,f.fn.qtip.constants.TOOLTIP_NOT_RENDERED,"focus")}else{if(s.options.position.type=="static"){return f.fn.qtip.log.error.call(s,1,f.fn.qtip.constants.CANNOT_FOCUS_STATIC,"focus")}}y=parseInt(s.elements.tooltip.css("z-index"));x=6000+f("div.qtip[qtip]").length-1;if(!s.status.focused&&y!==x){z=s.beforeFocus.call(s,A);if(z===false){return s}f("div.qtip[qtip]").not(s.elements.tooltip).each(function(){if(f(this).qtip("api").status.rendered===true){w=parseInt(f(this).css("z-index"));if(typeof w=="number"&&w>-1){f(this).css({zIndex:parseInt(f(this).css("z-index"))-1})}f(this).qtip("api").status.focused=false}});s.elements.tooltip.css({zIndex:x});s.status.focused=true;s.onFocus.call(s,A);f.fn.qtip.log.error.call(s,1,f.fn.qtip.constants.EVENT_FOCUSED,"focus")}return s},disable:function(w){if(!s.status.rendered){return f.fn.qtip.log.error.call(s,2,f.fn.qtip.constants.TOOLTIP_NOT_RENDERED,"disable")}if(w){if(!s.status.disabled){s.status.disabled=true;f.fn.qtip.log.error.call(s,1,f.fn.qtip.constants.EVENT_DISABLED,"disable")}else{f.fn.qtip.log.error.call(s,1,f.fn.qtip.constants.TOOLTIP_ALREADY_DISABLED,"disable")}}else{if(s.status.disabled){s.status.disabled=false;f.fn.qtip.log.error.call(s,1,f.fn.qtip.constants.EVENT_ENABLED,"disable")}else{f.fn.qtip.log.error.call(s,1,f.fn.qtip.constants.TOOLTIP_ALREADY_ENABLED,"disable")}}return s},destroy:function(){var w,x,y;x=s.beforeDestroy.call(s);if(x===false){return s}if(s.status.rendered){s.options.show.when.target.unbind("mousemove.qtip",s.updatePosition);s.options.show.when.target.unbind("mouseout.qtip",s.hide);s.options.show.when.target.unbind(s.options.show.when.event+".qtip");s.options.hide.when.target.unbind(s.options.hide.when.event+".qtip");s.elements.tooltip.unbind(s.options.hide.when.event+".qtip");s.elements.tooltip.unbind("mouseover.qtip",s.focus);s.elements.tooltip.remove()}else{s.options.show.when.target.unbind(s.options.show.when.event+".qtip-create")}if(typeof s.elements.target.data("qtip")=="object"){y=s.elements.target.data("qtip").interfaces;if(typeof y=="object"&&y.length>0){for(w=0;w<y.length-1;w++){if(y[w].id==s.id){y.splice(w,1)}}}}delete f.fn.qtip.interfaces[s.id];if(typeof y=="object"&&y.length>0){s.elements.target.data("qtip").current=y.length-1}else{s.elements.target.removeData("qtip")}s.onDestroy.call(s);f.fn.qtip.log.error.call(s,1,f.fn.qtip.constants.EVENT_DESTROYED,"destroy");return s.elements.target},getPosition:function(){var w,x;if(!s.status.rendered){return f.fn.qtip.log.error.call(s,2,f.fn.qtip.constants.TOOLTIP_NOT_RENDERED,"getPosition")}w=(s.elements.tooltip.css("display")!=="none")?false:true;if(w){s.elements.tooltip.css({visiblity:"hidden"}).show()}x=s.elements.tooltip.offset();if(w){s.elements.tooltip.css({visiblity:"visible"}).hide()}return x},getDimensions:function(){var w,x;if(!s.status.rendered){return f.fn.qtip.log.error.call(s,2,f.fn.qtip.constants.TOOLTIP_NOT_RENDERED,"getDimensions")}w=(!s.elements.tooltip.is(":visible"))?true:false;if(w){s.elements.tooltip.css({visiblity:"hidden"}).show()}x={height:s.elements.tooltip.outerHeight(),width:s.elements.tooltip.outerWidth()};if(w){s.elements.tooltip.css({visiblity:"visible"}).hide()}return x}})}function p(){var s,w,u,t,v,y,x;s=this;s.beforeRender.call(s);s.status.rendered=true;s.elements.tooltip='<div qtip="'+s.id+'" class="qtip '+(s.options.style.classes.tooltip||s.options.style)+'"style="display:none; -moz-border-radius:0; -webkit-border-radius:0; border-radius:0;position:'+s.options.position.type+';">  <div class="qtip-wrapper" style="position:relative; overflow:hidden; text-align:left;">    <div class="qtip-contentWrapper" style="overflow:hidden;">       <div class="qtip-content '+s.options.style.classes.content+'"></div></div></div></div>';s.elements.tooltip=f(s.elements.tooltip);s.elements.tooltip.appendTo(s.options.position.container);s.elements.tooltip.data("qtip",{current:0,interfaces:[s]});s.elements.wrapper=s.elements.tooltip.children("div:first");s.elements.contentWrapper=s.elements.wrapper.children("div:first").css({background:s.options.style.background});s.elements.content=s.elements.contentWrapper.children("div:first").css(q(s.options.style));if(f.browser.msie){s.elements.wrapper.add(s.elements.content).css({zoom:1})}if(s.options.hide.when.event=="unfocus"){s.elements.tooltip.attr("unfocus",true)}if(typeof s.options.style.width.value=="number"){s.updateWidth()}if(f("<canvas>").get(0).getContext||f.browser.msie){if(s.options.style.border.radius>0){m.call(s)}else{s.elements.contentWrapper.css({border:s.options.style.border.width+"px solid "+s.options.style.border.color})}if(s.options.style.tip.corner!==false){e.call(s)}}else{s.elements.contentWrapper.css({border:s.options.style.border.width+"px solid "+s.options.style.border.color});s.options.style.border.radius=0;s.options.style.tip.corner=false;f.fn.qtip.log.error.call(s,2,f.fn.qtip.constants.CANVAS_VML_NOT_SUPPORTED,"render")}if((typeof s.options.content.text=="string"&&s.options.content.text.length>0)||(s.options.content.text.jquery&&s.options.content.text.length>0)){u=s.options.content.text}else{if(typeof s.elements.target.attr("title")=="string"&&s.elements.target.attr("title").length>0){u=s.elements.target.attr("title").replace("\\n","<br />");s.elements.target.attr("title","")}else{if(typeof s.elements.target.attr("alt")=="string"&&s.elements.target.attr("alt").length>0){u=s.elements.target.attr("alt").replace("\\n","<br />");s.elements.target.attr("alt","")}else{u=" ";f.fn.qtip.log.error.call(s,1,f.fn.qtip.constants.NO_VALID_CONTENT,"render")}}}if(s.options.content.title.text!==false){j.call(s)}s.updateContent(u);l.call(s);if(s.options.show.ready===true){s.show()}if(s.options.content.url!==false){t=s.options.content.url;v=s.options.content.data;y=s.options.content.method||"get";s.loadContent(t,v,y)}s.onRender.call(s);f.fn.qtip.log.error.call(s,1,f.fn.qtip.constants.EVENT_RENDERED,"render")}function m(){var F,z,t,B,x,E,u,G,D,y,w,C,A,s,v;F=this;F.elements.wrapper.find(".qtip-borderBottom, .qtip-borderTop").remove();t=F.options.style.border.width;B=F.options.style.border.radius;x=F.options.style.border.color||F.options.style.tip.color;E=g(B);u={};for(z in E){u[z]='<div rel="'+z+'" style="'+((z.search(/Left/)!==-1)?"left":"right")+":0; position:absolute; height:"+B+"px; width:"+B+'px; overflow:hidden; line-height:0.1px; font-size:1px">';if(f("<canvas>").get(0).getContext){u[z]+='<canvas height="'+B+'" width="'+B+'" style="vertical-align: top"></canvas>'}else{if(f.browser.msie){G=B*2+3;u[z]+='<v:arc stroked="false" fillcolor="'+x+'" startangle="'+E[z][0]+'" endangle="'+E[z][1]+'" style="width:'+G+"px; height:"+G+"px; margin-top:"+((z.search(/bottom/)!==-1)?-2:-1)+"px; margin-left:"+((z.search(/Right/)!==-1)?E[z][2]-3.5:-1)+'px; vertical-align:top; display:inline-block; behavior:url(#default#VML)"></v:arc>'}}u[z]+="</div>"}D=F.getDimensions().width-(Math.max(t,B)*2);y='<div class="qtip-betweenCorners" style="height:'+B+"px; width:"+D+"px; overflow:hidden; background-color:"+x+'; line-height:0.1px; font-size:1px;">';w='<div class="qtip-borderTop" dir="ltr" style="height:'+B+"px; margin-left:"+B+'px; line-height:0.1px; font-size:1px; padding:0;">'+u.topLeft+u.topRight+y;F.elements.wrapper.prepend(w);C='<div class="qtip-borderBottom" dir="ltr" style="height:'+B+"px; margin-left:"+B+'px; line-height:0.1px; font-size:1px; padding:0;">'+u.bottomLeft+u.bottomRight+y;F.elements.wrapper.append(C);if(f("<canvas>").get(0).getContext){F.elements.wrapper.find("canvas").each(function(){A=E[f(this).parent("[rel]:first").attr("rel")];r.call(F,f(this),A,B,x)})}else{if(f.browser.msie){F.elements.tooltip.append('<v:image style="behavior:url(#default#VML);"></v:image>')}}s=Math.max(B,(B+(t-B)));v=Math.max(t-B,0);F.elements.contentWrapper.css({border:"0px solid "+x,borderWidth:v+"px "+s+"px"})}function r(u,w,s,t){var v=u.get(0).getContext("2d");v.fillStyle=t;v.beginPath();v.arc(w[0],w[1],s,0,Math.PI*2,false);v.fill()}function e(v){var t,s,x,u,w;t=this;if(t.elements.tip!==null){t.elements.tip.remove()}s=t.options.style.tip.color||t.options.style.border.color;if(t.options.style.tip.corner===false){return}else{if(!v){v=t.options.style.tip.corner}}x=b(v,t.options.style.tip.size.width,t.options.style.tip.size.height);t.elements.tip='<div class="'+t.options.style.classes.tip+'" dir="ltr" rel="'+v+'" style="position:absolute; height:'+t.options.style.tip.size.height+"px; width:"+t.options.style.tip.size.width+'px; margin:0 auto; line-height:0.1px; font-size:1px;">';if(f("<canvas>").get(0).getContext){t.elements.tip+='<canvas height="'+t.options.style.tip.size.height+'" width="'+t.options.style.tip.size.width+'"></canvas>'}else{if(f.browser.msie){u=t.options.style.tip.size.width+","+t.options.style.tip.size.height;w="m"+x[0][0]+","+x[0][1];w+=" l"+x[1][0]+","+x[1][1];w+=" "+x[2][0]+","+x[2][1];w+=" xe";t.elements.tip+='<v:shape fillcolor="'+s+'" stroked="false" filled="true" path="'+w+'" coordsize="'+u+'" style="width:'+t.options.style.tip.size.width+"px; height:"+t.options.style.tip.size.height+"px; line-height:0.1px; display:inline-block; behavior:url(#default#VML); vertical-align:"+((v.search(/top/)!==-1)?"bottom":"top")+'"></v:shape>';t.elements.tip+='<v:image style="behavior:url(#default#VML);"></v:image>';t.elements.contentWrapper.css("position","relative")}}t.elements.tooltip.prepend(t.elements.tip+"</div>");t.elements.tip=t.elements.tooltip.find("."+t.options.style.classes.tip).eq(0);if(f("<canvas>").get(0).getContext){h.call(t,t.elements.tip.find("canvas:first"),x,s)}if(v.search(/top/)!==-1&&f.browser.msie&&parseInt(f.browser.version.charAt(0))===6){t.elements.tip.css({marginTop:-4})}n.call(t,v)}function h(t,v,s){var u=t.get(0).getContext("2d");u.fillStyle=s;u.beginPath();u.moveTo(v[0][0],v[0][1]);u.lineTo(v[1][0],v[1][1]);u.lineTo(v[2][0],v[2][1]);u.fill()}function n(u){var t,w,s,x,v;t=this;if(t.options.style.tip.corner===false||!t.elements.tip){return}if(!u){u=t.elements.tip.attr("rel")}w=positionAdjust=(f.browser.msie)?1:0;t.elements.tip.css(u.match(/left|right|top|bottom/)[0],0);if(u.search(/top|bottom/)!==-1){if(f.browser.msie){if(parseInt(f.browser.version.charAt(0))===6){positionAdjust=(u.search(/top/)!==-1)?-3:1}else{positionAdjust=(u.search(/top/)!==-1)?1:2}}if(u.search(/Middle/)!==-1){t.elements.tip.css({left:"50%",marginLeft:-(t.options.style.tip.size.width/2)})}else{if(u.search(/Left/)!==-1){t.elements.tip.css({left:t.options.style.border.radius-w})}else{if(u.search(/Right/)!==-1){t.elements.tip.css({right:t.options.style.border.radius+w})}}}if(u.search(/top/)!==-1){t.elements.tip.css({top:-positionAdjust})}else{t.elements.tip.css({bottom:positionAdjust})}}else{if(u.search(/left|right/)!==-1){if(f.browser.msie){positionAdjust=(parseInt(f.browser.version.charAt(0))===6)?1:((u.search(/left/)!==-1)?1:2)}if(u.search(/Middle/)!==-1){t.elements.tip.css({top:"50%",marginTop:-(t.options.style.tip.size.height/2)})}else{if(u.search(/Top/)!==-1){t.elements.tip.css({top:t.options.style.border.radius-w})}else{if(u.search(/Bottom/)!==-1){t.elements.tip.css({bottom:t.options.style.border.radius+w})}}}if(u.search(/left/)!==-1){t.elements.tip.css({left:-positionAdjust})}else{t.elements.tip.css({right:positionAdjust})}}}s="padding-"+u.match(/left|right|top|bottom/)[0];x=t.options.style.tip.size[(s.search(/left|right/)!==-1)?"width":"height"];t.elements.tooltip.css("padding",0);t.elements.tooltip.css(s,x);if(f.browser.msie&&parseInt(f.browser.version.charAt(0))==6){v=parseInt(t.elements.tip.css("margin-top"))||0;v+=parseInt(t.elements.content.css("margin-top"))||0;t.elements.tip.css({marginTop:v})}}function j(){var s=this;if(s.elements.title!==null){s.elements.title.remove()}s.elements.title=f('<div class="'+s.options.style.classes.title+'">').css(q(s.options.style.title,true)).css({zoom:(f.browser.msie)?1:0}).prependTo(s.elements.contentWrapper);if(s.options.content.title.text){s.updateTitle.call(s,s.options.content.title.text)}if(s.options.content.title.button!==false&&typeof s.options.content.title.button=="string"){s.elements.button=f('<a class="'+s.options.style.classes.button+'" style="float:right; position: relative"></a>').css(q(s.options.style.button,true)).html(s.options.content.title.button).prependTo(s.elements.title).click(function(t){if(!s.status.disabled){s.hide(t)}})}}function l(){var t,v,u,s;t=this;v=t.options.show.when.target;u=t.options.hide.when.target;if(t.options.hide.fixed){u=u.add(t.elements.tooltip)}if(t.options.hide.when.event=="inactive"){s=["click","dblclick","mousedown","mouseup","mousemove","mouseout","mouseenter","mouseleave","mouseover"];function y(z){if(t.status.disabled===true){return}clearTimeout(t.timers.inactive);t.timers.inactive=setTimeout(function(){f(s).each(function(){u.unbind(this+".qtip-inactive");t.elements.content.unbind(this+".qtip-inactive")});t.hide(z)},t.options.hide.delay)}}else{if(t.options.hide.fixed===true){t.elements.tooltip.bind("mouseover.qtip",function(){if(t.status.disabled===true){return}clearTimeout(t.timers.hide)})}}function x(z){if(t.status.disabled===true){return}if(t.options.hide.when.event=="inactive"){f(s).each(function(){u.bind(this+".qtip-inactive",y);t.elements.content.bind(this+".qtip-inactive",y)});y()}clearTimeout(t.timers.show);clearTimeout(t.timers.hide);t.timers.show=setTimeout(function(){t.show(z)},t.options.show.delay)}function w(z){if(t.status.disabled===true){return}if(t.options.hide.fixed===true&&t.options.hide.when.event.search(/mouse(out|leave)/i)!==-1&&f(z.relatedTarget).parents("div.qtip[qtip]").length>0){z.stopPropagation();z.preventDefault();clearTimeout(t.timers.hide);return false}clearTimeout(t.timers.show);clearTimeout(t.timers.hide);t.elements.tooltip.stop(true,true);t.timers.hide=setTimeout(function(){t.hide(z)},t.options.hide.delay)}if((t.options.show.when.target.add(t.options.hide.when.target).length===1&&t.options.show.when.event==t.options.hide.when.event&&t.options.hide.when.event!=="inactive")||t.options.hide.when.event=="unfocus"){t.cache.toggle=0;v.bind(t.options.show.when.event+".qtip",function(z){if(t.cache.toggle==0){x(z)}else{w(z)}})}else{v.bind(t.options.show.when.event+".qtip",x);if(t.options.hide.when.event!=="inactive"){u.bind(t.options.hide.when.event+".qtip",w)}}if(t.options.position.type.search(/(fixed|absolute)/)!==-1){t.elements.tooltip.bind("mouseover.qtip",t.focus)}if(t.options.position.target==="mouse"&&t.options.position.type!=="static"){v.bind("mousemove.qtip",function(z){t.cache.mouse={x:z.pageX,y:z.pageY};if(t.status.disabled===false&&t.options.position.adjust.mouse===true&&t.options.position.type!=="static"&&t.elements.tooltip.css("display")!=="none"){t.updatePosition(z)}})}}function o(u,v,A){var z,s,x,y,t,w;z=this;if(A.corner=="center"){return v.position}s=f.extend({},u);y={x:false,y:false};t={left:(s.left<f.fn.qtip.cache.screen.scroll.left),right:(s.left+A.dimensions.width+2>=f.fn.qtip.cache.screen.width+f.fn.qtip.cache.screen.scroll.left),top:(s.top<f.fn.qtip.cache.screen.scroll.top),bottom:(s.top+A.dimensions.height+2>=f.fn.qtip.cache.screen.height+f.fn.qtip.cache.screen.scroll.top)};x={left:(t.left&&(A.corner.search(/right/i)!=-1||(A.corner.search(/right/i)==-1&&!t.right))),right:(t.right&&(A.corner.search(/left/i)!=-1||(A.corner.search(/left/i)==-1&&!t.left))),top:(t.top&&A.corner.search(/top/i)==-1),bottom:(t.bottom&&A.corner.search(/bottom/i)==-1)};if(x.left){if(z.options.position.target!=="mouse"){s.left=v.position.left+v.dimensions.width}else{s.left=z.cache.mouse.x}y.x="Left"}else{if(x.right){if(z.options.position.target!=="mouse"){s.left=v.position.left-A.dimensions.width}else{s.left=z.cache.mouse.x-A.dimensions.width}y.x="Right"}}if(x.top){if(z.options.position.target!=="mouse"){s.top=v.position.top+v.dimensions.height}else{s.top=z.cache.mouse.y}y.y="top"}else{if(x.bottom){if(z.options.position.target!=="mouse"){s.top=v.position.top-A.dimensions.height}else{s.top=z.cache.mouse.y-A.dimensions.height}y.y="bottom"}}if(s.left<0){s.left=u.left;y.x=false}if(s.top<0){s.top=u.top;y.y=false}if(z.options.style.tip.corner!==false){s.corner=new String(A.corner);if(y.x!==false){s.corner=s.corner.replace(/Left|Right|Middle/,y.x)}if(y.y!==false){s.corner=s.corner.replace(/top|bottom/,y.y)}if(s.corner!==z.elements.tip.attr("rel")){e.call(z,s.corner)}}return s}function q(u,t){var v,s;v=f.extend(true,{},u);for(s in v){if(t===true&&s.search(/(tip|classes)/i)!==-1){delete v[s]}else{if(!t&&s.search(/(width|border|tip|title|classes|user)/i)!==-1){delete v[s]}}}return v}function c(s){if(typeof s.tip!=="object"){s.tip={corner:s.tip}}if(typeof s.tip.size!=="object"){s.tip.size={width:s.tip.size,height:s.tip.size}}if(typeof s.border!=="object"){s.border={width:s.border}}if(typeof s.width!=="object"){s.width={value:s.width}}if(typeof s.width.max=="string"){s.width.max=parseInt(s.width.max.replace(/([0-9]+)/i,"$1"))}if(typeof s.width.min=="string"){s.width.min=parseInt(s.width.min.replace(/([0-9]+)/i,"$1"))}if(typeof s.tip.size.x=="number"){s.tip.size.width=s.tip.size.x;delete s.tip.size.x}if(typeof s.tip.size.y=="number"){s.tip.size.height=s.tip.size.y;delete s.tip.size.y}return s}function a(){var s,t,u,x,v,w;s=this;u=[true,{}];for(t=0;t<arguments.length;t++){u.push(arguments[t])}x=[f.extend.apply(f,u)];while(typeof x[0].name=="string"){x.unshift(c(f.fn.qtip.styles[x[0].name]))}x.unshift(true,{classes:{tooltip:"qtip-"+(arguments[0].name||"defaults")}},f.fn.qtip.styles.defaults);v=f.extend.apply(f,x);w=(f.browser.msie)?1:0;v.tip.size.width+=w;v.tip.size.height+=w;if(v.tip.size.width%2>0){v.tip.size.width+=1}if(v.tip.size.height%2>0){v.tip.size.height+=1}if(v.tip.corner===true){v.tip.corner=(s.options.position.corner.tooltip==="center")?false:s.options.position.corner.tooltip}return v}function b(v,u,t){var s={bottomRight:[[0,0],[u,t],[u,0]],bottomLeft:[[0,0],[u,0],[0,t]],topRight:[[0,t],[u,0],[u,t]],topLeft:[[0,0],[0,t],[u,t]],topMiddle:[[0,t],[u/2,0],[u,t]],bottomMiddle:[[0,0],[u,0],[u/2,t]],rightMiddle:[[0,0],[u,t/2],[0,t]],leftMiddle:[[u,0],[u,t],[0,t/2]]};s.leftTop=s.bottomRight;s.rightTop=s.bottomLeft;s.leftBottom=s.topRight;s.rightBottom=s.topLeft;return s[v]}function g(s){var t;if(f("<canvas>").get(0).getContext){t={topLeft:[s,s],topRight:[0,s],bottomLeft:[s,0],bottomRight:[0,0]}}else{if(f.browser.msie){t={topLeft:[-90,90,0],topRight:[-90,90,-s],bottomLeft:[90,270,0],bottomRight:[90,270,-s]}}}return t}function k(){var s,t,u;s=this;u=s.getDimensions();t='<iframe class="qtip-bgiframe" frameborder="0" tabindex="-1" src="javascript:false" style="display:block; position:absolute; z-index:-1; filter:alpha(opacity=\'0\'); border: 1px solid red; height:'+u.height+"px; width:"+u.width+'px" />';s.elements.bgiframe=s.elements.wrapper.prepend(t).children(".qtip-bgiframe:first")}f(document).ready(function(){f.fn.qtip.cache={screen:{scroll:{left:f(window).scrollLeft(),top:f(window).scrollTop()},width:f(window).width(),height:f(window).height()}};var s;f(window).bind("resize scroll",function(t){clearTimeout(s);s=setTimeout(function(){if(t.type==="scroll"){f.fn.qtip.cache.screen.scroll={left:f(window).scrollLeft(),top:f(window).scrollTop()}}else{f.fn.qtip.cache.screen.width=f(window).width();f.fn.qtip.cache.screen.height=f(window).height()}for(i=0;i<f.fn.qtip.interfaces.length;i++){var u=f.fn.qtip.interfaces[i];if(u.status.rendered===true&&(u.options.position.type!=="static"||u.options.position.adjust.scroll&&t.type==="scroll"||u.options.position.adjust.resize&&t.type==="resize")){u.updatePosition(t,true)}}},100)});f(document).bind("mousedown.qtip",function(t){if(f(t.target).parents("div.qtip").length===0){f(".qtip[unfocus]").each(function(){var u=f(this).qtip("api");if(f(this).is(":visible")&&!u.status.disabled&&f(t.target).add(u.elements.target).length>1){u.hide(t)}})}})});f.fn.qtip.interfaces=[];f.fn.qtip.log={error:function(){return this}};f.fn.qtip.constants={};f.fn.qtip.defaults={content:{prerender:false,text:false,url:false,data:null,title:{text:false,button:false}},position:{target:false,corner:{target:"bottomRight",tooltip:"topLeft"},adjust:{x:0,y:0,mouse:true,screen:false,scroll:true,resize:true},type:"absolute",container:false},show:{when:{target:false,event:"mouseover"},effect:{type:"fade",length:100},delay:140,solo:false,ready:false},hide:{when:{target:false,event:"mouseout"},effect:{type:"fade",length:100},delay:0,fixed:false},api:{beforeRender:function(){},onRender:function(){},beforePositionUpdate:function(){},onPositionUpdate:function(){},beforeShow:function(){},onShow:function(){},beforeHide:function(){},onHide:function(){},beforeContentUpdate:function(){},onContentUpdate:function(){},beforeContentLoad:function(){},onContentLoad:function(){},beforeTitleUpdate:function(){},onTitleUpdate:function(){},beforeDestroy:function(){},onDestroy:function(){},beforeFocus:function(){},onFocus:function(){}}};f.fn.qtip.styles={defaults:{background:"white",color:"#111",overflow:"hidden",textAlign:"left",width:{min:0,max:250},padding:"5px 9px",border:{width:1,radius:0,color:"#d3d3d3"},tip:{corner:false,color:false,size:{width:13,height:13},opacity:1},title:{background:"#e1e1e1",fontWeight:"bold",padding:"7px 12px"},button:{cursor:"pointer"},classes:{target:"",tip:"qtip-tip",title:"qtip-title",button:"qtip-button",content:"qtip-content",active:"qtip-active"}},cream:{border:{width:3,radius:0,color:"#F9E98E"},title:{background:"#F0DE7D",color:"#A27D35"},background:"#FBF7AA",color:"#A27D35",classes:{tooltip:"qtip-cream"}},light:{border:{width:3,radius:0,color:"#E2E2E2"},title:{background:"#f1f1f1",color:"#454545"},background:"white",color:"#454545",classes:{tooltip:"qtip-light"}},dark:{border:{width:3,radius:0,color:"#303030"},title:{background:"#404040",color:"#f3f3f3"},background:"#505050",color:"#f3f3f3",classes:{tooltip:"qtip-dark"}},red:{border:{width:3,radius:0,color:"#CE6F6F"},title:{background:"#f28279",color:"#9C2F2F"},background:"#F79992",color:"#9C2F2F",classes:{tooltip:"qtip-red"}},green:{border:{width:3,radius:0,color:"#A9DB66"},title:{background:"#b9db8c",color:"#58792E"},background:"#CDE6AC",color:"#58792E",classes:{tooltip:"qtip-green"}},blue:{border:{width:3,radius:0,color:"#ADD9ED"},title:{background:"#D0E9F5",color:"#5E99BD"},background:"#E5F6FE",color:"#4D9FBF",classes:{tooltip:"qtip-blue"}}}})(jQuery);;
/*! jQuery v2.1.1 | (c) 2005, 2014 jQuery Foundation, Inc. | jquery.org/license */
!function(a,b){"object"==typeof module&&"object"==typeof module.exports?module.exports=a.document?b(a,!0):function(a){if(!a.document)throw new Error("jQuery requires a window with a document");return b(a)}:b(a)}("undefined"!=typeof window?window:this,function(a,b){var c=[],d=c.slice,e=c.concat,f=c.push,g=c.indexOf,h={},i=h.toString,j=h.hasOwnProperty,k={},l=a.document,m="2.1.1",n=function(a,b){return new n.fn.init(a,b)},o=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,p=/^-ms-/,q=/-([\da-z])/gi,r=function(a,b){return b.toUpperCase()};n.fn=n.prototype={jquery:m,constructor:n,selector:"",length:0,toArray:function(){return d.call(this)},get:function(a){return null!=a?0>a?this[a+this.length]:this[a]:d.call(this)},pushStack:function(a){var b=n.merge(this.constructor(),a);return b.prevObject=this,b.context=this.context,b},each:function(a,b){return n.each(this,a,b)},map:function(a){return this.pushStack(n.map(this,function(b,c){return a.call(b,c,b)}))},slice:function(){return this.pushStack(d.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(a){var b=this.length,c=+a+(0>a?b:0);return this.pushStack(c>=0&&b>c?[this[c]]:[])},end:function(){return this.prevObject||this.constructor(null)},push:f,sort:c.sort,splice:c.splice},n.extend=n.fn.extend=function(){var a,b,c,d,e,f,g=arguments[0]||{},h=1,i=arguments.length,j=!1;for("boolean"==typeof g&&(j=g,g=arguments[h]||{},h++),"object"==typeof g||n.isFunction(g)||(g={}),h===i&&(g=this,h--);i>h;h++)if(null!=(a=arguments[h]))for(b in a)c=g[b],d=a[b],g!==d&&(j&&d&&(n.isPlainObject(d)||(e=n.isArray(d)))?(e?(e=!1,f=c&&n.isArray(c)?c:[]):f=c&&n.isPlainObject(c)?c:{},g[b]=n.extend(j,f,d)):void 0!==d&&(g[b]=d));return g},n.extend({expando:"jQuery"+(m+Math.random()).replace(/\D/g,""),isReady:!0,error:function(a){throw new Error(a)},noop:function(){},isFunction:function(a){return"function"===n.type(a)},isArray:Array.isArray,isWindow:function(a){return null!=a&&a===a.window},isNumeric:function(a){return!n.isArray(a)&&a-parseFloat(a)>=0},isPlainObject:function(a){return"object"!==n.type(a)||a.nodeType||n.isWindow(a)?!1:a.constructor&&!j.call(a.constructor.prototype,"isPrototypeOf")?!1:!0},isEmptyObject:function(a){var b;for(b in a)return!1;return!0},type:function(a){return null==a?a+"":"object"==typeof a||"function"==typeof a?h[i.call(a)]||"object":typeof a},globalEval:function(a){var b,c=eval;a=n.trim(a),a&&(1===a.indexOf("use strict")?(b=l.createElement("script"),b.text=a,l.head.appendChild(b).parentNode.removeChild(b)):c(a))},camelCase:function(a){return a.replace(p,"ms-").replace(q,r)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toLowerCase()===b.toLowerCase()},each:function(a,b,c){var d,e=0,f=a.length,g=s(a);if(c){if(g){for(;f>e;e++)if(d=b.apply(a[e],c),d===!1)break}else for(e in a)if(d=b.apply(a[e],c),d===!1)break}else if(g){for(;f>e;e++)if(d=b.call(a[e],e,a[e]),d===!1)break}else for(e in a)if(d=b.call(a[e],e,a[e]),d===!1)break;return a},trim:function(a){return null==a?"":(a+"").replace(o,"")},makeArray:function(a,b){var c=b||[];return null!=a&&(s(Object(a))?n.merge(c,"string"==typeof a?[a]:a):f.call(c,a)),c},inArray:function(a,b,c){return null==b?-1:g.call(b,a,c)},merge:function(a,b){for(var c=+b.length,d=0,e=a.length;c>d;d++)a[e++]=b[d];return a.length=e,a},grep:function(a,b,c){for(var d,e=[],f=0,g=a.length,h=!c;g>f;f++)d=!b(a[f],f),d!==h&&e.push(a[f]);return e},map:function(a,b,c){var d,f=0,g=a.length,h=s(a),i=[];if(h)for(;g>f;f++)d=b(a[f],f,c),null!=d&&i.push(d);else for(f in a)d=b(a[f],f,c),null!=d&&i.push(d);return e.apply([],i)},guid:1,proxy:function(a,b){var c,e,f;return"string"==typeof b&&(c=a[b],b=a,a=c),n.isFunction(a)?(e=d.call(arguments,2),f=function(){return a.apply(b||this,e.concat(d.call(arguments)))},f.guid=a.guid=a.guid||n.guid++,f):void 0},now:Date.now,support:k}),n.each("Boolean Number String Function Array Date RegExp Object Error".split(" "),function(a,b){h["[object "+b+"]"]=b.toLowerCase()});function s(a){var b=a.length,c=n.type(a);return"function"===c||n.isWindow(a)?!1:1===a.nodeType&&b?!0:"array"===c||0===b||"number"==typeof b&&b>0&&b-1 in a}var t=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u="sizzle"+-new Date,v=a.document,w=0,x=0,y=gb(),z=gb(),A=gb(),B=function(a,b){return a===b&&(l=!0),0},C="undefined",D=1<<31,E={}.hasOwnProperty,F=[],G=F.pop,H=F.push,I=F.push,J=F.slice,K=F.indexOf||function(a){for(var b=0,c=this.length;c>b;b++)if(this[b]===a)return b;return-1},L="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",M="[\\x20\\t\\r\\n\\f]",N="(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",O=N.replace("w","w#"),P="\\["+M+"*("+N+")(?:"+M+"*([*^$|!~]?=)"+M+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+O+"))|)"+M+"*\\]",Q=":("+N+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+P+")*)|.*)\\)|)",R=new RegExp("^"+M+"+|((?:^|[^\\\\])(?:\\\\.)*)"+M+"+$","g"),S=new RegExp("^"+M+"*,"+M+"*"),T=new RegExp("^"+M+"*([>+~]|"+M+")"+M+"*"),U=new RegExp("="+M+"*([^\\]'\"]*?)"+M+"*\\]","g"),V=new RegExp(Q),W=new RegExp("^"+O+"$"),X={ID:new RegExp("^#("+N+")"),CLASS:new RegExp("^\\.("+N+")"),TAG:new RegExp("^("+N.replace("w","w*")+")"),ATTR:new RegExp("^"+P),PSEUDO:new RegExp("^"+Q),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+M+"*(even|odd|(([+-]|)(\\d*)n|)"+M+"*(?:([+-]|)"+M+"*(\\d+)|))"+M+"*\\)|)","i"),bool:new RegExp("^(?:"+L+")$","i"),needsContext:new RegExp("^"+M+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+M+"*((?:-\\d)?\\d*)"+M+"*\\)|)(?=[^-]|$)","i")},Y=/^(?:input|select|textarea|button)$/i,Z=/^h\d$/i,$=/^[^{]+\{\s*\[native \w/,_=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,ab=/[+~]/,bb=/'|\\/g,cb=new RegExp("\\\\([\\da-f]{1,6}"+M+"?|("+M+")|.)","ig"),db=function(a,b,c){var d="0x"+b-65536;return d!==d||c?b:0>d?String.fromCharCode(d+65536):String.fromCharCode(d>>10|55296,1023&d|56320)};try{I.apply(F=J.call(v.childNodes),v.childNodes),F[v.childNodes.length].nodeType}catch(eb){I={apply:F.length?function(a,b){H.apply(a,J.call(b))}:function(a,b){var c=a.length,d=0;while(a[c++]=b[d++]);a.length=c-1}}}function fb(a,b,d,e){var f,h,j,k,l,o,r,s,w,x;if((b?b.ownerDocument||b:v)!==n&&m(b),b=b||n,d=d||[],!a||"string"!=typeof a)return d;if(1!==(k=b.nodeType)&&9!==k)return[];if(p&&!e){if(f=_.exec(a))if(j=f[1]){if(9===k){if(h=b.getElementById(j),!h||!h.parentNode)return d;if(h.id===j)return d.push(h),d}else if(b.ownerDocument&&(h=b.ownerDocument.getElementById(j))&&t(b,h)&&h.id===j)return d.push(h),d}else{if(f[2])return I.apply(d,b.getElementsByTagName(a)),d;if((j=f[3])&&c.getElementsByClassName&&b.getElementsByClassName)return I.apply(d,b.getElementsByClassName(j)),d}if(c.qsa&&(!q||!q.test(a))){if(s=r=u,w=b,x=9===k&&a,1===k&&"object"!==b.nodeName.toLowerCase()){o=g(a),(r=b.getAttribute("id"))?s=r.replace(bb,"\\$&"):b.setAttribute("id",s),s="[id='"+s+"'] ",l=o.length;while(l--)o[l]=s+qb(o[l]);w=ab.test(a)&&ob(b.parentNode)||b,x=o.join(",")}if(x)try{return I.apply(d,w.querySelectorAll(x)),d}catch(y){}finally{r||b.removeAttribute("id")}}}return i(a.replace(R,"$1"),b,d,e)}function gb(){var a=[];function b(c,e){return a.push(c+" ")>d.cacheLength&&delete b[a.shift()],b[c+" "]=e}return b}function hb(a){return a[u]=!0,a}function ib(a){var b=n.createElement("div");try{return!!a(b)}catch(c){return!1}finally{b.parentNode&&b.parentNode.removeChild(b),b=null}}function jb(a,b){var c=a.split("|"),e=a.length;while(e--)d.attrHandle[c[e]]=b}function kb(a,b){var c=b&&a,d=c&&1===a.nodeType&&1===b.nodeType&&(~b.sourceIndex||D)-(~a.sourceIndex||D);if(d)return d;if(c)while(c=c.nextSibling)if(c===b)return-1;return a?1:-1}function lb(a){return function(b){var c=b.nodeName.toLowerCase();return"input"===c&&b.type===a}}function mb(a){return function(b){var c=b.nodeName.toLowerCase();return("input"===c||"button"===c)&&b.type===a}}function nb(a){return hb(function(b){return b=+b,hb(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}function ob(a){return a&&typeof a.getElementsByTagName!==C&&a}c=fb.support={},f=fb.isXML=function(a){var b=a&&(a.ownerDocument||a).documentElement;return b?"HTML"!==b.nodeName:!1},m=fb.setDocument=function(a){var b,e=a?a.ownerDocument||a:v,g=e.defaultView;return e!==n&&9===e.nodeType&&e.documentElement?(n=e,o=e.documentElement,p=!f(e),g&&g!==g.top&&(g.addEventListener?g.addEventListener("unload",function(){m()},!1):g.attachEvent&&g.attachEvent("onunload",function(){m()})),c.attributes=ib(function(a){return a.className="i",!a.getAttribute("className")}),c.getElementsByTagName=ib(function(a){return a.appendChild(e.createComment("")),!a.getElementsByTagName("*").length}),c.getElementsByClassName=$.test(e.getElementsByClassName)&&ib(function(a){return a.innerHTML="<div class='a'></div><div class='a i'></div>",a.firstChild.className="i",2===a.getElementsByClassName("i").length}),c.getById=ib(function(a){return o.appendChild(a).id=u,!e.getElementsByName||!e.getElementsByName(u).length}),c.getById?(d.find.ID=function(a,b){if(typeof b.getElementById!==C&&p){var c=b.getElementById(a);return c&&c.parentNode?[c]:[]}},d.filter.ID=function(a){var b=a.replace(cb,db);return function(a){return a.getAttribute("id")===b}}):(delete d.find.ID,d.filter.ID=function(a){var b=a.replace(cb,db);return function(a){var c=typeof a.getAttributeNode!==C&&a.getAttributeNode("id");return c&&c.value===b}}),d.find.TAG=c.getElementsByTagName?function(a,b){return typeof b.getElementsByTagName!==C?b.getElementsByTagName(a):void 0}:function(a,b){var c,d=[],e=0,f=b.getElementsByTagName(a);if("*"===a){while(c=f[e++])1===c.nodeType&&d.push(c);return d}return f},d.find.CLASS=c.getElementsByClassName&&function(a,b){return typeof b.getElementsByClassName!==C&&p?b.getElementsByClassName(a):void 0},r=[],q=[],(c.qsa=$.test(e.querySelectorAll))&&(ib(function(a){a.innerHTML="<select msallowclip=''><option selected=''></option></select>",a.querySelectorAll("[msallowclip^='']").length&&q.push("[*^$]="+M+"*(?:''|\"\")"),a.querySelectorAll("[selected]").length||q.push("\\["+M+"*(?:value|"+L+")"),a.querySelectorAll(":checked").length||q.push(":checked")}),ib(function(a){var b=e.createElement("input");b.setAttribute("type","hidden"),a.appendChild(b).setAttribute("name","D"),a.querySelectorAll("[name=d]").length&&q.push("name"+M+"*[*^$|!~]?="),a.querySelectorAll(":enabled").length||q.push(":enabled",":disabled"),a.querySelectorAll("*,:x"),q.push(",.*:")})),(c.matchesSelector=$.test(s=o.matches||o.webkitMatchesSelector||o.mozMatchesSelector||o.oMatchesSelector||o.msMatchesSelector))&&ib(function(a){c.disconnectedMatch=s.call(a,"div"),s.call(a,"[s!='']:x"),r.push("!=",Q)}),q=q.length&&new RegExp(q.join("|")),r=r.length&&new RegExp(r.join("|")),b=$.test(o.compareDocumentPosition),t=b||$.test(o.contains)?function(a,b){var c=9===a.nodeType?a.documentElement:a,d=b&&b.parentNode;return a===d||!(!d||1!==d.nodeType||!(c.contains?c.contains(d):a.compareDocumentPosition&&16&a.compareDocumentPosition(d)))}:function(a,b){if(b)while(b=b.parentNode)if(b===a)return!0;return!1},B=b?function(a,b){if(a===b)return l=!0,0;var d=!a.compareDocumentPosition-!b.compareDocumentPosition;return d?d:(d=(a.ownerDocument||a)===(b.ownerDocument||b)?a.compareDocumentPosition(b):1,1&d||!c.sortDetached&&b.compareDocumentPosition(a)===d?a===e||a.ownerDocument===v&&t(v,a)?-1:b===e||b.ownerDocument===v&&t(v,b)?1:k?K.call(k,a)-K.call(k,b):0:4&d?-1:1)}:function(a,b){if(a===b)return l=!0,0;var c,d=0,f=a.parentNode,g=b.parentNode,h=[a],i=[b];if(!f||!g)return a===e?-1:b===e?1:f?-1:g?1:k?K.call(k,a)-K.call(k,b):0;if(f===g)return kb(a,b);c=a;while(c=c.parentNode)h.unshift(c);c=b;while(c=c.parentNode)i.unshift(c);while(h[d]===i[d])d++;return d?kb(h[d],i[d]):h[d]===v?-1:i[d]===v?1:0},e):n},fb.matches=function(a,b){return fb(a,null,null,b)},fb.matchesSelector=function(a,b){if((a.ownerDocument||a)!==n&&m(a),b=b.replace(U,"='$1']"),!(!c.matchesSelector||!p||r&&r.test(b)||q&&q.test(b)))try{var d=s.call(a,b);if(d||c.disconnectedMatch||a.document&&11!==a.document.nodeType)return d}catch(e){}return fb(b,n,null,[a]).length>0},fb.contains=function(a,b){return(a.ownerDocument||a)!==n&&m(a),t(a,b)},fb.attr=function(a,b){(a.ownerDocument||a)!==n&&m(a);var e=d.attrHandle[b.toLowerCase()],f=e&&E.call(d.attrHandle,b.toLowerCase())?e(a,b,!p):void 0;return void 0!==f?f:c.attributes||!p?a.getAttribute(b):(f=a.getAttributeNode(b))&&f.specified?f.value:null},fb.error=function(a){throw new Error("Syntax error, unrecognized expression: "+a)},fb.uniqueSort=function(a){var b,d=[],e=0,f=0;if(l=!c.detectDuplicates,k=!c.sortStable&&a.slice(0),a.sort(B),l){while(b=a[f++])b===a[f]&&(e=d.push(f));while(e--)a.splice(d[e],1)}return k=null,a},e=fb.getText=function(a){var b,c="",d=0,f=a.nodeType;if(f){if(1===f||9===f||11===f){if("string"==typeof a.textContent)return a.textContent;for(a=a.firstChild;a;a=a.nextSibling)c+=e(a)}else if(3===f||4===f)return a.nodeValue}else while(b=a[d++])c+=e(b);return c},d=fb.selectors={cacheLength:50,createPseudo:hb,match:X,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(a){return a[1]=a[1].replace(cb,db),a[3]=(a[3]||a[4]||a[5]||"").replace(cb,db),"~="===a[2]&&(a[3]=" "+a[3]+" "),a.slice(0,4)},CHILD:function(a){return a[1]=a[1].toLowerCase(),"nth"===a[1].slice(0,3)?(a[3]||fb.error(a[0]),a[4]=+(a[4]?a[5]+(a[6]||1):2*("even"===a[3]||"odd"===a[3])),a[5]=+(a[7]+a[8]||"odd"===a[3])):a[3]&&fb.error(a[0]),a},PSEUDO:function(a){var b,c=!a[6]&&a[2];return X.CHILD.test(a[0])?null:(a[3]?a[2]=a[4]||a[5]||"":c&&V.test(c)&&(b=g(c,!0))&&(b=c.indexOf(")",c.length-b)-c.length)&&(a[0]=a[0].slice(0,b),a[2]=c.slice(0,b)),a.slice(0,3))}},filter:{TAG:function(a){var b=a.replace(cb,db).toLowerCase();return"*"===a?function(){return!0}:function(a){return a.nodeName&&a.nodeName.toLowerCase()===b}},CLASS:function(a){var b=y[a+" "];return b||(b=new RegExp("(^|"+M+")"+a+"("+M+"|$)"))&&y(a,function(a){return b.test("string"==typeof a.className&&a.className||typeof a.getAttribute!==C&&a.getAttribute("class")||"")})},ATTR:function(a,b,c){return function(d){var e=fb.attr(d,a);return null==e?"!="===b:b?(e+="","="===b?e===c:"!="===b?e!==c:"^="===b?c&&0===e.indexOf(c):"*="===b?c&&e.indexOf(c)>-1:"$="===b?c&&e.slice(-c.length)===c:"~="===b?(" "+e+" ").indexOf(c)>-1:"|="===b?e===c||e.slice(0,c.length+1)===c+"-":!1):!0}},CHILD:function(a,b,c,d,e){var f="nth"!==a.slice(0,3),g="last"!==a.slice(-4),h="of-type"===b;return 1===d&&0===e?function(a){return!!a.parentNode}:function(b,c,i){var j,k,l,m,n,o,p=f!==g?"nextSibling":"previousSibling",q=b.parentNode,r=h&&b.nodeName.toLowerCase(),s=!i&&!h;if(q){if(f){while(p){l=b;while(l=l[p])if(h?l.nodeName.toLowerCase()===r:1===l.nodeType)return!1;o=p="only"===a&&!o&&"nextSibling"}return!0}if(o=[g?q.firstChild:q.lastChild],g&&s){k=q[u]||(q[u]={}),j=k[a]||[],n=j[0]===w&&j[1],m=j[0]===w&&j[2],l=n&&q.childNodes[n];while(l=++n&&l&&l[p]||(m=n=0)||o.pop())if(1===l.nodeType&&++m&&l===b){k[a]=[w,n,m];break}}else if(s&&(j=(b[u]||(b[u]={}))[a])&&j[0]===w)m=j[1];else while(l=++n&&l&&l[p]||(m=n=0)||o.pop())if((h?l.nodeName.toLowerCase()===r:1===l.nodeType)&&++m&&(s&&((l[u]||(l[u]={}))[a]=[w,m]),l===b))break;return m-=e,m===d||m%d===0&&m/d>=0}}},PSEUDO:function(a,b){var c,e=d.pseudos[a]||d.setFilters[a.toLowerCase()]||fb.error("unsupported pseudo: "+a);return e[u]?e(b):e.length>1?(c=[a,a,"",b],d.setFilters.hasOwnProperty(a.toLowerCase())?hb(function(a,c){var d,f=e(a,b),g=f.length;while(g--)d=K.call(a,f[g]),a[d]=!(c[d]=f[g])}):function(a){return e(a,0,c)}):e}},pseudos:{not:hb(function(a){var b=[],c=[],d=h(a.replace(R,"$1"));return d[u]?hb(function(a,b,c,e){var f,g=d(a,null,e,[]),h=a.length;while(h--)(f=g[h])&&(a[h]=!(b[h]=f))}):function(a,e,f){return b[0]=a,d(b,null,f,c),!c.pop()}}),has:hb(function(a){return function(b){return fb(a,b).length>0}}),contains:hb(function(a){return function(b){return(b.textContent||b.innerText||e(b)).indexOf(a)>-1}}),lang:hb(function(a){return W.test(a||"")||fb.error("unsupported lang: "+a),a=a.replace(cb,db).toLowerCase(),function(b){var c;do if(c=p?b.lang:b.getAttribute("xml:lang")||b.getAttribute("lang"))return c=c.toLowerCase(),c===a||0===c.indexOf(a+"-");while((b=b.parentNode)&&1===b.nodeType);return!1}}),target:function(b){var c=a.location&&a.location.hash;return c&&c.slice(1)===b.id},root:function(a){return a===o},focus:function(a){return a===n.activeElement&&(!n.hasFocus||n.hasFocus())&&!!(a.type||a.href||~a.tabIndex)},enabled:function(a){return a.disabled===!1},disabled:function(a){return a.disabled===!0},checked:function(a){var b=a.nodeName.toLowerCase();return"input"===b&&!!a.checked||"option"===b&&!!a.selected},selected:function(a){return a.parentNode&&a.parentNode.selectedIndex,a.selected===!0},empty:function(a){for(a=a.firstChild;a;a=a.nextSibling)if(a.nodeType<6)return!1;return!0},parent:function(a){return!d.pseudos.empty(a)},header:function(a){return Z.test(a.nodeName)},input:function(a){return Y.test(a.nodeName)},button:function(a){var b=a.nodeName.toLowerCase();return"input"===b&&"button"===a.type||"button"===b},text:function(a){var b;return"input"===a.nodeName.toLowerCase()&&"text"===a.type&&(null==(b=a.getAttribute("type"))||"text"===b.toLowerCase())},first:nb(function(){return[0]}),last:nb(function(a,b){return[b-1]}),eq:nb(function(a,b,c){return[0>c?c+b:c]}),even:nb(function(a,b){for(var c=0;b>c;c+=2)a.push(c);return a}),odd:nb(function(a,b){for(var c=1;b>c;c+=2)a.push(c);return a}),lt:nb(function(a,b,c){for(var d=0>c?c+b:c;--d>=0;)a.push(d);return a}),gt:nb(function(a,b,c){for(var d=0>c?c+b:c;++d<b;)a.push(d);return a})}},d.pseudos.nth=d.pseudos.eq;for(b in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})d.pseudos[b]=lb(b);for(b in{submit:!0,reset:!0})d.pseudos[b]=mb(b);function pb(){}pb.prototype=d.filters=d.pseudos,d.setFilters=new pb,g=fb.tokenize=function(a,b){var c,e,f,g,h,i,j,k=z[a+" "];if(k)return b?0:k.slice(0);h=a,i=[],j=d.preFilter;while(h){(!c||(e=S.exec(h)))&&(e&&(h=h.slice(e[0].length)||h),i.push(f=[])),c=!1,(e=T.exec(h))&&(c=e.shift(),f.push({value:c,type:e[0].replace(R," ")}),h=h.slice(c.length));for(g in d.filter)!(e=X[g].exec(h))||j[g]&&!(e=j[g](e))||(c=e.shift(),f.push({value:c,type:g,matches:e}),h=h.slice(c.length));if(!c)break}return b?h.length:h?fb.error(a):z(a,i).slice(0)};function qb(a){for(var b=0,c=a.length,d="";c>b;b++)d+=a[b].value;return d}function rb(a,b,c){var d=b.dir,e=c&&"parentNode"===d,f=x++;return b.first?function(b,c,f){while(b=b[d])if(1===b.nodeType||e)return a(b,c,f)}:function(b,c,g){var h,i,j=[w,f];if(g){while(b=b[d])if((1===b.nodeType||e)&&a(b,c,g))return!0}else while(b=b[d])if(1===b.nodeType||e){if(i=b[u]||(b[u]={}),(h=i[d])&&h[0]===w&&h[1]===f)return j[2]=h[2];if(i[d]=j,j[2]=a(b,c,g))return!0}}}function sb(a){return a.length>1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}function tb(a,b,c){for(var d=0,e=b.length;e>d;d++)fb(a,b[d],c);return c}function ub(a,b,c,d,e){for(var f,g=[],h=0,i=a.length,j=null!=b;i>h;h++)(f=a[h])&&(!c||c(f,d,e))&&(g.push(f),j&&b.push(h));return g}function vb(a,b,c,d,e,f){return d&&!d[u]&&(d=vb(d)),e&&!e[u]&&(e=vb(e,f)),hb(function(f,g,h,i){var j,k,l,m=[],n=[],o=g.length,p=f||tb(b||"*",h.nodeType?[h]:h,[]),q=!a||!f&&b?p:ub(p,m,a,h,i),r=c?e||(f?a:o||d)?[]:g:q;if(c&&c(q,r,h,i),d){j=ub(r,n),d(j,[],h,i),k=j.length;while(k--)(l=j[k])&&(r[n[k]]=!(q[n[k]]=l))}if(f){if(e||a){if(e){j=[],k=r.length;while(k--)(l=r[k])&&j.push(q[k]=l);e(null,r=[],j,i)}k=r.length;while(k--)(l=r[k])&&(j=e?K.call(f,l):m[k])>-1&&(f[j]=!(g[j]=l))}}else r=ub(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):I.apply(g,r)})}function wb(a){for(var b,c,e,f=a.length,g=d.relative[a[0].type],h=g||d.relative[" "],i=g?1:0,k=rb(function(a){return a===b},h,!0),l=rb(function(a){return K.call(b,a)>-1},h,!0),m=[function(a,c,d){return!g&&(d||c!==j)||((b=c).nodeType?k(a,c,d):l(a,c,d))}];f>i;i++)if(c=d.relative[a[i].type])m=[rb(sb(m),c)];else{if(c=d.filter[a[i].type].apply(null,a[i].matches),c[u]){for(e=++i;f>e;e++)if(d.relative[a[e].type])break;return vb(i>1&&sb(m),i>1&&qb(a.slice(0,i-1).concat({value:" "===a[i-2].type?"*":""})).replace(R,"$1"),c,e>i&&wb(a.slice(i,e)),f>e&&wb(a=a.slice(e)),f>e&&qb(a))}m.push(c)}return sb(m)}function xb(a,b){var c=b.length>0,e=a.length>0,f=function(f,g,h,i,k){var l,m,o,p=0,q="0",r=f&&[],s=[],t=j,u=f||e&&d.find.TAG("*",k),v=w+=null==t?1:Math.random()||.1,x=u.length;for(k&&(j=g!==n&&g);q!==x&&null!=(l=u[q]);q++){if(e&&l){m=0;while(o=a[m++])if(o(l,g,h)){i.push(l);break}k&&(w=v)}c&&((l=!o&&l)&&p--,f&&r.push(l))}if(p+=q,c&&q!==p){m=0;while(o=b[m++])o(r,s,g,h);if(f){if(p>0)while(q--)r[q]||s[q]||(s[q]=G.call(i));s=ub(s)}I.apply(i,s),k&&!f&&s.length>0&&p+b.length>1&&fb.uniqueSort(i)}return k&&(w=v,j=t),r};return c?hb(f):f}return h=fb.compile=function(a,b){var c,d=[],e=[],f=A[a+" "];if(!f){b||(b=g(a)),c=b.length;while(c--)f=wb(b[c]),f[u]?d.push(f):e.push(f);f=A(a,xb(e,d)),f.selector=a}return f},i=fb.select=function(a,b,e,f){var i,j,k,l,m,n="function"==typeof a&&a,o=!f&&g(a=n.selector||a);if(e=e||[],1===o.length){if(j=o[0]=o[0].slice(0),j.length>2&&"ID"===(k=j[0]).type&&c.getById&&9===b.nodeType&&p&&d.relative[j[1].type]){if(b=(d.find.ID(k.matches[0].replace(cb,db),b)||[])[0],!b)return e;n&&(b=b.parentNode),a=a.slice(j.shift().value.length)}i=X.needsContext.test(a)?0:j.length;while(i--){if(k=j[i],d.relative[l=k.type])break;if((m=d.find[l])&&(f=m(k.matches[0].replace(cb,db),ab.test(j[0].type)&&ob(b.parentNode)||b))){if(j.splice(i,1),a=f.length&&qb(j),!a)return I.apply(e,f),e;break}}}return(n||h(a,o))(f,b,!p,e,ab.test(a)&&ob(b.parentNode)||b),e},c.sortStable=u.split("").sort(B).join("")===u,c.detectDuplicates=!!l,m(),c.sortDetached=ib(function(a){return 1&a.compareDocumentPosition(n.createElement("div"))}),ib(function(a){return a.innerHTML="<a href='#'></a>","#"===a.firstChild.getAttribute("href")})||jb("type|href|height|width",function(a,b,c){return c?void 0:a.getAttribute(b,"type"===b.toLowerCase()?1:2)}),c.attributes&&ib(function(a){return a.innerHTML="<input/>",a.firstChild.setAttribute("value",""),""===a.firstChild.getAttribute("value")})||jb("value",function(a,b,c){return c||"input"!==a.nodeName.toLowerCase()?void 0:a.defaultValue}),ib(function(a){return null==a.getAttribute("disabled")})||jb(L,function(a,b,c){var d;return c?void 0:a[b]===!0?b.toLowerCase():(d=a.getAttributeNode(b))&&d.specified?d.value:null}),fb}(a);n.find=t,n.expr=t.selectors,n.expr[":"]=n.expr.pseudos,n.unique=t.uniqueSort,n.text=t.getText,n.isXMLDoc=t.isXML,n.contains=t.contains;var u=n.expr.match.needsContext,v=/^<(\w+)\s*\/?>(?:<\/\1>|)$/,w=/^.[^:#\[\.,]*$/;function x(a,b,c){if(n.isFunction(b))return n.grep(a,function(a,d){return!!b.call(a,d,a)!==c});if(b.nodeType)return n.grep(a,function(a){return a===b!==c});if("string"==typeof b){if(w.test(b))return n.filter(b,a,c);b=n.filter(b,a)}return n.grep(a,function(a){return g.call(b,a)>=0!==c})}n.filter=function(a,b,c){var d=b[0];return c&&(a=":not("+a+")"),1===b.length&&1===d.nodeType?n.find.matchesSelector(d,a)?[d]:[]:n.find.matches(a,n.grep(b,function(a){return 1===a.nodeType}))},n.fn.extend({find:function(a){var b,c=this.length,d=[],e=this;if("string"!=typeof a)return this.pushStack(n(a).filter(function(){for(b=0;c>b;b++)if(n.contains(e[b],this))return!0}));for(b=0;c>b;b++)n.find(a,e[b],d);return d=this.pushStack(c>1?n.unique(d):d),d.selector=this.selector?this.selector+" "+a:a,d},filter:function(a){return this.pushStack(x(this,a||[],!1))},not:function(a){return this.pushStack(x(this,a||[],!0))},is:function(a){return!!x(this,"string"==typeof a&&u.test(a)?n(a):a||[],!1).length}});var y,z=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,A=n.fn.init=function(a,b){var c,d;if(!a)return this;if("string"==typeof a){if(c="<"===a[0]&&">"===a[a.length-1]&&a.length>=3?[null,a,null]:z.exec(a),!c||!c[1]&&b)return!b||b.jquery?(b||y).find(a):this.constructor(b).find(a);if(c[1]){if(b=b instanceof n?b[0]:b,n.merge(this,n.parseHTML(c[1],b&&b.nodeType?b.ownerDocument||b:l,!0)),v.test(c[1])&&n.isPlainObject(b))for(c in b)n.isFunction(this[c])?this[c](b[c]):this.attr(c,b[c]);return this}return d=l.getElementById(c[2]),d&&d.parentNode&&(this.length=1,this[0]=d),this.context=l,this.selector=a,this}return a.nodeType?(this.context=this[0]=a,this.length=1,this):n.isFunction(a)?"undefined"!=typeof y.ready?y.ready(a):a(n):(void 0!==a.selector&&(this.selector=a.selector,this.context=a.context),n.makeArray(a,this))};A.prototype=n.fn,y=n(l);var B=/^(?:parents|prev(?:Until|All))/,C={children:!0,contents:!0,next:!0,prev:!0};n.extend({dir:function(a,b,c){var d=[],e=void 0!==c;while((a=a[b])&&9!==a.nodeType)if(1===a.nodeType){if(e&&n(a).is(c))break;d.push(a)}return d},sibling:function(a,b){for(var c=[];a;a=a.nextSibling)1===a.nodeType&&a!==b&&c.push(a);return c}}),n.fn.extend({has:function(a){var b=n(a,this),c=b.length;return this.filter(function(){for(var a=0;c>a;a++)if(n.contains(this,b[a]))return!0})},closest:function(a,b){for(var c,d=0,e=this.length,f=[],g=u.test(a)||"string"!=typeof a?n(a,b||this.context):0;e>d;d++)for(c=this[d];c&&c!==b;c=c.parentNode)if(c.nodeType<11&&(g?g.index(c)>-1:1===c.nodeType&&n.find.matchesSelector(c,a))){f.push(c);break}return this.pushStack(f.length>1?n.unique(f):f)},index:function(a){return a?"string"==typeof a?g.call(n(a),this[0]):g.call(this,a.jquery?a[0]:a):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(a,b){return this.pushStack(n.unique(n.merge(this.get(),n(a,b))))},addBack:function(a){return this.add(null==a?this.prevObject:this.prevObject.filter(a))}});function D(a,b){while((a=a[b])&&1!==a.nodeType);return a}n.each({parent:function(a){var b=a.parentNode;return b&&11!==b.nodeType?b:null},parents:function(a){return n.dir(a,"parentNode")},parentsUntil:function(a,b,c){return n.dir(a,"parentNode",c)},next:function(a){return D(a,"nextSibling")},prev:function(a){return D(a,"previousSibling")},nextAll:function(a){return n.dir(a,"nextSibling")},prevAll:function(a){return n.dir(a,"previousSibling")},nextUntil:function(a,b,c){return n.dir(a,"nextSibling",c)},prevUntil:function(a,b,c){return n.dir(a,"previousSibling",c)},siblings:function(a){return n.sibling((a.parentNode||{}).firstChild,a)},children:function(a){return n.sibling(a.firstChild)},contents:function(a){return a.contentDocument||n.merge([],a.childNodes)}},function(a,b){n.fn[a]=function(c,d){var e=n.map(this,b,c);return"Until"!==a.slice(-5)&&(d=c),d&&"string"==typeof d&&(e=n.filter(d,e)),this.length>1&&(C[a]||n.unique(e),B.test(a)&&e.reverse()),this.pushStack(e)}});var E=/\S+/g,F={};function G(a){var b=F[a]={};return n.each(a.match(E)||[],function(a,c){b[c]=!0}),b}n.Callbacks=function(a){a="string"==typeof a?F[a]||G(a):n.extend({},a);var b,c,d,e,f,g,h=[],i=!a.once&&[],j=function(l){for(b=a.memory&&l,c=!0,g=e||0,e=0,f=h.length,d=!0;h&&f>g;g++)if(h[g].apply(l[0],l[1])===!1&&a.stopOnFalse){b=!1;break}d=!1,h&&(i?i.length&&j(i.shift()):b?h=[]:k.disable())},k={add:function(){if(h){var c=h.length;!function g(b){n.each(b,function(b,c){var d=n.type(c);"function"===d?a.unique&&k.has(c)||h.push(c):c&&c.length&&"string"!==d&&g(c)})}(arguments),d?f=h.length:b&&(e=c,j(b))}return this},remove:function(){return h&&n.each(arguments,function(a,b){var c;while((c=n.inArray(b,h,c))>-1)h.splice(c,1),d&&(f>=c&&f--,g>=c&&g--)}),this},has:function(a){return a?n.inArray(a,h)>-1:!(!h||!h.length)},empty:function(){return h=[],f=0,this},disable:function(){return h=i=b=void 0,this},disabled:function(){return!h},lock:function(){return i=void 0,b||k.disable(),this},locked:function(){return!i},fireWith:function(a,b){return!h||c&&!i||(b=b||[],b=[a,b.slice?b.slice():b],d?i.push(b):j(b)),this},fire:function(){return k.fireWith(this,arguments),this},fired:function(){return!!c}};return k},n.extend({Deferred:function(a){var b=[["resolve","done",n.Callbacks("once memory"),"resolved"],["reject","fail",n.Callbacks("once memory"),"rejected"],["notify","progress",n.Callbacks("memory")]],c="pending",d={state:function(){return c},always:function(){return e.done(arguments).fail(arguments),this},then:function(){var a=arguments;return n.Deferred(function(c){n.each(b,function(b,f){var g=n.isFunction(a[b])&&a[b];e[f[1]](function(){var a=g&&g.apply(this,arguments);a&&n.isFunction(a.promise)?a.promise().done(c.resolve).fail(c.reject).progress(c.notify):c[f[0]+"With"](this===d?c.promise():this,g?[a]:arguments)})}),a=null}).promise()},promise:function(a){return null!=a?n.extend(a,d):d}},e={};return d.pipe=d.then,n.each(b,function(a,f){var g=f[2],h=f[3];d[f[1]]=g.add,h&&g.add(function(){c=h},b[1^a][2].disable,b[2][2].lock),e[f[0]]=function(){return e[f[0]+"With"](this===e?d:this,arguments),this},e[f[0]+"With"]=g.fireWith}),d.promise(e),a&&a.call(e,e),e},when:function(a){var b=0,c=d.call(arguments),e=c.length,f=1!==e||a&&n.isFunction(a.promise)?e:0,g=1===f?a:n.Deferred(),h=function(a,b,c){return function(e){b[a]=this,c[a]=arguments.length>1?d.call(arguments):e,c===i?g.notifyWith(b,c):--f||g.resolveWith(b,c)}},i,j,k;if(e>1)for(i=new Array(e),j=new Array(e),k=new Array(e);e>b;b++)c[b]&&n.isFunction(c[b].promise)?c[b].promise().done(h(b,k,c)).fail(g.reject).progress(h(b,j,i)):--f;return f||g.resolveWith(k,c),g.promise()}});var H;n.fn.ready=function(a){return n.ready.promise().done(a),this},n.extend({isReady:!1,readyWait:1,holdReady:function(a){a?n.readyWait++:n.ready(!0)},ready:function(a){(a===!0?--n.readyWait:n.isReady)||(n.isReady=!0,a!==!0&&--n.readyWait>0||(H.resolveWith(l,[n]),n.fn.triggerHandler&&(n(l).triggerHandler("ready"),n(l).off("ready"))))}});function I(){l.removeEventListener("DOMContentLoaded",I,!1),a.removeEventListener("load",I,!1),n.ready()}n.ready.promise=function(b){return H||(H=n.Deferred(),"complete"===l.readyState?setTimeout(n.ready):(l.addEventListener("DOMContentLoaded",I,!1),a.addEventListener("load",I,!1))),H.promise(b)},n.ready.promise();var J=n.access=function(a,b,c,d,e,f,g){var h=0,i=a.length,j=null==c;if("object"===n.type(c)){e=!0;for(h in c)n.access(a,b,h,c[h],!0,f,g)}else if(void 0!==d&&(e=!0,n.isFunction(d)||(g=!0),j&&(g?(b.call(a,d),b=null):(j=b,b=function(a,b,c){return j.call(n(a),c)})),b))for(;i>h;h++)b(a[h],c,g?d:d.call(a[h],h,b(a[h],c)));return e?a:j?b.call(a):i?b(a[0],c):f};n.acceptData=function(a){return 1===a.nodeType||9===a.nodeType||!+a.nodeType};function K(){Object.defineProperty(this.cache={},0,{get:function(){return{}}}),this.expando=n.expando+Math.random()}K.uid=1,K.accepts=n.acceptData,K.prototype={key:function(a){if(!K.accepts(a))return 0;var b={},c=a[this.expando];if(!c){c=K.uid++;try{b[this.expando]={value:c},Object.defineProperties(a,b)}catch(d){b[this.expando]=c,n.extend(a,b)}}return this.cache[c]||(this.cache[c]={}),c},set:function(a,b,c){var d,e=this.key(a),f=this.cache[e];if("string"==typeof b)f[b]=c;else if(n.isEmptyObject(f))n.extend(this.cache[e],b);else for(d in b)f[d]=b[d];return f},get:function(a,b){var c=this.cache[this.key(a)];return void 0===b?c:c[b]},access:function(a,b,c){var d;return void 0===b||b&&"string"==typeof b&&void 0===c?(d=this.get(a,b),void 0!==d?d:this.get(a,n.camelCase(b))):(this.set(a,b,c),void 0!==c?c:b)},remove:function(a,b){var c,d,e,f=this.key(a),g=this.cache[f];if(void 0===b)this.cache[f]={};else{n.isArray(b)?d=b.concat(b.map(n.camelCase)):(e=n.camelCase(b),b in g?d=[b,e]:(d=e,d=d in g?[d]:d.match(E)||[])),c=d.length;while(c--)delete g[d[c]]}},hasData:function(a){return!n.isEmptyObject(this.cache[a[this.expando]]||{})},discard:function(a){a[this.expando]&&delete this.cache[a[this.expando]]}};var L=new K,M=new K,N=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,O=/([A-Z])/g;function P(a,b,c){var d;if(void 0===c&&1===a.nodeType)if(d="data-"+b.replace(O,"-$1").toLowerCase(),c=a.getAttribute(d),"string"==typeof c){try{c="true"===c?!0:"false"===c?!1:"null"===c?null:+c+""===c?+c:N.test(c)?n.parseJSON(c):c}catch(e){}M.set(a,b,c)}else c=void 0;return c}n.extend({hasData:function(a){return M.hasData(a)||L.hasData(a)},data:function(a,b,c){return M.access(a,b,c)},removeData:function(a,b){M.remove(a,b)
},_data:function(a,b,c){return L.access(a,b,c)},_removeData:function(a,b){L.remove(a,b)}}),n.fn.extend({data:function(a,b){var c,d,e,f=this[0],g=f&&f.attributes;if(void 0===a){if(this.length&&(e=M.get(f),1===f.nodeType&&!L.get(f,"hasDataAttrs"))){c=g.length;while(c--)g[c]&&(d=g[c].name,0===d.indexOf("data-")&&(d=n.camelCase(d.slice(5)),P(f,d,e[d])));L.set(f,"hasDataAttrs",!0)}return e}return"object"==typeof a?this.each(function(){M.set(this,a)}):J(this,function(b){var c,d=n.camelCase(a);if(f&&void 0===b){if(c=M.get(f,a),void 0!==c)return c;if(c=M.get(f,d),void 0!==c)return c;if(c=P(f,d,void 0),void 0!==c)return c}else this.each(function(){var c=M.get(this,d);M.set(this,d,b),-1!==a.indexOf("-")&&void 0!==c&&M.set(this,a,b)})},null,b,arguments.length>1,null,!0)},removeData:function(a){return this.each(function(){M.remove(this,a)})}}),n.extend({queue:function(a,b,c){var d;return a?(b=(b||"fx")+"queue",d=L.get(a,b),c&&(!d||n.isArray(c)?d=L.access(a,b,n.makeArray(c)):d.push(c)),d||[]):void 0},dequeue:function(a,b){b=b||"fx";var c=n.queue(a,b),d=c.length,e=c.shift(),f=n._queueHooks(a,b),g=function(){n.dequeue(a,b)};"inprogress"===e&&(e=c.shift(),d--),e&&("fx"===b&&c.unshift("inprogress"),delete f.stop,e.call(a,g,f)),!d&&f&&f.empty.fire()},_queueHooks:function(a,b){var c=b+"queueHooks";return L.get(a,c)||L.access(a,c,{empty:n.Callbacks("once memory").add(function(){L.remove(a,[b+"queue",c])})})}}),n.fn.extend({queue:function(a,b){var c=2;return"string"!=typeof a&&(b=a,a="fx",c--),arguments.length<c?n.queue(this[0],a):void 0===b?this:this.each(function(){var c=n.queue(this,a,b);n._queueHooks(this,a),"fx"===a&&"inprogress"!==c[0]&&n.dequeue(this,a)})},dequeue:function(a){return this.each(function(){n.dequeue(this,a)})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,b){var c,d=1,e=n.Deferred(),f=this,g=this.length,h=function(){--d||e.resolveWith(f,[f])};"string"!=typeof a&&(b=a,a=void 0),a=a||"fx";while(g--)c=L.get(f[g],a+"queueHooks"),c&&c.empty&&(d++,c.empty.add(h));return h(),e.promise(b)}});var Q=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,R=["Top","Right","Bottom","Left"],S=function(a,b){return a=b||a,"none"===n.css(a,"display")||!n.contains(a.ownerDocument,a)},T=/^(?:checkbox|radio)$/i;!function(){var a=l.createDocumentFragment(),b=a.appendChild(l.createElement("div")),c=l.createElement("input");c.setAttribute("type","radio"),c.setAttribute("checked","checked"),c.setAttribute("name","t"),b.appendChild(c),k.checkClone=b.cloneNode(!0).cloneNode(!0).lastChild.checked,b.innerHTML="<textarea>x</textarea>",k.noCloneChecked=!!b.cloneNode(!0).lastChild.defaultValue}();var U="undefined";k.focusinBubbles="onfocusin"in a;var V=/^key/,W=/^(?:mouse|pointer|contextmenu)|click/,X=/^(?:focusinfocus|focusoutblur)$/,Y=/^([^.]*)(?:\.(.+)|)$/;function Z(){return!0}function $(){return!1}function _(){try{return l.activeElement}catch(a){}}n.event={global:{},add:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,o,p,q,r=L.get(a);if(r){c.handler&&(f=c,c=f.handler,e=f.selector),c.guid||(c.guid=n.guid++),(i=r.events)||(i=r.events={}),(g=r.handle)||(g=r.handle=function(b){return typeof n!==U&&n.event.triggered!==b.type?n.event.dispatch.apply(a,arguments):void 0}),b=(b||"").match(E)||[""],j=b.length;while(j--)h=Y.exec(b[j])||[],o=q=h[1],p=(h[2]||"").split(".").sort(),o&&(l=n.event.special[o]||{},o=(e?l.delegateType:l.bindType)||o,l=n.event.special[o]||{},k=n.extend({type:o,origType:q,data:d,handler:c,guid:c.guid,selector:e,needsContext:e&&n.expr.match.needsContext.test(e),namespace:p.join(".")},f),(m=i[o])||(m=i[o]=[],m.delegateCount=0,l.setup&&l.setup.call(a,d,p,g)!==!1||a.addEventListener&&a.addEventListener(o,g,!1)),l.add&&(l.add.call(a,k),k.handler.guid||(k.handler.guid=c.guid)),e?m.splice(m.delegateCount++,0,k):m.push(k),n.event.global[o]=!0)}},remove:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,o,p,q,r=L.hasData(a)&&L.get(a);if(r&&(i=r.events)){b=(b||"").match(E)||[""],j=b.length;while(j--)if(h=Y.exec(b[j])||[],o=q=h[1],p=(h[2]||"").split(".").sort(),o){l=n.event.special[o]||{},o=(d?l.delegateType:l.bindType)||o,m=i[o]||[],h=h[2]&&new RegExp("(^|\\.)"+p.join("\\.(?:.*\\.|)")+"(\\.|$)"),g=f=m.length;while(f--)k=m[f],!e&&q!==k.origType||c&&c.guid!==k.guid||h&&!h.test(k.namespace)||d&&d!==k.selector&&("**"!==d||!k.selector)||(m.splice(f,1),k.selector&&m.delegateCount--,l.remove&&l.remove.call(a,k));g&&!m.length&&(l.teardown&&l.teardown.call(a,p,r.handle)!==!1||n.removeEvent(a,o,r.handle),delete i[o])}else for(o in i)n.event.remove(a,o+b[j],c,d,!0);n.isEmptyObject(i)&&(delete r.handle,L.remove(a,"events"))}},trigger:function(b,c,d,e){var f,g,h,i,k,m,o,p=[d||l],q=j.call(b,"type")?b.type:b,r=j.call(b,"namespace")?b.namespace.split("."):[];if(g=h=d=d||l,3!==d.nodeType&&8!==d.nodeType&&!X.test(q+n.event.triggered)&&(q.indexOf(".")>=0&&(r=q.split("."),q=r.shift(),r.sort()),k=q.indexOf(":")<0&&"on"+q,b=b[n.expando]?b:new n.Event(q,"object"==typeof b&&b),b.isTrigger=e?2:3,b.namespace=r.join("."),b.namespace_re=b.namespace?new RegExp("(^|\\.)"+r.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,b.result=void 0,b.target||(b.target=d),c=null==c?[b]:n.makeArray(c,[b]),o=n.event.special[q]||{},e||!o.trigger||o.trigger.apply(d,c)!==!1)){if(!e&&!o.noBubble&&!n.isWindow(d)){for(i=o.delegateType||q,X.test(i+q)||(g=g.parentNode);g;g=g.parentNode)p.push(g),h=g;h===(d.ownerDocument||l)&&p.push(h.defaultView||h.parentWindow||a)}f=0;while((g=p[f++])&&!b.isPropagationStopped())b.type=f>1?i:o.bindType||q,m=(L.get(g,"events")||{})[b.type]&&L.get(g,"handle"),m&&m.apply(g,c),m=k&&g[k],m&&m.apply&&n.acceptData(g)&&(b.result=m.apply(g,c),b.result===!1&&b.preventDefault());return b.type=q,e||b.isDefaultPrevented()||o._default&&o._default.apply(p.pop(),c)!==!1||!n.acceptData(d)||k&&n.isFunction(d[q])&&!n.isWindow(d)&&(h=d[k],h&&(d[k]=null),n.event.triggered=q,d[q](),n.event.triggered=void 0,h&&(d[k]=h)),b.result}},dispatch:function(a){a=n.event.fix(a);var b,c,e,f,g,h=[],i=d.call(arguments),j=(L.get(this,"events")||{})[a.type]||[],k=n.event.special[a.type]||{};if(i[0]=a,a.delegateTarget=this,!k.preDispatch||k.preDispatch.call(this,a)!==!1){h=n.event.handlers.call(this,a,j),b=0;while((f=h[b++])&&!a.isPropagationStopped()){a.currentTarget=f.elem,c=0;while((g=f.handlers[c++])&&!a.isImmediatePropagationStopped())(!a.namespace_re||a.namespace_re.test(g.namespace))&&(a.handleObj=g,a.data=g.data,e=((n.event.special[g.origType]||{}).handle||g.handler).apply(f.elem,i),void 0!==e&&(a.result=e)===!1&&(a.preventDefault(),a.stopPropagation()))}return k.postDispatch&&k.postDispatch.call(this,a),a.result}},handlers:function(a,b){var c,d,e,f,g=[],h=b.delegateCount,i=a.target;if(h&&i.nodeType&&(!a.button||"click"!==a.type))for(;i!==this;i=i.parentNode||this)if(i.disabled!==!0||"click"!==a.type){for(d=[],c=0;h>c;c++)f=b[c],e=f.selector+" ",void 0===d[e]&&(d[e]=f.needsContext?n(e,this).index(i)>=0:n.find(e,this,null,[i]).length),d[e]&&d.push(f);d.length&&g.push({elem:i,handlers:d})}return h<b.length&&g.push({elem:this,handlers:b.slice(h)}),g},props:"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(a,b){return null==a.which&&(a.which=null!=b.charCode?b.charCode:b.keyCode),a}},mouseHooks:{props:"button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(a,b){var c,d,e,f=b.button;return null==a.pageX&&null!=b.clientX&&(c=a.target.ownerDocument||l,d=c.documentElement,e=c.body,a.pageX=b.clientX+(d&&d.scrollLeft||e&&e.scrollLeft||0)-(d&&d.clientLeft||e&&e.clientLeft||0),a.pageY=b.clientY+(d&&d.scrollTop||e&&e.scrollTop||0)-(d&&d.clientTop||e&&e.clientTop||0)),a.which||void 0===f||(a.which=1&f?1:2&f?3:4&f?2:0),a}},fix:function(a){if(a[n.expando])return a;var b,c,d,e=a.type,f=a,g=this.fixHooks[e];g||(this.fixHooks[e]=g=W.test(e)?this.mouseHooks:V.test(e)?this.keyHooks:{}),d=g.props?this.props.concat(g.props):this.props,a=new n.Event(f),b=d.length;while(b--)c=d[b],a[c]=f[c];return a.target||(a.target=l),3===a.target.nodeType&&(a.target=a.target.parentNode),g.filter?g.filter(a,f):a},special:{load:{noBubble:!0},focus:{trigger:function(){return this!==_()&&this.focus?(this.focus(),!1):void 0},delegateType:"focusin"},blur:{trigger:function(){return this===_()&&this.blur?(this.blur(),!1):void 0},delegateType:"focusout"},click:{trigger:function(){return"checkbox"===this.type&&this.click&&n.nodeName(this,"input")?(this.click(),!1):void 0},_default:function(a){return n.nodeName(a.target,"a")}},beforeunload:{postDispatch:function(a){void 0!==a.result&&a.originalEvent&&(a.originalEvent.returnValue=a.result)}}},simulate:function(a,b,c,d){var e=n.extend(new n.Event,c,{type:a,isSimulated:!0,originalEvent:{}});d?n.event.trigger(e,null,b):n.event.dispatch.call(b,e),e.isDefaultPrevented()&&c.preventDefault()}},n.removeEvent=function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c,!1)},n.Event=function(a,b){return this instanceof n.Event?(a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||void 0===a.defaultPrevented&&a.returnValue===!1?Z:$):this.type=a,b&&n.extend(this,b),this.timeStamp=a&&a.timeStamp||n.now(),void(this[n.expando]=!0)):new n.Event(a,b)},n.Event.prototype={isDefaultPrevented:$,isPropagationStopped:$,isImmediatePropagationStopped:$,preventDefault:function(){var a=this.originalEvent;this.isDefaultPrevented=Z,a&&a.preventDefault&&a.preventDefault()},stopPropagation:function(){var a=this.originalEvent;this.isPropagationStopped=Z,a&&a.stopPropagation&&a.stopPropagation()},stopImmediatePropagation:function(){var a=this.originalEvent;this.isImmediatePropagationStopped=Z,a&&a.stopImmediatePropagation&&a.stopImmediatePropagation(),this.stopPropagation()}},n.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(a,b){n.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c,d=this,e=a.relatedTarget,f=a.handleObj;return(!e||e!==d&&!n.contains(d,e))&&(a.type=f.origType,c=f.handler.apply(this,arguments),a.type=b),c}}}),k.focusinBubbles||n.each({focus:"focusin",blur:"focusout"},function(a,b){var c=function(a){n.event.simulate(b,a.target,n.event.fix(a),!0)};n.event.special[b]={setup:function(){var d=this.ownerDocument||this,e=L.access(d,b);e||d.addEventListener(a,c,!0),L.access(d,b,(e||0)+1)},teardown:function(){var d=this.ownerDocument||this,e=L.access(d,b)-1;e?L.access(d,b,e):(d.removeEventListener(a,c,!0),L.remove(d,b))}}}),n.fn.extend({on:function(a,b,c,d,e){var f,g;if("object"==typeof a){"string"!=typeof b&&(c=c||b,b=void 0);for(g in a)this.on(g,b,c,a[g],e);return this}if(null==c&&null==d?(d=b,c=b=void 0):null==d&&("string"==typeof b?(d=c,c=void 0):(d=c,c=b,b=void 0)),d===!1)d=$;else if(!d)return this;return 1===e&&(f=d,d=function(a){return n().off(a),f.apply(this,arguments)},d.guid=f.guid||(f.guid=n.guid++)),this.each(function(){n.event.add(this,a,d,c,b)})},one:function(a,b,c,d){return this.on(a,b,c,d,1)},off:function(a,b,c){var d,e;if(a&&a.preventDefault&&a.handleObj)return d=a.handleObj,n(a.delegateTarget).off(d.namespace?d.origType+"."+d.namespace:d.origType,d.selector,d.handler),this;if("object"==typeof a){for(e in a)this.off(e,b,a[e]);return this}return(b===!1||"function"==typeof b)&&(c=b,b=void 0),c===!1&&(c=$),this.each(function(){n.event.remove(this,a,c,b)})},trigger:function(a,b){return this.each(function(){n.event.trigger(a,b,this)})},triggerHandler:function(a,b){var c=this[0];return c?n.event.trigger(a,b,c,!0):void 0}});var ab=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,bb=/<([\w:]+)/,cb=/<|&#?\w+;/,db=/<(?:script|style|link)/i,eb=/checked\s*(?:[^=]|=\s*.checked.)/i,fb=/^$|\/(?:java|ecma)script/i,gb=/^true\/(.*)/,hb=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,ib={option:[1,"<select multiple='multiple'>","</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};ib.optgroup=ib.option,ib.tbody=ib.tfoot=ib.colgroup=ib.caption=ib.thead,ib.th=ib.td;function jb(a,b){return n.nodeName(a,"table")&&n.nodeName(11!==b.nodeType?b:b.firstChild,"tr")?a.getElementsByTagName("tbody")[0]||a.appendChild(a.ownerDocument.createElement("tbody")):a}function kb(a){return a.type=(null!==a.getAttribute("type"))+"/"+a.type,a}function lb(a){var b=gb.exec(a.type);return b?a.type=b[1]:a.removeAttribute("type"),a}function mb(a,b){for(var c=0,d=a.length;d>c;c++)L.set(a[c],"globalEval",!b||L.get(b[c],"globalEval"))}function nb(a,b){var c,d,e,f,g,h,i,j;if(1===b.nodeType){if(L.hasData(a)&&(f=L.access(a),g=L.set(b,f),j=f.events)){delete g.handle,g.events={};for(e in j)for(c=0,d=j[e].length;d>c;c++)n.event.add(b,e,j[e][c])}M.hasData(a)&&(h=M.access(a),i=n.extend({},h),M.set(b,i))}}function ob(a,b){var c=a.getElementsByTagName?a.getElementsByTagName(b||"*"):a.querySelectorAll?a.querySelectorAll(b||"*"):[];return void 0===b||b&&n.nodeName(a,b)?n.merge([a],c):c}function pb(a,b){var c=b.nodeName.toLowerCase();"input"===c&&T.test(a.type)?b.checked=a.checked:("input"===c||"textarea"===c)&&(b.defaultValue=a.defaultValue)}n.extend({clone:function(a,b,c){var d,e,f,g,h=a.cloneNode(!0),i=n.contains(a.ownerDocument,a);if(!(k.noCloneChecked||1!==a.nodeType&&11!==a.nodeType||n.isXMLDoc(a)))for(g=ob(h),f=ob(a),d=0,e=f.length;e>d;d++)pb(f[d],g[d]);if(b)if(c)for(f=f||ob(a),g=g||ob(h),d=0,e=f.length;e>d;d++)nb(f[d],g[d]);else nb(a,h);return g=ob(h,"script"),g.length>0&&mb(g,!i&&ob(a,"script")),h},buildFragment:function(a,b,c,d){for(var e,f,g,h,i,j,k=b.createDocumentFragment(),l=[],m=0,o=a.length;o>m;m++)if(e=a[m],e||0===e)if("object"===n.type(e))n.merge(l,e.nodeType?[e]:e);else if(cb.test(e)){f=f||k.appendChild(b.createElement("div")),g=(bb.exec(e)||["",""])[1].toLowerCase(),h=ib[g]||ib._default,f.innerHTML=h[1]+e.replace(ab,"<$1></$2>")+h[2],j=h[0];while(j--)f=f.lastChild;n.merge(l,f.childNodes),f=k.firstChild,f.textContent=""}else l.push(b.createTextNode(e));k.textContent="",m=0;while(e=l[m++])if((!d||-1===n.inArray(e,d))&&(i=n.contains(e.ownerDocument,e),f=ob(k.appendChild(e),"script"),i&&mb(f),c)){j=0;while(e=f[j++])fb.test(e.type||"")&&c.push(e)}return k},cleanData:function(a){for(var b,c,d,e,f=n.event.special,g=0;void 0!==(c=a[g]);g++){if(n.acceptData(c)&&(e=c[L.expando],e&&(b=L.cache[e]))){if(b.events)for(d in b.events)f[d]?n.event.remove(c,d):n.removeEvent(c,d,b.handle);L.cache[e]&&delete L.cache[e]}delete M.cache[c[M.expando]]}}}),n.fn.extend({text:function(a){return J(this,function(a){return void 0===a?n.text(this):this.empty().each(function(){(1===this.nodeType||11===this.nodeType||9===this.nodeType)&&(this.textContent=a)})},null,a,arguments.length)},append:function(){return this.domManip(arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=jb(this,a);b.appendChild(a)}})},prepend:function(){return this.domManip(arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=jb(this,a);b.insertBefore(a,b.firstChild)}})},before:function(){return this.domManip(arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this)})},after:function(){return this.domManip(arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this.nextSibling)})},remove:function(a,b){for(var c,d=a?n.filter(a,this):this,e=0;null!=(c=d[e]);e++)b||1!==c.nodeType||n.cleanData(ob(c)),c.parentNode&&(b&&n.contains(c.ownerDocument,c)&&mb(ob(c,"script")),c.parentNode.removeChild(c));return this},empty:function(){for(var a,b=0;null!=(a=this[b]);b++)1===a.nodeType&&(n.cleanData(ob(a,!1)),a.textContent="");return this},clone:function(a,b){return a=null==a?!1:a,b=null==b?a:b,this.map(function(){return n.clone(this,a,b)})},html:function(a){return J(this,function(a){var b=this[0]||{},c=0,d=this.length;if(void 0===a&&1===b.nodeType)return b.innerHTML;if("string"==typeof a&&!db.test(a)&&!ib[(bb.exec(a)||["",""])[1].toLowerCase()]){a=a.replace(ab,"<$1></$2>");try{for(;d>c;c++)b=this[c]||{},1===b.nodeType&&(n.cleanData(ob(b,!1)),b.innerHTML=a);b=0}catch(e){}}b&&this.empty().append(a)},null,a,arguments.length)},replaceWith:function(){var a=arguments[0];return this.domManip(arguments,function(b){a=this.parentNode,n.cleanData(ob(this)),a&&a.replaceChild(b,this)}),a&&(a.length||a.nodeType)?this:this.remove()},detach:function(a){return this.remove(a,!0)},domManip:function(a,b){a=e.apply([],a);var c,d,f,g,h,i,j=0,l=this.length,m=this,o=l-1,p=a[0],q=n.isFunction(p);if(q||l>1&&"string"==typeof p&&!k.checkClone&&eb.test(p))return this.each(function(c){var d=m.eq(c);q&&(a[0]=p.call(this,c,d.html())),d.domManip(a,b)});if(l&&(c=n.buildFragment(a,this[0].ownerDocument,!1,this),d=c.firstChild,1===c.childNodes.length&&(c=d),d)){for(f=n.map(ob(c,"script"),kb),g=f.length;l>j;j++)h=c,j!==o&&(h=n.clone(h,!0,!0),g&&n.merge(f,ob(h,"script"))),b.call(this[j],h,j);if(g)for(i=f[f.length-1].ownerDocument,n.map(f,lb),j=0;g>j;j++)h=f[j],fb.test(h.type||"")&&!L.access(h,"globalEval")&&n.contains(i,h)&&(h.src?n._evalUrl&&n._evalUrl(h.src):n.globalEval(h.textContent.replace(hb,"")))}return this}}),n.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(a,b){n.fn[a]=function(a){for(var c,d=[],e=n(a),g=e.length-1,h=0;g>=h;h++)c=h===g?this:this.clone(!0),n(e[h])[b](c),f.apply(d,c.get());return this.pushStack(d)}});var qb,rb={};function sb(b,c){var d,e=n(c.createElement(b)).appendTo(c.body),f=a.getDefaultComputedStyle&&(d=a.getDefaultComputedStyle(e[0]))?d.display:n.css(e[0],"display");return e.detach(),f}function tb(a){var b=l,c=rb[a];return c||(c=sb(a,b),"none"!==c&&c||(qb=(qb||n("<iframe frameborder='0' width='0' height='0'/>")).appendTo(b.documentElement),b=qb[0].contentDocument,b.write(),b.close(),c=sb(a,b),qb.detach()),rb[a]=c),c}var ub=/^margin/,vb=new RegExp("^("+Q+")(?!px)[a-z%]+$","i"),wb=function(a){return a.ownerDocument.defaultView.getComputedStyle(a,null)};function xb(a,b,c){var d,e,f,g,h=a.style;return c=c||wb(a),c&&(g=c.getPropertyValue(b)||c[b]),c&&(""!==g||n.contains(a.ownerDocument,a)||(g=n.style(a,b)),vb.test(g)&&ub.test(b)&&(d=h.width,e=h.minWidth,f=h.maxWidth,h.minWidth=h.maxWidth=h.width=g,g=c.width,h.width=d,h.minWidth=e,h.maxWidth=f)),void 0!==g?g+"":g}function yb(a,b){return{get:function(){return a()?void delete this.get:(this.get=b).apply(this,arguments)}}}!function(){var b,c,d=l.documentElement,e=l.createElement("div"),f=l.createElement("div");if(f.style){f.style.backgroundClip="content-box",f.cloneNode(!0).style.backgroundClip="",k.clearCloneStyle="content-box"===f.style.backgroundClip,e.style.cssText="border:0;width:0;height:0;top:0;left:-9999px;margin-top:1px;position:absolute",e.appendChild(f);function g(){f.style.cssText="-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;display:block;margin-top:1%;top:1%;border:1px;padding:1px;width:4px;position:absolute",f.innerHTML="",d.appendChild(e);var g=a.getComputedStyle(f,null);b="1%"!==g.top,c="4px"===g.width,d.removeChild(e)}a.getComputedStyle&&n.extend(k,{pixelPosition:function(){return g(),b},boxSizingReliable:function(){return null==c&&g(),c},reliableMarginRight:function(){var b,c=f.appendChild(l.createElement("div"));return c.style.cssText=f.style.cssText="-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0",c.style.marginRight=c.style.width="0",f.style.width="1px",d.appendChild(e),b=!parseFloat(a.getComputedStyle(c,null).marginRight),d.removeChild(e),b}})}}(),n.swap=function(a,b,c,d){var e,f,g={};for(f in b)g[f]=a.style[f],a.style[f]=b[f];e=c.apply(a,d||[]);for(f in b)a.style[f]=g[f];return e};var zb=/^(none|table(?!-c[ea]).+)/,Ab=new RegExp("^("+Q+")(.*)$","i"),Bb=new RegExp("^([+-])=("+Q+")","i"),Cb={position:"absolute",visibility:"hidden",display:"block"},Db={letterSpacing:"0",fontWeight:"400"},Eb=["Webkit","O","Moz","ms"];function Fb(a,b){if(b in a)return b;var c=b[0].toUpperCase()+b.slice(1),d=b,e=Eb.length;while(e--)if(b=Eb[e]+c,b in a)return b;return d}function Gb(a,b,c){var d=Ab.exec(b);return d?Math.max(0,d[1]-(c||0))+(d[2]||"px"):b}function Hb(a,b,c,d,e){for(var f=c===(d?"border":"content")?4:"width"===b?1:0,g=0;4>f;f+=2)"margin"===c&&(g+=n.css(a,c+R[f],!0,e)),d?("content"===c&&(g-=n.css(a,"padding"+R[f],!0,e)),"margin"!==c&&(g-=n.css(a,"border"+R[f]+"Width",!0,e))):(g+=n.css(a,"padding"+R[f],!0,e),"padding"!==c&&(g+=n.css(a,"border"+R[f]+"Width",!0,e)));return g}function Ib(a,b,c){var d=!0,e="width"===b?a.offsetWidth:a.offsetHeight,f=wb(a),g="border-box"===n.css(a,"boxSizing",!1,f);if(0>=e||null==e){if(e=xb(a,b,f),(0>e||null==e)&&(e=a.style[b]),vb.test(e))return e;d=g&&(k.boxSizingReliable()||e===a.style[b]),e=parseFloat(e)||0}return e+Hb(a,b,c||(g?"border":"content"),d,f)+"px"}function Jb(a,b){for(var c,d,e,f=[],g=0,h=a.length;h>g;g++)d=a[g],d.style&&(f[g]=L.get(d,"olddisplay"),c=d.style.display,b?(f[g]||"none"!==c||(d.style.display=""),""===d.style.display&&S(d)&&(f[g]=L.access(d,"olddisplay",tb(d.nodeName)))):(e=S(d),"none"===c&&e||L.set(d,"olddisplay",e?c:n.css(d,"display"))));for(g=0;h>g;g++)d=a[g],d.style&&(b&&"none"!==d.style.display&&""!==d.style.display||(d.style.display=b?f[g]||"":"none"));return a}n.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=xb(a,"opacity");return""===c?"1":c}}}},cssNumber:{columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":"cssFloat"},style:function(a,b,c,d){if(a&&3!==a.nodeType&&8!==a.nodeType&&a.style){var e,f,g,h=n.camelCase(b),i=a.style;return b=n.cssProps[h]||(n.cssProps[h]=Fb(i,h)),g=n.cssHooks[b]||n.cssHooks[h],void 0===c?g&&"get"in g&&void 0!==(e=g.get(a,!1,d))?e:i[b]:(f=typeof c,"string"===f&&(e=Bb.exec(c))&&(c=(e[1]+1)*e[2]+parseFloat(n.css(a,b)),f="number"),null!=c&&c===c&&("number"!==f||n.cssNumber[h]||(c+="px"),k.clearCloneStyle||""!==c||0!==b.indexOf("background")||(i[b]="inherit"),g&&"set"in g&&void 0===(c=g.set(a,c,d))||(i[b]=c)),void 0)}},css:function(a,b,c,d){var e,f,g,h=n.camelCase(b);return b=n.cssProps[h]||(n.cssProps[h]=Fb(a.style,h)),g=n.cssHooks[b]||n.cssHooks[h],g&&"get"in g&&(e=g.get(a,!0,c)),void 0===e&&(e=xb(a,b,d)),"normal"===e&&b in Db&&(e=Db[b]),""===c||c?(f=parseFloat(e),c===!0||n.isNumeric(f)?f||0:e):e}}),n.each(["height","width"],function(a,b){n.cssHooks[b]={get:function(a,c,d){return c?zb.test(n.css(a,"display"))&&0===a.offsetWidth?n.swap(a,Cb,function(){return Ib(a,b,d)}):Ib(a,b,d):void 0},set:function(a,c,d){var e=d&&wb(a);return Gb(a,c,d?Hb(a,b,d,"border-box"===n.css(a,"boxSizing",!1,e),e):0)}}}),n.cssHooks.marginRight=yb(k.reliableMarginRight,function(a,b){return b?n.swap(a,{display:"inline-block"},xb,[a,"marginRight"]):void 0}),n.each({margin:"",padding:"",border:"Width"},function(a,b){n.cssHooks[a+b]={expand:function(c){for(var d=0,e={},f="string"==typeof c?c.split(" "):[c];4>d;d++)e[a+R[d]+b]=f[d]||f[d-2]||f[0];return e}},ub.test(a)||(n.cssHooks[a+b].set=Gb)}),n.fn.extend({css:function(a,b){return J(this,function(a,b,c){var d,e,f={},g=0;if(n.isArray(b)){for(d=wb(a),e=b.length;e>g;g++)f[b[g]]=n.css(a,b[g],!1,d);return f}return void 0!==c?n.style(a,b,c):n.css(a,b)},a,b,arguments.length>1)},show:function(){return Jb(this,!0)},hide:function(){return Jb(this)},toggle:function(a){return"boolean"==typeof a?a?this.show():this.hide():this.each(function(){S(this)?n(this).show():n(this).hide()})}});function Kb(a,b,c,d,e){return new Kb.prototype.init(a,b,c,d,e)}n.Tween=Kb,Kb.prototype={constructor:Kb,init:function(a,b,c,d,e,f){this.elem=a,this.prop=c,this.easing=e||"swing",this.options=b,this.start=this.now=this.cur(),this.end=d,this.unit=f||(n.cssNumber[c]?"":"px")},cur:function(){var a=Kb.propHooks[this.prop];return a&&a.get?a.get(this):Kb.propHooks._default.get(this)},run:function(a){var b,c=Kb.propHooks[this.prop];return this.pos=b=this.options.duration?n.easing[this.easing](a,this.options.duration*a,0,1,this.options.duration):a,this.now=(this.end-this.start)*b+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),c&&c.set?c.set(this):Kb.propHooks._default.set(this),this}},Kb.prototype.init.prototype=Kb.prototype,Kb.propHooks={_default:{get:function(a){var b;return null==a.elem[a.prop]||a.elem.style&&null!=a.elem.style[a.prop]?(b=n.css(a.elem,a.prop,""),b&&"auto"!==b?b:0):a.elem[a.prop]},set:function(a){n.fx.step[a.prop]?n.fx.step[a.prop](a):a.elem.style&&(null!=a.elem.style[n.cssProps[a.prop]]||n.cssHooks[a.prop])?n.style(a.elem,a.prop,a.now+a.unit):a.elem[a.prop]=a.now}}},Kb.propHooks.scrollTop=Kb.propHooks.scrollLeft={set:function(a){a.elem.nodeType&&a.elem.parentNode&&(a.elem[a.prop]=a.now)}},n.easing={linear:function(a){return a},swing:function(a){return.5-Math.cos(a*Math.PI)/2}},n.fx=Kb.prototype.init,n.fx.step={};var Lb,Mb,Nb=/^(?:toggle|show|hide)$/,Ob=new RegExp("^(?:([+-])=|)("+Q+")([a-z%]*)$","i"),Pb=/queueHooks$/,Qb=[Vb],Rb={"*":[function(a,b){var c=this.createTween(a,b),d=c.cur(),e=Ob.exec(b),f=e&&e[3]||(n.cssNumber[a]?"":"px"),g=(n.cssNumber[a]||"px"!==f&&+d)&&Ob.exec(n.css(c.elem,a)),h=1,i=20;if(g&&g[3]!==f){f=f||g[3],e=e||[],g=+d||1;do h=h||".5",g/=h,n.style(c.elem,a,g+f);while(h!==(h=c.cur()/d)&&1!==h&&--i)}return e&&(g=c.start=+g||+d||0,c.unit=f,c.end=e[1]?g+(e[1]+1)*e[2]:+e[2]),c}]};function Sb(){return setTimeout(function(){Lb=void 0}),Lb=n.now()}function Tb(a,b){var c,d=0,e={height:a};for(b=b?1:0;4>d;d+=2-b)c=R[d],e["margin"+c]=e["padding"+c]=a;return b&&(e.opacity=e.width=a),e}function Ub(a,b,c){for(var d,e=(Rb[b]||[]).concat(Rb["*"]),f=0,g=e.length;g>f;f++)if(d=e[f].call(c,b,a))return d}function Vb(a,b,c){var d,e,f,g,h,i,j,k,l=this,m={},o=a.style,p=a.nodeType&&S(a),q=L.get(a,"fxshow");c.queue||(h=n._queueHooks(a,"fx"),null==h.unqueued&&(h.unqueued=0,i=h.empty.fire,h.empty.fire=function(){h.unqueued||i()}),h.unqueued++,l.always(function(){l.always(function(){h.unqueued--,n.queue(a,"fx").length||h.empty.fire()})})),1===a.nodeType&&("height"in b||"width"in b)&&(c.overflow=[o.overflow,o.overflowX,o.overflowY],j=n.css(a,"display"),k="none"===j?L.get(a,"olddisplay")||tb(a.nodeName):j,"inline"===k&&"none"===n.css(a,"float")&&(o.display="inline-block")),c.overflow&&(o.overflow="hidden",l.always(function(){o.overflow=c.overflow[0],o.overflowX=c.overflow[1],o.overflowY=c.overflow[2]}));for(d in b)if(e=b[d],Nb.exec(e)){if(delete b[d],f=f||"toggle"===e,e===(p?"hide":"show")){if("show"!==e||!q||void 0===q[d])continue;p=!0}m[d]=q&&q[d]||n.style(a,d)}else j=void 0;if(n.isEmptyObject(m))"inline"===("none"===j?tb(a.nodeName):j)&&(o.display=j);else{q?"hidden"in q&&(p=q.hidden):q=L.access(a,"fxshow",{}),f&&(q.hidden=!p),p?n(a).show():l.done(function(){n(a).hide()}),l.done(function(){var b;L.remove(a,"fxshow");for(b in m)n.style(a,b,m[b])});for(d in m)g=Ub(p?q[d]:0,d,l),d in q||(q[d]=g.start,p&&(g.end=g.start,g.start="width"===d||"height"===d?1:0))}}function Wb(a,b){var c,d,e,f,g;for(c in a)if(d=n.camelCase(c),e=b[d],f=a[c],n.isArray(f)&&(e=f[1],f=a[c]=f[0]),c!==d&&(a[d]=f,delete a[c]),g=n.cssHooks[d],g&&"expand"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}function Xb(a,b,c){var d,e,f=0,g=Qb.length,h=n.Deferred().always(function(){delete i.elem}),i=function(){if(e)return!1;for(var b=Lb||Sb(),c=Math.max(0,j.startTime+j.duration-b),d=c/j.duration||0,f=1-d,g=0,i=j.tweens.length;i>g;g++)j.tweens[g].run(f);return h.notifyWith(a,[j,f,c]),1>f&&i?c:(h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:n.extend({},b),opts:n.extend(!0,{specialEasing:{}},c),originalProperties:b,originalOptions:c,startTime:Lb||Sb(),duration:c.duration,tweens:[],createTween:function(b,c){var d=n.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(d),d},stop:function(b){var c=0,d=b?j.tweens.length:0;if(e)return this;for(e=!0;d>c;c++)j.tweens[c].run(1);return b?h.resolveWith(a,[j,b]):h.rejectWith(a,[j,b]),this}}),k=j.props;for(Wb(k,j.opts.specialEasing);g>f;f++)if(d=Qb[f].call(j,a,k,j.opts))return d;return n.map(k,Ub,j),n.isFunction(j.opts.start)&&j.opts.start.call(a,j),n.fx.timer(n.extend(i,{elem:a,anim:j,queue:j.opts.queue})),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always)}n.Animation=n.extend(Xb,{tweener:function(a,b){n.isFunction(a)?(b=a,a=["*"]):a=a.split(" ");for(var c,d=0,e=a.length;e>d;d++)c=a[d],Rb[c]=Rb[c]||[],Rb[c].unshift(b)},prefilter:function(a,b){b?Qb.unshift(a):Qb.push(a)}}),n.speed=function(a,b,c){var d=a&&"object"==typeof a?n.extend({},a):{complete:c||!c&&b||n.isFunction(a)&&a,duration:a,easing:c&&b||b&&!n.isFunction(b)&&b};return d.duration=n.fx.off?0:"number"==typeof d.duration?d.duration:d.duration in n.fx.speeds?n.fx.speeds[d.duration]:n.fx.speeds._default,(null==d.queue||d.queue===!0)&&(d.queue="fx"),d.old=d.complete,d.complete=function(){n.isFunction(d.old)&&d.old.call(this),d.queue&&n.dequeue(this,d.queue)},d},n.fn.extend({fadeTo:function(a,b,c,d){return this.filter(S).css("opacity",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){var e=n.isEmptyObject(a),f=n.speed(b,c,d),g=function(){var b=Xb(this,n.extend({},a),f);(e||L.get(this,"finish"))&&b.stop(!0)};return g.finish=g,e||f.queue===!1?this.each(g):this.queue(f.queue,g)},stop:function(a,b,c){var d=function(a){var b=a.stop;delete a.stop,b(c)};return"string"!=typeof a&&(c=b,b=a,a=void 0),b&&a!==!1&&this.queue(a||"fx",[]),this.each(function(){var b=!0,e=null!=a&&a+"queueHooks",f=n.timers,g=L.get(this);if(e)g[e]&&g[e].stop&&d(g[e]);else for(e in g)g[e]&&g[e].stop&&Pb.test(e)&&d(g[e]);for(e=f.length;e--;)f[e].elem!==this||null!=a&&f[e].queue!==a||(f[e].anim.stop(c),b=!1,f.splice(e,1));(b||!c)&&n.dequeue(this,a)})},finish:function(a){return a!==!1&&(a=a||"fx"),this.each(function(){var b,c=L.get(this),d=c[a+"queue"],e=c[a+"queueHooks"],f=n.timers,g=d?d.length:0;for(c.finish=!0,n.queue(this,a,[]),e&&e.stop&&e.stop.call(this,!0),b=f.length;b--;)f[b].elem===this&&f[b].queue===a&&(f[b].anim.stop(!0),f.splice(b,1));for(b=0;g>b;b++)d[b]&&d[b].finish&&d[b].finish.call(this);delete c.finish})}}),n.each(["toggle","show","hide"],function(a,b){var c=n.fn[b];n.fn[b]=function(a,d,e){return null==a||"boolean"==typeof a?c.apply(this,arguments):this.animate(Tb(b,!0),a,d,e)}}),n.each({slideDown:Tb("show"),slideUp:Tb("hide"),slideToggle:Tb("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(a,b){n.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),n.timers=[],n.fx.tick=function(){var a,b=0,c=n.timers;for(Lb=n.now();b<c.length;b++)a=c[b],a()||c[b]!==a||c.splice(b--,1);c.length||n.fx.stop(),Lb=void 0},n.fx.timer=function(a){n.timers.push(a),a()?n.fx.start():n.timers.pop()},n.fx.interval=13,n.fx.start=function(){Mb||(Mb=setInterval(n.fx.tick,n.fx.interval))},n.fx.stop=function(){clearInterval(Mb),Mb=null},n.fx.speeds={slow:600,fast:200,_default:400},n.fn.delay=function(a,b){return a=n.fx?n.fx.speeds[a]||a:a,b=b||"fx",this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},function(){var a=l.createElement("input"),b=l.createElement("select"),c=b.appendChild(l.createElement("option"));a.type="checkbox",k.checkOn=""!==a.value,k.optSelected=c.selected,b.disabled=!0,k.optDisabled=!c.disabled,a=l.createElement("input"),a.value="t",a.type="radio",k.radioValue="t"===a.value}();var Yb,Zb,$b=n.expr.attrHandle;n.fn.extend({attr:function(a,b){return J(this,n.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){n.removeAttr(this,a)})}}),n.extend({attr:function(a,b,c){var d,e,f=a.nodeType;if(a&&3!==f&&8!==f&&2!==f)return typeof a.getAttribute===U?n.prop(a,b,c):(1===f&&n.isXMLDoc(a)||(b=b.toLowerCase(),d=n.attrHooks[b]||(n.expr.match.bool.test(b)?Zb:Yb)),void 0===c?d&&"get"in d&&null!==(e=d.get(a,b))?e:(e=n.find.attr(a,b),null==e?void 0:e):null!==c?d&&"set"in d&&void 0!==(e=d.set(a,c,b))?e:(a.setAttribute(b,c+""),c):void n.removeAttr(a,b))
},removeAttr:function(a,b){var c,d,e=0,f=b&&b.match(E);if(f&&1===a.nodeType)while(c=f[e++])d=n.propFix[c]||c,n.expr.match.bool.test(c)&&(a[d]=!1),a.removeAttribute(c)},attrHooks:{type:{set:function(a,b){if(!k.radioValue&&"radio"===b&&n.nodeName(a,"input")){var c=a.value;return a.setAttribute("type",b),c&&(a.value=c),b}}}}}),Zb={set:function(a,b,c){return b===!1?n.removeAttr(a,c):a.setAttribute(c,c),c}},n.each(n.expr.match.bool.source.match(/\w+/g),function(a,b){var c=$b[b]||n.find.attr;$b[b]=function(a,b,d){var e,f;return d||(f=$b[b],$b[b]=e,e=null!=c(a,b,d)?b.toLowerCase():null,$b[b]=f),e}});var _b=/^(?:input|select|textarea|button)$/i;n.fn.extend({prop:function(a,b){return J(this,n.prop,a,b,arguments.length>1)},removeProp:function(a){return this.each(function(){delete this[n.propFix[a]||a]})}}),n.extend({propFix:{"for":"htmlFor","class":"className"},prop:function(a,b,c){var d,e,f,g=a.nodeType;if(a&&3!==g&&8!==g&&2!==g)return f=1!==g||!n.isXMLDoc(a),f&&(b=n.propFix[b]||b,e=n.propHooks[b]),void 0!==c?e&&"set"in e&&void 0!==(d=e.set(a,c,b))?d:a[b]=c:e&&"get"in e&&null!==(d=e.get(a,b))?d:a[b]},propHooks:{tabIndex:{get:function(a){return a.hasAttribute("tabindex")||_b.test(a.nodeName)||a.href?a.tabIndex:-1}}}}),k.optSelected||(n.propHooks.selected={get:function(a){var b=a.parentNode;return b&&b.parentNode&&b.parentNode.selectedIndex,null}}),n.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){n.propFix[this.toLowerCase()]=this});var ac=/[\t\r\n\f]/g;n.fn.extend({addClass:function(a){var b,c,d,e,f,g,h="string"==typeof a&&a,i=0,j=this.length;if(n.isFunction(a))return this.each(function(b){n(this).addClass(a.call(this,b,this.className))});if(h)for(b=(a||"").match(E)||[];j>i;i++)if(c=this[i],d=1===c.nodeType&&(c.className?(" "+c.className+" ").replace(ac," "):" ")){f=0;while(e=b[f++])d.indexOf(" "+e+" ")<0&&(d+=e+" ");g=n.trim(d),c.className!==g&&(c.className=g)}return this},removeClass:function(a){var b,c,d,e,f,g,h=0===arguments.length||"string"==typeof a&&a,i=0,j=this.length;if(n.isFunction(a))return this.each(function(b){n(this).removeClass(a.call(this,b,this.className))});if(h)for(b=(a||"").match(E)||[];j>i;i++)if(c=this[i],d=1===c.nodeType&&(c.className?(" "+c.className+" ").replace(ac," "):"")){f=0;while(e=b[f++])while(d.indexOf(" "+e+" ")>=0)d=d.replace(" "+e+" "," ");g=a?n.trim(d):"",c.className!==g&&(c.className=g)}return this},toggleClass:function(a,b){var c=typeof a;return"boolean"==typeof b&&"string"===c?b?this.addClass(a):this.removeClass(a):this.each(n.isFunction(a)?function(c){n(this).toggleClass(a.call(this,c,this.className,b),b)}:function(){if("string"===c){var b,d=0,e=n(this),f=a.match(E)||[];while(b=f[d++])e.hasClass(b)?e.removeClass(b):e.addClass(b)}else(c===U||"boolean"===c)&&(this.className&&L.set(this,"__className__",this.className),this.className=this.className||a===!1?"":L.get(this,"__className__")||"")})},hasClass:function(a){for(var b=" "+a+" ",c=0,d=this.length;d>c;c++)if(1===this[c].nodeType&&(" "+this[c].className+" ").replace(ac," ").indexOf(b)>=0)return!0;return!1}});var bc=/\r/g;n.fn.extend({val:function(a){var b,c,d,e=this[0];{if(arguments.length)return d=n.isFunction(a),this.each(function(c){var e;1===this.nodeType&&(e=d?a.call(this,c,n(this).val()):a,null==e?e="":"number"==typeof e?e+="":n.isArray(e)&&(e=n.map(e,function(a){return null==a?"":a+""})),b=n.valHooks[this.type]||n.valHooks[this.nodeName.toLowerCase()],b&&"set"in b&&void 0!==b.set(this,e,"value")||(this.value=e))});if(e)return b=n.valHooks[e.type]||n.valHooks[e.nodeName.toLowerCase()],b&&"get"in b&&void 0!==(c=b.get(e,"value"))?c:(c=e.value,"string"==typeof c?c.replace(bc,""):null==c?"":c)}}}),n.extend({valHooks:{option:{get:function(a){var b=n.find.attr(a,"value");return null!=b?b:n.trim(n.text(a))}},select:{get:function(a){for(var b,c,d=a.options,e=a.selectedIndex,f="select-one"===a.type||0>e,g=f?null:[],h=f?e+1:d.length,i=0>e?h:f?e:0;h>i;i++)if(c=d[i],!(!c.selected&&i!==e||(k.optDisabled?c.disabled:null!==c.getAttribute("disabled"))||c.parentNode.disabled&&n.nodeName(c.parentNode,"optgroup"))){if(b=n(c).val(),f)return b;g.push(b)}return g},set:function(a,b){var c,d,e=a.options,f=n.makeArray(b),g=e.length;while(g--)d=e[g],(d.selected=n.inArray(d.value,f)>=0)&&(c=!0);return c||(a.selectedIndex=-1),f}}}}),n.each(["radio","checkbox"],function(){n.valHooks[this]={set:function(a,b){return n.isArray(b)?a.checked=n.inArray(n(a).val(),b)>=0:void 0}},k.checkOn||(n.valHooks[this].get=function(a){return null===a.getAttribute("value")?"on":a.value})}),n.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(a,b){n.fn[b]=function(a,c){return arguments.length>0?this.on(b,null,a,c):this.trigger(b)}}),n.fn.extend({hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)},bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return 1===arguments.length?this.off(a,"**"):this.off(b,a||"**",c)}});var cc=n.now(),dc=/\?/;n.parseJSON=function(a){return JSON.parse(a+"")},n.parseXML=function(a){var b,c;if(!a||"string"!=typeof a)return null;try{c=new DOMParser,b=c.parseFromString(a,"text/xml")}catch(d){b=void 0}return(!b||b.getElementsByTagName("parsererror").length)&&n.error("Invalid XML: "+a),b};var ec,fc,gc=/#.*$/,hc=/([?&])_=[^&]*/,ic=/^(.*?):[ \t]*([^\r\n]*)$/gm,jc=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,kc=/^(?:GET|HEAD)$/,lc=/^\/\//,mc=/^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,nc={},oc={},pc="*/".concat("*");try{fc=location.href}catch(qc){fc=l.createElement("a"),fc.href="",fc=fc.href}ec=mc.exec(fc.toLowerCase())||[];function rc(a){return function(b,c){"string"!=typeof b&&(c=b,b="*");var d,e=0,f=b.toLowerCase().match(E)||[];if(n.isFunction(c))while(d=f[e++])"+"===d[0]?(d=d.slice(1)||"*",(a[d]=a[d]||[]).unshift(c)):(a[d]=a[d]||[]).push(c)}}function sc(a,b,c,d){var e={},f=a===oc;function g(h){var i;return e[h]=!0,n.each(a[h]||[],function(a,h){var j=h(b,c,d);return"string"!=typeof j||f||e[j]?f?!(i=j):void 0:(b.dataTypes.unshift(j),g(j),!1)}),i}return g(b.dataTypes[0])||!e["*"]&&g("*")}function tc(a,b){var c,d,e=n.ajaxSettings.flatOptions||{};for(c in b)void 0!==b[c]&&((e[c]?a:d||(d={}))[c]=b[c]);return d&&n.extend(!0,a,d),a}function uc(a,b,c){var d,e,f,g,h=a.contents,i=a.dataTypes;while("*"===i[0])i.shift(),void 0===d&&(d=a.mimeType||b.getResponseHeader("Content-Type"));if(d)for(e in h)if(h[e]&&h[e].test(d)){i.unshift(e);break}if(i[0]in c)f=i[0];else{for(e in c){if(!i[0]||a.converters[e+" "+i[0]]){f=e;break}g||(g=e)}f=f||g}return f?(f!==i[0]&&i.unshift(f),c[f]):void 0}function vc(a,b,c,d){var e,f,g,h,i,j={},k=a.dataTypes.slice();if(k[1])for(g in a.converters)j[g.toLowerCase()]=a.converters[g];f=k.shift();while(f)if(a.responseFields[f]&&(c[a.responseFields[f]]=b),!i&&d&&a.dataFilter&&(b=a.dataFilter(b,a.dataType)),i=f,f=k.shift())if("*"===f)f=i;else if("*"!==i&&i!==f){if(g=j[i+" "+f]||j["* "+f],!g)for(e in j)if(h=e.split(" "),h[1]===f&&(g=j[i+" "+h[0]]||j["* "+h[0]])){g===!0?g=j[e]:j[e]!==!0&&(f=h[0],k.unshift(h[1]));break}if(g!==!0)if(g&&a["throws"])b=g(b);else try{b=g(b)}catch(l){return{state:"parsererror",error:g?l:"No conversion from "+i+" to "+f}}}return{state:"success",data:b}}n.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:fc,type:"GET",isLocal:jc.test(ec[1]),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":pc,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":n.parseJSON,"text xml":n.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(a,b){return b?tc(tc(a,n.ajaxSettings),b):tc(n.ajaxSettings,a)},ajaxPrefilter:rc(nc),ajaxTransport:rc(oc),ajax:function(a,b){"object"==typeof a&&(b=a,a=void 0),b=b||{};var c,d,e,f,g,h,i,j,k=n.ajaxSetup({},b),l=k.context||k,m=k.context&&(l.nodeType||l.jquery)?n(l):n.event,o=n.Deferred(),p=n.Callbacks("once memory"),q=k.statusCode||{},r={},s={},t=0,u="canceled",v={readyState:0,getResponseHeader:function(a){var b;if(2===t){if(!f){f={};while(b=ic.exec(e))f[b[1].toLowerCase()]=b[2]}b=f[a.toLowerCase()]}return null==b?null:b},getAllResponseHeaders:function(){return 2===t?e:null},setRequestHeader:function(a,b){var c=a.toLowerCase();return t||(a=s[c]=s[c]||a,r[a]=b),this},overrideMimeType:function(a){return t||(k.mimeType=a),this},statusCode:function(a){var b;if(a)if(2>t)for(b in a)q[b]=[q[b],a[b]];else v.always(a[v.status]);return this},abort:function(a){var b=a||u;return c&&c.abort(b),x(0,b),this}};if(o.promise(v).complete=p.add,v.success=v.done,v.error=v.fail,k.url=((a||k.url||fc)+"").replace(gc,"").replace(lc,ec[1]+"//"),k.type=b.method||b.type||k.method||k.type,k.dataTypes=n.trim(k.dataType||"*").toLowerCase().match(E)||[""],null==k.crossDomain&&(h=mc.exec(k.url.toLowerCase()),k.crossDomain=!(!h||h[1]===ec[1]&&h[2]===ec[2]&&(h[3]||("http:"===h[1]?"80":"443"))===(ec[3]||("http:"===ec[1]?"80":"443")))),k.data&&k.processData&&"string"!=typeof k.data&&(k.data=n.param(k.data,k.traditional)),sc(nc,k,b,v),2===t)return v;i=k.global,i&&0===n.active++&&n.event.trigger("ajaxStart"),k.type=k.type.toUpperCase(),k.hasContent=!kc.test(k.type),d=k.url,k.hasContent||(k.data&&(d=k.url+=(dc.test(d)?"&":"?")+k.data,delete k.data),k.cache===!1&&(k.url=hc.test(d)?d.replace(hc,"$1_="+cc++):d+(dc.test(d)?"&":"?")+"_="+cc++)),k.ifModified&&(n.lastModified[d]&&v.setRequestHeader("If-Modified-Since",n.lastModified[d]),n.etag[d]&&v.setRequestHeader("If-None-Match",n.etag[d])),(k.data&&k.hasContent&&k.contentType!==!1||b.contentType)&&v.setRequestHeader("Content-Type",k.contentType),v.setRequestHeader("Accept",k.dataTypes[0]&&k.accepts[k.dataTypes[0]]?k.accepts[k.dataTypes[0]]+("*"!==k.dataTypes[0]?", "+pc+"; q=0.01":""):k.accepts["*"]);for(j in k.headers)v.setRequestHeader(j,k.headers[j]);if(k.beforeSend&&(k.beforeSend.call(l,v,k)===!1||2===t))return v.abort();u="abort";for(j in{success:1,error:1,complete:1})v[j](k[j]);if(c=sc(oc,k,b,v)){v.readyState=1,i&&m.trigger("ajaxSend",[v,k]),k.async&&k.timeout>0&&(g=setTimeout(function(){v.abort("timeout")},k.timeout));try{t=1,c.send(r,x)}catch(w){if(!(2>t))throw w;x(-1,w)}}else x(-1,"No Transport");function x(a,b,f,h){var j,r,s,u,w,x=b;2!==t&&(t=2,g&&clearTimeout(g),c=void 0,e=h||"",v.readyState=a>0?4:0,j=a>=200&&300>a||304===a,f&&(u=uc(k,v,f)),u=vc(k,u,v,j),j?(k.ifModified&&(w=v.getResponseHeader("Last-Modified"),w&&(n.lastModified[d]=w),w=v.getResponseHeader("etag"),w&&(n.etag[d]=w)),204===a||"HEAD"===k.type?x="nocontent":304===a?x="notmodified":(x=u.state,r=u.data,s=u.error,j=!s)):(s=x,(a||!x)&&(x="error",0>a&&(a=0))),v.status=a,v.statusText=(b||x)+"",j?o.resolveWith(l,[r,x,v]):o.rejectWith(l,[v,x,s]),v.statusCode(q),q=void 0,i&&m.trigger(j?"ajaxSuccess":"ajaxError",[v,k,j?r:s]),p.fireWith(l,[v,x]),i&&(m.trigger("ajaxComplete",[v,k]),--n.active||n.event.trigger("ajaxStop")))}return v},getJSON:function(a,b,c){return n.get(a,b,c,"json")},getScript:function(a,b){return n.get(a,void 0,b,"script")}}),n.each(["get","post"],function(a,b){n[b]=function(a,c,d,e){return n.isFunction(c)&&(e=e||d,d=c,c=void 0),n.ajax({url:a,type:b,dataType:e,data:c,success:d})}}),n.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(a,b){n.fn[b]=function(a){return this.on(b,a)}}),n._evalUrl=function(a){return n.ajax({url:a,type:"GET",dataType:"script",async:!1,global:!1,"throws":!0})},n.fn.extend({wrapAll:function(a){var b;return n.isFunction(a)?this.each(function(b){n(this).wrapAll(a.call(this,b))}):(this[0]&&(b=n(a,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstElementChild)a=a.firstElementChild;return a}).append(this)),this)},wrapInner:function(a){return this.each(n.isFunction(a)?function(b){n(this).wrapInner(a.call(this,b))}:function(){var b=n(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){var b=n.isFunction(a);return this.each(function(c){n(this).wrapAll(b?a.call(this,c):a)})},unwrap:function(){return this.parent().each(function(){n.nodeName(this,"body")||n(this).replaceWith(this.childNodes)}).end()}}),n.expr.filters.hidden=function(a){return a.offsetWidth<=0&&a.offsetHeight<=0},n.expr.filters.visible=function(a){return!n.expr.filters.hidden(a)};var wc=/%20/g,xc=/\[\]$/,yc=/\r?\n/g,zc=/^(?:submit|button|image|reset|file)$/i,Ac=/^(?:input|select|textarea|keygen)/i;function Bc(a,b,c,d){var e;if(n.isArray(b))n.each(b,function(b,e){c||xc.test(a)?d(a,e):Bc(a+"["+("object"==typeof e?b:"")+"]",e,c,d)});else if(c||"object"!==n.type(b))d(a,b);else for(e in b)Bc(a+"["+e+"]",b[e],c,d)}n.param=function(a,b){var c,d=[],e=function(a,b){b=n.isFunction(b)?b():null==b?"":b,d[d.length]=encodeURIComponent(a)+"="+encodeURIComponent(b)};if(void 0===b&&(b=n.ajaxSettings&&n.ajaxSettings.traditional),n.isArray(a)||a.jquery&&!n.isPlainObject(a))n.each(a,function(){e(this.name,this.value)});else for(c in a)Bc(c,a[c],b,e);return d.join("&").replace(wc,"+")},n.fn.extend({serialize:function(){return n.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var a=n.prop(this,"elements");return a?n.makeArray(a):this}).filter(function(){var a=this.type;return this.name&&!n(this).is(":disabled")&&Ac.test(this.nodeName)&&!zc.test(a)&&(this.checked||!T.test(a))}).map(function(a,b){var c=n(this).val();return null==c?null:n.isArray(c)?n.map(c,function(a){return{name:b.name,value:a.replace(yc,"\r\n")}}):{name:b.name,value:c.replace(yc,"\r\n")}}).get()}}),n.ajaxSettings.xhr=function(){try{return new XMLHttpRequest}catch(a){}};var Cc=0,Dc={},Ec={0:200,1223:204},Fc=n.ajaxSettings.xhr();a.ActiveXObject&&n(a).on("unload",function(){for(var a in Dc)Dc[a]()}),k.cors=!!Fc&&"withCredentials"in Fc,k.ajax=Fc=!!Fc,n.ajaxTransport(function(a){var b;return k.cors||Fc&&!a.crossDomain?{send:function(c,d){var e,f=a.xhr(),g=++Cc;if(f.open(a.type,a.url,a.async,a.username,a.password),a.xhrFields)for(e in a.xhrFields)f[e]=a.xhrFields[e];a.mimeType&&f.overrideMimeType&&f.overrideMimeType(a.mimeType),a.crossDomain||c["X-Requested-With"]||(c["X-Requested-With"]="XMLHttpRequest");for(e in c)f.setRequestHeader(e,c[e]);b=function(a){return function(){b&&(delete Dc[g],b=f.onload=f.onerror=null,"abort"===a?f.abort():"error"===a?d(f.status,f.statusText):d(Ec[f.status]||f.status,f.statusText,"string"==typeof f.responseText?{text:f.responseText}:void 0,f.getAllResponseHeaders()))}},f.onload=b(),f.onerror=b("error"),b=Dc[g]=b("abort");try{f.send(a.hasContent&&a.data||null)}catch(h){if(b)throw h}},abort:function(){b&&b()}}:void 0}),n.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/(?:java|ecma)script/},converters:{"text script":function(a){return n.globalEval(a),a}}}),n.ajaxPrefilter("script",function(a){void 0===a.cache&&(a.cache=!1),a.crossDomain&&(a.type="GET")}),n.ajaxTransport("script",function(a){if(a.crossDomain){var b,c;return{send:function(d,e){b=n("<script>").prop({async:!0,charset:a.scriptCharset,src:a.url}).on("load error",c=function(a){b.remove(),c=null,a&&e("error"===a.type?404:200,a.type)}),l.head.appendChild(b[0])},abort:function(){c&&c()}}}});var Gc=[],Hc=/(=)\?(?=&|$)|\?\?/;n.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var a=Gc.pop()||n.expando+"_"+cc++;return this[a]=!0,a}}),n.ajaxPrefilter("json jsonp",function(b,c,d){var e,f,g,h=b.jsonp!==!1&&(Hc.test(b.url)?"url":"string"==typeof b.data&&!(b.contentType||"").indexOf("application/x-www-form-urlencoded")&&Hc.test(b.data)&&"data");return h||"jsonp"===b.dataTypes[0]?(e=b.jsonpCallback=n.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,h?b[h]=b[h].replace(Hc,"$1"+e):b.jsonp!==!1&&(b.url+=(dc.test(b.url)?"&":"?")+b.jsonp+"="+e),b.converters["script json"]=function(){return g||n.error(e+" was not called"),g[0]},b.dataTypes[0]="json",f=a[e],a[e]=function(){g=arguments},d.always(function(){a[e]=f,b[e]&&(b.jsonpCallback=c.jsonpCallback,Gc.push(e)),g&&n.isFunction(f)&&f(g[0]),g=f=void 0}),"script"):void 0}),n.parseHTML=function(a,b,c){if(!a||"string"!=typeof a)return null;"boolean"==typeof b&&(c=b,b=!1),b=b||l;var d=v.exec(a),e=!c&&[];return d?[b.createElement(d[1])]:(d=n.buildFragment([a],b,e),e&&e.length&&n(e).remove(),n.merge([],d.childNodes))};var Ic=n.fn.load;n.fn.load=function(a,b,c){if("string"!=typeof a&&Ic)return Ic.apply(this,arguments);var d,e,f,g=this,h=a.indexOf(" ");return h>=0&&(d=n.trim(a.slice(h)),a=a.slice(0,h)),n.isFunction(b)?(c=b,b=void 0):b&&"object"==typeof b&&(e="POST"),g.length>0&&n.ajax({url:a,type:e,dataType:"html",data:b}).done(function(a){f=arguments,g.html(d?n("<div>").append(n.parseHTML(a)).find(d):a)}).complete(c&&function(a,b){g.each(c,f||[a.responseText,b,a])}),this},n.expr.filters.animated=function(a){return n.grep(n.timers,function(b){return a===b.elem}).length};var Jc=a.document.documentElement;function Kc(a){return n.isWindow(a)?a:9===a.nodeType&&a.defaultView}n.offset={setOffset:function(a,b,c){var d,e,f,g,h,i,j,k=n.css(a,"position"),l=n(a),m={};"static"===k&&(a.style.position="relative"),h=l.offset(),f=n.css(a,"top"),i=n.css(a,"left"),j=("absolute"===k||"fixed"===k)&&(f+i).indexOf("auto")>-1,j?(d=l.position(),g=d.top,e=d.left):(g=parseFloat(f)||0,e=parseFloat(i)||0),n.isFunction(b)&&(b=b.call(a,c,h)),null!=b.top&&(m.top=b.top-h.top+g),null!=b.left&&(m.left=b.left-h.left+e),"using"in b?b.using.call(a,m):l.css(m)}},n.fn.extend({offset:function(a){if(arguments.length)return void 0===a?this:this.each(function(b){n.offset.setOffset(this,a,b)});var b,c,d=this[0],e={top:0,left:0},f=d&&d.ownerDocument;if(f)return b=f.documentElement,n.contains(b,d)?(typeof d.getBoundingClientRect!==U&&(e=d.getBoundingClientRect()),c=Kc(f),{top:e.top+c.pageYOffset-b.clientTop,left:e.left+c.pageXOffset-b.clientLeft}):e},position:function(){if(this[0]){var a,b,c=this[0],d={top:0,left:0};return"fixed"===n.css(c,"position")?b=c.getBoundingClientRect():(a=this.offsetParent(),b=this.offset(),n.nodeName(a[0],"html")||(d=a.offset()),d.top+=n.css(a[0],"borderTopWidth",!0),d.left+=n.css(a[0],"borderLeftWidth",!0)),{top:b.top-d.top-n.css(c,"marginTop",!0),left:b.left-d.left-n.css(c,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){var a=this.offsetParent||Jc;while(a&&!n.nodeName(a,"html")&&"static"===n.css(a,"position"))a=a.offsetParent;return a||Jc})}}),n.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(b,c){var d="pageYOffset"===c;n.fn[b]=function(e){return J(this,function(b,e,f){var g=Kc(b);return void 0===f?g?g[c]:b[e]:void(g?g.scrollTo(d?a.pageXOffset:f,d?f:a.pageYOffset):b[e]=f)},b,e,arguments.length,null)}}),n.each(["top","left"],function(a,b){n.cssHooks[b]=yb(k.pixelPosition,function(a,c){return c?(c=xb(a,b),vb.test(c)?n(a).position()[b]+"px":c):void 0})}),n.each({Height:"height",Width:"width"},function(a,b){n.each({padding:"inner"+a,content:b,"":"outer"+a},function(c,d){n.fn[d]=function(d,e){var f=arguments.length&&(c||"boolean"!=typeof d),g=c||(d===!0||e===!0?"margin":"border");return J(this,function(b,c,d){var e;return n.isWindow(b)?b.document.documentElement["client"+a]:9===b.nodeType?(e=b.documentElement,Math.max(b.body["scroll"+a],e["scroll"+a],b.body["offset"+a],e["offset"+a],e["client"+a])):void 0===d?n.css(b,c,g):n.style(b,c,d,g)},b,f?d:void 0,f,null)}})}),n.fn.size=function(){return this.length},n.fn.andSelf=n.fn.addBack,"function"==typeof define&&define.amd&&define("jquery",[],function(){return n});var Lc=a.jQuery,Mc=a.$;return n.noConflict=function(b){return a.$===n&&(a.$=Mc),b&&a.jQuery===n&&(a.jQuery=Lc),n},typeof b===U&&(a.jQuery=a.$=n),n});
//# sourceMappingURL=jquery.min.map

$newJquery = $.noConflict(true);;
/**!
 * trunk8 v1.3.3
 * https://github.com/rviscomi/trunk8
 * 
 * Copyright 2012 Rick Viscomi
 * Released under the MIT License.
 * 
 * Date: September 26, 2012
 */

(function ($newJquery) {
	var methods,
		utils,
		SIDES = {
			/* cen...ter */
			center: 'center',
			/* ...left */
			left: 'left',
			/* right... */
			right: 'right'
		},
		WIDTH = {
			auto: 'auto'
		};
	
	function trunk8(element) {
		this.$newJqueryelement = $newJquery(element);
		this.original_text = $newJquery.trim(this.$newJqueryelement.html());
		this.settings = $newJquery.extend({}, $newJquery.fn.trunk8.defaults);
	}
	
	trunk8.prototype.updateSettings = function (options) {
		this.settings = $newJquery.extend(this.settings, options);
	};

	function stripHTML(html) {
		var tmp = document.createElement("DIV");
		tmp.innerHTML = html;
		
		if (typeof tmp.textContent != 'undefined') {
			return tmp.textContent;
		}

		return tmp.innerText;
	}

	function getHtmlArr(str) {
		/* Builds an array of strings and designated */
		/* HTML tags around them. */
		if (stripHTML(str) === str) {
			return str.split(/\s/g);
		}
		var allResults = [],
			reg = /<([a-z]+)([^<]*)(?:>([\S\s]*?(?!<\1>))<\/\1>|\s+\/>)(['.?!,]*)|((?:[^<>\s])+['.?!,]*\w?|<br\s?\/?>)/ig,
			outArr = reg.exec(str),
			lastI,
			ind;
		while (outArr && lastI !== reg.lastIndex) {
			lastI = reg.lastIndex;
			if (outArr[5]) {
				allResults.push(outArr[5]);
			} else if (outArr[1]) {
				allResults.push({
					tag: outArr[1],
					attribs: outArr[2],
					content: outArr[3],
					after: outArr[4]
				});
			}
			outArr = reg.exec(str);
		}
		for (ind = 0; ind < allResults.length; ind++) {
			if (typeof allResults[ind] !== 'string' &&
					allResults[ind].content) {
				allResults[ind].content = getHtmlArr(allResults[ind].content);
			}
		}
		return allResults;
	}

	function rebuildHtmlFromBite(bite, htmlObject, fill) {
		// Take the processed bite after binary-search
		// truncated and re-build the original HTML
		// tags around the processed string.
		bite = bite.replace(fill, '');

		var biteHelper = function(contentArr, tagInfo) {
				var retStr = '',
					content,
					biteContent,
					biteLength,
					nextWord,
					i;
				for (i = 0; i < contentArr.length; i++) {
					content = contentArr[i];
					biteLength = $newJquery.trim(bite).split(' ').length;
					if ($newJquery.trim(bite).length) {
						if (typeof content === 'string') {
							if (!/<br\s*\/?>/i.test(content)) {
								if (biteLength === 1 && $newJquery.trim(bite).length <= content.length) {
									content = bite;
									// We want the fill to go inside of the last HTML
									// element if the element is a container.
									if (tagInfo === 'p' || tagInfo === 'div') {
										content += fill;
									}
									bite = '';
								} else {
									bite = bite.replace(content, '');
								}
							}
							retStr += $newJquery.trim(content) + ((i === contentArr.length-1 || biteLength <= 1) ? '' : ' ');
						} else {
							biteContent = biteHelper(content.content, content.tag);
							if (content.after) bite = bite.replace(content.after, '');
							if (biteContent) {
								if (!content.after) content.after = ' ';
								retStr += '<'+content.tag+content.attribs+'>'+biteContent+'</'+content.tag+'>' + content.after;
							}
						}
					}
				}
				return retStr;
			},
			htmlResults = biteHelper(htmlObject);

		// Add fill if doesn't exist. This will place it outside the HTML elements.
		if (htmlResults.slice(htmlResults.length - fill.length) !== fill) {
			htmlResults += fill;
		}

		return htmlResults;
	}

	function truncate() {
		var data = this.data('trunk8'),
			settings = data.settings,
			width = settings.width,
			side = settings.side,
			fill = settings.fill,
			parseHTML = settings.parseHTML,
			calcLineHeight = (settings.line_height > 0) ? settings.line_height : utils.getLineHeight(this), // customized line height for e1
			line_height = calcLineHeight * settings.lines,
			str = data.original_text,
			length = str.length,
			max_bite = '',
			lower, upper,
			bite_size,
			bite,
			text,
			htmlObject;
		//console.log('line_height: ' + line_height);
		/* Reset the field to the original string. */
		this.html(str);
		text = this.text();

		/* If string has HTML and parse HTML is set, build */
		/* the data struct to house the tags */
		if (parseHTML && stripHTML(str) !== str) {
			htmlObject = getHtmlArr(str);
			str = stripHTML(str);
			length = str.length;
		}

		if (width === WIDTH.auto) {
			/* Assuming there is no "overflow: hidden". */
			if (this.height() <= line_height) {
				/* Text is already at the optimal trunkage. */
				return;
			}

			/* Binary search technique for finding the optimal trunkage. */
			/* Find the maximum bite without overflowing. */
			lower = 0;
			upper = length - 1;

			while (lower <= upper) {
				bite_size = lower + ((upper - lower) >> 1);
				
				bite = utils.eatStr(str, side, length - bite_size, fill);

			/*	if (parseHTML && htmlObject) {
					bite = rebuildHtmlFromBite(bite, htmlObject, fill);
				}
				*/
				this.html(bite);

				/* Check for overflow. */
				if (this.height() > line_height) {
					upper = bite_size - 1;
				}
				else {
					lower = bite_size + 1;

					/* Save the bigger bite. */
					max_bite = (max_bite.length > bite.length) ? max_bite : bite;
				}
			}

			/* Reset the content to eliminate possible existing scroll bars. */
			this.html('');
			
			/* Display the biggest bite. */
			this.html(max_bite);
			
			if (settings.tooltip) {
				this.attr('title', text);
			}
		}
		else if (!isNaN(width)) {
			bite_size = length - width;

			bite = utils.eatStr(str, side, bite_size, fill);

			this.html(bite);
			
			if (settings.tooltip) {
				this.attr('title', str);
			}
		}
		else {
			$newJquery.error('Invalid width "' + width + '".');
			return;
		}
		settings.onTruncate();
	}

	methods = {
		init: function (options) {
			return this.each(function () {
				var $newJquerythis = $newJquery(this),
					data = $newJquerythis.data('trunk8');
				
				if (!data) {
					$newJquerythis.data('trunk8', (data = new trunk8(this)));
				}
				
				data.updateSettings(options);
				
				truncate.call($newJquerythis);
			});
		},

		/** Updates the text value of the elements while maintaining truncation. */
		update: function (new_string) {
			return this.each(function () {
				var $newJquerythis = $newJquery(this);
				
				/* Update text. */
				if (new_string) {
					$newJquerythis.data('trunk8').original_text = new_string;
				}

				/* Truncate accordingly. */
				truncate.call($newJquerythis);
			});
		},
		
		revert: function () {
			return this.each(function () {
				/* Get original text. */
				var text = $newJquery(this).data('trunk8').original_text;
				
				/* Revert element to original text. */
				$newJquery(this).html(text);
			});
		},

		/** Returns this instance's settings object. NOT CHAINABLE. */
		getSettings: function () {
			return $newJquery(this.get(0)).data('trunk8').settings;
		}
	};

	utils = {
		/** Replaces [bite_size] [side]-most chars in [str] with [fill]. */
		eatStr: function (str, side, bite_size, fill) {
			var length = str.length,
				key = utils.eatStr.generateKey.apply(null, arguments),
				half_length,
				half_bite_size;

			/* If the result is already in the cache, return it. */
			if (utils.eatStr.cache[key]) {
				return utils.eatStr.cache[key];
			}
			
			/* Common error handling. */
			if ((typeof str !== 'string') || (length === 0)) {
				$newJquery.error('Invalid source string "' + str + '".');
			}
			if ((bite_size < 0) || (bite_size > length)) {
				$newJquery.error('Invalid bite size "' + bite_size + '".');
			}
			else if (bite_size === 0) {
				/* No bite should show no truncation. */
				return str;
			}
			if (typeof (fill + '') !== 'string') {
				$newJquery.error('Fill unable to be converted to a string.');
			}

			/* Compute the result, store it in the cache, and return it. */
			switch (side) {
				case SIDES.right:
					/* str... */
					return utils.eatStr.cache[key] =
							$newJquery.trim(str.substr(0, length - bite_size)) + fill;
					
				case SIDES.left:
					/* ...str */
					return utils.eatStr.cache[key] =
							fill + $newJquery.trim(str.substr(bite_size));
					
				case SIDES.center:
					/* Bit-shift to the right by one === Math.floor(x / 2) */
					half_length = length >> 1; // halve the length
					half_bite_size = bite_size >> 1; // halve the bite_size

					/* st...r */
					return utils.eatStr.cache[key] =
							$newJquery.trim(utils.eatStr(str.substr(0, length - half_length), SIDES.right, bite_size - half_bite_size, '')) +
							fill +
							$newJquery.trim(utils.eatStr(str.substr(length - half_length), SIDES.left, half_bite_size, ''));
					
				default:
					$newJquery.error('Invalid side "' + side + '".');
			}
		},
		
		getLineHeight: function (elem) {
				var floats = $newJquery(elem).css('float');
				if (floats !== 'none') {
					$newJquery(elem).css('float', 'none');
				}
				var pos = $newJquery(elem).css('position');
				if (pos === 'absolute') {
					$newJquery(elem).css('position', 'static');
				}
	
				var html = $newJquery(elem).html(),
				wrapper_id = 'line-height-test',
				line_height;
	
				/* Set the content to a small single character and wrap. */
				$newJquery(elem).html('i').wrap('<div id="' + wrapper_id + '" />');
	
				/* Calculate the line height by measuring the wrapper.*/
				line_height = $newJquery('#' + wrapper_id).innerHeight();
	
				/* Remove the wrapper and reset the content. */
				$newJquery(elem).html(html).css({ 'float': floats, 'position': pos }).unwrap();
	
				return line_height;
			}
	};

	utils.eatStr.cache = {};
	utils.eatStr.generateKey = function () {
		return Array.prototype.join.call(arguments, '');
	};
	
	$newJquery.fn.trunk8 = function (method) {
		if (methods[method]) {
			return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));
		}
		else if (typeof method === 'object' || !method) {
			return methods.init.apply(this, arguments);
		}
		else {
			$newJquery.error('Method ' + method + ' does not exist on jQuery.trunk8');
		}
	};
	
	/* Default trunk8 settings. */
	$newJquery.fn.trunk8.defaults = {
		fill: '&hellip;',
		lines: 1,
		side: SIDES.right,
		tooltip: true,
		width: WIDTH.auto,
		parseHTML: false,
		onTruncate: function () {}
	};
})(jQuery);
;

trunk8base = {
    fill: '<span class="fade-title"></span>',
    lines: 2,
    side: 'right',
    tooltip: true,
    width: 'auto',
    parseHTML: true,
};
var trunk8 = {
  'catalog_title'		 : jQuery.extend({}, trunk8base, {fill :'<span class="fade-title"></span>'}),
  'catalog_desc' 		 : jQuery.extend({}, trunk8base, {fill :'<span class="fade-desc"><span id="arrow-more"></span></span>', lines: 5,line_height: 17,tooltip:false}),
  'Prerequisite_title'	 : jQuery.extend({}, trunk8base, {fill :'<span class="fade-title"></span>'}),
  'Prerequisite_desc' 	 : jQuery.extend({}, trunk8base, {fill :'<span class="fade-desc"><span id="arrow-more"></span></span>', lines: 5,line_height: 17,tooltip:false}),
  'catalogclsmul_title'  : jQuery.extend({}, trunk8base, {fill :'<span class="fade-title"></span>',line_height: 17}),
  'catalogclsmul_desc' 	 : jQuery.extend({}, trunk8base, {fill :'<span class="fade-desc"><span id="arrow-more"></span></span>', lines: 5,line_height: 17,tooltip:false}),
  'embedwidget_title'	 : jQuery.extend({}, trunk8base, {fill :'<span class="fade-title"></span>',line_height: 17}),
  'embedwidget_desc' 	 : jQuery.extend({}, trunk8base, {fill :'<span class="fade-desc"><span id="arrow-more"></span></span>', lines: 5,line_height: 17,tooltip:false}),
  'tpgroup_title'        : jQuery.extend({}, trunk8base, {fill :'<span class="fade-title"></span>', lines: 2,line_height: 17}),
  'tpmod_title'  		 : jQuery.extend({}, trunk8base, {fill :'<span class="fade-title"></span>', lines: 2,line_height: 17}),
  'tpmod_desc' 			 : jQuery.extend({}, trunk8base, {fill :'<span class="fade-desc"><span id="arrow-more"></span></span>', lines: 5,line_height: 17,tooltip:false}),
  'forum_title'  		 : jQuery.extend({}, trunk8base, {fill :'<span class="fade-title"></span>',line_height: 17}),
  'forum_desc'    		 : jQuery.extend({}, trunk8base, {fill :'<span class="fade-desc"><span id="arrow-more"></span></span>', lines: 5,line_height: 17,tooltip:false}),
  'forumtopic_title'  	 : jQuery.extend({}, trunk8base, {fill :'<span class="fade-title"></span>',line_height: 17}),
  'forumtopic_desc'    	 : jQuery.extend({}, trunk8base, {fill :'<span class="fade-desc"><span id="arrow-more"></span></span>', lines: 5,line_height: 17,tooltip:false}),
  //'detailforumtopic_title' : jQuery.extend({}, trunk8base, {fill :'<span class="fade-title"></span>',lines: 3,line_height: 17}),
  'report_title'  		 : jQuery.extend({}, trunk8base, {fill :'<span class="fade-title"></span>',line_height: 17}),
  'report_desc'  		 : jQuery.extend({}, trunk8base, {fill :'<span class="fade-desc"><span id="arrow-more"></span></span>', lines: 5,line_height: 17,tooltip:false}),
  'mylearnmulcls_title'  : jQuery.extend({}, trunk8base, {fill :'<span class="fade-title"></span>',line_height: 17}),
  'mylearnmulcls_desc' 	 : jQuery.extend({}, trunk8base, {fill :'<span class="fade-desc"><span id="arrow-more"></span></span>', lines: 5,line_height: 17,tooltip:false}),
  'myenroll_title'		 : jQuery.extend({}, trunk8base, {fill :'<span class="fade-title"></span>',lines: 2,line_height: 17}),
  'myenroll_desc'		 : jQuery.extend({}, trunk8base, {fill :'<span class="fade-desc"><span id="arrow-more"></span></span>', lines: 4,line_height: 17,tooltip:false}),
  'myprogramLP_title'	 : jQuery.extend({}, trunk8base, {fill :'<span class="fade-title"></span>',line_height: 17}),
  'myprogramLP_desc'	 : jQuery.extend({}, trunk8base, {fill :'<span class="fade-desc"><span id="arrow-more"></span></span>', lines: 4,line_height: 17,tooltip:false}),
  'myprogramres_desc'	 : jQuery.extend({}, trunk8base, {fill :'<span class="fade-desc"><span id="arrow-more"></span></span>', lines: 4,line_height: 17,tooltip:false}),
  'myprogramClass_title' : jQuery.extend({}, trunk8base, {fill :'<span class="fade-title"></span>',line_height: 17}),
  'myprogramClass_desc'	 : jQuery.extend({}, trunk8base, {fill :'<span class="fade-desc"><span id="arrow-more"></span></span>', lines: 2,line_height: 17,tooltip:false}),
  'myprogramModule_title' 	 : jQuery.extend({}, trunk8base, {fill :'<span class="fade-title"></span>',line_height: 17}),
  'myprogramModule_desc'	 : jQuery.extend({}, trunk8base, {fill :'<span class="fade-desc"><span id="arrow-more"></span></span>', lines: 2,line_height: 17,tooltip:false}),
  'spot_title'			 : jQuery.extend({}, trunk8base, {fill :'<span class="fade-title"></span>',lines: 2,line_height: 17}),
  'spot_desc'    		 : jQuery.extend({}, trunk8base, {fill :'<span class="fade-desc"><span id="arrow-more"></span></span>', lines: 4,line_height: 17,tooltip:false}),
  'spotleader_title'	 : jQuery.extend({}, trunk8base, {fill :'<span class="fade-title"></span>',lines: 2,line_height: 17}),
  'ins_title'			 : jQuery.extend({}, trunk8base, {fill :'<span class="fade-title"></span>',line_height: 17}),
  'ins_desc' 			 : jQuery.extend({}, trunk8base, {fill :'<span class="fade-desc"><span id="arrow-more"></span></span>', lines: 5,line_height: 17,tooltip:false}),
  'myteam_title'		 : jQuery.extend({}, trunk8base, {fill :'<span class="fade-title"></span>',line_height: 17}),
  'myteam_desc' 		 : jQuery.extend({}, trunk8base, {fill :'<span class="fade-desc"><span id="arrow-more"></span></span>', lines: 5,line_height: 17,tooltip:false}),
  'myteamname_title'	 : jQuery.extend({}, trunk8base, {fill :'<span class="fade-title"></span>',line_height: 17}),
  'admin_title'	 		 : jQuery.extend({}, trunk8base, {fill :'<span class="fade-title"></span>', line_height: 17 }),
  'admin_desc' 	 		 : jQuery.extend({}, trunk8base, {fill :'<span class="fade-desc"><span id="arrow-more"></span></span>', lines: 5,line_height: 17,tooltip:false}),
  'profile_title'	     : jQuery.extend({}, trunk8base, {fill :'<span class="fade-title"></span>',line_height: 17}),
  'profile_desc' 	 	 : jQuery.extend({}, trunk8base, {fill :'<span class="fade-desc"><span id="arrow-more"></span></span>', lines: 5,line_height: 17,tooltip:false}),
  'profileact_title'	 : jQuery.extend({}, trunk8base, {fill :'<span class="fade-title"></span>',line_height: 17}),
  'profileskill_title'	 : jQuery.extend({}, trunk8base, {fill :'<span class="fade-title"></span>',lines: 2,line_height: 17}),
  'transcript_title'	 : jQuery.extend({}, trunk8base, {fill :'<span class="fade-title"></span>',lines:2,line_height: 17}),
  'cal_title'			 : jQuery.extend({}, trunk8base, {fill :'<span class="fade-title"></span>',line_height: 17}),
  'ann_title'		     : jQuery.extend({}, trunk8base, {fill :'<span class="fade-title"></span>',lines: 2,line_height: 17}),
  'ann_desc' 		     : jQuery.extend({}, trunk8base, {fill :'<span class="fade-desc"><span id="arrow-more"></span></span>', lines: 5,line_height: 17,tooltip:false}),
  'usercatalog_title'	 : jQuery.extend({}, trunk8base, {fill :'<span class="fade-title"></span>',line_height: 17}),
  'frmreplyusr_title'	 : jQuery.extend({}, trunk8base, {fill :'<span class="fade-title"></span>',lines:1,line_height: 17}),
  'usrcatjobrole_title'	 : jQuery.extend({}, trunk8base, {fill :'<span class="fade-title"></span>',lines:1,line_height: 17}),
  'shoppingCart_title'	 : jQuery.extend({}, trunk8base, {fill :'<span class="fade-title"></span>',lines:1,line_height: 17}),
  'contstrip_title'	 	 : jQuery.extend({}, trunk8base, {fill :'<span class="fade-title"></span>',lines:4,line_height: 17}),
  'homebanner_title'	 : jQuery.extend({}, trunk8base, {fill :'<span class="fade-title"></span>',lines:1,line_height: 17}),
  'homebanner_desc' 	 : jQuery.extend({}, trunk8base, {fill :'<span class="fade-desc"><span id="arrow-more"></span></span>', lines:5,line_height: 17,tooltip:false}),
  'admin_short_desc' 	 : jQuery.extend({}, trunk8base, {fill :'<span class="fade-desc"><span id="arrow-more"></span></span>', lines:4,line_height: 17,tooltip:false}),
  'contPlyCls_title'	 : jQuery.extend({}, trunk8base, {fill :'<span class="fade-title"></span>',lines:1,line_height: 17}),
  'content_title'		 : jQuery.extend({}, trunk8base, {fill :'<span class="fade-title"></span>'}),
  'content_desc'		 : jQuery.extend({}, trunk8base, {fill :'<span class="fade-desc"><span id="arrow-more"></span></span>', lines: 4,line_height: 17,tooltip:false}),
  'class_detail_title'	 : jQuery.extend({}, trunk8base, {fill :'<span class="fade-title"></span>',lines: 2,line_height: 17}),
  'class_detail_desc'	 : jQuery.extend({}, trunk8base, {fill :'<span class="fade-desc"><span id="arrow-more"></span></span>', lines: 5,line_height: 17,tooltip:false}),
  'lp_detail_course_desc'	 : jQuery.extend({}, trunk8base, {fill :'<span class="fade-desc"><span id="arrow-more"></span></span>', lines: 3,line_height: 17,tooltip:false}),
  'class_detail_add_desc' : jQuery.extend({}, trunk8base, {fill :'<span class="fade-desc"><span id="arrow-more"></span></span>', lines: 5,line_height: 17,tooltip:false}),
  'admin_class_detail_title'	 : jQuery.extend({}, trunk8base, {fill :'<span class="fade-title"></span>',lines: 1,line_height: 17}),
  'whois_username_title'	 : jQuery.extend({}, trunk8base, {fill :'<span class="fade-title"></span>',lines: 2,line_height: 17}),
  'whois_jobtitle'	 : jQuery.extend({}, trunk8base, {fill :'<span class="fade-title"></span>',lines: 1,line_height: 17})
  
};
$(document).ready(function() {
	
	//$('.limit-desc').load
	$(document).delegate('#arrow-more','click',function (event) {
		var _this = $(this);
		// Fix for #0074904
		var parent = $(this).parents('.limit-desc');
		//console.log
		_this.parents('.limit-desc').attr({
			title1: _this.attr('title'),
			titletemp1: _this.attr('titletemp')
		})
		.removeAttr('title')
		.removeAttr('titletemp');
		
	    //$(this).parents('.limit-desc').trunk8('revert').append('<span id="full-desc"></span>');
		parent.trunk8('revert');
		if(parent.children().not('br').size() > 1){
		  parent.children().not('br').last().append('<span id="arrow-less"></span>');
		}else{
			parent.append('<span id="arrow-less"></span>');
		}
		scrollBar_Refresh('myteam');
		scrollBar_Refresh('catalog');
		scrollBar_Refresh('learning');
		if($('.lnr-tainingplan-register').length > 0) {
			scrollBar_Refresh('tp-select-class');
		}
		if($('#lnr-prerequisite-container').length > 0){
			$('#lnr-prerequisite-container #gview_lnr-prerequisite').jScrollPane();
		  }
		return false;
	});
	$(document).delegate('#arrow-less','click', function (event) {
		var _this = $(this);
		_this.parents('.limit-desc').attr({
			title: _this.attr('title1'),
			titletemp: _this.attr('titletemp1')
		})
		.removeAttr('title1')
		.removeAttr('titletemp1');
	  $(this).parents('.limit-desc').trunk8();
	  scrollBar_Refresh('myteam');
	  scrollBar_Refresh('catalog');
	  scrollBar_Refresh('learning');
	  if($('.lnr-tainingplan-register').length > 0) {
		scrollBar_Refresh('tp-select-class');
	  }
	  if($('#lnr-prerequisite-container').length > 0){
		  $('#lnr-prerequisite-container #gview_lnr-prerequisite').jScrollPane();
	  }
	  return false;
	  });
});
;
/**
 * @license
 * Video.js 5.6.0 <http://videojs.com/>
 * Copyright Brightcove, Inc. <https://www.brightcove.com/>
 * Available under Apache License Version 2.0
 * <https://github.com/videojs/video.js/blob/master/LICENSE>
 *
 * Includes vtt.js <https://github.com/mozilla/vtt.js>
 * Available under Apache License Version 2.0
 * <https://github.com/mozilla/vtt.js/blob/master/LICENSE>
 */

var seek_time=0;

(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.videojs = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){
(function (global){
var topLevel = typeof global !== 'undefined' ? global :
    typeof window !== 'undefined' ? window : {}
var minDoc = _dereq_('min-document');

if (typeof document !== 'undefined') {
    module.exports = document;
} else {
    var doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];

    if (!doccy) {
        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;
    }

    module.exports = doccy;
}

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9nbG9iYWwvZG9jdW1lbnQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgdG9wTGV2ZWwgPSB0eXBlb2YgZ2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IGdsb2JhbCA6XG4gICAgdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgPyB3aW5kb3cgOiB7fVxudmFyIG1pbkRvYyA9IHJlcXVpcmUoJ21pbi1kb2N1bWVudCcpO1xuXG5pZiAodHlwZW9mIGRvY3VtZW50ICE9PSAndW5kZWZpbmVkJykge1xuICAgIG1vZHVsZS5leHBvcnRzID0gZG9jdW1lbnQ7XG59IGVsc2Uge1xuICAgIHZhciBkb2NjeSA9IHRvcExldmVsWydfX0dMT0JBTF9ET0NVTUVOVF9DQUNIRUA0J107XG5cbiAgICBpZiAoIWRvY2N5KSB7XG4gICAgICAgIGRvY2N5ID0gdG9wTGV2ZWxbJ19fR0xPQkFMX0RPQ1VNRU5UX0NBQ0hFQDQnXSA9IG1pbkRvYztcbiAgICB9XG5cbiAgICBtb2R1bGUuZXhwb3J0cyA9IGRvY2N5O1xufVxuIl19
},{"min-document":3}],2:[function(_dereq_,module,exports){
(function (global){
if (typeof window !== "undefined") {
    module.exports = window;
} else if (typeof global !== "undefined") {
    module.exports = global;
} else if (typeof self !== "undefined"){
    module.exports = self;
} else {
    module.exports = {};
}

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9nbG9iYWwvd2luZG93LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiaWYgKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBtb2R1bGUuZXhwb3J0cyA9IHdpbmRvdztcbn0gZWxzZSBpZiAodHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIG1vZHVsZS5leHBvcnRzID0gZ2xvYmFsO1xufSBlbHNlIGlmICh0eXBlb2Ygc2VsZiAhPT0gXCJ1bmRlZmluZWRcIil7XG4gICAgbW9kdWxlLmV4cG9ydHMgPSBzZWxmO1xufSBlbHNlIHtcbiAgICBtb2R1bGUuZXhwb3J0cyA9IHt9O1xufVxuIl19
},{}],3:[function(_dereq_,module,exports){

},{}],4:[function(_dereq_,module,exports){
var getNative = _dereq_('../internal/getNative');

/* Native method references for those with the same name as other `lodash` methods. */
var nativeNow = getNative(Date, 'now');

/**
 * Gets the number of milliseconds that have elapsed since the Unix epoch
 * (1 January 1970 00:00:00 UTC).
 *
 * @static
 * @memberOf _
 * @category Date
 * @example
 *
 * _.defer(function(stamp) {
 *   console.log(_.now() - stamp);
 * }, _.now());
 * // => logs the number of milliseconds it took for the deferred function to be invoked
 */
var now = nativeNow || function() {
  return new Date().getTime();
};

module.exports = now;

},{"../internal/getNative":20}],5:[function(_dereq_,module,exports){
var isObject = _dereq_('../lang/isObject'),
    now = _dereq_('../date/now');

/** Used as the `TypeError` message for "Functions" methods. */
var FUNC_ERROR_TEXT = 'Expected a function';

/* Native method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max;

/**
 * Creates a debounced function that delays invoking `func` until after `wait`
 * milliseconds have elapsed since the last time the debounced function was
 * invoked. The debounced function comes with a `cancel` method to cancel
 * delayed invocations. Provide an options object to indicate that `func`
 * should be invoked on the leading and/or trailing edge of the `wait` timeout.
 * Subsequent calls to the debounced function return the result of the last
 * `func` invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked
 * on the trailing edge of the timeout only if the the debounced function is
 * invoked more than once during the `wait` timeout.
 *
 * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)
 * for details over the differences between `_.debounce` and `_.throttle`.
 *
 * @static
 * @memberOf _
 * @category Function
 * @param {Function} func The function to debounce.
 * @param {number} [wait=0] The number of milliseconds to delay.
 * @param {Object} [options] The options object.
 * @param {boolean} [options.leading=false] Specify invoking on the leading
 *  edge of the timeout.
 * @param {number} [options.maxWait] The maximum time `func` is allowed to be
 *  delayed before it's invoked.
 * @param {boolean} [options.trailing=true] Specify invoking on the trailing
 *  edge of the timeout.
 * @returns {Function} Returns the new debounced function.
 * @example
 *
 * // avoid costly calculations while the window size is in flux
 * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
 *
 * // invoke `sendMail` when the click event is fired, debouncing subsequent calls
 * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {
 *   'leading': true,
 *   'trailing': false
 * }));
 *
 * // ensure `batchLog` is invoked once after 1 second of debounced calls
 * var source = new EventSource('/stream');
 * jQuery(source).on('message', _.debounce(batchLog, 250, {
 *   'maxWait': 1000
 * }));
 *
 * // cancel a debounced call
 * var todoChanges = _.debounce(batchLog, 1000);
 * Object.observe(models.todo, todoChanges);
 *
 * Object.observe(models, function(changes) {
 *   if (_.find(changes, { 'user': 'todo', 'type': 'delete'})) {
 *     todoChanges.cancel();
 *   }
 * }, ['delete']);
 *
 * // ...at some point `models.todo` is changed
 * models.todo.completed = true;
 *
 * // ...before 1 second has passed `models.todo` is deleted
 * // which cancels the debounced `todoChanges` call
 * delete models.todo;
 */
function debounce(func, wait, options) {
  var args,
      maxTimeoutId,
      result,
      stamp,
      thisArg,
      timeoutId,
      trailingCall,
      lastCalled = 0,
      maxWait = false,
      trailing = true;

  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  wait = wait < 0 ? 0 : (+wait || 0);
  if (options === true) {
    var leading = true;
    trailing = false;
  } else if (isObject(options)) {
    leading = !!options.leading;
    maxWait = 'maxWait' in options && nativeMax(+options.maxWait || 0, wait);
    trailing = 'trailing' in options ? !!options.trailing : trailing;
  }

  function cancel() {
    if (timeoutId) {
      clearTimeout(timeoutId);
    }
    if (maxTimeoutId) {
      clearTimeout(maxTimeoutId);
    }
    lastCalled = 0;
    maxTimeoutId = timeoutId = trailingCall = undefined;
  }

  function complete(isCalled, id) {
    if (id) {
      clearTimeout(id);
    }
    maxTimeoutId = timeoutId = trailingCall = undefined;
    if (isCalled) {
      lastCalled = now();
      result = func.apply(thisArg, args);
      if (!timeoutId && !maxTimeoutId) {
        args = thisArg = undefined;
      }
    }
  }

  function delayed() {
    var remaining = wait - (now() - stamp);
    if (remaining <= 0 || remaining > wait) {
      complete(trailingCall, maxTimeoutId);
    } else {
      timeoutId = setTimeout(delayed, remaining);
    }
  }

  function maxDelayed() {
    complete(trailing, timeoutId);
  }

  function debounced() {
    args = arguments;
    stamp = now();
    thisArg = this;
    trailingCall = trailing && (timeoutId || !leading);

    if (maxWait === false) {
      var leadingCall = leading && !timeoutId;
    } else {
      if (!maxTimeoutId && !leading) {
        lastCalled = stamp;
      }
      var remaining = maxWait - (stamp - lastCalled),
          isCalled = remaining <= 0 || remaining > maxWait;

      if (isCalled) {
        if (maxTimeoutId) {
          maxTimeoutId = clearTimeout(maxTimeoutId);
        }
        lastCalled = stamp;
        result = func.apply(thisArg, args);
      }
      else if (!maxTimeoutId) {
        maxTimeoutId = setTimeout(maxDelayed, remaining);
      }
    }
    if (isCalled && timeoutId) {
      timeoutId = clearTimeout(timeoutId);
    }
    else if (!timeoutId && wait !== maxWait) {
      timeoutId = setTimeout(delayed, wait);
    }
    if (leadingCall) {
      isCalled = true;
      result = func.apply(thisArg, args);
    }
    if (isCalled && !timeoutId && !maxTimeoutId) {
      args = thisArg = undefined;
    }
    return result;
  }
  debounced.cancel = cancel;
  return debounced;
}

module.exports = debounce;

},{"../date/now":4,"../lang/isObject":33}],6:[function(_dereq_,module,exports){
/** Used as the `TypeError` message for "Functions" methods. */
var FUNC_ERROR_TEXT = 'Expected a function';

/* Native method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max;

/**
 * Creates a function that invokes `func` with the `this` binding of the
 * created function and arguments from `start` and beyond provided as an array.
 *
 * **Note:** This method is based on the [rest parameter](https://developer.mozilla.org/Web/JavaScript/Reference/Functions/rest_parameters).
 *
 * @static
 * @memberOf _
 * @category Function
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @returns {Function} Returns the new function.
 * @example
 *
 * var say = _.restParam(function(what, names) {
 *   return what + ' ' + _.initial(names).join(', ') +
 *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
 * });
 *
 * say('hello', 'fred', 'barney', 'pebbles');
 * // => 'hello fred, barney, & pebbles'
 */
function restParam(func, start) {
  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  start = nativeMax(start === undefined ? (func.length - 1) : (+start || 0), 0);
  return function() {
    var args = arguments,
        index = -1,
        length = nativeMax(args.length - start, 0),
        rest = Array(length);

    while (++index < length) {
      rest[index] = args[start + index];
    }
    switch (start) {
      case 0: return func.call(this, rest);
      case 1: return func.call(this, args[0], rest);
      case 2: return func.call(this, args[0], args[1], rest);
    }
    var otherArgs = Array(start + 1);
    index = -1;
    while (++index < start) {
      otherArgs[index] = args[index];
    }
    otherArgs[start] = rest;
    return func.apply(this, otherArgs);
  };
}

module.exports = restParam;

},{}],7:[function(_dereq_,module,exports){
var debounce = _dereq_('./debounce'),
    isObject = _dereq_('../lang/isObject');

/** Used as the `TypeError` message for "Functions" methods. */
var FUNC_ERROR_TEXT = 'Expected a function';

/**
 * Creates a throttled function that only invokes `func` at most once per
 * every `wait` milliseconds. The throttled function comes with a `cancel`
 * method to cancel delayed invocations. Provide an options object to indicate
 * that `func` should be invoked on the leading and/or trailing edge of the
 * `wait` timeout. Subsequent calls to the throttled function return the
 * result of the last `func` call.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked
 * on the trailing edge of the timeout only if the the throttled function is
 * invoked more than once during the `wait` timeout.
 *
 * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)
 * for details over the differences between `_.throttle` and `_.debounce`.
 *
 * @static
 * @memberOf _
 * @category Function
 * @param {Function} func The function to throttle.
 * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
 * @param {Object} [options] The options object.
 * @param {boolean} [options.leading=true] Specify invoking on the leading
 *  edge of the timeout.
 * @param {boolean} [options.trailing=true] Specify invoking on the trailing
 *  edge of the timeout.
 * @returns {Function} Returns the new throttled function.
 * @example
 *
 * // avoid excessively updating the position while scrolling
 * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
 *
 * // invoke `renewToken` when the click event is fired, but not more than once every 5 minutes
 * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {
 *   'trailing': false
 * }));
 *
 * // cancel a trailing throttled call
 * jQuery(window).on('popstate', throttled.cancel);
 */
function throttle(func, wait, options) {
  var leading = true,
      trailing = true;

  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  if (options === false) {
    leading = false;
  } else if (isObject(options)) {
    leading = 'leading' in options ? !!options.leading : leading;
    trailing = 'trailing' in options ? !!options.trailing : trailing;
  }
  return debounce(func, wait, { 'leading': leading, 'maxWait': +wait, 'trailing': trailing });
}

module.exports = throttle;

},{"../lang/isObject":33,"./debounce":5}],8:[function(_dereq_,module,exports){
/**
 * Copies the values of `source` to `array`.
 *
 * @private
 * @param {Array} source The array to copy values from.
 * @param {Array} [array=[]] The array to copy values to.
 * @returns {Array} Returns `array`.
 */
function arrayCopy(source, array) {
  var index = -1,
      length = source.length;

  array || (array = Array(length));
  while (++index < length) {
    array[index] = source[index];
  }
  return array;
}

module.exports = arrayCopy;

},{}],9:[function(_dereq_,module,exports){
/**
 * A specialized version of `_.forEach` for arrays without support for callback
 * shorthands and `this` binding.
 *
 * @private
 * @param {Array} array The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns `array`.
 */
function arrayEach(array, iteratee) {
  var index = -1,
      length = array.length;

  while (++index < length) {
    if (iteratee(array[index], index, array) === false) {
      break;
    }
  }
  return array;
}

module.exports = arrayEach;

},{}],10:[function(_dereq_,module,exports){
/**
 * Copies properties of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy properties from.
 * @param {Array} props The property names to copy.
 * @param {Object} [object={}] The object to copy properties to.
 * @returns {Object} Returns `object`.
 */
function baseCopy(source, props, object) {
  object || (object = {});

  var index = -1,
      length = props.length;

  while (++index < length) {
    var key = props[index];
    object[key] = source[key];
  }
  return object;
}

module.exports = baseCopy;

},{}],11:[function(_dereq_,module,exports){
var createBaseFor = _dereq_('./createBaseFor');

/**
 * The base implementation of `baseForIn` and `baseForOwn` which iterates
 * over `object` properties returned by `keysFunc` invoking `iteratee` for
 * each property. Iteratee functions may exit iteration early by explicitly
 * returning `false`.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @returns {Object} Returns `object`.
 */
var baseFor = createBaseFor();

module.exports = baseFor;

},{"./createBaseFor":18}],12:[function(_dereq_,module,exports){
var baseFor = _dereq_('./baseFor'),
    keysIn = _dereq_('../object/keysIn');

/**
 * The base implementation of `_.forIn` without support for callback
 * shorthands and `this` binding.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Object} Returns `object`.
 */
function baseForIn(object, iteratee) {
  return baseFor(object, iteratee, keysIn);
}

module.exports = baseForIn;

},{"../object/keysIn":39,"./baseFor":11}],13:[function(_dereq_,module,exports){
var arrayEach = _dereq_('./arrayEach'),
    baseMergeDeep = _dereq_('./baseMergeDeep'),
    isArray = _dereq_('../lang/isArray'),
    isArrayLike = _dereq_('./isArrayLike'),
    isObject = _dereq_('../lang/isObject'),
    isObjectLike = _dereq_('./isObjectLike'),
    isTypedArray = _dereq_('../lang/isTypedArray'),
    keys = _dereq_('../object/keys');

/**
 * The base implementation of `_.merge` without support for argument juggling,
 * multiple sources, and `this` binding `customizer` functions.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @param {Function} [customizer] The function to customize merged values.
 * @param {Array} [stackA=[]] Tracks traversed source objects.
 * @param {Array} [stackB=[]] Associates values with source counterparts.
 * @returns {Object} Returns `object`.
 */
function baseMerge(object, source, customizer, stackA, stackB) {
  if (!isObject(object)) {
    return object;
  }
  var isSrcArr = isArrayLike(source) && (isArray(source) || isTypedArray(source)),
      props = isSrcArr ? undefined : keys(source);

  arrayEach(props || source, function(srcValue, key) {
    if (props) {
      key = srcValue;
      srcValue = source[key];
    }
    if (isObjectLike(srcValue)) {
      stackA || (stackA = []);
      stackB || (stackB = []);
      baseMergeDeep(object, source, key, baseMerge, customizer, stackA, stackB);
    }
    else {
      var value = object[key],
          result = customizer ? customizer(value, srcValue, key, object, source) : undefined,
          isCommon = result === undefined;

      if (isCommon) {
        result = srcValue;
      }
      if ((result !== undefined || (isSrcArr && !(key in object))) &&
          (isCommon || (result === result ? (result !== value) : (value === value)))) {
        object[key] = result;
      }
    }
  });
  return object;
}

module.exports = baseMerge;

},{"../lang/isArray":30,"../lang/isObject":33,"../lang/isTypedArray":36,"../object/keys":38,"./arrayEach":9,"./baseMergeDeep":14,"./isArrayLike":21,"./isObjectLike":26}],14:[function(_dereq_,module,exports){
var arrayCopy = _dereq_('./arrayCopy'),
    isArguments = _dereq_('../lang/isArguments'),
    isArray = _dereq_('../lang/isArray'),
    isArrayLike = _dereq_('./isArrayLike'),
    isPlainObject = _dereq_('../lang/isPlainObject'),
    isTypedArray = _dereq_('../lang/isTypedArray'),
    toPlainObject = _dereq_('../lang/toPlainObject');

/**
 * A specialized version of `baseMerge` for arrays and objects which performs
 * deep merges and tracks traversed objects enabling objects with circular
 * references to be merged.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @param {string} key The key of the value to merge.
 * @param {Function} mergeFunc The function to merge values.
 * @param {Function} [customizer] The function to customize merged values.
 * @param {Array} [stackA=[]] Tracks traversed source objects.
 * @param {Array} [stackB=[]] Associates values with source counterparts.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function baseMergeDeep(object, source, key, mergeFunc, customizer, stackA, stackB) {
  var length = stackA.length,
      srcValue = source[key];

  while (length--) {
    if (stackA[length] == srcValue) {
      object[key] = stackB[length];
      return;
    }
  }
  var value = object[key],
      result = customizer ? customizer(value, srcValue, key, object, source) : undefined,
      isCommon = result === undefined;

  if (isCommon) {
    result = srcValue;
    if (isArrayLike(srcValue) && (isArray(srcValue) || isTypedArray(srcValue))) {
      result = isArray(value)
        ? value
        : (isArrayLike(value) ? arrayCopy(value) : []);
    }
    else if (isPlainObject(srcValue) || isArguments(srcValue)) {
      result = isArguments(value)
        ? toPlainObject(value)
        : (isPlainObject(value) ? value : {});
    }
    else {
      isCommon = false;
    }
  }
  // Add the source value to the stack of traversed objects and associate
  // it with its merged value.
  stackA.push(srcValue);
  stackB.push(result);

  if (isCommon) {
    // Recursively merge objects and arrays (susceptible to call stack limits).
    object[key] = mergeFunc(result, srcValue, customizer, stackA, stackB);
  } else if (result === result ? (result !== value) : (value === value)) {
    object[key] = result;
  }
}

module.exports = baseMergeDeep;

},{"../lang/isArguments":29,"../lang/isArray":30,"../lang/isPlainObject":34,"../lang/isTypedArray":36,"../lang/toPlainObject":37,"./arrayCopy":8,"./isArrayLike":21}],15:[function(_dereq_,module,exports){
var toObject = _dereq_('./toObject');

/**
 * The base implementation of `_.property` without support for deep paths.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @returns {Function} Returns the new function.
 */
function baseProperty(key) {
  return function(object) {
    return object == null ? undefined : toObject(object)[key];
  };
}

module.exports = baseProperty;

},{"./toObject":28}],16:[function(_dereq_,module,exports){
var identity = _dereq_('../utility/identity');

/**
 * A specialized version of `baseCallback` which only supports `this` binding
 * and specifying the number of arguments to provide to `func`.
 *
 * @private
 * @param {Function} func The function to bind.
 * @param {*} thisArg The `this` binding of `func`.
 * @param {number} [argCount] The number of arguments to provide to `func`.
 * @returns {Function} Returns the callback.
 */
function bindCallback(func, thisArg, argCount) {
  if (typeof func != 'function') {
    return identity;
  }
  if (thisArg === undefined) {
    return func;
  }
  switch (argCount) {
    case 1: return function(value) {
      return func.call(thisArg, value);
    };
    case 3: return function(value, index, collection) {
      return func.call(thisArg, value, index, collection);
    };
    case 4: return function(accumulator, value, index, collection) {
      return func.call(thisArg, accumulator, value, index, collection);
    };
    case 5: return function(value, other, key, object, source) {
      return func.call(thisArg, value, other, key, object, source);
    };
  }
  return function() {
    return func.apply(thisArg, arguments);
  };
}

module.exports = bindCallback;

},{"../utility/identity":42}],17:[function(_dereq_,module,exports){
var bindCallback = _dereq_('./bindCallback'),
    isIterateeCall = _dereq_('./isIterateeCall'),
    restParam = _dereq_('../function/restParam');

/**
 * Creates a `_.assign`, `_.defaults`, or `_.merge` function.
 *
 * @private
 * @param {Function} assigner The function to assign values.
 * @returns {Function} Returns the new assigner function.
 */
function createAssigner(assigner) {
  return restParam(function(object, sources) {
    var index = -1,
        length = object == null ? 0 : sources.length,
        customizer = length > 2 ? sources[length - 2] : undefined,
        guard = length > 2 ? sources[2] : undefined,
        thisArg = length > 1 ? sources[length - 1] : undefined;

    if (typeof customizer == 'function') {
      customizer = bindCallback(customizer, thisArg, 5);
      length -= 2;
    } else {
      customizer = typeof thisArg == 'function' ? thisArg : undefined;
      length -= (customizer ? 1 : 0);
    }
    if (guard && isIterateeCall(sources[0], sources[1], guard)) {
      customizer = length < 3 ? undefined : customizer;
      length = 1;
    }
    while (++index < length) {
      var source = sources[index];
      if (source) {
        assigner(object, source, customizer);
      }
    }
    return object;
  });
}

module.exports = createAssigner;

},{"../function/restParam":6,"./bindCallback":16,"./isIterateeCall":24}],18:[function(_dereq_,module,exports){
var toObject = _dereq_('./toObject');

/**
 * Creates a base function for `_.forIn` or `_.forInRight`.
 *
 * @private
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new base function.
 */
function createBaseFor(fromRight) {
  return function(object, iteratee, keysFunc) {
    var iterable = toObject(object),
        props = keysFunc(object),
        length = props.length,
        index = fromRight ? length : -1;

    while ((fromRight ? index-- : ++index < length)) {
      var key = props[index];
      if (iteratee(iterable[key], key, iterable) === false) {
        break;
      }
    }
    return object;
  };
}

module.exports = createBaseFor;

},{"./toObject":28}],19:[function(_dereq_,module,exports){
var baseProperty = _dereq_('./baseProperty');

/**
 * Gets the "length" property value of `object`.
 *
 * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)
 * that affects Safari on at least iOS 8.1-8.3 ARM64.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {*} Returns the "length" value.
 */
var getLength = baseProperty('length');

module.exports = getLength;

},{"./baseProperty":15}],20:[function(_dereq_,module,exports){
var isNative = _dereq_('../lang/isNative');

/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */
function getNative(object, key) {
  var value = object == null ? undefined : object[key];
  return isNative(value) ? value : undefined;
}

module.exports = getNative;

},{"../lang/isNative":32}],21:[function(_dereq_,module,exports){
var getLength = _dereq_('./getLength'),
    isLength = _dereq_('./isLength');

/**
 * Checks if `value` is array-like.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 */
function isArrayLike(value) {
  return value != null && isLength(getLength(value));
}

module.exports = isArrayLike;

},{"./getLength":19,"./isLength":25}],22:[function(_dereq_,module,exports){
/**
 * Checks if `value` is a host object in IE < 9.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a host object, else `false`.
 */
var isHostObject = (function() {
  try {
    Object({ 'toString': 0 } + '');
  } catch(e) {
    return function() { return false; };
  }
  return function(value) {
    // IE < 9 presents many host objects as `Object` objects that can coerce
    // to strings despite having improperly defined `toString` methods.
    return typeof value.toString != 'function' && typeof (value + '') == 'string';
  };
}());

module.exports = isHostObject;

},{}],23:[function(_dereq_,module,exports){
/** Used to detect unsigned integer values. */
var reIsUint = /^\d+$/;

/**
 * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)
 * of an array-like value.
 */
var MAX_SAFE_INTEGER = 9007199254740991;

/**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */
function isIndex(value, length) {
  value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;
  length = length == null ? MAX_SAFE_INTEGER : length;
  return value > -1 && value % 1 == 0 && value < length;
}

module.exports = isIndex;

},{}],24:[function(_dereq_,module,exports){
var isArrayLike = _dereq_('./isArrayLike'),
    isIndex = _dereq_('./isIndex'),
    isObject = _dereq_('../lang/isObject');

/**
 * Checks if the provided arguments are from an iteratee call.
 *
 * @private
 * @param {*} value The potential iteratee value argument.
 * @param {*} index The potential iteratee index or key argument.
 * @param {*} object The potential iteratee object argument.
 * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.
 */
function isIterateeCall(value, index, object) {
  if (!isObject(object)) {
    return false;
  }
  var type = typeof index;
  if (type == 'number'
      ? (isArrayLike(object) && isIndex(index, object.length))
      : (type == 'string' && index in object)) {
    var other = object[index];
    return value === value ? (value === other) : (other !== other);
  }
  return false;
}

module.exports = isIterateeCall;

},{"../lang/isObject":33,"./isArrayLike":21,"./isIndex":23}],25:[function(_dereq_,module,exports){
/**
 * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)
 * of an array-like value.
 */
var MAX_SAFE_INTEGER = 9007199254740991;

/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 */
function isLength(value) {
  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}

module.exports = isLength;

},{}],26:[function(_dereq_,module,exports){
/**
 * Checks if `value` is object-like.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 */
function isObjectLike(value) {
  return !!value && typeof value == 'object';
}

module.exports = isObjectLike;

},{}],27:[function(_dereq_,module,exports){
var isArguments = _dereq_('../lang/isArguments'),
    isArray = _dereq_('../lang/isArray'),
    isIndex = _dereq_('./isIndex'),
    isLength = _dereq_('./isLength'),
    isString = _dereq_('../lang/isString'),
    keysIn = _dereq_('../object/keysIn');

/** Used for native method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * A fallback implementation of `Object.keys` which creates an array of the
 * own enumerable property names of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function shimKeys(object) {
  var props = keysIn(object),
      propsLength = props.length,
      length = propsLength && object.length;

  var allowIndexes = !!length && isLength(length) &&
    (isArray(object) || isArguments(object) || isString(object));

  var index = -1,
      result = [];

  while (++index < propsLength) {
    var key = props[index];
    if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {
      result.push(key);
    }
  }
  return result;
}

module.exports = shimKeys;

},{"../lang/isArguments":29,"../lang/isArray":30,"../lang/isString":35,"../object/keysIn":39,"./isIndex":23,"./isLength":25}],28:[function(_dereq_,module,exports){
var isObject = _dereq_('../lang/isObject'),
    isString = _dereq_('../lang/isString'),
    support = _dereq_('../support');

/**
 * Converts `value` to an object if it's not one.
 *
 * @private
 * @param {*} value The value to process.
 * @returns {Object} Returns the object.
 */
function toObject(value) {
  if (support.unindexedChars && isString(value)) {
    var index = -1,
        length = value.length,
        result = Object(value);

    while (++index < length) {
      result[index] = value.charAt(index);
    }
    return result;
  }
  return isObject(value) ? value : Object(value);
}

module.exports = toObject;

},{"../lang/isObject":33,"../lang/isString":35,"../support":41}],29:[function(_dereq_,module,exports){
var isArrayLike = _dereq_('../internal/isArrayLike'),
    isObjectLike = _dereq_('../internal/isObjectLike');

/** Used for native method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Native method references. */
var propertyIsEnumerable = objectProto.propertyIsEnumerable;

/**
 * Checks if `value` is classified as an `arguments` object.
 *
 * @static
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
 * @example
 *
 * _.isArguments(function() { return arguments; }());
 * // => true
 *
 * _.isArguments([1, 2, 3]);
 * // => false
 */
function isArguments(value) {
  return isObjectLike(value) && isArrayLike(value) &&
    hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');
}

module.exports = isArguments;

},{"../internal/isArrayLike":21,"../internal/isObjectLike":26}],30:[function(_dereq_,module,exports){
var getNative = _dereq_('../internal/getNative'),
    isLength = _dereq_('../internal/isLength'),
    isObjectLike = _dereq_('../internal/isObjectLike');

/** `Object#toString` result references. */
var arrayTag = '[object Array]';

/** Used for native method references. */
var objectProto = Object.prototype;

/**
 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
 * of values.
 */
var objToString = objectProto.toString;

/* Native method references for those with the same name as other `lodash` methods. */
var nativeIsArray = getNative(Array, 'isArray');

/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(function() { return arguments; }());
 * // => false
 */
var isArray = nativeIsArray || function(value) {
  return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;
};

module.exports = isArray;

},{"../internal/getNative":20,"../internal/isLength":25,"../internal/isObjectLike":26}],31:[function(_dereq_,module,exports){
var isObject = _dereq_('./isObject');

/** `Object#toString` result references. */
var funcTag = '[object Function]';

/** Used for native method references. */
var objectProto = Object.prototype;

/**
 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
 * of values.
 */
var objToString = objectProto.toString;

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
function isFunction(value) {
  // The use of `Object#toString` avoids issues with the `typeof` operator
  // in older versions of Chrome and Safari which return 'function' for regexes
  // and Safari 8 which returns 'object' for typed array constructors.
  return isObject(value) && objToString.call(value) == funcTag;
}

module.exports = isFunction;

},{"./isObject":33}],32:[function(_dereq_,module,exports){
var isFunction = _dereq_('./isFunction'),
    isHostObject = _dereq_('../internal/isHostObject'),
    isObjectLike = _dereq_('../internal/isObjectLike');

/** Used to detect host constructors (Safari > 5). */
var reIsHostCtor = /^\[object .+?Constructor\]$/;

/** Used for native method references. */
var objectProto = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var fnToString = Function.prototype.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Used to detect if a method is native. */
var reIsNative = RegExp('^' +
  fnToString.call(hasOwnProperty).replace(/[\\^$.*+?()[\]{}|]/g, '\\$&')
  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
);

/**
 * Checks if `value` is a native function.
 *
 * @static
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function, else `false`.
 * @example
 *
 * _.isNative(Array.prototype.push);
 * // => true
 *
 * _.isNative(_);
 * // => false
 */
function isNative(value) {
  if (value == null) {
    return false;
  }
  if (isFunction(value)) {
    return reIsNative.test(fnToString.call(value));
  }
  return isObjectLike(value) && (isHostObject(value) ? reIsNative : reIsHostCtor).test(value);
}

module.exports = isNative;

},{"../internal/isHostObject":22,"../internal/isObjectLike":26,"./isFunction":31}],33:[function(_dereq_,module,exports){
/**
 * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.
 * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(1);
 * // => false
 */
function isObject(value) {
  // Avoid a V8 JIT bug in Chrome 19-20.
  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.
  var type = typeof value;
  return !!value && (type == 'object' || type == 'function');
}

module.exports = isObject;

},{}],34:[function(_dereq_,module,exports){
var baseForIn = _dereq_('../internal/baseForIn'),
    isArguments = _dereq_('./isArguments'),
    isHostObject = _dereq_('../internal/isHostObject'),
    isObjectLike = _dereq_('../internal/isObjectLike'),
    support = _dereq_('../support');

/** `Object#toString` result references. */
var objectTag = '[object Object]';

/** Used for native method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
 * of values.
 */
var objToString = objectProto.toString;

/**
 * Checks if `value` is a plain object, that is, an object created by the
 * `Object` constructor or one with a `[[Prototype]]` of `null`.
 *
 * **Note:** This method assumes objects created by the `Object` constructor
 * have no inherited enumerable properties.
 *
 * @static
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 * }
 *
 * _.isPlainObject(new Foo);
 * // => false
 *
 * _.isPlainObject([1, 2, 3]);
 * // => false
 *
 * _.isPlainObject({ 'x': 0, 'y': 0 });
 * // => true
 *
 * _.isPlainObject(Object.create(null));
 * // => true
 */
function isPlainObject(value) {
  var Ctor;

  // Exit early for non `Object` objects.
  if (!(isObjectLike(value) && objToString.call(value) == objectTag && !isHostObject(value) && !isArguments(value)) ||
      (!hasOwnProperty.call(value, 'constructor') && (Ctor = value.constructor, typeof Ctor == 'function' && !(Ctor instanceof Ctor)))) {
    return false;
  }
  // IE < 9 iterates inherited properties before own properties. If the first
  // iterated property is an object's own property then there are no inherited
  // enumerable properties.
  var result;
  if (support.ownLast) {
    baseForIn(value, function(subValue, key, object) {
      result = hasOwnProperty.call(object, key);
      return false;
    });
    return result !== false;
  }
  // In most environments an object's own properties are iterated before
  // its inherited properties. If the last iterated property is an object's
  // own property then there are no inherited enumerable properties.
  baseForIn(value, function(subValue, key) {
    result = key;
  });
  return result === undefined || hasOwnProperty.call(value, result);
}

module.exports = isPlainObject;

},{"../internal/baseForIn":12,"../internal/isHostObject":22,"../internal/isObjectLike":26,"../support":41,"./isArguments":29}],35:[function(_dereq_,module,exports){
var isObjectLike = _dereq_('../internal/isObjectLike');

/** `Object#toString` result references. */
var stringTag = '[object String]';

/** Used for native method references. */
var objectProto = Object.prototype;

/**
 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
 * of values.
 */
var objToString = objectProto.toString;

/**
 * Checks if `value` is classified as a `String` primitive or object.
 *
 * @static
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
 * @example
 *
 * _.isString('abc');
 * // => true
 *
 * _.isString(1);
 * // => false
 */
function isString(value) {
  return typeof value == 'string' || (isObjectLike(value) && objToString.call(value) == stringTag);
}

module.exports = isString;

},{"../internal/isObjectLike":26}],36:[function(_dereq_,module,exports){
var isLength = _dereq_('../internal/isLength'),
    isObjectLike = _dereq_('../internal/isObjectLike');

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    funcTag = '[object Function]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    objectTag = '[object Object]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    weakMapTag = '[object WeakMap]';

var arrayBufferTag = '[object ArrayBuffer]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/** Used to identify `toStringTag` values of typed arrays. */
var typedArrayTags = {};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
typedArrayTags[dateTag] = typedArrayTags[errorTag] =
typedArrayTags[funcTag] = typedArrayTags[mapTag] =
typedArrayTags[numberTag] = typedArrayTags[objectTag] =
typedArrayTags[regexpTag] = typedArrayTags[setTag] =
typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;

/** Used for native method references. */
var objectProto = Object.prototype;

/**
 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
 * of values.
 */
var objToString = objectProto.toString;

/**
 * Checks if `value` is classified as a typed array.
 *
 * @static
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
 * @example
 *
 * _.isTypedArray(new Uint8Array);
 * // => true
 *
 * _.isTypedArray([]);
 * // => false
 */
function isTypedArray(value) {
  return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];
}

module.exports = isTypedArray;

},{"../internal/isLength":25,"../internal/isObjectLike":26}],37:[function(_dereq_,module,exports){
var baseCopy = _dereq_('../internal/baseCopy'),
    keysIn = _dereq_('../object/keysIn');

/**
 * Converts `value` to a plain object flattening inherited enumerable
 * properties of `value` to own properties of the plain object.
 *
 * @static
 * @memberOf _
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {Object} Returns the converted plain object.
 * @example
 *
 * function Foo() {
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.assign({ 'a': 1 }, new Foo);
 * // => { 'a': 1, 'b': 2 }
 *
 * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
 * // => { 'a': 1, 'b': 2, 'c': 3 }
 */
function toPlainObject(value) {
  return baseCopy(value, keysIn(value));
}

module.exports = toPlainObject;

},{"../internal/baseCopy":10,"../object/keysIn":39}],38:[function(_dereq_,module,exports){
var getNative = _dereq_('../internal/getNative'),
    isArrayLike = _dereq_('../internal/isArrayLike'),
    isObject = _dereq_('../lang/isObject'),
    shimKeys = _dereq_('../internal/shimKeys'),
    support = _dereq_('../support');

/* Native method references for those with the same name as other `lodash` methods. */
var nativeKeys = getNative(Object, 'keys');

/**
 * Creates an array of the own enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects. See the
 * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)
 * for more details.
 *
 * @static
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keys(new Foo);
 * // => ['a', 'b'] (iteration order is not guaranteed)
 *
 * _.keys('hi');
 * // => ['0', '1']
 */
var keys = !nativeKeys ? shimKeys : function(object) {
  var Ctor = object == null ? undefined : object.constructor;
  if ((typeof Ctor == 'function' && Ctor.prototype === object) ||
      (typeof object == 'function' ? support.enumPrototypes : isArrayLike(object))) {
    return shimKeys(object);
  }
  return isObject(object) ? nativeKeys(object) : [];
};

module.exports = keys;

},{"../internal/getNative":20,"../internal/isArrayLike":21,"../internal/shimKeys":27,"../lang/isObject":33,"../support":41}],39:[function(_dereq_,module,exports){
var arrayEach = _dereq_('../internal/arrayEach'),
    isArguments = _dereq_('../lang/isArguments'),
    isArray = _dereq_('../lang/isArray'),
    isFunction = _dereq_('../lang/isFunction'),
    isIndex = _dereq_('../internal/isIndex'),
    isLength = _dereq_('../internal/isLength'),
    isObject = _dereq_('../lang/isObject'),
    isString = _dereq_('../lang/isString'),
    support = _dereq_('../support');

/** `Object#toString` result references. */
var arrayTag = '[object Array]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    funcTag = '[object Function]',
    numberTag = '[object Number]',
    objectTag = '[object Object]',
    regexpTag = '[object RegExp]',
    stringTag = '[object String]';

/** Used to fix the JScript `[[DontEnum]]` bug. */
var shadowProps = [
  'constructor', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable',
  'toLocaleString', 'toString', 'valueOf'
];

/** Used for native method references. */
var errorProto = Error.prototype,
    objectProto = Object.prototype,
    stringProto = String.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
 * of values.
 */
var objToString = objectProto.toString;

/** Used to avoid iterating over non-enumerable properties in IE < 9. */
var nonEnumProps = {};
nonEnumProps[arrayTag] = nonEnumProps[dateTag] = nonEnumProps[numberTag] = { 'constructor': true, 'toLocaleString': true, 'toString': true, 'valueOf': true };
nonEnumProps[boolTag] = nonEnumProps[stringTag] = { 'constructor': true, 'toString': true, 'valueOf': true };
nonEnumProps[errorTag] = nonEnumProps[funcTag] = nonEnumProps[regexpTag] = { 'constructor': true, 'toString': true };
nonEnumProps[objectTag] = { 'constructor': true };

arrayEach(shadowProps, function(key) {
  for (var tag in nonEnumProps) {
    if (hasOwnProperty.call(nonEnumProps, tag)) {
      var props = nonEnumProps[tag];
      props[key] = hasOwnProperty.call(props, key);
    }
  }
});

/**
 * Creates an array of the own and inherited enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects.
 *
 * @static
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keysIn(new Foo);
 * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
 */
function keysIn(object) {
  if (object == null) {
    return [];
  }
  if (!isObject(object)) {
    object = Object(object);
  }
  var length = object.length;

  length = (length && isLength(length) &&
    (isArray(object) || isArguments(object) || isString(object)) && length) || 0;

  var Ctor = object.constructor,
      index = -1,
      proto = (isFunction(Ctor) && Ctor.prototype) || objectProto,
      isProto = proto === object,
      result = Array(length),
      skipIndexes = length > 0,
      skipErrorProps = support.enumErrorProps && (object === errorProto || object instanceof Error),
      skipProto = support.enumPrototypes && isFunction(object);

  while (++index < length) {
    result[index] = (index + '');
  }
  // lodash skips the `constructor` property when it infers it's iterating
  // over a `prototype` object because IE < 9 can't set the `[[Enumerable]]`
  // attribute of an existing property and the `constructor` property of a
  // prototype defaults to non-enumerable.
  for (var key in object) {
    if (!(skipProto && key == 'prototype') &&
        !(skipErrorProps && (key == 'message' || key == 'name')) &&
        !(skipIndexes && isIndex(key, length)) &&
        !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
      result.push(key);
    }
  }
  if (support.nonEnumShadows && object !== objectProto) {
    var tag = object === stringProto ? stringTag : (object === errorProto ? errorTag : objToString.call(object)),
        nonEnums = nonEnumProps[tag] || nonEnumProps[objectTag];

    if (tag == objectTag) {
      proto = objectProto;
    }
    length = shadowProps.length;
    while (length--) {
      key = shadowProps[length];
      var nonEnum = nonEnums[key];
      if (!(isProto && nonEnum) &&
          (nonEnum ? hasOwnProperty.call(object, key) : object[key] !== proto[key])) {
        result.push(key);
      }
    }
  }
  return result;
}

module.exports = keysIn;

},{"../internal/arrayEach":9,"../internal/isIndex":23,"../internal/isLength":25,"../lang/isArguments":29,"../lang/isArray":30,"../lang/isFunction":31,"../lang/isObject":33,"../lang/isString":35,"../support":41}],40:[function(_dereq_,module,exports){
var baseMerge = _dereq_('../internal/baseMerge'),
    createAssigner = _dereq_('../internal/createAssigner');

/**
 * Recursively merges own enumerable properties of the source object(s), that
 * don't resolve to `undefined` into the destination object. Subsequent sources
 * overwrite property assignments of previous sources. If `customizer` is
 * provided it's invoked to produce the merged values of the destination and
 * source properties. If `customizer` returns `undefined` merging is handled
 * by the method instead. The `customizer` is bound to `thisArg` and invoked
 * with five arguments: (objectValue, sourceValue, key, object, source).
 *
 * @static
 * @memberOf _
 * @category Object
 * @param {Object} object The destination object.
 * @param {...Object} [sources] The source objects.
 * @param {Function} [customizer] The function to customize assigned values.
 * @param {*} [thisArg] The `this` binding of `customizer`.
 * @returns {Object} Returns `object`.
 * @example
 *
 * var users = {
 *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]
 * };
 *
 * var ages = {
 *   'data': [{ 'age': 36 }, { 'age': 40 }]
 * };
 *
 * _.merge(users, ages);
 * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }
 *
 * // using a customizer callback
 * var object = {
 *   'fruits': ['apple'],
 *   'vegetables': ['beet']
 * };
 *
 * var other = {
 *   'fruits': ['banana'],
 *   'vegetables': ['carrot']
 * };
 *
 * _.merge(object, other, function(a, b) {
 *   if (_.isArray(a)) {
 *     return a.concat(b);
 *   }
 * });
 * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }
 */
var merge = createAssigner(baseMerge);

module.exports = merge;

},{"../internal/baseMerge":13,"../internal/createAssigner":17}],41:[function(_dereq_,module,exports){
/** Used for native method references. */
var arrayProto = Array.prototype,
    errorProto = Error.prototype,
    objectProto = Object.prototype;

/** Native method references. */
var propertyIsEnumerable = objectProto.propertyIsEnumerable,
    splice = arrayProto.splice;

/**
 * An object environment feature flags.
 *
 * @static
 * @memberOf _
 * @type Object
 */
var support = {};

(function(x) {
  var Ctor = function() { this.x = x; },
      object = { '0': x, 'length': x },
      props = [];

  Ctor.prototype = { 'valueOf': x, 'y': x };
  for (var key in new Ctor) { props.push(key); }

  /**
   * Detect if `name` or `message` properties of `Error.prototype` are
   * enumerable by default (IE < 9, Safari < 5.1).
   *
   * @memberOf _.support
   * @type boolean
   */
  support.enumErrorProps = propertyIsEnumerable.call(errorProto, 'message') ||
    propertyIsEnumerable.call(errorProto, 'name');

  /**
   * Detect if `prototype` properties are enumerable by default.
   *
   * Firefox < 3.6, Opera > 9.50 - Opera < 11.60, and Safari < 5.1
   * (if the prototype or a property on the prototype has been set)
   * incorrectly set the `[[Enumerable]]` value of a function's `prototype`
   * property to `true`.
   *
   * @memberOf _.support
   * @type boolean
   */
  support.enumPrototypes = propertyIsEnumerable.call(Ctor, 'prototype');

  /**
   * Detect if properties shadowing those on `Object.prototype` are non-enumerable.
   *
   * In IE < 9 an object's own properties, shadowing non-enumerable ones,
   * are made non-enumerable as well (a.k.a the JScript `[[DontEnum]]` bug).
   *
   * @memberOf _.support
   * @type boolean
   */
  support.nonEnumShadows = !/valueOf/.test(props);

  /**
   * Detect if own properties are iterated after inherited properties (IE < 9).
   *
   * @memberOf _.support
   * @type boolean
   */
  support.ownLast = props[0] != 'x';

  /**
   * Detect if `Array#shift` and `Array#splice` augment array-like objects
   * correctly.
   *
   * Firefox < 10, compatibility modes of IE 8, and IE < 9 have buggy Array
   * `shift()` and `splice()` functions that fail to remove the last element,
   * `value[0]`, of array-like objects even though the "length" property is
   * set to `0`. The `shift()` method is buggy in compatibility modes of IE 8,
   * while `splice()` is buggy regardless of mode in IE < 9.
   *
   * @memberOf _.support
   * @type boolean
   */
  support.spliceObjects = (splice.call(object, 0, 1), !object[0]);

  /**
   * Detect lack of support for accessing string characters by index.
   *
   * IE < 8 can't access characters by index. IE 8 can only access characters
   * by index on string literals, not string objects.
   *
   * @memberOf _.support
   * @type boolean
   */
  support.unindexedChars = ('x'[0] + Object('x')[0]) != 'xx';
}(1, 0));

module.exports = support;

},{}],42:[function(_dereq_,module,exports){
/**
 * This method returns the first argument provided to it.
 *
 * @static
 * @memberOf _
 * @category Utility
 * @param {*} value Any value.
 * @returns {*} Returns `value`.
 * @example
 *
 * var object = { 'user': 'fred' };
 *
 * _.identity(object) === object;
 * // => true
 */
function identity(value) {
  return value;
}

module.exports = identity;

},{}],43:[function(_dereq_,module,exports){
'use strict';

var keys = _dereq_('object-keys');

module.exports = function hasSymbols() {
	if (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }
	if (typeof Symbol.iterator === 'symbol') { return true; }

	var obj = {};
	var sym = Symbol('test');
	if (typeof sym === 'string') { return false; }

	// temp disabled per https://github.com/ljharb/object.assign/issues/17
	// if (sym instanceof Symbol) { return false; }
	// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4
	// if (!(Object(sym) instanceof Symbol)) { return false; }

	var symVal = 42;
	obj[sym] = symVal;
	for (sym in obj) { return false; }
	if (keys(obj).length !== 0) { return false; }
	if (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }

	if (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }

	var syms = Object.getOwnPropertySymbols(obj);
	if (syms.length !== 1 || syms[0] !== sym) { return false; }

	if (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }

	if (typeof Object.getOwnPropertyDescriptor === 'function') {
		var descriptor = Object.getOwnPropertyDescriptor(obj, sym);
		if (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }
	}

	return true;
};

},{"object-keys":49}],44:[function(_dereq_,module,exports){
'use strict';

// modified from https://github.com/es-shims/es6-shim
var keys = _dereq_('object-keys');
var bind = _dereq_('function-bind');
var canBeObject = function (obj) {
	return typeof obj !== 'undefined' && obj !== null;
};
var hasSymbols = _dereq_('./hasSymbols')();
var toObject = Object;
var push = bind.call(Function.call, Array.prototype.push);
var propIsEnumerable = bind.call(Function.call, Object.prototype.propertyIsEnumerable);

module.exports = function assign(target, source1) {
	if (!canBeObject(target)) { throw new TypeError('target must be an object'); }
	var objTarget = toObject(target);
	var s, source, i, props, syms, value, key;
	for (s = 1; s < arguments.length; ++s) {
		source = toObject(arguments[s]);
		props = keys(source);
		if (hasSymbols && Object.getOwnPropertySymbols) {
			syms = Object.getOwnPropertySymbols(source);
			for (i = 0; i < syms.length; ++i) {
				key = syms[i];
				if (propIsEnumerable(source, key)) {
					push(props, key);
				}
			}
		}
		for (i = 0; i < props.length; ++i) {
			key = props[i];
			value = source[key];
			if (propIsEnumerable(source, key)) {
				objTarget[key] = value;
			}
		}
	}
	return objTarget;
};

},{"./hasSymbols":43,"function-bind":48,"object-keys":49}],45:[function(_dereq_,module,exports){
'use strict';

var defineProperties = _dereq_('define-properties');

var implementation = _dereq_('./implementation');
var getPolyfill = _dereq_('./polyfill');
var shim = _dereq_('./shim');

defineProperties(implementation, {
	implementation: implementation,
	getPolyfill: getPolyfill,
	shim: shim
});

module.exports = implementation;

},{"./implementation":44,"./polyfill":51,"./shim":52,"define-properties":46}],46:[function(_dereq_,module,exports){
'use strict';

var keys = _dereq_('object-keys');
var foreach = _dereq_('foreach');
var hasSymbols = typeof Symbol === 'function' && typeof Symbol() === 'symbol';

var toStr = Object.prototype.toString;

var isFunction = function (fn) {
	return typeof fn === 'function' && toStr.call(fn) === '[object Function]';
};

var arePropertyDescriptorsSupported = function () {
	var obj = {};
	try {
		Object.defineProperty(obj, 'x', { enumerable: false, value: obj });
        /* eslint-disable no-unused-vars, no-restricted-syntax */
        for (var _ in obj) { return false; }
        /* eslint-enable no-unused-vars, no-restricted-syntax */
		return obj.x === obj;
	} catch (e) { /* this is IE 8. */
		return false;
	}
};
var supportsDescriptors = Object.defineProperty && arePropertyDescriptorsSupported();

var defineProperty = function (object, name, value, predicate) {
	if (name in object && (!isFunction(predicate) || !predicate())) {
		return;
	}
	if (supportsDescriptors) {
		Object.defineProperty(object, name, {
			configurable: true,
			enumerable: false,
			value: value,
			writable: true
		});
	} else {
		object[name] = value;
	}
};

var defineProperties = function (object, map) {
	var predicates = arguments.length > 2 ? arguments[2] : {};
	var props = keys(map);
	if (hasSymbols) {
		props = props.concat(Object.getOwnPropertySymbols(map));
	}
	foreach(props, function (name) {
		defineProperty(object, name, map[name], predicates[name]);
	});
};

defineProperties.supportsDescriptors = !!supportsDescriptors;

module.exports = defineProperties;

},{"foreach":47,"object-keys":49}],47:[function(_dereq_,module,exports){

var hasOwn = Object.prototype.hasOwnProperty;
var toString = Object.prototype.toString;

module.exports = function forEach (obj, fn, ctx) {
    if (toString.call(fn) !== '[object Function]') {
        throw new TypeError('iterator must be a function');
    }
    var l = obj.length;
    if (l === +l) {
        for (var i = 0; i < l; i++) {
            fn.call(ctx, obj[i], i, obj);
        }
    } else {
        for (var k in obj) {
            if (hasOwn.call(obj, k)) {
                fn.call(ctx, obj[k], k, obj);
            }
        }
    }
};


},{}],48:[function(_dereq_,module,exports){
var ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';
var slice = Array.prototype.slice;
var toStr = Object.prototype.toString;
var funcType = '[object Function]';

module.exports = function bind(that) {
    var target = this;
    if (typeof target !== 'function' || toStr.call(target) !== funcType) {
        throw new TypeError(ERROR_MESSAGE + target);
    }
    var args = slice.call(arguments, 1);

    var binder = function () {
        if (this instanceof bound) {
            var result = target.apply(
                this,
                args.concat(slice.call(arguments))
            );
            if (Object(result) === result) {
                return result;
            }
            return this;
        } else {
            return target.apply(
                that,
                args.concat(slice.call(arguments))
            );
        }
    };

    var boundLength = Math.max(0, target.length - args.length);
    var boundArgs = [];
    for (var i = 0; i < boundLength; i++) {
        boundArgs.push('$' + i);
    }

    var bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);

    if (target.prototype) {
        var Empty = function Empty() {};
        Empty.prototype = target.prototype;
        bound.prototype = new Empty();
        Empty.prototype = null;
    }

    return bound;
};


},{}],49:[function(_dereq_,module,exports){
'use strict';

// modified from https://github.com/es-shims/es5-shim
var has = Object.prototype.hasOwnProperty;
var toStr = Object.prototype.toString;
var slice = Array.prototype.slice;
var isArgs = _dereq_('./isArguments');
var hasDontEnumBug = !({ toString: null }).propertyIsEnumerable('toString');
var hasProtoEnumBug = function () {}.propertyIsEnumerable('prototype');
var dontEnums = [
	'toString',
	'toLocaleString',
	'valueOf',
	'hasOwnProperty',
	'isPrototypeOf',
	'propertyIsEnumerable',
	'constructor'
];
var equalsConstructorPrototype = function (o) {
	var ctor = o.constructor;
	return ctor && ctor.prototype === o;
};
var blacklistedKeys = {
	$console: true,
	$frame: true,
	$frameElement: true,
	$frames: true,
	$parent: true,
	$self: true,
	$webkitIndexedDB: true,
	$webkitStorageInfo: true,
	$window: true
};
var hasAutomationEqualityBug = (function () {
	/* global window */
	if (typeof window === 'undefined') { return false; }
	for (var k in window) {
		try {
			if (!blacklistedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {
				try {
					equalsConstructorPrototype(window[k]);
				} catch (e) {
					return true;
				}
			}
		} catch (e) {
			return true;
		}
	}
	return false;
}());
var equalsConstructorPrototypeIfNotBuggy = function (o) {
	/* global window */
	if (typeof window === 'undefined' || !hasAutomationEqualityBug) {
		return equalsConstructorPrototype(o);
	}
	try {
		return equalsConstructorPrototype(o);
	} catch (e) {
		return false;
	}
};

var keysShim = function keys(object) {
	var isObject = object !== null && typeof object === 'object';
	var isFunction = toStr.call(object) === '[object Function]';
	var isArguments = isArgs(object);
	var isString = isObject && toStr.call(object) === '[object String]';
	var theKeys = [];

	if (!isObject && !isFunction && !isArguments) {
		throw new TypeError('Object.keys called on a non-object');
	}

	var skipProto = hasProtoEnumBug && isFunction;
	if (isString && object.length > 0 && !has.call(object, 0)) {
		for (var i = 0; i < object.length; ++i) {
			theKeys.push(String(i));
		}
	}

	if (isArguments && object.length > 0) {
		for (var j = 0; j < object.length; ++j) {
			theKeys.push(String(j));
		}
	} else {
		for (var name in object) {
			if (!(skipProto && name === 'prototype') && has.call(object, name)) {
				theKeys.push(String(name));
			}
		}
	}

	if (hasDontEnumBug) {
		var skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);

		for (var k = 0; k < dontEnums.length; ++k) {
			if (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {
				theKeys.push(dontEnums[k]);
			}
		}
	}
	return theKeys;
};

keysShim.shim = function shimObjectKeys() {
	if (Object.keys) {
		var keysWorksWithArguments = (function () {
			// Safari 5.0 bug
			return (Object.keys(arguments) || '').length === 2;
		}(1, 2));
		if (!keysWorksWithArguments) {
			var originalKeys = Object.keys;
			Object.keys = function keys(object) {
				if (isArgs(object)) {
					return originalKeys(slice.call(object));
				} else {
					return originalKeys(object);
				}
			};
		}
	} else {
		Object.keys = keysShim;
	}
	return Object.keys || keysShim;
};

module.exports = keysShim;

},{"./isArguments":50}],50:[function(_dereq_,module,exports){
'use strict';

var toStr = Object.prototype.toString;

module.exports = function isArguments(value) {
	var str = toStr.call(value);
	var isArgs = str === '[object Arguments]';
	if (!isArgs) {
		isArgs = str !== '[object Array]' &&
			value !== null &&
			typeof value === 'object' &&
			typeof value.length === 'number' &&
			value.length >= 0 &&
			toStr.call(value.callee) === '[object Function]';
	}
	return isArgs;
};

},{}],51:[function(_dereq_,module,exports){
'use strict';

var implementation = _dereq_('./implementation');

var lacksProperEnumerationOrder = function () {
	if (!Object.assign) {
		return false;
	}
	// v8, specifically in node 4.x, has a bug with incorrect property enumeration order
	// note: this does not detect the bug unless there's 20 characters
	var str = 'abcdefghijklmnopqrst';
	var letters = str.split('');
	var map = {};
	for (var i = 0; i < letters.length; ++i) {
		map[letters[i]] = letters[i];
	}
	var obj = Object.assign({}, map);
	var actual = '';
	for (var k in obj) {
		actual += k;
	}
	return str !== actual;
};

var assignHasPendingExceptions = function () {
	if (!Object.assign || !Object.preventExtensions) {
		return false;
	}
	// Firefox 37 still has "pending exception" logic in its Object.assign implementation,
	// which is 72% slower than our shim, and Firefox 40's native implementation.
	var thrower = Object.preventExtensions({ 1: 2 });
	try {
		Object.assign(thrower, 'xy');
	} catch (e) {
		return thrower[1] === 'y';
	}
};

module.exports = function getPolyfill() {
	if (!Object.assign) {
		return implementation;
	}
	if (lacksProperEnumerationOrder()) {
		return implementation;
	}
	if (assignHasPendingExceptions()) {
		return implementation;
	}
	return Object.assign;
};

},{"./implementation":44}],52:[function(_dereq_,module,exports){
'use strict';

var define = _dereq_('define-properties');
var getPolyfill = _dereq_('./polyfill');

module.exports = function shimAssign() {
	var polyfill = getPolyfill();
	define(
		Object,
		{ assign: polyfill },
		{ assign: function () { return Object.assign !== polyfill; } }
	);
	return polyfill;
};

},{"./polyfill":51,"define-properties":46}],53:[function(_dereq_,module,exports){
module.exports = SafeParseTuple

function SafeParseTuple(obj, reviver) {
    var json
    var error = null

    try {
        json = JSON.parse(obj, reviver)
    } catch (err) {
        error = err
    }

    return [error, json]
}

},{}],54:[function(_dereq_,module,exports){
function clean (s) {
  return s.replace(/\n\r?\s*/g, '')
}


module.exports = function tsml (sa) {
  var s = ''
    , i = 0

  for (; i < arguments.length; i++)
    s += clean(sa[i]) + (arguments[i + 1] || '')

  return s
}
},{}],55:[function(_dereq_,module,exports){
"use strict";
var window = _dereq_("global/window")
var once = _dereq_("once")
var isFunction = _dereq_("is-function")
var parseHeaders = _dereq_("parse-headers")
var xtend = _dereq_("xtend")

module.exports = createXHR
createXHR.XMLHttpRequest = window.XMLHttpRequest || noop
createXHR.XDomainRequest = "withCredentials" in (new createXHR.XMLHttpRequest()) ? createXHR.XMLHttpRequest : window.XDomainRequest

forEachArray(["get", "put", "post", "patch", "head", "delete"], function(method) {
    createXHR[method === "delete" ? "del" : method] = function(uri, options, callback) {
        options = initParams(uri, options, callback)
        options.method = method.toUpperCase()
        return _createXHR(options)
    }
})

function forEachArray(array, iterator) {
    for (var i = 0; i < array.length; i++) {
        iterator(array[i])
    }
}

function isEmpty(obj){
    for(var i in obj){
        if(obj.hasOwnProperty(i)) return false
    }
    return true
}

function initParams(uri, options, callback) {
    var params = uri

    if (isFunction(options)) {
        callback = options
        if (typeof uri === "string") {
            params = {uri:uri}
        }
    } else {
        params = xtend(options, {uri: uri})
    }

    params.callback = callback
    return params
}

function createXHR(uri, options, callback) {
    options = initParams(uri, options, callback)
    return _createXHR(options)
}

function _createXHR(options) {
    var callback = options.callback
    if(typeof callback === "undefined"){
        throw new Error("callback argument missing")
    }
    callback = once(callback)

    function readystatechange() {
        if (xhr.readyState === 4) {
            loadFunc()
        }
    }

    function getBody() {
        // Chrome with requestType=blob throws errors arround when even testing access to responseText
        var body = undefined

        if (xhr.response) {
            body = xhr.response
        } else if (xhr.responseType === "text" || !xhr.responseType) {
            body = xhr.responseText || xhr.responseXML
        }

        if (isJson) {
            try {
                body = JSON.parse(body)
            } catch (e) {}
        }

        return body
    }

    var failureResponse = {
                body: undefined,
                headers: {},
                statusCode: 0,
                method: method,
                url: uri,
                rawRequest: xhr
            }

    function errorFunc(evt) {
        clearTimeout(timeoutTimer)
        if(!(evt instanceof Error)){
            evt = new Error("" + (evt || "Unknown XMLHttpRequest Error") )
        }
        evt.statusCode = 0
        callback(evt, failureResponse)
    }

    // will load the data & process the response in a special response object
    function loadFunc() {
        if (aborted) return
        var status
        clearTimeout(timeoutTimer)
        if(options.useXDR && xhr.status===undefined) {
            //IE8 CORS GET successful response doesn't have a status field, but body is fine
            status = 200
        } else {
            status = (xhr.status === 1223 ? 204 : xhr.status)
        }
        var response = failureResponse
        var err = null

        if (status !== 0){
            response = {
                body: getBody(),
                statusCode: status,
                method: method,
                headers: {},
                url: uri,
                rawRequest: xhr
            }
            if(xhr.getAllResponseHeaders){ //remember xhr can in fact be XDR for CORS in IE
                response.headers = parseHeaders(xhr.getAllResponseHeaders())
            }
        } else {
            err = new Error("Internal XMLHttpRequest Error")
        }
        callback(err, response, response.body)

    }

    var xhr = options.xhr || null

    if (!xhr) {
        if (options.cors || options.useXDR) {
            xhr = new createXHR.XDomainRequest()
        }else{
            xhr = new createXHR.XMLHttpRequest()
        }
    }

    var key
    var aborted
    var uri = xhr.url = options.uri || options.url
    var method = xhr.method = options.method || "GET"
    var body = options.body || options.data || null
    var headers = xhr.headers = options.headers || {}
    var sync = !!options.sync
    var isJson = false
    var timeoutTimer

    if ("json" in options) {
        isJson = true
        headers["accept"] || headers["Accept"] || (headers["Accept"] = "application/json") //Don't override existing accept header declared by user
        if (method !== "GET" && method !== "HEAD") {
            headers["content-type"] || headers["Content-Type"] || (headers["Content-Type"] = "application/json") //Don't override existing accept header declared by user
            body = JSON.stringify(options.json)
        }
    }

    xhr.onreadystatechange = readystatechange
    xhr.onload = loadFunc
    xhr.onerror = errorFunc
    // IE9 must have onprogress be set to a unique function.
    xhr.onprogress = function () {
        // IE must die
    }
    xhr.ontimeout = errorFunc
    xhr.open(method, uri, !sync, options.username, options.password)
    //has to be after open
    if(!sync) {
        xhr.withCredentials = !!options.withCredentials
    }
    // Cannot set timeout with sync request
    // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly
    // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent
    if (!sync && options.timeout > 0 ) {
        timeoutTimer = setTimeout(function(){
            aborted=true//IE9 may still call readystatechange
            xhr.abort("timeout")
            var e = new Error("XMLHttpRequest timeout")
            e.code = "ETIMEDOUT"
            errorFunc(e)
        }, options.timeout )
    }

    if (xhr.setRequestHeader) {
        for(key in headers){
            if(headers.hasOwnProperty(key)){
                xhr.setRequestHeader(key, headers[key])
            }
        }
    } else if (options.headers && !isEmpty(options.headers)) {
        throw new Error("Headers cannot be set on an XDomainRequest object")
    }

    if ("responseType" in options) {
        xhr.responseType = options.responseType
    }

    if ("beforeSend" in options &&
        typeof options.beforeSend === "function"
    ) {
        options.beforeSend(xhr)
    }

    xhr.send(body)

    return xhr


}

function noop() {}

},{"global/window":2,"is-function":56,"once":57,"parse-headers":60,"xtend":61}],56:[function(_dereq_,module,exports){
module.exports = isFunction

var toString = Object.prototype.toString

function isFunction (fn) {
  var string = toString.call(fn)
  return string === '[object Function]' ||
    (typeof fn === 'function' && string !== '[object RegExp]') ||
    (typeof window !== 'undefined' &&
     // IE8 and below
     (fn === window.setTimeout ||
      fn === window.alert ||
      fn === window.confirm ||
      fn === window.prompt))
};

},{}],57:[function(_dereq_,module,exports){
module.exports = once

once.proto = once(function () {
  Object.defineProperty(Function.prototype, 'once', {
    value: function () {
      return once(this)
    },
    configurable: true
  })
})

function once (fn) {
  var called = false
  return function () {
    if (called) return
    called = true
    return fn.apply(this, arguments)
  }
}

},{}],58:[function(_dereq_,module,exports){
var isFunction = _dereq_('is-function')

module.exports = forEach

var toString = Object.prototype.toString
var hasOwnProperty = Object.prototype.hasOwnProperty

function forEach(list, iterator, context) {
    if (!isFunction(iterator)) {
        throw new TypeError('iterator must be a function')
    }

    if (arguments.length < 3) {
        context = this
    }
    
    if (toString.call(list) === '[object Array]')
        forEachArray(list, iterator, context)
    else if (typeof list === 'string')
        forEachString(list, iterator, context)
    else
        forEachObject(list, iterator, context)
}

function forEachArray(array, iterator, context) {
    for (var i = 0, len = array.length; i < len; i++) {
        if (hasOwnProperty.call(array, i)) {
            iterator.call(context, array[i], i, array)
        }
    }
}

function forEachString(string, iterator, context) {
    for (var i = 0, len = string.length; i < len; i++) {
        // no such thing as a sparse string.
        iterator.call(context, string.charAt(i), i, string)
    }
}

function forEachObject(object, iterator, context) {
    for (var k in object) {
        if (hasOwnProperty.call(object, k)) {
            iterator.call(context, object[k], k, object)
        }
    }
}

},{"is-function":56}],59:[function(_dereq_,module,exports){

exports = module.exports = trim;

function trim(str){
  return str.replace(/^\s*|\s*$/g, '');
}

exports.left = function(str){
  return str.replace(/^\s*/, '');
};

exports.right = function(str){
  return str.replace(/\s*$/, '');
};

},{}],60:[function(_dereq_,module,exports){
var trim = _dereq_('trim')
  , forEach = _dereq_('for-each')
  , isArray = function(arg) {
      return Object.prototype.toString.call(arg) === '[object Array]';
    }

module.exports = function (headers) {
  if (!headers)
    return {}

  var result = {}

  forEach(
      trim(headers).split('\n')
    , function (row) {
        var index = row.indexOf(':')
          , key = trim(row.slice(0, index)).toLowerCase()
          , value = trim(row.slice(index + 1))

        if (typeof(result[key]) === 'undefined') {
          result[key] = value
        } else if (isArray(result[key])) {
          result[key].push(value)
        } else {
          result[key] = [ result[key], value ]
        }
      }
  )

  return result
}
},{"for-each":58,"trim":59}],61:[function(_dereq_,module,exports){
module.exports = extend

var hasOwnProperty = Object.prototype.hasOwnProperty;

function extend() {
    var target = {}

    for (var i = 0; i < arguments.length; i++) {
        var source = arguments[i]

        for (var key in source) {
            if (hasOwnProperty.call(source, key)) {
                target[key] = source[key]
            }
        }
    }

    return target
}

},{}],62:[function(_dereq_,module,exports){
/**
 * @file big-play-button.js
 */
'use strict';

exports.__esModule = true;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _buttonJs = _dereq_('./button.js');

var _buttonJs2 = _interopRequireDefault(_buttonJs);

var _componentJs = _dereq_('./component.js');

var _componentJs2 = _interopRequireDefault(_componentJs);

/**
 * Initial play button. Shows before the video has played. The hiding of the
 * big play button is done via CSS and player states.
 *
 * @param {Object} player  Main Player
 * @param {Object=} options Object of option names and values
 * @extends Button
 * @class BigPlayButton
 */

var BigPlayButton = (function (_Button) {
  _inherits(BigPlayButton, _Button);

  function BigPlayButton(player, options) {
    _classCallCheck(this, BigPlayButton);

    _Button.call(this, player, options);
  }

  /**
   * Allow sub components to stack CSS class names
   *
   * @return {String} The constructed class name
   * @method buildCSSClass
   */

  BigPlayButton.prototype.buildCSSClass = function buildCSSClass() {
    return 'vjs-big-play-button';
  };

  /**
   * Handles click for play
   *
   * @method handleClick
   */

  BigPlayButton.prototype.handleClick = function handleClick() {
    this.player_.play();
  };

  return BigPlayButton;
})(_buttonJs2['default']);

BigPlayButton.prototype.controlText_ = 'Play Video';

_componentJs2['default'].registerComponent('BigPlayButton', BigPlayButton);
exports['default'] = BigPlayButton;
module.exports = exports['default'];

},{"./button.js":63,"./component.js":66}],63:[function(_dereq_,module,exports){
/**
 * @file button.js
 */
'use strict';

exports.__esModule = true;

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _clickableComponentJs = _dereq_('./clickable-component.js');

var _clickableComponentJs2 = _interopRequireDefault(_clickableComponentJs);

var _component = _dereq_('./component');

var _component2 = _interopRequireDefault(_component);

var _utilsEventsJs = _dereq_('./utils/events.js');

var Events = _interopRequireWildcard(_utilsEventsJs);

var _utilsFnJs = _dereq_('./utils/fn.js');

var Fn = _interopRequireWildcard(_utilsFnJs);

var _utilsLogJs = _dereq_('./utils/log.js');

var _utilsLogJs2 = _interopRequireDefault(_utilsLogJs);

var _globalDocument = _dereq_('global/document');

var _globalDocument2 = _interopRequireDefault(_globalDocument);

var _objectAssign = _dereq_('object.assign');

var _objectAssign2 = _interopRequireDefault(_objectAssign);

/**
 * Base class for all buttons
 *
 * @param {Object} player  Main Player
 * @param {Object=} options Object of option names and values
 * @extends ClickableComponent
 * @class Button
 */

var Button = (function (_ClickableComponent) {
  _inherits(Button, _ClickableComponent);

  function Button(player, options) {
    _classCallCheck(this, Button);

    _ClickableComponent.call(this, player, options);
  }

  /**
   * Create the component's DOM element
   *
   * @param {String=} type Element's node type. e.g. 'div'
   * @param {Object=} props An object of properties that should be set on the element
   * @param {Object=} attributes An object of attributes that should be set on the element
   * @return {Element}
   * @method createEl
   */

  Button.prototype.createEl = function createEl() {
    var tag = arguments.length <= 0 || arguments[0] === undefined ? 'button' : arguments[0];
    var props = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
    var attributes = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];

    props = _objectAssign2['default']({
      className: this.buildCSSClass()
    }, props);

    if (tag !== 'button') {
      _utilsLogJs2['default'].warn('Creating a Button with an HTML element of ' + tag + ' is deprecated; use ClickableComponent instead.');
    }

    // Add attributes for button element
    attributes = _objectAssign2['default']({
      type: 'button', // Necessary since the default button type is "submit"
      'aria-live': 'polite' // let the screen reader user know that the text of the button may change
    }, attributes);

    var el = _component2['default'].prototype.createEl.call(this, tag, props, attributes);

    this.createControlTextEl(el);

    return el;
  };

  /**
   * Adds a child component inside this button
   *
   * @param {String|Component} child The class name or instance of a child to add
   * @param {Object=} options Options, including options to be passed to children of the child.
   * @return {Component} The child component (created by this process if a string was used)
   * @deprecated
   * @method addChild
   */

  Button.prototype.addChild = function addChild(child) {
    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

    var className = this.constructor.name;
    _utilsLogJs2['default'].warn('Adding an actionable (user controllable) child to a Button (' + className + ') is not supported; use a ClickableComponent instead.');

    // Avoid the error message generated by ClickableComponent's addChild method
    return _component2['default'].prototype.addChild.call(this, child, options);
  };

  /**
   * Handle KeyPress (document level) - Extend with specific functionality for button
   *
   * @method handleKeyPress
   */

  Button.prototype.handleKeyPress = function handleKeyPress(event) {
    // Ignore Space (32) or Enter (13) key operation, which is handled by the browser for a button.
    if (event.which === 32 || event.which === 13) {} else {
      _ClickableComponent.prototype.handleKeyPress.call(this, event); // Pass keypress handling up for unsupported keys
    }
  };

  return Button;
})(_clickableComponentJs2['default']);

_component2['default'].registerComponent('Button', Button);
exports['default'] = Button;
module.exports = exports['default'];

},{"./clickable-component.js":64,"./component":66,"./utils/events.js":132,"./utils/fn.js":133,"./utils/log.js":136,"global/document":1,"object.assign":45}],64:[function(_dereq_,module,exports){
/**
 * @file button.js
 */
'use strict';

exports.__esModule = true;

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _component = _dereq_('./component');

var _component2 = _interopRequireDefault(_component);

var _utilsDomJs = _dereq_('./utils/dom.js');

var Dom = _interopRequireWildcard(_utilsDomJs);

var _utilsEventsJs = _dereq_('./utils/events.js');

var Events = _interopRequireWildcard(_utilsEventsJs);

var _utilsFnJs = _dereq_('./utils/fn.js');

var Fn = _interopRequireWildcard(_utilsFnJs);

var _utilsLogJs = _dereq_('./utils/log.js');

var _utilsLogJs2 = _interopRequireDefault(_utilsLogJs);

var _globalDocument = _dereq_('global/document');

var _globalDocument2 = _interopRequireDefault(_globalDocument);

var _objectAssign = _dereq_('object.assign');

var _objectAssign2 = _interopRequireDefault(_objectAssign);

/**
 * Clickable Component which is clickable or keyboard actionable, but is not a native HTML button
 *
 * @param {Object} player  Main Player
 * @param {Object=} options Object of option names and values
 * @extends Component
 * @class ClickableComponent
 */

var ClickableComponent = (function (_Component) {
  _inherits(ClickableComponent, _Component);

  function ClickableComponent(player, options) {
    _classCallCheck(this, ClickableComponent);

    _Component.call(this, player, options);

    this.emitTapEvents();

    this.on('tap', this.handleClick);
    this.on('click', this.handleClick);
    this.on('focus', this.handleFocus);
    this.on('blur', this.handleBlur);
  }

  /**
   * Create the component's DOM element
   *
   * @param {String=} type Element's node type. e.g. 'div'
   * @param {Object=} props An object of properties that should be set on the element
   * @param {Object=} attributes An object of attributes that should be set on the element
   * @return {Element}
   * @method createEl
   */

  ClickableComponent.prototype.createEl = function createEl() {
    var tag = arguments.length <= 0 || arguments[0] === undefined ? 'div' : arguments[0];
    var props = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
    var attributes = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];

    props = _objectAssign2['default']({
      className: this.buildCSSClass(),
      tabIndex: 0
    }, props);

    if (tag === 'button') {
      _utilsLogJs2['default'].error('Creating a ClickableComponent with an HTML element of ' + tag + ' is not supported; use a Button instead.');
    }

    // Add ARIA attributes for clickable element which is not a native HTML button
    attributes = _objectAssign2['default']({
      role: 'button',
      'aria-live': 'polite' // let the screen reader user know that the text of the element may change
    }, attributes);

    var el = _Component.prototype.createEl.call(this, tag, props, attributes);

    this.createControlTextEl(el);

    return el;
  };

  /**
   * create control text
   *
   * @param {Element} el Parent element for the control text
   * @return {Element}
   * @method controlText
   */

  ClickableComponent.prototype.createControlTextEl = function createControlTextEl(el) {
    this.controlTextEl_ = Dom.createEl('span', {
      className: 'vjs-control-text'
    });

    if (el) {
      el.appendChild(this.controlTextEl_);
    }

    this.controlText(this.controlText_);

    return this.controlTextEl_;
  };

  /**
   * Controls text - both request and localize
   *
   * @param {String} text Text for element
   * @return {String}
   * @method controlText
   */

  ClickableComponent.prototype.controlText = function controlText(text) {
    if (!text) return this.controlText_ || 'Need Text';

    this.controlText_ = text;
    this.controlTextEl_.innerHTML = this.localize(this.controlText_);

    return this;
  };

  /**
   * Allows sub components to stack CSS class names
   *
   * @return {String}
   * @method buildCSSClass
   */

  ClickableComponent.prototype.buildCSSClass = function buildCSSClass() {
    return 'vjs-control vjs-button ' + _Component.prototype.buildCSSClass.call(this);
  };

  /**
   * Adds a child component inside this clickable-component
   *
   * @param {String|Component} child The class name or instance of a child to add
   * @param {Object=} options Options, including options to be passed to children of the child.
   * @return {Component} The child component (created by this process if a string was used)
   * @method addChild
   */

  ClickableComponent.prototype.addChild = function addChild(child) {
    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

    // TODO: Fix adding an actionable child to a ClickableComponent; currently
    // it will cause issues with assistive technology (e.g. screen readers)
    // which support ARIA, since an element with role="button" cannot have
    // actionable child elements.

    //let className = this.constructor.name;
    //log.warn(`Adding a child to a ClickableComponent (${className}) can cause issues with assistive technology which supports ARIA, since an element with role="button" cannot have actionable child elements.`);

    return _Component.prototype.addChild.call(this, child, options);
  };

  /**
   * Handle Click - Override with specific functionality for component
   *
   * @method handleClick
   */

  ClickableComponent.prototype.handleClick = function handleClick() {};

  /**
   * Handle Focus - Add keyboard functionality to element
   *
   * @method handleFocus
   */

  ClickableComponent.prototype.handleFocus = function handleFocus() {
    Events.on(_globalDocument2['default'], 'keydown', Fn.bind(this, this.handleKeyPress));
  };

  /**
   * Handle KeyPress (document level) - Trigger click when Space or Enter key is pressed
   *
   * @method handleKeyPress
   */

  ClickableComponent.prototype.handleKeyPress = function handleKeyPress(event) {
    // Support Space (32) or Enter (13) key operation to fire a click event
    if (event.which === 32 || event.which === 13) {
      event.preventDefault();
      this.handleClick(event);
    } else if (_Component.prototype.handleKeyPress) {
      _Component.prototype.handleKeyPress.call(this, event); // Pass keypress handling up for unsupported keys
    }
  };

  /**
   * Handle Blur - Remove keyboard triggers
   *
   * @method handleBlur
   */

  ClickableComponent.prototype.handleBlur = function handleBlur() {
    Events.off(_globalDocument2['default'], 'keydown', Fn.bind(this, this.handleKeyPress));
  };

  return ClickableComponent;
})(_component2['default']);

_component2['default'].registerComponent('ClickableComponent', ClickableComponent);
exports['default'] = ClickableComponent;
module.exports = exports['default'];

},{"./component":66,"./utils/dom.js":131,"./utils/events.js":132,"./utils/fn.js":133,"./utils/log.js":136,"global/document":1,"object.assign":45}],65:[function(_dereq_,module,exports){
'use strict';

exports.__esModule = true;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _button = _dereq_('./button');

var _button2 = _interopRequireDefault(_button);

var _component = _dereq_('./component');

var _component2 = _interopRequireDefault(_component);

/**
 * The `CloseButton` component is a button which fires a "close" event
 * when it is activated.
 *
 * @extends Button
 * @class CloseButton
 */

var CloseButton = (function (_Button) {
  _inherits(CloseButton, _Button);

  function CloseButton(player, options) {
    _classCallCheck(this, CloseButton);

    _Button.call(this, player, options);
    this.controlText(options && options.controlText || this.localize('Close'));
  }

  CloseButton.prototype.buildCSSClass = function buildCSSClass() {
    return 'vjs-close-button ' + _Button.prototype.buildCSSClass.call(this);
  };

  CloseButton.prototype.handleClick = function handleClick() {
    this.trigger({ type: 'close', bubbles: false });
  };

  return CloseButton;
})(_button2['default']);

_component2['default'].registerComponent('CloseButton', CloseButton);
exports['default'] = CloseButton;
module.exports = exports['default'];

},{"./button":63,"./component":66}],66:[function(_dereq_,module,exports){
/**
 * @file component.js
 *
 * Player Component - Base class for all UI objects
 */

'use strict';

exports.__esModule = true;

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

var _globalWindow = _dereq_('global/window');

var _globalWindow2 = _interopRequireDefault(_globalWindow);

var _utilsDomJs = _dereq_('./utils/dom.js');

var Dom = _interopRequireWildcard(_utilsDomJs);

var _utilsFnJs = _dereq_('./utils/fn.js');

var Fn = _interopRequireWildcard(_utilsFnJs);

var _utilsGuidJs = _dereq_('./utils/guid.js');

var Guid = _interopRequireWildcard(_utilsGuidJs);

var _utilsEventsJs = _dereq_('./utils/events.js');

var Events = _interopRequireWildcard(_utilsEventsJs);

var _utilsLogJs = _dereq_('./utils/log.js');

var _utilsLogJs2 = _interopRequireDefault(_utilsLogJs);

var _utilsToTitleCaseJs = _dereq_('./utils/to-title-case.js');

var _utilsToTitleCaseJs2 = _interopRequireDefault(_utilsToTitleCaseJs);

var _objectAssign = _dereq_('object.assign');

var _objectAssign2 = _interopRequireDefault(_objectAssign);

var _utilsMergeOptionsJs = _dereq_('./utils/merge-options.js');

var _utilsMergeOptionsJs2 = _interopRequireDefault(_utilsMergeOptionsJs);

/**
 * Base UI Component class
 * Components are embeddable UI objects that are represented by both a
 * javascript object and an element in the DOM. They can be children of other
 * components, and can have many children themselves.
 * ```js
 *     // adding a button to the player
 *     var button = player.addChild('button');
 *     button.el(); // -> button element
 * ```
 * ```html
 *     <div class="video-js">
 *       <div class="vjs-button">Button</div>
 *     </div>
 * ```
 * Components are also event targets.
 * ```js
 *     button.on('click', function(){
 *       console.log('Button Clicked!');
 *     });
 *     button.trigger('customevent');
 * ```
 *
 * @param {Object} player  Main Player
 * @param {Object=} options Object of option names and values
 * @param {Function=} ready    Ready callback function
 * @class Component
 */

var Component = (function () {
  function Component(player, options, ready) {
    _classCallCheck(this, Component);

    // The component might be the player itself and we can't pass `this` to super
    if (!player && this.play) {
      this.player_ = player = this; // eslint-disable-line
    } else {
        this.player_ = player;
      }

    // Make a copy of prototype.options_ to protect against overriding defaults
    this.options_ = _utilsMergeOptionsJs2['default']({}, this.options_);

    // Updated options with supplied options
    options = this.options_ = _utilsMergeOptionsJs2['default'](this.options_, options);

    // Get ID from options or options element if one is supplied
    this.id_ = options.id || options.el && options.el.id;

    // If there was no ID from the options, generate one
    if (!this.id_) {
      // Don't require the player ID function in the case of mock players
      var id = player && player.id && player.id() || 'no_player';

      this.id_ = id + '_component_' + Guid.newGUID();
    }

    this.name_ = options.name || null;

    // Create element if one wasn't provided in options
    if (options.el) {
      this.el_ = options.el;
    } else if (options.createEl !== false) {
      this.el_ = this.createEl();
    }

    this.children_ = [];
    this.childIndex_ = {};
    this.childNameIndex_ = {};

    // Add any child components in options
    if (options.initChildren !== false) {
      this.initChildren();
    }

    this.ready(ready);
    // Don't want to trigger ready here or it will before init is actually
    // finished for all children that run this constructor

    if (options.reportTouchActivity !== false) {
      this.enableTouchActivity();
    }
  }

  /**
   * Dispose of the component and all child components
   *
   * @method dispose
   */

  Component.prototype.dispose = function dispose() {
    this.trigger({ type: 'dispose', bubbles: false });

    // Dispose all children.
    if (this.children_) {
      for (var i = this.children_.length - 1; i >= 0; i--) {
        if (this.children_[i].dispose) {
          this.children_[i].dispose();
        }
      }
    }

    // Delete child references
    this.children_ = null;
    this.childIndex_ = null;
    this.childNameIndex_ = null;

    // Remove all event listeners.
    this.off();

    // Remove element from DOM
    if (this.el_.parentNode) {
      this.el_.parentNode.removeChild(this.el_);
    }

    Dom.removeElData(this.el_);
    this.el_ = null;
  };

  /**
   * Return the component's player
   *
   * @return {Player}
   * @method player
   */

  Component.prototype.player = function player() {
    return this.player_;
  };

  /**
   * Deep merge of options objects
   * Whenever a property is an object on both options objects
   * the two properties will be merged using mergeOptions.
   *
   * ```js
   *     Parent.prototype.options_ = {
   *       optionSet: {
   *         'childOne': { 'foo': 'bar', 'asdf': 'fdsa' },
   *         'childTwo': {},
   *         'childThree': {}
   *       }
   *     }
   *     newOptions = {
   *       optionSet: {
   *         'childOne': { 'foo': 'baz', 'abc': '123' }
   *         'childTwo': null,
   *         'childFour': {}
   *       }
   *     }
   *
   *     this.options(newOptions);
   * ```
   * RESULT
   * ```js
   *     {
   *       optionSet: {
   *         'childOne': { 'foo': 'baz', 'asdf': 'fdsa', 'abc': '123' },
   *         'childTwo': null, // Disabled. Won't be initialized.
   *         'childThree': {},
   *         'childFour': {}
   *       }
   *     }
   * ```
   *
   * @param  {Object} obj Object of new option values
   * @return {Object}     A NEW object of this.options_ and obj merged
   * @method options
   */

  Component.prototype.options = function options(obj) {
    _utilsLogJs2['default'].warn('this.options() has been deprecated and will be moved to the constructor in 6.0');

    if (!obj) {
      return this.options_;
    }

    this.options_ = _utilsMergeOptionsJs2['default'](this.options_, obj);
    return this.options_;
  };

  /**
   * Get the component's DOM element
   * ```js
   *     var domEl = myComponent.el();
   * ```
   *
   * @return {Element}
   * @method el
   */

  Component.prototype.el = function el() {
    return this.el_;
  };

  /**
   * Create the component's DOM element
   *
   * @param  {String=} tagName  Element's node type. e.g. 'div'
   * @param  {Object=} properties An object of properties that should be set
   * @param  {Object=} attributes An object of attributes that should be set
   * @return {Element}
   * @method createEl
   */

  Component.prototype.createEl = function createEl(tagName, properties, attributes) {
    return Dom.createEl(tagName, properties, attributes);
  };

  Component.prototype.localize = function localize(string) {
    var code = this.player_.language && this.player_.language();
    var languages = this.player_.languages && this.player_.languages();

    if (!code || !languages) {
      return string;
    }

    var language = languages[code];

    if (language && language[string]) {
      return language[string];
    }

    var primaryCode = code.split('-')[0];
    var primaryLang = languages[primaryCode];

    if (primaryLang && primaryLang[string]) {
      return primaryLang[string];
    }

    return string;
  };

  /**
   * Return the component's DOM element where children are inserted.
   * Will either be the same as el() or a new element defined in createEl().
   *
   * @return {Element}
   * @method contentEl
   */

  Component.prototype.contentEl = function contentEl() {
    return this.contentEl_ || this.el_;
  };

  /**
   * Get the component's ID
   * ```js
   *     var id = myComponent.id();
   * ```
   *
   * @return {String}
   * @method id
   */

  Component.prototype.id = function id() {
    return this.id_;
  };

  /**
   * Get the component's name. The name is often used to reference the component.
   * ```js
   *     var name = myComponent.name();
   * ```
   *
   * @return {String}
   * @method name
   */

  Component.prototype.name = function name() {
    return this.name_;
  };

  /**
   * Get an array of all child components
   * ```js
   *     var kids = myComponent.children();
   * ```
   *
   * @return {Array} The children
   * @method children
   */

  Component.prototype.children = function children() {
    return this.children_;
  };

  /**
   * Returns a child component with the provided ID
   *
   * @return {Component}
   * @method getChildById
   */

  Component.prototype.getChildById = function getChildById(id) {
    return this.childIndex_[id];
  };

  /**
   * Returns a child component with the provided name
   *
   * @return {Component}
   * @method getChild
   */

  Component.prototype.getChild = function getChild(name) {
    return this.childNameIndex_[name];
  };

  /**
   * Adds a child component inside this component
   * ```js
   *     myComponent.el();
   *     // -> <div class='my-component'></div>
   *     myComponent.children();
   *     // [empty array]
   *
   *     var myButton = myComponent.addChild('MyButton');
   *     // -> <div class='my-component'><div class="my-button">myButton<div></div>
   *     // -> myButton === myComponent.children()[0];
   * ```
   * Pass in options for child constructors and options for children of the child
   * ```js
   *     var myButton = myComponent.addChild('MyButton', {
   *       text: 'Press Me',
   *       buttonChildExample: {
   *         buttonChildOption: true
   *       }
   *     });
   * ```
   *
   * @param {String|Component} child The class name or instance of a child to add
   * @param {Object=} options Options, including options to be passed to children of the child.
   * @return {Component} The child component (created by this process if a string was used)
   * @method addChild
   */

  Component.prototype.addChild = function addChild(child) {
    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

    var component = undefined;
    var componentName = undefined;

    // If child is a string, create nt with options
    if (typeof child === 'string') {
      componentName = child;

      // Options can also be specified as a boolean, so convert to an empty object if false.
      if (!options) {
        options = {};
      }

      // Same as above, but true is deprecated so show a warning.
      if (options === true) {
        _utilsLogJs2['default'].warn('Initializing a child component with `true` is deprecated. Children should be defined in an array when possible, but if necessary use an object instead of `true`.');
        options = {};
      }

      // If no componentClass in options, assume componentClass is the name lowercased
      // (e.g. playButton)
      var componentClassName = options.componentClass || _utilsToTitleCaseJs2['default'](componentName);

      // Set name through options
      options.name = componentName;

      // Create a new object & element for this controls set
      // If there's no .player_, this is a player
      var ComponentClass = Component.getComponent(componentClassName);

      if (!ComponentClass) {
        throw new Error('Component ' + componentClassName + ' does not exist');
      }

      // data stored directly on the videojs object may be
      // misidentified as a component to retain
      // backwards-compatibility with 4.x. check to make sure the
      // component class can be instantiated.
      if (typeof ComponentClass !== 'function') {
        return null;
      }

      component = new ComponentClass(this.player_ || this, options);

      // child is a component instance
    } else {
        component = child;
      }

    this.children_.push(component);

    if (typeof component.id === 'function') {
      this.childIndex_[component.id()] = component;
    }

    // If a name wasn't used to create the component, check if we can use the
    // name function of the component
    componentName = componentName || component.name && component.name();

    if (componentName) {
      this.childNameIndex_[componentName] = component;
    }

    // Add the UI object's element to the container div (box)
    // Having an element is not required
    if (typeof component.el === 'function' && component.el()) {
      this.contentEl().appendChild(component.el());
    }

    // Return so it can stored on parent object if desired.
    return component;
  };

  /**
   * Remove a child component from this component's list of children, and the
   * child component's element from this component's element
   *
   * @param  {Component} component Component to remove
   * @method removeChild
   */

  Component.prototype.removeChild = function removeChild(component) {
    if (typeof component === 'string') {
      component = this.getChild(component);
    }

    if (!component || !this.children_) {
      return;
    }

    var childFound = false;

    for (var i = this.children_.length - 1; i >= 0; i--) {
      if (this.children_[i] === component) {
        childFound = true;
        this.children_.splice(i, 1);
        break;
      }
    }

    if (!childFound) {
      return;
    }

    this.childIndex_[component.id()] = null;
    this.childNameIndex_[component.name()] = null;

    var compEl = component.el();

    if (compEl && compEl.parentNode === this.contentEl()) {
      this.contentEl().removeChild(component.el());
    }
  };

  /**
   * Add and initialize default child components from options
   * ```js
   *     // when an instance of MyComponent is created, all children in options
   *     // will be added to the instance by their name strings and options
   *     MyComponent.prototype.options_ = {
   *       children: [
   *         'myChildComponent'
   *       ],
   *       myChildComponent: {
   *         myChildOption: true
   *       }
   *     };
   *
   *     // Or when creating the component
   *     var myComp = new MyComponent(player, {
   *       children: [
   *         'myChildComponent'
   *       ],
   *       myChildComponent: {
   *         myChildOption: true
   *       }
   *     });
   * ```
   * The children option can also be an array of
   * child options objects (that also include a 'name' key).
   * This can be used if you have two child components of the
   * same type that need different options.
   * ```js
   *     var myComp = new MyComponent(player, {
   *       children: [
   *         'button',
   *         {
   *           name: 'button',
   *           someOtherOption: true
   *         },
   *         {
   *           name: 'button',
   *           someOtherOption: false
   *         }
   *       ]
   *     });
   * ```
   *
   * @method initChildren
   */

  Component.prototype.initChildren = function initChildren() {
    var _this = this;

    var children = this.options_.children;

    if (children) {
      (function () {
        // `this` is `parent`
        var parentOptions = _this.options_;

        var handleAdd = function handleAdd(child) {
          var name = child.name;
          var opts = child.opts;

          // Allow options for children to be set at the parent options
          // e.g. videojs(id, { controlBar: false });
          // instead of videojs(id, { children: { controlBar: false });
          if (parentOptions[name] !== undefined) {
            opts = parentOptions[name];
          }

          // Allow for disabling default components
          // e.g. options['children']['posterImage'] = false
          if (opts === false) {
            return;
          }

          // Allow options to be passed as a simple boolean if no configuration
          // is necessary.
          if (opts === true) {
            opts = {};
          }

          // We also want to pass the original player options to each component as well so they don't need to
          // reach back into the player for options later.
          opts.playerOptions = _this.options_.playerOptions;

          // Create and add the child component.
          // Add a direct reference to the child by name on the parent instance.
          // If two of the same component are used, different names should be supplied
          // for each
          var newChild = _this.addChild(name, opts);
          if (newChild) {
            _this[name] = newChild;
          }
        };

        // Allow for an array of children details to passed in the options
        var workingChildren = undefined;
        var Tech = Component.getComponent('Tech');

        if (Array.isArray(children)) {
          workingChildren = children;
        } else {
          workingChildren = Object.keys(children);
        }

        workingChildren
        // children that are in this.options_ but also in workingChildren  would
        // give us extra children we do not want. So, we want to filter them out.
        .concat(Object.keys(_this.options_).filter(function (child) {
          return !workingChildren.some(function (wchild) {
            if (typeof wchild === 'string') {
              return child === wchild;
            } else {
              return child === wchild.name;
            }
          });
        })).map(function (child) {
          var name = undefined,
              opts = undefined;

          if (typeof child === 'string') {
            name = child;
            opts = children[name] || _this.options_[name] || {};
          } else {
            name = child.name;
            opts = child;
          }

          return { name: name, opts: opts };
        }).filter(function (child) {
          // we have to make sure that child.name isn't in the techOrder since
          // techs are registerd as Components but can't aren't compatible
          // See https://github.com/videojs/video.js/issues/2772
          var c = Component.getComponent(child.opts.componentClass || _utilsToTitleCaseJs2['default'](child.name));
          return c && !Tech.isTech(c);
        }).forEach(handleAdd);
      })();
    }
  };

  /**
   * Allows sub components to stack CSS class names
   *
   * @return {String} The constructed class name
   * @method buildCSSClass
   */

  Component.prototype.buildCSSClass = function buildCSSClass() {
    // Child classes can include a function that does:
    // return 'CLASS NAME' + this._super();
    return '';
  };

  /**
   * Add an event listener to this component's element
   * ```js
   *     var myFunc = function(){
   *       var myComponent = this;
   *       // Do something when the event is fired
   *     };
   *
   *     myComponent.on('eventType', myFunc);
   * ```
   * The context of myFunc will be myComponent unless previously bound.
   * Alternatively, you can add a listener to another element or component.
   * ```js
   *     myComponent.on(otherElement, 'eventName', myFunc);
   *     myComponent.on(otherComponent, 'eventName', myFunc);
   * ```
   * The benefit of using this over `VjsEvents.on(otherElement, 'eventName', myFunc)`
   * and `otherComponent.on('eventName', myFunc)` is that this way the listeners
   * will be automatically cleaned up when either component is disposed.
   * It will also bind myComponent as the context of myFunc.
   * **NOTE**: When using this on elements in the page other than window
   * and document (both permanent), if you remove the element from the DOM
   * you need to call `myComponent.trigger(el, 'dispose')` on it to clean up
   * references to it and allow the browser to garbage collect it.
   *
   * @param  {String|Component} first   The event type or other component
   * @param  {Function|String}      second  The event handler or event type
   * @param  {Function}             third   The event handler
   * @return {Component}
   * @method on
   */

  Component.prototype.on = function on(first, second, third) {
    var _this2 = this;

    if (typeof first === 'string' || Array.isArray(first)) {
      Events.on(this.el_, first, Fn.bind(this, second));

      // Targeting another component or element
    } else {
        (function () {
          var target = first;
          var type = second;
          var fn = Fn.bind(_this2, third);

          // When this component is disposed, remove the listener from the other component
          var removeOnDispose = function removeOnDispose() {
            return _this2.off(target, type, fn);
          };

          // Use the same function ID so we can remove it later it using the ID
          // of the original listener
          removeOnDispose.guid = fn.guid;
          _this2.on('dispose', removeOnDispose);

          // If the other component is disposed first we need to clean the reference
          // to the other component in this component's removeOnDispose listener
          // Otherwise we create a memory leak.
          var cleanRemover = function cleanRemover() {
            return _this2.off('dispose', removeOnDispose);
          };

          // Add the same function ID so we can easily remove it later
          cleanRemover.guid = fn.guid;

          // Check if this is a DOM node
          if (first.nodeName) {
            // Add the listener to the other element
            Events.on(target, type, fn);
            Events.on(target, 'dispose', cleanRemover);

            // Should be a component
            // Not using `instanceof Component` because it makes mock players difficult
          } else if (typeof first.on === 'function') {
              // Add the listener to the other component
              target.on(type, fn);
              target.on('dispose', cleanRemover);
            }
        })();
      }

    return this;
  };

  /**
   * Remove an event listener from this component's element
   * ```js
   *     myComponent.off('eventType', myFunc);
   * ```
   * If myFunc is excluded, ALL listeners for the event type will be removed.
   * If eventType is excluded, ALL listeners will be removed from the component.
   * Alternatively you can use `off` to remove listeners that were added to other
   * elements or components using `myComponent.on(otherComponent...`.
   * In this case both the event type and listener function are REQUIRED.
   * ```js
   *     myComponent.off(otherElement, 'eventType', myFunc);
   *     myComponent.off(otherComponent, 'eventType', myFunc);
   * ```
   *
   * @param  {String=|Component}  first  The event type or other component
   * @param  {Function=|String}       second The listener function or event type
   * @param  {Function=}              third  The listener for other component
   * @return {Component}
   * @method off
   */

  Component.prototype.off = function off(first, second, third) {
    if (!first || typeof first === 'string' || Array.isArray(first)) {
      Events.off(this.el_, first, second);
    } else {
      var target = first;
      var type = second;
      // Ensure there's at least a guid, even if the function hasn't been used
      var fn = Fn.bind(this, third);

      // Remove the dispose listener on this component,
      // which was given the same guid as the event listener
      this.off('dispose', fn);

      if (first.nodeName) {
        // Remove the listener
        Events.off(target, type, fn);
        // Remove the listener for cleaning the dispose listener
        Events.off(target, 'dispose', fn);
      } else {
        target.off(type, fn);
        target.off('dispose', fn);
      }
    }

    return this;
  };

  /**
   * Add an event listener to be triggered only once and then removed
   * ```js
   *     myComponent.one('eventName', myFunc);
   * ```
   * Alternatively you can add a listener to another element or component
   * that will be triggered only once.
   * ```js
   *     myComponent.one(otherElement, 'eventName', myFunc);
   *     myComponent.one(otherComponent, 'eventName', myFunc);
   * ```
   *
   * @param  {String|Component}  first   The event type or other component
   * @param  {Function|String}       second  The listener function or event type
   * @param  {Function=}             third   The listener function for other component
   * @return {Component}
   * @method one
   */

  Component.prototype.one = function one(first, second, third) {
    var _this3 = this,
        _arguments = arguments;

    if (typeof first === 'string' || Array.isArray(first)) {
      Events.one(this.el_, first, Fn.bind(this, second));
    } else {
      (function () {
        var target = first;
        var type = second;
        var fn = Fn.bind(_this3, third);

        var newFunc = function newFunc() {
          _this3.off(target, type, newFunc);
          fn.apply(null, _arguments);
        };

        // Keep the same function ID so we can remove it later
        newFunc.guid = fn.guid;

        _this3.on(target, type, newFunc);
      })();
    }

    return this;
  };

  /**
   * Trigger an event on an element
   * ```js
   *     myComponent.trigger('eventName');
   *     myComponent.trigger({'type':'eventName'});
   *     myComponent.trigger('eventName', {data: 'some data'});
   *     myComponent.trigger({'type':'eventName'}, {data: 'some data'});
   * ```
   *
   * @param  {Event|Object|String} event  A string (the type) or an event object with a type attribute
   * @param  {Object} [hash] data hash to pass along with the event
   * @return {Component}       self
   * @method trigger
   */

  Component.prototype.trigger = function trigger(event, hash) {
    Events.trigger(this.el_, event, hash);
    return this;
  };

  /**
   * Bind a listener to the component's ready state.
   * Different from event listeners in that if the ready event has already happened
   * it will trigger the function immediately.
   *
   * @param  {Function} fn Ready listener
   * @param  {Boolean} sync Exec the listener synchronously if component is ready
   * @return {Component}
   * @method ready
   */

  Component.prototype.ready = function ready(fn) {
    var sync = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];

    if (fn) {
      if (this.isReady_) {
        if (sync) {
          fn.call(this);
        } else {
          // Call the function asynchronously by default for consistency
          this.setTimeout(fn, 1);
        }
      } else {
        this.readyQueue_ = this.readyQueue_ || [];
        this.readyQueue_.push(fn);
      }
    }
    return this;
  };

  /**
   * Trigger the ready listeners
   *
   * @return {Component}
   * @method triggerReady
   */

  Component.prototype.triggerReady = function triggerReady() {
    this.isReady_ = true;

    // Ensure ready is triggerd asynchronously
    this.setTimeout(function () {
      var readyQueue = this.readyQueue_;

      // Reset Ready Queue
      this.readyQueue_ = [];

      if (readyQueue && readyQueue.length > 0) {
        readyQueue.forEach(function (fn) {
          fn.call(this);
        }, this);
      }

      // Allow for using event listeners also
      this.trigger('ready');
    }, 1);
  };

  /**
   * Finds a single DOM element matching `selector` within the component's
   * `contentEl` or another custom context.
   *
   * @method $
   * @param  {String} selector
   *         A valid CSS selector, which will be passed to `querySelector`.
   *
   * @param  {Element|String} [context=document]
   *         A DOM element within which to query. Can also be a selector
   *         string in which case the first matching element will be used
   *         as context. If missing (or no element matches selector), falls
   *         back to `document`.
   *
   * @return {Element|null}
   */

  Component.prototype.$ = function $(selector, context) {
    return Dom.$(selector, context || this.contentEl());
  };

  /**
   * Finds a all DOM elements matching `selector` within the component's
   * `contentEl` or another custom context.
   *
   * @method $$
   * @param  {String} selector
   *         A valid CSS selector, which will be passed to `querySelectorAll`.
   *
   * @param  {Element|String} [context=document]
   *         A DOM element within which to query. Can also be a selector
   *         string in which case the first matching element will be used
   *         as context. If missing (or no element matches selector), falls
   *         back to `document`.
   *
   * @return {NodeList}
   */

  Component.prototype.$$ = function $$(selector, context) {
    return Dom.$$(selector, context || this.contentEl());
  };

  /**
   * Check if a component's element has a CSS class name
   *
   * @param {String} classToCheck Classname to check
   * @return {Component}
   * @method hasClass
   */

  Component.prototype.hasClass = function hasClass(classToCheck) {
    return Dom.hasElClass(this.el_, classToCheck);
  };

  /**
   * Add a CSS class name to the component's element
   *
   * @param {String} classToAdd Classname to add
   * @return {Component}
   * @method addClass
   */

  Component.prototype.addClass = function addClass(classToAdd) {
    Dom.addElClass(this.el_, classToAdd);
    return this;
  };

  /**
   * Remove a CSS class name from the component's element
   *
   * @param {String} classToRemove Classname to remove
   * @return {Component}
   * @method removeClass
   */

  Component.prototype.removeClass = function removeClass(classToRemove) {
    Dom.removeElClass(this.el_, classToRemove);
    return this;
  };

  /**
   * Add or remove a CSS class name from the component's element
   *
   * @param  {String} classToToggle
   * @param  {Boolean|Function} [predicate]
   *         Can be a function that returns a Boolean. If `true`, the class
   *         will be added; if `false`, the class will be removed. If not
   *         given, the class will be added if not present and vice versa.
   *
   * @return {Component}
   * @method toggleClass
   */

  Component.prototype.toggleClass = function toggleClass(classToToggle, predicate) {
    Dom.toggleElClass(this.el_, classToToggle, predicate);
    return this;
  };

  /**
   * Show the component element if hidden
   *
   * @return {Component}
   * @method show
   */

  Component.prototype.show = function show() {
    this.removeClass('vjs-hidden');
    return this;
  };

  /**
   * Hide the component element if currently showing
   *
   * @return {Component}
   * @method hide
   */

  Component.prototype.hide = function hide() {
    this.addClass('vjs-hidden');
    return this;
  };

  /**
   * Lock an item in its visible state
   * To be used with fadeIn/fadeOut.
   *
   * @return {Component}
   * @private
   * @method lockShowing
   */

  Component.prototype.lockShowing = function lockShowing() {
    this.addClass('vjs-lock-showing');
    return this;
  };

  /**
   * Unlock an item to be hidden
   * To be used with fadeIn/fadeOut.
   *
   * @return {Component}
   * @private
   * @method unlockShowing
   */

  Component.prototype.unlockShowing = function unlockShowing() {
    this.removeClass('vjs-lock-showing');
    return this;
  };

  /**
   * Set or get the width of the component (CSS values)
   * Setting the video tag dimension values only works with values in pixels.
   * Percent values will not work.
   * Some percents can be used, but width()/height() will return the number + %,
   * not the actual computed width/height.
   *
   * @param  {Number|String=} num   Optional width number
   * @param  {Boolean} skipListeners Skip the 'resize' event trigger
   * @return {Component} This component, when setting the width
   * @return {Number|String} The width, when getting
   * @method width
   */

  Component.prototype.width = function width(num, skipListeners) {
    return this.dimension('width', num, skipListeners);
  };

  /**
   * Get or set the height of the component (CSS values)
   * Setting the video tag dimension values only works with values in pixels.
   * Percent values will not work.
   * Some percents can be used, but width()/height() will return the number + %,
   * not the actual computed width/height.
   *
   * @param  {Number|String=} num     New component height
   * @param  {Boolean=} skipListeners Skip the resize event trigger
   * @return {Component} This component, when setting the height
   * @return {Number|String} The height, when getting
   * @method height
   */

  Component.prototype.height = function height(num, skipListeners) {
    return this.dimension('height', num, skipListeners);
  };

  /**
   * Set both width and height at the same time
   *
   * @param  {Number|String} width Width of player
   * @param  {Number|String} height Height of player
   * @return {Component} The component
   * @method dimensions
   */

  Component.prototype.dimensions = function dimensions(width, height) {
    // Skip resize listeners on width for optimization
    return this.width(width, true).height(height);
  };

  /**
   * Get or set width or height
   * This is the shared code for the width() and height() methods.
   * All for an integer, integer + 'px' or integer + '%';
   * Known issue: Hidden elements officially have a width of 0. We're defaulting
   * to the style.width value and falling back to computedStyle which has the
   * hidden element issue. Info, but probably not an efficient fix:
   * http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/
   *
   * @param  {String} widthOrHeight  'width' or 'height'
   * @param  {Number|String=} num     New dimension
   * @param  {Boolean=} skipListeners Skip resize event trigger
   * @return {Component} The component if a dimension was set
   * @return {Number|String} The dimension if nothing was set
   * @private
   * @method dimension
   */

  Component.prototype.dimension = function dimension(widthOrHeight, num, skipListeners) {
    if (num !== undefined) {
      // Set to zero if null or literally NaN (NaN !== NaN)
      if (num === null || num !== num) {
        num = 0;
      }

      // Check if using css width/height (% or px) and adjust
      if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {
        this.el_.style[widthOrHeight] = num;
      } else if (num === 'auto') {
        this.el_.style[widthOrHeight] = '';
      } else {
        this.el_.style[widthOrHeight] = num + 'px';
      }

      // skipListeners allows us to avoid triggering the resize event when setting both width and height
      if (!skipListeners) {
        this.trigger('resize');
      }

      // Return component
      return this;
    }

    // Not setting a value, so getting it
    // Make sure element exists
    if (!this.el_) {
      return 0;
    }

    // Get dimension value from style
    var val = this.el_.style[widthOrHeight];
    var pxIndex = val.indexOf('px');

    if (pxIndex !== -1) {
      // Return the pixel value with no 'px'
      return parseInt(val.slice(0, pxIndex), 10);
    }

    // No px so using % or no style was set, so falling back to offsetWidth/height
    // If component has display:none, offset will return 0
    // TODO: handle display:none and no dimension style using px
    return parseInt(this.el_['offset' + _utilsToTitleCaseJs2['default'](widthOrHeight)], 10);
  };

  /**
   * Emit 'tap' events when touch events are supported
   * This is used to support toggling the controls through a tap on the video.
   * We're requiring them to be enabled because otherwise every component would
   * have this extra overhead unnecessarily, on mobile devices where extra
   * overhead is especially bad.
   *
   * @private
   * @method emitTapEvents
   */

  Component.prototype.emitTapEvents = function emitTapEvents() {
    // Track the start time so we can determine how long the touch lasted
    var touchStart = 0;
    var firstTouch = null;

    // Maximum movement allowed during a touch event to still be considered a tap
    // Other popular libs use anywhere from 2 (hammer.js) to 15, so 10 seems like a nice, round number.
    var tapMovementThreshold = 10;

    // The maximum length a touch can be while still being considered a tap
    var touchTimeThreshold = 200;

    var couldBeTap = undefined;

    this.on('touchstart', function (event) {
      // If more than one finger, don't consider treating this as a click
      if (event.touches.length === 1) {
        // Copy the touches object to prevent modifying the original
        firstTouch = _objectAssign2['default']({}, event.touches[0]);
        // Record start time so we can detect a tap vs. "touch and hold"
        touchStart = new Date().getTime();
        // Reset couldBeTap tracking
        couldBeTap = true;
      }
    });

    this.on('touchmove', function (event) {
      // If more than one finger, don't consider treating this as a click
      if (event.touches.length > 1) {
        couldBeTap = false;
      } else if (firstTouch) {
        // Some devices will throw touchmoves for all but the slightest of taps.
        // So, if we moved only a small distance, this could still be a tap
        var xdiff = event.touches[0].pageX - firstTouch.pageX;
        var ydiff = event.touches[0].pageY - firstTouch.pageY;
        var touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);

        if (touchDistance > tapMovementThreshold) {
          couldBeTap = false;
        }
      }
    });

    var noTap = function noTap() {
      couldBeTap = false;
    };

    // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s
    this.on('touchleave', noTap);
    this.on('touchcancel', noTap);

    // When the touch ends, measure how long it took and trigger the appropriate
    // event
    this.on('touchend', function (event) {
      firstTouch = null;
      // Proceed only if the touchmove/leave/cancel event didn't happen
      if (couldBeTap === true) {
        // Measure how long the touch lasted
        var touchTime = new Date().getTime() - touchStart;

        // Make sure the touch was less than the threshold to be considered a tap
        if (touchTime < touchTimeThreshold) {
          // Don't let browser turn this into a click
          event.preventDefault();
          this.trigger('tap');
          // It may be good to copy the touchend event object and change the
          // type to tap, if the other event properties aren't exact after
          // Events.fixEvent runs (e.g. event.target)
        }
      }
    });
  };

  /**
   * Report user touch activity when touch events occur
   * User activity is used to determine when controls should show/hide. It's
   * relatively simple when it comes to mouse events, because any mouse event
   * should show the controls. So we capture mouse events that bubble up to the
   * player and report activity when that happens.
   * With touch events it isn't as easy. We can't rely on touch events at the
   * player level, because a tap (touchstart + touchend) on the video itself on
   * mobile devices is meant to turn controls off (and on). User activity is
   * checked asynchronously, so what could happen is a tap event on the video
   * turns the controls off, then the touchend event bubbles up to the player,
   * which if it reported user activity, would turn the controls right back on.
   * (We also don't want to completely block touch events from bubbling up)
   * Also a touchmove, touch+hold, and anything other than a tap is not supposed
   * to turn the controls back on on a mobile device.
   * Here we're setting the default component behavior to report user activity
   * whenever touch events happen, and this can be turned off by components that
   * want touch events to act differently.
   *
   * @method enableTouchActivity
   */

  Component.prototype.enableTouchActivity = function enableTouchActivity() {
    // Don't continue if the root player doesn't support reporting user activity
    if (!this.player() || !this.player().reportUserActivity) {
      return;
    }

    // listener for reporting that the user is active
    var report = Fn.bind(this.player(), this.player().reportUserActivity);

    var touchHolding = undefined;

    this.on('touchstart', function () {
      report();
      // For as long as the they are touching the device or have their mouse down,
      // we consider them active even if they're not moving their finger or mouse.
      // So we want to continue to update that they are active
      this.clearInterval(touchHolding);
      // report at the same interval as activityCheck
      touchHolding = this.setInterval(report, 250);
    });

    var touchEnd = function touchEnd(event) {
      report();
      // stop the interval that maintains activity if the touch is holding
      this.clearInterval(touchHolding);
    };

    this.on('touchmove', report);
    this.on('touchend', touchEnd);
    this.on('touchcancel', touchEnd);
  };

  /**
   * Creates timeout and sets up disposal automatically.
   *
   * @param {Function} fn The function to run after the timeout.
   * @param {Number} timeout Number of ms to delay before executing specified function.
   * @return {Number} Returns the timeout ID
   * @method setTimeout
   */

  Component.prototype.setTimeout = function setTimeout(fn, timeout) {
    fn = Fn.bind(this, fn);

    // window.setTimeout would be preferable here, but due to some bizarre issue with Sinon and/or Phantomjs, we can't.
    var timeoutId = _globalWindow2['default'].setTimeout(fn, timeout);

    var disposeFn = function disposeFn() {
      this.clearTimeout(timeoutId);
    };

    disposeFn.guid = 'vjs-timeout-' + timeoutId;

    this.on('dispose', disposeFn);

    return timeoutId;
  };

  /**
   * Clears a timeout and removes the associated dispose listener
   *
   * @param {Number} timeoutId The id of the timeout to clear
   * @return {Number} Returns the timeout ID
   * @method clearTimeout
   */

  Component.prototype.clearTimeout = function clearTimeout(timeoutId) {
    _globalWindow2['default'].clearTimeout(timeoutId);

    var disposeFn = function disposeFn() {};

    disposeFn.guid = 'vjs-timeout-' + timeoutId;

    this.off('dispose', disposeFn);

    return timeoutId;
  };

  /**
   * Creates an interval and sets up disposal automatically.
   *
   * @param {Function} fn The function to run every N seconds.
   * @param {Number} interval Number of ms to delay before executing specified function.
   * @return {Number} Returns the interval ID
   * @method setInterval
   */

  Component.prototype.setInterval = function setInterval(fn, interval) {
    fn = Fn.bind(this, fn);

    var intervalId = _globalWindow2['default'].setInterval(fn, interval);

    var disposeFn = function disposeFn() {
      this.clearInterval(intervalId);
    };

    disposeFn.guid = 'vjs-interval-' + intervalId;

    this.on('dispose', disposeFn);

    return intervalId;
  };

  /**
   * Clears an interval and removes the associated dispose listener
   *
   * @param {Number} intervalId The id of the interval to clear
   * @return {Number} Returns the interval ID
   * @method clearInterval
   */

  Component.prototype.clearInterval = function clearInterval(intervalId) {
    _globalWindow2['default'].clearInterval(intervalId);

    var disposeFn = function disposeFn() {};

    disposeFn.guid = 'vjs-interval-' + intervalId;

    this.off('dispose', disposeFn);

    return intervalId;
  };

  /**
   * Registers a component
   *
   * @param {String} name Name of the component to register
   * @param {Object} comp The component to register
   * @static
   * @method registerComponent
   */

  Component.registerComponent = function registerComponent(name, comp) {
    if (!Component.components_) {
      Component.components_ = {};
    }

    Component.components_[name] = comp;
    return comp;
  };

  /**
   * Gets a component by name
   *
   * @param {String} name Name of the component to get
   * @return {Component}
   * @static
   * @method getComponent
   */

  Component.getComponent = function getComponent(name) {
    if (Component.components_ && Component.components_[name]) {
      return Component.components_[name];
    }

    if (_globalWindow2['default'] && _globalWindow2['default'].videojs && _globalWindow2['default'].videojs[name]) {
      _utilsLogJs2['default'].warn('The ' + name + ' component was added to the videojs object when it should be registered using videojs.registerComponent(name, component)');
      return _globalWindow2['default'].videojs[name];
    }
  };

  /**
   * Sets up the constructor using the supplied init method
   * or uses the init of the parent object
   *
   * @param {Object} props An object of properties
   * @static
   * @deprecated
   * @method extend
   */

  Component.extend = function extend(props) {
    props = props || {};

    _utilsLogJs2['default'].warn('Component.extend({}) has been deprecated, use videojs.extend(Component, {}) instead');

    // Set up the constructor using the supplied init method
    // or using the init of the parent object
    // Make sure to check the unobfuscated version for external libs
    var init = props.init || props.init || this.prototype.init || this.prototype.init || function () {};
    // In Resig's simple class inheritance (previously used) the constructor
    //  is a function that calls `this.init.apply(arguments)`
    // However that would prevent us from using `ParentObject.call(this);`
    //  in a Child constructor because the `this` in `this.init`
    //  would still refer to the Child and cause an infinite loop.
    // We would instead have to do
    //    `ParentObject.prototype.init.apply(this, arguments);`
    //  Bleh. We're not creating a _super() function, so it's good to keep
    //  the parent constructor reference simple.
    var subObj = function subObj() {
      init.apply(this, arguments);
    };

    // Inherit from this object's prototype
    subObj.prototype = Object.create(this.prototype);
    // Reset the constructor property for subObj otherwise
    // instances of subObj would have the constructor of the parent Object
    subObj.prototype.constructor = subObj;

    // Make the class extendable
    subObj.extend = Component.extend;

    // Extend subObj's prototype with functions and other properties from props
    for (var _name in props) {
      if (props.hasOwnProperty(_name)) {
        subObj.prototype[_name] = props[_name];
      }
    }

    return subObj;
  };

  return Component;
})();

Component.registerComponent('Component', Component);
exports['default'] = Component;
module.exports = exports['default'];

},{"./utils/dom.js":131,"./utils/events.js":132,"./utils/fn.js":133,"./utils/guid.js":135,"./utils/log.js":136,"./utils/merge-options.js":137,"./utils/to-title-case.js":140,"global/window":2,"object.assign":45}],67:[function(_dereq_,module,exports){
/**
 * @file control-bar.js
 */
'use strict';

exports.__esModule = true;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _componentJs = _dereq_('../component.js');

var _componentJs2 = _interopRequireDefault(_componentJs);

// Required children

var _playToggleJs = _dereq_('./play-toggle.js');

var _playToggleJs2 = _interopRequireDefault(_playToggleJs);

var _timeControlsCurrentTimeDisplayJs = _dereq_('./time-controls/current-time-display.js');

var _timeControlsCurrentTimeDisplayJs2 = _interopRequireDefault(_timeControlsCurrentTimeDisplayJs);

var _timeControlsDurationDisplayJs = _dereq_('./time-controls/duration-display.js');

var _timeControlsDurationDisplayJs2 = _interopRequireDefault(_timeControlsDurationDisplayJs);

var _timeControlsTimeDividerJs = _dereq_('./time-controls/time-divider.js');

var _timeControlsTimeDividerJs2 = _interopRequireDefault(_timeControlsTimeDividerJs);

var _timeControlsRemainingTimeDisplayJs = _dereq_('./time-controls/remaining-time-display.js');

var _timeControlsRemainingTimeDisplayJs2 = _interopRequireDefault(_timeControlsRemainingTimeDisplayJs);

var _liveDisplayJs = _dereq_('./live-display.js');

var _liveDisplayJs2 = _interopRequireDefault(_liveDisplayJs);

var _progressControlProgressControlJs = _dereq_('./progress-control/progress-control.js');

var _progressControlProgressControlJs2 = _interopRequireDefault(_progressControlProgressControlJs);

var _fullscreenToggleJs = _dereq_('./fullscreen-toggle.js');

var _fullscreenToggleJs2 = _interopRequireDefault(_fullscreenToggleJs);

var _volumeControlVolumeControlJs = _dereq_('./volume-control/volume-control.js');

var _volumeControlVolumeControlJs2 = _interopRequireDefault(_volumeControlVolumeControlJs);

var _volumeMenuButtonJs = _dereq_('./volume-menu-button.js');

var _volumeMenuButtonJs2 = _interopRequireDefault(_volumeMenuButtonJs);

var _muteToggleJs = _dereq_('./mute-toggle.js');

var _muteToggleJs2 = _interopRequireDefault(_muteToggleJs);

var _textTrackControlsChaptersButtonJs = _dereq_('./text-track-controls/chapters-button.js');

var _textTrackControlsChaptersButtonJs2 = _interopRequireDefault(_textTrackControlsChaptersButtonJs);

var _textTrackControlsSubtitlesButtonJs = _dereq_('./text-track-controls/subtitles-button.js');

var _textTrackControlsSubtitlesButtonJs2 = _interopRequireDefault(_textTrackControlsSubtitlesButtonJs);

var _textTrackControlsCaptionsButtonJs = _dereq_('./text-track-controls/captions-button.js');

var _textTrackControlsCaptionsButtonJs2 = _interopRequireDefault(_textTrackControlsCaptionsButtonJs);

var _playbackRateMenuPlaybackRateMenuButtonJs = _dereq_('./playback-rate-menu/playback-rate-menu-button.js');

var _playbackRateMenuPlaybackRateMenuButtonJs2 = _interopRequireDefault(_playbackRateMenuPlaybackRateMenuButtonJs);

var _spacerControlsCustomControlSpacerJs = _dereq_('./spacer-controls/custom-control-spacer.js');

var _spacerControlsCustomControlSpacerJs2 = _interopRequireDefault(_spacerControlsCustomControlSpacerJs);

/**
 * Container of main controls
 *
 * @extends Component
 * @class ControlBar
 */

var ControlBar = (function (_Component) {
  _inherits(ControlBar, _Component);

  function ControlBar() {
    _classCallCheck(this, ControlBar);

    _Component.apply(this, arguments);
  }

  /**
   * Create the component's DOM element
   *
   * @return {Element}
   * @method createEl
   */

  ControlBar.prototype.createEl = function createEl() {
    return _Component.prototype.createEl.call(this, 'div', {
      className: 'vjs-control-bar'
    }, {
      'role': 'group' // The control bar is a group, so it can contain menuitems
    });
  };

  return ControlBar;
})(_componentJs2['default']);

ControlBar.prototype.options_ = {
  loadEvent: 'play',
  children: ['playToggle', 'volumeMenuButton', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'subtitlesButton', 'captionsButton', 'fullscreenToggle']
};

_componentJs2['default'].registerComponent('ControlBar', ControlBar);
exports['default'] = ControlBar;
module.exports = exports['default'];

},{"../component.js":66,"./fullscreen-toggle.js":68,"./live-display.js":69,"./mute-toggle.js":70,"./play-toggle.js":71,"./playback-rate-menu/playback-rate-menu-button.js":72,"./progress-control/progress-control.js":77,"./spacer-controls/custom-control-spacer.js":79,"./text-track-controls/captions-button.js":82,"./text-track-controls/chapters-button.js":83,"./text-track-controls/subtitles-button.js":86,"./time-controls/current-time-display.js":89,"./time-controls/duration-display.js":90,"./time-controls/remaining-time-display.js":91,"./time-controls/time-divider.js":92,"./volume-control/volume-control.js":94,"./volume-menu-button.js":96}],68:[function(_dereq_,module,exports){
/**
 * @file fullscreen-toggle.js
 */
'use strict';

exports.__esModule = true;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _buttonJs = _dereq_('../button.js');

var _buttonJs2 = _interopRequireDefault(_buttonJs);

var _componentJs = _dereq_('../component.js');

var _componentJs2 = _interopRequireDefault(_componentJs);

/**
 * Toggle fullscreen video
 *
 * @extends Button
 * @class FullscreenToggle
 */

var FullscreenToggle = (function (_Button) {
  _inherits(FullscreenToggle, _Button);

  function FullscreenToggle() {
    _classCallCheck(this, FullscreenToggle);

    _Button.apply(this, arguments);
  }

  /**
   * Allow sub components to stack CSS class names
   *
   * @return {String} The constructed class name
   * @method buildCSSClass
   */

  FullscreenToggle.prototype.buildCSSClass = function buildCSSClass() {
    return 'vjs-fullscreen-control ' + _Button.prototype.buildCSSClass.call(this);
  };

  /**
   * Handles click for full screen
   *
   * @method handleClick
   */

  FullscreenToggle.prototype.handleClick = function handleClick() {
    if (!this.player_.isFullscreen()) {
      this.player_.requestFullscreen();
      this.controlText('Non-Fullscreen');
    } else {
      this.player_.exitFullscreen();
      this.controlText('Fullscreen');
    }
  };

  return FullscreenToggle;
})(_buttonJs2['default']);

FullscreenToggle.prototype.controlText_ = 'Fullscreen';

_componentJs2['default'].registerComponent('FullscreenToggle', FullscreenToggle);
exports['default'] = FullscreenToggle;
module.exports = exports['default'];

},{"../button.js":63,"../component.js":66}],69:[function(_dereq_,module,exports){
/**
 * @file live-display.js
 */
'use strict';

exports.__esModule = true;

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _component = _dereq_('../component');

var _component2 = _interopRequireDefault(_component);

var _utilsDomJs = _dereq_('../utils/dom.js');

var Dom = _interopRequireWildcard(_utilsDomJs);

/**
 * Displays the live indicator
 * TODO - Future make it click to snap to live
 *
 * @extends Component
 * @class LiveDisplay
 */

var LiveDisplay = (function (_Component) {
  _inherits(LiveDisplay, _Component);

  function LiveDisplay(player, options) {
    _classCallCheck(this, LiveDisplay);

    _Component.call(this, player, options);

    this.updateShowing();
    this.on(this.player(), 'durationchange', this.updateShowing);
  }

  /**
   * Create the component's DOM element
   *
   * @return {Element}
   * @method createEl
   */

  LiveDisplay.prototype.createEl = function createEl() {
    var el = _Component.prototype.createEl.call(this, 'div', {
      className: 'vjs-live-control vjs-control'
    });

    this.contentEl_ = Dom.createEl('div', {
      className: 'vjs-live-display',
      innerHTML: '<span class="vjs-control-text">' + this.localize('Stream Type') + '</span>' + this.localize('LIVE')
    }, {
      'aria-live': 'off'
    });

    el.appendChild(this.contentEl_);
    return el;
  };

  LiveDisplay.prototype.updateShowing = function updateShowing() {
    if (this.player().duration() === Infinity) {
      this.show();
    } else {
      this.hide();
    }
  };

  return LiveDisplay;
})(_component2['default']);

_component2['default'].registerComponent('LiveDisplay', LiveDisplay);
exports['default'] = LiveDisplay;
module.exports = exports['default'];

},{"../component":66,"../utils/dom.js":131}],70:[function(_dereq_,module,exports){
/**
 * @file mute-toggle.js
 */
'use strict';

exports.__esModule = true;

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _button = _dereq_('../button');

var _button2 = _interopRequireDefault(_button);

var _component = _dereq_('../component');

var _component2 = _interopRequireDefault(_component);

var _utilsDomJs = _dereq_('../utils/dom.js');

var Dom = _interopRequireWildcard(_utilsDomJs);

/**
 * A button component for muting the audio
 *
 * @param {Player|Object} player
 * @param {Object=} options
 * @extends Button
 * @class MuteToggle
 */

var MuteToggle = (function (_Button) {
  _inherits(MuteToggle, _Button);

  function MuteToggle(player, options) {
    _classCallCheck(this, MuteToggle);

    _Button.call(this, player, options);

    this.on(player, 'volumechange', this.update);

    // hide mute toggle if the current tech doesn't support volume control
    if (player.tech_ && player.tech_['featuresVolumeControl'] === false) {
      this.addClass('vjs-hidden');
    }

    this.on(player, 'loadstart', function () {
      this.update(); // We need to update the button to account for a default muted state.

      if (player.tech_['featuresVolumeControl'] === false) {
        this.addClass('vjs-hidden');
      } else {
        this.removeClass('vjs-hidden');
      }
    });
  }

  /**
   * Allow sub components to stack CSS class names
   *
   * @return {String} The constructed class name
   * @method buildCSSClass
   */

  MuteToggle.prototype.buildCSSClass = function buildCSSClass() {
    return 'vjs-mute-control ' + _Button.prototype.buildCSSClass.call(this);
  };

  /**
   * Handle click on mute
   *
   * @method handleClick
   */

  MuteToggle.prototype.handleClick = function handleClick() {
    this.player_.muted(this.player_.muted() ? false : true);
  };

  /**
   * Update volume
   *
   * @method update
   */

  MuteToggle.prototype.update = function update() {
    var vol = this.player_.volume(),
        level = 3;

    if (vol === 0 || this.player_.muted()) {
      level = 0;
    } else if (vol < 0.33) {
      level = 1;
    } else if (vol < 0.67) {
      level = 2;
    }

    // Don't rewrite the button text if the actual text doesn't change.
    // This causes unnecessary and confusing information for screen reader users.
    // This check is needed because this function gets called every time the volume level is changed.
    var toMute = this.player_.muted() ? 'Unmute' : 'Mute';
    if (this.controlText() !== toMute) {
      this.controlText(toMute);
    }

    /* TODO improve muted icon classes */
    for (var i = 0; i < 4; i++) {
      Dom.removeElClass(this.el_, 'vjs-vol-' + i);
    }
    Dom.addElClass(this.el_, 'vjs-vol-' + level);
  };

  return MuteToggle;
})(_button2['default']);

MuteToggle.prototype.controlText_ = 'Mute';

_component2['default'].registerComponent('MuteToggle', MuteToggle);
exports['default'] = MuteToggle;
module.exports = exports['default'];

},{"../button":63,"../component":66,"../utils/dom.js":131}],71:[function(_dereq_,module,exports){
/**
 * @file play-toggle.js
 */
'use strict';

exports.__esModule = true;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _buttonJs = _dereq_('../button.js');

var _buttonJs2 = _interopRequireDefault(_buttonJs);

var _componentJs = _dereq_('../component.js');

var _componentJs2 = _interopRequireDefault(_componentJs);

/**
 * Button to toggle between play and pause
 *
 * @param {Player|Object} player
 * @param {Object=} options
 * @extends Button
 * @class PlayToggle
 */

var PlayToggle = (function (_Button) {
  _inherits(PlayToggle, _Button);

  function PlayToggle(player, options) {
    _classCallCheck(this, PlayToggle);

    _Button.call(this, player, options);

    this.on(player, 'play', this.handlePlay);
    this.on(player, 'pause', this.handlePause);
  }

  /**
   * Allow sub components to stack CSS class names
   *
   * @return {String} The constructed class name
   * @method buildCSSClass
   */

  PlayToggle.prototype.buildCSSClass = function buildCSSClass() {
    return 'vjs-play-control ' + _Button.prototype.buildCSSClass.call(this);
  };

  /**
   * Handle click to toggle between play and pause
   *
   * @method handleClick
   */

  PlayToggle.prototype.handleClick = function handleClick() {
    if (this.player_.paused()) {
      this.player_.play();
    } else {
      this.player_.pause();
    }
  };

  /**
   * Add the vjs-playing class to the element so it can change appearance
   *
   * @method handlePlay
   */

  PlayToggle.prototype.handlePlay = function handlePlay() {
    this.removeClass('vjs-paused');
    this.addClass('vjs-playing');
    this.controlText('Pause'); // change the button text to "Pause"
  };

  /**
   * Add the vjs-paused class to the element so it can change appearance
   *
   * @method handlePause
   */

  PlayToggle.prototype.handlePause = function handlePause() {
    this.removeClass('vjs-playing');
    this.addClass('vjs-paused');
    this.controlText('Play'); // change the button text to "Play"
  };

  return PlayToggle;
})(_buttonJs2['default']);

PlayToggle.prototype.controlText_ = 'Play';

_componentJs2['default'].registerComponent('PlayToggle', PlayToggle);
exports['default'] = PlayToggle;
module.exports = exports['default'];

},{"../button.js":63,"../component.js":66}],72:[function(_dereq_,module,exports){
/**
 * @file playback-rate-menu-button.js
 */
'use strict';

exports.__esModule = true;

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _menuMenuButtonJs = _dereq_('../../menu/menu-button.js');

var _menuMenuButtonJs2 = _interopRequireDefault(_menuMenuButtonJs);

var _menuMenuJs = _dereq_('../../menu/menu.js');

var _menuMenuJs2 = _interopRequireDefault(_menuMenuJs);

var _playbackRateMenuItemJs = _dereq_('./playback-rate-menu-item.js');

var _playbackRateMenuItemJs2 = _interopRequireDefault(_playbackRateMenuItemJs);

var _componentJs = _dereq_('../../component.js');

var _componentJs2 = _interopRequireDefault(_componentJs);

var _utilsDomJs = _dereq_('../../utils/dom.js');

var Dom = _interopRequireWildcard(_utilsDomJs);

/**
 * The component for controlling the playback rate
 *
 * @param {Player|Object} player
 * @param {Object=} options
 * @extends MenuButton
 * @class PlaybackRateMenuButton
 */

var PlaybackRateMenuButton = (function (_MenuButton) {
  _inherits(PlaybackRateMenuButton, _MenuButton);

  function PlaybackRateMenuButton(player, options) {
    _classCallCheck(this, PlaybackRateMenuButton);

    _MenuButton.call(this, player, options);

    this.updateVisibility();
    this.updateLabel();

    this.on(player, 'loadstart', this.updateVisibility);
    this.on(player, 'ratechange', this.updateLabel);
  }

  /**
   * Create the component's DOM element
   *
   * @return {Element}
   * @method createEl
   */

  PlaybackRateMenuButton.prototype.createEl = function createEl() {
    var el = _MenuButton.prototype.createEl.call(this);

    this.labelEl_ = Dom.createEl('div', {
      className: 'vjs-playback-rate-value',
      innerHTML: 1.0
    });

    el.appendChild(this.labelEl_);

    return el;
  };

  /**
   * Allow sub components to stack CSS class names
   *
   * @return {String} The constructed class name
   * @method buildCSSClass
   */

  PlaybackRateMenuButton.prototype.buildCSSClass = function buildCSSClass() {
    return 'vjs-playback-rate ' + _MenuButton.prototype.buildCSSClass.call(this);
  };

  /**
   * Create the playback rate menu
   *
   * @return {Menu} Menu object populated with items
   * @method createMenu
   */

  PlaybackRateMenuButton.prototype.createMenu = function createMenu() {
    var menu = new _menuMenuJs2['default'](this.player());
    var rates = this.playbackRates();

    if (rates) {
      for (var i = rates.length - 1; i >= 0; i--) {
        menu.addChild(new _playbackRateMenuItemJs2['default'](this.player(), { 'rate': rates[i] + 'x' }));
      }
    }

    return menu;
  };

  /**
   * Updates ARIA accessibility attributes
   *
   * @method updateARIAAttributes
   */

  PlaybackRateMenuButton.prototype.updateARIAAttributes = function updateARIAAttributes() {
    // Current playback rate
    this.el().setAttribute('aria-valuenow', this.player().playbackRate());
  };

  /**
   * Handle menu item click
   *
   * @method handleClick
   */

  PlaybackRateMenuButton.prototype.handleClick = function handleClick() {
    // select next rate option
    var currentRate = this.player().playbackRate();
    var rates = this.playbackRates();

    // this will select first one if the last one currently selected
    var newRate = rates[0];
    for (var i = 0; i < rates.length; i++) {
      if (rates[i] > currentRate) {
        newRate = rates[i];
        break;
      }
    }
    this.player().playbackRate(newRate);
  };

  /**
   * Get possible playback rates
   *
   * @return {Array} Possible playback rates
   * @method playbackRates
   */

  PlaybackRateMenuButton.prototype.playbackRates = function playbackRates() {
    return this.options_['playbackRates'] || this.options_.playerOptions && this.options_.playerOptions['playbackRates'];
  };

  /**
   * Get supported playback rates
   *
   * @return {Array} Supported playback rates
   * @method playbackRateSupported
   */

  PlaybackRateMenuButton.prototype.playbackRateSupported = function playbackRateSupported() {
    return this.player().tech_ && this.player().tech_['featuresPlaybackRate'] && this.playbackRates() && this.playbackRates().length > 0;
  };

  /**
   * Hide playback rate controls when they're no playback rate options to select
   *
   * @method updateVisibility
   */

  PlaybackRateMenuButton.prototype.updateVisibility = function updateVisibility() {
    if (this.playbackRateSupported()) {
      this.removeClass('vjs-hidden');
    } else {
      this.addClass('vjs-hidden');
    }
  };

  /**
   * Update button label when rate changed
   *
   * @method updateLabel
   */

  PlaybackRateMenuButton.prototype.updateLabel = function updateLabel() {
    if (this.playbackRateSupported()) {
      this.labelEl_.innerHTML = this.player().playbackRate() + 'x';
    }
  };

  return PlaybackRateMenuButton;
})(_menuMenuButtonJs2['default']);

PlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';

_componentJs2['default'].registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);
exports['default'] = PlaybackRateMenuButton;
module.exports = exports['default'];

},{"../../component.js":66,"../../menu/menu-button.js":103,"../../menu/menu.js":105,"../../utils/dom.js":131,"./playback-rate-menu-item.js":73}],73:[function(_dereq_,module,exports){
/**
 * @file playback-rate-menu-item.js
 */
'use strict';

exports.__esModule = true;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _menuMenuItemJs = _dereq_('../../menu/menu-item.js');

var _menuMenuItemJs2 = _interopRequireDefault(_menuMenuItemJs);

var _componentJs = _dereq_('../../component.js');

var _componentJs2 = _interopRequireDefault(_componentJs);

/**
 * The specific menu item type for selecting a playback rate
 *
 * @param {Player|Object} player
 * @param {Object=} options
 * @extends MenuItem
 * @class PlaybackRateMenuItem
 */

var PlaybackRateMenuItem = (function (_MenuItem) {
  _inherits(PlaybackRateMenuItem, _MenuItem);

  function PlaybackRateMenuItem(player, options) {
    _classCallCheck(this, PlaybackRateMenuItem);

    var label = options['rate'];
    var rate = parseFloat(label, 10);

    // Modify options for parent MenuItem class's init.
    options['label'] = label;
    options['selected'] = rate === 1;
    _MenuItem.call(this, player, options);

    this.label = label;
    this.rate = rate;

    this.on(player, 'ratechange', this.update);
  }

  /**
   * Handle click on menu item
   *
   * @method handleClick
   */

  PlaybackRateMenuItem.prototype.handleClick = function handleClick() {
    _MenuItem.prototype.handleClick.call(this);
    this.player().playbackRate(this.rate);
  };

  /**
   * Update playback rate with selected rate
   *
   * @method update
   */

  PlaybackRateMenuItem.prototype.update = function update() {
    this.selected(this.player().playbackRate() === this.rate);
  };

  return PlaybackRateMenuItem;
})(_menuMenuItemJs2['default']);

PlaybackRateMenuItem.prototype.contentElType = 'button';

_componentJs2['default'].registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);
exports['default'] = PlaybackRateMenuItem;
module.exports = exports['default'];

},{"../../component.js":66,"../../menu/menu-item.js":104}],74:[function(_dereq_,module,exports){
/**
 * @file load-progress-bar.js
 */
'use strict';

exports.__esModule = true;

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _componentJs = _dereq_('../../component.js');

var _componentJs2 = _interopRequireDefault(_componentJs);

var _utilsDomJs = _dereq_('../../utils/dom.js');

var Dom = _interopRequireWildcard(_utilsDomJs);

/**
 * Shows load progress
 *
 * @param {Player|Object} player
 * @param {Object=} options
 * @extends Component
 * @class LoadProgressBar
 */

var LoadProgressBar = (function (_Component) {
  _inherits(LoadProgressBar, _Component);

  function LoadProgressBar(player, options) {
    _classCallCheck(this, LoadProgressBar);

    _Component.call(this, player, options);
    this.on(player, 'progress', this.update);
  }

  /**
   * Create the component's DOM element
   *
   * @return {Element}
   * @method createEl
   */

  LoadProgressBar.prototype.createEl = function createEl() {
    return _Component.prototype.createEl.call(this, 'div', {
      className: 'vjs-load-progress',
      innerHTML: '<span class="vjs-control-text"><span>' + this.localize('Loaded') + '</span>: 0%</span>'
    });
  };

  /**
   * Update progress bar
   *
   * @method update
   */

  LoadProgressBar.prototype.update = function update() {
    var buffered = this.player_.buffered();
    var duration = this.player_.duration();
    var bufferedEnd = this.player_.bufferedEnd();
    var children = this.el_.children;

    // get the percent width of a time compared to the total end
    var percentify = function percentify(time, end) {
      var percent = time / end || 0; // no NaN
      return (percent >= 1 ? 1 : percent) * 100 + '%';
    };

    // update the width of the progress bar
    this.el_.style.width = percentify(bufferedEnd, duration);

    // add child elements to represent the individual buffered time ranges
    for (var i = 0; i < buffered.length; i++) {
      var start = buffered.start(i);
      var end = buffered.end(i);
      var part = children[i];

      if (!part) {
        part = this.el_.appendChild(Dom.createEl());
      }

      // set the percent based on the width of the progress bar (bufferedEnd)
      part.style.left = percentify(start, bufferedEnd);
      part.style.width = percentify(end - start, bufferedEnd);
    }

    // remove unused buffered range elements
    for (var i = children.length; i > buffered.length; i--) {
      this.el_.removeChild(children[i - 1]);
    }
  };

  return LoadProgressBar;
})(_componentJs2['default']);

_componentJs2['default'].registerComponent('LoadProgressBar', LoadProgressBar);
exports['default'] = LoadProgressBar;
module.exports = exports['default'];

},{"../../component.js":66,"../../utils/dom.js":131}],75:[function(_dereq_,module,exports){
/**
 * @file mouse-time-display.js
 */
'use strict';

exports.__esModule = true;

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _componentJs = _dereq_('../../component.js');

var _componentJs2 = _interopRequireDefault(_componentJs);

var _utilsDomJs = _dereq_('../../utils/dom.js');

var Dom = _interopRequireWildcard(_utilsDomJs);

var _utilsFnJs = _dereq_('../../utils/fn.js');

var Fn = _interopRequireWildcard(_utilsFnJs);

var _utilsFormatTimeJs = _dereq_('../../utils/format-time.js');

var _utilsFormatTimeJs2 = _interopRequireDefault(_utilsFormatTimeJs);

var _lodashCompatFunctionThrottle = _dereq_('lodash-compat/function/throttle');

var _lodashCompatFunctionThrottle2 = _interopRequireDefault(_lodashCompatFunctionThrottle);

/**
 * The Mouse Time Display component shows the time you will seek to
 * when hovering over the progress bar
 *
 * @param {Player|Object} player
 * @param {Object=} options
 * @extends Component
 * @class MouseTimeDisplay
 */

var MouseTimeDisplay = (function (_Component) {
  _inherits(MouseTimeDisplay, _Component);

  function MouseTimeDisplay(player, options) {
    var _this = this;

    _classCallCheck(this, MouseTimeDisplay);

    _Component.call(this, player, options);

    this.update(0, 0);

    player.on('ready', function () {
      _this.on(player.controlBar.progressControl.el(), 'mousemove', _lodashCompatFunctionThrottle2['default'](Fn.bind(_this, _this.handleMouseMove), 25));
    });
  }

  /**
   * Create the component's DOM element
   *
   * @return {Element}
   * @method createEl
   */

  MouseTimeDisplay.prototype.createEl = function createEl() {
    return _Component.prototype.createEl.call(this, 'div', {
      className: 'vjs-mouse-display'
    });
  };

  MouseTimeDisplay.prototype.handleMouseMove = function handleMouseMove(event) {
    var duration = this.player_.duration();
    var newTime = this.calculateDistance(event) * duration;
    var position = event.pageX - Dom.findElPosition(this.el().parentNode).left;

    this.update(newTime, position);
  };

  MouseTimeDisplay.prototype.update = function update(newTime, position) {
	seek_time = newTime;
	var time = _utilsFormatTimeJs2['default'](newTime, this.player_.duration());
    
    this.el().style.left = position + 'px';
    this.el().setAttribute('data-current-time', time);
  };

  MouseTimeDisplay.prototype.calculateDistance = function calculateDistance(event) {
    return Dom.getPointerPosition(this.el().parentNode, event).x;
  };

  return MouseTimeDisplay;
})(_componentJs2['default']);

_componentJs2['default'].registerComponent('MouseTimeDisplay', MouseTimeDisplay);
exports['default'] = MouseTimeDisplay;
module.exports = exports['default'];

},{"../../component.js":66,"../../utils/dom.js":131,"../../utils/fn.js":133,"../../utils/format-time.js":134,"lodash-compat/function/throttle":7}],76:[function(_dereq_,module,exports){
/**
 * @file play-progress-bar.js
 */
'use strict';

exports.__esModule = true;

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _componentJs = _dereq_('../../component.js');

var _componentJs2 = _interopRequireDefault(_componentJs);

var _utilsFnJs = _dereq_('../../utils/fn.js');

var Fn = _interopRequireWildcard(_utilsFnJs);

var _utilsFormatTimeJs = _dereq_('../../utils/format-time.js');

var _utilsFormatTimeJs2 = _interopRequireDefault(_utilsFormatTimeJs);

/**
 * Shows play progress
 *
 * @param {Player|Object} player
 * @param {Object=} options
 * @extends Component
 * @class PlayProgressBar
 */

var PlayProgressBar = (function (_Component) {
  _inherits(PlayProgressBar, _Component);

  function PlayProgressBar(player, options) {
    _classCallCheck(this, PlayProgressBar);

    _Component.call(this, player, options);
    this.updateDataAttr();
    this.on(player, 'timeupdate', this.updateDataAttr);
    player.ready(Fn.bind(this, this.updateDataAttr));
  }

  /**
   * Create the component's DOM element
   *
   * @return {Element}
   * @method createEl
   */

  PlayProgressBar.prototype.createEl = function createEl() {
    return _Component.prototype.createEl.call(this, 'div', {
      className: 'vjs-play-progress vjs-slider-bar',
      innerHTML: '<span class="vjs-control-text"><span>' + this.localize('Progress') + '</span>: 0%</span>'
    });
  };

  PlayProgressBar.prototype.updateDataAttr = function updateDataAttr() {
    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();
    this.el_.setAttribute('data-current-time', _utilsFormatTimeJs2['default'](time, this.player_.duration()));
  };

  return PlayProgressBar;
})(_componentJs2['default']);

_componentJs2['default'].registerComponent('PlayProgressBar', PlayProgressBar);
exports['default'] = PlayProgressBar;
module.exports = exports['default'];

},{"../../component.js":66,"../../utils/fn.js":133,"../../utils/format-time.js":134}],77:[function(_dereq_,module,exports){
/**
 * @file progress-control.js
 */
'use strict';

exports.__esModule = true;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _componentJs = _dereq_('../../component.js');

var _componentJs2 = _interopRequireDefault(_componentJs);

var _seekBarJs = _dereq_('./seek-bar.js');

var _seekBarJs2 = _interopRequireDefault(_seekBarJs);

var _mouseTimeDisplayJs = _dereq_('./mouse-time-display.js');

var _mouseTimeDisplayJs2 = _interopRequireDefault(_mouseTimeDisplayJs);

/**
 * The Progress Control component contains the seek bar, load progress,
 * and play progress
 *
 * @param {Player|Object} player
 * @param {Object=} options
 * @extends Component
 * @class ProgressControl
 */

var ProgressControl = (function (_Component) {
  _inherits(ProgressControl, _Component);

  function ProgressControl() {
    _classCallCheck(this, ProgressControl);

    _Component.apply(this, arguments);
  }

  /**
   * Create the component's DOM element
   *
   * @return {Element}
   * @method createEl
   */

  ProgressControl.prototype.createEl = function createEl() {
    return _Component.prototype.createEl.call(this, 'div', {
      className: 'vjs-progress-control vjs-control'
    });
  };

  return ProgressControl;
})(_componentJs2['default']);

ProgressControl.prototype.options_ = {
  children: ['seekBar']
};

_componentJs2['default'].registerComponent('ProgressControl', ProgressControl);
exports['default'] = ProgressControl;
module.exports = exports['default'];

},{"../../component.js":66,"./mouse-time-display.js":75,"./seek-bar.js":78}],78:[function(_dereq_,module,exports){
/**
 * @file seek-bar.js
 */
'use strict';

exports.__esModule = true;

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _sliderSliderJs = _dereq_('../../slider/slider.js');

var _sliderSliderJs2 = _interopRequireDefault(_sliderSliderJs);

var _componentJs = _dereq_('../../component.js');

var _componentJs2 = _interopRequireDefault(_componentJs);

var _loadProgressBarJs = _dereq_('./load-progress-bar.js');

var _loadProgressBarJs2 = _interopRequireDefault(_loadProgressBarJs);

var _playProgressBarJs = _dereq_('./play-progress-bar.js');

var _playProgressBarJs2 = _interopRequireDefault(_playProgressBarJs);

var _utilsFnJs = _dereq_('../../utils/fn.js');

var Fn = _interopRequireWildcard(_utilsFnJs);

var _utilsFormatTimeJs = _dereq_('../../utils/format-time.js');

var _utilsFormatTimeJs2 = _interopRequireDefault(_utilsFormatTimeJs);

var _objectAssign = _dereq_('object.assign');

var _objectAssign2 = _interopRequireDefault(_objectAssign);

/**
 * Seek Bar and holder for the progress bars
 *
 * @param {Player|Object} player
 * @param {Object=} options
 * @extends Slider
 * @class SeekBar
 */

var SeekBar = (function (_Slider) {
  _inherits(SeekBar, _Slider);

  function SeekBar(player, options) {
    _classCallCheck(this, SeekBar);

    _Slider.call(this, player, options);
    this.on(player, 'timeupdate', this.updateARIAAttributes);
    player.ready(Fn.bind(this, this.updateARIAAttributes));
  }

  /**
   * Create the component's DOM element
   *
   * @return {Element}
   * @method createEl
   */

  SeekBar.prototype.createEl = function createEl() {
    return _Slider.prototype.createEl.call(this, 'div', {
      className: 'vjs-progress-holder'
    }, {
      'aria-label': 'video progress bar'
    });
  };

  /**
   * Update ARIA accessibility attributes
   *
   * @method updateARIAAttributes
   */

  SeekBar.prototype.updateARIAAttributes = function updateARIAAttributes() {
    // Allows for smooth scrubbing, when player can't keep up.
    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();
    this.el_.setAttribute('aria-valuenow', (this.getPercent() * 100).toFixed(2)); // machine readable value of progress bar (percentage complete)
    this.el_.setAttribute('aria-valuetext', _utilsFormatTimeJs2['default'](time, this.player_.duration())); // human readable value of progress bar (time complete)
  };

  /**
   * Get percentage of video played
   *
   * @return {Number} Percentage played
   * @method getPercent
   */

  SeekBar.prototype.getPercent = function getPercent() {
    var percent = this.player_.currentTime() / this.player_.duration();
    return percent >= 1 ? 1 : percent;
  };

  /**
   * Handle mouse down on seek bar
   *
   * @method handleMouseDown
   */

  SeekBar.prototype.handleMouseDown = function handleMouseDown(event) {
    _Slider.prototype.handleMouseDown.call(this, event);

    this.player_.scrubbing(true);

    this.videoWasPlaying = !this.player_.paused();
    this.player_.pause();
  };

  /**
   * Handle mouse move on seek bar
   *
   * @method handleMouseMove
   */

  SeekBar.prototype.handleMouseMove = function handleMouseMove(event) {
    var newTime = this.calculateDistance(event) * this.player_.duration();

    // Don't let video end while scrubbing.
    if (newTime === this.player_.duration()) {
      //0065334: Issue in IE 10, When drag the videos(mp4,youtube,vimeo) it is showing as completed.	
      if(seek_time != newTime) {
    	  newTime = seek_time;
      } else {
    	  newTime = newTime - 0.1;
      }
    }

    // Set new time (tell player to seek to new time)
    this.player_.currentTime(newTime);
  };

  /**
   * Handle mouse up on seek bar
   *
   * @method handleMouseUp
   */

  SeekBar.prototype.handleMouseUp = function handleMouseUp(event) {
    _Slider.prototype.handleMouseUp.call(this, event);

    this.player_.scrubbing(false);
    if (this.videoWasPlaying) {
      this.player_.play();
    }
  };

  /**
   * Move more quickly fast forward for keyboard-only users
   *
   * @method stepForward
   */

  SeekBar.prototype.stepForward = function stepForward() {
    this.player_.currentTime(this.player_.currentTime() + 5); // more quickly fast forward for keyboard-only users
  };

  /**
   * Move more quickly rewind for keyboard-only users
   *
   * @method stepBack
   */

  SeekBar.prototype.stepBack = function stepBack() {
    this.player_.currentTime(this.player_.currentTime() - 5); // more quickly rewind for keyboard-only users
  };

  return SeekBar;
})(_sliderSliderJs2['default']);

SeekBar.prototype.options_ = {
  children: ['loadProgressBar', 'mouseTimeDisplay', 'playProgressBar'],
  'barName': 'playProgressBar'
};

SeekBar.prototype.playerEvent = 'timeupdate';

_componentJs2['default'].registerComponent('SeekBar', SeekBar);
exports['default'] = SeekBar;
module.exports = exports['default'];

},{"../../component.js":66,"../../slider/slider.js":113,"../../utils/fn.js":133,"../../utils/format-time.js":134,"./load-progress-bar.js":74,"./play-progress-bar.js":76,"object.assign":45}],79:[function(_dereq_,module,exports){
/**
 * @file custom-control-spacer.js
 */
'use strict';

exports.__esModule = true;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _spacerJs = _dereq_('./spacer.js');

var _spacerJs2 = _interopRequireDefault(_spacerJs);

var _componentJs = _dereq_('../../component.js');

var _componentJs2 = _interopRequireDefault(_componentJs);

/**
 * Spacer specifically meant to be used as an insertion point for new plugins, etc.
 *
 * @extends Spacer
 * @class CustomControlSpacer
 */

var CustomControlSpacer = (function (_Spacer) {
  _inherits(CustomControlSpacer, _Spacer);

  function CustomControlSpacer() {
    _classCallCheck(this, CustomControlSpacer);

    _Spacer.apply(this, arguments);
  }

  /**
   * Allow sub components to stack CSS class names
   *
   * @return {String} The constructed class name
   * @method buildCSSClass
   */

  CustomControlSpacer.prototype.buildCSSClass = function buildCSSClass() {
    return 'vjs-custom-control-spacer ' + _Spacer.prototype.buildCSSClass.call(this);
  };

  /**
   * Create the component's DOM element
   *
   * @return {Element}
   * @method createEl
   */

  CustomControlSpacer.prototype.createEl = function createEl() {
    var el = _Spacer.prototype.createEl.call(this, {
      className: this.buildCSSClass()
    });

    // No-flex/table-cell mode requires there be some content
    // in the cell to fill the remaining space of the table.
    el.innerHTML = '&nbsp;';
    return el;
  };

  return CustomControlSpacer;
})(_spacerJs2['default']);

_componentJs2['default'].registerComponent('CustomControlSpacer', CustomControlSpacer);
exports['default'] = CustomControlSpacer;
module.exports = exports['default'];

},{"../../component.js":66,"./spacer.js":80}],80:[function(_dereq_,module,exports){
/**
 * @file spacer.js
 */
'use strict';

exports.__esModule = true;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _componentJs = _dereq_('../../component.js');

var _componentJs2 = _interopRequireDefault(_componentJs);

/**
 * Just an empty spacer element that can be used as an append point for plugins, etc.
 * Also can be used to create space between elements when necessary.
 *
 * @extends Component
 * @class Spacer
 */

var Spacer = (function (_Component) {
  _inherits(Spacer, _Component);

  function Spacer() {
    _classCallCheck(this, Spacer);

    _Component.apply(this, arguments);
  }

  /**
   * Allow sub components to stack CSS class names
   *
   * @return {String} The constructed class name
   * @method buildCSSClass
   */

  Spacer.prototype.buildCSSClass = function buildCSSClass() {
    return 'vjs-spacer ' + _Component.prototype.buildCSSClass.call(this);
  };

  /**
   * Create the component's DOM element
   *
   * @return {Element}
   * @method createEl
   */

  Spacer.prototype.createEl = function createEl() {
    return _Component.prototype.createEl.call(this, 'div', {
      className: this.buildCSSClass()
    });
  };

  return Spacer;
})(_componentJs2['default']);

_componentJs2['default'].registerComponent('Spacer', Spacer);

exports['default'] = Spacer;
module.exports = exports['default'];

},{"../../component.js":66}],81:[function(_dereq_,module,exports){
/**
 * @file caption-settings-menu-item.js
 */
'use strict';

exports.__esModule = true;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _textTrackMenuItemJs = _dereq_('./text-track-menu-item.js');

var _textTrackMenuItemJs2 = _interopRequireDefault(_textTrackMenuItemJs);

var _componentJs = _dereq_('../../component.js');

var _componentJs2 = _interopRequireDefault(_componentJs);

/**
 * The menu item for caption track settings menu
 *
 * @param {Player|Object} player
 * @param {Object=} options
 * @extends TextTrackMenuItem
 * @class CaptionSettingsMenuItem
 */

var CaptionSettingsMenuItem = (function (_TextTrackMenuItem) {
  _inherits(CaptionSettingsMenuItem, _TextTrackMenuItem);

  function CaptionSettingsMenuItem(player, options) {
    _classCallCheck(this, CaptionSettingsMenuItem);

    options['track'] = {
      'kind': options['kind'],
      'player': player,
      'label': options['kind'] + ' settings',
      'selectable': false,
      'default': false,
      mode: 'disabled'
    };

    // CaptionSettingsMenuItem has no concept of 'selected'
    options['selectable'] = false;

    _TextTrackMenuItem.call(this, player, options);
    this.addClass('vjs-texttrack-settings');
    this.controlText(', opens ' + options['kind'] + ' settings dialog');
  }

  /**
   * Handle click on menu item
   *
   * @method handleClick
   */

  CaptionSettingsMenuItem.prototype.handleClick = function handleClick() {
    this.player().getChild('textTrackSettings').show();
    this.player().getChild('textTrackSettings').el_.focus();
  };

  return CaptionSettingsMenuItem;
})(_textTrackMenuItemJs2['default']);

_componentJs2['default'].registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);
exports['default'] = CaptionSettingsMenuItem;
module.exports = exports['default'];

},{"../../component.js":66,"./text-track-menu-item.js":88}],82:[function(_dereq_,module,exports){
/**
 * @file captions-button.js
 */
'use strict';

exports.__esModule = true;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _textTrackButtonJs = _dereq_('./text-track-button.js');

var _textTrackButtonJs2 = _interopRequireDefault(_textTrackButtonJs);

var _componentJs = _dereq_('../../component.js');

var _componentJs2 = _interopRequireDefault(_componentJs);

var _captionSettingsMenuItemJs = _dereq_('./caption-settings-menu-item.js');

var _captionSettingsMenuItemJs2 = _interopRequireDefault(_captionSettingsMenuItemJs);

/**
 * The button component for toggling and selecting captions
 *
 * @param {Object} player  Player object
 * @param {Object=} options Object of option names and values
 * @param {Function=} ready    Ready callback function
 * @extends TextTrackButton
 * @class CaptionsButton
 */

var CaptionsButton = (function (_TextTrackButton) {
  _inherits(CaptionsButton, _TextTrackButton);

  function CaptionsButton(player, options, ready) {
    _classCallCheck(this, CaptionsButton);

    _TextTrackButton.call(this, player, options, ready);
    this.el_.setAttribute('aria-label', 'Captions Menu');
  }

  /**
   * Allow sub components to stack CSS class names
   *
   * @return {String} The constructed class name
   * @method buildCSSClass
   */

  CaptionsButton.prototype.buildCSSClass = function buildCSSClass() {
    return 'vjs-captions-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);
  };

  /**
   * Update caption menu items
   *
   * @method update
   */

  CaptionsButton.prototype.update = function update() {
    var threshold = 2;
    _TextTrackButton.prototype.update.call(this);

    // if native, then threshold is 1 because no settings button
    if (this.player().tech_ && this.player().tech_['featuresNativeTextTracks']) {
      threshold = 1;
    }

    if (this.items && this.items.length > threshold) {
      this.show();
    } else {
      this.hide();
    }
  };

  /**
   * Create caption menu items
   *
   * @return {Array} Array of menu items
   * @method createItems
   */

  CaptionsButton.prototype.createItems = function createItems() {
    var items = [];

    if (!(this.player().tech_ && this.player().tech_['featuresNativeTextTracks'])) {
      items.push(new _captionSettingsMenuItemJs2['default'](this.player_, { 'kind': this.kind_ }));
    }

    return _TextTrackButton.prototype.createItems.call(this, items);
  };

  return CaptionsButton;
})(_textTrackButtonJs2['default']);

CaptionsButton.prototype.kind_ = 'captions';
CaptionsButton.prototype.controlText_ = 'Captions';

_componentJs2['default'].registerComponent('CaptionsButton', CaptionsButton);
exports['default'] = CaptionsButton;
module.exports = exports['default'];

},{"../../component.js":66,"./caption-settings-menu-item.js":81,"./text-track-button.js":87}],83:[function(_dereq_,module,exports){
/**
 * @file chapters-button.js
 */
'use strict';

exports.__esModule = true;

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _textTrackButtonJs = _dereq_('./text-track-button.js');

var _textTrackButtonJs2 = _interopRequireDefault(_textTrackButtonJs);

var _componentJs = _dereq_('../../component.js');

var _componentJs2 = _interopRequireDefault(_componentJs);

var _textTrackMenuItemJs = _dereq_('./text-track-menu-item.js');

var _textTrackMenuItemJs2 = _interopRequireDefault(_textTrackMenuItemJs);

var _chaptersTrackMenuItemJs = _dereq_('./chapters-track-menu-item.js');

var _chaptersTrackMenuItemJs2 = _interopRequireDefault(_chaptersTrackMenuItemJs);

var _menuMenuJs = _dereq_('../../menu/menu.js');

var _menuMenuJs2 = _interopRequireDefault(_menuMenuJs);

var _utilsDomJs = _dereq_('../../utils/dom.js');

var Dom = _interopRequireWildcard(_utilsDomJs);

var _utilsFnJs = _dereq_('../../utils/fn.js');

var Fn = _interopRequireWildcard(_utilsFnJs);

var _utilsToTitleCaseJs = _dereq_('../../utils/to-title-case.js');

var _utilsToTitleCaseJs2 = _interopRequireDefault(_utilsToTitleCaseJs);

var _globalWindow = _dereq_('global/window');

var _globalWindow2 = _interopRequireDefault(_globalWindow);

/**
 * The button component for toggling and selecting chapters
 * Chapters act much differently than other text tracks
 * Cues are navigation vs. other tracks of alternative languages
 *
 * @param {Object} player  Player object
 * @param {Object=} options Object of option names and values
 * @param {Function=} ready    Ready callback function
 * @extends TextTrackButton
 * @class ChaptersButton
 */

var ChaptersButton = (function (_TextTrackButton) {
  _inherits(ChaptersButton, _TextTrackButton);

  function ChaptersButton(player, options, ready) {
    _classCallCheck(this, ChaptersButton);

    _TextTrackButton.call(this, player, options, ready);
    this.el_.setAttribute('aria-label', 'Chapters Menu');
  }

  /**
   * Allow sub components to stack CSS class names
   *
   * @return {String} The constructed class name
   * @method buildCSSClass
   */

  ChaptersButton.prototype.buildCSSClass = function buildCSSClass() {
    return 'vjs-chapters-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);
  };

  /**
   * Create a menu item for each text track
   *
   * @return {Array} Array of menu items
   * @method createItems
   */

  ChaptersButton.prototype.createItems = function createItems() {
    var items = [];

    var tracks = this.player_.textTracks();

    if (!tracks) {
      return items;
    }

    for (var i = 0; i < tracks.length; i++) {
      var track = tracks[i];
      if (track['kind'] === this.kind_) {
        items.push(new _textTrackMenuItemJs2['default'](this.player_, {
          'track': track
        }));
      }
    }

    return items;
  };

  /**
   * Create menu from chapter buttons
   *
   * @return {Menu} Menu of chapter buttons
   * @method createMenu
   */

  ChaptersButton.prototype.createMenu = function createMenu() {
    var _this = this;

    var tracks = this.player_.textTracks() || [];
    var chaptersTrack = undefined;
    var items = this.items = [];

    for (var i = 0, _length = tracks.length; i < _length; i++) {
      var track = tracks[i];

      if (track['kind'] === this.kind_) {
        chaptersTrack = track;

        break;
      }
    }

    var menu = this.menu;
    if (menu === undefined) {
      menu = new _menuMenuJs2['default'](this.player_);
      menu.contentEl().appendChild(Dom.createEl('li', {
        className: 'vjs-menu-title',
        innerHTML: _utilsToTitleCaseJs2['default'](this.kind_),
        tabIndex: -1
      }));
    }

    if (chaptersTrack && chaptersTrack.cues == null) {
      chaptersTrack['mode'] = 'hidden';

      var remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(chaptersTrack);

      if (remoteTextTrackEl) {
        remoteTextTrackEl.addEventListener('load', function (event) {
          return _this.update();
        });
      }
    }

    if (chaptersTrack && chaptersTrack.cues && chaptersTrack.cues.length > 0) {
      var cues = chaptersTrack['cues'],
          cue = undefined;

      for (var i = 0, l = cues.length; i < l; i++) {
        cue = cues[i];

        var mi = new _chaptersTrackMenuItemJs2['default'](this.player_, {
          'track': chaptersTrack,
          'cue': cue
        });

        items.push(mi);

        menu.addChild(mi);
      }

      this.addChild(menu);
    }

    if (this.items.length > 0) {
      this.show();
    }

    return menu;
  };

  return ChaptersButton;
})(_textTrackButtonJs2['default']);

ChaptersButton.prototype.kind_ = 'chapters';
ChaptersButton.prototype.controlText_ = 'Chapters';

_componentJs2['default'].registerComponent('ChaptersButton', ChaptersButton);
exports['default'] = ChaptersButton;
module.exports = exports['default'];

},{"../../component.js":66,"../../menu/menu.js":105,"../../utils/dom.js":131,"../../utils/fn.js":133,"../../utils/to-title-case.js":140,"./chapters-track-menu-item.js":84,"./text-track-button.js":87,"./text-track-menu-item.js":88,"global/window":2}],84:[function(_dereq_,module,exports){
/**
 * @file chapters-track-menu-item.js
 */
'use strict';

exports.__esModule = true;

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _menuMenuItemJs = _dereq_('../../menu/menu-item.js');

var _menuMenuItemJs2 = _interopRequireDefault(_menuMenuItemJs);

var _componentJs = _dereq_('../../component.js');

var _componentJs2 = _interopRequireDefault(_componentJs);

var _utilsFnJs = _dereq_('../../utils/fn.js');

var Fn = _interopRequireWildcard(_utilsFnJs);

/**
 * The chapter track menu item
 *
 * @param {Player|Object} player
 * @param {Object=} options
 * @extends MenuItem
 * @class ChaptersTrackMenuItem
 */

var ChaptersTrackMenuItem = (function (_MenuItem) {
  _inherits(ChaptersTrackMenuItem, _MenuItem);

  function ChaptersTrackMenuItem(player, options) {
    _classCallCheck(this, ChaptersTrackMenuItem);

    var track = options['track'];
    var cue = options['cue'];
    var currentTime = player.currentTime();

    // Modify options for parent MenuItem class's init.
    options['label'] = cue.text;
    options['selected'] = cue['startTime'] <= currentTime && currentTime < cue['endTime'];
    _MenuItem.call(this, player, options);

    this.track = track;
    this.cue = cue;
    track.addEventListener('cuechange', Fn.bind(this, this.update));
  }

  /**
   * Handle click on menu item
   *
   * @method handleClick
   */

  ChaptersTrackMenuItem.prototype.handleClick = function handleClick() {
    _MenuItem.prototype.handleClick.call(this);
    this.player_.currentTime(this.cue.startTime);
    this.update(this.cue.startTime);
  };

  /**
   * Update chapter menu item
   *
   * @method update
   */

  ChaptersTrackMenuItem.prototype.update = function update() {
    var cue = this.cue;
    var currentTime = this.player_.currentTime();

    // vjs.log(currentTime, cue.startTime);
    this.selected(cue['startTime'] <= currentTime && currentTime < cue['endTime']);
  };

  return ChaptersTrackMenuItem;
})(_menuMenuItemJs2['default']);

_componentJs2['default'].registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);
exports['default'] = ChaptersTrackMenuItem;
module.exports = exports['default'];

},{"../../component.js":66,"../../menu/menu-item.js":104,"../../utils/fn.js":133}],85:[function(_dereq_,module,exports){
/**
 * @file off-text-track-menu-item.js
 */
'use strict';

exports.__esModule = true;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _textTrackMenuItemJs = _dereq_('./text-track-menu-item.js');

var _textTrackMenuItemJs2 = _interopRequireDefault(_textTrackMenuItemJs);

var _componentJs = _dereq_('../../component.js');

var _componentJs2 = _interopRequireDefault(_componentJs);

/**
 * A special menu item for turning of a specific type of text track
 *
 * @param {Player|Object} player
 * @param {Object=} options
 * @extends TextTrackMenuItem
 * @class OffTextTrackMenuItem
 */

var OffTextTrackMenuItem = (function (_TextTrackMenuItem) {
  _inherits(OffTextTrackMenuItem, _TextTrackMenuItem);

  function OffTextTrackMenuItem(player, options) {
    _classCallCheck(this, OffTextTrackMenuItem);

    // Create pseudo track info
    // Requires options['kind']
    options['track'] = {
      'kind': options['kind'],
      'player': player,
      'label': options['kind'] + ' off',
      'default': false,
      'mode': 'disabled'
    };

    // MenuItem is selectable
    options['selectable'] = true;

    _TextTrackMenuItem.call(this, player, options);
    this.selected(true);
  }

  /**
   * Handle text track change
   *
   * @param {Object} event Event object
   * @method handleTracksChange
   */

  OffTextTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {
    var tracks = this.player().textTracks();
    var selected = true;

    for (var i = 0, l = tracks.length; i < l; i++) {
      var track = tracks[i];
      if (track['kind'] === this.track['kind'] && track['mode'] === 'showing') {
        selected = false;
        break;
      }
    }

    this.selected(selected);
  };

  return OffTextTrackMenuItem;
})(_textTrackMenuItemJs2['default']);

_componentJs2['default'].registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);
exports['default'] = OffTextTrackMenuItem;
module.exports = exports['default'];

},{"../../component.js":66,"./text-track-menu-item.js":88}],86:[function(_dereq_,module,exports){
/**
 * @file subtitles-button.js
 */
'use strict';

exports.__esModule = true;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _textTrackButtonJs = _dereq_('./text-track-button.js');

var _textTrackButtonJs2 = _interopRequireDefault(_textTrackButtonJs);

var _componentJs = _dereq_('../../component.js');

var _componentJs2 = _interopRequireDefault(_componentJs);

/**
 * The button component for toggling and selecting subtitles
 *
 * @param {Object} player  Player object
 * @param {Object=} options Object of option names and values
 * @param {Function=} ready    Ready callback function
 * @extends TextTrackButton
 * @class SubtitlesButton
 */

var SubtitlesButton = (function (_TextTrackButton) {
  _inherits(SubtitlesButton, _TextTrackButton);

  function SubtitlesButton(player, options, ready) {
    _classCallCheck(this, SubtitlesButton);

    _TextTrackButton.call(this, player, options, ready);
    this.el_.setAttribute('aria-label', 'Subtitles Menu');
  }

  /**
   * Allow sub components to stack CSS class names
   *
   * @return {String} The constructed class name
   * @method buildCSSClass
   */

  SubtitlesButton.prototype.buildCSSClass = function buildCSSClass() {
    return 'vjs-subtitles-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);
  };

  return SubtitlesButton;
})(_textTrackButtonJs2['default']);

SubtitlesButton.prototype.kind_ = 'subtitles';
SubtitlesButton.prototype.controlText_ = 'Subtitles';

_componentJs2['default'].registerComponent('SubtitlesButton', SubtitlesButton);
exports['default'] = SubtitlesButton;
module.exports = exports['default'];

},{"../../component.js":66,"./text-track-button.js":87}],87:[function(_dereq_,module,exports){
/**
 * @file text-track-button.js
 */
'use strict';

exports.__esModule = true;

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _menuMenuButtonJs = _dereq_('../../menu/menu-button.js');

var _menuMenuButtonJs2 = _interopRequireDefault(_menuMenuButtonJs);

var _componentJs = _dereq_('../../component.js');

var _componentJs2 = _interopRequireDefault(_componentJs);

var _utilsFnJs = _dereq_('../../utils/fn.js');

var Fn = _interopRequireWildcard(_utilsFnJs);

var _textTrackMenuItemJs = _dereq_('./text-track-menu-item.js');

var _textTrackMenuItemJs2 = _interopRequireDefault(_textTrackMenuItemJs);

var _offTextTrackMenuItemJs = _dereq_('./off-text-track-menu-item.js');

var _offTextTrackMenuItemJs2 = _interopRequireDefault(_offTextTrackMenuItemJs);

/**
 * The base class for buttons that toggle specific text track types (e.g. subtitles)
 *
 * @param {Player|Object} player
 * @param {Object=} options
 * @extends MenuButton
 * @class TextTrackButton
 */

var TextTrackButton = (function (_MenuButton) {
  _inherits(TextTrackButton, _MenuButton);

  function TextTrackButton(player, options) {
    _classCallCheck(this, TextTrackButton);

    _MenuButton.call(this, player, options);

    var tracks = this.player_.textTracks();

    if (this.items.length <= 1) {
      this.hide();
    }

    if (!tracks) {
      return;
    }

    var updateHandler = Fn.bind(this, this.update);
    tracks.addEventListener('removetrack', updateHandler);
    tracks.addEventListener('addtrack', updateHandler);

    this.player_.on('dispose', function () {
      tracks.removeEventListener('removetrack', updateHandler);
      tracks.removeEventListener('addtrack', updateHandler);
    });
  }

  // Create a menu item for each text track

  TextTrackButton.prototype.createItems = function createItems() {
    var items = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];

    // Add an OFF menu item to turn all tracks off
    items.push(new _offTextTrackMenuItemJs2['default'](this.player_, { 'kind': this.kind_ }));

    var tracks = this.player_.textTracks();

    if (!tracks) {
      return items;
    }

    for (var i = 0; i < tracks.length; i++) {
      var track = tracks[i];

      // only add tracks that are of the appropriate kind and have a label
      if (track['kind'] === this.kind_) {
        items.push(new _textTrackMenuItemJs2['default'](this.player_, {
          // MenuItem is selectable
          'selectable': true,
          'track': track
        }));
      }
    }

    return items;
  };

  return TextTrackButton;
})(_menuMenuButtonJs2['default']);

_componentJs2['default'].registerComponent('TextTrackButton', TextTrackButton);
exports['default'] = TextTrackButton;
module.exports = exports['default'];

},{"../../component.js":66,"../../menu/menu-button.js":103,"../../utils/fn.js":133,"./off-text-track-menu-item.js":85,"./text-track-menu-item.js":88}],88:[function(_dereq_,module,exports){
/**
 * @file text-track-menu-item.js
 */
'use strict';

exports.__esModule = true;

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _menuMenuItemJs = _dereq_('../../menu/menu-item.js');

var _menuMenuItemJs2 = _interopRequireDefault(_menuMenuItemJs);

var _componentJs = _dereq_('../../component.js');

var _componentJs2 = _interopRequireDefault(_componentJs);

var _utilsFnJs = _dereq_('../../utils/fn.js');

var Fn = _interopRequireWildcard(_utilsFnJs);

var _globalWindow = _dereq_('global/window');

var _globalWindow2 = _interopRequireDefault(_globalWindow);

var _globalDocument = _dereq_('global/document');

var _globalDocument2 = _interopRequireDefault(_globalDocument);

/**
 * The specific menu item type for selecting a language within a text track kind
 *
 * @param {Player|Object} player
 * @param {Object=} options
 * @extends MenuItem
 * @class TextTrackMenuItem
 */

var TextTrackMenuItem = (function (_MenuItem) {
  _inherits(TextTrackMenuItem, _MenuItem);

  function TextTrackMenuItem(player, options) {
    var _this = this;

    _classCallCheck(this, TextTrackMenuItem);

    var track = options['track'];
    var tracks = player.textTracks();

    // Modify options for parent MenuItem class's init.
    options['label'] = track['label'] || track['language'] || 'Unknown';
    options['selected'] = track['default'] || track['mode'] === 'showing';

    _MenuItem.call(this, player, options);

    this.track = track;

    if (tracks) {
      (function () {
        var changeHandler = Fn.bind(_this, _this.handleTracksChange);

        tracks.addEventListener('change', changeHandler);
        _this.on('dispose', function () {
          tracks.removeEventListener('change', changeHandler);
        });
      })();
    }

    // iOS7 doesn't dispatch change events to TextTrackLists when an
    // associated track's mode changes. Without something like
    // Object.observe() (also not present on iOS7), it's not
    // possible to detect changes to the mode attribute and polyfill
    // the change event. As a poor substitute, we manually dispatch
    // change events whenever the controls modify the mode.
    if (tracks && tracks.onchange === undefined) {
      (function () {
        var event = undefined;

        _this.on(['tap', 'click'], function () {
          if (typeof _globalWindow2['default'].Event !== 'object') {
            // Android 2.3 throws an Illegal Constructor error for window.Event
            try {
              event = new _globalWindow2['default'].Event('change');
            } catch (err) {}
          }

          if (!event) {
            event = _globalDocument2['default'].createEvent('Event');
            event.initEvent('change', true, true);
          }

          tracks.dispatchEvent(event);
        });
      })();
    }
  }

  /**
   * Handle click on text track
   *
   * @method handleClick
   */

  TextTrackMenuItem.prototype.handleClick = function handleClick(event) {
    var kind = this.track['kind'];
    var tracks = this.player_.textTracks();

    _MenuItem.prototype.handleClick.call(this, event);

    if (!tracks) return;

    for (var i = 0; i < tracks.length; i++) {
      var track = tracks[i];

      if (track['kind'] !== kind) {
        continue;
      }

      if (track === this.track) {
        track['mode'] = 'showing';
      } else {
        track['mode'] = 'disabled';
      }
    }
  };

  /**
   * Handle text track change
   *
   * @method handleTracksChange
   */

  TextTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {
    this.selected(this.track['mode'] === 'showing');
  };

  return TextTrackMenuItem;
})(_menuMenuItemJs2['default']);

_componentJs2['default'].registerComponent('TextTrackMenuItem', TextTrackMenuItem);
exports['default'] = TextTrackMenuItem;
module.exports = exports['default'];

},{"../../component.js":66,"../../menu/menu-item.js":104,"../../utils/fn.js":133,"global/document":1,"global/window":2}],89:[function(_dereq_,module,exports){
/**
 * @file current-time-display.js
 */
'use strict';

exports.__esModule = true;

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _componentJs = _dereq_('../../component.js');

var _componentJs2 = _interopRequireDefault(_componentJs);

var _utilsDomJs = _dereq_('../../utils/dom.js');

var Dom = _interopRequireWildcard(_utilsDomJs);

var _utilsFormatTimeJs = _dereq_('../../utils/format-time.js');

var _utilsFormatTimeJs2 = _interopRequireDefault(_utilsFormatTimeJs);

/**
 * Displays the current time
 *
 * @param {Player|Object} player
 * @param {Object=} options
 * @extends Component
 * @class CurrentTimeDisplay
 */

var CurrentTimeDisplay = (function (_Component) {
  _inherits(CurrentTimeDisplay, _Component);

  function CurrentTimeDisplay(player, options) {
    _classCallCheck(this, CurrentTimeDisplay);

    _Component.call(this, player, options);

    this.on(player, 'timeupdate', this.updateContent);
  }

  /**
   * Create the component's DOM element
   *
   * @return {Element}
   * @method createEl
   */

  CurrentTimeDisplay.prototype.createEl = function createEl() {
    var el = _Component.prototype.createEl.call(this, 'div', {
      className: 'vjs-current-time vjs-time-control vjs-control'
    });

    this.contentEl_ = Dom.createEl('div', {
      className: 'vjs-current-time-display',
      // label the current time for screen reader users
      innerHTML: '<span class="vjs-control-text">Current Time </span>' + '0:00'
    }, {
      // tell screen readers not to automatically read the time as it changes
      'aria-live': 'off'
    });

    el.appendChild(this.contentEl_);
    return el;
  };

  /**
   * Update current time display
   *
   * @method updateContent
   */

  CurrentTimeDisplay.prototype.updateContent = function updateContent() {
    // Allows for smooth scrubbing, when player can't keep up.
    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();
    var localizedText = this.localize('Current Time');
    var formattedTime = _utilsFormatTimeJs2['default'](time, this.player_.duration());
    this.contentEl_.innerHTML = '<span class="vjs-control-text">' + localizedText + '</span> ' + formattedTime;
  };

  return CurrentTimeDisplay;
})(_componentJs2['default']);

_componentJs2['default'].registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);
exports['default'] = CurrentTimeDisplay;
module.exports = exports['default'];

},{"../../component.js":66,"../../utils/dom.js":131,"../../utils/format-time.js":134}],90:[function(_dereq_,module,exports){
/**
 * @file duration-display.js
 */
'use strict';

exports.__esModule = true;

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _componentJs = _dereq_('../../component.js');

var _componentJs2 = _interopRequireDefault(_componentJs);

var _utilsDomJs = _dereq_('../../utils/dom.js');

var Dom = _interopRequireWildcard(_utilsDomJs);

var _utilsFormatTimeJs = _dereq_('../../utils/format-time.js');

var _utilsFormatTimeJs2 = _interopRequireDefault(_utilsFormatTimeJs);

/**
 * Displays the duration
 *
 * @param {Player|Object} player
 * @param {Object=} options
 * @extends Component
 * @class DurationDisplay
 */

var DurationDisplay = (function (_Component) {
  _inherits(DurationDisplay, _Component);

  function DurationDisplay(player, options) {
    _classCallCheck(this, DurationDisplay);

    _Component.call(this, player, options);

    // this might need to be changed to 'durationchange' instead of 'timeupdate' eventually,
    // however the durationchange event fires before this.player_.duration() is set,
    // so the value cannot be written out using this method.
    // Once the order of durationchange and this.player_.duration() being set is figured out,
    // this can be updated.
    this.on(player, 'timeupdate', this.updateContent);
    this.on(player, 'loadedmetadata', this.updateContent);
  }

  /**
   * Create the component's DOM element
   *
   * @return {Element}
   * @method createEl
   */

  DurationDisplay.prototype.createEl = function createEl() {
    var el = _Component.prototype.createEl.call(this, 'div', {
      className: 'vjs-duration vjs-time-control vjs-control'
    });

    this.contentEl_ = Dom.createEl('div', {
      className: 'vjs-duration-display',
      // label the duration time for screen reader users
      innerHTML: '<span class="vjs-control-text">' + this.localize('Duration Time') + '</span> 0:00'
    }, {
      // tell screen readers not to automatically read the time as it changes
      'aria-live': 'off'
    });

    el.appendChild(this.contentEl_);
    return el;
  };

  /**
   * Update duration time display
   *
   * @method updateContent
   */

  DurationDisplay.prototype.updateContent = function updateContent() {
    var duration = this.player_.duration();
    if (duration) {
      var localizedText = this.localize('Duration Time');
      var formattedTime = _utilsFormatTimeJs2['default'](duration);
      this.contentEl_.innerHTML = '<span class="vjs-control-text">' + localizedText + '</span> ' + formattedTime; // label the duration time for screen reader users
    }
  };

  return DurationDisplay;
})(_componentJs2['default']);

_componentJs2['default'].registerComponent('DurationDisplay', DurationDisplay);
exports['default'] = DurationDisplay;
module.exports = exports['default'];

},{"../../component.js":66,"../../utils/dom.js":131,"../../utils/format-time.js":134}],91:[function(_dereq_,module,exports){
/**
 * @file remaining-time-display.js
 */
'use strict';

exports.__esModule = true;

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _componentJs = _dereq_('../../component.js');

var _componentJs2 = _interopRequireDefault(_componentJs);

var _utilsDomJs = _dereq_('../../utils/dom.js');

var Dom = _interopRequireWildcard(_utilsDomJs);

var _utilsFormatTimeJs = _dereq_('../../utils/format-time.js');

var _utilsFormatTimeJs2 = _interopRequireDefault(_utilsFormatTimeJs);

/**
 * Displays the time left in the video
 *
 * @param {Player|Object} player
 * @param {Object=} options
 * @extends Component
 * @class RemainingTimeDisplay
 */

var RemainingTimeDisplay = (function (_Component) {
  _inherits(RemainingTimeDisplay, _Component);

  function RemainingTimeDisplay(player, options) {
    _classCallCheck(this, RemainingTimeDisplay);

    _Component.call(this, player, options);

    this.on(player, 'timeupdate', this.updateContent);
  }

  /**
   * Create the component's DOM element
   *
   * @return {Element}
   * @method createEl
   */

  RemainingTimeDisplay.prototype.createEl = function createEl() {
    var el = _Component.prototype.createEl.call(this, 'div', {
      className: 'vjs-remaining-time vjs-time-control vjs-control'
    });

    this.contentEl_ = Dom.createEl('div', {
      className: 'vjs-remaining-time-display',
      // label the remaining time for screen reader users
      innerHTML: '<span class="vjs-control-text">' + this.localize('Remaining Time') + '</span> -0:00'
    }, {
      // tell screen readers not to automatically read the time as it changes
      'aria-live': 'off'
    });

    el.appendChild(this.contentEl_);
    return el;
  };

  /**
   * Update remaining time display
   *
   * @method updateContent
   */

  RemainingTimeDisplay.prototype.updateContent = function updateContent() {
    if (this.player_.duration()) {
      var localizedText = this.localize('Remaining Time');
      var formattedTime = _utilsFormatTimeJs2['default'](this.player_.remainingTime());
      this.contentEl_.innerHTML = '<span class="vjs-control-text">' + localizedText + '</span> -' + formattedTime;
    }

    // Allows for smooth scrubbing, when player can't keep up.
    // var time = (this.player_.scrubbing()) ? this.player_.getCache().currentTime : this.player_.currentTime();
    // this.contentEl_.innerHTML = vjs.formatTime(time, this.player_.duration());
  };

  return RemainingTimeDisplay;
})(_componentJs2['default']);

_componentJs2['default'].registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);
exports['default'] = RemainingTimeDisplay;
module.exports = exports['default'];

},{"../../component.js":66,"../../utils/dom.js":131,"../../utils/format-time.js":134}],92:[function(_dereq_,module,exports){
/**
 * @file time-divider.js
 */
'use strict';

exports.__esModule = true;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _componentJs = _dereq_('../../component.js');

var _componentJs2 = _interopRequireDefault(_componentJs);

/**
 * The separator between the current time and duration.
 * Can be hidden if it's not needed in the design.
 *
 * @param {Player|Object} player
 * @param {Object=} options
 * @extends Component
 * @class TimeDivider
 */

var TimeDivider = (function (_Component) {
  _inherits(TimeDivider, _Component);

  function TimeDivider() {
    _classCallCheck(this, TimeDivider);

    _Component.apply(this, arguments);
  }

  /**
   * Create the component's DOM element
   *
   * @return {Element}
   * @method createEl
   */

  TimeDivider.prototype.createEl = function createEl() {
    return _Component.prototype.createEl.call(this, 'div', {
      className: 'vjs-time-control vjs-time-divider',
      innerHTML: '<div><span>/</span></div>'
    });
  };

  return TimeDivider;
})(_componentJs2['default']);

_componentJs2['default'].registerComponent('TimeDivider', TimeDivider);
exports['default'] = TimeDivider;
module.exports = exports['default'];

},{"../../component.js":66}],93:[function(_dereq_,module,exports){
/**
 * @file volume-bar.js
 */
'use strict';

exports.__esModule = true;

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _sliderSliderJs = _dereq_('../../slider/slider.js');

var _sliderSliderJs2 = _interopRequireDefault(_sliderSliderJs);

var _componentJs = _dereq_('../../component.js');

var _componentJs2 = _interopRequireDefault(_componentJs);

var _utilsFnJs = _dereq_('../../utils/fn.js');

var Fn = _interopRequireWildcard(_utilsFnJs);

// Required children

var _volumeLevelJs = _dereq_('./volume-level.js');

var _volumeLevelJs2 = _interopRequireDefault(_volumeLevelJs);

/**
 * The bar that contains the volume level and can be clicked on to adjust the level
 *
 * @param {Player|Object} player
 * @param {Object=} options
 * @extends Slider
 * @class VolumeBar
 */

var VolumeBar = (function (_Slider) {
  _inherits(VolumeBar, _Slider);

  function VolumeBar(player, options) {
    _classCallCheck(this, VolumeBar);

    _Slider.call(this, player, options);
    this.on(player, 'volumechange', this.updateARIAAttributes);
    player.ready(Fn.bind(this, this.updateARIAAttributes));
  }

  /**
   * Create the component's DOM element
   *
   * @return {Element}
   * @method createEl
   */

  VolumeBar.prototype.createEl = function createEl() {
    return _Slider.prototype.createEl.call(this, 'div', {
      className: 'vjs-volume-bar vjs-slider-bar'
    }, {
      'aria-label': 'volume level'
    });
  };

  /**
   * Handle mouse move on volume bar
   *
   * @method handleMouseMove
   */

  VolumeBar.prototype.handleMouseMove = function handleMouseMove(event) {
    this.checkMuted();
    this.player_.volume(this.calculateDistance(event));
  };

  VolumeBar.prototype.checkMuted = function checkMuted() {
    if (this.player_.muted()) {
      this.player_.muted(false);
    }
  };

  /**
   * Get percent of volume level
   *
   * @retun {Number} Volume level percent
   * @method getPercent
   */

  VolumeBar.prototype.getPercent = function getPercent() {
    if (this.player_.muted()) {
      return 0;
    } else {
      return this.player_.volume();
    }
  };

  /**
   * Increase volume level for keyboard users
   *
   * @method stepForward
   */

  VolumeBar.prototype.stepForward = function stepForward() {
    this.checkMuted();
    this.player_.volume(this.player_.volume() + 0.1);
  };

  /**
   * Decrease volume level for keyboard users
   *
   * @method stepBack
   */

  VolumeBar.prototype.stepBack = function stepBack() {
    this.checkMuted();
    this.player_.volume(this.player_.volume() - 0.1);
  };

  /**
   * Update ARIA accessibility attributes
   *
   * @method updateARIAAttributes
   */

  VolumeBar.prototype.updateARIAAttributes = function updateARIAAttributes() {
    // Current value of volume bar as a percentage
    var volume = (this.player_.volume() * 100).toFixed(2);
    this.el_.setAttribute('aria-valuenow', volume);
    this.el_.setAttribute('aria-valuetext', volume + '%');
  };

  return VolumeBar;
})(_sliderSliderJs2['default']);

VolumeBar.prototype.options_ = {
  children: ['volumeLevel'],
  'barName': 'volumeLevel'
};

VolumeBar.prototype.playerEvent = 'volumechange';

_componentJs2['default'].registerComponent('VolumeBar', VolumeBar);
exports['default'] = VolumeBar;
module.exports = exports['default'];

},{"../../component.js":66,"../../slider/slider.js":113,"../../utils/fn.js":133,"./volume-level.js":95}],94:[function(_dereq_,module,exports){
/**
 * @file volume-control.js
 */
'use strict';

exports.__esModule = true;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _componentJs = _dereq_('../../component.js');

var _componentJs2 = _interopRequireDefault(_componentJs);

// Required children

var _volumeBarJs = _dereq_('./volume-bar.js');

var _volumeBarJs2 = _interopRequireDefault(_volumeBarJs);

/**
 * The component for controlling the volume level
 *
 * @param {Player|Object} player
 * @param {Object=} options
 * @extends Component
 * @class VolumeControl
 */

var VolumeControl = (function (_Component) {
  _inherits(VolumeControl, _Component);

  function VolumeControl(player, options) {
    _classCallCheck(this, VolumeControl);

    _Component.call(this, player, options);

    // hide volume controls when they're not supported by the current tech
    if (player.tech_ && player.tech_['featuresVolumeControl'] === false) {
      this.addClass('vjs-hidden');
    }
    this.on(player, 'loadstart', function () {
      if (player.tech_['featuresVolumeControl'] === false) {
        this.addClass('vjs-hidden');
      } else {
        this.removeClass('vjs-hidden');
      }
    });
  }

  /**
   * Create the component's DOM element
   *
   * @return {Element}
   * @method createEl
   */

  VolumeControl.prototype.createEl = function createEl() {
    return _Component.prototype.createEl.call(this, 'div', {
      className: 'vjs-volume-control vjs-control'
    });
  };

  return VolumeControl;
})(_componentJs2['default']);

VolumeControl.prototype.options_ = {
  children: ['volumeBar']
};

_componentJs2['default'].registerComponent('VolumeControl', VolumeControl);
exports['default'] = VolumeControl;
module.exports = exports['default'];

},{"../../component.js":66,"./volume-bar.js":93}],95:[function(_dereq_,module,exports){
/**
 * @file volume-level.js
 */
'use strict';

exports.__esModule = true;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _componentJs = _dereq_('../../component.js');

var _componentJs2 = _interopRequireDefault(_componentJs);

/**
 * Shows volume level
 *
 * @param {Player|Object} player
 * @param {Object=} options
 * @extends Component
 * @class VolumeLevel
 */

var VolumeLevel = (function (_Component) {
  _inherits(VolumeLevel, _Component);

  function VolumeLevel() {
    _classCallCheck(this, VolumeLevel);

    _Component.apply(this, arguments);
  }

  /**
   * Create the component's DOM element
   *
   * @return {Element}
   * @method createEl
   */

  VolumeLevel.prototype.createEl = function createEl() {
    return _Component.prototype.createEl.call(this, 'div', {
      className: 'vjs-volume-level',
      innerHTML: '<span class="vjs-control-text"></span>'
    });
  };

  return VolumeLevel;
})(_componentJs2['default']);

_componentJs2['default'].registerComponent('VolumeLevel', VolumeLevel);
exports['default'] = VolumeLevel;
module.exports = exports['default'];

},{"../../component.js":66}],96:[function(_dereq_,module,exports){
/**
 * @file volume-menu-button.js
 */
'use strict';

exports.__esModule = true;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _utilsFnJs = _dereq_('../utils/fn.js');

var Fn = _interopRequireWildcard(_utilsFnJs);

var _componentJs = _dereq_('../component.js');

var _componentJs2 = _interopRequireDefault(_componentJs);

var _popupPopupJs = _dereq_('../popup/popup.js');

var _popupPopupJs2 = _interopRequireDefault(_popupPopupJs);

var _popupPopupButtonJs = _dereq_('../popup/popup-button.js');

var _popupPopupButtonJs2 = _interopRequireDefault(_popupPopupButtonJs);

var _muteToggleJs = _dereq_('./mute-toggle.js');

var _muteToggleJs2 = _interopRequireDefault(_muteToggleJs);

var _volumeControlVolumeBarJs = _dereq_('./volume-control/volume-bar.js');

var _volumeControlVolumeBarJs2 = _interopRequireDefault(_volumeControlVolumeBarJs);

var _globalDocument = _dereq_('global/document');

var _globalDocument2 = _interopRequireDefault(_globalDocument);

/**
 * Button for volume popup
 *
 * @param {Player|Object} player
 * @param {Object=} options
 * @extends PopupButton
 * @class VolumeMenuButton
 */

var VolumeMenuButton = (function (_PopupButton) {
  _inherits(VolumeMenuButton, _PopupButton);

  function VolumeMenuButton(player) {
    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

    _classCallCheck(this, VolumeMenuButton);

    // Default to inline
    if (options.inline === undefined) {
      options.inline = true;
    }

    // If the vertical option isn't passed at all, default to true.
    if (options.vertical === undefined) {
      // If an inline volumeMenuButton is used, we should default to using
      // a horizontal slider for obvious reasons.
      if (options.inline) {
        options.vertical = false;
      } else {
        options.vertical = true;
      }
    }

    // The vertical option needs to be set on the volumeBar as well,
    // since that will need to be passed along to the VolumeBar constructor
    options.volumeBar = options.volumeBar || {};
    options.volumeBar.vertical = !!options.vertical;

    _PopupButton.call(this, player, options);

    // Same listeners as MuteToggle
    this.on(player, 'volumechange', this.volumeUpdate);
    this.on(player, 'loadstart', this.volumeUpdate);

    // hide mute toggle if the current tech doesn't support volume control
    function updateVisibility() {
      if (player.tech_ && player.tech_['featuresVolumeControl'] === false) {
        this.addClass('vjs-hidden');
      } else {
        this.removeClass('vjs-hidden');
      }
    }

    updateVisibility.call(this);
    this.on(player, 'loadstart', updateVisibility);

    this.on(this.volumeBar, ['slideractive', 'focus'], function () {
      this.addClass('vjs-slider-active');
    });

    this.on(this.volumeBar, ['sliderinactive', 'blur'], function () {
      this.removeClass('vjs-slider-active');
    });

    this.on(this.volumeBar, ['focus'], function () {
      this.addClass('vjs-lock-showing');
    });

    this.on(this.volumeBar, ['blur'], function () {
      this.removeClass('vjs-lock-showing');
    });
  }

  /**
   * Allow sub components to stack CSS class names
   *
   * @return {String} The constructed class name
   * @method buildCSSClass
   */

  VolumeMenuButton.prototype.buildCSSClass = function buildCSSClass() {
    var orientationClass = '';
    if (!!this.options_.vertical) {
      orientationClass = 'vjs-volume-menu-button-vertical';
    } else {
      orientationClass = 'vjs-volume-menu-button-horizontal';
    }

    return 'vjs-volume-menu-button ' + _PopupButton.prototype.buildCSSClass.call(this) + ' ' + orientationClass;
  };

  /**
   * Allow sub components to stack CSS class names
   *
   * @return {Popup} The volume popup button
   * @method createPopup
   */

  VolumeMenuButton.prototype.createPopup = function createPopup() {
    var popup = new _popupPopupJs2['default'](this.player_, {
      contentElType: 'div'
    });

    var vb = new _volumeControlVolumeBarJs2['default'](this.player_, this.options_.volumeBar);

    popup.addChild(vb);

    this.volumeBar = vb;

    this.attachVolumeBarEvents();

    return popup;
  };

  /**
   * Handle click on volume popup and calls super
   *
   * @method handleClick
   */

  VolumeMenuButton.prototype.handleClick = function handleClick() {
    _muteToggleJs2['default'].prototype.handleClick.call(this);
    _PopupButton.prototype.handleClick.call(this);
  };

  VolumeMenuButton.prototype.attachVolumeBarEvents = function attachVolumeBarEvents() {
    this.on(['mousedown', 'touchdown'], this.handleMouseDown);
  };

  VolumeMenuButton.prototype.handleMouseDown = function handleMouseDown(event) {
    this.on(['mousemove', 'touchmove'], Fn.bind(this.volumeBar, this.volumeBar.handleMouseMove));
    this.on(_globalDocument2['default'], ['mouseup', 'touchend'], this.handleMouseUp);
  };

  VolumeMenuButton.prototype.handleMouseUp = function handleMouseUp(event) {
    this.off(['mousemove', 'touchmove'], Fn.bind(this.volumeBar, this.volumeBar.handleMouseMove));
  };

  return VolumeMenuButton;
})(_popupPopupButtonJs2['default']);

VolumeMenuButton.prototype.volumeUpdate = _muteToggleJs2['default'].prototype.update;
VolumeMenuButton.prototype.controlText_ = 'Mute';

_componentJs2['default'].registerComponent('VolumeMenuButton', VolumeMenuButton);
exports['default'] = VolumeMenuButton;
module.exports = exports['default'];

},{"../component.js":66,"../popup/popup-button.js":109,"../popup/popup.js":110,"../utils/fn.js":133,"./mute-toggle.js":70,"./volume-control/volume-bar.js":93,"global/document":1}],97:[function(_dereq_,module,exports){
/**
 * @file error-display.js
 */
'use strict';

exports.__esModule = true;

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _component = _dereq_('./component');

var _component2 = _interopRequireDefault(_component);

var _modalDialog = _dereq_('./modal-dialog');

var _modalDialog2 = _interopRequireDefault(_modalDialog);

var _utilsDom = _dereq_('./utils/dom');

var Dom = _interopRequireWildcard(_utilsDom);

var _utilsMergeOptions = _dereq_('./utils/merge-options');

var _utilsMergeOptions2 = _interopRequireDefault(_utilsMergeOptions);

/**
 * Display that an error has occurred making the video unplayable.
 *
 * @extends ModalDialog
 * @class ErrorDisplay
 */

var ErrorDisplay = (function (_ModalDialog) {
  _inherits(ErrorDisplay, _ModalDialog);

  /**
   * Constructor for error display modal.
   *
   * @param  {Player} player
   * @param  {Object} [options]
   */

  function ErrorDisplay(player, options) {
    _classCallCheck(this, ErrorDisplay);

    _ModalDialog.call(this, player, options);
    this.on(player, 'error', this.open);
  }

  /**
   * Include the old class for backward-compatibility.
   *
   * This can be removed in 6.0.
   *
   * @method buildCSSClass
   * @deprecated
   * @return {String}
   */

  ErrorDisplay.prototype.buildCSSClass = function buildCSSClass() {
    return 'vjs-error-display ' + _ModalDialog.prototype.buildCSSClass.call(this);
  };

  /**
   * Generates the modal content based on the player error.
   *
   * @return {String|Null}
   */

  ErrorDisplay.prototype.content = function content() {
    var error = this.player().error();
    return error ? this.localize(error.message) : '';
  };

  return ErrorDisplay;
})(_modalDialog2['default']);

ErrorDisplay.prototype.options_ = _utilsMergeOptions2['default'](_modalDialog2['default'].prototype.options_, {
  fillAlways: true,
  temporary: false,
  uncloseable: true
});

_component2['default'].registerComponent('ErrorDisplay', ErrorDisplay);
exports['default'] = ErrorDisplay;
module.exports = exports['default'];

},{"./component":66,"./modal-dialog":106,"./utils/dom":131,"./utils/merge-options":137}],98:[function(_dereq_,module,exports){
/**
 * @file event-target.js
 */
'use strict';

exports.__esModule = true;

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

var _utilsEventsJs = _dereq_('./utils/events.js');

var Events = _interopRequireWildcard(_utilsEventsJs);

var EventTarget = function EventTarget() {};

EventTarget.prototype.allowedEvents_ = {};

EventTarget.prototype.on = function (type, fn) {
  // Remove the addEventListener alias before calling Events.on
  // so we don't get into an infinite type loop
  var ael = this.addEventListener;
  this.addEventListener = Function.prototype;
  Events.on(this, type, fn);
  this.addEventListener = ael;
};
EventTarget.prototype.addEventListener = EventTarget.prototype.on;

EventTarget.prototype.off = function (type, fn) {
  Events.off(this, type, fn);
};
EventTarget.prototype.removeEventListener = EventTarget.prototype.off;

EventTarget.prototype.one = function (type, fn) {
  Events.one(this, type, fn);
};

EventTarget.prototype.trigger = function (event) {
  var type = event.type || event;

  if (typeof event === 'string') {
    event = {
      type: type
    };
  }
  event = Events.fixEvent(event);

  if (this.allowedEvents_[type] && this['on' + type]) {
    this['on' + type](event);
  }

  Events.trigger(this, event);
};
// The standard DOM EventTarget.dispatchEvent() is aliased to trigger()
EventTarget.prototype.dispatchEvent = EventTarget.prototype.trigger;

exports['default'] = EventTarget;
module.exports = exports['default'];

},{"./utils/events.js":132}],99:[function(_dereq_,module,exports){
'use strict';

exports.__esModule = true;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _utilsLog = _dereq_('./utils/log');

var _utilsLog2 = _interopRequireDefault(_utilsLog);

/*
 * @file extend.js
 *
 * A combination of node inherits and babel's inherits (after transpile).
 * Both work the same but node adds `super_` to the subClass
 * and Bable adds the superClass as __proto__. Both seem useful.
 */
var _inherits = function _inherits(subClass, superClass) {
  if (typeof superClass !== 'function' && superClass !== null) {
    throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });

  if (superClass) {
    // node
    subClass.super_ = superClass;
  }
};

/*
 * Function for subclassing using the same inheritance that
 * videojs uses internally
 * ```js
 * var Button = videojs.getComponent('Button');
 * ```
 * ```js
 * var MyButton = videojs.extend(Button, {
 *   constructor: function(player, options) {
 *     Button.call(this, player, options);
 *   },
 *   onClick: function() {
 *     // doSomething
 *   }
 * });
 * ```
 */
var extendFn = function extendFn(superClass) {
  var subClassMethods = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

  var subClass = function subClass() {
    superClass.apply(this, arguments);
  };
  var methods = {};

  if (typeof subClassMethods === 'object') {
    if (typeof subClassMethods.init === 'function') {
      _utilsLog2['default'].warn('Constructor logic via init() is deprecated; please use constructor() instead.');
      subClassMethods.constructor = subClassMethods.init;
    }
    if (subClassMethods.constructor !== Object.prototype.constructor) {
      subClass = subClassMethods.constructor;
    }
    methods = subClassMethods;
  } else if (typeof subClassMethods === 'function') {
    subClass = subClassMethods;
  }

  _inherits(subClass, superClass);

  // Extend subObj's prototype with functions and other properties from props
  for (var name in methods) {
    if (methods.hasOwnProperty(name)) {
      subClass.prototype[name] = methods[name];
    }
  }

  return subClass;
};

exports['default'] = extendFn;
module.exports = exports['default'];

},{"./utils/log":136}],100:[function(_dereq_,module,exports){
/**
 * @file fullscreen-api.js
 */
'use strict';

exports.__esModule = true;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _globalDocument = _dereq_('global/document');

var _globalDocument2 = _interopRequireDefault(_globalDocument);

/*
 * Store the browser-specific methods for the fullscreen API
 * @type {Object|undefined}
 * @private
 */
var FullscreenApi = {};

// browser API methods
// map approach from Screenful.js - https://github.com/sindresorhus/screenfull.js
var apiMap = [
// Spec: https://dvcs.w3.org/hg/fullscreen/raw-file/tip/Overview.html
['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror'],
// WebKit
['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror'],
// Old WebKit (Safari 5.1)
['webkitRequestFullScreen', 'webkitCancelFullScreen', 'webkitCurrentFullScreenElement', 'webkitCancelFullScreen', 'webkitfullscreenchange', 'webkitfullscreenerror'],
// Mozilla
['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror'],
// Microsoft
['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError']];

var specApi = apiMap[0];
var browserApi = undefined;

// determine the supported set of functions
for (var i = 0; i < apiMap.length; i++) {
  // check for exitFullscreen function
  if (apiMap[i][1] in _globalDocument2['default']) {
    browserApi = apiMap[i];
    break;
  }
}

// map the browser API names to the spec API names
if (browserApi) {
  for (var i = 0; i < browserApi.length; i++) {
    FullscreenApi[specApi[i]] = browserApi[i];
  }
}

exports['default'] = FullscreenApi;
module.exports = exports['default'];

},{"global/document":1}],101:[function(_dereq_,module,exports){
/**
 * @file loading-spinner.js
 */
'use strict';

exports.__esModule = true;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _component = _dereq_('./component');

var _component2 = _interopRequireDefault(_component);

/* Loading Spinner
================================================================================ */
/**
 * Loading spinner for waiting events
 *
 * @extends Component
 * @class LoadingSpinner
 */

var LoadingSpinner = (function (_Component) {
  _inherits(LoadingSpinner, _Component);

  function LoadingSpinner() {
    _classCallCheck(this, LoadingSpinner);

    _Component.apply(this, arguments);
  }

  /**
   * Create the component's DOM element
   *
   * @method createEl
   */

  LoadingSpinner.prototype.createEl = function createEl() {
    return _Component.prototype.createEl.call(this, 'div', {
      className: 'vjs-loading-spinner'
    });
  };

  return LoadingSpinner;
})(_component2['default']);

_component2['default'].registerComponent('LoadingSpinner', LoadingSpinner);
exports['default'] = LoadingSpinner;
module.exports = exports['default'];

},{"./component":66}],102:[function(_dereq_,module,exports){
/**
 * @file media-error.js
 */
'use strict';

exports.__esModule = true;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _objectAssign = _dereq_('object.assign');

var _objectAssign2 = _interopRequireDefault(_objectAssign);

/*
 * Custom MediaError to mimic the HTML5 MediaError
 *
 * @param {Number} code The media error code
 */
var MediaError = function MediaError(code) {
  if (typeof code === 'number') {
    this.code = code;
  } else if (typeof code === 'string') {
    // default code is zero, so this is a custom error
    this.message = code;
  } else if (typeof code === 'object') {
    // object
    _objectAssign2['default'](this, code);
  }

  if (!this.message) {
    this.message = MediaError.defaultMessages[this.code] || '';
  }
};

/*
 * The error code that refers two one of the defined
 * MediaError types
 *
 * @type {Number}
 */
MediaError.prototype.code = 0;

/*
 * An optional message to be shown with the error.
 * Message is not part of the HTML5 video spec
 * but allows for more informative custom errors.
 *
 * @type {String}
 */
MediaError.prototype.message = '';

/*
 * An optional status code that can be set by plugins
 * to allow even more detail about the error.
 * For example the HLS plugin might provide the specific
 * HTTP status code that was returned when the error
 * occurred, then allowing a custom error overlay
 * to display more information.
 *
 * @type {Array}
 */
MediaError.prototype.status = null;

MediaError.errorTypes = ['MEDIA_ERR_CUSTOM', // = 0
'MEDIA_ERR_ABORTED', // = 1
'MEDIA_ERR_NETWORK', // = 2
'MEDIA_ERR_DECODE', // = 3
'MEDIA_ERR_SRC_NOT_SUPPORTED', // = 4
'MEDIA_ERR_ENCRYPTED' // = 5
];

MediaError.defaultMessages = {
  1: 'You aborted the media playback',
  2: 'A network error caused the media download to fail part-way.',
  3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',
  4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',
  5: 'The media is encrypted and we do not have the keys to decrypt it.'
};

// Add types as properties on MediaError
// e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;
for (var errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {
  MediaError[MediaError.errorTypes[errNum]] = errNum;
  // values should be accessible on both the class and instance
  MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;
}

exports['default'] = MediaError;
module.exports = exports['default'];

},{"object.assign":45}],103:[function(_dereq_,module,exports){
/**
 * @file menu-button.js
 */
'use strict';

exports.__esModule = true;

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _clickableComponentJs = _dereq_('../clickable-component.js');

var _clickableComponentJs2 = _interopRequireDefault(_clickableComponentJs);

var _componentJs = _dereq_('../component.js');

var _componentJs2 = _interopRequireDefault(_componentJs);

var _menuJs = _dereq_('./menu.js');

var _menuJs2 = _interopRequireDefault(_menuJs);

var _utilsDomJs = _dereq_('../utils/dom.js');

var Dom = _interopRequireWildcard(_utilsDomJs);

var _utilsFnJs = _dereq_('../utils/fn.js');

var Fn = _interopRequireWildcard(_utilsFnJs);

var _utilsToTitleCaseJs = _dereq_('../utils/to-title-case.js');

var _utilsToTitleCaseJs2 = _interopRequireDefault(_utilsToTitleCaseJs);

/**
 * A button class with a popup menu
 *
 * @param {Player|Object} player
 * @param {Object=} options
 * @extends Button
 * @class MenuButton
 */

var MenuButton = (function (_ClickableComponent) {
  _inherits(MenuButton, _ClickableComponent);

  function MenuButton(player) {
    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

    _classCallCheck(this, MenuButton);

    _ClickableComponent.call(this, player, options);

    this.update();

    this.el_.setAttribute('aria-haspopup', true);
    this.el_.setAttribute('role', 'menuitem');
    this.on('keydown', this.handleSubmenuKeyPress);
  }

  /**
   * Update menu
   *
   * @method update
   */

  MenuButton.prototype.update = function update() {
    var menu = this.createMenu();

    if (this.menu) {
      this.removeChild(this.menu);
    }

    this.menu = menu;
    this.addChild(menu);

    /**
     * Track the state of the menu button
     *
     * @type {Boolean}
     * @private
     */
    this.buttonPressed_ = false;
    this.el_.setAttribute('aria-expanded', false);

    if (this.items && this.items.length === 0) {
      this.hide();
    } else if (this.items && this.items.length > 1) {
      this.show();
    }
  };

  /**
   * Create menu
   *
   * @return {Menu} The constructed menu
   * @method createMenu
   */

  MenuButton.prototype.createMenu = function createMenu() {
    var menu = new _menuJs2['default'](this.player_);

    // Add a title list item to the top
    if (this.options_.title) {
      menu.contentEl().appendChild(Dom.createEl('li', {
        className: 'vjs-menu-title',
        innerHTML: _utilsToTitleCaseJs2['default'](this.options_.title),
        tabIndex: -1
      }));
    }

    this.items = this['createItems']();

    if (this.items) {
      // Add menu items to the menu
      for (var i = 0; i < this.items.length; i++) {
        menu.addItem(this.items[i]);
      }
    }

    return menu;
  };

  /**
   * Create the list of menu items. Specific to each subclass.
   *
   * @method createItems
   */

  MenuButton.prototype.createItems = function createItems() {};

  /**
   * Create the component's DOM element
   *
   * @return {Element}
   * @method createEl
   */

  MenuButton.prototype.createEl = function createEl() {
    return _ClickableComponent.prototype.createEl.call(this, 'div', {
      className: this.buildCSSClass()
    });
  };

  /**
   * Allow sub components to stack CSS class names
   *
   * @return {String} The constructed class name
   * @method buildCSSClass
   */

  MenuButton.prototype.buildCSSClass = function buildCSSClass() {
    var menuButtonClass = 'vjs-menu-button';

    // If the inline option is passed, we want to use different styles altogether.
    if (this.options_.inline === true) {
      menuButtonClass += '-inline';
    } else {
      menuButtonClass += '-popup';
    }

    return 'vjs-menu-button ' + menuButtonClass + ' ' + _ClickableComponent.prototype.buildCSSClass.call(this);
  };

  /**
   * When you click the button it adds focus, which
   * will show the menu indefinitely.
   * So we'll remove focus when the mouse leaves the button.
   * Focus is needed for tab navigation.
   * Allow sub components to stack CSS class names
   *
   * @method handleClick
   */

  MenuButton.prototype.handleClick = function handleClick() {
    this.one('mouseout', Fn.bind(this, function () {
      this.menu.unlockShowing();
      this.el_.blur();
    }));
    if (this.buttonPressed_) {
      this.unpressButton();
    } else {
      this.pressButton();
    }
  };

  /**
   * Handle key press on menu
   *
   * @param {Object} event Key press event
   * @method handleKeyPress
   */

  MenuButton.prototype.handleKeyPress = function handleKeyPress(event) {

    // Escape (27) key or Tab (9) key unpress the 'button'
    if (event.which === 27 || event.which === 9) {
      if (this.buttonPressed_) {
        this.unpressButton();
      }
      // Don't preventDefault for Tab key - we still want to lose focus
      if (event.which !== 9) {
        event.preventDefault();
      }
      // Up (38) key or Down (40) key press the 'button'
    } else if (event.which === 38 || event.which === 40) {
        if (!this.buttonPressed_) {
          this.pressButton();
          event.preventDefault();
        }
      } else {
        _ClickableComponent.prototype.handleKeyPress.call(this, event);
      }
  };

  /**
   * Handle key press on submenu
   *
   * @param {Object} event Key press event
   * @method handleSubmenuKeyPress
   */

  MenuButton.prototype.handleSubmenuKeyPress = function handleSubmenuKeyPress(event) {

    // Escape (27) key or Tab (9) key unpress the 'button'
    if (event.which === 27 || event.which === 9) {
      if (this.buttonPressed_) {
        this.unpressButton();
      }
      // Don't preventDefault for Tab key - we still want to lose focus
      if (event.which !== 9) {
        event.preventDefault();
      }
    }
  };

  /**
   * Makes changes based on button pressed
   *
   * @method pressButton
   */

  MenuButton.prototype.pressButton = function pressButton() {
    this.buttonPressed_ = true;
    this.menu.lockShowing();
    this.el_.setAttribute('aria-expanded', true);
    this.menu.focus(); // set the focus into the submenu
  };

  /**
   * Makes changes based on button unpressed
   *
   * @method unpressButton
   */

  MenuButton.prototype.unpressButton = function unpressButton() {
    this.buttonPressed_ = false;
    this.menu.unlockShowing();
    this.el_.setAttribute('aria-expanded', false);
    this.el_.focus(); // Set focus back to this menu button
  };

  return MenuButton;
})(_clickableComponentJs2['default']);

_componentJs2['default'].registerComponent('MenuButton', MenuButton);
exports['default'] = MenuButton;
module.exports = exports['default'];

},{"../clickable-component.js":64,"../component.js":66,"../utils/dom.js":131,"../utils/fn.js":133,"../utils/to-title-case.js":140,"./menu.js":105}],104:[function(_dereq_,module,exports){
/**
 * @file menu-item.js
 */
'use strict';

exports.__esModule = true;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _clickableComponentJs = _dereq_('../clickable-component.js');

var _clickableComponentJs2 = _interopRequireDefault(_clickableComponentJs);

var _componentJs = _dereq_('../component.js');

var _componentJs2 = _interopRequireDefault(_componentJs);

var _objectAssign = _dereq_('object.assign');

var _objectAssign2 = _interopRequireDefault(_objectAssign);

/**
 * The component for a menu item. `<li>`
 *
 * @param {Player|Object} player
 * @param {Object=} options
 * @extends Button
 * @class MenuItem
 */

var MenuItem = (function (_ClickableComponent) {
  _inherits(MenuItem, _ClickableComponent);

  function MenuItem(player, options) {
    _classCallCheck(this, MenuItem);

    _ClickableComponent.call(this, player, options);

    this.selectable = options['selectable'];

    this.selected(options['selected']);

    if (this.selectable) {
      // TODO: May need to be either menuitemcheckbox or menuitemradio,
      //       and may need logical grouping of menu items.
      this.el_.setAttribute('role', 'menuitemcheckbox');
    } else {
      this.el_.setAttribute('role', 'menuitem');
    }
  }

  /**
   * Create the component's DOM element
   *
   * @param {String=} type Desc
   * @param {Object=} props Desc
   * @return {Element}
   * @method createEl
   */

  MenuItem.prototype.createEl = function createEl(type, props, attrs) {
    return _ClickableComponent.prototype.createEl.call(this, 'li', _objectAssign2['default']({
      className: 'vjs-menu-item',
      innerHTML: this.localize(this.options_['label']),
      tabIndex: -1
    }, props), attrs);
  };

  /**
   * Handle a click on the menu item, and set it to selected
   *
   * @method handleClick
   */

  MenuItem.prototype.handleClick = function handleClick() {
    this.selected(true);
  };

  /**
   * Set this menu item as selected or not
   *
   * @param  {Boolean} selected
   * @method selected
   */

  MenuItem.prototype.selected = function selected(_selected) {
    if (this.selectable) {
      if (_selected) {
        this.addClass('vjs-selected');
        this.el_.setAttribute('aria-checked', true);
        // aria-checked isn't fully supported by browsers/screen readers,
        // so indicate selected state to screen reader in the control text.
        this.controlText(', selected');
      } else {
        this.removeClass('vjs-selected');
        this.el_.setAttribute('aria-checked', false);
        // Indicate un-selected state to screen reader
        // Note that a space clears out the selected state text
        this.controlText(' ');
      }
    }
  };

  return MenuItem;
})(_clickableComponentJs2['default']);

_componentJs2['default'].registerComponent('MenuItem', MenuItem);
exports['default'] = MenuItem;
module.exports = exports['default'];

},{"../clickable-component.js":64,"../component.js":66,"object.assign":45}],105:[function(_dereq_,module,exports){
/**
 * @file menu.js
 */
'use strict';

exports.__esModule = true;

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _componentJs = _dereq_('../component.js');

var _componentJs2 = _interopRequireDefault(_componentJs);

var _utilsDomJs = _dereq_('../utils/dom.js');

var Dom = _interopRequireWildcard(_utilsDomJs);

var _utilsFnJs = _dereq_('../utils/fn.js');

var Fn = _interopRequireWildcard(_utilsFnJs);

var _utilsEventsJs = _dereq_('../utils/events.js');

var Events = _interopRequireWildcard(_utilsEventsJs);

/**
 * The Menu component is used to build pop up menus, including subtitle and
 * captions selection menus.
 *
 * @extends Component
 * @class Menu
 */

var Menu = (function (_Component) {
  _inherits(Menu, _Component);

  function Menu(player, options) {
    _classCallCheck(this, Menu);

    _Component.call(this, player, options);

    this.focusedChild_ = -1;

    this.on('keydown', this.handleKeyPress);
  }

  /**
   * Add a menu item to the menu
   *
   * @param {Object|String} component Component or component type to add
   * @method addItem
   */

  Menu.prototype.addItem = function addItem(component) {
    this.addChild(component);
    component.on('click', Fn.bind(this, function () {
      this.unlockShowing();
      //TODO: Need to set keyboard focus back to the menuButton
    }));
  };

  /**
   * Create the component's DOM element
   *
   * @return {Element}
   * @method createEl
   */

  Menu.prototype.createEl = function createEl() {
    var contentElType = this.options_.contentElType || 'ul';
    this.contentEl_ = Dom.createEl(contentElType, {
      className: 'vjs-menu-content'
    });
    this.contentEl_.setAttribute('role', 'menu');
    var el = _Component.prototype.createEl.call(this, 'div', {
      append: this.contentEl_,
      className: 'vjs-menu'
    });
    el.setAttribute('role', 'presentation');
    el.appendChild(this.contentEl_);

    // Prevent clicks from bubbling up. Needed for Menu Buttons,
    // where a click on the parent is significant
    Events.on(el, 'click', function (event) {
      event.preventDefault();
      event.stopImmediatePropagation();
    });

    return el;
  };

  /**
   * Handle key press for menu
   *
   * @param {Object} event Event object
   * @method handleKeyPress
   */

  Menu.prototype.handleKeyPress = function handleKeyPress(event) {
    if (event.which === 37 || event.which === 40) {
      // Left and Down Arrows
      event.preventDefault();
      this.stepForward();
    } else if (event.which === 38 || event.which === 39) {
      // Up and Right Arrows
      event.preventDefault();
      this.stepBack();
    }
  };

  /**
   * Move to next (lower) menu item for keyboard users
   *
   * @method stepForward
   */

  Menu.prototype.stepForward = function stepForward() {
    var stepChild = 0;

    if (this.focusedChild_ !== undefined) {
      stepChild = this.focusedChild_ + 1;
    }
    this.focus(stepChild);
  };

  /**
   * Move to previous (higher) menu item for keyboard users
   *
   * @method stepBack
   */

  Menu.prototype.stepBack = function stepBack() {
    var stepChild = 0;

    if (this.focusedChild_ !== undefined) {
      stepChild = this.focusedChild_ - 1;
    }
    this.focus(stepChild);
  };

  /**
   * Set focus on a menu item in the menu
   *
   * @param {Object|String} item Index of child item set focus on
   * @method focus
   */

  Menu.prototype.focus = function focus() {
    var item = arguments.length <= 0 || arguments[0] === undefined ? 0 : arguments[0];

    var children = this.children();

    if (children.length > 0) {
      if (item < 0) {
        item = 0;
      } else if (item >= children.length) {
        item = children.length - 1;
      }

      this.focusedChild_ = item;

      children[item].el_.focus();
    }
  };

  return Menu;
})(_componentJs2['default']);

_componentJs2['default'].registerComponent('Menu', Menu);
exports['default'] = Menu;
module.exports = exports['default'];

},{"../component.js":66,"../utils/dom.js":131,"../utils/events.js":132,"../utils/fn.js":133}],106:[function(_dereq_,module,exports){
/**
 * @file modal-dialog.js
 */
'use strict';

exports.__esModule = true;

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _globalDocument = _dereq_('global/document');

var _globalDocument2 = _interopRequireDefault(_globalDocument);

var _utilsDom = _dereq_('./utils/dom');

var Dom = _interopRequireWildcard(_utilsDom);

var _utilsFn = _dereq_('./utils/fn');

var Fn = _interopRequireWildcard(_utilsFn);

var _utilsLog = _dereq_('./utils/log');

var _utilsLog2 = _interopRequireDefault(_utilsLog);

var _component = _dereq_('./component');

var _component2 = _interopRequireDefault(_component);

var _closeButton = _dereq_('./close-button');

var _closeButton2 = _interopRequireDefault(_closeButton);

var MODAL_CLASS_NAME = 'vjs-modal-dialog';
var ESC = 27;

/**
 * The `ModalDialog` displays over the video and its controls, which blocks
 * interaction with the player until it is closed.
 *
 * Modal dialogs include a "Close" button and will close when that button
 * is activated - or when ESC is pressed anywhere.
 *
 * @extends Component
 * @class ModalDialog
 */

var ModalDialog = (function (_Component) {
  _inherits(ModalDialog, _Component);

  /**
   * Constructor for modals.
   *
   * @param  {Player} player
   * @param  {Object} [options]
   * @param  {Mixed} [options.content=undefined]
   *         Provide customized content for this modal.
   *
   * @param  {String} [options.description]
   *         A text description for the modal, primarily for accessibility.
   *
   * @param  {Boolean} [options.fillAlways=false]
   *         Normally, modals are automatically filled only the first time
   *         they open. This tells the modal to refresh its content
   *         every time it opens.
   *
   * @param  {String} [options.label]
   *         A text label for the modal, primarily for accessibility.
   *
   * @param  {Boolean} [options.temporary=true]
   *         If `true`, the modal can only be opened once; it will be
   *         disposed as soon as it's closed.
   *
   * @param  {Boolean} [options.uncloseable=false]
   *         If `true`, the user will not be able to close the modal
   *         through the UI in the normal ways. Programmatic closing is
   *         still possible.
   *
   */

  function ModalDialog(player, options) {
    _classCallCheck(this, ModalDialog);

    _Component.call(this, player, options);
    this.opened_ = this.hasBeenOpened_ = this.hasBeenFilled_ = false;

    this.closeable(!this.options_.uncloseable);
    this.content(this.options_.content);

    // Make sure the contentEl is defined AFTER any children are initialized
    // because we only want the contents of the modal in the contentEl
    // (not the UI elements like the close button).
    this.contentEl_ = Dom.createEl('div', {
      className: MODAL_CLASS_NAME + '-content'
    }, {
      role: 'document'
    });

    this.descEl_ = Dom.createEl('p', {
      className: MODAL_CLASS_NAME + '-description vjs-offscreen',
      id: this.el().getAttribute('aria-describedby')
    });

    Dom.textContent(this.descEl_, this.description());
    this.el_.appendChild(this.descEl_);
    this.el_.appendChild(this.contentEl_);
  }

  /*
   * Modal dialog default options.
   *
   * @type {Object}
   * @private
   */

  /**
   * Create the modal's DOM element
   *
   * @method createEl
   * @return {Element}
   */

  ModalDialog.prototype.createEl = function createEl() {
    return _Component.prototype.createEl.call(this, 'div', {
      className: this.buildCSSClass(),
      tabIndex: -1
    }, {
      'aria-describedby': this.id() + '_description',
      'aria-hidden': 'true',
      'aria-label': this.label(),
      role: 'dialog'
    });
  };

  /**
   * Build the modal's CSS class.
   *
   * @method buildCSSClass
   * @return {String}
   */

  ModalDialog.prototype.buildCSSClass = function buildCSSClass() {
    return MODAL_CLASS_NAME + ' vjs-hidden ' + _Component.prototype.buildCSSClass.call(this);
  };

  /**
   * Handles key presses on the document, looking for ESC, which closes
   * the modal.
   *
   * @method handleKeyPress
   * @param  {Event} e
   */

  ModalDialog.prototype.handleKeyPress = function handleKeyPress(e) {
    if (e.which === ESC && this.closeable()) {
      this.close();
    }
  };

  /**
   * Returns the label string for this modal. Primarily used for accessibility.
   *
   * @return {String}
   */

  ModalDialog.prototype.label = function label() {
    return this.options_.label || this.localize('Modal Window');
  };

  /**
   * Returns the description string for this modal. Primarily used for
   * accessibility.
   *
   * @return {String}
   */

  ModalDialog.prototype.description = function description() {
    var desc = this.options_.description || this.localize('This is a modal window.');

    // Append a universal closeability message if the modal is closeable.
    if (this.closeable()) {
      desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');
    }

    return desc;
  };

  /**
   * Opens the modal.
   *
   * @method open
   * @return {ModalDialog}
   */

  ModalDialog.prototype.open = function open() {
    if (!this.opened_) {
      var player = this.player();

      this.trigger('beforemodalopen');
      this.opened_ = true;

      // Fill content if the modal has never opened before and
      // never been filled.
      if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {
        this.fill();
      }

      // If the player was playing, pause it and take note of its previously
      // playing state.
      this.wasPlaying_ = !player.paused();

      if (this.wasPlaying_) {
        player.pause();
      }

      if (this.closeable()) {
        this.on(_globalDocument2['default'], 'keydown', Fn.bind(this, this.handleKeyPress));
      }

      player.controls(false);
      this.show();
      this.el().setAttribute('aria-hidden', 'false');
      this.trigger('modalopen');
      this.hasBeenOpened_ = true;
    }
    return this;
  };

  /**
   * Whether or not the modal is opened currently.
   *
   * @method opened
   * @param  {Boolean} [value]
   *         If given, it will open (`true`) or close (`false`) the modal.
   *
   * @return {Boolean}
   */

  ModalDialog.prototype.opened = function opened(value) {
    if (typeof value === 'boolean') {
      this[value ? 'open' : 'close']();
    }
    return this.opened_;
  };

  /**
   * Closes the modal.
   *
   * @method close
   * @return {ModalDialog}
   */

  ModalDialog.prototype.close = function close() {
    if (this.opened_) {
      var player = this.player();

      this.trigger('beforemodalclose');
      this.opened_ = false;

      if (this.wasPlaying_) {
        player.play();
      }

      if (this.closeable()) {
        this.off(_globalDocument2['default'], 'keydown', Fn.bind(this, this.handleKeyPress));
      }

      player.controls(true);
      this.hide();
      this.el().setAttribute('aria-hidden', 'true');
      this.trigger('modalclose');

      if (this.options_.temporary) {
        this.dispose();
      }
    }
    return this;
  };

  /**
   * Whether or not the modal is closeable via the UI.
   *
   * @method closeable
   * @param  {Boolean} [value]
   *         If given as a Boolean, it will set the `closeable` option.
   *
   * @return {Boolean}
   */

  ModalDialog.prototype.closeable = function closeable(value) {
    if (typeof value === 'boolean') {
      var closeable = this.closeable_ = !!value;
      var _close = this.getChild('closeButton');

      // If this is being made closeable and has no close button, add one.
      if (closeable && !_close) {

        // The close button should be a child of the modal - not its
        // content element, so temporarily change the content element.
        var temp = this.contentEl_;
        this.contentEl_ = this.el_;
        _close = this.addChild('closeButton');
        this.contentEl_ = temp;
        this.on(_close, 'close', this.close);
      }

      // If this is being made uncloseable and has a close button, remove it.
      if (!closeable && _close) {
        this.off(_close, 'close', this.close);
        this.removeChild(_close);
        _close.dispose();
      }
    }
    return this.closeable_;
  };

  /**
   * Fill the modal's content element with the modal's "content" option.
   *
   * The content element will be emptied before this change takes place.
   *
   * @method fill
   * @return {ModalDialog}
   */

  ModalDialog.prototype.fill = function fill() {
    return this.fillWith(this.content());
  };

  /**
   * Fill the modal's content element with arbitrary content.
   *
   * The content element will be emptied before this change takes place.
   *
   * @method fillWith
   * @param  {Mixed} [content]
   *         The same rules apply to this as apply to the `content` option.
   *
   * @return {ModalDialog}
   */

  ModalDialog.prototype.fillWith = function fillWith(content) {
    var contentEl = this.contentEl();
    var parentEl = contentEl.parentNode;
    var nextSiblingEl = contentEl.nextSibling;

    this.trigger('beforemodalfill');
    this.hasBeenFilled_ = true;

    // Detach the content element from the DOM before performing
    // manipulation to avoid modifying the live DOM multiple times.
    parentEl.removeChild(contentEl);
    this.empty();
    Dom.insertContent(contentEl, content);
    this.trigger('modalfill');

    // Re-inject the re-filled content element.
    if (nextSiblingEl) {
      parentEl.insertBefore(contentEl, nextSiblingEl);
    } else {
      parentEl.appendChild(contentEl);
    }

    return this;
  };

  /**
   * Empties the content element.
   *
   * This happens automatically anytime the modal is filled.
   *
   * @method empty
   * @return {ModalDialog}
   */

  ModalDialog.prototype.empty = function empty() {
    this.trigger('beforemodalempty');
    Dom.emptyEl(this.contentEl());
    this.trigger('modalempty');
    return this;
  };

  /**
   * Gets or sets the modal content, which gets normalized before being
   * rendered into the DOM.
   *
   * This does not update the DOM or fill the modal, but it is called during
   * that process.
   *
   * @method content
   * @param  {Mixed} [value]
   *         If defined, sets the internal content value to be used on the
   *         next call(s) to `fill`. This value is normalized before being
   *         inserted. To "clear" the internal content value, pass `null`.
   *
   * @return {Mixed}
   */

  ModalDialog.prototype.content = function content(value) {
    if (typeof value !== 'undefined') {
      this.content_ = value;
    }
    return this.content_;
  };

  return ModalDialog;
})(_component2['default']);

ModalDialog.prototype.options_ = {
  temporary: true
};

_component2['default'].registerComponent('ModalDialog', ModalDialog);
exports['default'] = ModalDialog;
module.exports = exports['default'];

},{"./close-button":65,"./component":66,"./utils/dom":131,"./utils/fn":133,"./utils/log":136,"global/document":1}],107:[function(_dereq_,module,exports){
/**
 * @file player.js
 */
// Subclasses Component
'use strict';

exports.__esModule = true;

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _componentJs = _dereq_('./component.js');

var _componentJs2 = _interopRequireDefault(_componentJs);

var _globalDocument = _dereq_('global/document');

var _globalDocument2 = _interopRequireDefault(_globalDocument);

var _globalWindow = _dereq_('global/window');

var _globalWindow2 = _interopRequireDefault(_globalWindow);

var _utilsEventsJs = _dereq_('./utils/events.js');

var Events = _interopRequireWildcard(_utilsEventsJs);

var _utilsDomJs = _dereq_('./utils/dom.js');

var Dom = _interopRequireWildcard(_utilsDomJs);

var _utilsFnJs = _dereq_('./utils/fn.js');

var Fn = _interopRequireWildcard(_utilsFnJs);

var _utilsGuidJs = _dereq_('./utils/guid.js');

var Guid = _interopRequireWildcard(_utilsGuidJs);

var _utilsBrowserJs = _dereq_('./utils/browser.js');

var browser = _interopRequireWildcard(_utilsBrowserJs);

var _utilsLogJs = _dereq_('./utils/log.js');

var _utilsLogJs2 = _interopRequireDefault(_utilsLogJs);

var _utilsToTitleCaseJs = _dereq_('./utils/to-title-case.js');

var _utilsToTitleCaseJs2 = _interopRequireDefault(_utilsToTitleCaseJs);

var _utilsTimeRangesJs = _dereq_('./utils/time-ranges.js');

var _utilsBufferJs = _dereq_('./utils/buffer.js');

var _utilsStylesheetJs = _dereq_('./utils/stylesheet.js');

var stylesheet = _interopRequireWildcard(_utilsStylesheetJs);

var _fullscreenApiJs = _dereq_('./fullscreen-api.js');

var _fullscreenApiJs2 = _interopRequireDefault(_fullscreenApiJs);

var _mediaErrorJs = _dereq_('./media-error.js');

var _mediaErrorJs2 = _interopRequireDefault(_mediaErrorJs);

var _safeJsonParseTuple = _dereq_('safe-json-parse/tuple');

var _safeJsonParseTuple2 = _interopRequireDefault(_safeJsonParseTuple);

var _objectAssign = _dereq_('object.assign');

var _objectAssign2 = _interopRequireDefault(_objectAssign);

var _utilsMergeOptionsJs = _dereq_('./utils/merge-options.js');

var _utilsMergeOptionsJs2 = _interopRequireDefault(_utilsMergeOptionsJs);

var _tracksTextTrackListConverterJs = _dereq_('./tracks/text-track-list-converter.js');

var _tracksTextTrackListConverterJs2 = _interopRequireDefault(_tracksTextTrackListConverterJs);

// Include required child components (importing also registers them)

var _techLoaderJs = _dereq_('./tech/loader.js');

var _techLoaderJs2 = _interopRequireDefault(_techLoaderJs);

var _posterImageJs = _dereq_('./poster-image.js');

var _posterImageJs2 = _interopRequireDefault(_posterImageJs);

var _tracksTextTrackDisplayJs = _dereq_('./tracks/text-track-display.js');

var _tracksTextTrackDisplayJs2 = _interopRequireDefault(_tracksTextTrackDisplayJs);

var _loadingSpinnerJs = _dereq_('./loading-spinner.js');

var _loadingSpinnerJs2 = _interopRequireDefault(_loadingSpinnerJs);

var _bigPlayButtonJs = _dereq_('./big-play-button.js');

var _bigPlayButtonJs2 = _interopRequireDefault(_bigPlayButtonJs);

var _controlBarControlBarJs = _dereq_('./control-bar/control-bar.js');

var _controlBarControlBarJs2 = _interopRequireDefault(_controlBarControlBarJs);

var _errorDisplayJs = _dereq_('./error-display.js');

var _errorDisplayJs2 = _interopRequireDefault(_errorDisplayJs);

var _tracksTextTrackSettingsJs = _dereq_('./tracks/text-track-settings.js');

var _tracksTextTrackSettingsJs2 = _interopRequireDefault(_tracksTextTrackSettingsJs);

var _modalDialog = _dereq_('./modal-dialog');

var _modalDialog2 = _interopRequireDefault(_modalDialog);

// Require html5 tech, at least for disposing the original video tag

var _techTechJs = _dereq_('./tech/tech.js');

var _techTechJs2 = _interopRequireDefault(_techTechJs);

var _techHtml5Js = _dereq_('./tech/html5.js');

var _techHtml5Js2 = _interopRequireDefault(_techHtml5Js);

/**
 * An instance of the `Player` class is created when any of the Video.js setup methods are used to initialize a video.
 * ```js
 * var myPlayer = videojs('example_video_1');
 * ```
 * In the following example, the `data-setup` attribute tells the Video.js library to create a player instance when the library is ready.
 * ```html
 * <video id="example_video_1" data-setup='{}' controls>
 *   <source src="my-source.mp4" type="video/mp4">
 * </video>
 * ```
 * After an instance has been created it can be accessed globally using `Video('example_video_1')`.
 *
 * @param {Element} tag        The original video tag used for configuring options
 * @param {Object=} options    Object of option names and values
 * @param {Function=} ready    Ready callback function
 * @extends Component
 * @class Player
 */

var Player = (function (_Component) {
  _inherits(Player, _Component);

  /**
   * player's constructor function
   *
   * @constructs
   * @method init
   * @param {Element} tag        The original video tag used for configuring options
   * @param {Object=} options    Player options
   * @param {Function=} ready    Ready callback function
   */

  function Player(tag, options, ready) {
    var _this = this;

    _classCallCheck(this, Player);

    // Make sure tag ID exists
    tag.id = tag.id || 'vjs_video_' + Guid.newGUID();

    // Set Options
    // The options argument overrides options set in the video tag
    // which overrides globally set options.
    // This latter part coincides with the load order
    // (tag must exist before Player)
    options = _objectAssign2['default'](Player.getTagSettings(tag), options);

    // Delay the initialization of children because we need to set up
    // player properties first, and can't use `this` before `super()`
    options.initChildren = false;

    // Same with creating the element
    options.createEl = false;

    // we don't want the player to report touch activity on itself
    // see enableTouchActivity in Component
    options.reportTouchActivity = false;

    // Run base component initializing with new options
    _Component.call(this, null, options, ready);

    // if the global option object was accidentally blown away by
    // someone, bail early with an informative error
    if (!this.options_ || !this.options_.techOrder || !this.options_.techOrder.length) {
      throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');
    }

    this.tag = tag; // Store the original tag used to set options

    // Store the tag attributes used to restore html5 element
    this.tagAttributes = tag && Dom.getElAttributes(tag);

    // Update current language
    this.language(this.options_.language);

    // Update Supported Languages
    if (options.languages) {
      (function () {
        // Normalise player option languages to lowercase
        var languagesToLower = {};

        Object.getOwnPropertyNames(options.languages).forEach(function (name) {
          languagesToLower[name.toLowerCase()] = options.languages[name];
        });
        _this.languages_ = languagesToLower;
      })();
    } else {
      this.languages_ = Player.prototype.options_.languages;
    }

    // Cache for video property values.
    this.cache_ = {};

    // Set poster
    this.poster_ = options.poster || '';

    // Set controls
    this.controls_ = !!options.controls;

    // Original tag settings stored in options
    // now remove immediately so native controls don't flash.
    // May be turned back on by HTML5 tech if nativeControlsForTouch is true
    tag.controls = false;

    /*
     * Store the internal state of scrubbing
     *
     * @private
     * @return {Boolean} True if the user is scrubbing
     */
    this.scrubbing_ = false;

    this.el_ = this.createEl();

    // We also want to pass the original player options to each component and plugin
    // as well so they don't need to reach back into the player for options later.
    // We also need to do another copy of this.options_ so we don't end up with
    // an infinite loop.
    var playerOptionsCopy = _utilsMergeOptionsJs2['default'](this.options_);

    // Load plugins
    if (options.plugins) {
      (function () {
        var plugins = options.plugins;

        Object.getOwnPropertyNames(plugins).forEach(function (name) {
          if (typeof this[name] === 'function') {
            this[name](plugins[name]);
          } else {
            _utilsLogJs2['default'].error('Unable to find plugin:', name);
          }
        }, _this);
      })();
    }

    this.options_.playerOptions = playerOptionsCopy;

    this.initChildren();

    // Set isAudio based on whether or not an audio tag was used
    this.isAudio(tag.nodeName.toLowerCase() === 'audio');

    // Update controls className. Can't do this when the controls are initially
    // set because the element doesn't exist yet.
    if (this.controls()) {
      this.addClass('vjs-controls-enabled');
    } else {
      this.addClass('vjs-controls-disabled');
    }

    if (this.isAudio()) {
      this.addClass('vjs-audio');
    }

    if (this.flexNotSupported_()) {
      this.addClass('vjs-no-flex');
    }

    // TODO: Make this smarter. Toggle user state between touching/mousing
    // using events, since devices can have both touch and mouse events.
    // if (browser.TOUCH_ENABLED) {
    //   this.addClass('vjs-touch-enabled');
    // }

    // Make player easily findable by ID
    Player.players[this.id_] = this;

    // When the player is first initialized, trigger activity so components
    // like the control bar show themselves if needed
    this.userActive(true);
    this.reportUserActivity();
    this.listenForUserActivity_();

    this.on('fullscreenchange', this.handleFullscreenChange_);
    this.on('stageclick', this.handleStageClick_);
  }

  /*
   * Global player list
   *
   * @type {Object}
   */

  /**
   * Destroys the video player and does any necessary cleanup
   * ```js
   *     myPlayer.dispose();
   * ```
   * This is especially helpful if you are dynamically adding and removing videos
   * to/from the DOM.
   *
   * @method dispose
   */

  Player.prototype.dispose = function dispose() {
    this.trigger('dispose');
    // prevent dispose from being called twice
    this.off('dispose');

    if (this.styleEl_ && this.styleEl_.parentNode) {
      this.styleEl_.parentNode.removeChild(this.styleEl_);
    }

    // Kill reference to this player
    Player.players[this.id_] = null;
    if (this.tag && this.tag.player) {
      this.tag.player = null;
    }
    if (this.el_ && this.el_.player) {
      this.el_.player = null;
    }

    if (this.tech_) {
      this.tech_.dispose();
    }

    _Component.prototype.dispose.call(this);
  };

  /**
   * Create the component's DOM element
   *
   * @return {Element}
   * @method createEl
   */

  Player.prototype.createEl = function createEl() {
    var el = this.el_ = _Component.prototype.createEl.call(this, 'div');
    var tag = this.tag;

    // Remove width/height attrs from tag so CSS can make it 100% width/height
    tag.removeAttribute('width');
    tag.removeAttribute('height');

    // Copy over all the attributes from the tag, including ID and class
    // ID will now reference player box, not the video tag
    var attrs = Dom.getElAttributes(tag);

    Object.getOwnPropertyNames(attrs).forEach(function (attr) {
      // workaround so we don't totally break IE7
      // http://stackoverflow.com/questions/3653444/css-styles-not-applied-on-dynamic-elements-in-internet-explorer-7
      if (attr === 'class') {
        el.className = attrs[attr];
      } else {
        el.setAttribute(attr, attrs[attr]);
      }
    });

    // Update tag id/class for use as HTML5 playback tech
    // Might think we should do this after embedding in container so .vjs-tech class
    // doesn't flash 100% width/height, but class only applies with .video-js parent
    tag.playerId = tag.id;
    tag.id += '_html5_api';
    tag.className = 'vjs-tech';

    // Make player findable on elements
    tag.player = el.player = this;
    // Default state of video is paused
    this.addClass('vjs-paused');

    // Add a style element in the player that we'll use to set the width/height
    // of the player in a way that's still overrideable by CSS, just like the
    // video element
    this.styleEl_ = stylesheet.createStyleElement('vjs-styles-dimensions');
    var defaultsStyleEl = Dom.$('.vjs-styles-defaults');
    var head = Dom.$('head');
    head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);

    // Pass in the width/height/aspectRatio options which will update the style el
    this.width(this.options_.width);
    this.height(this.options_.height);
    this.fluid(this.options_.fluid);
    this.aspectRatio(this.options_.aspectRatio);

    // insertElFirst seems to cause the networkState to flicker from 3 to 2, so
    // keep track of the original for later so we can know if the source originally failed
    tag.initNetworkState_ = tag.networkState;

    // Wrap video tag in div (el/box) container
    if (tag.parentNode) {
      tag.parentNode.insertBefore(el, tag);
    }
    Dom.insertElFirst(tag, el); // Breaks iPhone, fixed in HTML5 setup.
	this.disableRightClick(tag.id);
    this.el_ = el;

    return el;
  };
  
   /**
   * Disable player right click
   */
   
   Player.prototype.disableRightClick = function disableRightClick(tags) {
  	var myVideo = document.getElementById(tags);
	if (myVideo.addEventListener) {
	    myVideo.addEventListener('contextmenu', function(e) {
	        e.preventDefault();
	    }, false);
	} else {
	    myVideo.attachEvent('oncontextmenu', function() {
	        window.event.returnValue = false;
	    });
	} 
  };
  
  /**
   * Get/set player width
   *
   * @param {Number=} value Value for width
   * @return {Number} Width when getting
   * @method width
   */

  Player.prototype.width = function width(value) {
    return this.dimension('width', value);
  };

  /**
   * Get/set player height
   *
   * @param {Number=} value Value for height
   * @return {Number} Height when getting
   * @method height
   */

  Player.prototype.height = function height(value) {
    return this.dimension('height', value);
  };

  /**
   * Get/set dimension for player
   *
   * @param {String} dimension Either width or height
   * @param {Number=} value Value for dimension
   * @return {Component}
   * @method dimension
   */

  Player.prototype.dimension = function dimension(_dimension, value) {
    var privDimension = _dimension + '_';

    if (value === undefined) {
      return this[privDimension] || 0;
    }

    if (value === '') {
      // If an empty string is given, reset the dimension to be automatic
      this[privDimension] = undefined;
    } else {
      var parsedVal = parseFloat(value);

      if (isNaN(parsedVal)) {
        _utilsLogJs2['default'].error('Improper value "' + value + '" supplied for for ' + _dimension);
        return this;
      }

      this[privDimension] = parsedVal;
    }

    this.updateStyleEl_();
    return this;
  };

  /**
   * Add/remove the vjs-fluid class
   *
   * @param {Boolean} bool Value of true adds the class, value of false removes the class
   * @method fluid
   */

  Player.prototype.fluid = function fluid(bool) {
    if (bool === undefined) {
      return !!this.fluid_;
    }

    this.fluid_ = !!bool;

    if (bool) {
      this.addClass('vjs-fluid');
    } else {
      this.removeClass('vjs-fluid');
    }
  };

  /**
   * Get/Set the aspect ratio
   *
   * @param {String=} ratio Aspect ratio for player
   * @return aspectRatio
   * @method aspectRatio
   */

  Player.prototype.aspectRatio = function aspectRatio(ratio) {
    if (ratio === undefined) {
      return this.aspectRatio_;
    }

    // Check for width:height format
    if (!/^\d+\:\d+$/.test(ratio)) {
      throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');
    }
    this.aspectRatio_ = ratio;

    // We're assuming if you set an aspect ratio you want fluid mode,
    // because in fixed mode you could calculate width and height yourself.
    this.fluid(true);

    this.updateStyleEl_();
  };

  /**
   * Update styles of the player element (height, width and aspect ratio)
   *
   * @method updateStyleEl_
   */

  Player.prototype.updateStyleEl_ = function updateStyleEl_() {
    var width = undefined;
    var height = undefined;
    var aspectRatio = undefined;
    var idClass = undefined;

    // The aspect ratio is either used directly or to calculate width and height.
    if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {
      // Use any aspectRatio that's been specifically set
      aspectRatio = this.aspectRatio_;
    } else if (this.videoWidth()) {
      // Otherwise try to get the aspect ratio from the video metadata
      aspectRatio = this.videoWidth() + ':' + this.videoHeight();
    } else {
      // Or use a default. The video element's is 2:1, but 16:9 is more common.
      aspectRatio = '16:9';
    }

    // Get the ratio as a decimal we can use to calculate dimensions
    var ratioParts = aspectRatio.split(':');
    var ratioMultiplier = ratioParts[1] / ratioParts[0];

    if (this.width_ !== undefined) {
      // Use any width that's been specifically set
      width = this.width_;
    } else if (this.height_ !== undefined) {
      // Or calulate the width from the aspect ratio if a height has been set
      width = this.height_ / ratioMultiplier;
    } else {
      // Or use the video's metadata, or use the video el's default of 300
      width = this.videoWidth() || 300;
    }

    if (this.height_ !== undefined) {
      // Use any height that's been specifically set
      height = this.height_;
    } else {
      // Otherwise calculate the height from the ratio and the width
      height = width * ratioMultiplier;
    }

    // Ensure the CSS class is valid by starting with an alpha character
    if (/^[^a-zA-Z]/.test(this.id())) {
      idClass = 'dimensions-' + this.id();
    } else {
      idClass = this.id() + '-dimensions';
    }

    // Ensure the right class is still on the player for the style element
    this.addClass(idClass);

    stylesheet.setTextContent(this.styleEl_, '\n      .' + idClass + ' {\n        width: ' + width + 'px;\n        height: ' + height + 'px;\n      }\n\n      .' + idClass + '.vjs-fluid {\n        padding-top: ' + ratioMultiplier * 100 + '%;\n      }\n    ');
  };

  /**
   * Load the Media Playback Technology (tech)
   * Load/Create an instance of playback technology including element and API methods
   * And append playback element in player div.
   *
   * @param {String} techName Name of the playback technology
   * @param {String} source Video source
   * @method loadTech_
   * @private
   */

  Player.prototype.loadTech_ = function loadTech_(techName, source) {

    // Pause and remove current playback technology
    if (this.tech_) {
      this.unloadTech_();
    }

    // get rid of the HTML5 video tag as soon as we are using another tech
    if (techName !== 'Html5' && this.tag) {
      _techTechJs2['default'].getTech('Html5').disposeMediaElement(this.tag);
      this.tag.player = null;
      this.tag = null;
    }

    this.techName_ = techName;

    // Turn off API access because we're loading a new tech that might load asynchronously
    this.isReady_ = false;

    // Grab tech-specific options from player options and add source and parent element to use.
    var techOptions = _objectAssign2['default']({
      'nativeControlsForTouch': this.options_.nativeControlsForTouch,
      'source': source,
      'playerId': this.id(),
      'techId': this.id() + '_' + techName + '_api',
      'textTracks': this.textTracks_,
      'autoplay': this.options_.autoplay,
      'preload': this.options_.preload,
      'loop': this.options_.loop,
      'muted': this.options_.muted,
      'poster': this.poster(),
      'language': this.language(),
      'vtt.js': this.options_['vtt.js']
    }, this.options_[techName.toLowerCase()]);

    if (this.tag) {
      techOptions.tag = this.tag;
    }

    if (source) {
      this.currentType_ = source.type;
      if (source.src === this.cache_.src && this.cache_.currentTime > 0) {
        techOptions.startTime = this.cache_.currentTime;
      }

      this.cache_.src = source.src;
    }

    // Initialize tech instance
    var techComponent = _techTechJs2['default'].getTech(techName);
    // Support old behavior of techs being registered as components.
    // Remove once that deprecated behavior is removed.
    if (!techComponent) {
      techComponent = _componentJs2['default'].getComponent(techName);
    }
    this.tech_ = new techComponent(techOptions);

    // player.triggerReady is always async, so don't need this to be async
    this.tech_.ready(Fn.bind(this, this.handleTechReady_), true);

    _tracksTextTrackListConverterJs2['default'].jsonToTextTracks(this.textTracksJson_ || [], this.tech_);

    // Listen to all HTML5-defined events and trigger them on the player
    this.on(this.tech_, 'loadstart', this.handleTechLoadStart_);
    this.on(this.tech_, 'waiting', this.handleTechWaiting_);
    this.on(this.tech_, 'canplay', this.handleTechCanPlay_);
    this.on(this.tech_, 'canplaythrough', this.handleTechCanPlayThrough_);
    this.on(this.tech_, 'playing', this.handleTechPlaying_);
    this.on(this.tech_, 'ended', this.handleTechEnded_);
    this.on(this.tech_, 'seeking', this.handleTechSeeking_);
    this.on(this.tech_, 'seeked', this.handleTechSeeked_);
    this.on(this.tech_, 'play', this.handleTechPlay_);
    this.on(this.tech_, 'firstplay', this.handleTechFirstPlay_);
    this.on(this.tech_, 'pause', this.handleTechPause_);
    this.on(this.tech_, 'progress', this.handleTechProgress_);
    this.on(this.tech_, 'durationchange', this.handleTechDurationChange_);
    this.on(this.tech_, 'fullscreenchange', this.handleTechFullscreenChange_);
    this.on(this.tech_, 'error', this.handleTechError_);
    this.on(this.tech_, 'suspend', this.handleTechSuspend_);
    this.on(this.tech_, 'abort', this.handleTechAbort_);
    this.on(this.tech_, 'emptied', this.handleTechEmptied_);
    this.on(this.tech_, 'stalled', this.handleTechStalled_);
    this.on(this.tech_, 'loadedmetadata', this.handleTechLoadedMetaData_);
    this.on(this.tech_, 'loadeddata', this.handleTechLoadedData_);
    this.on(this.tech_, 'timeupdate', this.handleTechTimeUpdate_);
    this.on(this.tech_, 'ratechange', this.handleTechRateChange_);
    this.on(this.tech_, 'volumechange', this.handleTechVolumeChange_);
    this.on(this.tech_, 'texttrackchange', this.handleTechTextTrackChange_);
    this.on(this.tech_, 'loadedmetadata', this.updateStyleEl_);
    this.on(this.tech_, 'posterchange', this.handleTechPosterChange_);

    this.usingNativeControls(this.techGet_('controls'));

    if (this.controls() && !this.usingNativeControls()) {
      this.addTechControlsListeners_();
    }

    // Add the tech element in the DOM if it was not already there
    // Make sure to not insert the original video element if using Html5
    if (this.tech_.el().parentNode !== this.el() && (techName !== 'Html5' || !this.tag)) {
      Dom.insertElFirst(this.tech_.el(), this.el());
    }

    // Get rid of the original video tag reference after the first tech is loaded
    if (this.tag) {
      this.tag.player = null;
      this.tag = null;
    }
  };

  /**
   * Unload playback technology
   *
   * @method unloadTech_
   * @private
   */

  Player.prototype.unloadTech_ = function unloadTech_() {
    // Save the current text tracks so that we can reuse the same text tracks with the next tech
    this.textTracks_ = this.textTracks();
    this.textTracksJson_ = _tracksTextTrackListConverterJs2['default'].textTracksToJson(this.tech_);

    this.isReady_ = false;

    this.tech_.dispose();

    this.tech_ = false;
  };

  /**
   * Return a reference to the current tech.
   * It will only return a reference to the tech if given an object with the
   * `IWillNotUseThisInPlugins` property on it. This is try and prevent misuse
   * of techs by plugins.
   *
   * @param {Object}
   * @return {Object} The Tech
   * @method tech
   */

  Player.prototype.tech = function tech(safety) {
    if (safety && safety.IWillNotUseThisInPlugins) {
      return this.tech_;
    }
    var errorText = '\n      Please make sure that you are not using this inside of a plugin.\n      To disable this alert and error, please pass in an object with\n      `IWillNotUseThisInPlugins` to the `tech` method. See\n      https://github.com/videojs/video.js/issues/2617 for more info.\n    ';
    _globalWindow2['default'].alert(errorText);
    throw new Error(errorText);
  };

  /**
   * Set up click and touch listeners for the playback element
   *
   * On desktops, a click on the video itself will toggle playback,
   * on a mobile device a click on the video toggles controls.
   * (toggling controls is done by toggling the user state between active and
   * inactive)
   * A tap can signal that a user has become active, or has become inactive
   * e.g. a quick tap on an iPhone movie should reveal the controls. Another
   * quick tap should hide them again (signaling the user is in an inactive
   * viewing state)
   * In addition to this, we still want the user to be considered inactive after
   * a few seconds of inactivity.
   * Note: the only part of iOS interaction we can't mimic with this setup
   * is a touch and hold on the video element counting as activity in order to
   * keep the controls showing, but that shouldn't be an issue. A touch and hold
   * on any controls will still keep the user active
   *
   * @private
   * @method addTechControlsListeners_
   */

  Player.prototype.addTechControlsListeners_ = function addTechControlsListeners_() {
    // Make sure to remove all the previous listeners in case we are called multiple times.
    this.removeTechControlsListeners_();

    // Some browsers (Chrome & IE) don't trigger a click on a flash swf, but do
    // trigger mousedown/up.
    // http://stackoverflow.com/questions/1444562/javascript-onclick-event-over-flash-object
    // Any touch events are set to block the mousedown event from happening
    this.on(this.tech_, 'mousedown', this.handleTechClick_);

    // If the controls were hidden we don't want that to change without a tap event
    // so we'll check if the controls were already showing before reporting user
    // activity
    this.on(this.tech_, 'touchstart', this.handleTechTouchStart_);
    this.on(this.tech_, 'touchmove', this.handleTechTouchMove_);
    this.on(this.tech_, 'touchend', this.handleTechTouchEnd_);

    // The tap listener needs to come after the touchend listener because the tap
    // listener cancels out any reportedUserActivity when setting userActive(false)
    this.on(this.tech_, 'tap', this.handleTechTap_);
  };

  /**
   * Remove the listeners used for click and tap controls. This is needed for
   * toggling to controls disabled, where a tap/touch should do nothing.
   *
   * @method removeTechControlsListeners_
   * @private
   */

  Player.prototype.removeTechControlsListeners_ = function removeTechControlsListeners_() {
    // We don't want to just use `this.off()` because there might be other needed
    // listeners added by techs that extend this.
    this.off(this.tech_, 'tap', this.handleTechTap_);
    this.off(this.tech_, 'touchstart', this.handleTechTouchStart_);
    this.off(this.tech_, 'touchmove', this.handleTechTouchMove_);
    this.off(this.tech_, 'touchend', this.handleTechTouchEnd_);
    this.off(this.tech_, 'mousedown', this.handleTechClick_);
  };

  /**
   * Player waits for the tech to be ready
   *
   * @method handleTechReady_
   * @private
   */

  Player.prototype.handleTechReady_ = function handleTechReady_() {
    this.triggerReady();

    // Keep the same volume as before
    if (this.cache_.volume) {
      this.techCall_('setVolume', this.cache_.volume);
    }

    // Look if the tech found a higher resolution poster while loading
    this.handleTechPosterChange_();

    // Update the duration if available
    this.handleTechDurationChange_();

    // Chrome and Safari both have issues with autoplay.
    // In Safari (5.1.1), when we move the video element into the container div, autoplay doesn't work.
    // In Chrome (15), if you have autoplay + a poster + no controls, the video gets hidden (but audio plays)
    // This fixes both issues. Need to wait for API, so it updates displays correctly
    if (this.src() && this.tag && this.options_.autoplay && this.paused()) {
      delete this.tag.poster; // Chrome Fix. Fixed in Chrome v16.
      this.play();
    }
  };

  /**
   * Fired when the user agent begins looking for media data
   *
   * @private
   * @method handleTechLoadStart_
   */

  Player.prototype.handleTechLoadStart_ = function handleTechLoadStart_() {
    // TODO: Update to use `emptied` event instead. See #1277.

    this.removeClass('vjs-ended');

    // reset the error state
    this.error(null);

    // If it's already playing we want to trigger a firstplay event now.
    // The firstplay event relies on both the play and loadstart events
    // which can happen in any order for a new source
    if (!this.paused()) {
      this.trigger('loadstart');
      this.trigger('firstplay');
    } else {
      // reset the hasStarted state
      this.hasStarted(false);
      this.trigger('loadstart');
    }
  };

  /**
   * Add/remove the vjs-has-started class
   *
   * @param {Boolean} hasStarted The value of true adds the class the value of false remove the class
   * @return {Boolean} Boolean value if has started
   * @private
   * @method hasStarted
   */

  Player.prototype.hasStarted = function hasStarted(_hasStarted) {
    if (_hasStarted !== undefined) {
      // only update if this is a new value
      if (this.hasStarted_ !== _hasStarted) {
        this.hasStarted_ = _hasStarted;
        if (_hasStarted) {
          this.addClass('vjs-has-started');
          // trigger the firstplay event if this newly has played
          this.trigger('firstplay');
        } else {
          this.removeClass('vjs-has-started');
        }
      }
      return this;
    }
    return !!this.hasStarted_;
  };

  /**
   * Fired whenever the media begins or resumes playback
   *
   * @private
   * @method handleTechPlay_
   */

  Player.prototype.handleTechPlay_ = function handleTechPlay_() {
    this.removeClass('vjs-ended');
    this.removeClass('vjs-paused');
    this.addClass('vjs-playing');

    // hide the poster when the user hits play
    // https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play
    this.hasStarted(true);

    this.trigger('play');
  };

  /**
   * Fired whenever the media begins waiting
   *
   * @private
   * @method handleTechWaiting_
   */

  Player.prototype.handleTechWaiting_ = function handleTechWaiting_() {
    this.addClass('vjs-waiting');
    this.trigger('waiting');
  };

  /**
   * A handler for events that signal that waiting has ended
   * which is not consistent between browsers. See #1351
   *
   * @private
   * @method handleTechCanPlay_
   */

  Player.prototype.handleTechCanPlay_ = function handleTechCanPlay_() {
    this.removeClass('vjs-waiting');
    this.trigger('canplay');
  };

  /**
   * A handler for events that signal that waiting has ended
   * which is not consistent between browsers. See #1351
   *
   * @private
   * @method handleTechCanPlayThrough_
   */

  Player.prototype.handleTechCanPlayThrough_ = function handleTechCanPlayThrough_() {
    this.removeClass('vjs-waiting');
    this.trigger('canplaythrough');
  };

  /**
   * A handler for events that signal that waiting has ended
   * which is not consistent between browsers. See #1351
   *
   * @private
   * @method handleTechPlaying_
   */

  Player.prototype.handleTechPlaying_ = function handleTechPlaying_() {
    this.removeClass('vjs-waiting');
    this.trigger('playing');
  };

  /**
   * Fired whenever the player is jumping to a new time
   *
   * @private
   * @method handleTechSeeking_
   */

  Player.prototype.handleTechSeeking_ = function handleTechSeeking_() {
    this.addClass('vjs-seeking');
    this.trigger('seeking');
  };

  /**
   * Fired when the player has finished jumping to a new time
   *
   * @private
   * @method handleTechSeeked_
   */

  Player.prototype.handleTechSeeked_ = function handleTechSeeked_() {
    this.removeClass('vjs-seeking');
    this.trigger('seeked');
  };

  /**
   * Fired the first time a video is played
   * Not part of the HLS spec, and we're not sure if this is the best
   * implementation yet, so use sparingly. If you don't have a reason to
   * prevent playback, use `myPlayer.one('play');` instead.
   *
   * @private
   * @method handleTechFirstPlay_
   */

  Player.prototype.handleTechFirstPlay_ = function handleTechFirstPlay_() {
    //If the first starttime attribute is specified
    //then we will start at the given offset in seconds
    if (this.options_.starttime) {
      this.currentTime(this.options_.starttime);
    }

    this.addClass('vjs-has-started');
    this.trigger('firstplay');
  };

  /**
   * Fired whenever the media has been paused
   *
   * @private
   * @method handleTechPause_
   */

  Player.prototype.handleTechPause_ = function handleTechPause_() {
    this.removeClass('vjs-playing');
    this.addClass('vjs-paused');
    this.trigger('pause');
  };

  /**
   * Fired while the user agent is downloading media data
   *
   * @private
   * @method handleTechProgress_
   */

  Player.prototype.handleTechProgress_ = function handleTechProgress_() {
    this.trigger('progress');
  };

  /**
   * Fired when the end of the media resource is reached (currentTime == duration)
   *
   * @private
   * @method handleTechEnded_
   */

  Player.prototype.handleTechEnded_ = function handleTechEnded_() {
    this.addClass('vjs-ended');
    if (this.options_.loop) {
      this.currentTime(0);
      this.play();
    } else if (!this.paused()) {
      this.pause();
    }

    this.trigger('ended');
  };

  /**
   * Fired when the duration of the media resource is first known or changed
   *
   * @private
   * @method handleTechDurationChange_
   */

  Player.prototype.handleTechDurationChange_ = function handleTechDurationChange_() {
    this.duration(this.techGet_('duration'));
  };

  /**
   * Handle a click on the media element to play/pause
   *
   * @param {Object=} event Event object
   * @private
   * @method handleTechClick_
   */

  Player.prototype.handleTechClick_ = function handleTechClick_(event) {
    // We're using mousedown to detect clicks thanks to Flash, but mousedown
    // will also be triggered with right-clicks, so we need to prevent that
    if (event.button !== 0) return;

    // When controls are disabled a click should not toggle playback because
    // the click is considered a control
    if (this.controls()) {
      if (this.paused()) {
        this.play();
      } else {
        this.pause();
      }
    }
  };

  /**
   * Handle a tap on the media element. It will toggle the user
   * activity state, which hides and shows the controls.
   *
   * @private
   * @method handleTechTap_
   */

  Player.prototype.handleTechTap_ = function handleTechTap_() {
    this.userActive(!this.userActive());
  };

  /**
   * Handle touch to start
   *
   * @private
   * @method handleTechTouchStart_
   */

  Player.prototype.handleTechTouchStart_ = function handleTechTouchStart_() {
    this.userWasActive = this.userActive();
  };

  /**
   * Handle touch to move
   *
   * @private
   * @method handleTechTouchMove_
   */

  Player.prototype.handleTechTouchMove_ = function handleTechTouchMove_() {
    if (this.userWasActive) {
      this.reportUserActivity();
    }
  };

  /**
   * Handle touch to end
   *
   * @private
   * @method handleTechTouchEnd_
   */

  Player.prototype.handleTechTouchEnd_ = function handleTechTouchEnd_(event) {
    // Stop the mouse events from also happening
    event.preventDefault();
  };

  /**
   * Fired when the player switches in or out of fullscreen mode
   *
   * @private
   * @method handleFullscreenChange_
   */

  Player.prototype.handleFullscreenChange_ = function handleFullscreenChange_() {
    if (this.isFullscreen()) {
      this.addClass('vjs-fullscreen');
    } else {
      this.removeClass('vjs-fullscreen');
    }
  };

  /**
   * native click events on the SWF aren't triggered on IE11, Win8.1RT
   * use stageclick events triggered from inside the SWF instead
   *
   * @private
   * @method handleStageClick_
   */

  Player.prototype.handleStageClick_ = function handleStageClick_() {
    this.reportUserActivity();
  };

  /**
   * Handle Tech Fullscreen Change
   *
   * @private
   * @method handleTechFullscreenChange_
   */

  Player.prototype.handleTechFullscreenChange_ = function handleTechFullscreenChange_(event, data) {
    if (data) {
      this.isFullscreen(data.isFullscreen);
    }
    this.trigger('fullscreenchange');
  };

  /**
   * Fires when an error occurred during the loading of an audio/video
   *
   * @private
   * @method handleTechError_
   */

  Player.prototype.handleTechError_ = function handleTechError_() {
    var error = this.tech_.error();
    this.error(error && error.code);
  };

  /**
   * Fires when the browser is intentionally not getting media data
   *
   * @private
   * @method handleTechSuspend_
   */

  Player.prototype.handleTechSuspend_ = function handleTechSuspend_() {
    this.trigger('suspend');
  };

  /**
   * Fires when the loading of an audio/video is aborted
   *
   * @private
   * @method handleTechAbort_
   */

  Player.prototype.handleTechAbort_ = function handleTechAbort_() {
    this.trigger('abort');
  };

  /**
   * Fires when the current playlist is empty
   *
   * @private
   * @method handleTechEmptied_
   */

  Player.prototype.handleTechEmptied_ = function handleTechEmptied_() {
    this.trigger('emptied');
  };

  /**
   * Fires when the browser is trying to get media data, but data is not available
   *
   * @private
   * @method handleTechStalled_
   */

  Player.prototype.handleTechStalled_ = function handleTechStalled_() {
    this.trigger('stalled');
  };

  /**
   * Fires when the browser has loaded meta data for the audio/video
   *
   * @private
   * @method handleTechLoadedMetaData_
   */

  Player.prototype.handleTechLoadedMetaData_ = function handleTechLoadedMetaData_() {
    this.trigger('loadedmetadata');
  };

  /**
   * Fires when the browser has loaded the current frame of the audio/video
   *
   * @private
   * @method handleTechLoadedData_
   */

  Player.prototype.handleTechLoadedData_ = function handleTechLoadedData_() {
    this.trigger('loadeddata');
  };

  /**
   * Fires when the current playback position has changed
   *
   * @private
   * @method handleTechTimeUpdate_
   */

  Player.prototype.handleTechTimeUpdate_ = function handleTechTimeUpdate_() {
    this.trigger('timeupdate');
  };

  /**
   * Fires when the playing speed of the audio/video is changed
   *
   * @private
   * @method handleTechRateChange_
   */

  Player.prototype.handleTechRateChange_ = function handleTechRateChange_() {
    this.trigger('ratechange');
  };

  /**
   * Fires when the volume has been changed
   *
   * @private
   * @method handleTechVolumeChange_
   */

  Player.prototype.handleTechVolumeChange_ = function handleTechVolumeChange_() {
    this.trigger('volumechange');
  };

  /**
   * Fires when the text track has been changed
   *
   * @private
   * @method handleTechTextTrackChange_
   */

  Player.prototype.handleTechTextTrackChange_ = function handleTechTextTrackChange_() {
    this.trigger('texttrackchange');
  };

  /**
   * Get object for cached values.
   *
   * @return {Object}
   * @method getCache
   */

  Player.prototype.getCache = function getCache() {
    return this.cache_;
  };

  /**
   * Pass values to the playback tech
   *
   * @param {String=} method Method
   * @param {Object=} arg Argument
   * @private
   * @method techCall_
   */

  Player.prototype.techCall_ = function techCall_(method, arg) {
    // If it's not ready yet, call method when it is
    if (this.tech_ && !this.tech_.isReady_) {
      this.tech_.ready(function () {
        this[method](arg);
      }, true);

      // Otherwise call method now
    } else {
        try {
          this.tech_[method](arg);
        } catch (e) {
          _utilsLogJs2['default'](e);
          throw e;
        }
      }
  };

  /**
   * Get calls can't wait for the tech, and sometimes don't need to.
   *
   * @param {String} method Tech method
   * @return {Method}
   * @private
   * @method techGet_
   */

  Player.prototype.techGet_ = function techGet_(method) {
    if (this.tech_ && this.tech_.isReady_) {

      // Flash likes to die and reload when you hide or reposition it.
      // In these cases the object methods go away and we get errors.
      // When that happens we'll catch the errors and inform tech that it's not ready any more.
      try {
        return this.tech_[method]();
      } catch (e) {
        // When building additional tech libs, an expected method may not be defined yet
        if (this.tech_[method] === undefined) {
          _utilsLogJs2['default']('Video.js: ' + method + ' method not defined for ' + this.techName_ + ' playback technology.', e);
        } else {
          // When a method isn't available on the object it throws a TypeError
          if (e.name === 'TypeError') {
            _utilsLogJs2['default']('Video.js: ' + method + ' unavailable on ' + this.techName_ + ' playback technology element.', e);
            this.tech_.isReady_ = false;
          } else {
            _utilsLogJs2['default'](e);
          }
        }
        throw e;
      }
    }

    return;
  };

  /**
   * start media playback
   * ```js
   *     myPlayer.play();
   * ```
   *
   * @return {Player} self
   * @method play
   */

  Player.prototype.play = function play() {
    this.techCall_('play');
    return this;
  };

  /**
   * Pause the video playback
   * ```js
   *     myPlayer.pause();
   * ```
   *
   * @return {Player} self
   * @method pause
   */

  Player.prototype.pause = function pause() {
    this.techCall_('pause');
    return this;
  };

  /**
   * Check if the player is paused
   * ```js
   *     var isPaused = myPlayer.paused();
   *     var isPlaying = !myPlayer.paused();
   * ```
   *
   * @return {Boolean} false if the media is currently playing, or true otherwise
   * @method paused
   */

  Player.prototype.paused = function paused() {
    // The initial state of paused should be true (in Safari it's actually false)
    return this.techGet_('paused') === false ? false : true;
  };

  /**
   * Returns whether or not the user is "scrubbing". Scrubbing is when the user
   * has clicked the progress bar handle and is dragging it along the progress bar.
   *
   * @param  {Boolean} isScrubbing   True/false the user is scrubbing
   * @return {Boolean}               The scrubbing status when getting
   * @return {Object}                The player when setting
   * @method scrubbing
   */

  Player.prototype.scrubbing = function scrubbing(isScrubbing) {
    if (isScrubbing !== undefined) {
      this.scrubbing_ = !!isScrubbing;

      if (isScrubbing) {
        this.addClass('vjs-scrubbing');
      } else {
        this.removeClass('vjs-scrubbing');
      }

      return this;
    }

    return this.scrubbing_;
  };

  /**
   * Get or set the current time (in seconds)
   * ```js
   *     // get
   *     var whereYouAt = myPlayer.currentTime();
   *     // set
   *     myPlayer.currentTime(120); // 2 minutes into the video
   * ```
   *
   * @param  {Number|String=} seconds The time to seek to
   * @return {Number}        The time in seconds, when not setting
   * @return {Player}    self, when the current time is set
   * @method currentTime
   */

  Player.prototype.currentTime = function currentTime(seconds) {
    if (seconds !== undefined) {

      this.techCall_('setCurrentTime', seconds);

      return this;
    }

    // cache last currentTime and return. default to 0 seconds
    //
    // Caching the currentTime is meant to prevent a massive amount of reads on the tech's
    // currentTime when scrubbing, but may not provide much performance benefit afterall.
    // Should be tested. Also something has to read the actual current time or the cache will
    // never get updated.
    return this.cache_.currentTime = this.techGet_('currentTime') || 0;
  };

  /**
   * Get the length in time of the video in seconds
   * ```js
   *     var lengthOfVideo = myPlayer.duration();
   * ```
   * **NOTE**: The video must have started loading before the duration can be
   * known, and in the case of Flash, may not be known until the video starts
   * playing.
   *
   * @param {Number} seconds Duration when setting
   * @return {Number} The duration of the video in seconds when getting
   * @method duration
   */

  Player.prototype.duration = function duration(seconds) {
    if (seconds === undefined) {
      return this.cache_.duration || 0;
    }

    seconds = parseFloat(seconds) || 0;

    // Standardize on Inifity for signaling video is live
    if (seconds < 0) {
      seconds = Infinity;
    }

    if (seconds !== this.cache_.duration) {
      // Cache the last set value for optimized scrubbing (esp. Flash)
      this.cache_.duration = seconds;

      if (seconds === Infinity) {
        this.addClass('vjs-live');
      } else {
        this.removeClass('vjs-live');
      }

      this.trigger('durationchange');
    }

    return this;
  };

  /**
   * Calculates how much time is left.
   * ```js
   *     var timeLeft = myPlayer.remainingTime();
   * ```
   * Not a native video element function, but useful
   *
   * @return {Number} The time remaining in seconds
   * @method remainingTime
   */

  Player.prototype.remainingTime = function remainingTime() {
    return this.duration() - this.currentTime();
  };

  // http://dev.w3.org/html5/spec/video.html#dom-media-buffered
  // Buffered returns a timerange object.
  // Kind of like an array of portions of the video that have been downloaded.

  /**
   * Get a TimeRange object with the times of the video that have been downloaded
   * If you just want the percent of the video that's been downloaded,
   * use bufferedPercent.
   * ```js
   *     // Number of different ranges of time have been buffered. Usually 1.
   *     numberOfRanges = bufferedTimeRange.length,
   *     // Time in seconds when the first range starts. Usually 0.
   *     firstRangeStart = bufferedTimeRange.start(0),
   *     // Time in seconds when the first range ends
   *     firstRangeEnd = bufferedTimeRange.end(0),
   *     // Length in seconds of the first time range
   *     firstRangeLength = firstRangeEnd - firstRangeStart;
   * ```
   *
   * @return {Object} A mock TimeRange object (following HTML spec)
   * @method buffered
   */

  Player.prototype.buffered = function buffered() {
    var buffered = this.techGet_('buffered');

    if (!buffered || !buffered.length) {
      buffered = _utilsTimeRangesJs.createTimeRange(0, 0);
    }

    return buffered;
  };

  /**
   * Get the percent (as a decimal) of the video that's been downloaded
   * ```js
   *     var howMuchIsDownloaded = myPlayer.bufferedPercent();
   * ```
   * 0 means none, 1 means all.
   * (This method isn't in the HTML5 spec, but it's very convenient)
   *
   * @return {Number} A decimal between 0 and 1 representing the percent
   * @method bufferedPercent
   */

  Player.prototype.bufferedPercent = function bufferedPercent() {
    return _utilsBufferJs.bufferedPercent(this.buffered(), this.duration());
  };

  /**
   * Get the ending time of the last buffered time range
   * This is used in the progress bar to encapsulate all time ranges.
   *
   * @return {Number} The end of the last buffered time range
   * @method bufferedEnd
   */

  Player.prototype.bufferedEnd = function bufferedEnd() {
    var buffered = this.buffered(),
        duration = this.duration(),
        end = buffered.end(buffered.length - 1);

    if (end > duration) {
      end = duration;
    }

    return end;
  };

  /**
   * Get or set the current volume of the media
   * ```js
   *     // get
   *     var howLoudIsIt = myPlayer.volume();
   *     // set
   *     myPlayer.volume(0.5); // Set volume to half
   * ```
   * 0 is off (muted), 1.0 is all the way up, 0.5 is half way.
   *
   * @param  {Number} percentAsDecimal The new volume as a decimal percent
   * @return {Number}              The current volume when getting
   * @return {Player}              self when setting
   * @method volume
   */

  Player.prototype.volume = function volume(percentAsDecimal) {
    var vol = undefined;

    if (percentAsDecimal !== undefined) {
      vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal))); // Force value to between 0 and 1
      this.cache_.volume = vol;
      this.techCall_('setVolume', vol);

      return this;
    }

    // Default to 1 when returning current volume.
    vol = parseFloat(this.techGet_('volume'));
    return isNaN(vol) ? 1 : vol;
  };

  /**
   * Get the current muted state, or turn mute on or off
   * ```js
   *     // get
   *     var isVolumeMuted = myPlayer.muted();
   *     // set
   *     myPlayer.muted(true); // mute the volume
   * ```
   *
   * @param  {Boolean=} muted True to mute, false to unmute
   * @return {Boolean} True if mute is on, false if not when getting
   * @return {Player} self when setting mute
   * @method muted
   */

  Player.prototype.muted = function muted(_muted) {
    if (_muted !== undefined) {
      this.techCall_('setMuted', _muted);
      return this;
    }
    return this.techGet_('muted') || false; // Default to false
  };

  // Check if current tech can support native fullscreen
  // (e.g. with built in controls like iOS, so not our flash swf)
  /**
   * Check to see if fullscreen is supported
   *
   * @return {Boolean}
   * @method supportsFullScreen
   */

  Player.prototype.supportsFullScreen = function supportsFullScreen() {
    return this.techGet_('supportsFullScreen') || false;
  };

  /**
   * Check if the player is in fullscreen mode
   * ```js
   *     // get
   *     var fullscreenOrNot = myPlayer.isFullscreen();
   *     // set
   *     myPlayer.isFullscreen(true); // tell the player it's in fullscreen
   * ```
   * NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official
   * property and instead document.fullscreenElement is used. But isFullscreen is
   * still a valuable property for internal player workings.
   *
   * @param  {Boolean=} isFS Update the player's fullscreen state
   * @return {Boolean} true if fullscreen false if not when getting
   * @return {Player} self when setting
   * @method isFullscreen
   */

  Player.prototype.isFullscreen = function isFullscreen(isFS) {
    if (isFS !== undefined) {
      this.isFullscreen_ = !!isFS;
      return this;
    }
    return !!this.isFullscreen_;
  };

  /**
   * Increase the size of the video to full screen
   * ```js
   *     myPlayer.requestFullscreen();
   * ```
   * In some browsers, full screen is not supported natively, so it enters
   * "full window mode", where the video fills the browser window.
   * In browsers and devices that support native full screen, sometimes the
   * browser's default controls will be shown, and not the Video.js custom skin.
   * This includes most mobile devices (iOS, Android) and older versions of
   * Safari.
   *
   * @return {Player} self
   * @method requestFullscreen
   */

  Player.prototype.requestFullscreen = function requestFullscreen() {
    var fsApi = _fullscreenApiJs2['default'];

    this.isFullscreen(true);

    if (fsApi.requestFullscreen) {
      // the browser supports going fullscreen at the element level so we can
      // take the controls fullscreen as well as the video

      // Trigger fullscreenchange event after change
      // We have to specifically add this each time, and remove
      // when canceling fullscreen. Otherwise if there's multiple
      // players on a page, they would all be reacting to the same fullscreen
      // events
      Events.on(_globalDocument2['default'], fsApi.fullscreenchange, Fn.bind(this, function documentFullscreenChange(e) {
        this.isFullscreen(_globalDocument2['default'][fsApi.fullscreenElement]);

        // If cancelling fullscreen, remove event listener.
        if (this.isFullscreen() === false) {
          Events.off(_globalDocument2['default'], fsApi.fullscreenchange, documentFullscreenChange);
        }

        this.trigger('fullscreenchange');
      }));

      this.el_[fsApi.requestFullscreen]();
    } else if (this.tech_.supportsFullScreen()) {
      // we can't take the video.js controls fullscreen but we can go fullscreen
      // with native controls
      this.techCall_('enterFullScreen');
    } else {
      // fullscreen isn't supported so we'll just stretch the video element to
      // fill the viewport
      this.enterFullWindow();
      this.trigger('fullscreenchange');
    }

    return this;
  };

  /**
   * Return the video to its normal size after having been in full screen mode
   * ```js
   *     myPlayer.exitFullscreen();
   * ```
   *
   * @return {Player} self
   * @method exitFullscreen
   */

  Player.prototype.exitFullscreen = function exitFullscreen() {
    var fsApi = _fullscreenApiJs2['default'];
    this.isFullscreen(false);

    // Check for browser element fullscreen support
    if (fsApi.requestFullscreen) {
      _globalDocument2['default'][fsApi.exitFullscreen]();
    } else if (this.tech_.supportsFullScreen()) {
      this.techCall_('exitFullScreen');
    } else {
      this.exitFullWindow();
      this.trigger('fullscreenchange');
    }

    return this;
  };

  /**
   * When fullscreen isn't supported we can stretch the video container to as wide as the browser will let us.
   *
   * @method enterFullWindow
   */

  Player.prototype.enterFullWindow = function enterFullWindow() {
    this.isFullWindow = true;

    // Storing original doc overflow value to return to when fullscreen is off
    this.docOrigOverflow = _globalDocument2['default'].documentElement.style.overflow;

    // Add listener for esc key to exit fullscreen
    Events.on(_globalDocument2['default'], 'keydown', Fn.bind(this, this.fullWindowOnEscKey));

    // Hide any scroll bars
    _globalDocument2['default'].documentElement.style.overflow = 'hidden';

    // Apply fullscreen styles
    Dom.addElClass(_globalDocument2['default'].body, 'vjs-full-window');

    this.trigger('enterFullWindow');
  };

  /**
   * Check for call to either exit full window or full screen on ESC key
   *
   * @param {String} event Event to check for key press
   * @method fullWindowOnEscKey
   */

  Player.prototype.fullWindowOnEscKey = function fullWindowOnEscKey(event) {
    if (event.keyCode === 27) {
      if (this.isFullscreen() === true) {
        this.exitFullscreen();
      } else {
        this.exitFullWindow();
      }
    }
  };

  /**
   * Exit full window
   *
   * @method exitFullWindow
   */

  Player.prototype.exitFullWindow = function exitFullWindow() {
    this.isFullWindow = false;
    Events.off(_globalDocument2['default'], 'keydown', this.fullWindowOnEscKey);

    // Unhide scroll bars.
    _globalDocument2['default'].documentElement.style.overflow = this.docOrigOverflow;

    // Remove fullscreen styles
    Dom.removeElClass(_globalDocument2['default'].body, 'vjs-full-window');

    // Resize the box, controller, and poster to original sizes
    // this.positionAll();
    this.trigger('exitFullWindow');
  };

  /**
   * Check whether the player can play a given mimetype
   *
   * @param {String} type The mimetype to check
   * @return {String} 'probably', 'maybe', or '' (empty string)
   * @method canPlayType
   */

  Player.prototype.canPlayType = function canPlayType(type) {
    var can = undefined;

    // Loop through each playback technology in the options order
    for (var i = 0, j = this.options_.techOrder; i < j.length; i++) {
      var techName = _utilsToTitleCaseJs2['default'](j[i]);
      var tech = _techTechJs2['default'].getTech(techName);

      // Support old behavior of techs being registered as components.
      // Remove once that deprecated behavior is removed.
      if (!tech) {
        tech = _componentJs2['default'].getComponent(techName);
      }

      // Check if the current tech is defined before continuing
      if (!tech) {
        _utilsLogJs2['default'].error('The "' + techName + '" tech is undefined. Skipped browser support check for that tech.');
        continue;
      }

      // Check if the browser supports this technology
      if (tech.isSupported()) {
        can = tech.canPlayType(type);

        if (can) {
          return can;
        }
      }
    }

    return '';
  };

  /**
   * Select source based on tech-order or source-order
   * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,
   * defaults to tech-order selection
   *
   * @param {Array} sources The sources for a media asset
   * @return {Object|Boolean} Object of source and tech order, otherwise false
   * @method selectSource
   */

  Player.prototype.selectSource = function selectSource(sources) {
    // Get only the techs specified in `techOrder` that exist and are supported by the
    // current platform
    var techs = this.options_.techOrder.map(_utilsToTitleCaseJs2['default']).map(function (techName) {
      // `Component.getComponent(...)` is for support of old behavior of techs
      // being registered as components.
      // Remove once that deprecated behavior is removed.
      return [techName, _techTechJs2['default'].getTech(techName) || _componentJs2['default'].getComponent(techName)];
    }).filter(function (_ref) {
      var techName = _ref[0];
      var tech = _ref[1];

      // Check if the current tech is defined before continuing
      if (tech) {
        // Check if the browser supports this technology
        return tech.isSupported();
      }

      _utilsLogJs2['default'].error('The "' + techName + '" tech is undefined. Skipped browser support check for that tech.');
      return false;
    });

    // Iterate over each `innerArray` element once per `outerArray` element and execute
    // `tester` with both. If `tester` returns a non-falsy value, exit early and return
    // that value.
    var findFirstPassingTechSourcePair = function findFirstPassingTechSourcePair(outerArray, innerArray, tester) {
      var found = undefined;

      outerArray.some(function (outerChoice) {
        return innerArray.some(function (innerChoice) {
          found = tester(outerChoice, innerChoice);

          if (found) {
            return true;
          }
        });
      });

      return found;
    };

    var foundSourceAndTech = undefined;
    var flip = function flip(fn) {
      return function (a, b) {
        return fn(b, a);
      };
    };
    var finder = function finder(_ref2, source) {
      var techName = _ref2[0];
      var tech = _ref2[1];

      if (tech.canPlaySource(source)) {
        return { source: source, tech: techName };
      }
    };

    // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources
    // to select from them based on their priority.
    if (this.options_.sourceOrder) {
      // Source-first ordering
      foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));
    } else {
      // Tech-first ordering
      foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);
    }

    return foundSourceAndTech || false;
  };

  /**
   * The source function updates the video source
   * There are three types of variables you can pass as the argument.
   * **URL String**: A URL to the the video file. Use this method if you are sure
   * the current playback technology (HTML5/Flash) can support the source you
   * provide. Currently only MP4 files can be used in both HTML5 and Flash.
   * ```js
   *     myPlayer.src("http://www.example.com/path/to/video.mp4");
   * ```
   * **Source Object (or element):* * A javascript object containing information
   * about the source file. Use this method if you want the player to determine if
   * it can support the file using the type information.
   * ```js
   *     myPlayer.src({ type: "video/mp4", src: "http://www.example.com/path/to/video.mp4" });
   * ```
   * **Array of Source Objects:* * To provide multiple versions of the source so
   * that it can be played using HTML5 across browsers you can use an array of
   * source objects. Video.js will detect which version is supported and load that
   * file.
   * ```js
   *     myPlayer.src([
   *       { type: "video/mp4", src: "http://www.example.com/path/to/video.mp4" },
   *       { type: "video/webm", src: "http://www.example.com/path/to/video.webm" },
   *       { type: "video/ogg", src: "http://www.example.com/path/to/video.ogv" }
   *     ]);
   * ```
   *
   * @param  {String|Object|Array=} source The source URL, object, or array of sources
   * @return {String} The current video source when getting
   * @return {String} The player when setting
   * @method src
   */

  Player.prototype.src = function src(source) {
    if (source === undefined) {
      return this.techGet_('src');
    }

    var currentTech = _techTechJs2['default'].getTech(this.techName_);
    // Support old behavior of techs being registered as components.
    // Remove once that deprecated behavior is removed.
    if (!currentTech) {
      currentTech = _componentJs2['default'].getComponent(this.techName_);
    }

    // case: Array of source objects to choose from and pick the best to play
    if (Array.isArray(source)) {
      this.sourceList_(source);

      // case: URL String (http://myvideo...)
    } else if (typeof source === 'string') {
        // create a source object from the string
        this.src({ src: source });

        // case: Source object { src: '', type: '' ... }
      } else if (source instanceof Object) {
          // check if the source has a type and the loaded tech cannot play the source
          // if there's no type we'll just try the current tech
          if (source.type && !currentTech.canPlaySource(source)) {
            // create a source list with the current source and send through
            // the tech loop to check for a compatible technology
            this.sourceList_([source]);
          } else {
            this.cache_.src = source.src;
            this.currentType_ = source.type || '';

            // wait until the tech is ready to set the source
            this.ready(function () {

              // The setSource tech method was added with source handlers
              // so older techs won't support it
              // We need to check the direct prototype for the case where subclasses
              // of the tech do not support source handlers
              if (currentTech.prototype.hasOwnProperty('setSource')) {
                this.techCall_('setSource', source);
              } else {
                this.techCall_('src', source.src);
              }

              if (this.options_.preload === 'auto') {
                this.load();
              }

              if (this.options_.autoplay) {
                this.play();
              }

              // Set the source synchronously if possible (#2326)
            }, true);
          }
        }

    return this;
  };

  /**
   * Handle an array of source objects
   *
   * @param  {Array} sources Array of source objects
   * @private
   * @method sourceList_
   */

  Player.prototype.sourceList_ = function sourceList_(sources) {
    var sourceTech = this.selectSource(sources);

    if (sourceTech) {
      if (sourceTech.tech === this.techName_) {
        // if this technology is already loaded, set the source
        this.src(sourceTech.source);
      } else {
        // load this technology with the chosen source
        this.loadTech_(sourceTech.tech, sourceTech.source);
      }
    } else {
      // We need to wrap this in a timeout to give folks a chance to add error event handlers
      this.setTimeout(function () {
        this.error({ code: 4, message: this.localize(this.options_.notSupportedMessage) });
      }, 0);

      // we could not find an appropriate tech, but let's still notify the delegate that this is it
      // this needs a better comment about why this is needed
      this.triggerReady();
    }
  };

  /**
   * Begin loading the src data.
   *
   * @return {Player} Returns the player
   * @method load
   */

  Player.prototype.load = function load() {
    this.techCall_('load');
    return this;
  };

  /**
   * Reset the player. Loads the first tech in the techOrder,
   * and calls `reset` on the tech`.
   *
   * @return {Player} Returns the player
   * @method reset
   */

  Player.prototype.reset = function reset() {
    this.loadTech_(_utilsToTitleCaseJs2['default'](this.options_.techOrder[0]), null);
    this.techCall_('reset');
    return this;
  };

  /**
   * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4
   * Can be used in conjuction with `currentType` to assist in rebuilding the current source object.
   *
   * @return {String} The current source
   * @method currentSrc
   */

  Player.prototype.currentSrc = function currentSrc() {
    return this.techGet_('currentSrc') || this.cache_.src || '';
  };

  /**
   * Get the current source type e.g. video/mp4
   * This can allow you rebuild the current source object so that you could load the same
   * source and tech later
   *
   * @return {String} The source MIME type
   * @method currentType
   */

  Player.prototype.currentType = function currentType() {
    return this.currentType_ || '';
  };

  /**
   * Get or set the preload attribute
   *
   * @param {Boolean} value Boolean to determine if preload should be used
   * @return {String} The preload attribute value when getting
   * @return {Player} Returns the player when setting
   * @method preload
   */

  Player.prototype.preload = function preload(value) {
    if (value !== undefined) {
      this.techCall_('setPreload', value);
      this.options_.preload = value;
      return this;
    }
    return this.techGet_('preload');
  };

  /**
   * Get or set the autoplay attribute.
   *
   * @param {Boolean} value Boolean to determine if video should autoplay
   * @return {String} The autoplay attribute value when getting
   * @return {Player} Returns the player when setting
   * @method autoplay
   */

  Player.prototype.autoplay = function autoplay(value) {
    if (value !== undefined) {
      this.techCall_('setAutoplay', value);
      this.options_.autoplay = value;
      return this;
    }
    return this.techGet_('autoplay', value);
  };

  /**
   * Get or set the loop attribute on the video element.
   *
   * @param {Boolean} value Boolean to determine if video should loop
   * @return {String} The loop attribute value when getting
   * @return {Player} Returns the player when setting
   * @method loop
   */

  Player.prototype.loop = function loop(value) {
    if (value !== undefined) {
      this.techCall_('setLoop', value);
      this.options_['loop'] = value;
      return this;
    }
    return this.techGet_('loop');
  };

  /**
   * Get or set the poster image source url
   *
   * ##### EXAMPLE:
   * ```js
   *     // get
   *     var currentPoster = myPlayer.poster();
   *     // set
   *     myPlayer.poster('http://example.com/myImage.jpg');
   * ```
   *
   * @param  {String=} src Poster image source URL
   * @return {String} poster URL when getting
   * @return {Player} self when setting
   * @method poster
   */

  Player.prototype.poster = function poster(src) {
    if (src === undefined) {
      return this.poster_;
    }

    // The correct way to remove a poster is to set as an empty string
    // other falsey values will throw errors
    if (!src) {
      src = '';
    }

    // update the internal poster variable
    this.poster_ = src;

    // update the tech's poster
    this.techCall_('setPoster', src);

    // alert components that the poster has been set
    this.trigger('posterchange');

    return this;
  };

  /**
   * Some techs (e.g. YouTube) can provide a poster source in an
   * asynchronous way. We want the poster component to use this
   * poster source so that it covers up the tech's controls.
   * (YouTube's play button). However we only want to use this
   * soruce if the player user hasn't set a poster through
   * the normal APIs.
   *
   * @private
   * @method handleTechPosterChange_
   */

  Player.prototype.handleTechPosterChange_ = function handleTechPosterChange_() {
    if (!this.poster_ && this.tech_ && this.tech_.poster) {
      this.poster_ = this.tech_.poster() || '';

      // Let components know the poster has changed
      this.trigger('posterchange');
    }
  };

  /**
   * Get or set whether or not the controls are showing.
   *
   * @param  {Boolean} bool Set controls to showing or not
   * @return {Boolean}    Controls are showing
   * @method controls
   */

  Player.prototype.controls = function controls(bool) {
    if (bool !== undefined) {
      bool = !!bool; // force boolean
      // Don't trigger a change event unless it actually changed
      if (this.controls_ !== bool) {
        this.controls_ = bool;

        if (this.usingNativeControls()) {
          this.techCall_('setControls', bool);
        }

        if (bool) {
          this.removeClass('vjs-controls-disabled');
          this.addClass('vjs-controls-enabled');
          this.trigger('controlsenabled');

          if (!this.usingNativeControls()) {
            this.addTechControlsListeners_();
          }
        } else {
          this.removeClass('vjs-controls-enabled');
          this.addClass('vjs-controls-disabled');
          this.trigger('controlsdisabled');

          if (!this.usingNativeControls()) {
            this.removeTechControlsListeners_();
          }
        }
      }
      return this;
    }
    return !!this.controls_;
  };

  /**
   * Toggle native controls on/off. Native controls are the controls built into
   * devices (e.g. default iPhone controls), Flash, or other techs
   * (e.g. Vimeo Controls)
   * **This should only be set by the current tech, because only the tech knows
   * if it can support native controls**
   *
   * @param  {Boolean} bool    True signals that native controls are on
   * @return {Player}      Returns the player
   * @private
   * @method usingNativeControls
   */

  Player.prototype.usingNativeControls = function usingNativeControls(bool) {
    if (bool !== undefined) {
      bool = !!bool; // force boolean
      // Don't trigger a change event unless it actually changed
      if (this.usingNativeControls_ !== bool) {
        this.usingNativeControls_ = bool;
        if (bool) {
          this.addClass('vjs-using-native-controls');

          /**
            * player is using the native device controls
           *
            * @event usingnativecontrols
            * @memberof Player
            * @instance
            * @private
            */
          this.trigger('usingnativecontrols');
        } else {
          this.removeClass('vjs-using-native-controls');

          /**
            * player is using the custom HTML controls
           *
            * @event usingcustomcontrols
            * @memberof Player
            * @instance
            * @private
            */
          this.trigger('usingcustomcontrols');
        }
      }
      return this;
    }
    return !!this.usingNativeControls_;
  };

  /**
   * Set or get the current MediaError
   *
   * @param  {*} err A MediaError or a String/Number to be turned into a MediaError
   * @return {MediaError|null}     when getting
   * @return {Player}              when setting
   * @method error
   */

  Player.prototype.error = function error(err) {
    if (err === undefined) {
      return this.error_ || null;
    }

    // restoring to default
    if (err === null) {
      this.error_ = err;
      this.removeClass('vjs-error');
      this.errorDisplay.close();
      return this;
    }

    // error instance
    if (err instanceof _mediaErrorJs2['default']) {
      this.error_ = err;
    } else {
      this.error_ = new _mediaErrorJs2['default'](err);
    }

    // add the vjs-error classname to the player
    this.addClass('vjs-error');

    // log the name of the error type and any message
    // ie8 just logs "[object object]" if you just log the error object
    _utilsLogJs2['default'].error('(CODE:' + this.error_.code + ' ' + _mediaErrorJs2['default'].errorTypes[this.error_.code] + ')', this.error_.message, this.error_);

    // fire an error event on the player
    this.trigger('error');

    return this;
  };

  /**
   * Returns whether or not the player is in the "ended" state.
   *
   * @return {Boolean} True if the player is in the ended state, false if not.
   * @method ended
   */

  Player.prototype.ended = function ended() {
    return this.techGet_('ended');
  };

  /**
   * Returns whether or not the player is in the "seeking" state.
   *
   * @return {Boolean} True if the player is in the seeking state, false if not.
   * @method seeking
   */

  Player.prototype.seeking = function seeking() {
    return this.techGet_('seeking');
  };

  /**
   * Returns the TimeRanges of the media that are currently available
   * for seeking to.
   *
   * @return {TimeRanges} the seekable intervals of the media timeline
   * @method seekable
   */

  Player.prototype.seekable = function seekable() {
    return this.techGet_('seekable');
  };

  /**
   * Report user activity
   *
   * @param {Object} event Event object
   * @method reportUserActivity
   */

  Player.prototype.reportUserActivity = function reportUserActivity(event) {
    this.userActivity_ = true;
  };

  /**
   * Get/set if user is active
   *
   * @param {Boolean} bool Value when setting
   * @return {Boolean} Value if user is active user when getting
   * @method userActive
   */

  Player.prototype.userActive = function userActive(bool) {
    if (bool !== undefined) {
      bool = !!bool;
      if (bool !== this.userActive_) {
        this.userActive_ = bool;
        if (bool) {
          // If the user was inactive and is now active we want to reset the
          // inactivity timer
          this.userActivity_ = true;
          this.removeClass('vjs-user-inactive');
          this.addClass('vjs-user-active');
          this.trigger('useractive');
        } else {
          // We're switching the state to inactive manually, so erase any other
          // activity
          this.userActivity_ = false;

          // Chrome/Safari/IE have bugs where when you change the cursor it can
          // trigger a mousemove event. This causes an issue when you're hiding
          // the cursor when the user is inactive, and a mousemove signals user
          // activity. Making it impossible to go into inactive mode. Specifically
          // this happens in fullscreen when we really need to hide the cursor.
          //
          // When this gets resolved in ALL browsers it can be removed
          // https://code.google.com/p/chromium/issues/detail?id=103041
          if (this.tech_) {
            this.tech_.one('mousemove', function (e) {
              e.stopPropagation();
              e.preventDefault();
            });
          }

          this.removeClass('vjs-user-active');
          this.addClass('vjs-user-inactive');
          this.trigger('userinactive');
        }
      }
      return this;
    }
    return this.userActive_;
  };

  /**
   * Listen for user activity based on timeout value
   *
   * @private
   * @method listenForUserActivity_
   */

  Player.prototype.listenForUserActivity_ = function listenForUserActivity_() {
    var mouseInProgress = undefined,
        lastMoveX = undefined,
        lastMoveY = undefined;

    var handleActivity = Fn.bind(this, this.reportUserActivity);

    var handleMouseMove = function handleMouseMove(e) {
      // #1068 - Prevent mousemove spamming
      // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970
      if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {
        lastMoveX = e.screenX;
        lastMoveY = e.screenY;
        handleActivity();
      }
    };

    var handleMouseDown = function handleMouseDown() {
      handleActivity();
      // For as long as the they are touching the device or have their mouse down,
      // we consider them active even if they're not moving their finger or mouse.
      // So we want to continue to update that they are active
      this.clearInterval(mouseInProgress);
      // Setting userActivity=true now and setting the interval to the same time
      // as the activityCheck interval (250) should ensure we never miss the
      // next activityCheck
      mouseInProgress = this.setInterval(handleActivity, 250);
    };

    var handleMouseUp = function handleMouseUp(event) {
      handleActivity();
      // Stop the interval that maintains activity if the mouse/touch is down
      this.clearInterval(mouseInProgress);
    };

    // Any mouse movement will be considered user activity
    this.on('mousedown', handleMouseDown);
    this.on('mousemove', handleMouseMove);
    this.on('mouseup', handleMouseUp);

    // Listen for keyboard navigation
    // Shouldn't need to use inProgress interval because of key repeat
    this.on('keydown', handleActivity);
    this.on('keyup', handleActivity);

    // Run an interval every 250 milliseconds instead of stuffing everything into
    // the mousemove/touchmove function itself, to prevent performance degradation.
    // `this.reportUserActivity` simply sets this.userActivity_ to true, which
    // then gets picked up by this loop
    // http://ejohn.org/blog/learning-from-twitter/
    var inactivityTimeout = undefined;
    var activityCheck = this.setInterval(function () {
      // Check to see if mouse/touch activity has happened
      if (this.userActivity_) {
        // Reset the activity tracker
        this.userActivity_ = false;

        // If the user state was inactive, set the state to active
        this.userActive(true);

        // Clear any existing inactivity timeout to start the timer over
        this.clearTimeout(inactivityTimeout);

        var timeout = this.options_['inactivityTimeout'];
        if (timeout > 0) {
          // In <timeout> milliseconds, if no more activity has occurred the
          // user will be considered inactive
          inactivityTimeout = this.setTimeout(function () {
            // Protect against the case where the inactivityTimeout can trigger just
            // before the next user activity is picked up by the activityCheck loop
            // causing a flicker
            if (!this.userActivity_) {
              this.userActive(false);
            }
          }, timeout);
        }
      }
    }, 250);
  };

  /**
   * Gets or sets the current playback rate.  A playback rate of
   * 1.0 represents normal speed and 0.5 would indicate half-speed
   * playback, for instance.
   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate
   *
   * @param  {Number} rate    New playback rate to set.
   * @return {Number}         Returns the new playback rate when setting
   * @return {Number}         Returns the current playback rate when getting
   * @method playbackRate
   */

  Player.prototype.playbackRate = function playbackRate(rate) {
    if (rate !== undefined) {
      this.techCall_('setPlaybackRate', rate);
      return this;
    }

    if (this.tech_ && this.tech_['featuresPlaybackRate']) {
      return this.techGet_('playbackRate');
    } else {
      return 1.0;
    }
  };

  /**
   * Gets or sets the audio flag
   *
   * @param  {Boolean} bool    True signals that this is an audio player.
   * @return {Boolean}         Returns true if player is audio, false if not when getting
   * @return {Player}      Returns the player if setting
   * @private
   * @method isAudio
   */

  Player.prototype.isAudio = function isAudio(bool) {
    if (bool !== undefined) {
      this.isAudio_ = !!bool;
      return this;
    }

    return !!this.isAudio_;
  };

  /**
   * Returns the current state of network activity for the element, from
   * the codes in the list below.
   * - NETWORK_EMPTY (numeric value 0)
   *   The element has not yet been initialised. All attributes are in
   *   their initial states.
   * - NETWORK_IDLE (numeric value 1)
   *   The element's resource selection algorithm is active and has
   *   selected a resource, but it is not actually using the network at
   *   this time.
   * - NETWORK_LOADING (numeric value 2)
   *   The user agent is actively trying to download data.
   * - NETWORK_NO_SOURCE (numeric value 3)
   *   The element's resource selection algorithm is active, but it has
   *   not yet found a resource to use.
   *
   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states
   * @return {Number} the current network activity state
   * @method networkState
   */

  Player.prototype.networkState = function networkState() {
    return this.techGet_('networkState');
  };

  /**
   * Returns a value that expresses the current state of the element
   * with respect to rendering the current playback position, from the
   * codes in the list below.
   * - HAVE_NOTHING (numeric value 0)
   *   No information regarding the media resource is available.
   * - HAVE_METADATA (numeric value 1)
   *   Enough of the resource has been obtained that the duration of the
   *   resource is available.
   * - HAVE_CURRENT_DATA (numeric value 2)
   *   Data for the immediate current playback position is available.
   * - HAVE_FUTURE_DATA (numeric value 3)
   *   Data for the immediate current playback position is available, as
   *   well as enough data for the user agent to advance the current
   *   playback position in the direction of playback.
   * - HAVE_ENOUGH_DATA (numeric value 4)
   *   The user agent estimates that enough data is available for
   *   playback to proceed uninterrupted.
   *
   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate
   * @return {Number} the current playback rendering state
   * @method readyState
   */

  Player.prototype.readyState = function readyState() {
    return this.techGet_('readyState');
  };

  /*
    * Text tracks are tracks of timed text events.
    * Captions - text displayed over the video for the hearing impaired
    * Subtitles - text displayed over the video for those who don't understand language in the video
    * Chapters - text displayed in a menu allowing the user to jump to particular points (chapters) in the video
    * Descriptions (not supported yet) - audio descriptions that are read back to the user by a screen reading device
    */

  /**
   * Get an array of associated text tracks. captions, subtitles, chapters, descriptions
   * http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks
   *
   * @return {Array}           Array of track objects
   * @method textTracks
   */

  Player.prototype.textTracks = function textTracks() {
    // cannot use techGet_ directly because it checks to see whether the tech is ready.
    // Flash is unlikely to be ready in time but textTracks should still work.
    return this.tech_ && this.tech_['textTracks']();
  };

  /**
   * Get an array of remote text tracks
   *
   * @return {Array}
   * @method remoteTextTracks
   */

  Player.prototype.remoteTextTracks = function remoteTextTracks() {
    return this.tech_ && this.tech_['remoteTextTracks']();
  };

  /**
   * Get an array of remote html track elements
   *
   * @return {HTMLTrackElement[]}
   * @method remoteTextTrackEls
   */

  Player.prototype.remoteTextTrackEls = function remoteTextTrackEls() {
    return this.tech_ && this.tech_['remoteTextTrackEls']();
  };

  /**
   * Add a text track
   * In addition to the W3C settings we allow adding additional info through options.
   * http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack
   *
   * @param {String}  kind        Captions, subtitles, chapters, descriptions, or metadata
   * @param {String=} label       Optional label
   * @param {String=} language    Optional language
   * @method addTextTrack
   */

  Player.prototype.addTextTrack = function addTextTrack(kind, label, language) {
    return this.tech_ && this.tech_['addTextTrack'](kind, label, language);
  };

  /**
   * Add a remote text track
   *
   * @param {Object} options    Options for remote text track
   * @method addRemoteTextTrack
   */

  Player.prototype.addRemoteTextTrack = function addRemoteTextTrack(options) {
    return this.tech_ && this.tech_['addRemoteTextTrack'](options);
  };

  /**
   * Remove a remote text track
   *
   * @param {Object} track    Remote text track to remove
   * @method removeRemoteTextTrack
   */

  Player.prototype.removeRemoteTextTrack = function removeRemoteTextTrack(track) {
    this.tech_ && this.tech_['removeRemoteTextTrack'](track);
  };

  /**
   * Get video width
   *
   * @return {Number} Video width
   * @method videoWidth
   */

  Player.prototype.videoWidth = function videoWidth() {
    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;
  };

  /**
   * Get video height
   *
   * @return {Number} Video height
   * @method videoHeight
   */

  Player.prototype.videoHeight = function videoHeight() {
    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;
  };

  // Methods to add support for
  // initialTime: function(){ return this.techCall_('initialTime'); },
  // startOffsetTime: function(){ return this.techCall_('startOffsetTime'); },
  // played: function(){ return this.techCall_('played'); },
  // videoTracks: function(){ return this.techCall_('videoTracks'); },
  // audioTracks: function(){ return this.techCall_('audioTracks'); },
  // defaultPlaybackRate: function(){ return this.techCall_('defaultPlaybackRate'); },
  // defaultMuted: function(){ return this.techCall_('defaultMuted'); }

  /**
   * The player's language code
   * NOTE: The language should be set in the player options if you want the
   * the controls to be built with a specific language. Changing the lanugage
   * later will not update controls text.
   *
   * @param {String} code  The locale string
   * @return {String}      The locale string when getting
   * @return {Player}      self when setting
   * @method language
   */

  Player.prototype.language = function language(code) {
    if (code === undefined) {
      return this.language_;
    }

    this.language_ = ('' + code).toLowerCase();
    return this;
  };

  /**
   * Get the player's language dictionary
   * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time
   * Languages specified directly in the player options have precedence
   *
   * @return {Array} Array of languages
   * @method languages
   */

  Player.prototype.languages = function languages() {
    return _utilsMergeOptionsJs2['default'](Player.prototype.options_.languages, this.languages_);
  };

  /**
   * Converts track info to JSON
   *
   * @return {Object} JSON object of options
   * @method toJSON
   */

  Player.prototype.toJSON = function toJSON() {
    var options = _utilsMergeOptionsJs2['default'](this.options_);
    var tracks = options.tracks;

    options.tracks = [];

    for (var i = 0; i < tracks.length; i++) {
      var track = tracks[i];

      // deep merge tracks and null out player so no circular references
      track = _utilsMergeOptionsJs2['default'](track);
      track.player = undefined;
      options.tracks[i] = track;
    }

    return options;
  };

  /**
   * Creates a simple modal dialog (an instance of the `ModalDialog`
   * component) that immediately overlays the player with arbitrary
   * content and removes itself when closed.
   *
   * @param {String|Function|Element|Array|Null} content
   *        Same as `ModalDialog#content`'s param of the same name.
   *
   *        The most straight-forward usage is to provide a string or DOM
   *        element.
   *
   * @param {Object} [options]
   *        Extra options which will be passed on to the `ModalDialog`.
   *
   * @return {ModalDialog}
   */

  Player.prototype.createModal = function createModal(content, options) {
    var player = this;

    options = options || {};
    options.content = content || '';

    var modal = new _modalDialog2['default'](player, options);

    player.addChild(modal);
    modal.on('dispose', function () {
      player.removeChild(modal);
    });

    return modal.open();
  };

  /**
   * Gets tag settings
   *
   * @param {Element} tag The player tag
   * @return {Array} An array of sources and track objects
   * @static
   * @method getTagSettings
   */

  Player.getTagSettings = function getTagSettings(tag) {
    var baseOptions = {
      'sources': [],
      'tracks': []
    };

    var tagOptions = Dom.getElAttributes(tag);
    var dataSetup = tagOptions['data-setup'];

    // Check if data-setup attr exists.
    if (dataSetup !== null) {
      // Parse options JSON

      var _safeParseTuple = _safeJsonParseTuple2['default'](dataSetup || '{}');

      var err = _safeParseTuple[0];
      var data = _safeParseTuple[1];

      if (err) {
        _utilsLogJs2['default'].error(err);
      }
      _objectAssign2['default'](tagOptions, data);
    }

    _objectAssign2['default'](baseOptions, tagOptions);

    // Get tag children settings
    if (tag.hasChildNodes()) {
      var children = tag.childNodes;

      for (var i = 0, j = children.length; i < j; i++) {
        var child = children[i];
        // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/
        var childName = child.nodeName.toLowerCase();
        if (childName === 'source') {
          baseOptions.sources.push(Dom.getElAttributes(child));
        } else if (childName === 'track') {
          baseOptions.tracks.push(Dom.getElAttributes(child));
        }
      }
    }

    return baseOptions;
  };

  return Player;
})(_componentJs2['default']);

Player.players = {};

var navigator = _globalWindow2['default'].navigator;
/*
 * Player instance options, surfaced using options
 * options = Player.prototype.options_
 * Make changes in options, not here.
 *
 * @type {Object}
 * @private
 */
Player.prototype.options_ = {
  // Default order of fallback technology
  techOrder: ['html5', 'flash'],
  // techOrder: ['flash','html5'],

  html5: {},
  flash: {},

  // defaultVolume: 0.85,
  defaultVolume: 0.00, // The freakin seaguls are driving me crazy!

  // default inactivity timeout
  inactivityTimeout: 2000,

  // default playback rates
  playbackRates: [],
  // Add playback rate selection by adding rates
  // 'playbackRates': [0.5, 1, 1.5, 2],

  // Included control sets
  children: ['mediaLoader', 'posterImage', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'controlBar', 'errorDisplay', 'textTrackSettings'],

  language: _globalDocument2['default'].getElementsByTagName('html')[0].getAttribute('lang') || navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language || 'en',

  // locales and their language translations
  languages: {},

  // Default message to show when a video cannot be played.
  notSupportedMessage: 'No compatible source was found for this video.'
};

/**
 * Fired when the player has initial duration and dimension information
 *
 * @event loadedmetadata
 */
Player.prototype.handleLoadedMetaData_;

/**
 * Fired when the player has downloaded data at the current playback position
 *
 * @event loadeddata
 */
Player.prototype.handleLoadedData_;

/**
 * Fired when the user is active, e.g. moves the mouse over the player
 *
 * @event useractive
 */
Player.prototype.handleUserActive_;

/**
 * Fired when the user is inactive, e.g. a short delay after the last mouse move or control interaction
 *
 * @event userinactive
 */
Player.prototype.handleUserInactive_;

/**
 * Fired when the current playback position has changed *
 * During playback this is fired every 15-250 milliseconds, depending on the
 * playback technology in use.
 *
 * @event timeupdate
 */
Player.prototype.handleTimeUpdate_;

/**
 * Fired when video playback ends
 *
 * @event ended
 */
Player.prototype.handleTechEnded_;

/**
 * Fired when the volume changes
 *
 * @event volumechange
 */
Player.prototype.handleVolumeChange_;

/**
 * Fired when an error occurs
 *
 * @event error
 */
Player.prototype.handleError_;

Player.prototype.flexNotSupported_ = function () {
  var elem = _globalDocument2['default'].createElement('i');

  // Note: We don't actually use flexBasis (or flexOrder), but it's one of the more
  // common flex features that we can rely on when checking for flex support.
  return !('flexBasis' in elem.style || 'webkitFlexBasis' in elem.style || 'mozFlexBasis' in elem.style || 'msFlexBasis' in elem.style || 'msFlexOrder' in elem.style) /* IE10-specific (2012 flex spec)  */;
};

_componentJs2['default'].registerComponent('Player', Player);
exports['default'] = Player;
module.exports = exports['default'];
// If empty string, make it a parsable json object.

},{"./big-play-button.js":62,"./component.js":66,"./control-bar/control-bar.js":67,"./error-display.js":97,"./fullscreen-api.js":100,"./loading-spinner.js":101,"./media-error.js":102,"./modal-dialog":106,"./poster-image.js":111,"./tech/html5.js":116,"./tech/loader.js":117,"./tech/tech.js":118,"./tracks/text-track-display.js":122,"./tracks/text-track-list-converter.js":124,"./tracks/text-track-settings.js":126,"./utils/browser.js":128,"./utils/buffer.js":129,"./utils/dom.js":131,"./utils/events.js":132,"./utils/fn.js":133,"./utils/guid.js":135,"./utils/log.js":136,"./utils/merge-options.js":137,"./utils/stylesheet.js":138,"./utils/time-ranges.js":139,"./utils/to-title-case.js":140,"global/document":1,"global/window":2,"object.assign":45,"safe-json-parse/tuple":53}],108:[function(_dereq_,module,exports){
/**
 * @file plugins.js
 */
'use strict';

exports.__esModule = true;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _playerJs = _dereq_('./player.js');

var _playerJs2 = _interopRequireDefault(_playerJs);

/**
 * The method for registering a video.js plugin
 *
 * @param  {String} name The name of the plugin
 * @param  {Function} init The function that is run when the player inits
 * @method plugin
 */
var plugin = function plugin(name, init) {
  _playerJs2['default'].prototype[name] = init;
};

exports['default'] = plugin;
module.exports = exports['default'];

},{"./player.js":107}],109:[function(_dereq_,module,exports){
/**
 * @file popup-button.js
 */
'use strict';

exports.__esModule = true;

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _clickableComponentJs = _dereq_('../clickable-component.js');

var _clickableComponentJs2 = _interopRequireDefault(_clickableComponentJs);

var _componentJs = _dereq_('../component.js');

var _componentJs2 = _interopRequireDefault(_componentJs);

var _popupJs = _dereq_('./popup.js');

var _popupJs2 = _interopRequireDefault(_popupJs);

var _utilsDomJs = _dereq_('../utils/dom.js');

var Dom = _interopRequireWildcard(_utilsDomJs);

var _utilsFnJs = _dereq_('../utils/fn.js');

var Fn = _interopRequireWildcard(_utilsFnJs);

var _utilsToTitleCaseJs = _dereq_('../utils/to-title-case.js');

var _utilsToTitleCaseJs2 = _interopRequireDefault(_utilsToTitleCaseJs);

/**
 * A button class with a popup control
 *
 * @param {Player|Object} player
 * @param {Object=} options
 * @extends ClickableComponent
 * @class PopupButton
 */

var PopupButton = (function (_ClickableComponent) {
  _inherits(PopupButton, _ClickableComponent);

  function PopupButton(player) {
    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

    _classCallCheck(this, PopupButton);

    _ClickableComponent.call(this, player, options);

    this.update();
  }

  /**
   * Update popup
   *
   * @method update
   */

  PopupButton.prototype.update = function update() {
    var popup = this.createPopup();

    if (this.popup) {
      this.removeChild(this.popup);
    }

    this.popup = popup;
    this.addChild(popup);

    if (this.items && this.items.length === 0) {
      this.hide();
    } else if (this.items && this.items.length > 1) {
      this.show();
    }
  };

  /**
   * Create popup - Override with specific functionality for component
   *
   * @return {Popup} The constructed popup
   * @method createPopup
   */

  PopupButton.prototype.createPopup = function createPopup() {};

  /**
   * Create the component's DOM element
   *
   * @return {Element}
   * @method createEl
   */

  PopupButton.prototype.createEl = function createEl() {
    return _ClickableComponent.prototype.createEl.call(this, 'div', {
      className: this.buildCSSClass()
    });
  };

  /**
   * Allow sub components to stack CSS class names
   *
   * @return {String} The constructed class name
   * @method buildCSSClass
   */

  PopupButton.prototype.buildCSSClass = function buildCSSClass() {
    var menuButtonClass = 'vjs-menu-button';

    // If the inline option is passed, we want to use different styles altogether.
    if (this.options_.inline === true) {
      menuButtonClass += '-inline';
    } else {
      menuButtonClass += '-popup';
    }

    return 'vjs-menu-button ' + menuButtonClass + ' ' + _ClickableComponent.prototype.buildCSSClass.call(this);
  };

  return PopupButton;
})(_clickableComponentJs2['default']);

_componentJs2['default'].registerComponent('PopupButton', PopupButton);
exports['default'] = PopupButton;
module.exports = exports['default'];

},{"../clickable-component.js":64,"../component.js":66,"../utils/dom.js":131,"../utils/fn.js":133,"../utils/to-title-case.js":140,"./popup.js":110}],110:[function(_dereq_,module,exports){
/**
 * @file popup.js
 */
'use strict';

exports.__esModule = true;

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _componentJs = _dereq_('../component.js');

var _componentJs2 = _interopRequireDefault(_componentJs);

var _utilsDomJs = _dereq_('../utils/dom.js');

var Dom = _interopRequireWildcard(_utilsDomJs);

var _utilsFnJs = _dereq_('../utils/fn.js');

var Fn = _interopRequireWildcard(_utilsFnJs);

var _utilsEventsJs = _dereq_('../utils/events.js');

var Events = _interopRequireWildcard(_utilsEventsJs);

/**
 * The Popup component is used to build pop up controls.
 *
 * @extends Component
 * @class Popup
 */

var Popup = (function (_Component) {
  _inherits(Popup, _Component);

  function Popup() {
    _classCallCheck(this, Popup);

    _Component.apply(this, arguments);
  }

  /**
   * Add a popup item to the popup
   *
   * @param {Object|String} component Component or component type to add
   * @method addItem
   */

  Popup.prototype.addItem = function addItem(component) {
    this.addChild(component);
    component.on('click', Fn.bind(this, function () {
      this.unlockShowing();
    }));
  };

  /**
   * Create the component's DOM element
   *
   * @return {Element}
   * @method createEl
   */

  Popup.prototype.createEl = function createEl() {
    var contentElType = this.options_.contentElType || 'ul';
    this.contentEl_ = Dom.createEl(contentElType, {
      className: 'vjs-menu-content'
    });
    var el = _Component.prototype.createEl.call(this, 'div', {
      append: this.contentEl_,
      className: 'vjs-menu'
    });
    el.appendChild(this.contentEl_);

    // Prevent clicks from bubbling up. Needed for Popup Buttons,
    // where a click on the parent is significant
    Events.on(el, 'click', function (event) {
      event.preventDefault();
      event.stopImmediatePropagation();
    });

    return el;
  };

  return Popup;
})(_componentJs2['default']);

_componentJs2['default'].registerComponent('Popup', Popup);
exports['default'] = Popup;
module.exports = exports['default'];

},{"../component.js":66,"../utils/dom.js":131,"../utils/events.js":132,"../utils/fn.js":133}],111:[function(_dereq_,module,exports){
/**
 * @file poster-image.js
 */
'use strict';

exports.__esModule = true;

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _clickableComponentJs = _dereq_('./clickable-component.js');

var _clickableComponentJs2 = _interopRequireDefault(_clickableComponentJs);

var _componentJs = _dereq_('./component.js');

var _componentJs2 = _interopRequireDefault(_componentJs);

var _utilsFnJs = _dereq_('./utils/fn.js');

var Fn = _interopRequireWildcard(_utilsFnJs);

var _utilsDomJs = _dereq_('./utils/dom.js');

var Dom = _interopRequireWildcard(_utilsDomJs);

var _utilsBrowserJs = _dereq_('./utils/browser.js');

var browser = _interopRequireWildcard(_utilsBrowserJs);

/**
 * The component that handles showing the poster image.
 *
 * @param {Player|Object} player
 * @param {Object=} options
 * @extends Button
 * @class PosterImage
 */

var PosterImage = (function (_ClickableComponent) {
  _inherits(PosterImage, _ClickableComponent);

  function PosterImage(player, options) {
    _classCallCheck(this, PosterImage);

    _ClickableComponent.call(this, player, options);

    this.update();
    player.on('posterchange', Fn.bind(this, this.update));
  }

  /**
   * Clean up the poster image
   *
   * @method dispose
   */

  PosterImage.prototype.dispose = function dispose() {
    this.player().off('posterchange', this.update);
    _ClickableComponent.prototype.dispose.call(this);
  };

  /**
   * Create the poster's image element
   *
   * @return {Element}
   * @method createEl
   */

  PosterImage.prototype.createEl = function createEl() {
    var el = Dom.createEl('div', {
      className: 'vjs-poster',

      // Don't want poster to be tabbable.
      tabIndex: -1
    });

    // To ensure the poster image resizes while maintaining its original aspect
    // ratio, use a div with `background-size` when available. For browsers that
    // do not support `background-size` (e.g. IE8), fall back on using a regular
    // img element.
    if (!browser.BACKGROUND_SIZE_SUPPORTED) {
      this.fallbackImg_ = Dom.createEl('img');
      el.appendChild(this.fallbackImg_);
    }

    return el;
  };

  /**
   * Event handler for updates to the player's poster source
   *
   * @method update
   */

  PosterImage.prototype.update = function update() {
    var url = this.player().poster();

    this.setSrc(url);

    // If there's no poster source we should display:none on this component
    // so it's not still clickable or right-clickable
    if (url) {
      this.show();
    } else {
      this.hide();
    }
  };

  /**
   * Set the poster source depending on the display method
   *
   * @param {String} url The URL to the poster source
   * @method setSrc
   */

  PosterImage.prototype.setSrc = function setSrc(url) {
    if (this.fallbackImg_) {
      this.fallbackImg_.src = url;
    } else {
      var backgroundImage = '';
      // Any falsey values should stay as an empty string, otherwise
      // this will throw an extra error
      if (url) {
        backgroundImage = 'url("' + url + '")';
      }

      this.el_.style.backgroundImage = backgroundImage;
    }
  };

  /**
   * Event handler for clicks on the poster image
   *
   * @method handleClick
   */

  PosterImage.prototype.handleClick = function handleClick() {
    // We don't want a click to trigger playback when controls are disabled
    // but CSS should be hiding the poster to prevent that from happening
    if (this.player_.paused()) {
      this.player_.play();
    } else {
      this.player_.pause();
    }
  };

  return PosterImage;
})(_clickableComponentJs2['default']);

_componentJs2['default'].registerComponent('PosterImage', PosterImage);
exports['default'] = PosterImage;
module.exports = exports['default'];

},{"./clickable-component.js":64,"./component.js":66,"./utils/browser.js":128,"./utils/dom.js":131,"./utils/fn.js":133}],112:[function(_dereq_,module,exports){
/**
 * @file setup.js
 *
 * Functions for automatically setting up a player
 * based on the data-setup attribute of the video tag
 */
'use strict';

exports.__esModule = true;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

var _utilsEventsJs = _dereq_('./utils/events.js');

var Events = _interopRequireWildcard(_utilsEventsJs);

var _globalDocument = _dereq_('global/document');

var _globalDocument2 = _interopRequireDefault(_globalDocument);

var _globalWindow = _dereq_('global/window');

var _globalWindow2 = _interopRequireDefault(_globalWindow);

var _windowLoaded = false;
var videojs = undefined;

// Automatically set up any tags that have a data-setup attribute
var autoSetup = function autoSetup() {
  // One day, when we stop supporting IE8, go back to this, but in the meantime...*hack hack hack*
  // var vids = Array.prototype.slice.call(document.getElementsByTagName('video'));
  // var audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));
  // var mediaEls = vids.concat(audios);

  // Because IE8 doesn't support calling slice on a node list, we need to loop through each list of elements
  // to build up a new, combined list of elements.
  var vids = _globalDocument2['default'].getElementsByTagName('video');
  var audios = _globalDocument2['default'].getElementsByTagName('audio');
  var mediaEls = [];
  if (vids && vids.length > 0) {
    for (var i = 0, e = vids.length; i < e; i++) {
      mediaEls.push(vids[i]);
    }
  }
  if (audios && audios.length > 0) {
    for (var i = 0, e = audios.length; i < e; i++) {
      mediaEls.push(audios[i]);
    }
  }

  // Check if any media elements exist
  if (mediaEls && mediaEls.length > 0) {

    for (var i = 0, e = mediaEls.length; i < e; i++) {
      var mediaEl = mediaEls[i];

      // Check if element exists, has getAttribute func.
      // IE seems to consider typeof el.getAttribute == 'object' instead of 'function' like expected, at least when loading the player immediately.
      if (mediaEl && mediaEl.getAttribute) {

        // Make sure this player hasn't already been set up.
        if (mediaEl['player'] === undefined) {
          var options = mediaEl.getAttribute('data-setup');

          // Check if data-setup attr exists.
          // We only auto-setup if they've added the data-setup attr.
          if (options !== null) {
            // Create new video.js instance.
            var player = videojs(mediaEl);
          }
        }

        // If getAttribute isn't defined, we need to wait for the DOM.
      } else {
          autoSetupTimeout(1);
          break;
        }
    }

    // No videos were found, so keep looping unless page is finished loading.
  } else if (!_windowLoaded) {
      autoSetupTimeout(1);
    }
};

// Pause to let the DOM keep processing
var autoSetupTimeout = function autoSetupTimeout(wait, vjs) {
  videojs = vjs;
  setTimeout(autoSetup, wait);
};

if (_globalDocument2['default'].readyState === 'complete') {
  _windowLoaded = true;
} else {
  Events.one(_globalWindow2['default'], 'load', function () {
    _windowLoaded = true;
  });
}

var hasLoaded = function hasLoaded() {
  return _windowLoaded;
};

exports.autoSetup = autoSetup;
exports.autoSetupTimeout = autoSetupTimeout;
exports.hasLoaded = hasLoaded;

},{"./utils/events.js":132,"global/document":1,"global/window":2}],113:[function(_dereq_,module,exports){
/**
 * @file slider.js
 */
'use strict';

exports.__esModule = true;

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _componentJs = _dereq_('../component.js');

var _componentJs2 = _interopRequireDefault(_componentJs);

var _utilsDomJs = _dereq_('../utils/dom.js');

var Dom = _interopRequireWildcard(_utilsDomJs);

var _globalDocument = _dereq_('global/document');

var _globalDocument2 = _interopRequireDefault(_globalDocument);

var _objectAssign = _dereq_('object.assign');

var _objectAssign2 = _interopRequireDefault(_objectAssign);

/**
 * The base functionality for sliders like the volume bar and seek bar
 *
 * @param {Player|Object} player
 * @param {Object=} options
 * @extends Component
 * @class Slider
 */

var Slider = (function (_Component) {
  _inherits(Slider, _Component);

  function Slider(player, options) {
    _classCallCheck(this, Slider);

    _Component.call(this, player, options);

    // Set property names to bar to match with the child Slider class is looking for
    this.bar = this.getChild(this.options_.barName);

    // Set a horizontal or vertical class on the slider depending on the slider type
    this.vertical(!!this.options_.vertical);

    this.on('mousedown', this.handleMouseDown);
    this.on('touchstart', this.handleMouseDown);
    this.on('focus', this.handleFocus);
    this.on('blur', this.handleBlur);
    this.on('click', this.handleClick);

    this.on(player, 'controlsvisible', this.update);
    this.on(player, this.playerEvent, this.update);
  }

  /**
   * Create the component's DOM element
   *
   * @param {String} type Type of element to create
   * @param {Object=} props List of properties in Object form
   * @return {Element}
   * @method createEl
   */

  Slider.prototype.createEl = function createEl(type) {
    var props = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
    var attributes = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];

    // Add the slider element class to all sub classes
    props.className = props.className + ' vjs-slider';
    props = _objectAssign2['default']({
      tabIndex: 0
    }, props);

    attributes = _objectAssign2['default']({
      'role': 'slider',
      'aria-valuenow': 0,
      'aria-valuemin': 0,
      'aria-valuemax': 100,
      tabIndex: 0
    }, attributes);

    return _Component.prototype.createEl.call(this, type, props, attributes);
  };

  /**
   * Handle mouse down on slider
   *
   * @param {Object} event Mouse down event object
   * @method handleMouseDown
   */

  Slider.prototype.handleMouseDown = function handleMouseDown(event) {
    event.preventDefault();
    Dom.blockTextSelection();

    this.addClass('vjs-sliding');
    this.trigger('slideractive');

    this.on(_globalDocument2['default'], 'mousemove', this.handleMouseMove);
    this.on(_globalDocument2['default'], 'mouseup', this.handleMouseUp);
    this.on(_globalDocument2['default'], 'touchmove', this.handleMouseMove);
    this.on(_globalDocument2['default'], 'touchend', this.handleMouseUp);

    this.handleMouseMove(event);
  };

  /**
   * To be overridden by a subclass
   *
   * @method handleMouseMove
   */

  Slider.prototype.handleMouseMove = function handleMouseMove() {};

  /**
   * Handle mouse up on Slider
   *
   * @method handleMouseUp
   */

  Slider.prototype.handleMouseUp = function handleMouseUp() {
    Dom.unblockTextSelection();

    this.removeClass('vjs-sliding');
    this.trigger('sliderinactive');

    this.off(_globalDocument2['default'], 'mousemove', this.handleMouseMove);
    this.off(_globalDocument2['default'], 'mouseup', this.handleMouseUp);
    this.off(_globalDocument2['default'], 'touchmove', this.handleMouseMove);
    this.off(_globalDocument2['default'], 'touchend', this.handleMouseUp);

    this.update();
  };

  /**
   * Update slider
   *
   * @method update
   */

  Slider.prototype.update = function update() {
    // In VolumeBar init we have a setTimeout for update that pops and update to the end of the
    // execution stack. The player is destroyed before then update will cause an error
    if (!this.el_) return;

    // If scrubbing, we could use a cached value to make the handle keep up with the user's mouse.
    // On HTML5 browsers scrubbing is really smooth, but some flash players are slow, so we might want to utilize this later.
    // var progress =  (this.player_.scrubbing()) ? this.player_.getCache().currentTime / this.player_.duration() : this.player_.currentTime() / this.player_.duration();
    var progress = this.getPercent();
    var bar = this.bar;

    // If there's no bar...
    if (!bar) return;

    // Protect against no duration and other division issues
    if (typeof progress !== 'number' || progress !== progress || progress < 0 || progress === Infinity) {
      progress = 0;
    }

    // Convert to a percentage for setting
    var percentage = (progress * 100).toFixed(2) + '%';

    // Set the new bar width or height
    if (this.vertical()) {
      bar.el().style.height = percentage;
    } else {
      bar.el().style.width = percentage;
    }
  };

  /**
   * Calculate distance for slider
   *
   * @param {Object} event Event object
   * @method calculateDistance
   */

  Slider.prototype.calculateDistance = function calculateDistance(event) {
    var position = Dom.getPointerPosition(this.el_, event);
    if (this.vertical()) {
      return position.y;
    }
    return position.x;
  };

  /**
   * Handle on focus for slider
   *
   * @method handleFocus
   */

  Slider.prototype.handleFocus = function handleFocus() {
    this.on(_globalDocument2['default'], 'keydown', this.handleKeyPress);
  };

  /**
   * Handle key press for slider
   *
   * @param {Object} event Event object
   * @method handleKeyPress
   */

  Slider.prototype.handleKeyPress = function handleKeyPress(event) {
    if (event.which === 37 || event.which === 40) {
      // Left and Down Arrows
      event.preventDefault();
      this.stepBack();
    } else if (event.which === 38 || event.which === 39) {
      // Up and Right Arrows
      event.preventDefault();
      this.stepForward();
    }
  };

  /**
   * Handle on blur for slider
   *
   * @method handleBlur
   */

  Slider.prototype.handleBlur = function handleBlur() {
    this.off(_globalDocument2['default'], 'keydown', this.handleKeyPress);
  };

  /**
   * Listener for click events on slider, used to prevent clicks
   *   from bubbling up to parent elements like button menus.
   *
   * @param {Object} event Event object
   * @method handleClick
   */

  Slider.prototype.handleClick = function handleClick(event) {
    event.stopImmediatePropagation();
    event.preventDefault();
  };

  /**
   * Get/set if slider is horizontal for vertical
   *
   * @param {Boolean} bool True if slider is vertical, false is horizontal
   * @return {Boolean} True if slider is vertical, false is horizontal
   * @method vertical
   */

  Slider.prototype.vertical = function vertical(bool) {
    if (bool === undefined) {
      return this.vertical_ || false;
    }

    this.vertical_ = !!bool;

    if (this.vertical_) {
      this.addClass('vjs-slider-vertical');
    } else {
      this.addClass('vjs-slider-horizontal');
    }

    return this;
  };

  return Slider;
})(_componentJs2['default']);

_componentJs2['default'].registerComponent('Slider', Slider);
exports['default'] = Slider;
module.exports = exports['default'];

},{"../component.js":66,"../utils/dom.js":131,"global/document":1,"object.assign":45}],114:[function(_dereq_,module,exports){
/**
 * @file flash-rtmp.js
 */
'use strict';

exports.__esModule = true;
function FlashRtmpDecorator(Flash) {
  Flash.streamingFormats = {
    'rtmp/mp4': 'MP4',
    'rtmp/flv': 'FLV'
  };

  Flash.streamFromParts = function (connection, stream) {
    return connection + '&' + stream;
  };

  Flash.streamToParts = function (src) {
    var parts = {
      connection: '',
      stream: ''
    };

    if (!src) return parts;

    // Look for the normal URL separator we expect, '&'.
    // If found, we split the URL into two pieces around the
    // first '&'.
    var connEnd = src.search(/&(?!\w+=)/);
    var streamBegin = undefined;
    if (connEnd !== -1) {
      streamBegin = connEnd + 1;
    } else {
      // If there's not a '&', we use the last '/' as the delimiter.
      connEnd = streamBegin = src.lastIndexOf('/') + 1;
      if (connEnd === 0) {
        // really, there's not a '/'?
        connEnd = streamBegin = src.length;
      }
    }
    parts.connection = src.substring(0, connEnd);
    parts.stream = src.substring(streamBegin, src.length);

    return parts;
  };

  Flash.isStreamingType = function (srcType) {
    return srcType in Flash.streamingFormats;
  };

  // RTMP has four variations, any string starting
  // with one of these protocols should be valid
  Flash.RTMP_RE = /^rtmp[set]?:\/\//i;

  Flash.isStreamingSrc = function (src) {
    return Flash.RTMP_RE.test(src);
  };

  /**
   * A source handler for RTMP urls
   * @type {Object}
   */
  Flash.rtmpSourceHandler = {};

  /**
   * Check if Flash can play the given videotype
   * @param  {String} type    The mimetype to check
   * @return {String}         'probably', 'maybe', or '' (empty string)
   */
  Flash.rtmpSourceHandler.canPlayType = function (type) {
    if (Flash.isStreamingType(type)) {
      return 'maybe';
    }

    return '';
  };

  /**
   * Check if Flash can handle the source natively
   * @param  {Object} source  The source object
   * @return {String}         'probably', 'maybe', or '' (empty string)
   */
  Flash.rtmpSourceHandler.canHandleSource = function (source) {
    var can = Flash.rtmpSourceHandler.canPlayType(source.type);

    if (can) {
      return can;
    }

    if (Flash.isStreamingSrc(source.src)) {
      return 'maybe';
    }

    return '';
  };

  /**
   * Pass the source to the flash object
   * Adaptive source handlers will have more complicated workflows before passing
   * video data to the video element
   * @param  {Object} source    The source object
   * @param  {Flash} tech   The instance of the Flash tech
   */
  Flash.rtmpSourceHandler.handleSource = function (source, tech) {
    var srcParts = Flash.streamToParts(source.src);

    tech['setRtmpConnection'](srcParts.connection);
    tech['setRtmpStream'](srcParts.stream);
  };

  // Register the native source handler
  Flash.registerSourceHandler(Flash.rtmpSourceHandler);

  return Flash;
}

exports['default'] = FlashRtmpDecorator;
module.exports = exports['default'];

},{}],115:[function(_dereq_,module,exports){
/**
 * @file flash.js
 * VideoJS-SWF - Custom Flash Player with HTML5-ish API
 * https://github.com/zencoder/video-js-swf
 * Not using setupTriggers. Using global onEvent func to distribute events
 */

'use strict';

exports.__esModule = true;

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _tech = _dereq_('./tech');

var _tech2 = _interopRequireDefault(_tech);

var _utilsDomJs = _dereq_('../utils/dom.js');

var Dom = _interopRequireWildcard(_utilsDomJs);

var _utilsUrlJs = _dereq_('../utils/url.js');

var Url = _interopRequireWildcard(_utilsUrlJs);

var _utilsTimeRangesJs = _dereq_('../utils/time-ranges.js');

var _flashRtmp = _dereq_('./flash-rtmp');

var _flashRtmp2 = _interopRequireDefault(_flashRtmp);

var _component = _dereq_('../component');

var _component2 = _interopRequireDefault(_component);

var _globalWindow = _dereq_('global/window');

var _globalWindow2 = _interopRequireDefault(_globalWindow);

var _objectAssign = _dereq_('object.assign');

var _objectAssign2 = _interopRequireDefault(_objectAssign);

var navigator = _globalWindow2['default'].navigator;
/**
 * Flash Media Controller - Wrapper for fallback SWF API
 *
 * @param {Object=} options Object of option names and values
 * @param {Function=} ready Ready callback function
 * @extends Tech
 * @class Flash
 */

var Flash = (function (_Tech) {
  _inherits(Flash, _Tech);

  function Flash(options, ready) {
    _classCallCheck(this, Flash);

    _Tech.call(this, options, ready);

    // Set the source when ready
    if (options.source) {
      this.ready(function () {
        this.setSource(options.source);
      }, true);
    }

    // Having issues with Flash reloading on certain page actions (hide/resize/fullscreen) in certain browsers
    // This allows resetting the playhead when we catch the reload
    if (options.startTime) {
      this.ready(function () {
        this.load();
        this.play();
        this.currentTime(options.startTime);
      }, true);
    }

    // Add global window functions that the swf expects
    // A 4.x workflow we weren't able to solve for in 5.0
    // because of the need to hard code these functions
    // into the swf for security reasons
    _globalWindow2['default'].videojs = _globalWindow2['default'].videojs || {};
    _globalWindow2['default'].videojs.Flash = _globalWindow2['default'].videojs.Flash || {};
    _globalWindow2['default'].videojs.Flash.onReady = Flash.onReady;
    _globalWindow2['default'].videojs.Flash.onEvent = Flash.onEvent;
    _globalWindow2['default'].videojs.Flash.onError = Flash.onError;

    this.on('seeked', function () {
      this.lastSeekTarget_ = undefined;
    });
  }

  // Create setters and getters for attributes

  /**
   * Create the component's DOM element
   *
   * @return {Element}
   * @method createEl
   */

  Flash.prototype.createEl = function createEl() {
    var options = this.options_;

    // If video.js is hosted locally you should also set the location
    // for the hosted swf, which should be relative to the page (not video.js)
    // Otherwise this adds a CDN url.
    // The CDN also auto-adds a swf URL for that specific version.
    if (!options.swf) {
      options.swf = '//vjs.zencdn.net/swf/5.0.1/video-js.swf';
    }

    // Generate ID for swf object
    var objId = options.techId;

    // Merge default flashvars with ones passed in to init
    var flashVars = _objectAssign2['default']({

      // SWF Callback Functions
      'readyFunction': 'videojs.Flash.onReady',
      'eventProxyFunction': 'videojs.Flash.onEvent',
      'errorEventProxyFunction': 'videojs.Flash.onError',

      // Player Settings
      'autoplay': options.autoplay,
      'preload': options.preload,
      'loop': options.loop,
      'muted': options.muted

    }, options.flashVars);

    // Merge default parames with ones passed in
    var params = _objectAssign2['default']({
      'wmode': 'opaque', // Opaque is needed to overlay controls, but can affect playback performance
      'bgcolor': '#000000' // Using bgcolor prevents a white flash when the object is loading
    }, options.params);

    // Merge default attributes with ones passed in
    var attributes = _objectAssign2['default']({
      'id': objId,
      'name': objId, // Both ID and Name needed or swf to identify itself
      'class': 'vjs-tech'
    }, options.attributes);

    this.el_ = Flash.embed(options.swf, flashVars, params, attributes);
    this.el_.tech = this;

    return this.el_;
  };

  /**
   * Play for flash tech
   *
   * @method play
   */

  Flash.prototype.play = function play() {
    if (this.ended()) {
      this.setCurrentTime(0);
    }
    this.el_.vjs_play();
  };

  /**
   * Pause for flash tech
   *
   * @method pause
   */

  Flash.prototype.pause = function pause() {
    this.el_.vjs_pause();
  };

  /**
   * Get/set video
   *
   * @param {Object=} src Source object
   * @return {Object}
   * @method src
   */

  Flash.prototype.src = function src(_src) {
    if (_src === undefined) {
      return this.currentSrc();
    }

    // Setting src through `src` not `setSrc` will be deprecated
    return this.setSrc(_src);
  };

  /**
   * Set video
   *
   * @param {Object=} src Source object
   * @deprecated
   * @method setSrc
   */

  Flash.prototype.setSrc = function setSrc(src) {
    // Make sure source URL is absolute.
    src = Url.getAbsoluteURL(src);
    this.el_.vjs_src(src);

    // Currently the SWF doesn't autoplay if you load a source later.
    // e.g. Load player w/ no source, wait 2s, set src.
    if (this.autoplay()) {
      var tech = this;
      this.setTimeout(function () {
        tech.play();
      }, 0);
    }
  };

  /**
   * Returns true if the tech is currently seeking.
   * @return {boolean} true if seeking
   */

  Flash.prototype.seeking = function seeking() {
    return this.lastSeekTarget_ !== undefined;
  };

  /**
   * Set current time
   *
   * @param {Number} time Current time of video
   * @method setCurrentTime
   */

  Flash.prototype.setCurrentTime = function setCurrentTime(time) {
    var seekable = this.seekable();
    if (seekable.length) {
      // clamp to the current seekable range
      time = time > seekable.start(0) ? time : seekable.start(0);
      time = time < seekable.end(seekable.length - 1) ? time : seekable.end(seekable.length - 1);

      this.lastSeekTarget_ = time;
      this.trigger('seeking');
      this.el_.vjs_setProperty('currentTime', time);
      _Tech.prototype.setCurrentTime.call(this);
    }
  };

  /**
   * Get current time
   *
   * @param {Number=} time Current time of video
   * @return {Number} Current time
   * @method currentTime
   */

  Flash.prototype.currentTime = function currentTime(time) {
    // when seeking make the reported time keep up with the requested time
    // by reading the time we're seeking to
    if (this.seeking()) {
      return this.lastSeekTarget_ || 0;
    }
    return this.el_.vjs_getProperty('currentTime');
  };

  /**
   * Get current source
   *
   * @method currentSrc
   */

  Flash.prototype.currentSrc = function currentSrc() {
    if (this.currentSource_) {
      return this.currentSource_.src;
    } else {
      return this.el_.vjs_getProperty('currentSrc');
    }
  };

  /**
   * Load media into player
   *
   * @method load
   */

  Flash.prototype.load = function load() {
    this.el_.vjs_load();
  };

  /**
   * Get poster
   *
   * @method poster
   */

  Flash.prototype.poster = function poster() {
    this.el_.vjs_getProperty('poster');
  };

  /**
   * Poster images are not handled by the Flash tech so make this a no-op
   *
   * @method setPoster
   */

  Flash.prototype.setPoster = function setPoster() {};

  /**
   * Determine if can seek in media
   *
   * @return {TimeRangeObject}
   * @method seekable
   */

  Flash.prototype.seekable = function seekable() {
    var duration = this.duration();
    if (duration === 0) {
      return _utilsTimeRangesJs.createTimeRange();
    }
    return _utilsTimeRangesJs.createTimeRange(0, duration);
  };

  /**
   * Get buffered time range
   *
   * @return {TimeRangeObject}
   * @method buffered
   */

  Flash.prototype.buffered = function buffered() {
    var ranges = this.el_.vjs_getProperty('buffered');
    if (ranges.length === 0) {
      return _utilsTimeRangesJs.createTimeRange();
    }
    return _utilsTimeRangesJs.createTimeRange(ranges[0][0], ranges[0][1]);
  };

  /**
   * Get fullscreen support -
   * Flash does not allow fullscreen through javascript
   * so always returns false
   *
   * @return {Boolean} false
   * @method supportsFullScreen
   */

  Flash.prototype.supportsFullScreen = function supportsFullScreen() {
    return false; // Flash does not allow fullscreen through javascript
  };

  /**
   * Request to enter fullscreen
   * Flash does not allow fullscreen through javascript
   * so always returns false
   *
   * @return {Boolean} false
   * @method enterFullScreen
   */

  Flash.prototype.enterFullScreen = function enterFullScreen() {
    return false;
  };

  return Flash;
})(_tech2['default']);

var _api = Flash.prototype;
var _readWrite = 'rtmpConnection,rtmpStream,preload,defaultPlaybackRate,playbackRate,autoplay,loop,mediaGroup,controller,controls,volume,muted,defaultMuted'.split(',');
var _readOnly = 'networkState,readyState,initialTime,duration,startOffsetTime,paused,ended,videoTracks,audioTracks,videoWidth,videoHeight'.split(',');

function _createSetter(attr) {
  var attrUpper = attr.charAt(0).toUpperCase() + attr.slice(1);
  _api['set' + attrUpper] = function (val) {
    return this.el_.vjs_setProperty(attr, val);
  };
}
function _createGetter(attr) {
  _api[attr] = function () {
    return this.el_.vjs_getProperty(attr);
  };
}

// Create getter and setters for all read/write attributes
for (var i = 0; i < _readWrite.length; i++) {
  _createGetter(_readWrite[i]);
  _createSetter(_readWrite[i]);
}

// Create getters for read-only attributes
for (var i = 0; i < _readOnly.length; i++) {
  _createGetter(_readOnly[i]);
}

/* Flash Support Testing -------------------------------------------------------- */

Flash.isSupported = function () {
  return Flash.version()[0] >= 10;
  // return swfobject.hasFlashPlayerVersion('10');
};

// Add Source Handler pattern functions to this tech
_tech2['default'].withSourceHandlers(Flash);

/*
 * The default native source handler.
 * This simply passes the source to the video element. Nothing fancy.
 *
 * @param  {Object} source   The source object
 * @param  {Flash} tech  The instance of the Flash tech
 */
Flash.nativeSourceHandler = {};

/**
 * Check if Flash can play the given videotype
 * @param  {String} type    The mimetype to check
 * @return {String}         'probably', 'maybe', or '' (empty string)
 */
Flash.nativeSourceHandler.canPlayType = function (type) {
  if (type in Flash.formats) {
    return 'maybe';
  }

  return '';
};

/*
 * Check Flash can handle the source natively
 *
 * @param  {Object} source  The source object
 * @return {String}         'probably', 'maybe', or '' (empty string)
 */
Flash.nativeSourceHandler.canHandleSource = function (source) {
  var type;

  function guessMimeType(src) {
    var ext = Url.getFileExtension(src);
    if (ext) {
      return 'video/' + ext;
    }
    return '';
  }

  if (!source.type) {
    type = guessMimeType(source.src);
  } else {
    // Strip code information from the type because we don't get that specific
    type = source.type.replace(/;.*/, '').toLowerCase();
  }

  return Flash.nativeSourceHandler.canPlayType(type);
};

/*
 * Pass the source to the flash object
 * Adaptive source handlers will have more complicated workflows before passing
 * video data to the video element
 *
 * @param  {Object} source    The source object
 * @param  {Flash} tech   The instance of the Flash tech
 */
Flash.nativeSourceHandler.handleSource = function (source, tech) {
  tech.setSrc(source.src);
};

/*
 * Clean up the source handler when disposing the player or switching sources..
 * (no cleanup is needed when supporting the format natively)
 */
Flash.nativeSourceHandler.dispose = function () {};

// Register the native source handler
Flash.registerSourceHandler(Flash.nativeSourceHandler);

Flash.formats = {
  'video/flv': 'FLV',
  'video/x-flv': 'FLV',
  'video/mp4': 'MP4',
  'video/m4v': 'MP4'
};

Flash.onReady = function (currSwf) {
  var el = Dom.getEl(currSwf);
  var tech = el && el.tech;

  // if there is no el then the tech has been disposed
  // and the tech element was removed from the player div
  if (tech && tech.el()) {
    // check that the flash object is really ready
    Flash.checkReady(tech);
  }
};

// The SWF isn't always ready when it says it is. Sometimes the API functions still need to be added to the object.
// If it's not ready, we set a timeout to check again shortly.
Flash.checkReady = function (tech) {
  // stop worrying if the tech has been disposed
  if (!tech.el()) {
    return;
  }

  // check if API property exists
  if (tech.el().vjs_getProperty) {
    // tell tech it's ready
    tech.triggerReady();
  } else {
    // wait longer
    this.setTimeout(function () {
      Flash['checkReady'](tech);
    }, 50);
  }
};

// Trigger events from the swf on the player
Flash.onEvent = function (swfID, eventName) {
  var tech = Dom.getEl(swfID).tech;
  tech.trigger(eventName);
};

// Log errors from the swf
Flash.onError = function (swfID, err) {
  var tech = Dom.getEl(swfID).tech;

  // trigger MEDIA_ERR_SRC_NOT_SUPPORTED
  if (err === 'srcnotfound') {
    return tech.error(4);
  }

  // trigger a custom error
  tech.error('FLASH: ' + err);
};

// Flash Version Check
Flash.version = function () {
  var version = '0,0,0';

  // IE
  try {
    version = new _globalWindow2['default'].ActiveXObject('ShockwaveFlash.ShockwaveFlash').GetVariable('$version').replace(/\D+/g, ',').match(/^,?(.+),?$/)[1];

    // other browsers
  } catch (e) {
    try {
      if (navigator.mimeTypes['application/x-shockwave-flash'].enabledPlugin) {
        version = (navigator.plugins['Shockwave Flash 2.0'] || navigator.plugins['Shockwave Flash']).description.replace(/\D+/g, ',').match(/^,?(.+),?$/)[1];
      }
    } catch (err) {}
  }
  return version.split(',');
};

// Flash embedding method. Only used in non-iframe mode
Flash.embed = function (swf, flashVars, params, attributes) {
  var code = Flash.getEmbedCode(swf, flashVars, params, attributes);

  // Get element by embedding code and retrieving created element
  var obj = Dom.createEl('div', { innerHTML: code }).childNodes[0];

  return obj;
};

Flash.getEmbedCode = function (swf, flashVars, params, attributes) {
  var objTag = '<object type="application/x-shockwave-flash" ';
  var flashVarsString = '';
  var paramsString = '';
  var attrsString = '';

  // Convert flash vars to string
  if (flashVars) {
    Object.getOwnPropertyNames(flashVars).forEach(function (key) {
      flashVarsString += key + '=' + flashVars[key] + '&amp;';
    });
  }

  // Add swf, flashVars, and other default params
  params = _objectAssign2['default']({
    'movie': swf,
    'flashvars': flashVarsString,
    'allowScriptAccess': 'always', // Required to talk to swf
    'allowNetworking': 'all' // All should be default, but having security issues.
  }, params);

  // Create param tags string
  Object.getOwnPropertyNames(params).forEach(function (key) {
    paramsString += '<param name="' + key + '" value="' + params[key] + '" />';
  });

  attributes = _objectAssign2['default']({
    // Add swf to attributes (need both for IE and Others to work)
    'data': swf,

    // Default to 100% width/height
    'width': '100%',
    'height': '100%'

  }, attributes);

  // Create Attributes string
  Object.getOwnPropertyNames(attributes).forEach(function (key) {
    attrsString += key + '="' + attributes[key] + '" ';
  });

  return '' + objTag + attrsString + '>' + paramsString + '</object>';
};

// Run Flash through the RTMP decorator
_flashRtmp2['default'](Flash);

_component2['default'].registerComponent('Flash', Flash);
_tech2['default'].registerTech('Flash', Flash);
exports['default'] = Flash;
module.exports = exports['default'];

},{"../component":66,"../utils/dom.js":131,"../utils/time-ranges.js":139,"../utils/url.js":141,"./flash-rtmp":114,"./tech":118,"global/window":2,"object.assign":45}],116:[function(_dereq_,module,exports){
/**
 * @file html5.js
 * HTML5 Media Controller - Wrapper for HTML5 Media API
 */

'use strict';

exports.__esModule = true;

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _techJs = _dereq_('./tech.js');

var _techJs2 = _interopRequireDefault(_techJs);

var _component = _dereq_('../component');

var _component2 = _interopRequireDefault(_component);

var _utilsDomJs = _dereq_('../utils/dom.js');

var Dom = _interopRequireWildcard(_utilsDomJs);

var _utilsUrlJs = _dereq_('../utils/url.js');

var Url = _interopRequireWildcard(_utilsUrlJs);

var _utilsFnJs = _dereq_('../utils/fn.js');

var Fn = _interopRequireWildcard(_utilsFnJs);

var _utilsLogJs = _dereq_('../utils/log.js');

var _utilsLogJs2 = _interopRequireDefault(_utilsLogJs);

var _utilsBrowserJs = _dereq_('../utils/browser.js');

var browser = _interopRequireWildcard(_utilsBrowserJs);

var _globalDocument = _dereq_('global/document');

var _globalDocument2 = _interopRequireDefault(_globalDocument);

var _globalWindow = _dereq_('global/window');

var _globalWindow2 = _interopRequireDefault(_globalWindow);

var _objectAssign = _dereq_('object.assign');

var _objectAssign2 = _interopRequireDefault(_objectAssign);

var _utilsMergeOptionsJs = _dereq_('../utils/merge-options.js');

var _utilsMergeOptionsJs2 = _interopRequireDefault(_utilsMergeOptionsJs);

/**
 * HTML5 Media Controller - Wrapper for HTML5 Media API
 *
 * @param {Object=} options Object of option names and values
 * @param {Function=} ready Ready callback function
 * @extends Tech
 * @class Html5
 */

var Html5 = (function (_Tech) {
  _inherits(Html5, _Tech);

  function Html5(options, ready) {
    _classCallCheck(this, Html5);

    _Tech.call(this, options, ready);

    var source = options.source;

    // Set the source if one is provided
    // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)
    // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source
    // anyway so the error gets fired.
    if (source && (this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {
      this.setSource(source);
    } else {
      this.handleLateInit_(this.el_);
    }

    if (this.el_.hasChildNodes()) {

      var nodes = this.el_.childNodes;
      var nodesLength = nodes.length;
      var removeNodes = [];

      while (nodesLength--) {
        var node = nodes[nodesLength];
        var nodeName = node.nodeName.toLowerCase();

        if (nodeName === 'track') {
          if (!this.featuresNativeTextTracks) {
            // Empty video tag tracks so the built-in player doesn't use them also.
            // This may not be fast enough to stop HTML5 browsers from reading the tags
            // so we'll need to turn off any default tracks if we're manually doing
            // captions and subtitles. videoElement.textTracks
            removeNodes.push(node);
          } else {
            // store HTMLTrackElement and TextTrack to remote list
            this.remoteTextTrackEls().addTrackElement_(node);
            this.remoteTextTracks().addTrack_(node.track);
          }
        }
      }

      for (var i = 0; i < removeNodes.length; i++) {
        this.el_.removeChild(removeNodes[i]);
      }
    }

    if (this.featuresNativeTextTracks) {
      this.handleTextTrackChange_ = Fn.bind(this, this.handleTextTrackChange);
      this.handleTextTrackAdd_ = Fn.bind(this, this.handleTextTrackAdd);
      this.handleTextTrackRemove_ = Fn.bind(this, this.handleTextTrackRemove);
      this.proxyNativeTextTracks_();
    }

    // Determine if native controls should be used
    // Our goal should be to get the custom controls on mobile solid everywhere
    // so we can remove this all together. Right now this will block custom
    // controls on touch enabled laptops like the Chrome Pixel
    if (browser.TOUCH_ENABLED && options.nativeControlsForTouch === true || browser.IS_IPHONE || browser.IS_NATIVE_ANDROID) {
      this.setControls(true);
    }

    this.triggerReady();
  }

  /* HTML5 Support Testing ---------------------------------------------------- */

  /*
  * Element for testing browser HTML5 video capabilities
  *
  * @type {Element}
  * @constant
  * @private
  */

  /**
   * Dispose of html5 media element
   *
   * @method dispose
   */

  Html5.prototype.dispose = function dispose() {
    var tt = this.el().textTracks;
    var emulatedTt = this.textTracks();

    // remove native event listeners
    if (tt && tt.removeEventListener) {
      tt.removeEventListener('change', this.handleTextTrackChange_);
      tt.removeEventListener('addtrack', this.handleTextTrackAdd_);
      tt.removeEventListener('removetrack', this.handleTextTrackRemove_);
    }

    // clearout the emulated text track list.
    var i = emulatedTt.length;

    while (i--) {
      emulatedTt.removeTrack_(emulatedTt[i]);
    }

    Html5.disposeMediaElement(this.el_);
    _Tech.prototype.dispose.call(this);
  };

  /**
   * Create the component's DOM element
   *
   * @return {Element}
   * @method createEl
   */

  Html5.prototype.createEl = function createEl() {
    var el = this.options_.tag;

    // Check if this browser supports moving the element into the box.
    // On the iPhone video will break if you move the element,
    // So we have to create a brand new element.
    if (!el || this['movingMediaElementInDOM'] === false) {

      // If the original tag is still there, clone and remove it.
      if (el) {
        var clone = el.cloneNode(true);
        el.parentNode.insertBefore(clone, el);
        Html5.disposeMediaElement(el);
        el = clone;
      } else {
        el = _globalDocument2['default'].createElement('video');

        // determine if native controls should be used
        var tagAttributes = this.options_.tag && Dom.getElAttributes(this.options_.tag);
        var attributes = _utilsMergeOptionsJs2['default']({}, tagAttributes);
        if (!browser.TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {
          delete attributes.controls;
        }

        Dom.setElAttributes(el, _objectAssign2['default'](attributes, {
          id: this.options_.techId,
          'class': 'vjs-tech'
        }));
      }
    }

    // Update specific tag settings, in case they were overridden
    var settingsAttrs = ['autoplay', 'preload', 'loop', 'muted'];
    for (var i = settingsAttrs.length - 1; i >= 0; i--) {
      var attr = settingsAttrs[i];
      var overwriteAttrs = {};
      if (typeof this.options_[attr] !== 'undefined') {
        overwriteAttrs[attr] = this.options_[attr];
      }
      Dom.setElAttributes(el, overwriteAttrs);
    }

    return el;
    // jenniisawesome = true;
  };

  // If we're loading the playback object after it has started loading
  // or playing the video (often with autoplay on) then the loadstart event
  // has already fired and we need to fire it manually because many things
  // rely on it.

  Html5.prototype.handleLateInit_ = function handleLateInit_(el) {
    var _this = this;

    if (el.networkState === 0 || el.networkState === 3) {
      // The video element hasn't started loading the source yet
      // or didn't find a source
      return;
    }

    if (el.readyState === 0) {
      var _ret = (function () {
        // NetworkState is set synchronously BUT loadstart is fired at the
        // end of the current stack, usually before setInterval(fn, 0).
        // So at this point we know loadstart may have already fired or is
        // about to fire, and either way the player hasn't seen it yet.
        // We don't want to fire loadstart prematurely here and cause a
        // double loadstart so we'll wait and see if it happens between now
        // and the next loop, and fire it if not.
        // HOWEVER, we also want to make sure it fires before loadedmetadata
        // which could also happen between now and the next loop, so we'll
        // watch for that also.
        var loadstartFired = false;
        var setLoadstartFired = function setLoadstartFired() {
          loadstartFired = true;
        };
        _this.on('loadstart', setLoadstartFired);

        var triggerLoadstart = function triggerLoadstart() {
          // We did miss the original loadstart. Make sure the player
          // sees loadstart before loadedmetadata
          if (!loadstartFired) {
            this.trigger('loadstart');
          }
        };
        _this.on('loadedmetadata', triggerLoadstart);

        _this.ready(function () {
          this.off('loadstart', setLoadstartFired);
          this.off('loadedmetadata', triggerLoadstart);

          if (!loadstartFired) {
            // We did miss the original native loadstart. Fire it now.
            this.trigger('loadstart');
          }
        });

        return {
          v: undefined
        };
      })();

      if (typeof _ret === 'object') return _ret.v;
    }

    // From here on we know that loadstart already fired and we missed it.
    // The other readyState events aren't as much of a problem if we double
    // them, so not going to go to as much trouble as loadstart to prevent
    // that unless we find reason to.
    var eventsToTrigger = ['loadstart'];

    // loadedmetadata: newly equal to HAVE_METADATA (1) or greater
    eventsToTrigger.push('loadedmetadata');

    // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater
    if (el.readyState >= 2) {
      eventsToTrigger.push('loadeddata');
    }

    // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater
    if (el.readyState >= 3) {
      eventsToTrigger.push('canplay');
    }

    // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)
    if (el.readyState >= 4) {
      eventsToTrigger.push('canplaythrough');
    }

    // We still need to give the player time to add event listeners
    this.ready(function () {
      eventsToTrigger.forEach(function (type) {
        this.trigger(type);
      }, this);
    });
  };

  Html5.prototype.proxyNativeTextTracks_ = function proxyNativeTextTracks_() {
    var tt = this.el().textTracks;

    if (tt && tt.addEventListener) {
      tt.addEventListener('change', this.handleTextTrackChange_);
      tt.addEventListener('addtrack', this.handleTextTrackAdd_);
      tt.addEventListener('removetrack', this.handleTextTrackRemove_);
    }
  };

  Html5.prototype.handleTextTrackChange = function handleTextTrackChange(e) {
    var tt = this.textTracks();
    this.textTracks().trigger({
      type: 'change',
      target: tt,
      currentTarget: tt,
      srcElement: tt
    });
  };

  Html5.prototype.handleTextTrackAdd = function handleTextTrackAdd(e) {
    this.textTracks().addTrack_(e.track);
  };

  Html5.prototype.handleTextTrackRemove = function handleTextTrackRemove(e) {
    this.textTracks().removeTrack_(e.track);
  };

  /**
   * Play for html5 tech
   *
   * @method play
   */

  Html5.prototype.play = function play() {
    this.el_.play();
  };

  /**
   * Pause for html5 tech
   *
   * @method pause
   */

  Html5.prototype.pause = function pause() {
    this.el_.pause();
  };

  /**
   * Paused for html5 tech
   *
   * @return {Boolean}
   * @method paused
   */

  Html5.prototype.paused = function paused() {
    return this.el_.paused;
  };

  /**
   * Get current time
   *
   * @return {Number}
   * @method currentTime
   */

  Html5.prototype.currentTime = function currentTime() {
    return this.el_.currentTime;
  };

  /**
   * Set current time
   *
   * @param {Number} seconds Current time of video
   * @method setCurrentTime
   */

  Html5.prototype.setCurrentTime = function setCurrentTime(seconds) {
    try {
      this.el_.currentTime = seconds;
    } catch (e) {
      _utilsLogJs2['default'](e, 'Video is not ready. (Video.js)');
      // this.warning(VideoJS.warnings.videoNotReady);
    }
  };

  /**
   * Get duration
   *
   * @return {Number}
   * @method duration
   */

  Html5.prototype.duration = function duration() {
    return this.el_.duration || 0;
  };

  /**
   * Get a TimeRange object that represents the intersection
   * of the time ranges for which the user agent has all
   * relevant media
   *
   * @return {TimeRangeObject}
   * @method buffered
   */

  Html5.prototype.buffered = function buffered() {
    return this.el_.buffered;
  };

  /**
   * Get volume level
   *
   * @return {Number}
   * @method volume
   */

  Html5.prototype.volume = function volume() {
    return this.el_.volume;
  };

  /**
   * Set volume level
   *
   * @param {Number} percentAsDecimal Volume percent as a decimal
   * @method setVolume
   */

  Html5.prototype.setVolume = function setVolume(percentAsDecimal) {
    this.el_.volume = percentAsDecimal;
  };

  /**
   * Get if muted
   *
   * @return {Boolean}
   * @method muted
   */

  Html5.prototype.muted = function muted() {
    return this.el_.muted;
  };

  /**
   * Set muted
   *
   * @param {Boolean} If player is to be muted or note
   * @method setMuted
   */

  Html5.prototype.setMuted = function setMuted(muted) {
    this.el_.muted = muted;
  };

  /**
   * Get player width
   *
   * @return {Number}
   * @method width
   */

  Html5.prototype.width = function width() {
    return this.el_.offsetWidth;
  };

  /**
   * Get player height
   *
   * @return {Number}
   * @method height
   */

  Html5.prototype.height = function height() {
    return this.el_.offsetHeight;
  };

  /**
   * Get if there is fullscreen support
   *
   * @return {Boolean}
   * @method supportsFullScreen
   */

  Html5.prototype.supportsFullScreen = function supportsFullScreen() {
    if (typeof this.el_.webkitEnterFullScreen === 'function') {
      var userAgent = _globalWindow2['default'].navigator.userAgent;
      // Seems to be broken in Chromium/Chrome && Safari in Leopard
      if (/Android/.test(userAgent) || !/Chrome|Mac OS X 10.5/.test(userAgent)) {
        return true;
      }
    }
    return false;
  };

  /**
   * Request to enter fullscreen
   *
   * @method enterFullScreen
   */

  Html5.prototype.enterFullScreen = function enterFullScreen() {
    var video = this.el_;

    if ('webkitDisplayingFullscreen' in video) {
      this.one('webkitbeginfullscreen', function () {
        this.one('webkitendfullscreen', function () {
          this.trigger('fullscreenchange', { isFullscreen: false });
        });

        this.trigger('fullscreenchange', { isFullscreen: true });
      });
    }

    if (video.paused && video.networkState <= video.HAVE_METADATA) {
      // attempt to prime the video element for programmatic access
      // this isn't necessary on the desktop but shouldn't hurt
      this.el_.play();

      // playing and pausing synchronously during the transition to fullscreen
      // can get iOS ~6.1 devices into a play/pause loop
      this.setTimeout(function () {
        video.pause();
        video.webkitEnterFullScreen();
      }, 0);
    } else {
      video.webkitEnterFullScreen();
    }
  };

  /**
   * Request to exit fullscreen
   *
   * @method exitFullScreen
   */

  Html5.prototype.exitFullScreen = function exitFullScreen() {
    this.el_.webkitExitFullScreen();
  };

  /**
   * Get/set video
   *
   * @param {Object=} src Source object
   * @return {Object}
   * @method src
   */

  Html5.prototype.src = function src(_src) {
    if (_src === undefined) {
      return this.el_.src;
    } else {
      // Setting src through `src` instead of `setSrc` will be deprecated
      this.setSrc(_src);
    }
  };

  /**
   * Set video
   *
   * @param {Object} src Source object
   * @deprecated
   * @method setSrc
   */

  Html5.prototype.setSrc = function setSrc(src) {
    this.el_.src = src;
  };

  /**
   * Load media into player
   *
   * @method load
   */

  Html5.prototype.load = function load() {
    this.el_.load();
  };

  /**
   * Reset the tech. Removes all sources and calls `load`.
   *
   * @method reset
   */

  Html5.prototype.reset = function reset() {
    Html5.resetMediaElement(this.el_);
  };

  /**
   * Get current source
   *
   * @return {Object}
   * @method currentSrc
   */

  Html5.prototype.currentSrc = function currentSrc() {
    if (this.currentSource_) {
      return this.currentSource_.src;
    } else {
      return this.el_.currentSrc;
    }
  };

  /**
   * Get poster
   *
   * @return {String}
   * @method poster
   */

  Html5.prototype.poster = function poster() {
    return this.el_.poster;
  };

  /**
   * Set poster
   *
   * @param {String} val URL to poster image
   * @method
   */

  Html5.prototype.setPoster = function setPoster(val) {
    this.el_.poster = val;
  };

  /**
   * Get preload attribute
   *
   * @return {String}
   * @method preload
   */

  Html5.prototype.preload = function preload() {
    return this.el_.preload;
  };

  /**
   * Set preload attribute
   *
   * @param {String} val Value for preload attribute
   * @method setPreload
   */

  Html5.prototype.setPreload = function setPreload(val) {
    this.el_.preload = val;
  };

  /**
   * Get autoplay attribute
   *
   * @return {String}
   * @method autoplay
   */

  Html5.prototype.autoplay = function autoplay() {
    return this.el_.autoplay;
  };

  /**
   * Set autoplay attribute
   *
   * @param {String} val Value for preload attribute
   * @method setAutoplay
   */

  Html5.prototype.setAutoplay = function setAutoplay(val) {
    this.el_.autoplay = val;
  };

  /**
   * Get controls attribute
   *
   * @return {String}
   * @method controls
   */

  Html5.prototype.controls = function controls() {
    return this.el_.controls;
  };

  /**
   * Set controls attribute
   *
   * @param {String} val Value for controls attribute
   * @method setControls
   */

  Html5.prototype.setControls = function setControls(val) {
    this.el_.controls = !!val;
  };

  /**
   * Get loop attribute
   *
   * @return {String}
   * @method loop
   */

  Html5.prototype.loop = function loop() {
    return this.el_.loop;
  };

  /**
   * Set loop attribute
   *
   * @param {String} val Value for loop attribute
   * @method setLoop
   */

  Html5.prototype.setLoop = function setLoop(val) {
    this.el_.loop = val;
  };

  /**
   * Get error value
   *
   * @return {String}
   * @method error
   */

  Html5.prototype.error = function error() {
    return this.el_.error;
  };

  /**
   * Get whether or not the player is in the "seeking" state
   *
   * @return {Boolean}
   * @method seeking
   */

  Html5.prototype.seeking = function seeking() {
    return this.el_.seeking;
  };

  /**
   * Get a TimeRanges object that represents the
   * ranges of the media resource to which it is possible
   * for the user agent to seek.
   *
   * @return {TimeRangeObject}
   * @method seekable
   */

  Html5.prototype.seekable = function seekable() {
    return this.el_.seekable;
  };

  /**
   * Get if video ended
   *
   * @return {Boolean}
   * @method ended
   */

  Html5.prototype.ended = function ended() {
    return this.el_.ended;
  };

  /**
   * Get the value of the muted content attribute
   * This attribute has no dynamic effect, it only
   * controls the default state of the element
   *
   * @return {Boolean}
   * @method defaultMuted
   */

  Html5.prototype.defaultMuted = function defaultMuted() {
    return this.el_.defaultMuted;
  };

  /**
   * Get desired speed at which the media resource is to play
   *
   * @return {Number}
   * @method playbackRate
   */

  Html5.prototype.playbackRate = function playbackRate() {
    return this.el_.playbackRate;
  };

  /**
   * Returns a TimeRanges object that represents the ranges of the
   * media resource that the user agent has played.
   * @return {TimeRangeObject} the range of points on the media
   * timeline that has been reached through normal playback
   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-played
   */

  Html5.prototype.played = function played() {
    return this.el_.played;
  };

  /**
   * Set desired speed at which the media resource is to play
   *
   * @param {Number} val Speed at which the media resource is to play
   * @method setPlaybackRate
   */

  Html5.prototype.setPlaybackRate = function setPlaybackRate(val) {
    this.el_.playbackRate = val;
  };

  /**
   * Get the current state of network activity for the element, from
   * the list below
   * NETWORK_EMPTY (numeric value 0)
   * NETWORK_IDLE (numeric value 1)
   * NETWORK_LOADING (numeric value 2)
   * NETWORK_NO_SOURCE (numeric value 3)
   *
   * @return {Number}
   * @method networkState
   */

  Html5.prototype.networkState = function networkState() {
    return this.el_.networkState;
  };

  /**
   * Get a value that expresses the current state of the element
   * with respect to rendering the current playback position, from
   * the codes in the list below
   * HAVE_NOTHING (numeric value 0)
   * HAVE_METADATA (numeric value 1)
   * HAVE_CURRENT_DATA (numeric value 2)
   * HAVE_FUTURE_DATA (numeric value 3)
   * HAVE_ENOUGH_DATA (numeric value 4)
   *
   * @return {Number}
   * @method readyState
   */

  Html5.prototype.readyState = function readyState() {
    return this.el_.readyState;
  };

  /**
   * Get width of video
   *
   * @return {Number}
   * @method videoWidth
   */

  Html5.prototype.videoWidth = function videoWidth() {
    return this.el_.videoWidth;
  };

  /**
   * Get height of video
   *
   * @return {Number}
   * @method videoHeight
   */

  Html5.prototype.videoHeight = function videoHeight() {
    return this.el_.videoHeight;
  };

  /**
   * Get text tracks
   *
   * @return {TextTrackList}
   * @method textTracks
   */

  Html5.prototype.textTracks = function textTracks() {
    return _Tech.prototype.textTracks.call(this);
  };

  /**
   * Creates and returns a text track object
   *
   * @param {String} kind Text track kind (subtitles, captions, descriptions
   *                                       chapters and metadata)
   * @param {String=} label Label to identify the text track
   * @param {String=} language Two letter language abbreviation
   * @return {TextTrackObject}
   * @method addTextTrack
   */

  Html5.prototype.addTextTrack = function addTextTrack(kind, label, language) {
    if (!this['featuresNativeTextTracks']) {
      return _Tech.prototype.addTextTrack.call(this, kind, label, language);
    }

    return this.el_.addTextTrack(kind, label, language);
  };

  /**
   * Creates a remote text track object and returns a html track element
   *
   * @param {Object} options The object should contain values for
   * kind, language, label and src (location of the WebVTT file)
   * @return {HTMLTrackElement}
   * @method addRemoteTextTrack
   */

  Html5.prototype.addRemoteTextTrack = function addRemoteTextTrack() {
    var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

    if (!this['featuresNativeTextTracks']) {
      return _Tech.prototype.addRemoteTextTrack.call(this, options);
    }

    var htmlTrackElement = _globalDocument2['default'].createElement('track');

    if (options.kind) {
      htmlTrackElement.kind = options.kind;
    }
    if (options.label) {
      htmlTrackElement.label = options.label;
    }
    if (options.language || options.srclang) {
      htmlTrackElement.srclang = options.language || options.srclang;
    }
    if (options['default']) {
      htmlTrackElement['default'] = options['default'];
    }
    if (options.id) {
      htmlTrackElement.id = options.id;
    }
    if (options.src) {
      htmlTrackElement.src = options.src;
    }

    this.el().appendChild(htmlTrackElement);

    // store HTMLTrackElement and TextTrack to remote list
    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);
    this.remoteTextTracks().addTrack_(htmlTrackElement.track);

    return htmlTrackElement;
  };

  /**
   * Remove remote text track from TextTrackList object
   *
   * @param {TextTrackObject} track Texttrack object to remove
   * @method removeRemoteTextTrack
   */

  Html5.prototype.removeRemoteTextTrack = function removeRemoteTextTrack(track) {
    if (!this['featuresNativeTextTracks']) {
      return _Tech.prototype.removeRemoteTextTrack.call(this, track);
    }

    var tracks = undefined,
        i = undefined;

    var trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track);

    // remove HTMLTrackElement and TextTrack from remote list
    this.remoteTextTrackEls().removeTrackElement_(trackElement);
    this.remoteTextTracks().removeTrack_(track);

    tracks = this.$$('track');

    i = tracks.length;
    while (i--) {
      if (track === tracks[i] || track === tracks[i].track) {
        this.el().removeChild(tracks[i]);
      }
    }
  };

  return Html5;
})(_techJs2['default']);

Html5.TEST_VID = _globalDocument2['default'].createElement('video');
var track = _globalDocument2['default'].createElement('track');
track.kind = 'captions';
track.srclang = 'en';
track.label = 'English';
Html5.TEST_VID.appendChild(track);

/*
 * Check if HTML5 video is supported by this browser/device
 *
 * @return {Boolean}
 */
Html5.isSupported = function () {
  // IE9 with no Media Player is a LIAR! (#984)
  try {
    Html5.TEST_VID['volume'] = 0.5;
  } catch (e) {
    return false;
  }

  return !!Html5.TEST_VID.canPlayType;
};

// Add Source Handler pattern functions to this tech
_techJs2['default'].withSourceHandlers(Html5);

/*
 * The default native source handler.
 * This simply passes the source to the video element. Nothing fancy.
 *
 * @param  {Object} source   The source object
 * @param  {Html5} tech  The instance of the HTML5 tech
 */
Html5.nativeSourceHandler = {};

/*
 * Check if the video element can play the given videotype
 *
 * @param  {String} type    The mimetype to check
 * @return {String}         'probably', 'maybe', or '' (empty string)
 */
Html5.nativeSourceHandler.canPlayType = function (type) {
  // IE9 on Windows 7 without MediaPlayer throws an error here
  // https://github.com/videojs/video.js/issues/519
  try {
    return Html5.TEST_VID.canPlayType(type);
  } catch (e) {
    return '';
  }
};

/*
 * Check if the video element can handle the source natively
 *
 * @param  {Object} source  The source object
 * @return {String}         'probably', 'maybe', or '' (empty string)
 */
Html5.nativeSourceHandler.canHandleSource = function (source) {
  var match, ext;

  // If a type was provided we should rely on that
  if (source.type) {
    return Html5.nativeSourceHandler.canPlayType(source.type);
  } else if (source.src) {
    // If no type, fall back to checking 'video/[EXTENSION]'
    ext = Url.getFileExtension(source.src);

    return Html5.nativeSourceHandler.canPlayType('video/' + ext);
  }

  return '';
};

/*
 * Pass the source to the video element
 * Adaptive source handlers will have more complicated workflows before passing
 * video data to the video element
 *
 * @param  {Object} source    The source object
 * @param  {Html5} tech   The instance of the Html5 tech
 */
Html5.nativeSourceHandler.handleSource = function (source, tech) {
  tech.setSrc(source.src);
};

/*
* Clean up the source handler when disposing the player or switching sources..
* (no cleanup is needed when supporting the format natively)
*/
Html5.nativeSourceHandler.dispose = function () {};

// Register the native source handler
Html5.registerSourceHandler(Html5.nativeSourceHandler);

/*
 * Check if the volume can be changed in this browser/device.
 * Volume cannot be changed in a lot of mobile devices.
 * Specifically, it can't be changed from 1 on iOS.
 *
 * @return {Boolean}
 */
Html5.canControlVolume = function () {
  var volume = Html5.TEST_VID.volume;
  Html5.TEST_VID.volume = volume / 2 + 0.1;
  return volume !== Html5.TEST_VID.volume;
};

/*
 * Check if playbackRate is supported in this browser/device.
 *
 * @return {Number} [description]
 */
Html5.canControlPlaybackRate = function () {
  var playbackRate = Html5.TEST_VID.playbackRate;
  Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;
  return playbackRate !== Html5.TEST_VID.playbackRate;
};

/*
 * Check to see if native text tracks are supported by this browser/device
 *
 * @return {Boolean}
 */
Html5.supportsNativeTextTracks = function () {
  var supportsTextTracks;

  // Figure out native text track support
  // If mode is a number, we cannot change it because it'll disappear from view.
  // Browsers with numeric modes include IE10 and older (<=2013) samsung android models.
  // Firefox isn't playing nice either with modifying the mode
  // TODO: Investigate firefox: https://github.com/videojs/video.js/issues/1862
  supportsTextTracks = !!Html5.TEST_VID.textTracks;
  if (supportsTextTracks && Html5.TEST_VID.textTracks.length > 0) {
    supportsTextTracks = typeof Html5.TEST_VID.textTracks[0]['mode'] !== 'number';
  }
  if (supportsTextTracks && browser.IS_FIREFOX) {
    supportsTextTracks = false;
  }
  if (supportsTextTracks && !('onremovetrack' in Html5.TEST_VID.textTracks)) {
    supportsTextTracks = false;
  }

  return supportsTextTracks;
};

/**
 * An array of events available on the Html5 tech.
 *
 * @private
 * @type {Array}
 */
Html5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'volumechange'];

/*
 * Set the tech's volume control support status
 *
 * @type {Boolean}
 */
Html5.prototype['featuresVolumeControl'] = Html5.canControlVolume();

/*
 * Set the tech's playbackRate support status
 *
 * @type {Boolean}
 */
Html5.prototype['featuresPlaybackRate'] = Html5.canControlPlaybackRate();

/*
 * Set the tech's status on moving the video element.
 * In iOS, if you move a video element in the DOM, it breaks video playback.
 *
 * @type {Boolean}
 */
Html5.prototype['movingMediaElementInDOM'] = !browser.IS_IOS;

/*
 * Set the the tech's fullscreen resize support status.
 * HTML video is able to automatically resize when going to fullscreen.
 * (No longer appears to be used. Can probably be removed.)
 */
Html5.prototype['featuresFullscreenResize'] = true;

/*
 * Set the tech's progress event support status
 * (this disables the manual progress events of the Tech)
 */
Html5.prototype['featuresProgressEvents'] = true;

/*
 * Sets the tech's status on native text track support
 *
 * @type {Boolean}
 */
Html5.prototype['featuresNativeTextTracks'] = Html5.supportsNativeTextTracks();

// HTML5 Feature detection and Device Fixes --------------------------------- //
var canPlayType = undefined;
var mpegurlRE = /^application\/(?:x-|vnd\.apple\.)mpegurl/i;
var mp4RE = /^video\/mp4/i;

Html5.patchCanPlayType = function () {
  // Android 4.0 and above can play HLS to some extent but it reports being unable to do so
  if (browser.ANDROID_VERSION >= 4.0) {
    if (!canPlayType) {
      canPlayType = Html5.TEST_VID.constructor.prototype.canPlayType;
    }

    Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {
      if (type && mpegurlRE.test(type)) {
        return 'maybe';
      }
      return canPlayType.call(this, type);
    };
  }

  // Override Android 2.2 and less canPlayType method which is broken
  if (browser.IS_OLD_ANDROID) {
    if (!canPlayType) {
      canPlayType = Html5.TEST_VID.constructor.prototype.canPlayType;
    }

    Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {
      if (type && mp4RE.test(type)) {
        return 'maybe';
      }
      return canPlayType.call(this, type);
    };
  }
};

Html5.unpatchCanPlayType = function () {
  var r = Html5.TEST_VID.constructor.prototype.canPlayType;
  Html5.TEST_VID.constructor.prototype.canPlayType = canPlayType;
  canPlayType = null;
  return r;
};

// by default, patch the video element
Html5.patchCanPlayType();

Html5.disposeMediaElement = function (el) {
  if (!el) {
    return;
  }

  if (el.parentNode) {
    el.parentNode.removeChild(el);
  }

  // remove any child track or source nodes to prevent their loading
  while (el.hasChildNodes()) {
    el.removeChild(el.firstChild);
  }

  // remove any src reference. not setting `src=''` because that causes a warning
  // in firefox
  el.removeAttribute('src');

  // force the media element to update its loading state by calling load()
  // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)
  if (typeof el.load === 'function') {
    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)
    (function () {
      try {
        el.load();
      } catch (e) {
        // not supported
      }
    })();
  }
};

Html5.resetMediaElement = function (el) {
  if (!el) {
    return;
  }

  var sources = el.querySelectorAll('source');
  var i = sources.length;
  while (i--) {
    el.removeChild(sources[i]);
  }

  // remove any src reference.
  // not setting `src=''` because that throws an error
  el.removeAttribute('src');

  if (typeof el.load === 'function') {
    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)
    (function () {
      try {
        el.load();
      } catch (e) {}
    })();
  }
};

_component2['default'].registerComponent('Html5', Html5);
_techJs2['default'].registerTech('Html5', Html5);
exports['default'] = Html5;
module.exports = exports['default'];

},{"../component":66,"../utils/browser.js":128,"../utils/dom.js":131,"../utils/fn.js":133,"../utils/log.js":136,"../utils/merge-options.js":137,"../utils/url.js":141,"./tech.js":118,"global/document":1,"global/window":2,"object.assign":45}],117:[function(_dereq_,module,exports){
/**
 * @file loader.js
 */
'use strict';

exports.__esModule = true;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _componentJs = _dereq_('../component.js');

var _componentJs2 = _interopRequireDefault(_componentJs);

var _techJs = _dereq_('./tech.js');

var _techJs2 = _interopRequireDefault(_techJs);

var _globalWindow = _dereq_('global/window');

var _globalWindow2 = _interopRequireDefault(_globalWindow);

var _utilsToTitleCaseJs = _dereq_('../utils/to-title-case.js');

var _utilsToTitleCaseJs2 = _interopRequireDefault(_utilsToTitleCaseJs);

/**
 * The Media Loader is the component that decides which playback technology to load
 * when the player is initialized.
 *
 * @param {Object} player  Main Player
 * @param {Object=} options Object of option names and values
 * @param {Function=} ready    Ready callback function
 * @extends Component
 * @class MediaLoader
 */

var MediaLoader = (function (_Component) {
  _inherits(MediaLoader, _Component);

  function MediaLoader(player, options, ready) {
    _classCallCheck(this, MediaLoader);

    _Component.call(this, player, options, ready);

    // If there are no sources when the player is initialized,
    // load the first supported playback technology.

    if (!options.playerOptions['sources'] || options.playerOptions['sources'].length === 0) {
      for (var i = 0, j = options.playerOptions['techOrder']; i < j.length; i++) {
        var techName = _utilsToTitleCaseJs2['default'](j[i]);
        var tech = _techJs2['default'].getTech(techName);
        // Support old behavior of techs being registered as components.
        // Remove once that deprecated behavior is removed.
        if (!techName) {
          tech = _componentJs2['default'].getComponent(techName);
        }

        // Check if the browser supports this technology
        if (tech && tech.isSupported()) {
          player.loadTech_(techName);
          break;
        }
      }
    } else {
      // // Loop through playback technologies (HTML5, Flash) and check for support.
      // // Then load the best source.
      // // A few assumptions here:
      // //   All playback technologies respect preload false.
      player.src(options.playerOptions['sources']);
    }
  }

  return MediaLoader;
})(_componentJs2['default']);

_componentJs2['default'].registerComponent('MediaLoader', MediaLoader);
exports['default'] = MediaLoader;
module.exports = exports['default'];

},{"../component.js":66,"../utils/to-title-case.js":140,"./tech.js":118,"global/window":2}],118:[function(_dereq_,module,exports){
/**
 * @file tech.js
 * Media Technology Controller - Base class for media playback
 * technology controllers like Flash and HTML5
 */

'use strict';

exports.__esModule = true;

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _component = _dereq_('../component');

var _component2 = _interopRequireDefault(_component);

var _tracksHtmlTrackElement = _dereq_('../tracks/html-track-element');

var _tracksHtmlTrackElement2 = _interopRequireDefault(_tracksHtmlTrackElement);

var _tracksHtmlTrackElementList = _dereq_('../tracks/html-track-element-list');

var _tracksHtmlTrackElementList2 = _interopRequireDefault(_tracksHtmlTrackElementList);

var _utilsMergeOptionsJs = _dereq_('../utils/merge-options.js');

var _utilsMergeOptionsJs2 = _interopRequireDefault(_utilsMergeOptionsJs);

var _tracksTextTrack = _dereq_('../tracks/text-track');

var _tracksTextTrack2 = _interopRequireDefault(_tracksTextTrack);

var _tracksTextTrackList = _dereq_('../tracks/text-track-list');

var _tracksTextTrackList2 = _interopRequireDefault(_tracksTextTrackList);

var _utilsFnJs = _dereq_('../utils/fn.js');

var Fn = _interopRequireWildcard(_utilsFnJs);

var _utilsLogJs = _dereq_('../utils/log.js');

var _utilsLogJs2 = _interopRequireDefault(_utilsLogJs);

var _utilsTimeRangesJs = _dereq_('../utils/time-ranges.js');

var _utilsBufferJs = _dereq_('../utils/buffer.js');

var _mediaErrorJs = _dereq_('../media-error.js');

var _mediaErrorJs2 = _interopRequireDefault(_mediaErrorJs);

var _globalWindow = _dereq_('global/window');

var _globalWindow2 = _interopRequireDefault(_globalWindow);

var _globalDocument = _dereq_('global/document');

var _globalDocument2 = _interopRequireDefault(_globalDocument);

/**
 * Base class for media (HTML5 Video, Flash) controllers
 *
 * @param {Object=} options Options object
 * @param {Function=} ready Ready callback function
 * @extends Component
 * @class Tech
 */

var Tech = (function (_Component) {
  _inherits(Tech, _Component);

  function Tech() {
    var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
    var ready = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];

    _classCallCheck(this, Tech);

    // we don't want the tech to report user activity automatically.
    // This is done manually in addControlsListeners
    options.reportTouchActivity = false;
    _Component.call(this, null, options, ready);

    // keep track of whether the current source has played at all to
    // implement a very limited played()
    this.hasStarted_ = false;
    this.on('playing', function () {
      this.hasStarted_ = true;
    });
    this.on('loadstart', function () {
      this.hasStarted_ = false;
    });

    this.textTracks_ = options.textTracks;

    // Manually track progress in cases where the browser/flash player doesn't report it.
    if (!this.featuresProgressEvents) {
      this.manualProgressOn();
    }

    // Manually track timeupdates in cases where the browser/flash player doesn't report it.
    if (!this.featuresTimeupdateEvents) {
      this.manualTimeUpdatesOn();
    }

    if (options.nativeCaptions === false || options.nativeTextTracks === false) {
      this.featuresNativeTextTracks = false;
    }

    if (!this.featuresNativeTextTracks) {
      this.on('ready', this.emulateTextTracks);
    }

    this.initTextTrackListeners();

    // Turn on component tap events
    this.emitTapEvents();
  }

  /*
   * List of associated text tracks
   *
   * @type {Array}
   * @private
   */

  /* Fallbacks for unsupported event types
  ================================================================================ */
  // Manually trigger progress events based on changes to the buffered amount
  // Many flash players and older HTML5 browsers don't send progress or progress-like events
  /**
   * Turn on progress events
   *
   * @method manualProgressOn
   */

  Tech.prototype.manualProgressOn = function manualProgressOn() {
    this.on('durationchange', this.onDurationChange);

    this.manualProgress = true;

    // Trigger progress watching when a source begins loading
    this.one('ready', this.trackProgress);
  };

  /**
   * Turn off progress events
   *
   * @method manualProgressOff
   */

  Tech.prototype.manualProgressOff = function manualProgressOff() {
    this.manualProgress = false;
    this.stopTrackingProgress();

    this.off('durationchange', this.onDurationChange);
  };

  /**
   * Track progress
   *
   * @method trackProgress
   */

  Tech.prototype.trackProgress = function trackProgress() {
    this.stopTrackingProgress();
    this.progressInterval = this.setInterval(Fn.bind(this, function () {
      // Don't trigger unless buffered amount is greater than last time

      var numBufferedPercent = this.bufferedPercent();

      if (this.bufferedPercent_ !== numBufferedPercent) {
        this.trigger('progress');
      }

      this.bufferedPercent_ = numBufferedPercent;

      if (numBufferedPercent === 1) {
        this.stopTrackingProgress();
      }
    }), 500);
  };

  /**
   * Update duration
   *
   * @method onDurationChange
   */

  Tech.prototype.onDurationChange = function onDurationChange() {
    this.duration_ = this.duration();
  };

  /**
   * Create and get TimeRange object for buffering
   *
   * @return {TimeRangeObject}
   * @method buffered
   */

  Tech.prototype.buffered = function buffered() {
    return _utilsTimeRangesJs.createTimeRange(0, 0);
  };

  /**
   * Get buffered percent
   *
   * @return {Number}
   * @method bufferedPercent
   */

  Tech.prototype.bufferedPercent = function bufferedPercent() {
    return _utilsBufferJs.bufferedPercent(this.buffered(), this.duration_);
  };

  /**
   * Stops tracking progress by clearing progress interval
   *
   * @method stopTrackingProgress
   */

  Tech.prototype.stopTrackingProgress = function stopTrackingProgress() {
    this.clearInterval(this.progressInterval);
  };

  /*! Time Tracking -------------------------------------------------------------- */
  /**
   * Set event listeners for on play and pause and tracking current time
   *
   * @method manualTimeUpdatesOn
   */

  Tech.prototype.manualTimeUpdatesOn = function manualTimeUpdatesOn() {
    this.manualTimeUpdates = true;

    this.on('play', this.trackCurrentTime);
    this.on('pause', this.stopTrackingCurrentTime);
  };

  /**
   * Remove event listeners for on play and pause and tracking current time
   *
   * @method manualTimeUpdatesOff
   */

  Tech.prototype.manualTimeUpdatesOff = function manualTimeUpdatesOff() {
    this.manualTimeUpdates = false;
    this.stopTrackingCurrentTime();
    this.off('play', this.trackCurrentTime);
    this.off('pause', this.stopTrackingCurrentTime);
  };

  /**
   * Tracks current time
   *
   * @method trackCurrentTime
   */

  Tech.prototype.trackCurrentTime = function trackCurrentTime() {
    if (this.currentTimeInterval) {
      this.stopTrackingCurrentTime();
    }
    this.currentTimeInterval = this.setInterval(function () {
      this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });
    }, 250); // 42 = 24 fps // 250 is what Webkit uses // FF uses 15
  };

  /**
   * Turn off play progress tracking (when paused or dragging)
   *
   * @method stopTrackingCurrentTime
   */

  Tech.prototype.stopTrackingCurrentTime = function stopTrackingCurrentTime() {
    this.clearInterval(this.currentTimeInterval);

    // #1002 - if the video ends right before the next timeupdate would happen,
    // the progress bar won't make it all the way to the end
    this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });
  };

  /**
   * Turn off any manual progress or timeupdate tracking
   *
   * @method dispose
   */

  Tech.prototype.dispose = function dispose() {
    // clear out text tracks because we can't reuse them between techs
    var textTracks = this.textTracks();

    if (textTracks) {
      var i = textTracks.length;
      while (i--) {
        this.removeRemoteTextTrack(textTracks[i]);
      }
    }

    // Turn off any manual progress or timeupdate tracking
    if (this.manualProgress) {
      this.manualProgressOff();
    }

    if (this.manualTimeUpdates) {
      this.manualTimeUpdatesOff();
    }

    _Component.prototype.dispose.call(this);
  };

  /**
   * Reset the tech. Removes all sources and resets readyState.
   *
   * @method reset
   */

  Tech.prototype.reset = function reset() {};

  /**
   * When invoked without an argument, returns a MediaError object
   * representing the current error state of the player or null if
   * there is no error. When invoked with an argument, set the current
   * error state of the player.
   * @param {MediaError=} err    Optional an error object
   * @return {MediaError}        the current error object or null
   * @method error
   */

  Tech.prototype.error = function error(err) {
    if (err !== undefined) {
      if (err instanceof _mediaErrorJs2['default']) {
        this.error_ = err;
      } else {
        this.error_ = new _mediaErrorJs2['default'](err);
      }
      this.trigger('error');
    }
    return this.error_;
  };

  /**
   * Return the time ranges that have been played through for the
   * current source. This implementation is incomplete. It does not
   * track the played time ranges, only whether the source has played
   * at all or not.
   * @return {TimeRangeObject} a single time range if this video has
   * played or an empty set of ranges if not.
   * @method played
   */

  Tech.prototype.played = function played() {
    if (this.hasStarted_) {
      return _utilsTimeRangesJs.createTimeRange(0, 0);
    }
    return _utilsTimeRangesJs.createTimeRange();
  };

  /**
   * Set current time
   *
   * @method setCurrentTime
   */

  Tech.prototype.setCurrentTime = function setCurrentTime() {
    // improve the accuracy of manual timeupdates
    if (this.manualTimeUpdates) {
      this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });
    }
  };

  /**
   * Initialize texttrack listeners
   *
   * @method initTextTrackListeners
   */

  Tech.prototype.initTextTrackListeners = function initTextTrackListeners() {
    var textTrackListChanges = Fn.bind(this, function () {
      this.trigger('texttrackchange');
    });

    var tracks = this.textTracks();

    if (!tracks) return;

    tracks.addEventListener('removetrack', textTrackListChanges);
    tracks.addEventListener('addtrack', textTrackListChanges);

    this.on('dispose', Fn.bind(this, function () {
      tracks.removeEventListener('removetrack', textTrackListChanges);
      tracks.removeEventListener('addtrack', textTrackListChanges);
    }));
  };

  /**
   * Emulate texttracks
   *
   * @method emulateTextTracks
   */

  Tech.prototype.emulateTextTracks = function emulateTextTracks() {
    var _this = this;

    var tracks = this.textTracks();
    if (!tracks) {
      return;
    }

    if (!_globalWindow2['default']['WebVTT'] && this.el().parentNode != null) {
      var script = _globalDocument2['default'].createElement('script');
      script.src = this.options_['vtt.js'] || 'https://cdn.rawgit.com/gkatsev/vtt.js/vjs-v0.12.1/dist/vtt.min.js';
      this.el().parentNode.appendChild(script);
      _globalWindow2['default']['WebVTT'] = true;
    }

    var updateDisplay = function updateDisplay() {
      return _this.trigger('texttrackchange');
    };
    var textTracksChanges = function textTracksChanges() {
      updateDisplay();

      for (var i = 0; i < tracks.length; i++) {
        var track = tracks[i];
        track.removeEventListener('cuechange', updateDisplay);
        if (track.mode === 'showing') {
          track.addEventListener('cuechange', updateDisplay);
        }
      }
    };

    textTracksChanges();
    tracks.addEventListener('change', textTracksChanges);

    this.on('dispose', function () {
      tracks.removeEventListener('change', textTracksChanges);
    });
  };

  /*
   * Provide default methods for text tracks.
   *
   * Html5 tech overrides these.
   */

  /**
   * Get texttracks
   *
   * @returns {TextTrackList}
   * @method textTracks
   */

  Tech.prototype.textTracks = function textTracks() {
    this.textTracks_ = this.textTracks_ || new _tracksTextTrackList2['default']();
    return this.textTracks_;
  };

  /**
   * Get remote texttracks
   *
   * @returns {TextTrackList}
   * @method remoteTextTracks
   */

  Tech.prototype.remoteTextTracks = function remoteTextTracks() {
    this.remoteTextTracks_ = this.remoteTextTracks_ || new _tracksTextTrackList2['default']();
    return this.remoteTextTracks_;
  };

  /**
   * Get remote htmltrackelements
   *
   * @returns {HTMLTrackElementList}
   * @method remoteTextTrackEls
   */

  Tech.prototype.remoteTextTrackEls = function remoteTextTrackEls() {
    this.remoteTextTrackEls_ = this.remoteTextTrackEls_ || new _tracksHtmlTrackElementList2['default']();
    return this.remoteTextTrackEls_;
  };

  /**
   * Creates and returns a remote text track object
   *
   * @param {String} kind Text track kind (subtitles, captions, descriptions
   *                                       chapters and metadata)
   * @param {String=} label Label to identify the text track
   * @param {String=} language Two letter language abbreviation
   * @return {TextTrackObject}
   * @method addTextTrack
   */

  Tech.prototype.addTextTrack = function addTextTrack(kind, label, language) {
    if (!kind) {
      throw new Error('TextTrack kind is required but was not provided');
    }

    return createTrackHelper(this, kind, label, language);
  };

  /**
   * Creates a remote text track object and returns a emulated html track element
   *
   * @param {Object} options The object should contain values for
   * kind, language, label and src (location of the WebVTT file)
   * @return {HTMLTrackElement}
   * @method addRemoteTextTrack
   */

  Tech.prototype.addRemoteTextTrack = function addRemoteTextTrack(options) {
    var track = _utilsMergeOptionsJs2['default'](options, {
      tech: this
    });

    var htmlTrackElement = new _tracksHtmlTrackElement2['default'](track);

    // store HTMLTrackElement and TextTrack to remote list
    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);
    this.remoteTextTracks().addTrack_(htmlTrackElement.track);

    // must come after remoteTextTracks()
    this.textTracks().addTrack_(htmlTrackElement.track);

    return htmlTrackElement;
  };

  /**
   * Remove remote texttrack
   *
   * @param {TextTrackObject} track Texttrack to remove
   * @method removeRemoteTextTrack
   */

  Tech.prototype.removeRemoteTextTrack = function removeRemoteTextTrack(track) {
    this.textTracks().removeTrack_(track);

    var trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track);

    // remove HTMLTrackElement and TextTrack from remote list
    this.remoteTextTrackEls().removeTrackElement_(trackElement);
    this.remoteTextTracks().removeTrack_(track);
  };

  /**
   * Provide a default setPoster method for techs
   * Poster support for techs should be optional, so we don't want techs to
   * break if they don't have a way to set a poster.
   *
   * @method setPoster
   */

  Tech.prototype.setPoster = function setPoster() {};

  /*
   * Check if the tech can support the given type
   *
   * The base tech does not support any type, but source handlers might
   * overwrite this.
   *
   * @param  {String} type    The mimetype to check
   * @return {String}         'probably', 'maybe', or '' (empty string)
   */

  Tech.prototype.canPlayType = function canPlayType() {
    return '';
  };

  /*
   * Return whether the argument is a Tech or not.
   * Can be passed either a Class like `Html5` or a instance like `player.tech_`
   *
   * @param {Object} component An item to check
   * @return {Boolean}         Whether it is a tech or not
   */

  Tech.isTech = function isTech(component) {
    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;
  };

  /**
   * Registers a Tech
   *
   * @param {String} name Name of the Tech to register
   * @param {Object} tech The tech to register
   * @static
   * @method registerComponent
   */

  Tech.registerTech = function registerTech(name, tech) {
    if (!Tech.techs_) {
      Tech.techs_ = {};
    }

    if (!Tech.isTech(tech)) {
      throw new Error('Tech ' + name + ' must be a Tech');
    }

    Tech.techs_[name] = tech;
    return tech;
  };

  /**
   * Gets a component by name
   *
   * @param {String} name Name of the component to get
   * @return {Component}
   * @static
   * @method getComponent
   */

  Tech.getTech = function getTech(name) {
    if (Tech.techs_ && Tech.techs_[name]) {
      return Tech.techs_[name];
    }

    if (_globalWindow2['default'] && _globalWindow2['default'].videojs && _globalWindow2['default'].videojs[name]) {
      _utilsLogJs2['default'].warn('The ' + name + ' tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)');
      return _globalWindow2['default'].videojs[name];
    }
  };

  return Tech;
})(_component2['default']);

Tech.prototype.textTracks_;

var createTrackHelper = function createTrackHelper(self, kind, label, language) {
  var options = arguments.length <= 4 || arguments[4] === undefined ? {} : arguments[4];

  var tracks = self.textTracks();

  options.kind = kind;

  if (label) {
    options.label = label;
  }
  if (language) {
    options.language = language;
  }
  options.tech = self;

  var track = new _tracksTextTrack2['default'](options);
  tracks.addTrack_(track);

  return track;
};

Tech.prototype.featuresVolumeControl = true;

// Resizing plugins using request fullscreen reloads the plugin
Tech.prototype.featuresFullscreenResize = false;
Tech.prototype.featuresPlaybackRate = false;

// Optional events that we can manually mimic with timers
// currently not triggered by video-js-swf
Tech.prototype.featuresProgressEvents = false;
Tech.prototype.featuresTimeupdateEvents = false;

Tech.prototype.featuresNativeTextTracks = false;

/*
 * A functional mixin for techs that want to use the Source Handler pattern.
 *
 * ##### EXAMPLE:
 *
 *   Tech.withSourceHandlers.call(MyTech);
 *
 */
Tech.withSourceHandlers = function (_Tech) {
  /*
   * Register a source handler
   * Source handlers are scripts for handling specific formats.
   * The source handler pattern is used for adaptive formats (HLS, DASH) that
   * manually load video data and feed it into a Source Buffer (Media Source Extensions)
   * @param  {Function} handler  The source handler
   * @param  {Boolean}  first    Register it before any existing handlers
   */
  _Tech.registerSourceHandler = function (handler, index) {
    var handlers = _Tech.sourceHandlers;

    if (!handlers) {
      handlers = _Tech.sourceHandlers = [];
    }

    if (index === undefined) {
      // add to the end of the list
      index = handlers.length;
    }

    handlers.splice(index, 0, handler);
  };

  /*
   * Check if the tech can support the given type
   * @param  {String} type    The mimetype to check
   * @return {String}         'probably', 'maybe', or '' (empty string)
   */
  _Tech.canPlayType = function (type) {
    var handlers = _Tech.sourceHandlers || [];
    var can = undefined;

    for (var i = 0; i < handlers.length; i++) {
      can = handlers[i].canPlayType(type);

      if (can) {
        return can;
      }
    }

    return '';
  };

  /*
   * Return the first source handler that supports the source
   * TODO: Answer question: should 'probably' be prioritized over 'maybe'
   * @param  {Object} source The source object
   * @returns {Object}       The first source handler that supports the source
   * @returns {null}         Null if no source handler is found
   */
  _Tech.selectSourceHandler = function (source) {
    var handlers = _Tech.sourceHandlers || [];
    var can = undefined;

    for (var i = 0; i < handlers.length; i++) {
      can = handlers[i].canHandleSource(source);

      if (can) {
        return handlers[i];
      }
    }

    return null;
  };

  /*
   * Check if the tech can support the given source
   * @param  {Object} srcObj  The source object
   * @return {String}         'probably', 'maybe', or '' (empty string)
   */
  _Tech.canPlaySource = function (srcObj) {
    var sh = _Tech.selectSourceHandler(srcObj);

    if (sh) {
      return sh.canHandleSource(srcObj);
    }

    return '';
  };

  /*
   * When using a source handler, prefer its implementation of
   * any function normally provided by the tech.
   */
  var deferrable = ['seekable', 'duration'];

  deferrable.forEach(function (fnName) {
    var originalFn = this[fnName];

    if (typeof originalFn !== 'function') {
      return;
    }

    this[fnName] = function () {
      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {
        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);
      }
      return originalFn.apply(this, arguments);
    };
  }, _Tech.prototype);

  /*
   * Create a function for setting the source using a source object
   * and source handlers.
   * Should never be called unless a source handler was found.
   * @param {Object} source  A source object with src and type keys
   * @return {Tech} self
   */
  _Tech.prototype.setSource = function (source) {
    var sh = _Tech.selectSourceHandler(source);

    if (!sh) {
      // Fall back to a native source hander when unsupported sources are
      // deliberately set
      if (_Tech.nativeSourceHandler) {
        sh = _Tech.nativeSourceHandler;
      } else {
        _utilsLogJs2['default'].error('No source hander found for the current source.');
      }
    }

    // Dispose any existing source handler
    this.disposeSourceHandler();
    this.off('dispose', this.disposeSourceHandler);

    this.currentSource_ = source;
    this.sourceHandler_ = sh.handleSource(source, this);
    this.on('dispose', this.disposeSourceHandler);

    return this;
  };

  /*
   * Clean up any existing source handler
   */
  _Tech.prototype.disposeSourceHandler = function () {
    if (this.sourceHandler_ && this.sourceHandler_.dispose) {
      this.sourceHandler_.dispose();
    }
  };
};

_component2['default'].registerComponent('Tech', Tech);
// Old name for Tech
_component2['default'].registerComponent('MediaTechController', Tech);
Tech.registerTech('Tech', Tech);
exports['default'] = Tech;
module.exports = exports['default'];

},{"../component":66,"../media-error.js":102,"../tracks/html-track-element":120,"../tracks/html-track-element-list":119,"../tracks/text-track":127,"../tracks/text-track-list":125,"../utils/buffer.js":129,"../utils/fn.js":133,"../utils/log.js":136,"../utils/merge-options.js":137,"../utils/time-ranges.js":139,"global/document":1,"global/window":2}],119:[function(_dereq_,module,exports){
/**
 * @file html-track-element-list.js
 */

'use strict';

exports.__esModule = true;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

var _utilsBrowserJs = _dereq_('../utils/browser.js');

var browser = _interopRequireWildcard(_utilsBrowserJs);

var _globalDocument = _dereq_('global/document');

var _globalDocument2 = _interopRequireDefault(_globalDocument);

var HtmlTrackElementList = (function () {
  function HtmlTrackElementList() {
    var trackElements = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];

    _classCallCheck(this, HtmlTrackElementList);

    var list = this;

    if (browser.IS_IE8) {
      list = _globalDocument2['default'].createElement('custom');

      for (var prop in HtmlTrackElementList.prototype) {
        if (prop !== 'constructor') {
          list[prop] = HtmlTrackElementList.prototype[prop];
        }
      }
    }

    list.trackElements_ = [];

    Object.defineProperty(list, 'length', {
      get: function get() {
        return this.trackElements_.length;
      }
    });

    for (var i = 0, _length = trackElements.length; i < _length; i++) {
      list.addTrackElement_(trackElements[i]);
    }

    if (browser.IS_IE8) {
      return list;
    }
  }

  HtmlTrackElementList.prototype.addTrackElement_ = function addTrackElement_(trackElement) {
    this.trackElements_.push(trackElement);
  };

  HtmlTrackElementList.prototype.getTrackElementByTrack_ = function getTrackElementByTrack_(track) {
    var trackElement_ = undefined;

    for (var i = 0, _length2 = this.trackElements_.length; i < _length2; i++) {
      if (track === this.trackElements_[i].track) {
        trackElement_ = this.trackElements_[i];

        break;
      }
    }

    return trackElement_;
  };

  HtmlTrackElementList.prototype.removeTrackElement_ = function removeTrackElement_(trackElement) {
    for (var i = 0, _length3 = this.trackElements_.length; i < _length3; i++) {
      if (trackElement === this.trackElements_[i]) {
        this.trackElements_.splice(i, 1);

        break;
      }
    }
  };

  return HtmlTrackElementList;
})();

exports['default'] = HtmlTrackElementList;
module.exports = exports['default'];

},{"../utils/browser.js":128,"global/document":1}],120:[function(_dereq_,module,exports){
/**
 * @file html-track-element.js
 */

'use strict';

exports.__esModule = true;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _utilsBrowserJs = _dereq_('../utils/browser.js');

var browser = _interopRequireWildcard(_utilsBrowserJs);

var _globalDocument = _dereq_('global/document');

var _globalDocument2 = _interopRequireDefault(_globalDocument);

var _eventTarget = _dereq_('../event-target');

var _eventTarget2 = _interopRequireDefault(_eventTarget);

var _tracksTextTrack = _dereq_('../tracks/text-track');

var _tracksTextTrack2 = _interopRequireDefault(_tracksTextTrack);

var NONE = 0;
var LOADING = 1;
var LOADED = 2;
var ERROR = 3;

/**
 * https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement
 *
 * interface HTMLTrackElement : HTMLElement {
 *   attribute DOMString kind;
 *   attribute DOMString src;
 *   attribute DOMString srclang;
 *   attribute DOMString label;
 *   attribute boolean default;
 *
 *   const unsigned short NONE = 0;
 *   const unsigned short LOADING = 1;
 *   const unsigned short LOADED = 2;
 *   const unsigned short ERROR = 3;
 *   readonly attribute unsigned short readyState;
 *
 *   readonly attribute TextTrack track;
 * };
 *
 * @param {Object} options TextTrack configuration
 * @class HTMLTrackElement
 */

var HTMLTrackElement = (function (_EventTarget) {
  _inherits(HTMLTrackElement, _EventTarget);

  function HTMLTrackElement() {
    var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

    _classCallCheck(this, HTMLTrackElement);

    _EventTarget.call(this);

    var readyState = undefined,
        trackElement = this;

    if (browser.IS_IE8) {
      trackElement = _globalDocument2['default'].createElement('custom');

      for (var prop in HTMLTrackElement.prototype) {
        if (prop !== 'constructor') {
          trackElement[prop] = HTMLTrackElement.prototype[prop];
        }
      }
    }

    var track = new _tracksTextTrack2['default'](options);

    trackElement.kind = track.kind;
    trackElement.src = track.src;
    trackElement.srclang = track.language;
    trackElement.label = track.label;
    trackElement['default'] = track['default'];

    Object.defineProperty(trackElement, 'readyState', {
      get: function get() {
        return readyState;
      }
    });

    Object.defineProperty(trackElement, 'track', {
      get: function get() {
        return track;
      }
    });

    readyState = NONE;

    track.addEventListener('loadeddata', function () {
      readyState = LOADED;

      trackElement.trigger({
        type: 'load',
        target: trackElement
      });
    });

    if (browser.IS_IE8) {
      return trackElement;
    }
  }

  return HTMLTrackElement;
})(_eventTarget2['default']);

HTMLTrackElement.prototype.allowedEvents_ = {
  load: 'load'
};

HTMLTrackElement.NONE = NONE;
HTMLTrackElement.LOADING = LOADING;
HTMLTrackElement.LOADED = LOADED;
HTMLTrackElement.ERROR = ERROR;

exports['default'] = HTMLTrackElement;
module.exports = exports['default'];

},{"../event-target":98,"../tracks/text-track":127,"../utils/browser.js":128,"global/document":1}],121:[function(_dereq_,module,exports){
/**
 * @file text-track-cue-list.js
 */
'use strict';

exports.__esModule = true;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

var _utilsBrowserJs = _dereq_('../utils/browser.js');

var browser = _interopRequireWildcard(_utilsBrowserJs);

var _globalDocument = _dereq_('global/document');

var _globalDocument2 = _interopRequireDefault(_globalDocument);

/*
 * https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist
 *
 * interface TextTrackCueList {
 *   readonly attribute unsigned long length;
 *   getter TextTrackCue (unsigned long index);
 *   TextTrackCue? getCueById(DOMString id);
 * };
 */

var TextTrackCueList = function TextTrackCueList(cues) {
  var list = this;

  if (browser.IS_IE8) {
    list = _globalDocument2['default'].createElement('custom');

    for (var prop in TextTrackCueList.prototype) {
      if (prop !== 'constructor') {
        list[prop] = TextTrackCueList.prototype[prop];
      }
    }
  }

  TextTrackCueList.prototype.setCues_.call(list, cues);

  Object.defineProperty(list, 'length', {
    get: function get() {
      return this.length_;
    }
  });

  if (browser.IS_IE8) {
    return list;
  }
};

TextTrackCueList.prototype.setCues_ = function (cues) {
  var oldLength = this.length || 0;
  var i = 0;
  var l = cues.length;

  this.cues_ = cues;
  this.length_ = cues.length;

  var defineProp = function defineProp(i) {
    if (!('' + i in this)) {
      Object.defineProperty(this, '' + i, {
        get: function get() {
          return this.cues_[i];
        }
      });
    }
  };

  if (oldLength < l) {
    i = oldLength;

    for (; i < l; i++) {
      defineProp.call(this, i);
    }
  }
};

TextTrackCueList.prototype.getCueById = function (id) {
  var result = null;
  for (var i = 0, l = this.length; i < l; i++) {
    var cue = this[i];
    if (cue.id === id) {
      result = cue;
      break;
    }
  }

  return result;
};

exports['default'] = TextTrackCueList;
module.exports = exports['default'];

},{"../utils/browser.js":128,"global/document":1}],122:[function(_dereq_,module,exports){
/**
 * @file text-track-display.js
 */
'use strict';

exports.__esModule = true;

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _component = _dereq_('../component');

var _component2 = _interopRequireDefault(_component);

var _menuMenuJs = _dereq_('../menu/menu.js');

var _menuMenuJs2 = _interopRequireDefault(_menuMenuJs);

var _menuMenuItemJs = _dereq_('../menu/menu-item.js');

var _menuMenuItemJs2 = _interopRequireDefault(_menuMenuItemJs);

var _menuMenuButtonJs = _dereq_('../menu/menu-button.js');

var _menuMenuButtonJs2 = _interopRequireDefault(_menuMenuButtonJs);

var _utilsFnJs = _dereq_('../utils/fn.js');

var Fn = _interopRequireWildcard(_utilsFnJs);

var _globalDocument = _dereq_('global/document');

var _globalDocument2 = _interopRequireDefault(_globalDocument);

var _globalWindow = _dereq_('global/window');

var _globalWindow2 = _interopRequireDefault(_globalWindow);

var darkGray = '#222';
var lightGray = '#ccc';
var fontMap = {
  monospace: 'monospace',
  sansSerif: 'sans-serif',
  serif: 'serif',
  monospaceSansSerif: '"Andale Mono", "Lucida Console", monospace',
  monospaceSerif: '"Courier New", monospace',
  proportionalSansSerif: 'sans-serif',
  proportionalSerif: 'serif',
  casual: '"Comic Sans MS", Impact, fantasy',
  script: '"Monotype Corsiva", cursive',
  smallcaps: '"Andale Mono", "Lucida Console", monospace, sans-serif'
};

/**
 * The component for displaying text track cues
 *
 * @param {Object} player  Main Player
 * @param {Object=} options Object of option names and values
 * @param {Function=} ready    Ready callback function
 * @extends Component
 * @class TextTrackDisplay
 */

var TextTrackDisplay = (function (_Component) {
  _inherits(TextTrackDisplay, _Component);

  function TextTrackDisplay(player, options, ready) {
    _classCallCheck(this, TextTrackDisplay);

    _Component.call(this, player, options, ready);

    player.on('loadstart', Fn.bind(this, this.toggleDisplay));
    player.on('texttrackchange', Fn.bind(this, this.updateDisplay));

    // This used to be called during player init, but was causing an error
    // if a track should show by default and the display hadn't loaded yet.
    // Should probably be moved to an external track loader when we support
    // tracks that don't need a display.
    player.ready(Fn.bind(this, function () {
      if (player.tech_ && player.tech_['featuresNativeTextTracks']) {
        this.hide();
        return;
      }

      player.on('fullscreenchange', Fn.bind(this, this.updateDisplay));

      var tracks = this.options_.playerOptions['tracks'] || [];
      for (var i = 0; i < tracks.length; i++) {
        var track = tracks[i];
        this.player_.addRemoteTextTrack(track);
      }
    }));
  }

  /**
  * Add cue HTML to display
  *
  * @param {Number} color Hex number for color, like #f0e
  * @param {Number} opacity Value for opacity,0.0 - 1.0
  * @return {RGBAColor} In the form 'rgba(255, 0, 0, 0.3)'
  * @method constructColor
  */

  /**
   * Toggle display texttracks
   *
   * @method toggleDisplay
   */

  TextTrackDisplay.prototype.toggleDisplay = function toggleDisplay() {
    if (this.player_.tech_ && this.player_.tech_['featuresNativeTextTracks']) {
      this.hide();
    } else {
      this.show();
    }
  };

  /**
   * Create the component's DOM element
   *
   * @return {Element}
   * @method createEl
   */

  TextTrackDisplay.prototype.createEl = function createEl() {
    return _Component.prototype.createEl.call(this, 'div', {
      className: 'vjs-text-track-display'
    });
  };

  /**
   * Clear display texttracks
   *
   * @method clearDisplay
   */

  TextTrackDisplay.prototype.clearDisplay = function clearDisplay() {
    if (typeof _globalWindow2['default']['WebVTT'] === 'function') {
      _globalWindow2['default']['WebVTT']['processCues'](_globalWindow2['default'], [], this.el_);
    }
  };

  /**
   * Update display texttracks
   *
   * @method updateDisplay
   */

  TextTrackDisplay.prototype.updateDisplay = function updateDisplay() {
    var tracks = this.player_.textTracks();

    this.clearDisplay();

    if (!tracks) {
      return;
    }

    for (var i = 0; i < tracks.length; i++) {
      var track = tracks[i];
      if (track['mode'] === 'showing') {
        this.updateForTrack(track);
      }
    }
  };

  /**
   * Add texttrack to texttrack list
   *
   * @param {TextTrackObject} track Texttrack object to be added to list
   * @method updateForTrack
   */

  TextTrackDisplay.prototype.updateForTrack = function updateForTrack(track) {
    if (typeof _globalWindow2['default']['WebVTT'] !== 'function' || !track['activeCues']) {
      return;
    }

    var overrides = this.player_['textTrackSettings'].getValues();

    var cues = [];
    for (var _i = 0; _i < track['activeCues'].length; _i++) {
      cues.push(track['activeCues'][_i]);
    }

    _globalWindow2['default']['WebVTT']['processCues'](_globalWindow2['default'], track['activeCues'], this.el_);

    var i = cues.length;
    while (i--) {
      var cue = cues[i];
      if (!cue) {
        continue;
      }

      var cueDiv = cue.displayState;
      if (overrides.color) {
        cueDiv.firstChild.style.color = overrides.color;
      }
      if (overrides.textOpacity) {
        tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));
      }
      if (overrides.backgroundColor) {
        cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;
      }
      if (overrides.backgroundOpacity) {
        tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));
      }
      if (overrides.windowColor) {
        if (overrides.windowOpacity) {
          tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));
        } else {
          cueDiv.style.backgroundColor = overrides.windowColor;
        }
      }
      if (overrides.edgeStyle) {
        if (overrides.edgeStyle === 'dropshadow') {
          cueDiv.firstChild.style.textShadow = '2px 2px 3px ' + darkGray + ', 2px 2px 4px ' + darkGray + ', 2px 2px 5px ' + darkGray;
        } else if (overrides.edgeStyle === 'raised') {
          cueDiv.firstChild.style.textShadow = '1px 1px ' + darkGray + ', 2px 2px ' + darkGray + ', 3px 3px ' + darkGray;
        } else if (overrides.edgeStyle === 'depressed') {
          cueDiv.firstChild.style.textShadow = '1px 1px ' + lightGray + ', 0 1px ' + lightGray + ', -1px -1px ' + darkGray + ', 0 -1px ' + darkGray;
        } else if (overrides.edgeStyle === 'uniform') {
          cueDiv.firstChild.style.textShadow = '0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray;
        }
      }
      if (overrides.fontPercent && overrides.fontPercent !== 1) {
        var fontSize = _globalWindow2['default'].parseFloat(cueDiv.style.fontSize);
        cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';
        cueDiv.style.height = 'auto';
        cueDiv.style.top = 'auto';
        cueDiv.style.bottom = '2px';
      }
      if (overrides.fontFamily && overrides.fontFamily !== 'default') {
        if (overrides.fontFamily === 'small-caps') {
          cueDiv.firstChild.style.fontVariant = 'small-caps';
        } else {
          cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];
        }
      }
    }
  };

  return TextTrackDisplay;
})(_component2['default']);

function constructColor(color, opacity) {
  return 'rgba(' +
  // color looks like "#f0e"
  parseInt(color[1] + color[1], 16) + ',' + parseInt(color[2] + color[2], 16) + ',' + parseInt(color[3] + color[3], 16) + ',' + opacity + ')';
}

/**
 * Try to update style
 * Some style changes will throw an error, particularly in IE8. Those should be noops.
 *
 * @param {Element} el The element to be styles
 * @param {CSSProperty} style The CSS property to be styled
 * @param {CSSStyle} rule The actual style to be applied to the property
 * @method tryUpdateStyle
 */
function tryUpdateStyle(el, style, rule) {
  //
  try {
    el.style[style] = rule;
  } catch (e) {}
}

_component2['default'].registerComponent('TextTrackDisplay', TextTrackDisplay);
exports['default'] = TextTrackDisplay;
module.exports = exports['default'];

},{"../component":66,"../menu/menu-button.js":103,"../menu/menu-item.js":104,"../menu/menu.js":105,"../utils/fn.js":133,"global/document":1,"global/window":2}],123:[function(_dereq_,module,exports){
/**
 * @file text-track-enums.js
 *
 * https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode
 *
 * enum TextTrackMode { "disabled",  "hidden",  "showing" };
 */
'use strict';

exports.__esModule = true;
var TextTrackMode = {
  'disabled': 'disabled',
  'hidden': 'hidden',
  'showing': 'showing'
};

/*
 * https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackkind
 *
 * enum TextTrackKind { "subtitles",  "captions",  "descriptions",  "chapters",  "metadata" };
 */
var TextTrackKind = {
  'subtitles': 'subtitles',
  'captions': 'captions',
  'descriptions': 'descriptions',
  'chapters': 'chapters',
  'metadata': 'metadata'
};

exports.TextTrackMode = TextTrackMode;
exports.TextTrackKind = TextTrackKind;

},{}],124:[function(_dereq_,module,exports){
/**
 * Utilities for capturing text track state and re-creating tracks
 * based on a capture.
 *
 * @file text-track-list-converter.js
 */

/**
 * Examine a single text track and return a JSON-compatible javascript
 * object that represents the text track's state.
 * @param track {TextTrackObject} the text track to query
 * @return {Object} a serializable javascript representation of the
 * @private
 */
'use strict';

exports.__esModule = true;
var trackToJson_ = function trackToJson_(track) {
  var ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce(function (acc, prop, i) {
    if (track[prop]) {
      acc[prop] = track[prop];
    }

    return acc;
  }, {
    cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {
      return {
        startTime: cue.startTime,
        endTime: cue.endTime,
        text: cue.text,
        id: cue.id
      };
    })
  });

  return ret;
};

/**
 * Examine a tech and return a JSON-compatible javascript array that
 * represents the state of all text tracks currently configured. The
 * return array is compatible with `jsonToTextTracks`.
 * @param tech {tech} the tech object to query
 * @return {Array} a serializable javascript representation of the
 * @function textTracksToJson
 */
var textTracksToJson = function textTracksToJson(tech) {

  var trackEls = tech.$$('track');

  var trackObjs = Array.prototype.map.call(trackEls, function (t) {
    return t.track;
  });
  var tracks = Array.prototype.map.call(trackEls, function (trackEl) {
    var json = trackToJson_(trackEl.track);
    if (trackEl.src) {
      json.src = trackEl.src;
    }
    return json;
  });

  return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {
    return trackObjs.indexOf(track) === -1;
  }).map(trackToJson_));
};

/**
 * Creates a set of remote text tracks on a tech based on an array of
 * javascript text track representations.
 * @param json {Array} an array of text track representation objects,
 * like those that would be produced by `textTracksToJson`
 * @param tech {tech} the tech to create text tracks on
 * @function jsonToTextTracks
 */
var jsonToTextTracks = function jsonToTextTracks(json, tech) {
  json.forEach(function (track) {
    var addedTrack = tech.addRemoteTextTrack(track).track;
    if (!track.src && track.cues) {
      track.cues.forEach(function (cue) {
        return addedTrack.addCue(cue);
      });
    }
  });

  return tech.textTracks();
};

exports['default'] = { textTracksToJson: textTracksToJson, jsonToTextTracks: jsonToTextTracks, trackToJson_: trackToJson_ };
module.exports = exports['default'];

},{}],125:[function(_dereq_,module,exports){
/**
 * @file text-track-list.js
 */
'use strict';

exports.__esModule = true;

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _eventTarget = _dereq_('../event-target');

var _eventTarget2 = _interopRequireDefault(_eventTarget);

var _utilsFnJs = _dereq_('../utils/fn.js');

var Fn = _interopRequireWildcard(_utilsFnJs);

var _utilsBrowserJs = _dereq_('../utils/browser.js');

var browser = _interopRequireWildcard(_utilsBrowserJs);

var _globalDocument = _dereq_('global/document');

var _globalDocument2 = _interopRequireDefault(_globalDocument);

/*
 * https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist
 *
 * interface TextTrackList : EventTarget {
 *   readonly attribute unsigned long length;
 *   getter TextTrack (unsigned long index);
 *   TextTrack? getTrackById(DOMString id);
 *
 *   attribute EventHandler onchange;
 *   attribute EventHandler onaddtrack;
 *   attribute EventHandler onremovetrack;
 * };
 */
var TextTrackList = function TextTrackList(tracks) {
  var list = this;

  if (browser.IS_IE8) {
    list = _globalDocument2['default'].createElement('custom');

    for (var prop in TextTrackList.prototype) {
      if (prop !== 'constructor') {
        list[prop] = TextTrackList.prototype[prop];
      }
    }
  }

  tracks = tracks || [];
  list.tracks_ = [];

  Object.defineProperty(list, 'length', {
    get: function get() {
      return this.tracks_.length;
    }
  });

  for (var i = 0; i < tracks.length; i++) {
    list.addTrack_(tracks[i]);
  }

  if (browser.IS_IE8) {
    return list;
  }
};

TextTrackList.prototype = Object.create(_eventTarget2['default'].prototype);
TextTrackList.prototype.constructor = TextTrackList;

/*
 * change - One or more tracks in the track list have been enabled or disabled.
 * addtrack - A track has been added to the track list.
 * removetrack - A track has been removed from the track list.
 */
TextTrackList.prototype.allowedEvents_ = {
  'change': 'change',
  'addtrack': 'addtrack',
  'removetrack': 'removetrack'
};

// emulate attribute EventHandler support to allow for feature detection
for (var _event in TextTrackList.prototype.allowedEvents_) {
  TextTrackList.prototype['on' + _event] = null;
}

/**
 * Add TextTrack from TextTrackList
 *
 * @param {TextTrack} track
 * @method addTrack_
 * @private
 */
TextTrackList.prototype.addTrack_ = function (track) {
  var index = this.tracks_.length;
  if (!('' + index in this)) {
    Object.defineProperty(this, index, {
      get: function get() {
        return this.tracks_[index];
      }
    });
  }

  track.addEventListener('modechange', Fn.bind(this, function () {
    this.trigger('change');
  }));
  this.tracks_.push(track);

  this.trigger({
    type: 'addtrack',
    track: track
  });
};

/**
 * Remove TextTrack from TextTrackList
 * NOTE: Be mindful of what is passed in as it may be a HTMLTrackElement
 *
 * @param {TextTrack} rtrack
 * @method removeTrack_
 * @private
 */
TextTrackList.prototype.removeTrack_ = function (rtrack) {
  var track = undefined;

  for (var i = 0, l = this.length; i < l; i++) {
    if (this[i] === rtrack) {
      track = this[i];

      this.tracks_.splice(i, 1);

      break;
    }
  }

  if (!track) {
    return;
  }

  this.trigger({
    type: 'removetrack',
    track: track
  });
};

TextTrackList.prototype.getTrackById = function (id) {
  var result = null;

  for (var i = 0, l = this.length; i < l; i++) {
    var track = this[i];
    if (track.id === id) {
      result = track;
      break;
    }
  }

  return result;
};

exports['default'] = TextTrackList;
module.exports = exports['default'];

},{"../event-target":98,"../utils/browser.js":128,"../utils/fn.js":133,"global/document":1}],126:[function(_dereq_,module,exports){
/**
 * @file text-track-settings.js
 */
'use strict';

exports.__esModule = true;

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _component = _dereq_('../component');

var _component2 = _interopRequireDefault(_component);

var _utilsEventsJs = _dereq_('../utils/events.js');

var Events = _interopRequireWildcard(_utilsEventsJs);

var _utilsFnJs = _dereq_('../utils/fn.js');

var Fn = _interopRequireWildcard(_utilsFnJs);

var _utilsLogJs = _dereq_('../utils/log.js');

var _utilsLogJs2 = _interopRequireDefault(_utilsLogJs);

var _safeJsonParseTuple = _dereq_('safe-json-parse/tuple');

var _safeJsonParseTuple2 = _interopRequireDefault(_safeJsonParseTuple);

var _globalWindow = _dereq_('global/window');

var _globalWindow2 = _interopRequireDefault(_globalWindow);

/**
 * Manipulate settings of texttracks
 *
 * @param {Object} player  Main Player
 * @param {Object=} options Object of option names and values
 * @extends Component
 * @class TextTrackSettings
 */

var TextTrackSettings = (function (_Component) {
  _inherits(TextTrackSettings, _Component);

  function TextTrackSettings(player, options) {
    _classCallCheck(this, TextTrackSettings);

    _Component.call(this, player, options);
    this.hide();

    // Grab `persistTextTrackSettings` from the player options if not passed in child options
    if (options.persistTextTrackSettings === undefined) {
      this.options_.persistTextTrackSettings = this.options_.playerOptions.persistTextTrackSettings;
    }

    Events.on(this.$('.vjs-done-button'), 'click', Fn.bind(this, function () {
      this.saveSettings();
      this.hide();
    }));

    Events.on(this.$('.vjs-default-button'), 'click', Fn.bind(this, function () {
      this.$('.vjs-fg-color > select').selectedIndex = 0;
      this.$('.vjs-bg-color > select').selectedIndex = 0;
      this.$('.window-color > select').selectedIndex = 0;
      this.$('.vjs-text-opacity > select').selectedIndex = 0;
      this.$('.vjs-bg-opacity > select').selectedIndex = 0;
      this.$('.vjs-window-opacity > select').selectedIndex = 0;
      this.$('.vjs-edge-style select').selectedIndex = 0;
      this.$('.vjs-font-family select').selectedIndex = 0;
      this.$('.vjs-font-percent select').selectedIndex = 2;
      this.updateDisplay();
    }));

    Events.on(this.$('.vjs-fg-color > select'), 'change', Fn.bind(this, this.updateDisplay));
    Events.on(this.$('.vjs-bg-color > select'), 'change', Fn.bind(this, this.updateDisplay));
    Events.on(this.$('.window-color > select'), 'change', Fn.bind(this, this.updateDisplay));
    Events.on(this.$('.vjs-text-opacity > select'), 'change', Fn.bind(this, this.updateDisplay));
    Events.on(this.$('.vjs-bg-opacity > select'), 'change', Fn.bind(this, this.updateDisplay));
    Events.on(this.$('.vjs-window-opacity > select'), 'change', Fn.bind(this, this.updateDisplay));
    Events.on(this.$('.vjs-font-percent select'), 'change', Fn.bind(this, this.updateDisplay));
    Events.on(this.$('.vjs-edge-style select'), 'change', Fn.bind(this, this.updateDisplay));
    Events.on(this.$('.vjs-font-family select'), 'change', Fn.bind(this, this.updateDisplay));

    if (this.options_.persistTextTrackSettings) {
      this.restoreSettings();
    }
  }

  /**
   * Create the component's DOM element
   *
   * @return {Element}
   * @method createEl
   */

  TextTrackSettings.prototype.createEl = function createEl() {
    return _Component.prototype.createEl.call(this, 'div', {
      className: 'vjs-caption-settings vjs-modal-overlay',
      innerHTML: captionOptionsMenuTemplate()
    });
  };

  /**
   * Get texttrack settings
   * Settings are
   * .vjs-edge-style
   * .vjs-font-family
   * .vjs-fg-color
   * .vjs-text-opacity
   * .vjs-bg-color
   * .vjs-bg-opacity
   * .window-color
   * .vjs-window-opacity
   *
   * @return {Object}
   * @method getValues
   */

  TextTrackSettings.prototype.getValues = function getValues() {
    var textEdge = getSelectedOptionValue(this.$('.vjs-edge-style select'));
    var fontFamily = getSelectedOptionValue(this.$('.vjs-font-family select'));
    var fgColor = getSelectedOptionValue(this.$('.vjs-fg-color > select'));
    var textOpacity = getSelectedOptionValue(this.$('.vjs-text-opacity > select'));
    var bgColor = getSelectedOptionValue(this.$('.vjs-bg-color > select'));
    var bgOpacity = getSelectedOptionValue(this.$('.vjs-bg-opacity > select'));
    var windowColor = getSelectedOptionValue(this.$('.window-color > select'));
    var windowOpacity = getSelectedOptionValue(this.$('.vjs-window-opacity > select'));
    var fontPercent = _globalWindow2['default']['parseFloat'](getSelectedOptionValue(this.$('.vjs-font-percent > select')));

    var result = {
      'backgroundOpacity': bgOpacity,
      'textOpacity': textOpacity,
      'windowOpacity': windowOpacity,
      'edgeStyle': textEdge,
      'fontFamily': fontFamily,
      'color': fgColor,
      'backgroundColor': bgColor,
      'windowColor': windowColor,
      'fontPercent': fontPercent
    };
    for (var _name in result) {
      if (result[_name] === '' || result[_name] === 'none' || _name === 'fontPercent' && result[_name] === 1.00) {
        delete result[_name];
      }
    }
    return result;
  };

  /**
   * Set texttrack settings
   * Settings are
   * .vjs-edge-style
   * .vjs-font-family
   * .vjs-fg-color
   * .vjs-text-opacity
   * .vjs-bg-color
   * .vjs-bg-opacity
   * .window-color
   * .vjs-window-opacity
   *
   * @param {Object} values Object with texttrack setting values
   * @method setValues
   */

  TextTrackSettings.prototype.setValues = function setValues(values) {
    setSelectedOption(this.$('.vjs-edge-style select'), values.edgeStyle);
    setSelectedOption(this.$('.vjs-font-family select'), values.fontFamily);
    setSelectedOption(this.$('.vjs-fg-color > select'), values.color);
    setSelectedOption(this.$('.vjs-text-opacity > select'), values.textOpacity);
    setSelectedOption(this.$('.vjs-bg-color > select'), values.backgroundColor);
    setSelectedOption(this.$('.vjs-bg-opacity > select'), values.backgroundOpacity);
    setSelectedOption(this.$('.window-color > select'), values.windowColor);
    setSelectedOption(this.$('.vjs-window-opacity > select'), values.windowOpacity);

    var fontPercent = values.fontPercent;

    if (fontPercent) {
      fontPercent = fontPercent.toFixed(2);
    }

    setSelectedOption(this.$('.vjs-font-percent > select'), fontPercent);
  };

  /**
   * Restore texttrack settings
   *
   * @method restoreSettings
   */

  TextTrackSettings.prototype.restoreSettings = function restoreSettings() {
    var _safeParseTuple = _safeJsonParseTuple2['default'](_globalWindow2['default'].localStorage.getItem('vjs-text-track-settings'));

    var err = _safeParseTuple[0];
    var values = _safeParseTuple[1];

    if (err) {
      _utilsLogJs2['default'].error(err);
    }

    if (values) {
      this.setValues(values);
    }
  };

  /**
   * Save texttrack settings to local storage
   *
   * @method saveSettings
   */

  TextTrackSettings.prototype.saveSettings = function saveSettings() {
    if (!this.options_.persistTextTrackSettings) {
      return;
    }

    var values = this.getValues();
    try {
      if (Object.getOwnPropertyNames(values).length > 0) {
        _globalWindow2['default'].localStorage.setItem('vjs-text-track-settings', JSON.stringify(values));
      } else {
        _globalWindow2['default'].localStorage.removeItem('vjs-text-track-settings');
      }
    } catch (e) {}
  };

  /**
   * Update display of texttrack settings
   *
   * @method updateDisplay
   */

  TextTrackSettings.prototype.updateDisplay = function updateDisplay() {
    var ttDisplay = this.player_.getChild('textTrackDisplay');
    if (ttDisplay) {
      ttDisplay.updateDisplay();
    }
  };

  return TextTrackSettings;
})(_component2['default']);

_component2['default'].registerComponent('TextTrackSettings', TextTrackSettings);

function getSelectedOptionValue(target) {
  var selectedOption = undefined;
  // not all browsers support selectedOptions, so, fallback to options
  if (target.selectedOptions) {
    selectedOption = target.selectedOptions[0];
  } else if (target.options) {
    selectedOption = target.options[target.options.selectedIndex];
  }

  return selectedOption.value;
}

function setSelectedOption(target, value) {
  if (!value) {
    return;
  }

  var i = undefined;
  for (i = 0; i < target.options.length; i++) {
    var option = target.options[i];
    if (option.value === value) {
      break;
    }
  }

  target.selectedIndex = i;
}

function captionOptionsMenuTemplate() {
  var template = '<div class="vjs-tracksettings">\n      <div class="vjs-tracksettings-colors">\n        <div class="vjs-fg-color vjs-tracksetting">\n            <label class="vjs-label">Foreground</label>\n            <select>\n              <option value="">---</option>\n              <option value="#FFF">White</option>\n              <option value="#000">Black</option>\n              <option value="#F00">Red</option>\n              <option value="#0F0">Green</option>\n              <option value="#00F">Blue</option>\n              <option value="#FF0">Yellow</option>\n              <option value="#F0F">Magenta</option>\n              <option value="#0FF">Cyan</option>\n            </select>\n            <span class="vjs-text-opacity vjs-opacity">\n              <select>\n                <option value="">---</option>\n                <option value="1">Opaque</option>\n                <option value="0.5">Semi-Opaque</option>\n              </select>\n            </span>\n        </div> <!-- vjs-fg-color -->\n        <div class="vjs-bg-color vjs-tracksetting">\n            <label class="vjs-label">Background</label>\n            <select>\n              <option value="">---</option>\n              <option value="#FFF">White</option>\n              <option value="#000">Black</option>\n              <option value="#F00">Red</option>\n              <option value="#0F0">Green</option>\n              <option value="#00F">Blue</option>\n              <option value="#FF0">Yellow</option>\n              <option value="#F0F">Magenta</option>\n              <option value="#0FF">Cyan</option>\n            </select>\n            <span class="vjs-bg-opacity vjs-opacity">\n                <select>\n                  <option value="">---</option>\n                  <option value="1">Opaque</option>\n                  <option value="0.5">Semi-Transparent</option>\n                  <option value="0">Transparent</option>\n                </select>\n            </span>\n        </div> <!-- vjs-bg-color -->\n        <div class="window-color vjs-tracksetting">\n            <label class="vjs-label">Window</label>\n            <select>\n              <option value="">---</option>\n              <option value="#FFF">White</option>\n              <option value="#000">Black</option>\n              <option value="#F00">Red</option>\n              <option value="#0F0">Green</option>\n              <option value="#00F">Blue</option>\n              <option value="#FF0">Yellow</option>\n              <option value="#F0F">Magenta</option>\n              <option value="#0FF">Cyan</option>\n            </select>\n            <span class="vjs-window-opacity vjs-opacity">\n                <select>\n                  <option value="">---</option>\n                  <option value="1">Opaque</option>\n                  <option value="0.5">Semi-Transparent</option>\n                  <option value="0">Transparent</option>\n                </select>\n            </span>\n        </div> <!-- vjs-window-color -->\n      </div> <!-- vjs-tracksettings -->\n      <div class="vjs-tracksettings-font">\n        <div class="vjs-font-percent vjs-tracksetting">\n          <label class="vjs-label">Font Size</label>\n          <select>\n            <option value="0.50">50%</option>\n            <option value="0.75">75%</option>\n            <option value="1.00" selected>100%</option>\n            <option value="1.25">125%</option>\n            <option value="1.50">150%</option>\n            <option value="1.75">175%</option>\n            <option value="2.00">200%</option>\n            <option value="3.00">300%</option>\n            <option value="4.00">400%</option>\n          </select>\n        </div> <!-- vjs-font-percent -->\n        <div class="vjs-edge-style vjs-tracksetting">\n          <label class="vjs-label">Text Edge Style</label>\n          <select>\n            <option value="none">None</option>\n            <option value="raised">Raised</option>\n            <option value="depressed">Depressed</option>\n            <option value="uniform">Uniform</option>\n            <option value="dropshadow">Dropshadow</option>\n          </select>\n        </div> <!-- vjs-edge-style -->\n        <div class="vjs-font-family vjs-tracksetting">\n          <label class="vjs-label">Font Family</label>\n          <select>\n            <option value="">Default</option>\n            <option value="monospaceSerif">Monospace Serif</option>\n            <option value="proportionalSerif">Proportional Serif</option>\n            <option value="monospaceSansSerif">Monospace Sans-Serif</option>\n            <option value="proportionalSansSerif">Proportional Sans-Serif</option>\n            <option value="casual">Casual</option>\n            <option value="script">Script</option>\n            <option value="small-caps">Small Caps</option>\n          </select>\n        </div> <!-- vjs-font-family -->\n      </div>\n    </div>\n    <div class="vjs-tracksettings-controls">\n      <button class="vjs-default-button">Defaults</button>\n      <button class="vjs-done-button">Done</button>\n    </div>';

  return template;
}

exports['default'] = TextTrackSettings;
module.exports = exports['default'];

},{"../component":66,"../utils/events.js":132,"../utils/fn.js":133,"../utils/log.js":136,"global/window":2,"safe-json-parse/tuple":53}],127:[function(_dereq_,module,exports){
/**
 * @file text-track.js
 */
'use strict';

exports.__esModule = true;

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _textTrackCueList = _dereq_('./text-track-cue-list');

var _textTrackCueList2 = _interopRequireDefault(_textTrackCueList);

var _utilsFnJs = _dereq_('../utils/fn.js');

var Fn = _interopRequireWildcard(_utilsFnJs);

var _utilsGuidJs = _dereq_('../utils/guid.js');

var Guid = _interopRequireWildcard(_utilsGuidJs);

var _utilsBrowserJs = _dereq_('../utils/browser.js');

var browser = _interopRequireWildcard(_utilsBrowserJs);

var _textTrackEnums = _dereq_('./text-track-enums');

var TextTrackEnum = _interopRequireWildcard(_textTrackEnums);

var _utilsLogJs = _dereq_('../utils/log.js');

var _utilsLogJs2 = _interopRequireDefault(_utilsLogJs);

var _eventTarget = _dereq_('../event-target');

var _eventTarget2 = _interopRequireDefault(_eventTarget);

var _globalDocument = _dereq_('global/document');

var _globalDocument2 = _interopRequireDefault(_globalDocument);

var _globalWindow = _dereq_('global/window');

var _globalWindow2 = _interopRequireDefault(_globalWindow);

var _utilsUrlJs = _dereq_('../utils/url.js');

var _xhr = _dereq_('xhr');

var _xhr2 = _interopRequireDefault(_xhr);

/*
 * https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack
 *
 * interface TextTrack : EventTarget {
 *   readonly attribute TextTrackKind kind;
 *   readonly attribute DOMString label;
 *   readonly attribute DOMString language;
 *
 *   readonly attribute DOMString id;
 *   readonly attribute DOMString inBandMetadataTrackDispatchType;
 *
 *   attribute TextTrackMode mode;
 *
 *   readonly attribute TextTrackCueList? cues;
 *   readonly attribute TextTrackCueList? activeCues;
 *
 *   void addCue(TextTrackCue cue);
 *   void removeCue(TextTrackCue cue);
 *
 *   attribute EventHandler oncuechange;
 * };
 */
var TextTrack = function TextTrack() {
  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

  if (!options.tech) {
    throw new Error('A tech was not provided.');
  }

  var tt = this;
  if (browser.IS_IE8) {
    tt = _globalDocument2['default'].createElement('custom');

    for (var prop in TextTrack.prototype) {
      if (prop !== 'constructor') {
        tt[prop] = TextTrack.prototype[prop];
      }
    }
  }

  tt.tech_ = options.tech;

  var mode = TextTrackEnum.TextTrackMode[options['mode']] || 'disabled';
  var kind = TextTrackEnum.TextTrackKind[options['kind']] || 'subtitles';
  var label = options['label'] || '';
  var language = options['language'] || options['srclang'] || '';
  var id = options['id'] || 'vjs_text_track_' + Guid.newGUID();

  if (kind === 'metadata' || kind === 'chapters') {
    mode = 'hidden';
  }

  tt.cues_ = [];
  tt.activeCues_ = [];

  var cues = new _textTrackCueList2['default'](tt.cues_);
  var activeCues = new _textTrackCueList2['default'](tt.activeCues_);

  var changed = false;
  var timeupdateHandler = Fn.bind(tt, function () {
    this['activeCues'];
    if (changed) {
      this['trigger']('cuechange');
      changed = false;
    }
  });
  if (mode !== 'disabled') {
    tt.tech_.on('timeupdate', timeupdateHandler);
  }

  Object.defineProperty(tt, 'kind', {
    get: function get() {
      return kind;
    },
    set: Function.prototype
  });

  Object.defineProperty(tt, 'label', {
    get: function get() {
      return label;
    },
    set: Function.prototype
  });

  Object.defineProperty(tt, 'language', {
    get: function get() {
      return language;
    },
    set: Function.prototype
  });

  Object.defineProperty(tt, 'id', {
    get: function get() {
      return id;
    },
    set: Function.prototype
  });

  Object.defineProperty(tt, 'mode', {
    get: function get() {
      return mode;
    },
    set: function set(newMode) {
      if (!TextTrackEnum.TextTrackMode[newMode]) {
        return;
      }
      mode = newMode;
      if (mode === 'showing') {
        this.tech_.on('timeupdate', timeupdateHandler);
      }
      this.trigger('modechange');
    }
  });

  Object.defineProperty(tt, 'cues', {
    get: function get() {
      if (!this.loaded_) {
        return null;
      }

      return cues;
    },
    set: Function.prototype
  });

  Object.defineProperty(tt, 'activeCues', {
    get: function get() {
      if (!this.loaded_) {
        return null;
      }

      if (this['cues'].length === 0) {
        return activeCues; // nothing to do
      }

      var ct = this.tech_.currentTime();
      var active = [];

      for (var i = 0, l = this['cues'].length; i < l; i++) {
        var cue = this['cues'][i];
        if (cue['startTime'] <= ct && cue['endTime'] >= ct) {
          active.push(cue);
        } else if (cue['startTime'] === cue['endTime'] && cue['startTime'] <= ct && cue['startTime'] + 0.5 >= ct) {
          active.push(cue);
        }
      }

      changed = false;

      if (active.length !== this.activeCues_.length) {
        changed = true;
      } else {
        for (var i = 0; i < active.length; i++) {
          if (indexOf.call(this.activeCues_, active[i]) === -1) {
            changed = true;
          }
        }
      }

      this.activeCues_ = active;
      activeCues.setCues_(this.activeCues_);

      return activeCues;
    },
    set: Function.prototype
  });

  if (options.src) {
    tt.src = options.src;
    loadTrack(options.src, tt);
  } else {
    tt.loaded_ = true;
  }

  if (browser.IS_IE8) {
    return tt;
  }
};

TextTrack.prototype = Object.create(_eventTarget2['default'].prototype);
TextTrack.prototype.constructor = TextTrack;

/*
 * cuechange - One or more cues in the track have become active or stopped being active.
 */
TextTrack.prototype.allowedEvents_ = {
  'cuechange': 'cuechange'
};

TextTrack.prototype.addCue = function (cue) {
  var tracks = this.tech_.textTracks();

  if (tracks) {
    for (var i = 0; i < tracks.length; i++) {
      if (tracks[i] !== this) {
        tracks[i].removeCue(cue);
      }
    }
  }

  this.cues_.push(cue);
  this['cues'].setCues_(this.cues_);
};

TextTrack.prototype.removeCue = function (removeCue) {
  var removed = false;

  for (var i = 0, l = this.cues_.length; i < l; i++) {
    var cue = this.cues_[i];
    if (cue === removeCue) {
      this.cues_.splice(i, 1);
      removed = true;
    }
  }

  if (removed) {
    this.cues.setCues_(this.cues_);
  }
};

/*
* Downloading stuff happens below this point
*/
var parseCues = function parseCues(srcContent, track) {
  var parser = new _globalWindow2['default'].WebVTT.Parser(_globalWindow2['default'], _globalWindow2['default'].vttjs, _globalWindow2['default'].WebVTT.StringDecoder());

  parser.oncue = function (cue) {
    track.addCue(cue);
  };

  parser.onparsingerror = function (error) {
    _utilsLogJs2['default'].error(error);
  };

  parser.onflush = function () {
    track.trigger({
      type: 'loadeddata',
      target: track
    });
  };

  parser.parse(srcContent);
  parser.flush();
};

var loadTrack = function loadTrack(src, track) {
  var opts = {
    uri: src
  };

  var crossOrigin = _utilsUrlJs.isCrossOrigin(src);
  if (crossOrigin) {
    opts.cors = crossOrigin;
  }

  _xhr2['default'](opts, Fn.bind(this, function (err, response, responseBody) {
    if (err) {
      return _utilsLogJs2['default'].error(err, response);
    }

    track.loaded_ = true;

    // NOTE: this is only used for the alt/video.novtt.js build
    if (typeof _globalWindow2['default'].WebVTT !== 'function') {
      _globalWindow2['default'].setTimeout(function () {
        parseCues(responseBody, track);
      }, 100);
    } else {
      parseCues(responseBody, track);
    }
  }));
};

var indexOf = function indexOf(searchElement, fromIndex) {
  if (this == null) {
    throw new TypeError('"this" is null or not defined');
  }

  var O = Object(this);

  var len = O.length >>> 0;

  if (len === 0) {
    return -1;
  }

  var n = +fromIndex || 0;

  if (Math.abs(n) === Infinity) {
    n = 0;
  }

  if (n >= len) {
    return -1;
  }

  var k = Math.max(n >= 0 ? n : len - Math.abs(n), 0);

  while (k < len) {
    if (k in O && O[k] === searchElement) {
      return k;
    }
    k++;
  }
  return -1;
};

exports['default'] = TextTrack;
module.exports = exports['default'];

},{"../event-target":98,"../utils/browser.js":128,"../utils/fn.js":133,"../utils/guid.js":135,"../utils/log.js":136,"../utils/url.js":141,"./text-track-cue-list":121,"./text-track-enums":123,"global/document":1,"global/window":2,"xhr":55}],128:[function(_dereq_,module,exports){
/**
 * @file browser.js
 */
'use strict';

exports.__esModule = true;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _globalDocument = _dereq_('global/document');

var _globalDocument2 = _interopRequireDefault(_globalDocument);

var _globalWindow = _dereq_('global/window');

var _globalWindow2 = _interopRequireDefault(_globalWindow);

var USER_AGENT = _globalWindow2['default'].navigator.userAgent;
var webkitVersionMap = /AppleWebKit\/([\d.]+)/i.exec(USER_AGENT);
var appleWebkitVersion = webkitVersionMap ? parseFloat(webkitVersionMap.pop()) : null;

/*
 * Device is an iPhone
 *
 * @type {Boolean}
 * @constant
 * @private
 */
var IS_IPHONE = /iPhone/i.test(USER_AGENT);
exports.IS_IPHONE = IS_IPHONE;
var IS_IPAD = /iPad/i.test(USER_AGENT);
exports.IS_IPAD = IS_IPAD;
var IS_IPOD = /iPod/i.test(USER_AGENT);
exports.IS_IPOD = IS_IPOD;
var IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;

exports.IS_IOS = IS_IOS;
var IOS_VERSION = (function () {
  var match = USER_AGENT.match(/OS (\d+)_/i);
  if (match && match[1]) {
    return match[1];
  }
})();

exports.IOS_VERSION = IOS_VERSION;
var IS_ANDROID = /Android/i.test(USER_AGENT);
exports.IS_ANDROID = IS_ANDROID;
var ANDROID_VERSION = (function () {
  // This matches Android Major.Minor.Patch versions
  // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned
  var match = USER_AGENT.match(/Android (\d+)(?:\.(\d+))?(?:\.(\d+))*/i),
      major,
      minor;

  if (!match) {
    return null;
  }

  major = match[1] && parseFloat(match[1]);
  minor = match[2] && parseFloat(match[2]);

  if (major && minor) {
    return parseFloat(match[1] + '.' + match[2]);
  } else if (major) {
    return major;
  } else {
    return null;
  }
})();
exports.ANDROID_VERSION = ANDROID_VERSION;
// Old Android is defined as Version older than 2.3, and requiring a webkit version of the android browser
var IS_OLD_ANDROID = IS_ANDROID && /webkit/i.test(USER_AGENT) && ANDROID_VERSION < 2.3;
exports.IS_OLD_ANDROID = IS_OLD_ANDROID;
var IS_NATIVE_ANDROID = IS_ANDROID && ANDROID_VERSION < 5 && appleWebkitVersion < 537;

exports.IS_NATIVE_ANDROID = IS_NATIVE_ANDROID;
var IS_FIREFOX = /Firefox/i.test(USER_AGENT);
exports.IS_FIREFOX = IS_FIREFOX;
var IS_CHROME = /Chrome/i.test(USER_AGENT);
exports.IS_CHROME = IS_CHROME;
var IS_IE8 = /MSIE\s8\.0/.test(USER_AGENT);

exports.IS_IE8 = IS_IE8;
var TOUCH_ENABLED = !!('ontouchstart' in _globalWindow2['default'] || _globalWindow2['default'].DocumentTouch && _globalDocument2['default'] instanceof _globalWindow2['default'].DocumentTouch);
exports.TOUCH_ENABLED = TOUCH_ENABLED;
var BACKGROUND_SIZE_SUPPORTED = ('backgroundSize' in _globalDocument2['default'].createElement('video').style);
exports.BACKGROUND_SIZE_SUPPORTED = BACKGROUND_SIZE_SUPPORTED;

},{"global/document":1,"global/window":2}],129:[function(_dereq_,module,exports){
/**
 * @file buffer.js
 */
'use strict';

exports.__esModule = true;
exports.bufferedPercent = bufferedPercent;

var _timeRangesJs = _dereq_('./time-ranges.js');

/**
 * Compute how much your video has been buffered
 *
 * @param  {Object} Buffered object
 * @param  {Number} Total duration
 * @return {Number} Percent buffered of the total duration
 * @private
 * @function bufferedPercent
 */

function bufferedPercent(buffered, duration) {
  var bufferedDuration = 0,
      start,
      end;

  if (!duration) {
    return 0;
  }

  if (!buffered || !buffered.length) {
    buffered = _timeRangesJs.createTimeRange(0, 0);
  }

  for (var i = 0; i < buffered.length; i++) {
    start = buffered.start(i);
    end = buffered.end(i);

    // buffered end can be bigger than duration by a very small fraction
    if (end > duration) {
      end = duration;
    }

    bufferedDuration += end - start;
  }

  return bufferedDuration / duration;
}

},{"./time-ranges.js":139}],130:[function(_dereq_,module,exports){
'use strict';

exports.__esModule = true;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _logJs = _dereq_('./log.js');

var _logJs2 = _interopRequireDefault(_logJs);

/**
 * Object containing the default behaviors for available handler methods.
 *
 * @private
 * @type {Object}
 */
var defaultBehaviors = {
  get: function get(obj, key) {
    return obj[key];
  },
  set: function set(obj, key, value) {
    obj[key] = value;
    return true;
  }
};

/**
 * Expose private objects publicly using a Proxy to log deprecation warnings.
 *
 * Browsers that do not support Proxy objects will simply return the `target`
 * object, so it can be directly exposed.
 *
 * @param {Object} target The target object.
 * @param {Object} messages Messages to display from a Proxy. Only operations
 *                          with an associated message will be proxied.
 * @param {String} [messages.get]
 * @param {String} [messages.set]
 * @return {Object} A Proxy if supported or the `target` argument.
 */

exports['default'] = function (target) {
  var messages = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

  if (typeof Proxy === 'function') {
    var _ret = (function () {
      var handler = {};

      // Build a handler object based on those keys that have both messages
      // and default behaviors.
      Object.keys(messages).forEach(function (key) {
        if (defaultBehaviors.hasOwnProperty(key)) {
          handler[key] = function () {
            _logJs2['default'].warn(messages[key]);
            return defaultBehaviors[key].apply(this, arguments);
          };
        }
      });

      return {
        v: new Proxy(target, handler)
      };
    })();

    if (typeof _ret === 'object') return _ret.v;
  }
  return target;
};

module.exports = exports['default'];

},{"./log.js":136}],131:[function(_dereq_,module,exports){
/**
 * @file dom.js
 */
'use strict';

exports.__esModule = true;
exports.getEl = getEl;
exports.createEl = createEl;
exports.textContent = textContent;
exports.insertElFirst = insertElFirst;
exports.getElData = getElData;
exports.hasElData = hasElData;
exports.removeElData = removeElData;
exports.hasElClass = hasElClass;
exports.addElClass = addElClass;
exports.removeElClass = removeElClass;
exports.toggleElClass = toggleElClass;
exports.setElAttributes = setElAttributes;
exports.getElAttributes = getElAttributes;
exports.blockTextSelection = blockTextSelection;
exports.unblockTextSelection = unblockTextSelection;
exports.findElPosition = findElPosition;
exports.getPointerPosition = getPointerPosition;
exports.isEl = isEl;
exports.isTextNode = isTextNode;
exports.emptyEl = emptyEl;
exports.normalizeContent = normalizeContent;
exports.appendContent = appendContent;
exports.insertContent = insertContent;

var _templateObject = _taggedTemplateLiteralLoose(['Setting attributes in the second argument of createEl()\n                has been deprecated. Use the third argument instead.\n                createEl(type, properties, attributes). Attempting to set ', ' to ', '.'], ['Setting attributes in the second argument of createEl()\n                has been deprecated. Use the third argument instead.\n                createEl(type, properties, attributes). Attempting to set ', ' to ', '.']);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _taggedTemplateLiteralLoose(strings, raw) { strings.raw = raw; return strings; }

var _globalDocument = _dereq_('global/document');

var _globalDocument2 = _interopRequireDefault(_globalDocument);

var _globalWindow = _dereq_('global/window');

var _globalWindow2 = _interopRequireDefault(_globalWindow);

var _guidJs = _dereq_('./guid.js');

var Guid = _interopRequireWildcard(_guidJs);

var _logJs = _dereq_('./log.js');

var _logJs2 = _interopRequireDefault(_logJs);

var _tsml = _dereq_('tsml');

var _tsml2 = _interopRequireDefault(_tsml);

/**
 * Detect if a value is a string with any non-whitespace characters.
 *
 * @param  {String} str
 * @return {Boolean}
 */
function isNonBlankString(str) {
  return typeof str === 'string' && /\S/.test(str);
}

/**
 * Throws an error if the passed string has whitespace. This is used by
 * class methods to be relatively consistent with the classList API.
 *
 * @param  {String} str
 * @return {Boolean}
 */
function throwIfWhitespace(str) {
  if (/\s/.test(str)) {
    throw new Error('class has illegal whitespace characters');
  }
}

/**
 * Produce a regular expression for matching a class name.
 *
 * @param  {String} className
 * @return {RegExp}
 */
function classRegExp(className) {
  return new RegExp('(^|\\s)' + className + '($|\\s)');
}

/**
 * Creates functions to query the DOM using a given method.
 *
 * @function createQuerier
 * @private
 * @param  {String} method
 * @return {Function}
 */
function createQuerier(method) {
  return function (selector, context) {
    if (!isNonBlankString(selector)) {
      return _globalDocument2['default'][method](null);
    }
    if (isNonBlankString(context)) {
      context = _globalDocument2['default'].querySelector(context);
    }
    return (isEl(context) ? context : _globalDocument2['default'])[method](selector);
  };
}

/**
 * Shorthand for document.getElementById()
 * Also allows for CSS (jQuery) ID syntax. But nothing other than IDs.
 *
 * @param  {String} id  Element ID
 * @return {Element}    Element with supplied ID
 * @function getEl
 */

function getEl(id) {
  if (id.indexOf('#') === 0) {
    id = id.slice(1);
  }

  return _globalDocument2['default'].getElementById(id);
}

/**
 * Creates an element and applies properties.
 *
 * @param  {String} [tagName='div'] Name of tag to be created.
 * @param  {Object} [properties={}] Element properties to be applied.
 * @param  {Object} [attributes={}] Element attributes to be applied.
 * @return {Element}
 * @function createEl
 */

function createEl() {
  var tagName = arguments.length <= 0 || arguments[0] === undefined ? 'div' : arguments[0];
  var properties = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
  var attributes = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];

  var el = _globalDocument2['default'].createElement(tagName);

  Object.getOwnPropertyNames(properties).forEach(function (propName) {
    var val = properties[propName];

    // See #2176
    // We originally were accepting both properties and attributes in the
    // same object, but that doesn't work so well.
    if (propName.indexOf('aria-') !== -1 || propName === 'role' || propName === 'type') {
      _logJs2['default'].warn(_tsml2['default'](_templateObject, propName, val));
      el.setAttribute(propName, val);
    } else {
      el[propName] = val;
    }
  });

  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {
    var val = attributes[attrName];
    el.setAttribute(attrName, attributes[attrName]);
  });

  return el;
}

/**
 * Injects text into an element, replacing any existing contents entirely.
 *
 * @param  {Element} el
 * @param  {String} text
 * @return {Element}
 * @function textContent
 */

function textContent(el, text) {
  if (typeof el.textContent === 'undefined') {
    el.innerText = text;
  } else {
    el.textContent = text;
  }
}

/**
 * Insert an element as the first child node of another
 *
 * @param  {Element} child   Element to insert
 * @param  {Element} parent Element to insert child into
 * @private
 * @function insertElFirst
 */

function insertElFirst(child, parent) {
  if (parent.firstChild) {
    parent.insertBefore(child, parent.firstChild);
  } else {
    parent.appendChild(child);
  }
}

/**
 * Element Data Store. Allows for binding data to an element without putting it directly on the element.
 * Ex. Event listeners are stored here.
 * (also from jsninja.com, slightly modified and updated for closure compiler)
 *
 * @type {Object}
 * @private
 */
var elData = {};

/*
 * Unique attribute name to store an element's guid in
 *
 * @type {String}
 * @constant
 * @private
 */
var elIdAttr = 'vdata' + new Date().getTime();

/**
 * Returns the cache object where data for an element is stored
 *
 * @param  {Element} el Element to store data for.
 * @return {Object}
 * @function getElData
 */

function getElData(el) {
  var id = el[elIdAttr];

  if (!id) {
    id = el[elIdAttr] = Guid.newGUID();
  }

  if (!elData[id]) {
    elData[id] = {};
  }

  return elData[id];
}

/**
 * Returns whether or not an element has cached data
 *
 * @param  {Element} el A dom element
 * @return {Boolean}
 * @private
 * @function hasElData
 */

function hasElData(el) {
  var id = el[elIdAttr];

  if (!id) {
    return false;
  }

  return !!Object.getOwnPropertyNames(elData[id]).length;
}

/**
 * Delete data for the element from the cache and the guid attr from getElementById
 *
 * @param  {Element} el Remove data for an element
 * @private
 * @function removeElData
 */

function removeElData(el) {
  var id = el[elIdAttr];

  if (!id) {
    return;
  }

  // Remove all stored data
  delete elData[id];

  // Remove the elIdAttr property from the DOM node
  try {
    delete el[elIdAttr];
  } catch (e) {
    if (el.removeAttribute) {
      el.removeAttribute(elIdAttr);
    } else {
      // IE doesn't appear to support removeAttribute on the document element
      el[elIdAttr] = null;
    }
  }
}

/**
 * Check if an element has a CSS class
 *
 * @function hasElClass
 * @param {Element} element Element to check
 * @param {String} classToCheck Classname to check
 */

function hasElClass(element, classToCheck) {
  if (element.classList) {
    return element.classList.contains(classToCheck);
  } else {
    throwIfWhitespace(classToCheck);
    return classRegExp(classToCheck).test(element.className);
  }
}

/**
 * Add a CSS class name to an element
 *
 * @function addElClass
 * @param {Element} element    Element to add class name to
 * @param {String} classToAdd Classname to add
 */

function addElClass(element, classToAdd) {
  if (element.classList) {
    element.classList.add(classToAdd);

    // Don't need to `throwIfWhitespace` here because `hasElClass` will do it
    // in the case of classList not being supported.
  } else if (!hasElClass(element, classToAdd)) {
      element.className = (element.className + ' ' + classToAdd).trim();
    }

  return element;
}

/**
 * Remove a CSS class name from an element
 *
 * @function removeElClass
 * @param {Element} element    Element to remove from class name
 * @param {String} classToRemove Classname to remove
 */

function removeElClass(element, classToRemove) {
  if (element.classList) {
    element.classList.remove(classToRemove);
  } else {
    throwIfWhitespace(classToRemove);
    element.className = element.className.split(/\s+/).filter(function (c) {
      return c !== classToRemove;
    }).join(' ');
  }

  return element;
}

/**
 * Adds or removes a CSS class name on an element depending on an optional
 * condition or the presence/absence of the class name.
 *
 * @function toggleElClass
 * @param    {Element} element
 * @param    {String} classToToggle
 * @param    {Boolean|Function} [predicate]
 *           Can be a function that returns a Boolean. If `true`, the class
 *           will be added; if `false`, the class will be removed. If not
 *           given, the class will be added if not present and vice versa.
 */

function toggleElClass(element, classToToggle, predicate) {

  // This CANNOT use `classList` internally because IE does not support the
  // second parameter to the `classList.toggle()` method! Which is fine because
  // `classList` will be used by the add/remove functions.
  var has = hasElClass(element, classToToggle);

  if (typeof predicate === 'function') {
    predicate = predicate(element, classToToggle);
  }

  if (typeof predicate !== 'boolean') {
    predicate = !has;
  }

  // If the necessary class operation matches the current state of the
  // element, no action is required.
  if (predicate === has) {
    return;
  }

  if (predicate) {
    addElClass(element, classToToggle);
  } else {
    removeElClass(element, classToToggle);
  }

  return element;
}

/**
 * Apply attributes to an HTML element.
 *
 * @param  {Element} el         Target element.
 * @param  {Object=} attributes Element attributes to be applied.
 * @private
 * @function setElAttributes
 */

function setElAttributes(el, attributes) {
  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {
    var attrValue = attributes[attrName];

    if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {
      el.removeAttribute(attrName);
    } else {
      el.setAttribute(attrName, attrValue === true ? '' : attrValue);
    }
  });
}

/**
 * Get an element's attribute values, as defined on the HTML tag
 * Attributes are not the same as properties. They're defined on the tag
 * or with setAttribute (which shouldn't be used with HTML)
 * This will return true or false for boolean attributes.
 *
 * @param  {Element} tag Element from which to get tag attributes
 * @return {Object}
 * @private
 * @function getElAttributes
 */

function getElAttributes(tag) {
  var obj, knownBooleans, attrs, attrName, attrVal;

  obj = {};

  // known boolean attributes
  // we can check for matching boolean properties, but older browsers
  // won't know about HTML5 boolean attributes that we still read from
  knownBooleans = ',' + 'autoplay,controls,loop,muted,default' + ',';

  if (tag && tag.attributes && tag.attributes.length > 0) {
    attrs = tag.attributes;

    for (var i = attrs.length - 1; i >= 0; i--) {
      attrName = attrs[i].name;
      attrVal = attrs[i].value;

      // check for known booleans
      // the matching element property will return a value for typeof
      if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {
        // the value of an included boolean attribute is typically an empty
        // string ('') which would equal false if we just check for a false value.
        // we also don't want support bad code like autoplay='false'
        attrVal = attrVal !== null ? true : false;
      }

      obj[attrName] = attrVal;
    }
  }

  return obj;
}

/**
 * Attempt to block the ability to select text while dragging controls
 *
 * @return {Boolean}
 * @function blockTextSelection
 */

function blockTextSelection() {
  _globalDocument2['default'].body.focus();
  _globalDocument2['default'].onselectstart = function () {
    return false;
  };
}

/**
 * Turn off text selection blocking
 *
 * @return {Boolean}
 * @function unblockTextSelection
 */

function unblockTextSelection() {
  _globalDocument2['default'].onselectstart = function () {
    return true;
  };
}

/**
 * Offset Left
 * getBoundingClientRect technique from
 * John Resig http://ejohn.org/blog/getboundingclientrect-is-awesome/
 *
 * @function findElPosition
 * @param {Element} el Element from which to get offset
 * @return {Object}
 */

function findElPosition(el) {
  var box = undefined;

  if (el.getBoundingClientRect && el.parentNode) {
    box = el.getBoundingClientRect();
  }

  if (!box) {
    return {
      left: 0,
      top: 0
    };
  }

  var docEl = _globalDocument2['default'].documentElement;
  var body = _globalDocument2['default'].body;

  var clientLeft = docEl.clientLeft || body.clientLeft || 0;
  var scrollLeft = _globalWindow2['default'].pageXOffset || body.scrollLeft;
  var left = box.left + scrollLeft - clientLeft;

  var clientTop = docEl.clientTop || body.clientTop || 0;
  var scrollTop = _globalWindow2['default'].pageYOffset || body.scrollTop;
  var top = box.top + scrollTop - clientTop;

  // Android sometimes returns slightly off decimal values, so need to round
  return {
    left: Math.round(left),
    top: Math.round(top)
  };
}

/**
 * Get pointer position in element
 * Returns an object with x and y coordinates.
 * The base on the coordinates are the bottom left of the element.
 *
 * @function getPointerPosition
 * @param {Element} el Element on which to get the pointer position on
 * @param {Event} event Event object
 * @return {Object} This object will have x and y coordinates corresponding to the mouse position
 */

function getPointerPosition(el, event) {
  var position = {};
  var box = findElPosition(el);
  var boxW = el.offsetWidth;
  var boxH = el.offsetHeight;

  var boxY = box.top;
  var boxX = box.left;
  var pageY = event.pageY;
  var pageX = event.pageX;

  if (event.changedTouches) {
    pageX = event.changedTouches[0].pageX;
    pageY = event.changedTouches[0].pageY;
  }

  position.y = Math.max(0, Math.min(1, (boxY - pageY + boxH) / boxH));
  position.x = Math.max(0, Math.min(1, (pageX - boxX) / boxW));

  return position;
}

/**
 * Determines, via duck typing, whether or not a value is a DOM element.
 *
 * @function isEl
 * @param    {Mixed} value
 * @return   {Boolean}
 */

function isEl(value) {
  return !!value && typeof value === 'object' && value.nodeType === 1;
}

/**
 * Determines, via duck typing, whether or not a value is a text node.
 *
 * @param  {Mixed} value
 * @return {Boolean}
 */

function isTextNode(value) {
  return !!value && typeof value === 'object' && value.nodeType === 3;
}

/**
 * Empties the contents of an element.
 *
 * @function emptyEl
 * @param    {Element} el
 * @return   {Element}
 */

function emptyEl(el) {
  while (el.firstChild) {
    el.removeChild(el.firstChild);
  }
  return el;
}

/**
 * Normalizes content for eventual insertion into the DOM.
 *
 * This allows a wide range of content definition methods, but protects
 * from falling into the trap of simply writing to `innerHTML`, which is
 * an XSS concern.
 *
 * The content for an element can be passed in multiple types and
 * combinations, whose behavior is as follows:
 *
 * - String
 *   Normalized into a text node.
 *
 * - Element, TextNode
 *   Passed through.
 *
 * - Array
 *   A one-dimensional array of strings, elements, nodes, or functions (which
 *   return single strings, elements, or nodes).
 *
 * - Function
 *   If the sole argument, is expected to produce a string, element,
 *   node, or array.
 *
 * @function normalizeContent
 * @param    {String|Element|TextNode|Array|Function} content
 * @return   {Array}
 */

function normalizeContent(content) {

  // First, invoke content if it is a function. If it produces an array,
  // that needs to happen before normalization.
  if (typeof content === 'function') {
    content = content();
  }

  // Next up, normalize to an array, so one or many items can be normalized,
  // filtered, and returned.
  return (Array.isArray(content) ? content : [content]).map(function (value) {

    // First, invoke value if it is a function to produce a new value,
    // which will be subsequently normalized to a Node of some kind.
    if (typeof value === 'function') {
      value = value();
    }

    if (isEl(value) || isTextNode(value)) {
      return value;
    }

    if (typeof value === 'string' && /\S/.test(value)) {
      return _globalDocument2['default'].createTextNode(value);
    }
  }).filter(function (value) {
    return value;
  });
}

/**
 * Normalizes and appends content to an element.
 *
 * @function appendContent
 * @param    {Element} el
 * @param    {String|Element|TextNode|Array|Function} content
 *           See: `normalizeContent`
 * @return   {Element}
 */

function appendContent(el, content) {
  normalizeContent(content).forEach(function (node) {
    return el.appendChild(node);
  });
  return el;
}

/**
 * Normalizes and inserts content into an element; this is identical to
 * `appendContent()`, except it empties the element first.
 *
 * @function insertContent
 * @param    {Element} el
 * @param    {String|Element|TextNode|Array|Function} content
 *           See: `normalizeContent`
 * @return   {Element}
 */

function insertContent(el, content) {
  return appendContent(emptyEl(el), content);
}

/**
 * Finds a single DOM element matching `selector` within the optional
 * `context` of another DOM element (defaulting to `document`).
 *
 * @function $
 * @param    {String} selector
 *           A valid CSS selector, which will be passed to `querySelector`.
 *
 * @param    {Element|String} [context=document]
 *           A DOM element within which to query. Can also be a selector
 *           string in which case the first matching element will be used
 *           as context. If missing (or no element matches selector), falls
 *           back to `document`.
 *
 * @return   {Element|null}
 */
var $ = createQuerier('querySelector');

exports.$ = $;
/**
 * Finds a all DOM elements matching `selector` within the optional
 * `context` of another DOM element (defaulting to `document`).
 *
 * @function $$
 * @param    {String} selector
 *           A valid CSS selector, which will be passed to `querySelectorAll`.
 *
 * @param    {Element|String} [context=document]
 *           A DOM element within which to query. Can also be a selector
 *           string in which case the first matching element will be used
 *           as context. If missing (or no element matches selector), falls
 *           back to `document`.
 *
 * @return   {NodeList}
 */
var $$ = createQuerier('querySelectorAll');
exports.$$ = $$;

},{"./guid.js":135,"./log.js":136,"global/document":1,"global/window":2,"tsml":54}],132:[function(_dereq_,module,exports){
/**
 * @file events.js
 *
 * Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)
 * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)
 * This should work very similarly to jQuery's events, however it's based off the book version which isn't as
 * robust as jquery's, so there's probably some differences.
 */

'use strict';

exports.__esModule = true;
exports.on = on;
exports.off = off;
exports.trigger = trigger;
exports.one = one;
exports.fixEvent = fixEvent;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

var _domJs = _dereq_('./dom.js');

var Dom = _interopRequireWildcard(_domJs);

var _guidJs = _dereq_('./guid.js');

var Guid = _interopRequireWildcard(_guidJs);

var _globalWindow = _dereq_('global/window');

var _globalWindow2 = _interopRequireDefault(_globalWindow);

var _globalDocument = _dereq_('global/document');

var _globalDocument2 = _interopRequireDefault(_globalDocument);

/**
 * Add an event listener to element
 * It stores the handler function in a separate cache object
 * and adds a generic handler to the element's event,
 * along with a unique id (guid) to the element.
 *
 * @param  {Element|Object}   elem Element or object to bind listeners to
 * @param  {String|Array}   type Type of event to bind to.
 * @param  {Function} fn   Event listener.
 * @method on
 */

function on(elem, type, fn) {
  if (Array.isArray(type)) {
    return _handleMultipleEvents(on, elem, type, fn);
  }

  var data = Dom.getElData(elem);

  // We need a place to store all our handler data
  if (!data.handlers) data.handlers = {};

  if (!data.handlers[type]) data.handlers[type] = [];

  if (!fn.guid) fn.guid = Guid.newGUID();

  data.handlers[type].push(fn);

  if (!data.dispatcher) {
    data.disabled = false;

    data.dispatcher = function (event, hash) {

      if (data.disabled) return;
      event = fixEvent(event);

      var handlers = data.handlers[event.type];

      if (handlers) {
        // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.
        var handlersCopy = handlers.slice(0);

        for (var m = 0, n = handlersCopy.length; m < n; m++) {
          if (event.isImmediatePropagationStopped()) {
            break;
          } else {
            handlersCopy[m].call(elem, event, hash);
          }
        }
      }
    };
  }

  if (data.handlers[type].length === 1) {
    if (elem.addEventListener) {
      elem.addEventListener(type, data.dispatcher, false);
    } else if (elem.attachEvent) {
      elem.attachEvent('on' + type, data.dispatcher);
    }
  }
}

/**
 * Removes event listeners from an element
 *
 * @param  {Element|Object}   elem Object to remove listeners from
 * @param  {String|Array=}   type Type of listener to remove. Don't include to remove all events from element.
 * @param  {Function} fn   Specific listener to remove. Don't include to remove listeners for an event type.
 * @method off
 */

function off(elem, type, fn) {
  // Don't want to add a cache object through getElData if not needed
  if (!Dom.hasElData(elem)) return;

  var data = Dom.getElData(elem);

  // If no events exist, nothing to unbind
  if (!data.handlers) {
    return;
  }

  if (Array.isArray(type)) {
    return _handleMultipleEvents(off, elem, type, fn);
  }

  // Utility function
  var removeType = function removeType(t) {
    data.handlers[t] = [];
    _cleanUpEvents(elem, t);
  };

  // Are we removing all bound events?
  if (!type) {
    for (var t in data.handlers) {
      removeType(t);
    }return;
  }

  var handlers = data.handlers[type];

  // If no handlers exist, nothing to unbind
  if (!handlers) return;

  // If no listener was provided, remove all listeners for type
  if (!fn) {
    removeType(type);
    return;
  }

  // We're only removing a single handler
  if (fn.guid) {
    for (var n = 0; n < handlers.length; n++) {
      if (handlers[n].guid === fn.guid) {
        handlers.splice(n--, 1);
      }
    }
  }

  _cleanUpEvents(elem, type);
}

/**
 * Trigger an event for an element
 *
 * @param  {Element|Object}      elem  Element to trigger an event on
 * @param  {Event|Object|String} event A string (the type) or an event object with a type attribute
 * @param  {Object} [hash] data hash to pass along with the event
 * @return {Boolean=} Returned only if default was prevented
 * @method trigger
 */

function trigger(elem, event, hash) {
  // Fetches element data and a reference to the parent (for bubbling).
  // Don't want to add a data object to cache for every parent,
  // so checking hasElData first.
  var elemData = Dom.hasElData(elem) ? Dom.getElData(elem) : {};
  var parent = elem.parentNode || elem.ownerDocument;
  // type = event.type || event,
  // handler;

  // If an event name was passed as a string, creates an event out of it
  if (typeof event === 'string') {
    event = { type: event, target: elem };
  }
  // Normalizes the event properties.
  event = fixEvent(event);

  // If the passed element has a dispatcher, executes the established handlers.
  if (elemData.dispatcher) {
    elemData.dispatcher.call(elem, event, hash);
  }

  // Unless explicitly stopped or the event does not bubble (e.g. media events)
  // recursively calls this function to bubble the event up the DOM.
  if (parent && !event.isPropagationStopped() && event.bubbles === true) {
    trigger.call(null, parent, event, hash);

    // If at the top of the DOM, triggers the default action unless disabled.
  } else if (!parent && !event.defaultPrevented) {
      var targetData = Dom.getElData(event.target);

      // Checks if the target has a default action for this event.
      if (event.target[event.type]) {
        // Temporarily disables event dispatching on the target as we have already executed the handler.
        targetData.disabled = true;
        // Executes the default action.
        if (typeof event.target[event.type] === 'function') {
          event.target[event.type]();
        }
        // Re-enables event dispatching.
        targetData.disabled = false;
      }
    }

  // Inform the triggerer if the default was prevented by returning false
  return !event.defaultPrevented;
}

/**
 * Trigger a listener only once for an event
 *
 * @param  {Element|Object}   elem Element or object to
 * @param  {String|Array}   type Name/type of event
 * @param  {Function} fn Event handler function
 * @method one
 */

function one(elem, type, fn) {
  if (Array.isArray(type)) {
    return _handleMultipleEvents(one, elem, type, fn);
  }
  var func = function func() {
    off(elem, type, func);
    fn.apply(this, arguments);
  };
  // copy the guid to the new function so it can removed using the original function's ID
  func.guid = fn.guid = fn.guid || Guid.newGUID();
  on(elem, type, func);
}

/**
 * Fix a native event to have standard property values
 *
 * @param  {Object} event Event object to fix
 * @return {Object}
 * @private
 * @method fixEvent
 */

function fixEvent(event) {

  function returnTrue() {
    return true;
  }
  function returnFalse() {
    return false;
  }

  // Test if fixing up is needed
  // Used to check if !event.stopPropagation instead of isPropagationStopped
  // But native events return true for stopPropagation, but don't have
  // other expected methods like isPropagationStopped. Seems to be a problem
  // with the Javascript Ninja code. So we're just overriding all events now.
  if (!event || !event.isPropagationStopped) {
    var old = event || _globalWindow2['default'].event;

    event = {};
    // Clone the old object so that we can modify the values event = {};
    // IE8 Doesn't like when you mess with native event properties
    // Firefox returns false for event.hasOwnProperty('type') and other props
    //  which makes copying more difficult.
    // TODO: Probably best to create a whitelist of event props
    for (var key in old) {
      // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y
      // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation
      // and webkitMovementX/Y
      if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY') {
        // Chrome 32+ warns if you try to copy deprecated returnValue, but
        // we still want to if preventDefault isn't supported (IE8).
        if (!(key === 'returnValue' && old.preventDefault)) {
          event[key] = old[key];
        }
      }
    }

    // The event occurred on this element
    if (!event.target) {
      event.target = event.srcElement || _globalDocument2['default'];
    }

    // Handle which other element the event is related to
    if (!event.relatedTarget) {
      event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;
    }

    // Stop the default browser action
    event.preventDefault = function () {
      if (old.preventDefault) {
        old.preventDefault();
      }
      event.returnValue = false;
      old.returnValue = false;
      event.defaultPrevented = true;
    };

    event.defaultPrevented = false;

    // Stop the event from bubbling
    event.stopPropagation = function () {
      if (old.stopPropagation) {
        old.stopPropagation();
      }
      event.cancelBubble = true;
      old.cancelBubble = true;
      event.isPropagationStopped = returnTrue;
    };

    event.isPropagationStopped = returnFalse;

    // Stop the event from bubbling and executing other handlers
    event.stopImmediatePropagation = function () {
      if (old.stopImmediatePropagation) {
        old.stopImmediatePropagation();
      }
      event.isImmediatePropagationStopped = returnTrue;
      event.stopPropagation();
    };

    event.isImmediatePropagationStopped = returnFalse;

    // Handle mouse position
    if (event.clientX != null) {
      var doc = _globalDocument2['default'].documentElement,
          body = _globalDocument2['default'].body;

      event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);
      event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);
    }

    // Handle key presses
    event.which = event.charCode || event.keyCode;

    // Fix button for mouse clicks:
    // 0 == left; 1 == middle; 2 == right
    if (event.button != null) {
      event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;
    }
  }

  // Returns fixed-up instance
  return event;
}

/**
 * Clean up the listener cache and dispatchers
*
 * @param  {Element|Object} elem Element to clean up
 * @param  {String} type Type of event to clean up
 * @private
 * @method _cleanUpEvents
 */
function _cleanUpEvents(elem, type) {
  var data = Dom.getElData(elem);

  // Remove the events of a particular type if there are none left
  if (data.handlers[type].length === 0) {
    delete data.handlers[type];
    // data.handlers[type] = null;
    // Setting to null was causing an error with data.handlers

    // Remove the meta-handler from the element
    if (elem.removeEventListener) {
      elem.removeEventListener(type, data.dispatcher, false);
    } else if (elem.detachEvent) {
      elem.detachEvent('on' + type, data.dispatcher);
    }
  }

  // Remove the events object if there are no types left
  if (Object.getOwnPropertyNames(data.handlers).length <= 0) {
    delete data.handlers;
    delete data.dispatcher;
    delete data.disabled;
  }

  // Finally remove the element data if there is no data left
  if (Object.getOwnPropertyNames(data).length === 0) {
    Dom.removeElData(elem);
  }
}

/**
 * Loops through an array of event types and calls the requested method for each type.
 *
 * @param  {Function} fn   The event method we want to use.
 * @param  {Element|Object} elem Element or object to bind listeners to
 * @param  {String}   type Type of event to bind to.
 * @param  {Function} callback   Event listener.
 * @private
 * @function _handleMultipleEvents
 */
function _handleMultipleEvents(fn, elem, types, callback) {
  types.forEach(function (type) {
    //Call the event method for each one of the types
    fn(elem, type, callback);
  });
}

},{"./dom.js":131,"./guid.js":135,"global/document":1,"global/window":2}],133:[function(_dereq_,module,exports){
/**
 * @file fn.js
 */
'use strict';

exports.__esModule = true;

var _guidJs = _dereq_('./guid.js');

/**
 * Bind (a.k.a proxy or Context). A simple method for changing the context of a function
 * It also stores a unique id on the function so it can be easily removed from events
 *
 * @param  {*}   context The object to bind as scope
 * @param  {Function} fn      The function to be bound to a scope
 * @param  {Number=}   uid     An optional unique ID for the function to be set
 * @return {Function}
 * @private
 * @method bind
 */
var bind = function bind(context, fn, uid) {
  // Make sure the function has a unique ID
  if (!fn.guid) {
    fn.guid = _guidJs.newGUID();
  }

  // Create the new function that changes the context
  var ret = function ret() {
    return fn.apply(context, arguments);
  };

  // Allow for the ability to individualize this function
  // Needed in the case where multiple objects might share the same prototype
  // IF both items add an event listener with the same function, then you try to remove just one
  // it will remove both because they both have the same guid.
  // when using this, you need to use the bind method when you remove the listener as well.
  // currently used in text tracks
  ret.guid = uid ? uid + '_' + fn.guid : fn.guid;

  return ret;
};
exports.bind = bind;

},{"./guid.js":135}],134:[function(_dereq_,module,exports){
/**
 * @file format-time.js
 *
 * Format seconds as a time string, H:MM:SS or M:SS
 * Supplying a guide (in seconds) will force a number of leading zeros
 * to cover the length of the guide
 *
 * @param  {Number} seconds Number of seconds to be turned into a string
 * @param  {Number} guide   Number (in seconds) to model the string after
 * @return {String}         Time formatted as H:MM:SS or M:SS
 * @private
 * @function formatTime
 */
'use strict';

exports.__esModule = true;
function formatTime(seconds) {
  var guide = arguments.length <= 1 || arguments[1] === undefined ? seconds : arguments[1];
  return (function () {
    seconds = seconds < 0 ? 0 : seconds;
    var s = Math.floor(seconds % 60);
    var m = Math.floor(seconds / 60 % 60);
    var h = Math.floor(seconds / 3600);
    var gm = Math.floor(guide / 60 % 60);
    var gh = Math.floor(guide / 3600);

    // handle invalid times
    if (isNaN(seconds) || seconds === Infinity) {
      // '-' is false for all relational operators (e.g. <, >=) so this setting
      // will add the minimum number of fields specified by the guide
      h = m = s = '-';
    }

    // Check if we need to show hours
    h = h > 0 || gh > 0 ? h + ':' : '';

    // If hours are showing, we may need to add a leading zero.
    // Always show at least one digit of minutes.
    m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':';

    // Check if leading zero is need for seconds
    s = s < 10 ? '0' + s : s;

    return h + m + s;
  })();
}

exports['default'] = formatTime;
module.exports = exports['default'];

},{}],135:[function(_dereq_,module,exports){
/**
 * @file guid.js
 *
 * Unique ID for an element or function
 * @type {Number}
 * @private
 */
"use strict";

exports.__esModule = true;
exports.newGUID = newGUID;
var _guid = 1;

/**
 * Get the next unique ID
 *
 * @return {String} 
 * @function newGUID
 */

function newGUID() {
  return _guid++;
}

},{}],136:[function(_dereq_,module,exports){
/**
 * @file log.js
 */
'use strict';

exports.__esModule = true;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _globalWindow = _dereq_('global/window');

var _globalWindow2 = _interopRequireDefault(_globalWindow);

/**
 * Log plain debug messages
 */
var log = function log() {
  _logType(null, arguments);
};

/**
 * Keep a history of log messages
 * @type {Array}
 */
log.history = [];

/**
 * Log error messages
 */
log.error = function () {
  _logType('error', arguments);
};

/**
 * Log warning messages
 */
log.warn = function () {
  _logType('warn', arguments);
};

/**
 * Log messages to the console and history based on the type of message
 *
 * @param  {String} type The type of message, or `null` for `log`
 * @param  {Object} args The args to be passed to the log
 * @private
 * @method _logType
 */
function _logType(type, args) {
  // convert args to an array to get array functions
  var argsArray = Array.prototype.slice.call(args);
  // if there's no console then don't try to output messages
  // they will still be stored in log.history
  // Was setting these once outside of this function, but containing them
  // in the function makes it easier to test cases where console doesn't exist
  var noop = function noop() {};

  var console = _globalWindow2['default']['console'] || {
    'log': noop,
    'warn': noop,
    'error': noop
  };

  if (type) {
    // add the type to the front of the message
    argsArray.unshift(type.toUpperCase() + ':');
  } else {
    // default to log with no prefix
    type = 'log';
  }

  // add to history
  log.history.push(argsArray);

  // add console prefix after adding to history
  argsArray.unshift('VIDEOJS:');

  // call appropriate log function
/*   if (console[type].apply) {
    console[type].apply(console, argsArray);
  } else {
    // ie8 doesn't allow error.apply, but it will just join() the array anyway
    console[type](argsArray.join(' '));
  } */
}

exports['default'] = log;
module.exports = exports['default'];

},{"global/window":2}],137:[function(_dereq_,module,exports){
/**
 * @file merge-options.js
 */
'use strict';

exports.__esModule = true;
exports['default'] = mergeOptions;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _lodashCompatObjectMerge = _dereq_('lodash-compat/object/merge');

var _lodashCompatObjectMerge2 = _interopRequireDefault(_lodashCompatObjectMerge);

function isPlain(obj) {
  return !!obj && typeof obj === 'object' && obj.toString() === '[object Object]' && obj.constructor === Object;
}

/**
 * Merge customizer. video.js simply overwrites non-simple objects
 * (like arrays) instead of attempting to overlay them.
 * @see https://lodash.com/docs#merge
 */
var customizer = function customizer(destination, source) {
  // If we're not working with a plain object, copy the value as is
  // If source is an array, for instance, it will replace destination
  if (!isPlain(source)) {
    return source;
  }

  // If the new value is a plain object but the first object value is not
  // we need to create a new object for the first object to merge with.
  // This makes it consistent with how merge() works by default
  // and also protects from later changes the to first object affecting
  // the second object's values.
  if (!isPlain(destination)) {
    return mergeOptions(source);
  }
};

/**
 * Merge one or more options objects, recursively merging **only**
 * plain object properties.  Previously `deepMerge`.
 *
 * @param  {...Object} source One or more objects to merge
 * @returns {Object}          a new object that is the union of all
 * provided objects
 * @function mergeOptions
 */

function mergeOptions() {
  // contruct the call dynamically to handle the variable number of
  // objects to merge
  var args = Array.prototype.slice.call(arguments);

  // unshift an empty object into the front of the call as the target
  // of the merge
  args.unshift({});

  // customize conflict resolution to match our historical merge behavior
  args.push(customizer);

  _lodashCompatObjectMerge2['default'].apply(null, args);

  // return the mutated result object
  return args[0];
}

module.exports = exports['default'];

},{"lodash-compat/object/merge":40}],138:[function(_dereq_,module,exports){
'use strict';

exports.__esModule = true;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _globalDocument = _dereq_('global/document');

var _globalDocument2 = _interopRequireDefault(_globalDocument);

var createStyleElement = function createStyleElement(className) {
  var style = _globalDocument2['default'].createElement('style');
  style.className = className;

  return style;
};

exports.createStyleElement = createStyleElement;
var setTextContent = function setTextContent(el, content) {
  if (el.styleSheet) {
    el.styleSheet.cssText = content;
  } else {
    el.textContent = content;
  }
};
exports.setTextContent = setTextContent;

},{"global/document":1}],139:[function(_dereq_,module,exports){
'use strict';

exports.__esModule = true;
exports.createTimeRanges = createTimeRanges;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _logJs = _dereq_('./log.js');

var _logJs2 = _interopRequireDefault(_logJs);

/**
 * @file time-ranges.js
 *
 * Should create a fake TimeRange object
 * Mimics an HTML5 time range instance, which has functions that
 * return the start and end times for a range
 * TimeRanges are returned by the buffered() method
 *
 * @param  {(Number|Array)} Start of a single range or an array of ranges
 * @param  {Number} End of a single range
 * @private
 * @method createTimeRanges
 */

function createTimeRanges(start, end) {
  if (Array.isArray(start)) {
    return createTimeRangesObj(start);
  } else if (start === undefined || end === undefined) {
    return createTimeRangesObj();
  }
  return createTimeRangesObj([[start, end]]);
}

exports.createTimeRange = createTimeRanges;

function createTimeRangesObj(ranges) {
  if (ranges === undefined || ranges.length === 0) {
    return {
      length: 0,
      start: function start() {
        throw new Error('This TimeRanges object is empty');
      },
      end: function end() {
        throw new Error('This TimeRanges object is empty');
      }
    };
  }
  return {
    length: ranges.length,
    start: getRange.bind(null, 'start', 0, ranges),
    end: getRange.bind(null, 'end', 1, ranges)
  };
}

function getRange(fnName, valueIndex, ranges, rangeIndex) {
  if (rangeIndex === undefined) {
    _logJs2['default'].warn('DEPRECATED: Function \'' + fnName + '\' on \'TimeRanges\' called without an index argument.');
    rangeIndex = 0;
  }
  rangeCheck(fnName, rangeIndex, ranges.length - 1);
  return ranges[rangeIndex][valueIndex];
}

function rangeCheck(fnName, index, maxIndex) {
  if (index < 0 || index > maxIndex) {
    throw new Error('Failed to execute \'' + fnName + '\' on \'TimeRanges\': The index provided (' + index + ') is greater than or equal to the maximum bound (' + maxIndex + ').');
  }
}

},{"./log.js":136}],140:[function(_dereq_,module,exports){
/**
 * @file to-title-case.js
 *
 * Uppercase the first letter of a string
 *
 * @param  {String} string String to be uppercased
 * @return {String}
 * @private
 * @method toTitleCase
 */
"use strict";

exports.__esModule = true;
function toTitleCase(string) {
  return string.charAt(0).toUpperCase() + string.slice(1);
}

exports["default"] = toTitleCase;
module.exports = exports["default"];

},{}],141:[function(_dereq_,module,exports){
/**
 * @file url.js
 */
'use strict';

exports.__esModule = true;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _globalDocument = _dereq_('global/document');

var _globalDocument2 = _interopRequireDefault(_globalDocument);

var _globalWindow = _dereq_('global/window');

var _globalWindow2 = _interopRequireDefault(_globalWindow);

/**
 * Resolve and parse the elements of a URL
 *
 * @param  {String} url The url to parse
 * @return {Object}     An object of url details
 * @method parseUrl
 */
var parseUrl = function parseUrl(url) {
  var props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host'];

  // add the url to an anchor and let the browser parse the URL
  var a = _globalDocument2['default'].createElement('a');
  a.href = url;

  // IE8 (and 9?) Fix
  // ie8 doesn't parse the URL correctly until the anchor is actually
  // added to the body, and an innerHTML is needed to trigger the parsing
  var addToBody = a.host === '' && a.protocol !== 'file:';
  var div = undefined;
  if (addToBody) {
    div = _globalDocument2['default'].createElement('div');
    div.innerHTML = '<a href="' + url + '"></a>';
    a = div.firstChild;
    // prevent the div from affecting layout
    div.setAttribute('style', 'display:none; position:absolute;');
    _globalDocument2['default'].body.appendChild(div);
  }

  // Copy the specific URL properties to a new object
  // This is also needed for IE8 because the anchor loses its
  // properties when it's removed from the dom
  var details = {};
  for (var i = 0; i < props.length; i++) {
    details[props[i]] = a[props[i]];
  }

  // IE9 adds the port to the host property unlike everyone else. If
  // a port identifier is added for standard ports, strip it.
  if (details.protocol === 'http:') {
    details.host = details.host.replace(/:80$/, '');
  }
  if (details.protocol === 'https:') {
    details.host = details.host.replace(/:443$/, '');
  }

  if (addToBody) {
    _globalDocument2['default'].body.removeChild(div);
  }

  return details;
};

exports.parseUrl = parseUrl;
/**
 * Get absolute version of relative URL. Used to tell flash correct URL.
 * http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue
 *
 * @param  {String} url URL to make absolute
 * @return {String}     Absolute URL
 * @private
 * @method getAbsoluteURL
 */
var getAbsoluteURL = function getAbsoluteURL(url) {
  // Check if absolute URL
  if (!url.match(/^https?:\/\//)) {
    // Convert to absolute URL. Flash hosted off-site needs an absolute URL.
    var div = _globalDocument2['default'].createElement('div');
    div.innerHTML = '<a href="' + url + '">x</a>';
    url = div.firstChild.href;
  }

  return url;
};

exports.getAbsoluteURL = getAbsoluteURL;
/**
 * Returns the extension of the passed file name. It will return an empty string if you pass an invalid path
 *
 * @param {String}    path    The fileName path like '/path/to/file.mp4'
 * @returns {String}          The extension in lower case or an empty string if no extension could be found.
 * @method getFileExtension
 */
var getFileExtension = function getFileExtension(path) {
  if (typeof path === 'string') {
    var splitPathRe = /^(\/?)([\s\S]*?)((?:\.{1,2}|[^\/]+?)(\.([^\.\/\?]+)))(?:[\/]*|[\?].*)$/i;
    var pathParts = splitPathRe.exec(path);

    if (pathParts) {
      return pathParts.pop().toLowerCase();
    }
  }

  return '';
};

exports.getFileExtension = getFileExtension;
/**
 * Returns whether the url passed is a cross domain request or not.
 *
 * @param {String} url The url to check
 * @return {Boolean}   Whether it is a cross domain request or not
 * @method isCrossOrigin
 */
var isCrossOrigin = function isCrossOrigin(url) {
  var winLoc = _globalWindow2['default'].location;
  var urlInfo = parseUrl(url);

  // IE8 protocol relative urls will return ':' for protocol
  var srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol;

  // Check if url is for another domain/origin
  // IE8 doesn't know location.origin, so we won't rely on it here
  var crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;

  return crossOrigin;
};
exports.isCrossOrigin = isCrossOrigin;

},{"global/document":1,"global/window":2}],142:[function(_dereq_,module,exports){
/**
 * @file video.js
 */
'use strict';

exports.__esModule = true;

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _globalDocument = _dereq_('global/document');

var _globalDocument2 = _interopRequireDefault(_globalDocument);

var _setup = _dereq_('./setup');

var setup = _interopRequireWildcard(_setup);

var _utilsStylesheetJs = _dereq_('./utils/stylesheet.js');

var stylesheet = _interopRequireWildcard(_utilsStylesheetJs);

var _component = _dereq_('./component');

var _component2 = _interopRequireDefault(_component);

var _eventTarget = _dereq_('./event-target');

var _eventTarget2 = _interopRequireDefault(_eventTarget);

var _utilsEventsJs = _dereq_('./utils/events.js');

var Events = _interopRequireWildcard(_utilsEventsJs);

var _player = _dereq_('./player');

var _player2 = _interopRequireDefault(_player);

var _pluginsJs = _dereq_('./plugins.js');

var _pluginsJs2 = _interopRequireDefault(_pluginsJs);

var _srcJsUtilsMergeOptionsJs = _dereq_('../../src/js/utils/merge-options.js');

var _srcJsUtilsMergeOptionsJs2 = _interopRequireDefault(_srcJsUtilsMergeOptionsJs);

var _utilsFnJs = _dereq_('./utils/fn.js');

var Fn = _interopRequireWildcard(_utilsFnJs);

var _tracksTextTrackJs = _dereq_('./tracks/text-track.js');

var _tracksTextTrackJs2 = _interopRequireDefault(_tracksTextTrackJs);

var _objectAssign = _dereq_('object.assign');

var _objectAssign2 = _interopRequireDefault(_objectAssign);

var _utilsTimeRangesJs = _dereq_('./utils/time-ranges.js');

var _utilsFormatTimeJs = _dereq_('./utils/format-time.js');

var _utilsFormatTimeJs2 = _interopRequireDefault(_utilsFormatTimeJs);

var _utilsLogJs = _dereq_('./utils/log.js');

var _utilsLogJs2 = _interopRequireDefault(_utilsLogJs);

var _utilsDomJs = _dereq_('./utils/dom.js');

var Dom = _interopRequireWildcard(_utilsDomJs);

var _utilsBrowserJs = _dereq_('./utils/browser.js');

var browser = _interopRequireWildcard(_utilsBrowserJs);

var _utilsUrlJs = _dereq_('./utils/url.js');

var Url = _interopRequireWildcard(_utilsUrlJs);

var _extendJs = _dereq_('./extend.js');

var _extendJs2 = _interopRequireDefault(_extendJs);

var _lodashCompatObjectMerge = _dereq_('lodash-compat/object/merge');

var _lodashCompatObjectMerge2 = _interopRequireDefault(_lodashCompatObjectMerge);

var _utilsCreateDeprecationProxyJs = _dereq_('./utils/create-deprecation-proxy.js');

var _utilsCreateDeprecationProxyJs2 = _interopRequireDefault(_utilsCreateDeprecationProxyJs);

var _xhr = _dereq_('xhr');

var _xhr2 = _interopRequireDefault(_xhr);

// Include the built-in techs

var _techTechJs = _dereq_('./tech/tech.js');

var _techTechJs2 = _interopRequireDefault(_techTechJs);

var _techHtml5Js = _dereq_('./tech/html5.js');

var _techHtml5Js2 = _interopRequireDefault(_techHtml5Js);

var _techFlashJs = _dereq_('./tech/flash.js');

var _techFlashJs2 = _interopRequireDefault(_techFlashJs);

// HTML5 Element Shim for IE8
if (typeof HTMLVideoElement === 'undefined') {
  _globalDocument2['default'].createElement('video');
  _globalDocument2['default'].createElement('audio');
  _globalDocument2['default'].createElement('track');
}

/**
 * Doubles as the main function for users to create a player instance and also
 * the main library object.
 * The `videojs` function can be used to initialize or retrieve a player.
 * ```js
 *     var myPlayer = videojs('my_video_id');
 * ```
 *
 * @param  {String|Element} id      Video element or video element ID
 * @param  {Object=} options        Optional options object for config/settings
 * @param  {Function=} ready        Optional ready callback
 * @return {Player}                 A player instance
 * @mixes videojs
 * @method videojs
 */
var videojs = function videojs(id, options, ready) {
  var tag = undefined; // Element of ID

  // Allow for element or ID to be passed in
  // String ID
  if (typeof id === 'string') {

    // Adjust for jQuery ID syntax
    if (id.indexOf('#') === 0) {
      id = id.slice(1);
    }

    // If a player instance has already been created for this ID return it.
    if (videojs.getPlayers()[id]) {

      // If options or ready funtion are passed, warn
      if (options) {
        _utilsLogJs2['default'].warn('Player "' + id + '" is already initialised. Options will not be applied.');
      }

      if (ready) {
        videojs.getPlayers()[id].ready(ready);
      }

      return videojs.getPlayers()[id];

      // Otherwise get element for ID
    } else {
        tag = Dom.getEl(id);
      }

    // ID is a media element
  } else {
      tag = id;
    }

  // Check for a useable element
  if (!tag || !tag.nodeName) {
    // re: nodeName, could be a box div also
    throw new TypeError('The element or ID supplied is not valid. (videojs)'); // Returns
  }

  // Element may have a player attr referring to an already created player instance.
  // If not, set up a new player and return the instance.
  return tag['player'] || _player2['default'].players[tag.playerId] || new _player2['default'](tag, options, ready);
};

// Add default styles
var style = Dom.$('.vjs-styles-defaults');
if (!style) {
  style = stylesheet.createStyleElement('vjs-styles-defaults');
  var head = Dom.$('head');
  head.insertBefore(style, head.firstChild);
  stylesheet.setTextContent(style, '\n    .video-js {\n      width: 300px;\n      height: 150px;\n    }\n\n    .vjs-fluid {\n      padding-top: 56.25%\n    }\n  ');
}

// Run Auto-load players
// You have to wait at least once in case this script is loaded after your video in the DOM (weird behavior only with minified version)
setup.autoSetupTimeout(1, videojs);

/*
 * Current software version (semver)
 *
 * @type {String}
 */
videojs.VERSION = '5.6.0';

/**
 * The global options object. These are the settings that take effect
 * if no overrides are specified when the player is created.
 *
 * ```js
 *     videojs.options.autoplay = true
 *     // -> all players will autoplay by default
 * ```
 *
 * @type {Object}
 */
videojs.options = _player2['default'].prototype.options_;

/**
 * Get an object with the currently created players, keyed by player ID
 *
 * @return {Object} The created players
 * @mixes videojs
 * @method getPlayers
 */
videojs.getPlayers = function () {
  return _player2['default'].players;
};

/**
 * For backward compatibility, expose players object.
 *
 * @deprecated
 * @memberOf videojs
 * @property {Object|Proxy} players
 */
videojs.players = _utilsCreateDeprecationProxyJs2['default'](_player2['default'].players, {
  get: 'Access to videojs.players is deprecated; use videojs.getPlayers instead',
  set: 'Modification of videojs.players is deprecated'
});

/**
 * Get a component class object by name
 * ```js
 *     var VjsButton = videojs.getComponent('Button');
 *     // Create a new instance of the component
 *     var myButton = new VjsButton(myPlayer);
 * ```
 *
 * @return {Component} Component identified by name
 * @mixes videojs
 * @method getComponent
 */
videojs.getComponent = _component2['default'].getComponent;

/**
 * Register a component so it can referred to by name
 * Used when adding to other
 * components, either through addChild
 * `component.addChild('myComponent')`
 * or through default children options
 * `{ children: ['myComponent'] }`.
 * ```js
 *     // Get a component to subclass
 *     var VjsButton = videojs.getComponent('Button');
 *     // Subclass the component (see 'extend' doc for more info)
 *     var MySpecialButton = videojs.extend(VjsButton, {});
 *     // Register the new component
 *     VjsButton.registerComponent('MySepcialButton', MySepcialButton);
 *     // (optionally) add the new component as a default player child
 *     myPlayer.addChild('MySepcialButton');
 * ```
 * NOTE: You could also just initialize the component before adding.
 * `component.addChild(new MyComponent());`
 *
 * @param {String} The class name of the component
 * @param {Component} The component class
 * @return {Component} The newly registered component
 * @mixes videojs
 * @method registerComponent
 */
videojs.registerComponent = function (name, comp) {
  if (_techTechJs2['default'].isTech(comp)) {
    _utilsLogJs2['default'].warn('The ' + name + ' tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)');
  }

  _component2['default'].registerComponent.call(_component2['default'], name, comp);
};

/**
 * Get a Tech class object by name
 * ```js
 *     var Html5 = videojs.getTech('Html5');
 *     // Create a new instance of the component
 *     var html5 = new Html5(options);
 * ```
 *
 * @return {Tech} Tech identified by name
 * @mixes videojs
 * @method getComponent
 */
videojs.getTech = _techTechJs2['default'].getTech;

/**
 * Register a Tech so it can referred to by name.
 * This is used in the tech order for the player.
 *
 * ```js
 *     // get the Html5 Tech
 *     var Html5 = videojs.getTech('Html5');
 *     var MyTech = videojs.extend(Html5, {});
 *     // Register the new Tech
 *     VjsButton.registerTech('Tech', MyTech);
 *     var player = videojs('myplayer', {
 *       techOrder: ['myTech', 'html5']
 *     });
 * ```
 *
 * @param {String} The class name of the tech
 * @param {Tech} The tech class
 * @return {Tech} The newly registered Tech
 * @mixes videojs
 * @method registerTech
 */
videojs.registerTech = _techTechJs2['default'].registerTech;

/**
 * A suite of browser and device tests
 *
 * @type {Object}
 * @private
 */
videojs.browser = browser;

/**
 * Whether or not the browser supports touch events. Included for backward
 * compatibility with 4.x, but deprecated. Use `videojs.browser.TOUCH_ENABLED`
 * instead going forward.
 *
 * @deprecated
 * @type {Boolean}
 */
videojs.TOUCH_ENABLED = browser.TOUCH_ENABLED;

/**
 * Subclass an existing class
 * Mimics ES6 subclassing with the `extend` keyword
 * ```js
 *     // Create a basic javascript 'class'
 *     function MyClass(name){
 *       // Set a property at initialization
 *       this.myName = name;
 *     }
 *     // Create an instance method
 *     MyClass.prototype.sayMyName = function(){
 *       alert(this.myName);
 *     };
 *     // Subclass the exisitng class and change the name
 *     // when initializing
 *     var MySubClass = videojs.extend(MyClass, {
 *       constructor: function(name) {
 *         // Call the super class constructor for the subclass
 *         MyClass.call(this, name)
 *       }
 *     });
 *     // Create an instance of the new sub class
 *     var myInstance = new MySubClass('John');
 *     myInstance.sayMyName(); // -> should alert "John"
 * ```
 *
 * @param {Function} The Class to subclass
 * @param {Object} An object including instace methods for the new class
 *                   Optionally including a `constructor` function
 * @return {Function} The newly created subclass
 * @mixes videojs
 * @method extend
 */
videojs.extend = _extendJs2['default'];

/**
 * Merge two options objects recursively
 * Performs a deep merge like lodash.merge but **only merges plain objects**
 * (not arrays, elements, anything else)
 * Other values will be copied directly from the second object.
 * ```js
 *     var defaultOptions = {
 *       foo: true,
 *       bar: {
 *         a: true,
 *         b: [1,2,3]
 *       }
 *     };
 *     var newOptions = {
 *       foo: false,
 *       bar: {
 *         b: [4,5,6]
 *       }
 *     };
 *     var result = videojs.mergeOptions(defaultOptions, newOptions);
 *     // result.foo = false;
 *     // result.bar.a = true;
 *     // result.bar.b = [4,5,6];
 * ```
 *
 * @param {Object} defaults  The options object whose values will be overriden
 * @param {Object} overrides The options object with values to override the first
 * @param {Object} etc       Any number of additional options objects
 *
 * @return {Object} a new object with the merged values
 * @mixes videojs
 * @method mergeOptions
 */
videojs.mergeOptions = _srcJsUtilsMergeOptionsJs2['default'];

/**
 * Change the context (this) of a function
 *
 *     videojs.bind(newContext, function(){
 *       this === newContext
 *     });
 *
 * NOTE: as of v5.0 we require an ES5 shim, so you should use the native
 * `function(){}.bind(newContext);` instead of this.
 *
 * @param  {*}        context The object to bind as scope
 * @param  {Function} fn      The function to be bound to a scope
 * @param  {Number=}  uid     An optional unique ID for the function to be set
 * @return {Function}
 */
videojs.bind = Fn.bind;

/**
 * Create a Video.js player plugin
 * Plugins are only initialized when options for the plugin are included
 * in the player options, or the plugin function on the player instance is
 * called.
 * **See the plugin guide in the docs for a more detailed example**
 * ```js
 *     // Make a plugin that alerts when the player plays
 *     videojs.plugin('myPlugin', function(myPluginOptions) {
 *       myPluginOptions = myPluginOptions || {};
 *
 *       var player = this;
 *       var alertText = myPluginOptions.text || 'Player is playing!'
 *
 *       player.on('play', function(){
 *         alert(alertText);
 *       });
 *     });
 *     // USAGE EXAMPLES
 *     // EXAMPLE 1: New player with plugin options, call plugin immediately
 *     var player1 = videojs('idOne', {
 *       myPlugin: {
 *         text: 'Custom text!'
 *       }
 *     });
 *     // Click play
 *     // --> Should alert 'Custom text!'
 *     // EXAMPLE 3: New player, initialize plugin later
 *     var player3 = videojs('idThree');
 *     // Click play
 *     // --> NO ALERT
 *     // Click pause
 *     // Initialize plugin using the plugin function on the player instance
 *     player3.myPlugin({
 *       text: 'Plugin added later!'
 *     });
 *     // Click play
 *     // --> Should alert 'Plugin added later!'
 * ```
 *
 * @param {String} name The plugin name
 * @param {Function} fn The plugin function that will be called with options
 * @mixes videojs
 * @method plugin
 */
videojs.plugin = _pluginsJs2['default'];

/**
 * Adding languages so that they're available to all players.
 * ```js
 *     videojs.addLanguage('es', { 'Hello': 'Hola' });
 * ```
 *
 * @param  {String} code The language code or dictionary property
 * @param  {Object} data The data values to be translated
 * @return {Object} The resulting language dictionary object
 * @mixes videojs
 * @method addLanguage
 */
videojs.addLanguage = function (code, data) {
  var _merge;

  code = ('' + code).toLowerCase();
  return _lodashCompatObjectMerge2['default'](videojs.options.languages, (_merge = {}, _merge[code] = data, _merge))[code];
};

/**
 * Log debug messages.
 *
 * @param {...Object} messages One or more messages to log
 */
videojs.log = _utilsLogJs2['default'];

/**
 * Creates an emulated TimeRange object.
 *
 * @param  {Number|Array} start Start time in seconds or an array of ranges
 * @param  {Number} end   End time in seconds
 * @return {Object}       Fake TimeRange object
 * @method createTimeRange
 */
videojs.createTimeRange = videojs.createTimeRanges = _utilsTimeRangesJs.createTimeRanges;

/**
 * Format seconds as a time string, H:MM:SS or M:SS
 * Supplying a guide (in seconds) will force a number of leading zeros
 * to cover the length of the guide
 *
 * @param  {Number} seconds Number of seconds to be turned into a string
 * @param  {Number} guide   Number (in seconds) to model the string after
 * @return {String}         Time formatted as H:MM:SS or M:SS
 * @method formatTime
 */
videojs.formatTime = _utilsFormatTimeJs2['default'];

/**
 * Resolve and parse the elements of a URL
 *
 * @param  {String} url The url to parse
 * @return {Object}     An object of url details
 * @method parseUrl
 */
videojs.parseUrl = Url.parseUrl;

/**
 * Returns whether the url passed is a cross domain request or not.
 *
 * @param {String} url The url to check
 * @return {Boolean}   Whether it is a cross domain request or not
 * @method isCrossOrigin
 */
videojs.isCrossOrigin = Url.isCrossOrigin;

/**
 * Event target class.
 *
 * @type {Function}
 */
videojs.EventTarget = _eventTarget2['default'];

/**
 * Add an event listener to element
 * It stores the handler function in a separate cache object
 * and adds a generic handler to the element's event,
 * along with a unique id (guid) to the element.
 *
 * @param  {Element|Object}   elem Element or object to bind listeners to
 * @param  {String|Array}   type Type of event to bind to.
 * @param  {Function} fn   Event listener.
 * @method on
 */
videojs.on = Events.on;

/**
 * Trigger a listener only once for an event
 *
 * @param  {Element|Object}   elem Element or object to
 * @param  {String|Array}   type Name/type of event
 * @param  {Function} fn Event handler function
 * @method one
 */
videojs.one = Events.one;

/**
 * Removes event listeners from an element
 *
 * @param  {Element|Object}   elem Object to remove listeners from
 * @param  {String|Array=}   type Type of listener to remove. Don't include to remove all events from element.
 * @param  {Function} fn   Specific listener to remove. Don't include to remove listeners for an event type.
 * @method off
 */
videojs.off = Events.off;

/**
 * Trigger an event for an element
 *
 * @param  {Element|Object}      elem  Element to trigger an event on
 * @param  {Event|Object|String} event A string (the type) or an event object with a type attribute
 * @param  {Object} [hash] data hash to pass along with the event
 * @return {Boolean=} Returned only if default was prevented
 * @method trigger
 */
videojs.trigger = Events.trigger;

/**
 * A cross-browser XMLHttpRequest wrapper. Here's a simple example:
 *
 *     videojs.xhr({
 *       body: someJSONString,
 *       uri: "/foo",
 *       headers: {
 *         "Content-Type": "application/json"
 *       }
 *     }, function (err, resp, body) {
 *       // check resp.statusCode
 *     });
 *
 * Check out the [full
 * documentation](https://github.com/Raynos/xhr/blob/v2.1.0/README.md)
 * for more options.
 *
 * @param {Object} options settings for the request.
 * @return {XMLHttpRequest|XDomainRequest} the request object.
 * @see https://github.com/Raynos/xhr
 */
videojs.xhr = _xhr2['default'];

/**
 * TextTrack class
 *
 * @type {Function}
 */
videojs.TextTrack = _tracksTextTrackJs2['default'];

/**
 * Determines, via duck typing, whether or not a value is a DOM element.
 *
 * @method isEl
 * @param  {Mixed} value
 * @return {Boolean}
 */
videojs.isEl = Dom.isEl;

/**
 * Determines, via duck typing, whether or not a value is a text node.
 *
 * @method isTextNode
 * @param  {Mixed} value
 * @return {Boolean}
 */
videojs.isTextNode = Dom.isTextNode;

/**
 * Creates an element and applies properties.
 *
 * @method createEl
 * @param  {String} [tagName='div'] Name of tag to be created.
 * @param  {Object} [properties={}] Element properties to be applied.
 * @param  {Object} [attributes={}] Element attributes to be applied.
 * @return {Element}
 */
videojs.createEl = Dom.createEl;

/**
 * Check if an element has a CSS class
 *
 * @method hasClass
 * @param {Element} element Element to check
 * @param {String} classToCheck Classname to check
 */
videojs.hasClass = Dom.hasElClass;

/**
 * Add a CSS class name to an element
 *
 * @method addClass
 * @param {Element} element    Element to add class name to
 * @param {String} classToAdd Classname to add
 */
videojs.addClass = Dom.addElClass;

/**
 * Remove a CSS class name from an element
 *
 * @method removeClass
 * @param {Element} element    Element to remove from class name
 * @param {String} classToRemove Classname to remove
 */
videojs.removeClass = Dom.removeElClass;

/**
 * Adds or removes a CSS class name on an element depending on an optional
 * condition or the presence/absence of the class name.
 *
 * @method toggleElClass
 * @param  {Element} element
 * @param  {String} classToToggle
 * @param  {Boolean|Function} [predicate]
 *         Can be a function that returns a Boolean. If `true`, the class
 *         will be added; if `false`, the class will be removed. If not
 *         given, the class will be added if not present and vice versa.
 */
videojs.toggleClass = Dom.toggleElClass;

/**
 * Apply attributes to an HTML element.
 *
 * @method setAttributes
 * @param  {Element} el         Target element.
 * @param  {Object=} attributes Element attributes to be applied.
 */
videojs.setAttributes = Dom.setElAttributes;

/**
 * Get an element's attribute values, as defined on the HTML tag
 * Attributes are not the same as properties. They're defined on the tag
 * or with setAttribute (which shouldn't be used with HTML)
 * This will return true or false for boolean attributes.
 *
 * @method getAttributes
 * @param  {Element} tag Element from which to get tag attributes
 * @return {Object}
 */
videojs.getAttributes = Dom.getElAttributes;

/**
 * Empties the contents of an element.
 *
 * @method emptyEl
 * @param  {Element} el
 * @return {Element}
 */
videojs.emptyEl = Dom.emptyEl;

/**
 * Normalizes and appends content to an element.
 *
 * The content for an element can be passed in multiple types and
 * combinations, whose behavior is as follows:
 *
 * - String
 *   Normalized into a text node.
 *
 * - Element, TextNode
 *   Passed through.
 *
 * - Array
 *   A one-dimensional array of strings, elements, nodes, or functions (which
 *   return single strings, elements, or nodes).
 *
 * - Function
 *   If the sole argument, is expected to produce a string, element,
 *   node, or array.
 *
 * @method appendContent
 * @param  {Element} el
 * @param  {String|Element|TextNode|Array|Function} content
 * @return {Element}
 */
videojs.appendContent = Dom.appendContent;

/**
 * Normalizes and inserts content into an element; this is identical to
 * `appendContent()`, except it empties the element first.
 *
 * The content for an element can be passed in multiple types and
 * combinations, whose behavior is as follows:
 *
 * - String
 *   Normalized into a text node.
 *
 * - Element, TextNode
 *   Passed through.
 *
 * - Array
 *   A one-dimensional array of strings, elements, nodes, or functions (which
 *   return single strings, elements, or nodes).
 *
 * - Function
 *   If the sole argument, is expected to produce a string, element,
 *   node, or array.
 *
 * @method insertContent
 * @param  {Element} el
 * @param  {String|Element|TextNode|Array|Function} content
 * @return {Element}
 */
videojs.insertContent = Dom.insertContent;

/*
 * Custom Universal Module Definition (UMD)
 *
 * Video.js will never be a non-browser lib so we can simplify UMD a bunch and
 * still support requirejs and browserify. This also needs to be closure
 * compiler compatible, so string keys are used.
 */
if (typeof define === 'function' && define['amd']) {
  define('videojs', [], function () {
    return videojs;
  });

  // checking that module is an object too because of umdjs/umd#35
} else if (typeof exports === 'object' && typeof module === 'object') {
    module['exports'] = videojs;
  }

exports['default'] = videojs;
module.exports = exports['default'];

},{"../../src/js/utils/merge-options.js":137,"./component":66,"./event-target":98,"./extend.js":99,"./player":107,"./plugins.js":108,"./setup":112,"./tech/flash.js":115,"./tech/html5.js":116,"./tech/tech.js":118,"./tracks/text-track.js":127,"./utils/browser.js":128,"./utils/create-deprecation-proxy.js":130,"./utils/dom.js":131,"./utils/events.js":132,"./utils/fn.js":133,"./utils/format-time.js":134,"./utils/log.js":136,"./utils/stylesheet.js":138,"./utils/time-ranges.js":139,"./utils/url.js":141,"global/document":1,"lodash-compat/object/merge":40,"object.assign":45,"xhr":55}]},{},[142])(142)
});


/* vtt.js - v0.12.1 (https://github.com/mozilla/vtt.js) built on 08-07-2015 */

(function(root) {
  var vttjs = root.vttjs = {};
  var cueShim = vttjs.VTTCue;
  var regionShim = vttjs.VTTRegion;
  var oldVTTCue = root.VTTCue;
  var oldVTTRegion = root.VTTRegion;

  vttjs.shim = function() {
    vttjs.VTTCue = cueShim;
    vttjs.VTTRegion = regionShim;
  };

  vttjs.restore = function() {
    vttjs.VTTCue = oldVTTCue;
    vttjs.VTTRegion = oldVTTRegion;
  };
}(this));

/**
 * Copyright 2013 vtt.js Contributors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, vttjs) {

  var autoKeyword = "auto";
  var directionSetting = {
    "": true,
    "lr": true,
    "rl": true
  };
  var alignSetting = {
    "start": true,
    "middle": true,
    "end": true,
    "left": true,
    "right": true
  };

  function findDirectionSetting(value) {
    if (typeof value !== "string") {
      return false;
    }
    var dir = directionSetting[value.toLowerCase()];
    return dir ? value.toLowerCase() : false;
  }

  function findAlignSetting(value) {
    if (typeof value !== "string") {
      return false;
    }
    var align = alignSetting[value.toLowerCase()];
    return align ? value.toLowerCase() : false;
  }

  function extend(obj) {
    var i = 1;
    for (; i < arguments.length; i++) {
      var cobj = arguments[i];
      for (var p in cobj) {
        obj[p] = cobj[p];
      }
    }

    return obj;
  }

  function VTTCue(startTime, endTime, text) {
    var cue = this;
    var isIE8 = (/MSIE\s8\.0/).test(navigator.userAgent);
    var baseObj = {};

    if (isIE8) {
      cue = document.createElement('custom');
    } else {
      baseObj.enumerable = true;
    }

    /**
     * Shim implementation specific properties. These properties are not in
     * the spec.
     */

    // Lets us know when the VTTCue's data has changed in such a way that we need
    // to recompute its display state. This lets us compute its display state
    // lazily.
    cue.hasBeenReset = false;

    /**
     * VTTCue and TextTrackCue properties
     * http://dev.w3.org/html5/webvtt/#vttcue-interface
     */

    var _id = "";
    var _pauseOnExit = false;
    var _startTime = startTime;
    var _endTime = endTime;
    var _text = text;
    var _region = null;
    var _vertical = "";
    var _snapToLines = true;
    var _line = "auto";
    var _lineAlign = "start";
    var _position = 50;
    var _positionAlign = "middle";
    var _size = 50;
    var _align = "middle";

    Object.defineProperty(cue,
      "id", extend({}, baseObj, {
        get: function() {
          return _id;
        },
        set: function(value) {
          _id = "" + value;
        }
      }));

    Object.defineProperty(cue,
      "pauseOnExit", extend({}, baseObj, {
        get: function() {
          return _pauseOnExit;
        },
        set: function(value) {
          _pauseOnExit = !!value;
        }
      }));

    Object.defineProperty(cue,
      "startTime", extend({}, baseObj, {
        get: function() {
          return _startTime;
        },
        set: function(value) {
          if (typeof value !== "number") {
            throw new TypeError("Start time must be set to a number.");
          }
          _startTime = value;
          this.hasBeenReset = true;
        }
      }));

    Object.defineProperty(cue,
      "endTime", extend({}, baseObj, {
        get: function() {
          return _endTime;
        },
        set: function(value) {
          if (typeof value !== "number") {
            throw new TypeError("End time must be set to a number.");
          }
          _endTime = value;
          this.hasBeenReset = true;
        }
      }));

    Object.defineProperty(cue,
      "text", extend({}, baseObj, {
        get: function() {
          return _text;
        },
        set: function(value) {
          _text = "" + value;
          this.hasBeenReset = true;
        }
      }));

    Object.defineProperty(cue,
      "region", extend({}, baseObj, {
        get: function() {
          return _region;
        },
        set: function(value) {
          _region = value;
          this.hasBeenReset = true;
        }
      }));

    Object.defineProperty(cue,
      "vertical", extend({}, baseObj, {
        get: function() {
          return _vertical;
        },
        set: function(value) {
          var setting = findDirectionSetting(value);
          // Have to check for false because the setting an be an empty string.
          if (setting === false) {
            throw new SyntaxError("An invalid or illegal string was specified.");
          }
          _vertical = setting;
          this.hasBeenReset = true;
        }
      }));

    Object.defineProperty(cue,
      "snapToLines", extend({}, baseObj, {
        get: function() {
          return _snapToLines;
        },
        set: function(value) {
          _snapToLines = !!value;
          this.hasBeenReset = true;
        }
      }));

    Object.defineProperty(cue,
      "line", extend({}, baseObj, {
        get: function() {
          return _line;
        },
        set: function(value) {
          if (typeof value !== "number" && value !== autoKeyword) {
            throw new SyntaxError("An invalid number or illegal string was specified.");
          }
          _line = value;
          this.hasBeenReset = true;
        }
      }));

    Object.defineProperty(cue,
      "lineAlign", extend({}, baseObj, {
        get: function() {
          return _lineAlign;
        },
        set: function(value) {
          var setting = findAlignSetting(value);
          if (!setting) {
            throw new SyntaxError("An invalid or illegal string was specified.");
          }
          _lineAlign = setting;
          this.hasBeenReset = true;
        }
      }));

    Object.defineProperty(cue,
      "position", extend({}, baseObj, {
        get: function() {
          return _position;
        },
        set: function(value) {
          if (value < 0 || value > 100) {
            throw new Error("Position must be between 0 and 100.");
          }
          _position = value;
          this.hasBeenReset = true;
        }
      }));

    Object.defineProperty(cue,
      "positionAlign", extend({}, baseObj, {
        get: function() {
          return _positionAlign;
        },
        set: function(value) {
          var setting = findAlignSetting(value);
          if (!setting) {
            throw new SyntaxError("An invalid or illegal string was specified.");
          }
          _positionAlign = setting;
          this.hasBeenReset = true;
        }
      }));

    Object.defineProperty(cue,
      "size", extend({}, baseObj, {
        get: function() {
          return _size;
        },
        set: function(value) {
          if (value < 0 || value > 100) {
            throw new Error("Size must be between 0 and 100.");
          }
          _size = value;
          this.hasBeenReset = true;
        }
      }));

    Object.defineProperty(cue,
      "align", extend({}, baseObj, {
        get: function() {
          return _align;
        },
        set: function(value) {
          var setting = findAlignSetting(value);
          if (!setting) {
            throw new SyntaxError("An invalid or illegal string was specified.");
          }
          _align = setting;
          this.hasBeenReset = true;
        }
      }));

    /**
     * Other <track> spec defined properties
     */

    // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#text-track-cue-display-state
    cue.displayState = undefined;

    if (isIE8) {
      return cue;
    }
  }

  /**
   * VTTCue methods
   */

  VTTCue.prototype.getCueAsHTML = function() {
    // Assume WebVTT.convertCueToDOMTree is on the global.
    return WebVTT.convertCueToDOMTree(window, this.text);
  };

  root.VTTCue = root.VTTCue || VTTCue;
  vttjs.VTTCue = VTTCue;
}(this, (this.vttjs || {})));

/**
 * Copyright 2013 vtt.js Contributors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, vttjs) {

  var scrollSetting = {
    "": true,
    "up": true
  };

  function findScrollSetting(value) {
    if (typeof value !== "string") {
      return false;
    }
    var scroll = scrollSetting[value.toLowerCase()];
    return scroll ? value.toLowerCase() : false;
  }

  function isValidPercentValue(value) {
    return typeof value === "number" && (value >= 0 && value <= 100);
  }

  // VTTRegion shim http://dev.w3.org/html5/webvtt/#vttregion-interface
  function VTTRegion() {
    var _width = 100;
    var _lines = 3;
    var _regionAnchorX = 0;
    var _regionAnchorY = 100;
    var _viewportAnchorX = 0;
    var _viewportAnchorY = 100;
    var _scroll = "";

    Object.defineProperties(this, {
      "width": {
        enumerable: true,
        get: function() {
          return _width;
        },
        set: function(value) {
          if (!isValidPercentValue(value)) {
            throw new Error("Width must be between 0 and 100.");
          }
          _width = value;
        }
      },
      "lines": {
        enumerable: true,
        get: function() {
          return _lines;
        },
        set: function(value) {
          if (typeof value !== "number") {
            throw new TypeError("Lines must be set to a number.");
          }
          _lines = value;
        }
      },
      "regionAnchorY": {
        enumerable: true,
        get: function() {
          return _regionAnchorY;
        },
        set: function(value) {
          if (!isValidPercentValue(value)) {
            throw new Error("RegionAnchorX must be between 0 and 100.");
          }
          _regionAnchorY = value;
        }
      },
      "regionAnchorX": {
        enumerable: true,
        get: function() {
          return _regionAnchorX;
        },
        set: function(value) {
          if(!isValidPercentValue(value)) {
            throw new Error("RegionAnchorY must be between 0 and 100.");
          }
          _regionAnchorX = value;
        }
      },
      "viewportAnchorY": {
        enumerable: true,
        get: function() {
          return _viewportAnchorY;
        },
        set: function(value) {
          if (!isValidPercentValue(value)) {
            throw new Error("ViewportAnchorY must be between 0 and 100.");
          }
          _viewportAnchorY = value;
        }
      },
      "viewportAnchorX": {
        enumerable: true,
        get: function() {
          return _viewportAnchorX;
        },
        set: function(value) {
          if (!isValidPercentValue(value)) {
            throw new Error("ViewportAnchorX must be between 0 and 100.");
          }
          _viewportAnchorX = value;
        }
      },
      "scroll": {
        enumerable: true,
        get: function() {
          return _scroll;
        },
        set: function(value) {
          var setting = findScrollSetting(value);
          // Have to check for false as an empty string is a legal value.
          if (setting === false) {
            throw new SyntaxError("An invalid or illegal string was specified.");
          }
          _scroll = setting;
        }
      }
    });
  }

  root.VTTRegion = root.VTTRegion || VTTRegion;
  vttjs.VTTRegion = VTTRegion;
}(this, (this.vttjs || {})));

/**
 * Copyright 2013 vtt.js Contributors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */

(function(global) {

  var _objCreate = Object.create || (function() {
    function F() {}
    return function(o) {
      if (arguments.length !== 1) {
        throw new Error('Object.create shim only accepts one parameter.');
      }
      F.prototype = o;
      return new F();
    };
  })();

  // Creates a new ParserError object from an errorData object. The errorData
  // object should have default code and message properties. The default message
  // property can be overriden by passing in a message parameter.
  // See ParsingError.Errors below for acceptable errors.
  function ParsingError(errorData, message) {
    this.name = "ParsingError";
    this.code = errorData.code;
    this.message = message || errorData.message;
  }
  ParsingError.prototype = _objCreate(Error.prototype);
  ParsingError.prototype.constructor = ParsingError;

  // ParsingError metadata for acceptable ParsingErrors.
  ParsingError.Errors = {
    BadSignature: {
      code: 0,
      message: "Malformed WebVTT signature."
    },
    BadTimeStamp: {
      code: 1,
      message: "Malformed time stamp."
    }
  };

  // Try to parse input as a time stamp.
  function parseTimeStamp(input) {

    function computeSeconds(h, m, s, f) {
      return (h | 0) * 3600 + (m | 0) * 60 + (s | 0) + (f | 0) / 1000;
    }

    var m = input.match(/^(\d+):(\d{2})(:\d{2})?\.(\d{3})/);
    if (!m) {
      return null;
    }

    if (m[3]) {
      // Timestamp takes the form of [hours]:[minutes]:[seconds].[milliseconds]
      return computeSeconds(m[1], m[2], m[3].replace(":", ""), m[4]);
    } else if (m[1] > 59) {
      // Timestamp takes the form of [hours]:[minutes].[milliseconds]
      // First position is hours as it's over 59.
      return computeSeconds(m[1], m[2], 0,  m[4]);
    } else {
      // Timestamp takes the form of [minutes]:[seconds].[milliseconds]
      return computeSeconds(0, m[1], m[2], m[4]);
    }
  }

  // A settings object holds key/value pairs and will ignore anything but the first
  // assignment to a specific key.
  function Settings() {
    this.values = _objCreate(null);
  }

  Settings.prototype = {
    // Only accept the first assignment to any key.
    set: function(k, v) {
      if (!this.get(k) && v !== "") {
        this.values[k] = v;
      }
    },
    // Return the value for a key, or a default value.
    // If 'defaultKey' is passed then 'dflt' is assumed to be an object with
    // a number of possible default values as properties where 'defaultKey' is
    // the key of the property that will be chosen; otherwise it's assumed to be
    // a single value.
    get: function(k, dflt, defaultKey) {
      if (defaultKey) {
        return this.has(k) ? this.values[k] : dflt[defaultKey];
      }
      return this.has(k) ? this.values[k] : dflt;
    },
    // Check whether we have a value for a key.
    has: function(k) {
      return k in this.values;
    },
    // Accept a setting if its one of the given alternatives.
    alt: function(k, v, a) {
      for (var n = 0; n < a.length; ++n) {
        if (v === a[n]) {
          this.set(k, v);
          break;
        }
      }
    },
    // Accept a setting if its a valid (signed) integer.
    integer: function(k, v) {
      if (/^-?\d+$/.test(v)) { // integer
        this.set(k, parseInt(v, 10));
      }
    },
    // Accept a setting if its a valid percentage.
    percent: function(k, v) {
      var m;
      if ((m = v.match(/^([\d]{1,3})(\.[\d]*)?%$/))) {
        v = parseFloat(v);
        if (v >= 0 && v <= 100) {
          this.set(k, v);
          return true;
        }
      }
      return false;
    }
  };

  // Helper function to parse input into groups separated by 'groupDelim', and
  // interprete each group as a key/value pair separated by 'keyValueDelim'.
  function parseOptions(input, callback, keyValueDelim, groupDelim) {
    var groups = groupDelim ? input.split(groupDelim) : [input];
    for (var i in groups) {
      if (typeof groups[i] !== "string") {
        continue;
      }
      var kv = groups[i].split(keyValueDelim);
      if (kv.length !== 2) {
        continue;
      }
      var k = kv[0];
      var v = kv[1];
      callback(k, v);
    }
  }

  function parseCue(input, cue, regionList) {
    // Remember the original input if we need to throw an error.
    var oInput = input;
    // 4.1 WebVTT timestamp
    function consumeTimeStamp() {
      var ts = parseTimeStamp(input);
      if (ts === null) {
        throw new ParsingError(ParsingError.Errors.BadTimeStamp,
                              "Malformed timestamp: " + oInput);
      }
      // Remove time stamp from input.
      input = input.replace(/^[^\sa-zA-Z-]+/, "");
      return ts;
    }

    // 4.4.2 WebVTT cue settings
    function consumeCueSettings(input, cue) {
      var settings = new Settings();

      parseOptions(input, function (k, v) {
        switch (k) {
        case "region":
          // Find the last region we parsed with the same region id.
          for (var i = regionList.length - 1; i >= 0; i--) {
            if (regionList[i].id === v) {
              settings.set(k, regionList[i].region);
              break;
            }
          }
          break;
        case "vertical":
          settings.alt(k, v, ["rl", "lr"]);
          break;
        case "line":
          var vals = v.split(","),
              vals0 = vals[0];
          settings.integer(k, vals0);
          settings.percent(k, vals0) ? settings.set("snapToLines", false) : null;
          settings.alt(k, vals0, ["auto"]);
          if (vals.length === 2) {
            settings.alt("lineAlign", vals[1], ["start", "middle", "end"]);
          }
          break;
        case "position":
          vals = v.split(",");
          settings.percent(k, vals[0]);
          if (vals.length === 2) {
            settings.alt("positionAlign", vals[1], ["start", "middle", "end"]);
          }
          break;
        case "size":
          settings.percent(k, v);
          break;
        case "align":
          settings.alt(k, v, ["start", "middle", "end", "left", "right"]);
          break;
        }
      }, /:/, /\s/);

      // Apply default values for any missing fields.
      cue.region = settings.get("region", null);
      cue.vertical = settings.get("vertical", "");
      cue.line = settings.get("line", "auto");
      cue.lineAlign = settings.get("lineAlign", "start");
      cue.snapToLines = settings.get("snapToLines", true);
      cue.size = settings.get("size", 100);
      cue.align = settings.get("align", "middle");
      cue.position = settings.get("position", {
        start: 0,
        left: 0,
        middle: 50,
        end: 100,
        right: 100
      }, cue.align);
      cue.positionAlign = settings.get("positionAlign", {
        start: "start",
        left: "start",
        middle: "middle",
        end: "end",
        right: "end"
      }, cue.align);
    }

    function skipWhitespace() {
      input = input.replace(/^\s+/, "");
    }

    // 4.1 WebVTT cue timings.
    skipWhitespace();
    cue.startTime = consumeTimeStamp();   // (1) collect cue start time
    skipWhitespace();
    if (input.substr(0, 3) !== "-->") {     // (3) next characters must match "-->"
      throw new ParsingError(ParsingError.Errors.BadTimeStamp,
                             "Malformed time stamp (time stamps must be separated by '-->'): " +
                             oInput);
    }
    input = input.substr(3);
    skipWhitespace();
    cue.endTime = consumeTimeStamp();     // (5) collect cue end time

    // 4.1 WebVTT cue settings list.
    skipWhitespace();
    consumeCueSettings(input, cue);
  }

  var ESCAPE = {
    "&amp;": "&",
    "&lt;": "<",
    "&gt;": ">",
    "&lrm;": "\u200e",
    "&rlm;": "\u200f",
    "&nbsp;": "\u00a0"
  };

  var TAG_NAME = {
    c: "span",
    i: "i",
    b: "b",
    u: "u",
    ruby: "ruby",
    rt: "rt",
    v: "span",
    lang: "span"
  };

  var TAG_ANNOTATION = {
    v: "title",
    lang: "lang"
  };

  var NEEDS_PARENT = {
    rt: "ruby"
  };

  // Parse content into a document fragment.
  function parseContent(window, input) {
    function nextToken() {
      // Check for end-of-string.
      if (!input) {
        return null;
      }

      // Consume 'n' characters from the input.
      function consume(result) {
        input = input.substr(result.length);
        return result;
      }

      var m = input.match(/^([^<]*)(<[^>]+>?)?/);
      // If there is some text before the next tag, return it, otherwise return
      // the tag.
      return consume(m[1] ? m[1] : m[2]);
    }

    // Unescape a string 's'.
    function unescape1(e) {
      return ESCAPE[e];
    }
    function unescape(s) {
      while ((m = s.match(/&(amp|lt|gt|lrm|rlm|nbsp);/))) {
        s = s.replace(m[0], unescape1);
      }
      return s;
    }

    function shouldAdd(current, element) {
      return !NEEDS_PARENT[element.localName] ||
             NEEDS_PARENT[element.localName] === current.localName;
    }

    // Create an element for this tag.
    function createElement(type, annotation) {
      var tagName = TAG_NAME[type];
      if (!tagName) {
        return null;
      }
      var element = window.document.createElement(tagName);
      element.localName = tagName;
      var name = TAG_ANNOTATION[type];
      if (name && annotation) {
        element[name] = annotation.trim();
      }
      return element;
    }

    var rootDiv = window.document.createElement("div"),
        current = rootDiv,
        t,
        tagStack = [];

    while ((t = nextToken()) !== null) {
      if (t[0] === '<') {
        if (t[1] === "/") {
          // If the closing tag matches, move back up to the parent node.
          if (tagStack.length &&
              tagStack[tagStack.length - 1] === t.substr(2).replace(">", "")) {
            tagStack.pop();
            current = current.parentNode;
          }
          // Otherwise just ignore the end tag.
          continue;
        }
        var ts = parseTimeStamp(t.substr(1, t.length - 2));
        var node;
        if (ts) {
          // Timestamps are lead nodes as well.
          node = window.document.createProcessingInstruction("timestamp", ts);
          current.appendChild(node);
          continue;
        }
        var m = t.match(/^<([^.\s/0-9>]+)(\.[^\s\\>]+)?([^>\\]+)?(\\?)>?$/);
        // If we can't parse the tag, skip to the next tag.
        if (!m) {
          continue;
        }
        // Try to construct an element, and ignore the tag if we couldn't.
        node = createElement(m[1], m[3]);
        if (!node) {
          continue;
        }
        // Determine if the tag should be added based on the context of where it
        // is placed in the cuetext.
        if (!shouldAdd(current, node)) {
          continue;
        }
        // Set the class list (as a list of classes, separated by space).
        if (m[2]) {
          node.className = m[2].substr(1).replace('.', ' ');
        }
        // Append the node to the current node, and enter the scope of the new
        // node.
        tagStack.push(m[1]);
        current.appendChild(node);
        current = node;
        continue;
      }

      // Text nodes are leaf nodes.
      current.appendChild(window.document.createTextNode(unescape(t)));
    }

    return rootDiv;
  }

  // This is a list of all the Unicode characters that have a strong
  // right-to-left category. What this means is that these characters are
  // written right-to-left for sure. It was generated by pulling all the strong
  // right-to-left characters out of the Unicode data table. That table can
  // found at: http://www.unicode.org/Public/UNIDATA/UnicodeData.txt
  var strongRTLChars = [0x05BE, 0x05C0, 0x05C3, 0x05C6, 0x05D0, 0x05D1,
      0x05D2, 0x05D3, 0x05D4, 0x05D5, 0x05D6, 0x05D7, 0x05D8, 0x05D9, 0x05DA,
      0x05DB, 0x05DC, 0x05DD, 0x05DE, 0x05DF, 0x05E0, 0x05E1, 0x05E2, 0x05E3,
      0x05E4, 0x05E5, 0x05E6, 0x05E7, 0x05E8, 0x05E9, 0x05EA, 0x05F0, 0x05F1,
      0x05F2, 0x05F3, 0x05F4, 0x0608, 0x060B, 0x060D, 0x061B, 0x061E, 0x061F,
      0x0620, 0x0621, 0x0622, 0x0623, 0x0624, 0x0625, 0x0626, 0x0627, 0x0628,
      0x0629, 0x062A, 0x062B, 0x062C, 0x062D, 0x062E, 0x062F, 0x0630, 0x0631,
      0x0632, 0x0633, 0x0634, 0x0635, 0x0636, 0x0637, 0x0638, 0x0639, 0x063A,
      0x063B, 0x063C, 0x063D, 0x063E, 0x063F, 0x0640, 0x0641, 0x0642, 0x0643,
      0x0644, 0x0645, 0x0646, 0x0647, 0x0648, 0x0649, 0x064A, 0x066D, 0x066E,
      0x066F, 0x0671, 0x0672, 0x0673, 0x0674, 0x0675, 0x0676, 0x0677, 0x0678,
      0x0679, 0x067A, 0x067B, 0x067C, 0x067D, 0x067E, 0x067F, 0x0680, 0x0681,
      0x0682, 0x0683, 0x0684, 0x0685, 0x0686, 0x0687, 0x0688, 0x0689, 0x068A,
      0x068B, 0x068C, 0x068D, 0x068E, 0x068F, 0x0690, 0x0691, 0x0692, 0x0693,
      0x0694, 0x0695, 0x0696, 0x0697, 0x0698, 0x0699, 0x069A, 0x069B, 0x069C,
      0x069D, 0x069E, 0x069F, 0x06A0, 0x06A1, 0x06A2, 0x06A3, 0x06A4, 0x06A5,
      0x06A6, 0x06A7, 0x06A8, 0x06A9, 0x06AA, 0x06AB, 0x06AC, 0x06AD, 0x06AE,
      0x06AF, 0x06B0, 0x06B1, 0x06B2, 0x06B3, 0x06B4, 0x06B5, 0x06B6, 0x06B7,
      0x06B8, 0x06B9, 0x06BA, 0x06BB, 0x06BC, 0x06BD, 0x06BE, 0x06BF, 0x06C0,
      0x06C1, 0x06C2, 0x06C3, 0x06C4, 0x06C5, 0x06C6, 0x06C7, 0x06C8, 0x06C9,
      0x06CA, 0x06CB, 0x06CC, 0x06CD, 0x06CE, 0x06CF, 0x06D0, 0x06D1, 0x06D2,
      0x06D3, 0x06D4, 0x06D5, 0x06E5, 0x06E6, 0x06EE, 0x06EF, 0x06FA, 0x06FB,
      0x06FC, 0x06FD, 0x06FE, 0x06FF, 0x0700, 0x0701, 0x0702, 0x0703, 0x0704,
      0x0705, 0x0706, 0x0707, 0x0708, 0x0709, 0x070A, 0x070B, 0x070C, 0x070D,
      0x070F, 0x0710, 0x0712, 0x0713, 0x0714, 0x0715, 0x0716, 0x0717, 0x0718,
      0x0719, 0x071A, 0x071B, 0x071C, 0x071D, 0x071E, 0x071F, 0x0720, 0x0721,
      0x0722, 0x0723, 0x0724, 0x0725, 0x0726, 0x0727, 0x0728, 0x0729, 0x072A,
      0x072B, 0x072C, 0x072D, 0x072E, 0x072F, 0x074D, 0x074E, 0x074F, 0x0750,
      0x0751, 0x0752, 0x0753, 0x0754, 0x0755, 0x0756, 0x0757, 0x0758, 0x0759,
      0x075A, 0x075B, 0x075C, 0x075D, 0x075E, 0x075F, 0x0760, 0x0761, 0x0762,
      0x0763, 0x0764, 0x0765, 0x0766, 0x0767, 0x0768, 0x0769, 0x076A, 0x076B,
      0x076C, 0x076D, 0x076E, 0x076F, 0x0770, 0x0771, 0x0772, 0x0773, 0x0774,
      0x0775, 0x0776, 0x0777, 0x0778, 0x0779, 0x077A, 0x077B, 0x077C, 0x077D,
      0x077E, 0x077F, 0x0780, 0x0781, 0x0782, 0x0783, 0x0784, 0x0785, 0x0786,
      0x0787, 0x0788, 0x0789, 0x078A, 0x078B, 0x078C, 0x078D, 0x078E, 0x078F,
      0x0790, 0x0791, 0x0792, 0x0793, 0x0794, 0x0795, 0x0796, 0x0797, 0x0798,
      0x0799, 0x079A, 0x079B, 0x079C, 0x079D, 0x079E, 0x079F, 0x07A0, 0x07A1,
      0x07A2, 0x07A3, 0x07A4, 0x07A5, 0x07B1, 0x07C0, 0x07C1, 0x07C2, 0x07C3,
      0x07C4, 0x07C5, 0x07C6, 0x07C7, 0x07C8, 0x07C9, 0x07CA, 0x07CB, 0x07CC,
      0x07CD, 0x07CE, 0x07CF, 0x07D0, 0x07D1, 0x07D2, 0x07D3, 0x07D4, 0x07D5,
      0x07D6, 0x07D7, 0x07D8, 0x07D9, 0x07DA, 0x07DB, 0x07DC, 0x07DD, 0x07DE,
      0x07DF, 0x07E0, 0x07E1, 0x07E2, 0x07E3, 0x07E4, 0x07E5, 0x07E6, 0x07E7,
      0x07E8, 0x07E9, 0x07EA, 0x07F4, 0x07F5, 0x07FA, 0x0800, 0x0801, 0x0802,
      0x0803, 0x0804, 0x0805, 0x0806, 0x0807, 0x0808, 0x0809, 0x080A, 0x080B,
      0x080C, 0x080D, 0x080E, 0x080F, 0x0810, 0x0811, 0x0812, 0x0813, 0x0814,
      0x0815, 0x081A, 0x0824, 0x0828, 0x0830, 0x0831, 0x0832, 0x0833, 0x0834,
      0x0835, 0x0836, 0x0837, 0x0838, 0x0839, 0x083A, 0x083B, 0x083C, 0x083D,
      0x083E, 0x0840, 0x0841, 0x0842, 0x0843, 0x0844, 0x0845, 0x0846, 0x0847,
      0x0848, 0x0849, 0x084A, 0x084B, 0x084C, 0x084D, 0x084E, 0x084F, 0x0850,
      0x0851, 0x0852, 0x0853, 0x0854, 0x0855, 0x0856, 0x0857, 0x0858, 0x085E,
      0x08A0, 0x08A2, 0x08A3, 0x08A4, 0x08A5, 0x08A6, 0x08A7, 0x08A8, 0x08A9,
      0x08AA, 0x08AB, 0x08AC, 0x200F, 0xFB1D, 0xFB1F, 0xFB20, 0xFB21, 0xFB22,
      0xFB23, 0xFB24, 0xFB25, 0xFB26, 0xFB27, 0xFB28, 0xFB2A, 0xFB2B, 0xFB2C,
      0xFB2D, 0xFB2E, 0xFB2F, 0xFB30, 0xFB31, 0xFB32, 0xFB33, 0xFB34, 0xFB35,
      0xFB36, 0xFB38, 0xFB39, 0xFB3A, 0xFB3B, 0xFB3C, 0xFB3E, 0xFB40, 0xFB41,
      0xFB43, 0xFB44, 0xFB46, 0xFB47, 0xFB48, 0xFB49, 0xFB4A, 0xFB4B, 0xFB4C,
      0xFB4D, 0xFB4E, 0xFB4F, 0xFB50, 0xFB51, 0xFB52, 0xFB53, 0xFB54, 0xFB55,
      0xFB56, 0xFB57, 0xFB58, 0xFB59, 0xFB5A, 0xFB5B, 0xFB5C, 0xFB5D, 0xFB5E,
      0xFB5F, 0xFB60, 0xFB61, 0xFB62, 0xFB63, 0xFB64, 0xFB65, 0xFB66, 0xFB67,
      0xFB68, 0xFB69, 0xFB6A, 0xFB6B, 0xFB6C, 0xFB6D, 0xFB6E, 0xFB6F, 0xFB70,
      0xFB71, 0xFB72, 0xFB73, 0xFB74, 0xFB75, 0xFB76, 0xFB77, 0xFB78, 0xFB79,
      0xFB7A, 0xFB7B, 0xFB7C, 0xFB7D, 0xFB7E, 0xFB7F, 0xFB80, 0xFB81, 0xFB82,
      0xFB83, 0xFB84, 0xFB85, 0xFB86, 0xFB87, 0xFB88, 0xFB89, 0xFB8A, 0xFB8B,
      0xFB8C, 0xFB8D, 0xFB8E, 0xFB8F, 0xFB90, 0xFB91, 0xFB92, 0xFB93, 0xFB94,
      0xFB95, 0xFB96, 0xFB97, 0xFB98, 0xFB99, 0xFB9A, 0xFB9B, 0xFB9C, 0xFB9D,
      0xFB9E, 0xFB9F, 0xFBA0, 0xFBA1, 0xFBA2, 0xFBA3, 0xFBA4, 0xFBA5, 0xFBA6,
      0xFBA7, 0xFBA8, 0xFBA9, 0xFBAA, 0xFBAB, 0xFBAC, 0xFBAD, 0xFBAE, 0xFBAF,
      0xFBB0, 0xFBB1, 0xFBB2, 0xFBB3, 0xFBB4, 0xFBB5, 0xFBB6, 0xFBB7, 0xFBB8,
      0xFBB9, 0xFBBA, 0xFBBB, 0xFBBC, 0xFBBD, 0xFBBE, 0xFBBF, 0xFBC0, 0xFBC1,
      0xFBD3, 0xFBD4, 0xFBD5, 0xFBD6, 0xFBD7, 0xFBD8, 0xFBD9, 0xFBDA, 0xFBDB,
      0xFBDC, 0xFBDD, 0xFBDE, 0xFBDF, 0xFBE0, 0xFBE1, 0xFBE2, 0xFBE3, 0xFBE4,
      0xFBE5, 0xFBE6, 0xFBE7, 0xFBE8, 0xFBE9, 0xFBEA, 0xFBEB, 0xFBEC, 0xFBED,
      0xFBEE, 0xFBEF, 0xFBF0, 0xFBF1, 0xFBF2, 0xFBF3, 0xFBF4, 0xFBF5, 0xFBF6,
      0xFBF7, 0xFBF8, 0xFBF9, 0xFBFA, 0xFBFB, 0xFBFC, 0xFBFD, 0xFBFE, 0xFBFF,
      0xFC00, 0xFC01, 0xFC02, 0xFC03, 0xFC04, 0xFC05, 0xFC06, 0xFC07, 0xFC08,
      0xFC09, 0xFC0A, 0xFC0B, 0xFC0C, 0xFC0D, 0xFC0E, 0xFC0F, 0xFC10, 0xFC11,
      0xFC12, 0xFC13, 0xFC14, 0xFC15, 0xFC16, 0xFC17, 0xFC18, 0xFC19, 0xFC1A,
      0xFC1B, 0xFC1C, 0xFC1D, 0xFC1E, 0xFC1F, 0xFC20, 0xFC21, 0xFC22, 0xFC23,
      0xFC24, 0xFC25, 0xFC26, 0xFC27, 0xFC28, 0xFC29, 0xFC2A, 0xFC2B, 0xFC2C,
      0xFC2D, 0xFC2E, 0xFC2F, 0xFC30, 0xFC31, 0xFC32, 0xFC33, 0xFC34, 0xFC35,
      0xFC36, 0xFC37, 0xFC38, 0xFC39, 0xFC3A, 0xFC3B, 0xFC3C, 0xFC3D, 0xFC3E,
      0xFC3F, 0xFC40, 0xFC41, 0xFC42, 0xFC43, 0xFC44, 0xFC45, 0xFC46, 0xFC47,
      0xFC48, 0xFC49, 0xFC4A, 0xFC4B, 0xFC4C, 0xFC4D, 0xFC4E, 0xFC4F, 0xFC50,
      0xFC51, 0xFC52, 0xFC53, 0xFC54, 0xFC55, 0xFC56, 0xFC57, 0xFC58, 0xFC59,
      0xFC5A, 0xFC5B, 0xFC5C, 0xFC5D, 0xFC5E, 0xFC5F, 0xFC60, 0xFC61, 0xFC62,
      0xFC63, 0xFC64, 0xFC65, 0xFC66, 0xFC67, 0xFC68, 0xFC69, 0xFC6A, 0xFC6B,
      0xFC6C, 0xFC6D, 0xFC6E, 0xFC6F, 0xFC70, 0xFC71, 0xFC72, 0xFC73, 0xFC74,
      0xFC75, 0xFC76, 0xFC77, 0xFC78, 0xFC79, 0xFC7A, 0xFC7B, 0xFC7C, 0xFC7D,
      0xFC7E, 0xFC7F, 0xFC80, 0xFC81, 0xFC82, 0xFC83, 0xFC84, 0xFC85, 0xFC86,
      0xFC87, 0xFC88, 0xFC89, 0xFC8A, 0xFC8B, 0xFC8C, 0xFC8D, 0xFC8E, 0xFC8F,
      0xFC90, 0xFC91, 0xFC92, 0xFC93, 0xFC94, 0xFC95, 0xFC96, 0xFC97, 0xFC98,
      0xFC99, 0xFC9A, 0xFC9B, 0xFC9C, 0xFC9D, 0xFC9E, 0xFC9F, 0xFCA0, 0xFCA1,
      0xFCA2, 0xFCA3, 0xFCA4, 0xFCA5, 0xFCA6, 0xFCA7, 0xFCA8, 0xFCA9, 0xFCAA,
      0xFCAB, 0xFCAC, 0xFCAD, 0xFCAE, 0xFCAF, 0xFCB0, 0xFCB1, 0xFCB2, 0xFCB3,
      0xFCB4, 0xFCB5, 0xFCB6, 0xFCB7, 0xFCB8, 0xFCB9, 0xFCBA, 0xFCBB, 0xFCBC,
      0xFCBD, 0xFCBE, 0xFCBF, 0xFCC0, 0xFCC1, 0xFCC2, 0xFCC3, 0xFCC4, 0xFCC5,
      0xFCC6, 0xFCC7, 0xFCC8, 0xFCC9, 0xFCCA, 0xFCCB, 0xFCCC, 0xFCCD, 0xFCCE,
      0xFCCF, 0xFCD0, 0xFCD1, 0xFCD2, 0xFCD3, 0xFCD4, 0xFCD5, 0xFCD6, 0xFCD7,
      0xFCD8, 0xFCD9, 0xFCDA, 0xFCDB, 0xFCDC, 0xFCDD, 0xFCDE, 0xFCDF, 0xFCE0,
      0xFCE1, 0xFCE2, 0xFCE3, 0xFCE4, 0xFCE5, 0xFCE6, 0xFCE7, 0xFCE8, 0xFCE9,
      0xFCEA, 0xFCEB, 0xFCEC, 0xFCED, 0xFCEE, 0xFCEF, 0xFCF0, 0xFCF1, 0xFCF2,
      0xFCF3, 0xFCF4, 0xFCF5, 0xFCF6, 0xFCF7, 0xFCF8, 0xFCF9, 0xFCFA, 0xFCFB,
      0xFCFC, 0xFCFD, 0xFCFE, 0xFCFF, 0xFD00, 0xFD01, 0xFD02, 0xFD03, 0xFD04,
      0xFD05, 0xFD06, 0xFD07, 0xFD08, 0xFD09, 0xFD0A, 0xFD0B, 0xFD0C, 0xFD0D,
      0xFD0E, 0xFD0F, 0xFD10, 0xFD11, 0xFD12, 0xFD13, 0xFD14, 0xFD15, 0xFD16,
      0xFD17, 0xFD18, 0xFD19, 0xFD1A, 0xFD1B, 0xFD1C, 0xFD1D, 0xFD1E, 0xFD1F,
      0xFD20, 0xFD21, 0xFD22, 0xFD23, 0xFD24, 0xFD25, 0xFD26, 0xFD27, 0xFD28,
      0xFD29, 0xFD2A, 0xFD2B, 0xFD2C, 0xFD2D, 0xFD2E, 0xFD2F, 0xFD30, 0xFD31,
      0xFD32, 0xFD33, 0xFD34, 0xFD35, 0xFD36, 0xFD37, 0xFD38, 0xFD39, 0xFD3A,
      0xFD3B, 0xFD3C, 0xFD3D, 0xFD50, 0xFD51, 0xFD52, 0xFD53, 0xFD54, 0xFD55,
      0xFD56, 0xFD57, 0xFD58, 0xFD59, 0xFD5A, 0xFD5B, 0xFD5C, 0xFD5D, 0xFD5E,
      0xFD5F, 0xFD60, 0xFD61, 0xFD62, 0xFD63, 0xFD64, 0xFD65, 0xFD66, 0xFD67,
      0xFD68, 0xFD69, 0xFD6A, 0xFD6B, 0xFD6C, 0xFD6D, 0xFD6E, 0xFD6F, 0xFD70,
      0xFD71, 0xFD72, 0xFD73, 0xFD74, 0xFD75, 0xFD76, 0xFD77, 0xFD78, 0xFD79,
      0xFD7A, 0xFD7B, 0xFD7C, 0xFD7D, 0xFD7E, 0xFD7F, 0xFD80, 0xFD81, 0xFD82,
      0xFD83, 0xFD84, 0xFD85, 0xFD86, 0xFD87, 0xFD88, 0xFD89, 0xFD8A, 0xFD8B,
      0xFD8C, 0xFD8D, 0xFD8E, 0xFD8F, 0xFD92, 0xFD93, 0xFD94, 0xFD95, 0xFD96,
      0xFD97, 0xFD98, 0xFD99, 0xFD9A, 0xFD9B, 0xFD9C, 0xFD9D, 0xFD9E, 0xFD9F,
      0xFDA0, 0xFDA1, 0xFDA2, 0xFDA3, 0xFDA4, 0xFDA5, 0xFDA6, 0xFDA7, 0xFDA8,
      0xFDA9, 0xFDAA, 0xFDAB, 0xFDAC, 0xFDAD, 0xFDAE, 0xFDAF, 0xFDB0, 0xFDB1,
      0xFDB2, 0xFDB3, 0xFDB4, 0xFDB5, 0xFDB6, 0xFDB7, 0xFDB8, 0xFDB9, 0xFDBA,
      0xFDBB, 0xFDBC, 0xFDBD, 0xFDBE, 0xFDBF, 0xFDC0, 0xFDC1, 0xFDC2, 0xFDC3,
      0xFDC4, 0xFDC5, 0xFDC6, 0xFDC7, 0xFDF0, 0xFDF1, 0xFDF2, 0xFDF3, 0xFDF4,
      0xFDF5, 0xFDF6, 0xFDF7, 0xFDF8, 0xFDF9, 0xFDFA, 0xFDFB, 0xFDFC, 0xFE70,
      0xFE71, 0xFE72, 0xFE73, 0xFE74, 0xFE76, 0xFE77, 0xFE78, 0xFE79, 0xFE7A,
      0xFE7B, 0xFE7C, 0xFE7D, 0xFE7E, 0xFE7F, 0xFE80, 0xFE81, 0xFE82, 0xFE83,
      0xFE84, 0xFE85, 0xFE86, 0xFE87, 0xFE88, 0xFE89, 0xFE8A, 0xFE8B, 0xFE8C,
      0xFE8D, 0xFE8E, 0xFE8F, 0xFE90, 0xFE91, 0xFE92, 0xFE93, 0xFE94, 0xFE95,
      0xFE96, 0xFE97, 0xFE98, 0xFE99, 0xFE9A, 0xFE9B, 0xFE9C, 0xFE9D, 0xFE9E,
      0xFE9F, 0xFEA0, 0xFEA1, 0xFEA2, 0xFEA3, 0xFEA4, 0xFEA5, 0xFEA6, 0xFEA7,
      0xFEA8, 0xFEA9, 0xFEAA, 0xFEAB, 0xFEAC, 0xFEAD, 0xFEAE, 0xFEAF, 0xFEB0,
      0xFEB1, 0xFEB2, 0xFEB3, 0xFEB4, 0xFEB5, 0xFEB6, 0xFEB7, 0xFEB8, 0xFEB9,
      0xFEBA, 0xFEBB, 0xFEBC, 0xFEBD, 0xFEBE, 0xFEBF, 0xFEC0, 0xFEC1, 0xFEC2,
      0xFEC3, 0xFEC4, 0xFEC5, 0xFEC6, 0xFEC7, 0xFEC8, 0xFEC9, 0xFECA, 0xFECB,
      0xFECC, 0xFECD, 0xFECE, 0xFECF, 0xFED0, 0xFED1, 0xFED2, 0xFED3, 0xFED4,
      0xFED5, 0xFED6, 0xFED7, 0xFED8, 0xFED9, 0xFEDA, 0xFEDB, 0xFEDC, 0xFEDD,
      0xFEDE, 0xFEDF, 0xFEE0, 0xFEE1, 0xFEE2, 0xFEE3, 0xFEE4, 0xFEE5, 0xFEE6,
      0xFEE7, 0xFEE8, 0xFEE9, 0xFEEA, 0xFEEB, 0xFEEC, 0xFEED, 0xFEEE, 0xFEEF,
      0xFEF0, 0xFEF1, 0xFEF2, 0xFEF3, 0xFEF4, 0xFEF5, 0xFEF6, 0xFEF7, 0xFEF8,
      0xFEF9, 0xFEFA, 0xFEFB, 0xFEFC, 0x10800, 0x10801, 0x10802, 0x10803,
      0x10804, 0x10805, 0x10808, 0x1080A, 0x1080B, 0x1080C, 0x1080D, 0x1080E,
      0x1080F, 0x10810, 0x10811, 0x10812, 0x10813, 0x10814, 0x10815, 0x10816,
      0x10817, 0x10818, 0x10819, 0x1081A, 0x1081B, 0x1081C, 0x1081D, 0x1081E,
      0x1081F, 0x10820, 0x10821, 0x10822, 0x10823, 0x10824, 0x10825, 0x10826,
      0x10827, 0x10828, 0x10829, 0x1082A, 0x1082B, 0x1082C, 0x1082D, 0x1082E,
      0x1082F, 0x10830, 0x10831, 0x10832, 0x10833, 0x10834, 0x10835, 0x10837,
      0x10838, 0x1083C, 0x1083F, 0x10840, 0x10841, 0x10842, 0x10843, 0x10844,
      0x10845, 0x10846, 0x10847, 0x10848, 0x10849, 0x1084A, 0x1084B, 0x1084C,
      0x1084D, 0x1084E, 0x1084F, 0x10850, 0x10851, 0x10852, 0x10853, 0x10854,
      0x10855, 0x10857, 0x10858, 0x10859, 0x1085A, 0x1085B, 0x1085C, 0x1085D,
      0x1085E, 0x1085F, 0x10900, 0x10901, 0x10902, 0x10903, 0x10904, 0x10905,
      0x10906, 0x10907, 0x10908, 0x10909, 0x1090A, 0x1090B, 0x1090C, 0x1090D,
      0x1090E, 0x1090F, 0x10910, 0x10911, 0x10912, 0x10913, 0x10914, 0x10915,
      0x10916, 0x10917, 0x10918, 0x10919, 0x1091A, 0x1091B, 0x10920, 0x10921,
      0x10922, 0x10923, 0x10924, 0x10925, 0x10926, 0x10927, 0x10928, 0x10929,
      0x1092A, 0x1092B, 0x1092C, 0x1092D, 0x1092E, 0x1092F, 0x10930, 0x10931,
      0x10932, 0x10933, 0x10934, 0x10935, 0x10936, 0x10937, 0x10938, 0x10939,
      0x1093F, 0x10980, 0x10981, 0x10982, 0x10983, 0x10984, 0x10985, 0x10986,
      0x10987, 0x10988, 0x10989, 0x1098A, 0x1098B, 0x1098C, 0x1098D, 0x1098E,
      0x1098F, 0x10990, 0x10991, 0x10992, 0x10993, 0x10994, 0x10995, 0x10996,
      0x10997, 0x10998, 0x10999, 0x1099A, 0x1099B, 0x1099C, 0x1099D, 0x1099E,
      0x1099F, 0x109A0, 0x109A1, 0x109A2, 0x109A3, 0x109A4, 0x109A5, 0x109A6,
      0x109A7, 0x109A8, 0x109A9, 0x109AA, 0x109AB, 0x109AC, 0x109AD, 0x109AE,
      0x109AF, 0x109B0, 0x109B1, 0x109B2, 0x109B3, 0x109B4, 0x109B5, 0x109B6,
      0x109B7, 0x109BE, 0x109BF, 0x10A00, 0x10A10, 0x10A11, 0x10A12, 0x10A13,
      0x10A15, 0x10A16, 0x10A17, 0x10A19, 0x10A1A, 0x10A1B, 0x10A1C, 0x10A1D,
      0x10A1E, 0x10A1F, 0x10A20, 0x10A21, 0x10A22, 0x10A23, 0x10A24, 0x10A25,
      0x10A26, 0x10A27, 0x10A28, 0x10A29, 0x10A2A, 0x10A2B, 0x10A2C, 0x10A2D,
      0x10A2E, 0x10A2F, 0x10A30, 0x10A31, 0x10A32, 0x10A33, 0x10A40, 0x10A41,
      0x10A42, 0x10A43, 0x10A44, 0x10A45, 0x10A46, 0x10A47, 0x10A50, 0x10A51,
      0x10A52, 0x10A53, 0x10A54, 0x10A55, 0x10A56, 0x10A57, 0x10A58, 0x10A60,
      0x10A61, 0x10A62, 0x10A63, 0x10A64, 0x10A65, 0x10A66, 0x10A67, 0x10A68,
      0x10A69, 0x10A6A, 0x10A6B, 0x10A6C, 0x10A6D, 0x10A6E, 0x10A6F, 0x10A70,
      0x10A71, 0x10A72, 0x10A73, 0x10A74, 0x10A75, 0x10A76, 0x10A77, 0x10A78,
      0x10A79, 0x10A7A, 0x10A7B, 0x10A7C, 0x10A7D, 0x10A7E, 0x10A7F, 0x10B00,
      0x10B01, 0x10B02, 0x10B03, 0x10B04, 0x10B05, 0x10B06, 0x10B07, 0x10B08,
      0x10B09, 0x10B0A, 0x10B0B, 0x10B0C, 0x10B0D, 0x10B0E, 0x10B0F, 0x10B10,
      0x10B11, 0x10B12, 0x10B13, 0x10B14, 0x10B15, 0x10B16, 0x10B17, 0x10B18,
      0x10B19, 0x10B1A, 0x10B1B, 0x10B1C, 0x10B1D, 0x10B1E, 0x10B1F, 0x10B20,
      0x10B21, 0x10B22, 0x10B23, 0x10B24, 0x10B25, 0x10B26, 0x10B27, 0x10B28,
      0x10B29, 0x10B2A, 0x10B2B, 0x10B2C, 0x10B2D, 0x10B2E, 0x10B2F, 0x10B30,
      0x10B31, 0x10B32, 0x10B33, 0x10B34, 0x10B35, 0x10B40, 0x10B41, 0x10B42,
      0x10B43, 0x10B44, 0x10B45, 0x10B46, 0x10B47, 0x10B48, 0x10B49, 0x10B4A,
      0x10B4B, 0x10B4C, 0x10B4D, 0x10B4E, 0x10B4F, 0x10B50, 0x10B51, 0x10B52,
      0x10B53, 0x10B54, 0x10B55, 0x10B58, 0x10B59, 0x10B5A, 0x10B5B, 0x10B5C,
      0x10B5D, 0x10B5E, 0x10B5F, 0x10B60, 0x10B61, 0x10B62, 0x10B63, 0x10B64,
      0x10B65, 0x10B66, 0x10B67, 0x10B68, 0x10B69, 0x10B6A, 0x10B6B, 0x10B6C,
      0x10B6D, 0x10B6E, 0x10B6F, 0x10B70, 0x10B71, 0x10B72, 0x10B78, 0x10B79,
      0x10B7A, 0x10B7B, 0x10B7C, 0x10B7D, 0x10B7E, 0x10B7F, 0x10C00, 0x10C01,
      0x10C02, 0x10C03, 0x10C04, 0x10C05, 0x10C06, 0x10C07, 0x10C08, 0x10C09,
      0x10C0A, 0x10C0B, 0x10C0C, 0x10C0D, 0x10C0E, 0x10C0F, 0x10C10, 0x10C11,
      0x10C12, 0x10C13, 0x10C14, 0x10C15, 0x10C16, 0x10C17, 0x10C18, 0x10C19,
      0x10C1A, 0x10C1B, 0x10C1C, 0x10C1D, 0x10C1E, 0x10C1F, 0x10C20, 0x10C21,
      0x10C22, 0x10C23, 0x10C24, 0x10C25, 0x10C26, 0x10C27, 0x10C28, 0x10C29,
      0x10C2A, 0x10C2B, 0x10C2C, 0x10C2D, 0x10C2E, 0x10C2F, 0x10C30, 0x10C31,
      0x10C32, 0x10C33, 0x10C34, 0x10C35, 0x10C36, 0x10C37, 0x10C38, 0x10C39,
      0x10C3A, 0x10C3B, 0x10C3C, 0x10C3D, 0x10C3E, 0x10C3F, 0x10C40, 0x10C41,
      0x10C42, 0x10C43, 0x10C44, 0x10C45, 0x10C46, 0x10C47, 0x10C48, 0x1EE00,
      0x1EE01, 0x1EE02, 0x1EE03, 0x1EE05, 0x1EE06, 0x1EE07, 0x1EE08, 0x1EE09,
      0x1EE0A, 0x1EE0B, 0x1EE0C, 0x1EE0D, 0x1EE0E, 0x1EE0F, 0x1EE10, 0x1EE11,
      0x1EE12, 0x1EE13, 0x1EE14, 0x1EE15, 0x1EE16, 0x1EE17, 0x1EE18, 0x1EE19,
      0x1EE1A, 0x1EE1B, 0x1EE1C, 0x1EE1D, 0x1EE1E, 0x1EE1F, 0x1EE21, 0x1EE22,
      0x1EE24, 0x1EE27, 0x1EE29, 0x1EE2A, 0x1EE2B, 0x1EE2C, 0x1EE2D, 0x1EE2E,
      0x1EE2F, 0x1EE30, 0x1EE31, 0x1EE32, 0x1EE34, 0x1EE35, 0x1EE36, 0x1EE37,
      0x1EE39, 0x1EE3B, 0x1EE42, 0x1EE47, 0x1EE49, 0x1EE4B, 0x1EE4D, 0x1EE4E,
      0x1EE4F, 0x1EE51, 0x1EE52, 0x1EE54, 0x1EE57, 0x1EE59, 0x1EE5B, 0x1EE5D,
      0x1EE5F, 0x1EE61, 0x1EE62, 0x1EE64, 0x1EE67, 0x1EE68, 0x1EE69, 0x1EE6A,
      0x1EE6C, 0x1EE6D, 0x1EE6E, 0x1EE6F, 0x1EE70, 0x1EE71, 0x1EE72, 0x1EE74,
      0x1EE75, 0x1EE76, 0x1EE77, 0x1EE79, 0x1EE7A, 0x1EE7B, 0x1EE7C, 0x1EE7E,
      0x1EE80, 0x1EE81, 0x1EE82, 0x1EE83, 0x1EE84, 0x1EE85, 0x1EE86, 0x1EE87,
      0x1EE88, 0x1EE89, 0x1EE8B, 0x1EE8C, 0x1EE8D, 0x1EE8E, 0x1EE8F, 0x1EE90,
      0x1EE91, 0x1EE92, 0x1EE93, 0x1EE94, 0x1EE95, 0x1EE96, 0x1EE97, 0x1EE98,
      0x1EE99, 0x1EE9A, 0x1EE9B, 0x1EEA1, 0x1EEA2, 0x1EEA3, 0x1EEA5, 0x1EEA6,
      0x1EEA7, 0x1EEA8, 0x1EEA9, 0x1EEAB, 0x1EEAC, 0x1EEAD, 0x1EEAE, 0x1EEAF,
      0x1EEB0, 0x1EEB1, 0x1EEB2, 0x1EEB3, 0x1EEB4, 0x1EEB5, 0x1EEB6, 0x1EEB7,
      0x1EEB8, 0x1EEB9, 0x1EEBA, 0x1EEBB, 0x10FFFD];

  function determineBidi(cueDiv) {
    var nodeStack = [],
        text = "",
        charCode;

    if (!cueDiv || !cueDiv.childNodes) {
      return "ltr";
    }

    function pushNodes(nodeStack, node) {
      for (var i = node.childNodes.length - 1; i >= 0; i--) {
        nodeStack.push(node.childNodes[i]);
      }
    }

    function nextTextNode(nodeStack) {
      if (!nodeStack || !nodeStack.length) {
        return null;
      }

      var node = nodeStack.pop(),
          text = node.textContent || node.innerText;
      if (text) {
        // TODO: This should match all unicode type B characters (paragraph
        // separator characters). See issue #115.
        var m = text.match(/^.*(\n|\r)/);
        if (m) {
          nodeStack.length = 0;
          return m[0];
        }
        return text;
      }
      if (node.tagName === "ruby") {
        return nextTextNode(nodeStack);
      }
      if (node.childNodes) {
        pushNodes(nodeStack, node);
        return nextTextNode(nodeStack);
      }
    }

    pushNodes(nodeStack, cueDiv);
    while ((text = nextTextNode(nodeStack))) {
      for (var i = 0; i < text.length; i++) {
        charCode = text.charCodeAt(i);
        for (var j = 0; j < strongRTLChars.length; j++) {
          if (strongRTLChars[j] === charCode) {
            return "rtl";
          }
        }
      }
    }
    return "ltr";
  }

  function computeLinePos(cue) {
    if (typeof cue.line === "number" &&
        (cue.snapToLines || (cue.line >= 0 && cue.line <= 100))) {
      return cue.line;
    }
    if (!cue.track || !cue.track.textTrackList ||
        !cue.track.textTrackList.mediaElement) {
      return -1;
    }
    var track = cue.track,
        trackList = track.textTrackList,
        count = 0;
    for (var i = 0; i < trackList.length && trackList[i] !== track; i++) {
      if (trackList[i].mode === "showing") {
        count++;
      }
    }
    return ++count * -1;
  }

  function StyleBox() {
  }

  // Apply styles to a div. If there is no div passed then it defaults to the
  // div on 'this'.
  StyleBox.prototype.applyStyles = function(styles, div) {
    div = div || this.div;
    for (var prop in styles) {
      if (styles.hasOwnProperty(prop)) {
        div.style[prop] = styles[prop];
      }
    }
  };

  StyleBox.prototype.formatStyle = function(val, unit) {
    return val === 0 ? 0 : val + unit;
  };

  // Constructs the computed display state of the cue (a div). Places the div
  // into the overlay which should be a block level element (usually a div).
  function CueStyleBox(window, cue, styleOptions) {
    var isIE8 = (/MSIE\s8\.0/).test(navigator.userAgent);
    var color = "rgba(255, 255, 255, 1)";
    var backgroundColor = "rgba(0, 0, 0, 0.8)";

    if (isIE8) {
      color = "rgb(255, 255, 255)";
      backgroundColor = "rgb(0, 0, 0)";
    }

    StyleBox.call(this);
    this.cue = cue;

    // Parse our cue's text into a DOM tree rooted at 'cueDiv'. This div will
    // have inline positioning and will function as the cue background box.
    this.cueDiv = parseContent(window, cue.text);
    var styles = {
      color: color,
      backgroundColor: backgroundColor,
      position: "relative",
      left: 0,
      right: 0,
      top: 0,
      bottom: 0,
      display: "inline"
    };

    if (!isIE8) {
      styles.writingMode = cue.vertical === "" ? "horizontal-tb"
                                               : cue.vertical === "lr" ? "vertical-lr"
                                                                       : "vertical-rl";
      styles.unicodeBidi = "plaintext";
    }
    this.applyStyles(styles, this.cueDiv);

    // Create an absolutely positioned div that will be used to position the cue
    // div. Note, all WebVTT cue-setting alignments are equivalent to the CSS
    // mirrors of them except "middle" which is "center" in CSS.
    this.div = window.document.createElement("div");
    styles = {
      textAlign: cue.align === "middle" ? "center" : cue.align,
      font: styleOptions.font,
      whiteSpace: "pre-line",
      position: "absolute"
    };

    if (!isIE8) {
      styles.direction = determineBidi(this.cueDiv);
      styles.writingMode = cue.vertical === "" ? "horizontal-tb"
                                               : cue.vertical === "lr" ? "vertical-lr"
                                                                       : "vertical-rl".
      stylesunicodeBidi =  "plaintext";
    }

    this.applyStyles(styles);

    this.div.appendChild(this.cueDiv);

    // Calculate the distance from the reference edge of the viewport to the text
    // position of the cue box. The reference edge will be resolved later when
    // the box orientation styles are applied.
    var textPos = 0;
    switch (cue.positionAlign) {
    case "start":
      textPos = cue.position;
      break;
    case "middle":
      textPos = cue.position - (cue.size / 2);
      break;
    case "end":
      textPos = cue.position - cue.size;
      break;
    }

    // Horizontal box orientation; textPos is the distance from the left edge of the
    // area to the left edge of the box and cue.size is the distance extending to
    // the right from there.
    if (cue.vertical === "") {
      this.applyStyles({
        left:  this.formatStyle(textPos, "%"),
        width: this.formatStyle(cue.size, "%")
      });
    // Vertical box orientation; textPos is the distance from the top edge of the
    // area to the top edge of the box and cue.size is the height extending
    // downwards from there.
    } else {
      this.applyStyles({
        top: this.formatStyle(textPos, "%"),
        height: this.formatStyle(cue.size, "%")
      });
    }

    this.move = function(box) {
      this.applyStyles({
        top: this.formatStyle(box.top, "px"),
        bottom: this.formatStyle(box.bottom, "px"),
        left: this.formatStyle(box.left, "px"),
        right: this.formatStyle(box.right, "px"),
        height: this.formatStyle(box.height, "px"),
        width: this.formatStyle(box.width, "px")
      });
    };
  }
  CueStyleBox.prototype = _objCreate(StyleBox.prototype);
  CueStyleBox.prototype.constructor = CueStyleBox;

  // Represents the co-ordinates of an Element in a way that we can easily
  // compute things with such as if it overlaps or intersects with another Element.
  // Can initialize it with either a StyleBox or another BoxPosition.
  function BoxPosition(obj) {
    var isIE8 = (/MSIE\s8\.0/).test(navigator.userAgent);

    // Either a BoxPosition was passed in and we need to copy it, or a StyleBox
    // was passed in and we need to copy the results of 'getBoundingClientRect'
    // as the object returned is readonly. All co-ordinate values are in reference
    // to the viewport origin (top left).
    var lh, height, width, top;
    if (obj.div) {
      height = obj.div.offsetHeight;
      width = obj.div.offsetWidth;
      top = obj.div.offsetTop;

      var rects = (rects = obj.div.childNodes) && (rects = rects[0]) &&
                  rects.getClientRects && rects.getClientRects();
      obj = obj.div.getBoundingClientRect();
      // In certain cases the outter div will be slightly larger then the sum of
      // the inner div's lines. This could be due to bold text, etc, on some platforms.
      // In this case we should get the average line height and use that. This will
      // result in the desired behaviour.
      lh = rects ? Math.max((rects[0] && rects[0].height) || 0, obj.height / rects.length)
                 : 0;

    }
    this.left = obj.left;
    this.right = obj.right;
    this.top = obj.top || top;
    this.height = obj.height || height;
    this.bottom = obj.bottom || (top + (obj.height || height));
    this.width = obj.width || width;
    this.lineHeight = lh !== undefined ? lh : obj.lineHeight;

    if (isIE8 && !this.lineHeight) {
      this.lineHeight = 13;
    }
  }

  // Move the box along a particular axis. Optionally pass in an amount to move
  // the box. If no amount is passed then the default is the line height of the
  // box.
  BoxPosition.prototype.move = function(axis, toMove) {
    toMove = toMove !== undefined ? toMove : this.lineHeight;
    switch (axis) {
    case "+x":
      this.left += toMove;
      this.right += toMove;
      break;
    case "-x":
      this.left -= toMove;
      this.right -= toMove;
      break;
    case "+y":
      this.top += toMove;
      this.bottom += toMove;
      break;
    case "-y":
      this.top -= toMove;
      this.bottom -= toMove;
      break;
    }
  };

  // Check if this box overlaps another box, b2.
  BoxPosition.prototype.overlaps = function(b2) {
    return this.left < b2.right &&
           this.right > b2.left &&
           this.top < b2.bottom &&
           this.bottom > b2.top;
  };

  // Check if this box overlaps any other boxes in boxes.
  BoxPosition.prototype.overlapsAny = function(boxes) {
    for (var i = 0; i < boxes.length; i++) {
      if (this.overlaps(boxes[i])) {
        return true;
      }
    }
    return false;
  };

  // Check if this box is within another box.
  BoxPosition.prototype.within = function(container) {
    return this.top >= container.top &&
           this.bottom <= container.bottom &&
           this.left >= container.left &&
           this.right <= container.right;
  };

  // Check if this box is entirely within the container or it is overlapping
  // on the edge opposite of the axis direction passed. For example, if "+x" is
  // passed and the box is overlapping on the left edge of the container, then
  // return true.
  BoxPosition.prototype.overlapsOppositeAxis = function(container, axis) {
    switch (axis) {
    case "+x":
      return this.left < container.left;
    case "-x":
      return this.right > container.right;
    case "+y":
      return this.top < container.top;
    case "-y":
      return this.bottom > container.bottom;
    }
  };

  // Find the percentage of the area that this box is overlapping with another
  // box.
  BoxPosition.prototype.intersectPercentage = function(b2) {
    var x = Math.max(0, Math.min(this.right, b2.right) - Math.max(this.left, b2.left)),
        y = Math.max(0, Math.min(this.bottom, b2.bottom) - Math.max(this.top, b2.top)),
        intersectArea = x * y;
    return intersectArea / (this.height * this.width);
  };

  // Convert the positions from this box to CSS compatible positions using
  // the reference container's positions. This has to be done because this
  // box's positions are in reference to the viewport origin, whereas, CSS
  // values are in referecne to their respective edges.
  BoxPosition.prototype.toCSSCompatValues = function(reference) {
    return {
      top: this.top - reference.top,
      bottom: reference.bottom - this.bottom,
      left: this.left - reference.left,
      right: reference.right - this.right,
      height: this.height,
      width: this.width
    };
  };

  // Get an object that represents the box's position without anything extra.
  // Can pass a StyleBox, HTMLElement, or another BoxPositon.
  BoxPosition.getSimpleBoxPosition = function(obj) {
    var height = obj.div ? obj.div.offsetHeight : obj.tagName ? obj.offsetHeight : 0;
    var width = obj.div ? obj.div.offsetWidth : obj.tagName ? obj.offsetWidth : 0;
    var top = obj.div ? obj.div.offsetTop : obj.tagName ? obj.offsetTop : 0;

    obj = obj.div ? obj.div.getBoundingClientRect() :
                  obj.tagName ? obj.getBoundingClientRect() : obj;
    var ret = {
      left: obj.left,
      right: obj.right,
      top: obj.top || top,
      height: obj.height || height,
      bottom: obj.bottom || (top + (obj.height || height)),
      width: obj.width || width
    };
    return ret;
  };

  // Move a StyleBox to its specified, or next best, position. The containerBox
  // is the box that contains the StyleBox, such as a div. boxPositions are
  // a list of other boxes that the styleBox can't overlap with.
  function moveBoxToLinePosition(window, styleBox, containerBox, boxPositions) {

    // Find the best position for a cue box, b, on the video. The axis parameter
    // is a list of axis, the order of which, it will move the box along. For example:
    // Passing ["+x", "-x"] will move the box first along the x axis in the positive
    // direction. If it doesn't find a good position for it there it will then move
    // it along the x axis in the negative direction.
    function findBestPosition(b, axis) {
      var bestPosition,
          specifiedPosition = new BoxPosition(b),
          percentage = 1; // Highest possible so the first thing we get is better.

      for (var i = 0; i < axis.length; i++) {
        while (b.overlapsOppositeAxis(containerBox, axis[i]) ||
               (b.within(containerBox) && b.overlapsAny(boxPositions))) {
          b.move(axis[i]);
        }
        // We found a spot where we aren't overlapping anything. This is our
        // best position.
        if (b.within(containerBox)) {
          return b;
        }
        var p = b.intersectPercentage(containerBox);
        // If we're outside the container box less then we were on our last try
        // then remember this position as the best position.
        if (percentage > p) {
          bestPosition = new BoxPosition(b);
          percentage = p;
        }
        // Reset the box position to the specified position.
        b = new BoxPosition(specifiedPosition);
      }
      return bestPosition || specifiedPosition;
    }

    var boxPosition = new BoxPosition(styleBox),
        cue = styleBox.cue,
        linePos = computeLinePos(cue),
        axis = [];

    // If we have a line number to align the cue to.
    if (cue.snapToLines) {
      var size;
      switch (cue.vertical) {
      case "":
        axis = [ "+y", "-y" ];
        size = "height";
        break;
      case "rl":
        axis = [ "+x", "-x" ];
        size = "width";
        break;
      case "lr":
        axis = [ "-x", "+x" ];
        size = "width";
        break;
      }

      var step = boxPosition.lineHeight,
          position = step * Math.round(linePos),
          maxPosition = containerBox[size] + step,
          initialAxis = axis[0];

      // If the specified intial position is greater then the max position then
      // clamp the box to the amount of steps it would take for the box to
      // reach the max position.
      if (Math.abs(position) > maxPosition) {
        position = position < 0 ? -1 : 1;
        position *= Math.ceil(maxPosition / step) * step;
      }

      // If computed line position returns negative then line numbers are
      // relative to the bottom of the video instead of the top. Therefore, we
      // need to increase our initial position by the length or width of the
      // video, depending on the writing direction, and reverse our axis directions.
      if (linePos < 0) {
        position += cue.vertical === "" ? containerBox.height : containerBox.width;
        axis = axis.reverse();
      }

      // Move the box to the specified position. This may not be its best
      // position.
      boxPosition.move(initialAxis, position);

    } else {
      // If we have a percentage line value for the cue.
      var calculatedPercentage = (boxPosition.lineHeight / containerBox.height) * 100;

      switch (cue.lineAlign) {
      case "middle":
        linePos -= (calculatedPercentage / 2);
        break;
      case "end":
        linePos -= calculatedPercentage;
        break;
      }

      // Apply initial line position to the cue box.
      switch (cue.vertical) {
      case "":
        styleBox.applyStyles({
          top: styleBox.formatStyle(linePos, "%")
        });
        break;
      case "rl":
        styleBox.applyStyles({
          left: styleBox.formatStyle(linePos, "%")
        });
        break;
      case "lr":
        styleBox.applyStyles({
          right: styleBox.formatStyle(linePos, "%")
        });
        break;
      }

      axis = [ "+y", "-x", "+x", "-y" ];

      // Get the box position again after we've applied the specified positioning
      // to it.
      boxPosition = new BoxPosition(styleBox);
    }

    var bestPosition = findBestPosition(boxPosition, axis);
    styleBox.move(bestPosition.toCSSCompatValues(containerBox));
  }

  function WebVTT() {
    // Nothing
  }

  // Helper to allow strings to be decoded instead of the default binary utf8 data.
  WebVTT.StringDecoder = function() {
    return {
      decode: function(data) {
        if (!data) {
          return "";
        }
        if (typeof data !== "string") {
          throw new Error("Error - expected string data.");
        }
        return decodeURIComponent(encodeURIComponent(data));
      }
    };
  };

  WebVTT.convertCueToDOMTree = function(window, cuetext) {
    if (!window || !cuetext) {
      return null;
    }
    return parseContent(window, cuetext);
  };

  var FONT_SIZE_PERCENT = 0.05;
  var FONT_STYLE = "sans-serif";
  var CUE_BACKGROUND_PADDING = "1.5%";

  // Runs the processing model over the cues and regions passed to it.
  // @param overlay A block level element (usually a div) that the computed cues
  //                and regions will be placed into.
  WebVTT.processCues = function(window, cues, overlay) {
    if (!window || !cues || !overlay) {
      return null;
    }

    // Remove all previous children.
    while (overlay.firstChild) {
      overlay.removeChild(overlay.firstChild);
    }

    var paddedOverlay = window.document.createElement("div");
    paddedOverlay.style.position = "absolute";
    paddedOverlay.style.left = "0";
    paddedOverlay.style.right = "0";
    paddedOverlay.style.top = "0";
    paddedOverlay.style.bottom = "0";
    paddedOverlay.style.margin = CUE_BACKGROUND_PADDING;
    overlay.appendChild(paddedOverlay);

    // Determine if we need to compute the display states of the cues. This could
    // be the case if a cue's state has been changed since the last computation or
    // if it has not been computed yet.
    function shouldCompute(cues) {
      for (var i = 0; i < cues.length; i++) {
        if (cues[i].hasBeenReset || !cues[i].displayState) {
          return true;
        }
      }
      return false;
    }

    // We don't need to recompute the cues' display states. Just reuse them.
    if (!shouldCompute(cues)) {
      for (var i = 0; i < cues.length; i++) {
        paddedOverlay.appendChild(cues[i].displayState);
      }
      return;
    }

    var boxPositions = [],
        containerBox = BoxPosition.getSimpleBoxPosition(paddedOverlay),
        fontSize = Math.round(containerBox.height * FONT_SIZE_PERCENT * 100) / 100;
    var styleOptions = {
      font: fontSize + "px " + FONT_STYLE
    };

    (function() {
      var styleBox, cue;

      for (var i = 0; i < cues.length; i++) {
        cue = cues[i];

        // Compute the intial position and styles of the cue div.
        styleBox = new CueStyleBox(window, cue, styleOptions);
        paddedOverlay.appendChild(styleBox.div);

        // Move the cue div to it's correct line position.
        moveBoxToLinePosition(window, styleBox, containerBox, boxPositions);

        // Remember the computed div so that we don't have to recompute it later
        // if we don't have too.
        cue.displayState = styleBox.div;

        boxPositions.push(BoxPosition.getSimpleBoxPosition(styleBox));
      }
    })();
  };

  WebVTT.Parser = function(window, vttjs, decoder) {
    if (!decoder) {
      decoder = vttjs;
      vttjs = {};
    }
    if (!vttjs) {
      vttjs = {};
    }

    this.window = window;
    this.vttjs = vttjs;
    this.state = "INITIAL";
    this.buffer = "";
    this.decoder = decoder || new TextDecoder("utf8");
    this.regionList = [];
  };

  WebVTT.Parser.prototype = {
    // If the error is a ParsingError then report it to the consumer if
    // possible. If it's not a ParsingError then throw it like normal.
    reportOrThrowError: function(e) {
      if (e instanceof ParsingError) {
        this.onparsingerror && this.onparsingerror(e);
      } else {
        throw e;
      }
    },
    parse: function (data) {
      var self = this;

      // If there is no data then we won't decode it, but will just try to parse
      // whatever is in buffer already. This may occur in circumstances, for
      // example when flush() is called.
      if (data) {
        // Try to decode the data that we received.
        self.buffer += self.decoder.decode(data, {stream: true});
      }

      function collectNextLine() {
        var buffer = self.buffer;
        var pos = 0;
        while (pos < buffer.length && buffer[pos] !== '\r' && buffer[pos] !== '\n') {
          ++pos;
        }
        var line = buffer.substr(0, pos);
        // Advance the buffer early in case we fail below.
        if (buffer[pos] === '\r') {
          ++pos;
        }
        if (buffer[pos] === '\n') {
          ++pos;
        }
        self.buffer = buffer.substr(pos);
        return line;
      }

      // 3.4 WebVTT region and WebVTT region settings syntax
      function parseRegion(input) {
        var settings = new Settings();

        parseOptions(input, function (k, v) {
          switch (k) {
          case "id":
            settings.set(k, v);
            break;
          case "width":
            settings.percent(k, v);
            break;
          case "lines":
            settings.integer(k, v);
            break;
          case "regionanchor":
          case "viewportanchor":
            var xy = v.split(',');
            if (xy.length !== 2) {
              break;
            }
            // We have to make sure both x and y parse, so use a temporary
            // settings object here.
            var anchor = new Settings();
            anchor.percent("x", xy[0]);
            anchor.percent("y", xy[1]);
            if (!anchor.has("x") || !anchor.has("y")) {
              break;
            }
            settings.set(k + "X", anchor.get("x"));
            settings.set(k + "Y", anchor.get("y"));
            break;
          case "scroll":
            settings.alt(k, v, ["up"]);
            break;
          }
        }, /=/, /\s/);

        // Create the region, using default values for any values that were not
        // specified.
        if (settings.has("id")) {
          var region = new (self.vttjs.VTTRegion || self.window.VTTRegion)();
          region.width = settings.get("width", 100);
          region.lines = settings.get("lines", 3);
          region.regionAnchorX = settings.get("regionanchorX", 0);
          region.regionAnchorY = settings.get("regionanchorY", 100);
          region.viewportAnchorX = settings.get("viewportanchorX", 0);
          region.viewportAnchorY = settings.get("viewportanchorY", 100);
          region.scroll = settings.get("scroll", "");
          // Register the region.
          self.onregion && self.onregion(region);
          // Remember the VTTRegion for later in case we parse any VTTCues that
          // reference it.
          self.regionList.push({
            id: settings.get("id"),
            region: region
          });
        }
      }

      // 3.2 WebVTT metadata header syntax
      function parseHeader(input) {
        parseOptions(input, function (k, v) {
          switch (k) {
          case "Region":
            // 3.3 WebVTT region metadata header syntax
            parseRegion(v);
            break;
          }
        }, /:/);
      }

      // 5.1 WebVTT file parsing.
      try {
        var line;
        if (self.state === "INITIAL") {
          // We can't start parsing until we have the first line.
          if (!/\r\n|\n/.test(self.buffer)) {
            return this;
          }

          line = collectNextLine();

          var m = line.match(/^WEBVTT([ \t].*)?$/);
          if (!m || !m[0]) {
            throw new ParsingError(ParsingError.Errors.BadSignature);
          }

          self.state = "HEADER";
        }

        var alreadyCollectedLine = false;
        while (self.buffer) {
          // We can't parse a line until we have the full line.
          if (!/\r\n|\n/.test(self.buffer)) {
            return this;
          }

          if (!alreadyCollectedLine) {
            line = collectNextLine();
          } else {
            alreadyCollectedLine = false;
          }

          switch (self.state) {
          case "HEADER":
            // 13-18 - Allow a header (metadata) under the WEBVTT line.
            if (/:/.test(line)) {
              parseHeader(line);
            } else if (!line) {
              // An empty line terminates the header and starts the body (cues).
              self.state = "ID";
            }
            continue;
          case "NOTE":
            // Ignore NOTE blocks.
            if (!line) {
              self.state = "ID";
            }
            continue;
          case "ID":
            // Check for the start of NOTE blocks.
            if (/^NOTE($|[ \t])/.test(line)) {
              self.state = "NOTE";
              break;
            }
            // 19-29 - Allow any number of line terminators, then initialize new cue values.
            if (!line) {
              continue;
            }
            self.cue = new (self.vttjs.VTTCue || self.window.VTTCue)(0, 0, "");
            self.state = "CUE";
            // 30-39 - Check if self line contains an optional identifier or timing data.
            if (line.indexOf("-->") === -1) {
              self.cue.id = line;
              continue;
            }
            // Process line as start of a cue.
            /*falls through*/
          case "CUE":
            // 40 - Collect cue timings and settings.
            try {
              parseCue(line, self.cue, self.regionList);
            } catch (e) {
              self.reportOrThrowError(e);
              // In case of an error ignore rest of the cue.
              self.cue = null;
              self.state = "BADCUE";
              continue;
            }
            self.state = "CUETEXT";
            continue;
          case "CUETEXT":
            var hasSubstring = line.indexOf("-->") !== -1;
            // 34 - If we have an empty line then report the cue.
            // 35 - If we have the special substring '-->' then report the cue,
            // but do not collect the line as we need to process the current
            // one as a new cue.
            if (!line || hasSubstring && (alreadyCollectedLine = true)) {
              // We are done parsing self cue.
              self.oncue && self.oncue(self.cue);
              self.cue = null;
              self.state = "ID";
              continue;
            }
            if (self.cue.text) {
              self.cue.text += "\n";
            }
            self.cue.text += line;
            continue;
          case "BADCUE": // BADCUE
            // 54-62 - Collect and discard the remaining cue.
            if (!line) {
              self.state = "ID";
            }
            continue;
          }
        }
      } catch (e) {
        self.reportOrThrowError(e);

        // If we are currently parsing a cue, report what we have.
        if (self.state === "CUETEXT" && self.cue && self.oncue) {
          self.oncue(self.cue);
        }
        self.cue = null;
        // Enter BADWEBVTT state if header was not parsed correctly otherwise
        // another exception occurred so enter BADCUE state.
        self.state = self.state === "INITIAL" ? "BADWEBVTT" : "BADCUE";
      }
      return this;
    },
    flush: function () {
      var self = this;
      try {
        // Finish decoding the stream.
        self.buffer += self.decoder.decode();
        // Synthesize the end of the current cue or region.
        if (self.cue || self.state === "HEADER") {
          self.buffer += "\n\n";
          self.parse();
        }
        // If we've flushed, parsed, and we're still on the INITIAL state then
        // that means we don't have enough of the stream to parse the first
        // line.
        if (self.state === "INITIAL") {
          throw new ParsingError(ParsingError.Errors.BadSignature);
        }
      } catch(e) {
        self.reportOrThrowError(e);
      }
      self.onflush && self.onflush();
      return this;
    }
  };

  global.WebVTT = WebVTT;

}(this, (this.vttjs || {})));
;
/* The MIT License (MIT)

Copyright (c) 2014-2015 Benoit Tremblay <trembl.ben@gmail.com>

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE. */
/*global define, YT*/
(function (root, factory) {
  if(typeof define === 'function' && define.amd) {
    define(['videojs'], function(videojs){
      return (root.Youtube = factory(videojs));
    });
  } else if(typeof module === 'object' && module.exports) {
    module.exports = factory(require('video.js'));
  } else {
    root.Youtube = factory(root.videojs);
  }
}(this, function(videojs) {
  'use strict';

  var Tech = videojs.getComponent('Tech');

  var Youtube = videojs.extend(Tech, {

    constructor: function(options, ready) {
      Tech.call(this, options, ready);

      this.setPoster(options.poster);
      this.setSrc(this.options_.source, true);

      // Set the vjs-youtube class to the player
      // Parent is not set yet so we have to wait a tick
      setTimeout(function() {
        this.el_.parentNode.className += ' vjs-youtube';

        if (_isOnMobile) {
          this.el_.parentNode.className += ' vjs-youtube-mobile';
        }

        if (Youtube.isApiReady) {
          this.initYTPlayer();
        } else {
          Youtube.apiReadyQueue.push(this);
        }
      }.bind(this));
    },

    dispose: function() {
      this.el_.parentNode.className = this.el_.parentNode.className
        .replace(' vjs-youtube', '')
        .replace(' vjs-youtube-mobile', '');
    },

    createEl: function() {
      var div = document.createElement('div');
      div.setAttribute('id', this.options_.techId);
      div.setAttribute('style', 'width:100%;height:100%;top:0;left:0;position:absolute');

      var divWrapper = document.createElement('div');
      divWrapper.appendChild(div);

      if (!_isOnMobile && !this.options_.ytControls) {
        var divBlocker = document.createElement('div');
        divBlocker.setAttribute('class', 'vjs-iframe-blocker');
        divBlocker.setAttribute('style', 'position:absolute;top:0;left:0;width:100%;height:100%');

        // In case the blocker is still there and we want to pause
        divBlocker.onclick = function() {
          this.pause();
        }.bind(this);

        divWrapper.appendChild(divBlocker);
      }

      return divWrapper;
    },

    initYTPlayer: function() {
      var playerVars = {
        controls: 0,
        modestbranding: 1,
        rel: 0,
        showinfo: 0,
        loop: this.options_.loop ? 1 : 0,
		iv_load_policy: 3,
		wmode: "opaque"
      };

      // Let the user set any YouTube parameter
      // https://developers.google.com/youtube/player_parameters?playerVersion=HTML5#Parameters
      // To use YouTube controls, you must use ytControls instead
      // To use the loop or autoplay, use the video.js settings

      if (typeof this.options_.autohide !== 'undefined') {
        playerVars.autohide = this.options_.autohide;
      }

      if (typeof this.options_['cc_load_policy'] !== 'undefined') {
        playerVars['cc_load_policy'] = this.options_['cc_load_policy'];
      }

      if (typeof this.options_.ytControls !== 'undefined') {
        playerVars.controls = this.options_.ytControls;
      }

      if (typeof this.options_.disablekb !== 'undefined') {
        playerVars.disablekb = this.options_.disablekb;
      }

      if (typeof this.options_.end !== 'undefined') {
        playerVars.end = this.options_.end;
      }

      if (typeof this.options_.color !== 'undefined') {
        playerVars.color = this.options_.color;
      }

      if (!playerVars.controls) {
        // Let video.js handle the fullscreen unless it is the YouTube native controls
        playerVars.fs = 0;
      } else if (typeof this.options_.fs !== 'undefined') {
        playerVars.fs = this.options_.fs;
      }

      if (typeof this.options_.end !== 'undefined') {
        playerVars.end = this.options_.end;
      }

      if (typeof this.options_.hl !== 'undefined') {
        playerVars.hl = this.options_.hl;
      } else if (typeof this.options_.language !== 'undefined') {
        // Set the YouTube player on the same language than video.js
        playerVars.hl = this.options_.language.substr(0, 2);
      }

      if (typeof this.options_['iv_load_policy'] !== 'undefined') {
        playerVars['iv_load_policy'] = this.options_['iv_load_policy'];
      }

      if (typeof this.options_.list !== 'undefined') {
        playerVars.list = this.options_.list;
      } else if (this.url && typeof this.url.listId !== 'undefined') {
        playerVars.list = this.url.listId;
      }

      if (typeof this.options_.listType !== 'undefined') {
        playerVars.listType = this.options_.listType;
      }

      if (typeof this.options_.modestbranding !== 'undefined') {
        playerVars.modestbranding = this.options_.modestbranding;
      }

      if (typeof this.options_.playlist !== 'undefined') {
        playerVars.playlist = this.options_.playlist;
      }

      if (typeof this.options_.playsinline !== 'undefined') {
        playerVars.playsinline = this.options_.playsinline;
      }

      if (typeof this.options_.rel !== 'undefined') {
        playerVars.rel = this.options_.rel;
      }

      if (typeof this.options_.showinfo !== 'undefined') {
        playerVars.showinfo = this.options_.showinfo;
      }

      if (typeof this.options_.start !== 'undefined') {
        playerVars.start = this.options_.start;
      }

      if (typeof this.options_.theme !== 'undefined') {
        playerVars.theme = this.options_.theme;
      }

      this.activeVideoId = this.url ? this.url.videoId : null;
      this.activeList = playerVars.list;

      this.ytPlayer = new YT.Player(this.options_.techId, {
        videoId: this.activeVideoId,
        playerVars: playerVars,
        events: {
          onReady: this.onPlayerReady.bind(this),
          onPlaybackQualityChange: this.onPlayerPlaybackQualityChange.bind(this),
          onStateChange: this.onPlayerStateChange.bind(this),
          onError: this.onPlayerError.bind(this)
        }
      });
    },

    onPlayerReady: function() {
      this.playerReady_ = true;
      this.triggerReady();

      if (this.playOnReady) {
        this.play();
      }
    },

    onPlayerPlaybackQualityChange: function() {

    },

    onPlayerStateChange: function(e) {
      var state = e.data;

      if (state === this.lastState || this.errorNumber) {
        return;
      }

      switch (state) {
        case -1:
          this.trigger('loadedmetadata');
          this.trigger('durationchange');
          break;

        case YT.PlayerState.ENDED:
          this.trigger('ended');
          break;

        case YT.PlayerState.PLAYING:
          this.trigger('timeupdate');
          this.trigger('durationchange');
          this.trigger('playing');
          this.trigger('play');

          if (this.isSeeking) {
            this.onSeeked();
          }
          break;

        case YT.PlayerState.PAUSED:
          this.trigger('canplay');
          if (this.isSeeking) {
            this.onSeeked();
          } else {
            this.trigger('pause');
          }
          break;

        case YT.PlayerState.BUFFERING:
          this.player_.trigger('timeupdate');
          this.player_.trigger('waiting');
          break;
      }

      this.lastState = state;
    },

    onPlayerError: function(e) {
      this.errorNumber = e.data;
      this.trigger('error');

      this.ytPlayer.stopVideo();
      this.ytPlayer.destroy();
      this.ytPlayer = null;
    },

    error: function() {
      switch (this.errorNumber) {
        case 5:
          return { code: 'Error while trying to play the video' };

        case 2:
        case 100:
        case 150:
          return { code: 'Unable to find the video' };

        case 101:
          return { code: 'Playback on other Websites has been disabled by the video owner.' };
      }

      return { code: 'YouTube unknown error (' + this.errorNumber + ')' };
    },

    src: function(src) {
      if (src) {
        this.setSrc({ src: src });

        if (this.options_.autoplay && !_isOnMobile) {
          this.play();
        }
      }

      return this.source;
    },

    poster: function() {
      // You can't start programmaticlly a video with a mobile
      // through the iframe so we hide the poster and the play button (with CSS)
      if (_isOnMobile) {
        return null;
      }

      return this.poster_;
    },

    setPoster: function(poster) {
      this.poster_ = poster;
    },

    setSrc: function(source) {
      if (!source || !source.src) {
        return;
      }

      delete this.errorNumber;
      this.source = source;
      this.url = Youtube.parseUrl(source.src);

      if (!this.options_.poster) {
        if (this.url.videoId) {
          // Set the low resolution first
          this.poster_ = 'https://img.youtube.com/vi/' + this.url.videoId + '/0.jpg';

          // Check if their is a high res
          this.checkHighResPoster();
        }
      }

      if (this.options_.autoplay && !_isOnMobile) {
        if (this.isReady_) {
          this.play();
        } else {
          this.playOnReady = true;
        }
      }
    },

    play: function() {
      if (!this.url || !this.url.videoId) {
        return;
      }

      this.wasPausedBeforeSeek = false;

      if (this.isReady_) {
        if (this.url.listId) {
          if (this.activeList === this.url.listId) {
            this.ytPlayer.playVideo();
          } else {
            this.ytPlayer.loadPlaylist(this.url.listId);
            this.activeList = this.url.listId;
          }
        }

        if (this.activeVideoId === this.url.videoId) {
          this.ytPlayer.playVideo();
        } else {
          this.ytPlayer.loadVideoById(this.url.videoId);
          this.activeVideoId = this.url.videoId;
        }
      } else {
        this.trigger('waiting');
        this.playOnReady = true;
      }
    },

    pause: function() {
      if (this.ytPlayer) {
        this.ytPlayer.pauseVideo();
      }
    },

    paused: function() {
      return (this.ytPlayer) ?
        (this.lastState !== YT.PlayerState.PLAYING && this.lastState !== YT.PlayerState.BUFFERING)
        : true;
    },

    currentTime: function() {
      return this.ytPlayer ? this.ytPlayer.getCurrentTime() : 0;
    },

    setCurrentTime: function(seconds) {
      if (this.lastState === YT.PlayerState.PAUSED) {
        this.timeBeforeSeek = this.currentTime();
      }

      if (!this.isSeeking) {
        this.wasPausedBeforeSeek = this.paused();
      }

      this.ytPlayer.seekTo(seconds, true);
      this.trigger('timeupdate');
      this.trigger('seeking');
      this.isSeeking = true;

      // A seek event during pause does not return an event to trigger a seeked event,
      // so run an interval timer to look for the currentTime to change
      if (this.lastState === YT.PlayerState.PAUSED && this.timeBeforeSeek !== seconds) {
        clearInterval(this.checkSeekedInPauseInterval);
        this.checkSeekedInPauseInterval = setInterval(function() {
          if (this.lastState !== YT.PlayerState.PAUSED || !this.isSeeking) {
            // If something changed while we were waiting for the currentTime to change,
            //  clear the interval timer
            clearInterval(this.checkSeekedInPauseInterval);
          } else if (this.currentTime() !== this.timeBeforeSeek) {
            this.trigger('timeupdate');
            this.onSeeked();
          }
        }.bind(this), 250);
      }
    },

    onSeeked: function() {
      clearInterval(this.checkSeekedInPauseInterval);
      this.isSeeking = false;

      if (this.wasPausedBeforeSeek) {
        this.pause();
      }

      this.trigger('seeked');
    },

    playbackRate: function() {
      return this.ytPlayer ? this.ytPlayer.getPlaybackRate() : 1;
    },

    setPlaybackRate: function(suggestedRate) {
      if (!this.ytPlayer) {
        return;
      }

      this.ytPlayer.setPlaybackRate(suggestedRate);
      this.trigger('ratechange');
    },

    duration: function() {
      return this.ytPlayer ? this.ytPlayer.getDuration() : 0;
    },

    currentSrc: function() {
      return this.source;
    },

    ended: function() {
      return this.ytPlayer ? (this.lastState === YT.PlayerState.ENDED) : false;
    },

    volume: function() {
      return this.ytPlayer ? this.ytPlayer.getVolume() / 100.0 : 1;
    },

    setVolume: function(percentAsDecimal) {
      if (!this.ytPlayer) {
        return;
      }

      this.ytPlayer.setVolume(percentAsDecimal * 100.0);
      this.setTimeout( function(){
        this.trigger('volumechange');
      }, 50);

    },

    muted: function() {
      return this.ytPlayer ? this.ytPlayer.isMuted() : false;
    },

    setMuted: function(mute) {
      if (!this.ytPlayer) {
        return;
      }
      else{
        this.muted(true);
      }

      if (mute) {
        this.ytPlayer.mute();
      } else {
        this.ytPlayer.unMute();
      }
      this.setTimeout( function(){
        this.trigger('volumechange');
      }, 50);
    },

    buffered: function() {
      if(!this.ytPlayer || !this.ytPlayer.getVideoLoadedFraction) {
        return {
          length: 0,
          start: function() {
            throw new Error('This TimeRanges object is empty');
          },
          end: function() {
            throw new Error('This TimeRanges object is empty');
          }
        };
      }

      var end = this.ytPlayer.getVideoLoadedFraction() * this.ytPlayer.getDuration();

      return {
        length: this.ytPlayer.getDuration(),
        start: function() { return 0; },
        end: function() { return end; }
      };
    },

    // TODO: Can we really do something with this on YouTUbe?
    load: function() {},
    reset: function() {},

    supportsFullScreen: function() {
    	// Added for #0065438
    	var isIE9 = (/MSIE\s9\.0/).test(navigator.userAgent);
       	if(isIE9){
    		return false;
    	}else{
    	    return true;
    	}
    },

    // Tries to get the highest resolution thumbnail available for the video
    checkHighResPoster: function(){
      var uri = 'https://img.youtube.com/vi/' + this.url.videoId + '/maxresdefault.jpg';

      try {
        var image = new Image();
        image.onload = function(){
          // Onload may still be called if YouTube returns the 120x90 error thumbnail
          if('naturalHeight' in image){
            if (image.naturalHeight <= 90 || image.naturalWidth <= 120) {
              return;
            }
          } else if(image.height <= 90 || image.width <= 120) {
            return;
          }

          this.poster_ = uri;
          this.trigger('posterchange');
        }.bind(this);
        image.onerror = function(){};
        image.src = uri;
      }
      catch(e){}
    }
  });

  Youtube.isSupported = function() {
    return true;
  };

  Youtube.canPlaySource = function(e) {
    return Youtube.canPlayType(e.type);
  };

  Youtube.canPlayType = function(e) {
    return (e === 'video/youtube');
  };

  var _isOnMobile = /(iPad|iPhone|iPod|Android)/g.test(navigator.userAgent);

  Youtube.parseUrl = function(url) {
    var result = {
      videoId: null
    };

    var regex = /^.*(youtu.be\/|v\/|u\/\w\/|embed\/|watch\?v=|\&v=)([^#\&\?]*).*/;
    var match = url.match(regex);

    if (match && match[2].length === 11) {
      result.videoId = match[2];
    }

    var regPlaylist = /[?&]list=([^#\&\?]+)/;
    match = url.match(regPlaylist);

    if(match && match[1]) {
      result.listId = match[1];
    }

    return result;
  };

  function loadApi() {
    var tag = document.createElement('script');
    tag.src = 'https://www.youtube.com/iframe_api';
    var firstScriptTag = document.getElementsByTagName('script')[0];
    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
  }

  function injectCss() {
    var css = // iframe blocker to catch mouse events
              '.vjs-youtube .vjs-iframe-blocker { display: none; }' +
              '.vjs-youtube.vjs-user-inactive .vjs-iframe-blocker { display: block; }' +
              '.vjs-youtube .vjs-poster { background-size: cover; }' +
              '.vjs-youtube-mobile .vjs-big-play-button { display: none; }';

    var head = document.head || document.getElementsByTagName('head')[0];

    var style = document.createElement('style');
    style.type = 'text/css';

    if (style.styleSheet){
      style.styleSheet.cssText = css;
    } else {
      style.appendChild(document.createTextNode(css));
    }

    head.appendChild(style);
  }

  Youtube.apiReadyQueue = [];

  window.onYouTubeIframeAPIReady = function() {
    Youtube.isApiReady = true;

    for (var i = 0; i < Youtube.apiReadyQueue.length; ++i) {
      Youtube.apiReadyQueue[i].initYTPlayer();
    }
  };

  loadApi();
  injectCss();

  // Older versions of VJS5 doesn't have the registerTech function
  if (typeof videojs.registerTech !== 'undefined') {
    videojs.registerTech('Youtube', Youtube);
  } else {
    videojs.registerComponent('Youtube', Youtube);
  }
}));
;
/* The MIT License (MIT)
Copyright (c) 2014-2015 Benoit Tremblay <trembl.ben@gmail.com>
Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:
The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE. */
(function (root, factory) {
  if(typeof define === 'function' && define.amd) {
    define(['video.js'], function(videojs){
      return (root.Vimeo = factory(videojs));
    });
  } else if(typeof module === 'object' && module.exports) {
    module.exports = (root.Vimeo = factory(require('video.js')));
  } else {
    root.Vimeo = factory(root.videojs);
  }
}(this, function(videojs) {
  'use strict';
  
  var VimeoState = {
    UNSTARTED: -1,
    ENDED: 0,
    PLAYING: 1,
    PAUSED: 2,
    BUFFERING: 3
  };

  var Tech = videojs.getComponent('Tech');

  var Vimeo = videojs.extend(Tech, {
    constructor: function(options, ready) {
      Tech.call(this, options, ready);
      if(options.poster != "") {this.setPoster(options.poster);}
      this.setSrc(this.options_.source.src, true);

      // Set the vjs-vimeo class to the player
      // Parent is not set yet so we have to wait a tick
      setTimeout(function() {
        this.el_.parentNode.className += ' vjs-vimeo';
        
        if (Vimeo.isApiReady) {
          this.initPlayer();
        } else {
          Vimeo.apiReadyQueue.push(this);
        }
      }.bind(this));
      
    },
    
    dispose: function() {
      this.el_.parentNode.className = this.el_.parentNode.className.replace(' vjs-vimeo', '');
    },
    
    createEl: function() {
      this.vimeo = {};
      this.vimeoInfo = {};
      this.baseUrl = 'https://player.vimeo.com/video/';
      this.baseApiUrl = 'https://www.vimeo.com/api/v2/video/';
      this.videoId = Vimeo.parseUrl(this.options_.source.src).videoId;
      
      this.iframe = document.createElement('iframe');
      this.iframe.setAttribute('id', this.options_.techId);
      this.iframe.setAttribute('title', 'Vimeo Video Player');
      this.iframe.setAttribute('class', 'vimeoplayer');
      this.iframe.setAttribute('src', this.baseUrl + this.videoId + '?api=1&player_id=' + this.options_.techId);
      this.iframe.setAttribute('frameborder', '0');
      this.iframe.setAttribute('scrolling', 'no');
      this.iframe.setAttribute('marginWidth', '0');
      this.iframe.setAttribute('marginHeight', '0');
      this.iframe.setAttribute('webkitAllowFullScreen', '0');
      this.iframe.setAttribute('mozallowfullscreen', '0');
      this.iframe.setAttribute('allowFullScreen', '0');

      var divWrapper = document.createElement('div');
      // divWrapper.setAttribute('style', 'width:638px; height:358px; overflow:hidden; margin:0 auto;');
	  divWrapper.setAttribute('style', 'margin:0 auto;padding-bottom:56.25%;width:100%;height:0;position:relative;overflow:hidden;');
	  divWrapper.setAttribute('class', 'vimeoFrame');
      divWrapper.appendChild(this.iframe);

      if (!_isOnMobile && !this.options_.ytControls) {
        var divBlocker = document.createElement('div');
        divBlocker.setAttribute('class', 'vjs-iframe-blocker');
        divBlocker.setAttribute('style', 'position:absolute;top:0;left:0;width:100%;height:100%');

        // In case the blocker is still there and we want to pause
        divBlocker.onclick = function() {
          this.onPause();
        }.bind(this);

        divWrapper.appendChild(divBlocker);
      }
      
      if(this.options_.poster == "" && this.videoId != null) {
        $.getJSON(this.baseApiUrl + this.videoId + '.json?callback=?', {format: "json"}, (function(_this){
          return function(data) {
            // Set the low resolution first
            _this.setPoster(data[0].thumbnail_large);
          };
        })(this));
      }

      return divWrapper;
    },
    
    initPlayer: function() {
      var self = this;
      
      $(self.iframe).load(function(){
        var vimeoVideoID = Vimeo.parseUrl(self.options_.source.src).videoId;
        //load vimeo
        if (self.vimeo && self.vimeo.api) {
          self.vimeo.api('unload');
          delete self.vimeo;
        }
        
        self.vimeo = $f(self.iframe);
        
        self.vimeoInfo = {
          state: VimeoState.UNSTARTED,
          volume: 1,
          muted: false,
          muteVolume: 1,
          time: 0,
          duration: 0,
          buffered: 0,
          url: self.baseUrl + self.videoId,
          error: null
        };

        self.vimeo.addEvent('ready', function(id){
          self.onReady();

          self.vimeo.addEvent('loadProgress', function(data, id){ self.onLoadProgress(data); });
          self.vimeo.addEvent('playProgress', function(data, id){ self.onPlayProgress(data); });
          self.vimeo.addEvent('play', function(id){ self.onPlay(); });
          self.vimeo.addEvent('pause', function(id){ self.onPause(); });
          self.vimeo.addEvent('finish', function(id){ self.onFinish(); });
          self.vimeo.addEvent('seek', function(data, id){ self.onSeek(data); });

        });
      });
      
    },
    
    onReady: function(){
      this.playerReady_ = true;
      this.triggerReady();
      this.trigger('loadedmetadata');
      if (this.startMuted) {
        this.setMuted(true);
        this.startMuted = false;
      }
    },
    
    onLoadProgress: function(data) {
      var durationUpdate = !this.vimeoInfo.duration;
      this.vimeoInfo.duration = data.duration;
      this.vimeoInfo.buffered = data.percent;
      this.trigger('progress');
      if (durationUpdate) this.trigger('durationchange');
    },
    onPlayProgress: function(data) {
	  if(typeof this.vimeoInfo.duration == "undefined" || this.vimeoInfo.duration == 0) {
	  	this.vimeoInfo.duration = data.duration;
	  	this.duration(data.duration);
	  	this.trigger('durationchange');
	  }
      this.vimeoInfo.time = data.seconds;
      this.trigger('timeupdate');
    },
    onPlay: function() {
      this.vimeoInfo.state = VimeoState.PLAYING;
      this.trigger('play');
    },
    onPause: function() {
      this.vimeoInfo.state = VimeoState.PAUSED;
      this.trigger('pause');
    },
    onFinish: function() {
      this.vimeoInfo.state = VimeoState.ENDED;
      this.trigger('ended');
    },
    onSeek: function(data) {
      this.trigger('seeking');
      this.vimeoInfo.time = data.seconds;
      this.trigger('timeupdate');
      this.trigger('seeked');
    },
    onError: function(error){
      this.error = error;
      this.trigger('error');
    },
    
    error: function() {
      switch (this.errorNumber) {
        case 2:
          return { code: 'Unable to find the video' };

        case 5:
          return { code: 'Error while trying to play the video' };

        case 100:
          return { code: 'Unable to find the video' };

        case 101:
        case 150:
          return { code: 'Playback on other Websites has been disabled by the video owner.' };
      }

      return { code: 'Vimeo unknown error (' + this.errorNumber + ')' };
    },
    
    src: function() {
      return this.source;
    },

    poster: function() {
      return this.poster_;
    },

    setPoster: function(poster) {
      this.poster_ = poster;
    },

    setSrc: function(source) {
      if (!source || !source.src) {
        return;
      }

      this.source = source;
      this.url = Vimeo.parseUrl(source.src);

      if (!this.options_.poster && this.url.videoId != null) {
          $.getJSON(this.baseApiUrl + this.videoId + '.json?callback=?', {format: "json"}, (function(_this){
            return function(data) {
              // Set the low resolution first
              _this.poster_ = data[0].thumbnail_small;
            };
          })(this));

          // Check if their is a high res
          this.checkHighResPoster();
      }

      if (this.options_.autoplay && !_isOnMobile) {
        if (this.isReady_) {
          this.play();
        } else {
          this.playOnReady = true;
        }
      }
    },
    
    supportsFullScreen: function() {
    	// Added for #0065438
    	var isIE9 = (/MSIE\s9\.0/).test(navigator.userAgent);
    	if(isIE9){
    		return false;
    	}else{
    	    return true;
    	}
       },
    
    //TRIGGER
    load : function(){},
    play : function(){ this.vimeo.api('play'); },
    pause : function(){ this.vimeo.api('pause'); },
    paused : function(){
      return this.vimeoInfo.state !== VimeoState.PLAYING &&
             this.vimeoInfo.state !== VimeoState.BUFFERING;
    },

    currentTime : function(){ return this.vimeoInfo.time || 0; },

    setCurrentTime :function(seconds){
      this.vimeo.api('seekTo', seconds);
      this.player_.trigger('timeupdate');
    },

    duration :function(){ return this.vimeoInfo.duration || 0; },
    buffered :function(){ return videojs.createTimeRange(0, (this.vimeoInfo.buffered*this.vimeoInfo.duration) || 0); },

    volume :function() { return (this.vimeoInfo.muted)? this.vimeoInfo.muteVolume : this.vimeoInfo.volume; },
    setVolume :function(percentAsDecimal){
      this.vimeo.api('setvolume', percentAsDecimal);
      this.vimeoInfo.volume = percentAsDecimal;
      this.player_.trigger('volumechange');
    },
    currentSrc :function() {
      return this.el_.src;
    },
    muted :function() { return this.vimeoInfo.muted || false; },
    setMuted :function(muted) {
      if (muted) {
        this.vimeoInfo.muteVolume = this.vimeoInfo.volume;
        this.setVolume(0);
      } else {
        this.setVolume(this.vimeoInfo.muteVolume);
      }

      this.vimeoInfo.muted = muted;
      this.player_.trigger('volumechange');
    },

    // Tries to get the highest resolution thumbnail available for the video
    checkHighResPoster: function(){
      var uri = '';

      try {
        if(this.url.videoId != null){
          $.getJSON(this.baseApiUrl + this.videoId + '.json?callback=?', {format: "json"}, (function(_uri){
            return function(data) {
              // Set the low resolution first
              _uri = data[0].thumbnail_large;
            };
          })(uri));
          
          var image = new Image();
          image.onload = function(){
            // Onload thumbnail
            if('naturalHeight' in this){
              if(this.naturalHeight <= 90 || this.naturalWidth <= 120) {
                this.onerror();
                return;
              }
            } else if(this.height <= 90 || this.width <= 120) {
              this.onerror();
              return;
            }

            this.poster_ = uri;
            this.trigger('posterchange');
          }.bind(this);
          image.onerror = function(){};
          image.src = uri;
        }
      }
      catch(e){}
    }
  });

  Vimeo.isSupported = function() {
    return true;
  };

  Vimeo.canPlaySource = function(e) {
    return (e.type === 'video/vimeo');
  };

  var _isOnMobile = /(iPad|iPhone|iPod|Android)/g.test(navigator.userAgent);

  Vimeo.parseUrl = function(url) {
    var result = {
      videoId: null
    };

    var regex = /^.*(vimeo\.com\/)((channels\/[A-z]+\/)|(groups\/[A-z]+\/videos\/))?([0-9]+)/;
    var match = url.match(regex);

    if (match) {
      result.videoId = match[5];
    }

    return result;
  };

  function injectCss() {
    var css = // iframe blocker to catch mouse events
              '.vjs-vimeo { overflow: hidden }' +
              '.vjs-vimeo .vjs-iframe-blocker { display: none; }' +
              '.vjs-vimeo.vjs-user-inactive .vjs-iframe-blocker { display: block; }' +
              '.vjs-vimeo .vjs-poster { background-size: cover; }' +
			  // '.vjs-vimeo { height:100%; }' +
			  '.vimeoplayer { width:100%; height:180%; position:absolute; left:0; top:-40%; }';
              // '.vimeoplayer {display:block; width:638px; height:558px; margin:0 auto;margin-top:-150px;}';

    var head = document.head || document.getElementsByTagName('head')[0];

    var style = document.createElement('style');
    style.type = 'text/css';

    if (style.styleSheet){
      style.styleSheet.cssText = css;
    } else {
      style.appendChild(document.createTextNode(css));
    }

    head.appendChild(style);
  }

  Vimeo.apiReadyQueue = [];

  var vimeoIframeAPIReady = function() {
    Vimeo.isApiReady = true;
    injectCss();

    for (var i = 0; i < Vimeo.apiReadyQueue.length; ++i) {
      Vimeo.apiReadyQueue[i].initPlayer();
    }
  };

  vimeoIframeAPIReady();

  videojs.registerTech('Vimeo', Vimeo);
  
  
  
  // Froogaloop API -------------------------------------------------------------

  // From https://github.com/vimeo/player-api/blob/master/javascript/froogaloop.js
  // Init style shamelessly stolen from jQuery http://jquery.com
  var Froogaloop = (function(){
      // Define a local copy of Froogaloop
      function Froogaloop(iframe) {
          // The Froogaloop object is actually just the init constructor
          return new Froogaloop.fn.init(iframe);
      }

      var eventCallbacks = {},
          hasWindowEvent = false,
          isReady = false,
          slice = Array.prototype.slice,
          playerOrigin = '*';

      Froogaloop.fn = Froogaloop.prototype = {
          element: null,

          init: function(iframe) {
              if (typeof iframe === "string") {
                  iframe = document.getElementById(iframe);
              }

              this.element = iframe;

              return this;
          },

          /*
           * Calls a function to act upon the player.
           *
           * @param {string} method The name of the Javascript API method to call. Eg: 'play'.
           * @param {Array|Function} valueOrCallback params Array of parameters to pass when calling an API method
           *                                or callback function when the method returns a value.
           */
          api: function(method, valueOrCallback) {
              if (!this.element || !method) {
                  return false;
              }

              var self = this,
                  element = self.element,
                  target_id = element.id !== '' ? element.id : null,
                  params = !isFunction(valueOrCallback) ? valueOrCallback : null,
                  callback = isFunction(valueOrCallback) ? valueOrCallback : null;

              // Store the callback for get functions
              if (callback) {
                  storeCallback(method, callback, target_id);
              }

              postMessage(method, params, element);
              return self;
          },

          /*
           * Registers an event listener and a callback function that gets called when the event fires.
           *
           * @param eventName (String): Name of the event to listen for.
           * @param callback (Function): Function that should be called when the event fires.
           */
          addEvent: function(eventName, callback) {
              if (!this.element) {
                  return false;
              }

              var self = this,
                  element = self.element,
                  target_id = element.id !== '' ? element.id : null;


              storeCallback(eventName, callback, target_id);

              // The ready event is not registered via postMessage. It fires regardless.
              if (eventName != 'ready') {
                  postMessage('addEventListener', eventName, element);
              }
              else if (eventName == 'ready' && isReady) {
                  callback.call(null, target_id);
              }

              return self;
          },

          /*
           * Unregisters an event listener that gets called when the event fires.
           *
           * @param eventName (String): Name of the event to stop listening for.
           */
          removeEvent: function(eventName) {
              if (!this.element) {
                  return false;
              }

              var self = this,
                  element = self.element,
                  target_id = element.id !== '' ? element.id : null,
                  removed = removeCallback(eventName, target_id);

              // The ready event is not registered
              if (eventName != 'ready' && removed) {
                  postMessage('removeEventListener', eventName, element);
              }
          }
      };

      /**
       * Handles posting a message to the parent window.
       *
       * @param method (String): name of the method to call inside the player. For api calls
       * this is the name of the api method (api_play or api_pause) while for events this method
       * is api_addEventListener.
       * @param params (Object or Array): List of parameters to submit to the method. Can be either
       * a single param or an array list of parameters.
       * @param target (HTMLElement): Target iframe to post the message to.
       */
      function postMessage(method, params, target) {
          if (target.contentWindow == null || !target.contentWindow.postMessage) {
              return false;
          }

          var data = JSON.stringify({
              method: method,
              value: params
          });

          target.contentWindow.postMessage(data, playerOrigin);
      }

      /**
       * Event that fires whenever the window receives a message from its parent
       * via window.postMessage.
       */
      function onMessageReceived(event) {
          var data, method;

          try {
              data = JSON.parse(event.data);
              method = data.event || data.method;
          }
          catch(e)  {
              //fail silently... like a ninja!
          }

          if (method == 'ready' && !isReady) {
              isReady = true;
          }

          // Handles messages from the vimeo player only
          if (!(/^https?:\/\/player.vimeo.com/).test(event.origin)) {
              return false;
          }

          if (playerOrigin === '*') {
              playerOrigin = event.origin;
          }

          var value = data.value,
              eventData = data.data,
              target_id = target_id === '' ? null : data.player_id,

              callback = getCallback(method, target_id),
              params = [];

          if (!callback) {
              return false;
          }

          if (value !== undefined) {
              params.push(value);
          }

          if (eventData) {
              params.push(eventData);
          }

          if (target_id) {
              params.push(target_id);
          }

          return params.length > 0 ? callback.apply(null, params) : callback.call();
      }


      /**
       * Stores submitted callbacks for each iframe being tracked and each
       * event for that iframe.
       *
       * @param eventName (String): Name of the event. Eg. api_onPlay
       * @param callback (Function): Function that should get executed when the
       * event is fired.
       * @param target_id (String) [Optional]: If handling more than one iframe then
       * it stores the different callbacks for different iframes based on the iframe's
       * id.
       */
      function storeCallback(eventName, callback, target_id) {
          if (target_id) {
              if (!eventCallbacks[target_id]) {
                  eventCallbacks[target_id] = {};
              }
              eventCallbacks[target_id][eventName] = callback;
          }
          else {
              eventCallbacks[eventName] = callback;
          }
      }

      /**
       * Retrieves stored callbacks.
       */
      function getCallback(eventName, target_id) {
          if (target_id && eventCallbacks[target_id]) {
              return eventCallbacks[target_id][eventName];
          }
          else if (eventCallbacks[eventName]) {
              return eventCallbacks[eventName];
          }
      }

      function removeCallback(eventName, target_id) {
          if (target_id && eventCallbacks[target_id]) {
              if (!eventCallbacks[target_id][eventName]) {
                  return false;
              }
              eventCallbacks[target_id][eventName] = null;
          }
          else {
              if (!eventCallbacks[eventName]) {
                  return false;
              }
              eventCallbacks[eventName] = null;
          }

          return true;
      }

      function isFunction(obj) {
          return !!(obj && obj.constructor && obj.call && obj.apply);
      }

      function isArray(obj) {
          return toString.call(obj) === '[object Array]';
      }

      // Give the init function the Froogaloop prototype for later instantiation
      Froogaloop.fn.init.prototype = Froogaloop.fn;

      // Listens for the message event.
      // W3C
      if (window.addEventListener) {
          window.addEventListener('message', onMessageReceived, false);
      }
      // IE
      else {
          window.attachEvent('onmessage', onMessageReceived);
      }

      // Expose froogaloop to the global object
      return (window.Froogaloop = window.$f = Froogaloop);

  })();
}));;

/*
 * jQuery UI Droppable 1.8.7
 *
 * Copyright 2010, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Droppables
 *
 * Depends:
 *	jquery.ui.core.js
 *	jquery.ui.widget.js
 *	jquery.ui.mouse.js
 *	jquery.ui.draggable.js
 */
(function(d){d.widget("ui.droppable",{widgetEventPrefix:"drop",options:{accept:"*",activeClass:false,addClasses:true,greedy:false,hoverClass:false,scope:"default",tolerance:"intersect"},_create:function(){var a=this.options,b=a.accept;this.isover=0;this.isout=1;this.accept=d.isFunction(b)?b:function(c){return c.is(b)};this.proportions={width:this.element[0].offsetWidth,height:this.element[0].offsetHeight};d.ui.ddmanager.droppables[a.scope]=d.ui.ddmanager.droppables[a.scope]||[];d.ui.ddmanager.droppables[a.scope].push(this);
a.addClasses&&this.element.addClass("ui-droppable")},destroy:function(){for(var a=d.ui.ddmanager.droppables[this.options.scope],b=0;b<a.length;b++)a[b]==this&&a.splice(b,1);this.element.removeClass("ui-droppable ui-droppable-disabled").removeData("droppable").unbind(".droppable");return this},_setOption:function(a,b){if(a=="accept")this.accept=d.isFunction(b)?b:function(c){return c.is(b)};d.Widget.prototype._setOption.apply(this,arguments)},_activate:function(a){var b=d.ui.ddmanager.current;this.options.activeClass&&
this.element.addClass(this.options.activeClass);b&&this._trigger("activate",a,this.ui(b))},_deactivate:function(a){var b=d.ui.ddmanager.current;this.options.activeClass&&this.element.removeClass(this.options.activeClass);b&&this._trigger("deactivate",a,this.ui(b))},_over:function(a){var b=d.ui.ddmanager.current;if(!(!b||(b.currentItem||b.element)[0]==this.element[0]))if(this.accept.call(this.element[0],b.currentItem||b.element)){this.options.hoverClass&&this.element.addClass(this.options.hoverClass);
this._trigger("over",a,this.ui(b))}},_out:function(a){var b=d.ui.ddmanager.current;if(!(!b||(b.currentItem||b.element)[0]==this.element[0]))if(this.accept.call(this.element[0],b.currentItem||b.element)){this.options.hoverClass&&this.element.removeClass(this.options.hoverClass);this._trigger("out",a,this.ui(b))}},_drop:function(a,b){var c=b||d.ui.ddmanager.current;if(!c||(c.currentItem||c.element)[0]==this.element[0])return false;var e=false;this.element.find(":data(droppable)").not(".ui-draggable-dragging").each(function(){var g=
d.data(this,"droppable");if(g.options.greedy&&!g.options.disabled&&g.options.scope==c.options.scope&&g.accept.call(g.element[0],c.currentItem||c.element)&&d.ui.intersect(c,d.extend(g,{offset:g.element.offset()}),g.options.tolerance)){e=true;return false}});if(e)return false;if(this.accept.call(this.element[0],c.currentItem||c.element)){this.options.activeClass&&this.element.removeClass(this.options.activeClass);this.options.hoverClass&&this.element.removeClass(this.options.hoverClass);this._trigger("drop",
a,this.ui(c));return this.element}return false},ui:function(a){return{draggable:a.currentItem||a.element,helper:a.helper,position:a.position,offset:a.positionAbs}}});d.extend(d.ui.droppable,{version:"1.8.7"});d.ui.intersect=function(a,b,c){if(!b.offset)return false;var e=(a.positionAbs||a.position.absolute).left,g=e+a.helperProportions.width,f=(a.positionAbs||a.position.absolute).top,h=f+a.helperProportions.height,i=b.offset.left,k=i+b.proportions.width,j=b.offset.top,l=j+b.proportions.height;
switch(c){case "fit":return i<=e&&g<=k&&j<=f&&h<=l;case "intersect":return i<e+a.helperProportions.width/2&&g-a.helperProportions.width/2<k&&j<f+a.helperProportions.height/2&&h-a.helperProportions.height/2<l;case "pointer":return d.ui.isOver((a.positionAbs||a.position.absolute).top+(a.clickOffset||a.offset.click).top,(a.positionAbs||a.position.absolute).left+(a.clickOffset||a.offset.click).left,j,i,b.proportions.height,b.proportions.width);case "touch":return(f>=j&&f<=l||h>=j&&h<=l||f<j&&h>l)&&(e>=
i&&e<=k||g>=i&&g<=k||e<i&&g>k);default:return false}};d.ui.ddmanager={current:null,droppables:{"default":[]},prepareOffsets:function(a,b){var c=d.ui.ddmanager.droppables[a.options.scope]||[],e=b?b.type:null,g=(a.currentItem||a.element).find(":data(droppable)").andSelf(),f=0;a:for(;f<c.length;f++)if(!(c[f].options.disabled||a&&!c[f].accept.call(c[f].element[0],a.currentItem||a.element))){for(var h=0;h<g.length;h++)if(g[h]==c[f].element[0]){c[f].proportions.height=0;continue a}c[f].visible=c[f].element.css("display")!=
"none";if(c[f].visible){c[f].offset=c[f].element.offset();c[f].proportions={width:c[f].element[0].offsetWidth,height:c[f].element[0].offsetHeight};e=="mousedown"&&c[f]._activate.call(c[f],b)}}},drop:function(a,b){var c=false;d.each(d.ui.ddmanager.droppables[a.options.scope]||[],function(){if(this.options){if(!this.options.disabled&&this.visible&&d.ui.intersect(a,this,this.options.tolerance))c=c||this._drop.call(this,b);if(!this.options.disabled&&this.visible&&this.accept.call(this.element[0],a.currentItem||
a.element)){this.isout=1;this.isover=0;this._deactivate.call(this,b)}}});return c},drag:function(a,b){a.options.refreshPositions&&d.ui.ddmanager.prepareOffsets(a,b);d.each(d.ui.ddmanager.droppables[a.options.scope]||[],function(){if(!(this.options.disabled||this.greedyChild||!this.visible)){var c=d.ui.intersect(a,this,this.options.tolerance);if(c=!c&&this.isover==1?"isout":c&&this.isover==0?"isover":null){var e;if(this.options.greedy){var g=this.element.parents(":data(droppable):eq(0)");if(g.length){e=
d.data(g[0],"droppable");e.greedyChild=c=="isover"?1:0}}if(e&&c=="isover"){e.isover=0;e.isout=1;e._out.call(e,b)}this[c]=1;this[c=="isout"?"isover":"isout"]=0;this[c=="isover"?"_over":"_out"].call(this,b);if(e&&c=="isout"){e.isout=0;e.isover=1;e._over.call(e,b)}}}})}}})(jQuery);
;

/*
 * jQuery UI Sortable 1.8.7
 *
 * Copyright 2010, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Sortables
 *
 * Depends:
 *	jquery.ui.core.js
 *	jquery.ui.mouse.js
 *	jquery.ui.widget.js
 */
(function(d){d.widget("ui.sortable",d.ui.mouse,{widgetEventPrefix:"sort",options:{appendTo:"parent",axis:false,connectWith:false,containment:false,cursor:"auto",cursorAt:false,dropOnEmpty:true,forcePlaceholderSize:false,forceHelperSize:false,grid:false,handle:false,helper:"original",items:"> *",opacity:false,placeholder:false,revert:false,scroll:true,scrollSensitivity:20,scrollSpeed:20,scope:"default",tolerance:"intersect",zIndex:1E3},_create:function(){this.containerCache={};this.element.addClass("ui-sortable");
this.refresh();this.floating=this.items.length?/left|right/.test(this.items[0].item.css("float")):false;this.offset=this.element.offset();this._mouseInit()},destroy:function(){this.element.removeClass("ui-sortable ui-sortable-disabled").removeData("sortable").unbind(".sortable");this._mouseDestroy();for(var a=this.items.length-1;a>=0;a--)this.items[a].item.removeData("sortable-item");return this},_setOption:function(a,b){if(a==="disabled"){this.options[a]=b;this.widget()[b?"addClass":"removeClass"]("ui-sortable-disabled")}else d.Widget.prototype._setOption.apply(this,
arguments)},_mouseCapture:function(a,b){if(this.reverting)return false;if(this.options.disabled||this.options.type=="static")return false;this._refreshItems(a);var c=null,e=this;d(a.target).parents().each(function(){if(d.data(this,"sortable-item")==e){c=d(this);return false}});if(d.data(a.target,"sortable-item")==e)c=d(a.target);if(!c)return false;if(this.options.handle&&!b){var f=false;d(this.options.handle,c).find("*").andSelf().each(function(){if(this==a.target)f=true});if(!f)return false}this.currentItem=
c;this._removeCurrentsFromItems();return true},_mouseStart:function(a,b,c){b=this.options;var e=this;this.currentContainer=this;this.refreshPositions();this.helper=this._createHelper(a);this._cacheHelperProportions();this._cacheMargins();this.scrollParent=this.helper.scrollParent();this.offset=this.currentItem.offset();this.offset={top:this.offset.top-this.margins.top,left:this.offset.left-this.margins.left};this.helper.css("position","absolute");this.cssPosition=this.helper.css("position");d.extend(this.offset,
{click:{left:a.pageX-this.offset.left,top:a.pageY-this.offset.top},parent:this._getParentOffset(),relative:this._getRelativeOffset()});this.originalPosition=this._generatePosition(a);this.originalPageX=a.pageX;this.originalPageY=a.pageY;b.cursorAt&&this._adjustOffsetFromHelper(b.cursorAt);this.domPosition={prev:this.currentItem.prev()[0],parent:this.currentItem.parent()[0]};this.helper[0]!=this.currentItem[0]&&this.currentItem.hide();this._createPlaceholder();b.containment&&this._setContainment();
if(b.cursor){if(d("body").css("cursor"))this._storedCursor=d("body").css("cursor");d("body").css("cursor",b.cursor)}if(b.opacity){if(this.helper.css("opacity"))this._storedOpacity=this.helper.css("opacity");this.helper.css("opacity",b.opacity)}if(b.zIndex){if(this.helper.css("zIndex"))this._storedZIndex=this.helper.css("zIndex");this.helper.css("zIndex",b.zIndex)}if(this.scrollParent[0]!=document&&this.scrollParent[0].tagName!="HTML")this.overflowOffset=this.scrollParent.offset();this._trigger("start",
a,this._uiHash());this._preserveHelperProportions||this._cacheHelperProportions();if(!c)for(c=this.containers.length-1;c>=0;c--)this.containers[c]._trigger("activate",a,e._uiHash(this));if(d.ui.ddmanager)d.ui.ddmanager.current=this;d.ui.ddmanager&&!b.dropBehaviour&&d.ui.ddmanager.prepareOffsets(this,a);this.dragging=true;this.helper.addClass("ui-sortable-helper");this._mouseDrag(a);return true},_mouseDrag:function(a){this.position=this._generatePosition(a);this.positionAbs=this._convertPositionTo("absolute");
if(!this.lastPositionAbs)this.lastPositionAbs=this.positionAbs;if(this.options.scroll){var b=this.options,c=false;if(this.scrollParent[0]!=document&&this.scrollParent[0].tagName!="HTML"){if(this.overflowOffset.top+this.scrollParent[0].offsetHeight-a.pageY<b.scrollSensitivity)this.scrollParent[0].scrollTop=c=this.scrollParent[0].scrollTop+b.scrollSpeed;else if(a.pageY-this.overflowOffset.top<b.scrollSensitivity)this.scrollParent[0].scrollTop=c=this.scrollParent[0].scrollTop-b.scrollSpeed;if(this.overflowOffset.left+
this.scrollParent[0].offsetWidth-a.pageX<b.scrollSensitivity)this.scrollParent[0].scrollLeft=c=this.scrollParent[0].scrollLeft+b.scrollSpeed;else if(a.pageX-this.overflowOffset.left<b.scrollSensitivity)this.scrollParent[0].scrollLeft=c=this.scrollParent[0].scrollLeft-b.scrollSpeed}else{if(a.pageY-d(document).scrollTop()<b.scrollSensitivity)c=d(document).scrollTop(d(document).scrollTop()-b.scrollSpeed);else if(d(window).height()-(a.pageY-d(document).scrollTop())<b.scrollSensitivity)c=d(document).scrollTop(d(document).scrollTop()+
b.scrollSpeed);if(a.pageX-d(document).scrollLeft()<b.scrollSensitivity)c=d(document).scrollLeft(d(document).scrollLeft()-b.scrollSpeed);else if(d(window).width()-(a.pageX-d(document).scrollLeft())<b.scrollSensitivity)c=d(document).scrollLeft(d(document).scrollLeft()+b.scrollSpeed)}c!==false&&d.ui.ddmanager&&!b.dropBehaviour&&d.ui.ddmanager.prepareOffsets(this,a)}this.positionAbs=this._convertPositionTo("absolute");if(!this.options.axis||this.options.axis!="y")this.helper[0].style.left=this.position.left+
"px";if(!this.options.axis||this.options.axis!="x")this.helper[0].style.top=this.position.top+"px";for(b=this.items.length-1;b>=0;b--){c=this.items[b];var e=c.item[0],f=this._intersectsWithPointer(c);if(f)if(e!=this.currentItem[0]&&this.placeholder[f==1?"next":"prev"]()[0]!=e&&!d.ui.contains(this.placeholder[0],e)&&(this.options.type=="semi-dynamic"?!d.ui.contains(this.element[0],e):true)){this.direction=f==1?"down":"up";if(this.options.tolerance=="pointer"||this._intersectsWithSides(c))this._rearrange(a,
c);else break;this._trigger("change",a,this._uiHash());break}}this._contactContainers(a);d.ui.ddmanager&&d.ui.ddmanager.drag(this,a);this._trigger("sort",a,this._uiHash());this.lastPositionAbs=this.positionAbs;return false},_mouseStop:function(a,b){if(a){d.ui.ddmanager&&!this.options.dropBehaviour&&d.ui.ddmanager.drop(this,a);if(this.options.revert){var c=this;b=c.placeholder.offset();c.reverting=true;d(this.helper).animate({left:b.left-this.offset.parent.left-c.margins.left+(this.offsetParent[0]==
document.body?0:this.offsetParent[0].scrollLeft),top:b.top-this.offset.parent.top-c.margins.top+(this.offsetParent[0]==document.body?0:this.offsetParent[0].scrollTop)},parseInt(this.options.revert,10)||500,function(){c._clear(a)})}else this._clear(a,b);return false}},cancel:function(){var a=this;if(this.dragging){this._mouseUp();this.options.helper=="original"?this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper"):this.currentItem.show();for(var b=this.containers.length-1;b>=0;b--){this.containers[b]._trigger("deactivate",
null,a._uiHash(this));if(this.containers[b].containerCache.over){this.containers[b]._trigger("out",null,a._uiHash(this));this.containers[b].containerCache.over=0}}}this.placeholder[0].parentNode&&this.placeholder[0].parentNode.removeChild(this.placeholder[0]);this.options.helper!="original"&&this.helper&&this.helper[0].parentNode&&this.helper.remove();d.extend(this,{helper:null,dragging:false,reverting:false,_noFinalSort:null});this.domPosition.prev?d(this.domPosition.prev).after(this.currentItem):
d(this.domPosition.parent).prepend(this.currentItem);return this},serialize:function(a){var b=this._getItemsAsjQuery(a&&a.connected),c=[];a=a||{};d(b).each(function(){var e=(d(a.item||this).attr(a.attribute||"id")||"").match(a.expression||/(.+)[-=_](.+)/);if(e)c.push((a.key||e[1]+"[]")+"="+(a.key&&a.expression?e[1]:e[2]))});!c.length&&a.key&&c.push(a.key+"=");return c.join("&")},toArray:function(a){var b=this._getItemsAsjQuery(a&&a.connected),c=[];a=a||{};b.each(function(){c.push(d(a.item||this).attr(a.attribute||
"id")||"")});return c},_intersectsWith:function(a){var b=this.positionAbs.left,c=b+this.helperProportions.width,e=this.positionAbs.top,f=e+this.helperProportions.height,g=a.left,h=g+a.width,i=a.top,k=i+a.height,j=this.offset.click.top,l=this.offset.click.left;j=e+j>i&&e+j<k&&b+l>g&&b+l<h;return this.options.tolerance=="pointer"||this.options.forcePointerForContainers||this.options.tolerance!="pointer"&&this.helperProportions[this.floating?"width":"height"]>a[this.floating?"width":"height"]?j:g<b+
this.helperProportions.width/2&&c-this.helperProportions.width/2<h&&i<e+this.helperProportions.height/2&&f-this.helperProportions.height/2<k},_intersectsWithPointer:function(a){var b=d.ui.isOverAxis(this.positionAbs.top+this.offset.click.top,a.top,a.height);a=d.ui.isOverAxis(this.positionAbs.left+this.offset.click.left,a.left,a.width);b=b&&a;a=this._getDragVerticalDirection();var c=this._getDragHorizontalDirection();if(!b)return false;return this.floating?c&&c=="right"||a=="down"?2:1:a&&(a=="down"?
2:1)},_intersectsWithSides:function(a){var b=d.ui.isOverAxis(this.positionAbs.top+this.offset.click.top,a.top+a.height/2,a.height);a=d.ui.isOverAxis(this.positionAbs.left+this.offset.click.left,a.left+a.width/2,a.width);var c=this._getDragVerticalDirection(),e=this._getDragHorizontalDirection();return this.floating&&e?e=="right"&&a||e=="left"&&!a:c&&(c=="down"&&b||c=="up"&&!b)},_getDragVerticalDirection:function(){var a=this.positionAbs.top-this.lastPositionAbs.top;return a!=0&&(a>0?"down":"up")},
_getDragHorizontalDirection:function(){var a=this.positionAbs.left-this.lastPositionAbs.left;return a!=0&&(a>0?"right":"left")},refresh:function(a){this._refreshItems(a);this.refreshPositions();return this},_connectWith:function(){var a=this.options;return a.connectWith.constructor==String?[a.connectWith]:a.connectWith},_getItemsAsjQuery:function(a){var b=[],c=[],e=this._connectWith();if(e&&a)for(a=e.length-1;a>=0;a--)for(var f=d(e[a]),g=f.length-1;g>=0;g--){var h=d.data(f[g],"sortable");if(h&&h!=
this&&!h.options.disabled)c.push([d.isFunction(h.options.items)?h.options.items.call(h.element):d(h.options.items,h.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"),h])}c.push([d.isFunction(this.options.items)?this.options.items.call(this.element,null,{options:this.options,item:this.currentItem}):d(this.options.items,this.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"),this]);for(a=c.length-1;a>=0;a--)c[a][0].each(function(){b.push(this)});return d(b)},_removeCurrentsFromItems:function(){for(var a=
this.currentItem.find(":data(sortable-item)"),b=0;b<this.items.length;b++)for(var c=0;c<a.length;c++)a[c]==this.items[b].item[0]&&this.items.splice(b,1)},_refreshItems:function(a){this.items=[];this.containers=[this];var b=this.items,c=[[d.isFunction(this.options.items)?this.options.items.call(this.element[0],a,{item:this.currentItem}):d(this.options.items,this.element),this]],e=this._connectWith();if(e)for(var f=e.length-1;f>=0;f--)for(var g=d(e[f]),h=g.length-1;h>=0;h--){var i=d.data(g[h],"sortable");
if(i&&i!=this&&!i.options.disabled){c.push([d.isFunction(i.options.items)?i.options.items.call(i.element[0],a,{item:this.currentItem}):d(i.options.items,i.element),i]);this.containers.push(i)}}for(f=c.length-1;f>=0;f--){a=c[f][1];e=c[f][0];h=0;for(g=e.length;h<g;h++){i=d(e[h]);i.data("sortable-item",a);b.push({item:i,instance:a,width:0,height:0,left:0,top:0})}}},refreshPositions:function(a){if(this.offsetParent&&this.helper)this.offset.parent=this._getParentOffset();for(var b=this.items.length-1;b>=
0;b--){var c=this.items[b],e=this.options.toleranceElement?d(this.options.toleranceElement,c.item):c.item;if(!a){c.width=e.outerWidth();c.height=e.outerHeight()}e=e.offset();c.left=e.left;c.top=e.top}if(this.options.custom&&this.options.custom.refreshContainers)this.options.custom.refreshContainers.call(this);else for(b=this.containers.length-1;b>=0;b--){e=this.containers[b].element.offset();this.containers[b].containerCache.left=e.left;this.containers[b].containerCache.top=e.top;this.containers[b].containerCache.width=
this.containers[b].element.outerWidth();this.containers[b].containerCache.height=this.containers[b].element.outerHeight()}return this},_createPlaceholder:function(a){var b=a||this,c=b.options;if(!c.placeholder||c.placeholder.constructor==String){var e=c.placeholder;c.placeholder={element:function(){var f=d(document.createElement(b.currentItem[0].nodeName)).addClass(e||b.currentItem[0].className+" ui-sortable-placeholder").removeClass("ui-sortable-helper")[0];if(!e)f.style.visibility="hidden";return f},
update:function(f,g){if(!(e&&!c.forcePlaceholderSize)){g.height()||g.height(b.currentItem.innerHeight()-parseInt(b.currentItem.css("paddingTop")||0,10)-parseInt(b.currentItem.css("paddingBottom")||0,10));g.width()||g.width(b.currentItem.innerWidth()-parseInt(b.currentItem.css("paddingLeft")||0,10)-parseInt(b.currentItem.css("paddingRight")||0,10))}}}}b.placeholder=d(c.placeholder.element.call(b.element,b.currentItem));b.currentItem.after(b.placeholder);c.placeholder.update(b,b.placeholder)},_contactContainers:function(a){for(var b=
null,c=null,e=this.containers.length-1;e>=0;e--)if(!d.ui.contains(this.currentItem[0],this.containers[e].element[0]))if(this._intersectsWith(this.containers[e].containerCache)){if(!(b&&d.ui.contains(this.containers[e].element[0],b.element[0]))){b=this.containers[e];c=e}}else if(this.containers[e].containerCache.over){this.containers[e]._trigger("out",a,this._uiHash(this));this.containers[e].containerCache.over=0}if(b)if(this.containers.length===1){this.containers[c]._trigger("over",a,this._uiHash(this));
this.containers[c].containerCache.over=1}else if(this.currentContainer!=this.containers[c]){b=1E4;e=null;for(var f=this.positionAbs[this.containers[c].floating?"left":"top"],g=this.items.length-1;g>=0;g--)if(d.ui.contains(this.containers[c].element[0],this.items[g].item[0])){var h=this.items[g][this.containers[c].floating?"left":"top"];if(Math.abs(h-f)<b){b=Math.abs(h-f);e=this.items[g]}}if(e||this.options.dropOnEmpty){this.currentContainer=this.containers[c];e?this._rearrange(a,e,null,true):this._rearrange(a,
null,this.containers[c].element,true);this._trigger("change",a,this._uiHash());this.containers[c]._trigger("change",a,this._uiHash(this));this.options.placeholder.update(this.currentContainer,this.placeholder);this.containers[c]._trigger("over",a,this._uiHash(this));this.containers[c].containerCache.over=1}}},_createHelper:function(a){var b=this.options;a=d.isFunction(b.helper)?d(b.helper.apply(this.element[0],[a,this.currentItem])):b.helper=="clone"?this.currentItem.clone():this.currentItem;a.parents("body").length||
d(b.appendTo!="parent"?b.appendTo:this.currentItem[0].parentNode)[0].appendChild(a[0]);if(a[0]==this.currentItem[0])this._storedCSS={width:this.currentItem[0].style.width,height:this.currentItem[0].style.height,position:this.currentItem.css("position"),top:this.currentItem.css("top"),left:this.currentItem.css("left")};if(a[0].style.width==""||b.forceHelperSize)a.width(this.currentItem.width());if(a[0].style.height==""||b.forceHelperSize)a.height(this.currentItem.height());return a},_adjustOffsetFromHelper:function(a){if(typeof a==
"string")a=a.split(" ");if(d.isArray(a))a={left:+a[0],top:+a[1]||0};if("left"in a)this.offset.click.left=a.left+this.margins.left;if("right"in a)this.offset.click.left=this.helperProportions.width-a.right+this.margins.left;if("top"in a)this.offset.click.top=a.top+this.margins.top;if("bottom"in a)this.offset.click.top=this.helperProportions.height-a.bottom+this.margins.top},_getParentOffset:function(){this.offsetParent=this.helper.offsetParent();var a=this.offsetParent.offset();if(this.cssPosition==
"absolute"&&this.scrollParent[0]!=document&&d.ui.contains(this.scrollParent[0],this.offsetParent[0])){a.left+=this.scrollParent.scrollLeft();a.top+=this.scrollParent.scrollTop()}if(this.offsetParent[0]==document.body||this.offsetParent[0].tagName&&this.offsetParent[0].tagName.toLowerCase()=="html"&&d.browser.msie)a={top:0,left:0};return{top:a.top+(parseInt(this.offsetParent.css("borderTopWidth"),10)||0),left:a.left+(parseInt(this.offsetParent.css("borderLeftWidth"),10)||0)}},_getRelativeOffset:function(){if(this.cssPosition==
"relative"){var a=this.currentItem.position();return{top:a.top-(parseInt(this.helper.css("top"),10)||0)+this.scrollParent.scrollTop(),left:a.left-(parseInt(this.helper.css("left"),10)||0)+this.scrollParent.scrollLeft()}}else return{top:0,left:0}},_cacheMargins:function(){this.margins={left:parseInt(this.currentItem.css("marginLeft"),10)||0,top:parseInt(this.currentItem.css("marginTop"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},
_setContainment:function(){var a=this.options;if(a.containment=="parent")a.containment=this.helper[0].parentNode;if(a.containment=="document"||a.containment=="window")this.containment=[0-this.offset.relative.left-this.offset.parent.left,0-this.offset.relative.top-this.offset.parent.top,d(a.containment=="document"?document:window).width()-this.helperProportions.width-this.margins.left,(d(a.containment=="document"?document:window).height()||document.body.parentNode.scrollHeight)-this.helperProportions.height-
this.margins.top];if(!/^(document|window|parent)$/.test(a.containment)){var b=d(a.containment)[0];a=d(a.containment).offset();var c=d(b).css("overflow")!="hidden";this.containment=[a.left+(parseInt(d(b).css("borderLeftWidth"),10)||0)+(parseInt(d(b).css("paddingLeft"),10)||0)-this.margins.left,a.top+(parseInt(d(b).css("borderTopWidth"),10)||0)+(parseInt(d(b).css("paddingTop"),10)||0)-this.margins.top,a.left+(c?Math.max(b.scrollWidth,b.offsetWidth):b.offsetWidth)-(parseInt(d(b).css("borderLeftWidth"),
10)||0)-(parseInt(d(b).css("paddingRight"),10)||0)-this.helperProportions.width-this.margins.left,a.top+(c?Math.max(b.scrollHeight,b.offsetHeight):b.offsetHeight)-(parseInt(d(b).css("borderTopWidth"),10)||0)-(parseInt(d(b).css("paddingBottom"),10)||0)-this.helperProportions.height-this.margins.top]}},_convertPositionTo:function(a,b){if(!b)b=this.position;a=a=="absolute"?1:-1;var c=this.cssPosition=="absolute"&&!(this.scrollParent[0]!=document&&d.ui.contains(this.scrollParent[0],this.offsetParent[0]))?
this.offsetParent:this.scrollParent,e=/(html|body)/i.test(c[0].tagName);return{top:b.top+this.offset.relative.top*a+this.offset.parent.top*a-(d.browser.safari&&this.cssPosition=="fixed"?0:(this.cssPosition=="fixed"?-this.scrollParent.scrollTop():e?0:c.scrollTop())*a),left:b.left+this.offset.relative.left*a+this.offset.parent.left*a-(d.browser.safari&&this.cssPosition=="fixed"?0:(this.cssPosition=="fixed"?-this.scrollParent.scrollLeft():e?0:c.scrollLeft())*a)}},_generatePosition:function(a){var b=
this.options,c=this.cssPosition=="absolute"&&!(this.scrollParent[0]!=document&&d.ui.contains(this.scrollParent[0],this.offsetParent[0]))?this.offsetParent:this.scrollParent,e=/(html|body)/i.test(c[0].tagName);if(this.cssPosition=="relative"&&!(this.scrollParent[0]!=document&&this.scrollParent[0]!=this.offsetParent[0]))this.offset.relative=this._getRelativeOffset();var f=a.pageX,g=a.pageY;if(this.originalPosition){if(this.containment){if(a.pageX-this.offset.click.left<this.containment[0])f=this.containment[0]+
this.offset.click.left;if(a.pageY-this.offset.click.top<this.containment[1])g=this.containment[1]+this.offset.click.top;if(a.pageX-this.offset.click.left>this.containment[2])f=this.containment[2]+this.offset.click.left;if(a.pageY-this.offset.click.top>this.containment[3])g=this.containment[3]+this.offset.click.top}if(b.grid){g=this.originalPageY+Math.round((g-this.originalPageY)/b.grid[1])*b.grid[1];g=this.containment?!(g-this.offset.click.top<this.containment[1]||g-this.offset.click.top>this.containment[3])?
g:!(g-this.offset.click.top<this.containment[1])?g-b.grid[1]:g+b.grid[1]:g;f=this.originalPageX+Math.round((f-this.originalPageX)/b.grid[0])*b.grid[0];f=this.containment?!(f-this.offset.click.left<this.containment[0]||f-this.offset.click.left>this.containment[2])?f:!(f-this.offset.click.left<this.containment[0])?f-b.grid[0]:f+b.grid[0]:f}}return{top:g-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+(d.browser.safari&&this.cssPosition=="fixed"?0:this.cssPosition=="fixed"?-this.scrollParent.scrollTop():
e?0:c.scrollTop()),left:f-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+(d.browser.safari&&this.cssPosition=="fixed"?0:this.cssPosition=="fixed"?-this.scrollParent.scrollLeft():e?0:c.scrollLeft())}},_rearrange:function(a,b,c,e){c?c[0].appendChild(this.placeholder[0]):b.item[0].parentNode.insertBefore(this.placeholder[0],this.direction=="down"?b.item[0]:b.item[0].nextSibling);this.counter=this.counter?++this.counter:1;var f=this,g=this.counter;window.setTimeout(function(){g==
f.counter&&f.refreshPositions(!e)},0)},_clear:function(a,b){this.reverting=false;var c=[];!this._noFinalSort&&this.currentItem[0].parentNode&&this.placeholder.before(this.currentItem);this._noFinalSort=null;if(this.helper[0]==this.currentItem[0]){for(var e in this._storedCSS)if(this._storedCSS[e]=="auto"||this._storedCSS[e]=="static")this._storedCSS[e]="";this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper")}else this.currentItem.show();this.fromOutside&&!b&&c.push(function(f){this._trigger("receive",
f,this._uiHash(this.fromOutside))});if((this.fromOutside||this.domPosition.prev!=this.currentItem.prev().not(".ui-sortable-helper")[0]||this.domPosition.parent!=this.currentItem.parent()[0])&&!b)c.push(function(f){this._trigger("update",f,this._uiHash())});if(!d.ui.contains(this.element[0],this.currentItem[0])){b||c.push(function(f){this._trigger("remove",f,this._uiHash())});for(e=this.containers.length-1;e>=0;e--)if(d.ui.contains(this.containers[e].element[0],this.currentItem[0])&&!b){c.push(function(f){return function(g){f._trigger("receive",
g,this._uiHash(this))}}.call(this,this.containers[e]));c.push(function(f){return function(g){f._trigger("update",g,this._uiHash(this))}}.call(this,this.containers[e]))}}for(e=this.containers.length-1;e>=0;e--){b||c.push(function(f){return function(g){f._trigger("deactivate",g,this._uiHash(this))}}.call(this,this.containers[e]));if(this.containers[e].containerCache.over){c.push(function(f){return function(g){f._trigger("out",g,this._uiHash(this))}}.call(this,this.containers[e]));this.containers[e].containerCache.over=
0}}this._storedCursor&&d("body").css("cursor",this._storedCursor);this._storedOpacity&&this.helper.css("opacity",this._storedOpacity);if(this._storedZIndex)this.helper.css("zIndex",this._storedZIndex=="auto"?"":this._storedZIndex);this.dragging=false;if(this.cancelHelperRemoval){if(!b){this._trigger("beforeStop",a,this._uiHash());for(e=0;e<c.length;e++)c[e].call(this,a);this._trigger("stop",a,this._uiHash())}return false}b||this._trigger("beforeStop",a,this._uiHash());this.placeholder[0].parentNode.removeChild(this.placeholder[0]);
this.helper[0]!=this.currentItem[0]&&this.helper.remove();this.helper=null;if(!b){for(e=0;e<c.length;e++)c[e].call(this,a);this._trigger("stop",a,this._uiHash())}this.fromOutside=false;return true},_trigger:function(){d.Widget.prototype._trigger.apply(this,arguments)===false&&this.cancel()},_uiHash:function(a){var b=a||this;return{helper:b.helper,placeholder:b.placeholder||d([]),position:b.position,originalPosition:b.originalPosition,offset:b.positionAbs,item:b.currentItem,sender:a?a.element:null}}});
d.extend(d.ui.sortable,{version:"1.8.7"})})(jQuery);
;
(function ($) {
	  
})(jQuery);

;
( function($) {
  try{
  function initAddEditPasswordField(currField) {
    try{
  // Set the on blur, on focus and on change behaviours
  $(currField).blur(function(event) {
	try{
    var pwdIdClass = $(this).data('password-idclass');
    var cPwdIdClass = $(this).data('cpassword-idclass');
    var thisIsPwdField = $(this).hasClass(pwdIdClass) ? true : false;
    var pwdVal = $('.' + pwdIdClass).val();
    var cPwdVal = $('.' + cPwdIdClass).val();
    //alert('blur called for ' + (thisIsPwdField? 'pwd' : 'cpwd') + ' field with pwd = ' + pwdVal + ', cpwd = ' + cPwdVal);
    
    if(pwdVal!="" && cPwdVal!=""){
    	if(pwdVal!=cPwdVal){
	    	  $('#password-mismatch').show();
	    	  $(".addedit-password-field").addClass("error");
	    	  $(".addedit-cpassword-field").addClass("error");
    	}
    	else{
    		  $('#password-mismatch').hide();
    	      $(".addedit-password-field").removeClass("error");
    	      $(".addedit-cpassword-field").removeClass("error");
    	}
    	Drupal.ajax.prototype.commands.CtoolsModalAdjust(null, null, null);
    }
	}catch(e){
		// To Do
	}
  });

  
/*  $(currField).focus(function(event) {
    var pwdIdClass = $(this).data('password-idclass');
    var cPwdIdClass = $(this).data('cpassword-idclass');
    var thisIsPwdField = $(this).hasClass(pwdIdClass) ? true : false;
    var pwdVal = $('.' + pwdIdClass).val();
    var cPwdVal = $('.' + cPwdIdClass).val();
    //alert('focus called for ' + (thisIsPwdField? 'pwd' : 'cpwd') + ' field with pwd = ' + pwdVal + ', cpwd = ' + cPwdVal);
  });

  $(currField).change(function(event) {
    var pwdIdClass = $(this).data('password-idclass');
    var cPwdIdClass = $(this).data('cpassword-idclass');
    var thisIsPwdField = $(this).hasClass(pwdIdClass) ? true : false;
    var pwdVal = $('.' + pwdIdClass).val();
    var cPwdVal = $('.' + cPwdIdClass).val();
    //alert('change called for ' + (thisIsPwdField? 'pwd' : 'cpwd') + ' field with pwd = ' + pwdVal + ', cpwd = ' + cPwdVal);
  }); */
    }catch(e){
		// To Do
	}
}
  
  Drupal.behaviors.passwordFields =  {
    attach: function (context, settings) {
    try{
      $('.addedit-password-field:not(.addedit-password-field-initialized)').addClass('addedit-password-field-initialized').each(function () {
        //alert('In Drupal.behaviors.passwordFields pwd attach()');
        initAddEditPasswordField(this);
      });
      
      $('.addedit-cpassword-field:not(.addedit-cpassword-field-initialized)').addClass('addedit-cpassword-field-initialized').each(function () {
        //alert('In Drupal.behaviors.passwordFields cpwd attach()');
        initAddEditPasswordField(this);
      });
    }catch(e){
		// To Do
	}
    }
  };
  }catch(e){
		// To Do
	}
})(jQuery);

function checkusernameadmin(obj){
	try{
	objname=obj.value;
	objid=obj.id;
    if(objname != null && objname != undefined && objname != ""){//administration/people/user/usernamecheck/addedit-edit-user_name addedit-edit-textfield form-text
    var url1=resource.base_host+"/?q=administration/people/user/usernamecheck/"+objname;
	$.ajax({
			type: "GET",
		    url : url1,
		    complete : function(xmlHttpRequest, textStatus) {
			    if((parseInt(xmlHttpRequest.status) != 0) && (parseInt(xmlHttpRequest.status / 100) != 2)) {
			        return;
			    }

			    var responseText = xmlHttpRequest.responseText;
			    if(responseText==1){
			    	$("#username-mismatch").show();
			    	$(".addedit-edit-user_name").addClass("error");
			    	
			    }else{
			    	$("#username-mismatch").hide();
			    	//$("#erruser").removeClass("error");
			    	$(".addedit-edit-user_name").removeClass("error");
			   		
			    }
			    Drupal.ajax.prototype.commands.CtoolsModalAdjust(null, null, null);
		    }
		    
	   });
}
	}catch(e){
		// To Do
	}
}
//48472: Once I removed manager role, still "Team" module showing.
var already_is_manager_validation_checked;
function checkManagerUncheck(){
	 var selected = $("#edit-roles option:selected");
     var is_manager = false;
     already_is_manager_validation_checked = false;
     selected.each(function () {
         if($(this).val()=='is_manager'){         
        	 is_manager = true;
        	 already_is_manager_validation_checked = false;
         }
     });
     //console.log(already_is_manager_validation_checked);
     if(is_manager === false && already_is_manager_validation_checked === false){
    	 var title = Drupal.t('LBL082')+' '+Drupal.t('Manager')+' '+Drupal.t('LBL579');
    	 var message = Drupal.t('MSG729');
    	 try{
 		    $('#commonMsg-wizard').remove();
 		    $("#edit-roles").multiselect("refresh");
 		    var html = '';	    
 		    html+='<div id="commonMsg-wizard" style="display:none; padding: 0px;">';
 		    html+='<table width="100%" cellpadding="0" cellspacing="0" border="0" valign="center">';
 		    if(Drupal.settings.ajaxPageState.theme == 'expertusoneV2'){
 		   	 html+= '<tr><td style="padding: 30px 24px;" class="commanTitleAll">'+message+'</td></tr>';
 		    } else {
 		     html+= '<tr><td color="#333333" style="padding: 30px 24px; text-align: justify;">'+message+'</td></tr>';
 		    }
 		    html+='</table>';
 		    html+='</div>';
 		    $("body").append(html);
 		    var closeButt={};
 		    closeButt[Drupal.t('LBL109')]=function(){
 		    	$("#edit-roles").multiselect("widget").find(":checkbox[value='is_manager']").attr("checked","checked");
 		    	$("#edit-roles option[value='is_manager']").attr("selected", 1);
 		    	$("#edit-roles").multiselect("refresh");
 		    	already_is_manager_validation_checked = false;
 		    	$(this).dialog('destroy');
 		    	$(this).dialog('close');
 		    	$('#commonMsg-wizard').remove();
 		    };
         	closeButt[Drupal.t('Yes')]=function(){already_is_manager_validation_checked = true;$(this).dialog('destroy');$(this).dialog('close');$("#commonMsg-wizard").remove();}; 
 		    $("#commonMsg-wizard").dialog({
 		        position:[(getWindowWidth()-400)/2,200],
 		        bgiframe: true,
 		        width:300,
 		        resizable:false,
 		        modal: true,
 		        title:title,
 		        buttons:closeButt,
 		        closeOnEscape: false,
 		        draggable:false,
 		        overlay:
 		         {
 		           opacity: 0.9,
 		           background: "black"
 		         }
 		    });
 		    $('.ui-dialog').wrap("<div id='delete-object-dialog' class='"+message+" remove-reports'></div>");
 		    $('#delete-object-dialog.remove-reports').find('.ui-dialog').css("z-index","10100");
 		    $('#delete-object-dialog.remove-reports').next('.ui-widget-overlay').css("z-index","1030");
 		    $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').addClass("removebutton").end();
 		    $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(1)').before('<div class="admin-save-button-left-bg"></div>');
 		    $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(1)').addClass("admin-save-button-middle-bg").end();
 		    $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(1)').after('<div class="admin-save-button-right-bg"></div>');
 		    $("#commonMsg-wizard").show();
 		    if($('#delete-object-dialog.remove-reports').is(':visible')) {
                $(".ui-multiselect-menu.edit-roles").hide();
            }
 			$('.ui-dialog-titlebar-close').click(function(){
 				$("#edit-roles").multiselect("widget").find(":checkbox[value='is_manager']").attr("checked","checked");
 		    	$("#edit-roles option[value='is_manager']").attr("selected", 1);
 		    	$("#edit-roles").multiselect("refresh");
 		    	already_is_manager_validation_checked = false;
 		        $("#commonMsg-wizard").remove();
 		    });
 			if(Drupal.settings.ajaxPageState.theme == 'expertusoneV2'){
 		    	changeDialogPopUI();
 		    }
 	 }catch(e){
 			// to do
 		}
     }
}
// change by ayyappans for 33432: Issue in Users
(function($) {
	$.widget("ui.peopleuser", {
		callMultiSelect: function(userId, ele){
			//alert(userId)
			var oc = $('#attr_open').val();
			var obj = this;
			this.currTheme = Drupal.settings.ajaxPageState.theme;
			$('.multiselect-custom-dropdown-results').css('display','none');
			$('.ui-multiselect-menu').css('display','none');
			$('#avil_'+ele).css('display','block');
			$('#attr_open').val(ele);
			$('#avil_'+oc).prev().find('span:last')
			.removeClass('down-tip-arrow')
			.addClass('right-tip-arrow');

			$('#avil_'+ele).prev().find('span:last')
			.removeClass('right-tip-arrow')
			.addClass('down-tip-arrow');
			var orgList = $('#load_multiselect_oorgs').val();
			//Construct data load and autocomplete urls
			userId = userId == '' ? undefined : userId;
			if(ele == 'jobrole'){
				var jobroleList = $('#load_multiselect_jobrole').val();
				var url = this.constructUrl("administration/people/user/jobrole/"+userId+"/"+jobroleList);
				var autourl = this.constructUrl("administration/people/user/jobrole-autocomplete/"+ele);
				var list_height = 200;
				var titlelength = 28;
				var list_width = 250;
			}else if(ele == 'omanagers') {
				var otherMangerList = $('#load_multiselect_omanagers').val();
				var url = this.constructUrl("administration/people/user/othermanagers/"+userId+"/"+otherMangerList);
				var autourl = this.constructUrl("administration/people/user/othermanagers-autocomplete/"+ele);
				var list_height = 140;
				var titlelength = 15;
				var list_width = 188;
			}else if(ele == 'session_instructor') {
				if(($( ".set-wbubble-left" ).hasClass("bottom-qtip-tip-up")) && ($("td").hasClass('admin-addedit-class-instructor_expmeeting'))) {
					$('.bottom-qtip-tip-up').css('z-index','99');
				}
				var insList = $('#load_multiselect_session_instructor').val();
				var url = this.constructUrl("administration/session/allinstructor/"+userId+"/"+insList);
				var autourl = this.constructUrl("administration/session/allinstructor-autocomplete/"+ele);
				var list_height = 120;
				var titlelength = 8;
				var list_width = 160;
			}else{
				var url = this.constructUrl("administration/people/user/org/"+userId+"/"+orgList);
				var autourl = this.constructUrl("administration/people/user/org-autocomplete/"+ele);
				var list_height = 120;
				var titlelength = 15;
				var list_width = 188;
			}
			var option;
			option = {
					url: url,
					dataType:"json",
					titlelength: titlelength,
					searchfilter:{url:autourl,enable:true},
					rownum:20,
					width:list_width,
					height: list_height,
					onselect:this.onselectfn,
					onunselect:this.onunselectfn,
					helpText: {autocomplete:Drupal.t('Search for refine'),checkAll:'Select All',uncheckAll:'Unselect All'},
					widget:this,
					afterload: function() {
						$('#avil_'+ele).find('.label-text').addClass('vtip');
						vtip();
						$('#avil_'+ele).find('.label-text').each(function() {
							$('#avil_'+ele).data('expmultiselectDropdown')._labelBind($(this));
						});
						$('#autoimg').bind('click',function(){
							if(ele=='jobrole')
								$('#avil_'+ele).data('expmultiselectDropdown').options.url = obj.constructUrl("administration/people/user/jobrole/"+userId+"/"+$('#load_multiselect_jobrole').val());
							else if(ele=='omanagers'){
								$('#avil_'+ele).data('expmultiselectDropdown').options.url = obj.constructUrl("administration/people/user/othermanagers/"+userId+"/"+$('#load_multiselect_omanagers').val());
							}
							else if(ele=='session_instructor'){
								$('#avil_'+ele).data('expmultiselectDropdown').options.url = obj.constructUrl("administration/session/allinstructor/"+userId+"/"+$('#load_multiselect_session_instructor').val());
							}
							else {
								$('#avil_'+ele).data('expmultiselectDropdown').options.url = obj.constructUrl("administration/people/user/org/"+userId+"/"+$('#load_multiselect_oorgs').val());
							}
						});
					}
			};
			$('#avil_'+ele).expmultiselectDropdown(option);
			$('#avil_'+ele).css('display','block');
			//change by ayyappans for 41736: Issue in user creation page
			$('#avil_'+ele).find('.footeraccess').hide();
			$('#avil_'+ele).data('expmultiselectDropdown')._callScroll();
		},
		onselectfn: function(ele,data,obj) {
			var eid = $(ele).attr('id').replace('avil_','');
			var dt=new Array();
			var v = $('#load_multiselect_'+eid).val();
			if(v!=''){
				dt=v.split(',');
			}
			dt.push(data.value);
			$('#load_multiselect_'+eid).val(dt.join(','));
			$("#root-admin").data('peopleuser').updateSelectedText(eid, dt.length);
			$(ele).find('#chk .label-text').addClass('vtip');
			vtip();
			$(ele).find('.label-text').each(function() {
				$(ele).data('expmultiselectDropdown')._labelBind($(this));
			});
			if(document.getElementById("edit-session-presenter")){
				//$('input[id="change_instructor"]').attr('value',2);
				var x = document.getElementById("edit-session-presenter");
				var option = document.createElement("option");
				option.text = data.title;
				option.value = data.value;
				option.title = data.title;
				x.add(option);
			}
			$('#avil_'+eid+' #container').jScrollPane({});
		},
		onunselectfn: function(ele,data,obj) {
			var eid = $(ele).attr('id').replace('avil_','');
			var dt=new Array();
			var v = $('#load_multiselect_'+eid).val();
			if(v!=''){
				dt=v.split(',');
			}
			var index = $.inArray(data.value, dt);
			if(index>=0)
				dt.splice(index, 1);
			$('#load_multiselect_'+eid).val(dt.join(','));
			$("#root-admin").data('peopleuser').updateSelectedText(eid, dt.length);
			if(document.getElementById("edit-session-presenter")){
				//$('input[id="change_instructor"]').attr('value',2);
				var ind = $("#edit-session-presenter option[value='"+data.value+"']").index();
				var x = document.getElementById("edit-session-presenter");
				x.remove(ind);
			}
			$('#avil_'+eid+' #container').jScrollPane({});
		},
		updateSelectedText: function(eid, count) {
			var selectedText;
			//	for 41196: Can't able to save the page,system gets hang for a while
			if(count === undefined) {
				var dt=new Array();
				var v = $('#load_multiselect_'+eid).val();
				if(v!=''){
					dt=v.split(',');
				}
				count = dt.length;
			}
			if(count > 0) {
				selectedText = count + ' '+Drupal.t('LBL646');
			}
			else {
				selectedText = Drupal.t('LBL674');
			}
			$('#menu_'+eid).find('.selected-list-text').text(selectedText);
		}
	});
	$.extend($.ui.peopleuser.prototype, EXPERTUS_SMARTPORTAL_AbstractManager, EXPERTUS_SMARTPORTAL_AbstractDetailsWidget);
})(jQuery);

$(function() {
	try{
		$("#root-admin").peopleuser();
	}catch(e){
			// To Do
	}
});
$(function() {
	try {
		$('body').live('click', function(event) {
			if($(event.target).is('.multiselect-custom-dropdown') || ($(event.target).parents('div.multiselect-custom-dropdown-results').length && $('.multiselect-custom-dropdown-results').is(':visible'))) {
				//change for 42102: Unable to move to any other modules while clicking any modules link from the user profile page
				return false;
			}
			else if (!$(event.target).parents('.multiselect-custom-dropdown-results, .multiselect-custom-dropdown').length) {
				$('.multiselect-custom-dropdown-results').hide();
				$('.bottom-qtip-tip-up').css('z-index','100');
				/*if($('#change_instructor').val() != undefined && $('#change_instructor').val() != null && $('#change_instructor').val() == 2){
					$('#change_instructor').val(1);
					selectDropdownOnclick();
				} */
			}
		});
	}
	catch (e) {
		// TODO: handle exception
	}
});
function restrictMultiselectTitle(multiselectName, length) {
	/*$('div.ui-multiselect-menu.'+multiselectName).find('.ui-multiselect-checkboxes label.ui-corner-all span').each(function() {
		var labelText = titleRestricted($(this).text(), length);
		$(this).text(labelText);
	});*/
	$('div.ui-multiselect-menu.'+multiselectName).find('.ui-multiselect-checkboxes label.ui-corner-all span').each(function() {
		var labelText = titleRestrictionFadeoutImage($(this).text(), length);
		$(this).html(labelText);
	});
	$('.fade-out-title-container-unprocessed').each(function() {
		// console.log('unprocessed'+$(this).width());
		// console.log('span'+$(this).find('.title-lengthy-text').width());
		if($(this).width() >= $(this).find('.title-lengthy-text').width() && $(this).find('.title-lengthy-text').width() != 0) {
			$(this).find('.fade-out-image').remove();
		}
		$(this).removeClass('fade-out-title-container-unprocessed');
	});
	vtip();
}

//alert("drupal behaiour")


function checkInstructor(a){
	if(a == 'Y'){
		$('#two-col-row-webexname_webexpass').css('display','block');
	}else if(a == 'N'){
		$('#two-col-row-webexname_webexpass').css('display','none');
	}
	if($("#ui-multiselect-edit-roles-option-0").has("aria-selected")){
	if($("#ui-multiselect-edit-roles-option-0").attr("aria-selected") == "true"){
		$('#two-col-row-webexname_webexpass').css('display','block');
    }else if(($("#ui-multiselect-edit-roles-option-0").attr("aria-selected") == "true") && !(x)) {
    	$('#two-col-row-webexname_webexpass').css('display','block');
    }else if(($("#ui-multiselect-edit-roles-option-0").attr("aria-selected") == "false") && (($("#ui-multiselect-edit-roles-option-1").attr("aria-selected") != "true"))){
    	$('#two-col-row-webexname_webexpass').css('display','none');
  	} else if(($("#ui-multiselect-edit-roles-option-0").attr("aria-selected") == "false") && (($("#ui-multiselect-edit-roles-option-1").attr("aria-selected") != "false"))){
  		$('#two-col-row-webexname_webexpass').css('display','none');
  	}}else{
  		$('#two-col-row-webexname_webexpass').css('display','none');
  	}
}
;

/* Note:  As of jQuery 1.7, the .live() method is deprecated.
 * Use .on() to attach event handlers in jquery 1.7+ versions.  
 */ 
$(document).ready(function(){
try{
	$('#access-control .movable').live('click', function(event){	
		try{
		if($(this).hasClass('selected-list')){
			$(this).removeClass('selected-list');
		} else {
			$(this).addClass('selected-list');
/*			$('#access-control .movable').mouseover(function(){
	    		$(this).addClass('selected-list');
	    	}); */
		}
		}catch(e){
			// to do
		}
	});
			
	$('body').click(function (event) {
		try{
		if(event.target.className == 'move-right' || event.target.className == 'move-left') {
		}
		else {
			$('#access-control .movable').each(function(){
					//$(this).removeClass('selected-list');
			});
		}		
		$('#access-select-list-class-dropdown-list').css("display","");
		if(event.target.className != 'access-select-list-class-dropdown-link'){
			 $('#access-select-list-class-dropdown-list').hide();
			
		}
		$('#ssel-unsel-usrlist-wrapper #select-list-dropdown-list').show();
		if(event.target.className != 'access-select-list-user-dropdown-link'){
			$('#sel-unsel-usrlist-wrapper #select-list-dropdown-list').hide();
		}
		}catch(e){
			// to do
		}
	}); 
	// Organization
	$('#access-control #organization .move-right').live('click', function(){
		try{
		$('#access-control #organization-available .selected-list').each(function(){
			storeOrgRolesValues('org', 'add', $(this).attr('id'));
			var orgName = $(this).children('span').attr('data');
			var orgNameRestricted = $(this).children('span').html();
			$('#organization-selected .item-list').append('<li class="movable" id="'+$(this).attr('id')+'"><span class="vtip" data="'+orgName+'" title="'+orgName+'">'+orgNameRestricted+'</span></li>');
			$(this).remove();
			vtip();
		});
		}catch(e){
			// to do
		}
	});
	$('#access-control #organization .move-left').live('click', function(){
		try{
		$('#access-control #organization-selected .selected-list').each(function(){
			storeOrgRolesValues('org', 'remove', $(this).attr('id'));
			var orgName = $(this).children('span').attr('data');
			var orgNameRestricted = $(this).children('span').html();
			$('#organization-available .item-list').append('<li class="movable" id="'+$(this).attr('id')+'"><span class="vtip" data="'+orgName+'" title="'+orgName+'">'+orgNameRestricted+'</span></li>');
			$(this).remove();
			vtip();
		});
		}catch(e){
			// to do
		}
	});
	$('#access-control #organization-available .item-list li.movable').live('dblclick', function(){
		try{
		$('#vtip').remove();
		storeOrgRolesValues('org', 'add', $(this).attr('id'));
		var orgName = $(this).children('span').attr('data');
		var orgNameRestricted = $(this).children('span').html();
		$('#organization-selected .item-list').append('<li class="movable" id="'+$(this).attr('id')+'"><span class="vtip" data="'+orgName+'" title="'+orgName+'">'+orgNameRestricted+'</span></li>');
		$(this).remove();
		vtip();
		}catch(e){
			// to do
		}
	});
	$('#access-control #organization-selected .item-list li.movable').live('dblclick',function(){	
		try{
		$('#vtip').remove();
		storeOrgRolesValues('org', 'remove', $(this).attr('id'));
		var orgName = $(this).children('span').attr('data');
		var orgNameRestricted = $(this).children('span').html();
		$('#organization-available .item-list').append('<li class="movable" id="'+$(this).attr('id')+'"><span class="vtip" data="'+orgName+'" title="'+orgName+'">'+orgNameRestricted+'</span></li>');
		$(this).remove();
		vtip();
		}catch(e){
			// to do
		}
	});

	// Job roles
	$('#access-control #jobroles .move-right').live('click', function(){
		try{
		$('#access-control #jobroles-available .selected-list').each(function(){
			var roleName,roleNameRestricted,mroRestricted;
			var entityType=$('#entity_type').val();
			var is_compliance = $('#is_compliance').val();
			if((entityType=='cre_sys_obt_cls' && is_compliance=='0') || entityType=='cre_sys_obt_trn' || entityType=='cre_sys_obt_crt' || entityType=='cre_sys_obt_cur'){
				var mro = $('#mro-controls').val();
				var default_mro = $('#default-mro-control').val();
				storeOrgRolesValues('jobroles', 'add', $(this).attr('id')+'-'+default_mro);
				roleName = $(this).children().html();
				roleNameRestricted = titleRestricted(roleName, '13');
				mroRestricted = titleRestricted(mro, '5');
				$('#jobroles-selected .item-list').append('<li class="movable" id="'+$(this).attr('id')+'"><span class="admin-access-org-name vtip" data="'+roleName+'" title="'+roleName+'">'+roleNameRestricted+'</span>'+mro+'</li>');
			}else{
				storeOrgRolesValues('jobroles', 'add', $(this).attr('id'));
				roleName = $(this).children().html();
				roleNameRestricted = titleRestricted(roleName, '40');
				$('#jobroles-selected .item-list').append('<li class="movable" id="'+$(this).attr('id')+'"><span class="vtip" data="'+roleName+'" title="'+roleName+'">'+roleNameRestricted+'</span></li>');
			}
			$(this).remove();
			vtip();
		});
		}catch(e){
			// to do
		}
	});
	$('#access-control #jobroles .move-left').live('click', function(){
		try{
		$('#access-control #jobroles-selected .selected-list').each(function(){
			storeOrgRolesValues('jobroles', 'remove', $(this).attr('id'));
			$(this).find('.mro-controls').remove();
			var roleName = $(this).children('span').attr('data');
			$('#jobroles-available .item-list').append('<li class="movable" id="'+$(this).attr('id')+'"><span class="vtip" data="'+roleName+'" title="'+roleName+'">'+roleName+'</span></li>');
			$(this).remove();
			vtip();
		});
		}catch(e){
			// to do
		}
	});
	$('#access-control #jobroles-available .item-list li.movable').live('dblclick', function(){
		try{
		$('#vtip').remove();
		var roleName,roleNameRestricted,mroRestricted;
		var entityType=$('#entity_type').val();
		var is_compliance = $('#is_compliance').val();
		if((entityType=='cre_sys_obt_cls' && is_compliance=='0') || entityType=='cre_sys_obt_trn' || entityType=='cre_sys_obt_crt' || entityType=='cre_sys_obt_cur'){
			var mro = $('#mro-controls').val();
			var default_mro = $('#default-mro-control').val();
			storeOrgRolesValues('jobroles', 'add', $(this).attr('id')+'-'+default_mro);
			roleName = $(this).children().html();
			roleNameRestricted = titleRestricted(roleName, '13');
			mroRestricted = titleRestricted(mro, '5');
			$('#jobroles-selected .item-list').append('<li class="movable" id="'+$(this).attr('id')+'"><span class="admin-access-org-name vtip" data="'+roleName+'" title="'+roleName+'">'+roleNameRestricted+'</span>'+mro+'</li>');
		}else{
			storeOrgRolesValues('jobroles', 'add', $(this).attr('id'));
			roleName = $(this).children().html();
			roleNameRestricted = titleRestricted(roleName, '40');
			$('#jobroles-selected .item-list').append('<li class="movable" id="'+$(this).attr('id')+'"><span class="vtip" data="'+roleName+'" title="'+roleName+'">'+roleNameRestricted+'</span></li>');
		}
		$(this).remove();
		vtip();
		}catch(e){
			// to do
		}
	});
	$('#access-control #jobroles-selected .item-list li.movable').live('dblclick', function(){	
		try{
		$('#vtip').remove();
		storeOrgRolesValues('jobroles', 'remove', $(this).attr('id'));
		$(this).find('.mro-controls').remove();
		var roleName = $(this).children('span').attr('data');
		$('#jobroles-available .item-list').append('<li class="movable" id="'+$(this).attr('id')+'"><span class="vtip" data="'+roleName+'" title="'+roleName+'">'+roleName+'</span></li>');
		$(this).remove();
		vtip();
		}catch(e){
			// to do
		}
	});
	$('#jobroles-selected .sub-menu li').live('click', function(){
		try{
		var selectedMRO = $(this).html();
		var id = $(this).closest('.movable').attr('id');
		var mro = $(this).attr('data');
		$(this).parent().prev('span').prev('span').html(selectedMRO);
		$(this).parent().css('display', 'none');
		storeOrgRolesValues('jobroles', 'modify', id, mro);
		return false;
		}catch(e){
			// to do
		}
	});
	$('#access-control .mro-selection').live('click', function(){
		try{
		var posX = $(this).position().left;
		var posY = $(this).position().top;
		if($(this).next().css('display') == 'block'){
			$(this).next().css('display', 'none');
		} else {
			$(this).next().css('display', 'block');
			if (navigator.userAgent.indexOf("Chrome")>0 || $.browser.msie && $.browser.version >= 8)
			{
			$(this).next().css('top', posX);
			$(this).next().css('top', posY+17);
			}
			
		}
		}catch(e){
			// to do
		}
	});
	
	// UserType
	$('#access-control #usertype .move-right').live('click', function(){
		try{
		$('#access-control #usertype-available .selected-list').each(function(){
			storeOrgRolesValues('usertype', 'add', $(this).attr('id'));
			var utName = $(this).children('span').attr('data');
			var utNameRestricted = $(this).children('span').html();
			$('#usertype-selected .item-list').append('<li class="movable" id="'+$(this).attr('id')+'"><span class="vtip" data="'+utName+'" title="'+utName+'">'+utNameRestricted+'</span></li>');
			$(this).remove();
			vtip();
		});
		}catch(e){
			// to do
		}
	});
	$('#access-control #usertype .move-left').live('click', function(){
		try{
		$('#access-control #usertype-selected .selected-list').each(function(){
			storeOrgRolesValues('usertype', 'remove', $(this).attr('id'));
			var utName = $(this).children('span').attr('data');
			var utNameRestricted = $(this).children('span').html();
			$('#usertype-available .item-list').append('<li class="movable" id="'+$(this).attr('id')+'"><span class="vtip" data="'+utName+'" title="'+utName+'">'+utNameRestricted+'</span></li>');
			$(this).remove();
			vtip();
		});
		}catch(e){
			// to do
		}
	});
	$('#access-control #usertype-available .item-list li.movable').live('dblclick', function(){
		try{
		$('#vtip').remove();
		storeOrgRolesValues('usertype', 'add', $(this).attr('id'));
		var utName = $(this).children('span').attr('data');
		var utNameRestricted = $(this).children('span').html();
		$('#usertype-selected .item-list').append('<li class="movable" id="'+$(this).attr('id')+'"><span class="vtip" data="'+utName+'" title="'+utName+'">'+utNameRestricted+'</span></li>');
		$(this).remove();
		vtip();
		}catch(e){
			// to do
		}
	});
	$('#access-control #usertype-selected .item-list li.movable').live('dblclick',function(){	
		try{
		$('#vtip').remove();
		storeOrgRolesValues('usertype', 'remove', $(this).attr('id'));
		var utName = $(this).children('span').attr('data');
		var utNameRestricted = $(this).children('span').html();
		$('#usertype-available .item-list').append('<li class="movable" id="'+$(this).attr('id')+'"><span class="vtip" data="'+utName+'" title="'+utName+'">'+utNameRestricted+'</span></li>');
		$(this).remove();
		vtip();
		}catch(e){
			// to do
		}
	});
}catch(e){
	// to do
}
});

function storeOrgRolesValues(fieldType, type, id, mro){
	try{
	var fieldName = '#'+fieldType+'_selected_id';
	var selectedList = $(fieldName).val();
	var selectedListArray = new Array();
	var selectedListLength = 0;
	if(type == 'add'){
		if(selectedList != ''){
			selectedListArray = selectedList.split(",");
			selectedListArray.push(id);
			selectedList = selectedListArray.join(",");
			$(fieldName).val(selectedList);
		} else {
			$(fieldName).val(id);
		}
	} else if(type == 'remove'){
		selectedListArray = selectedList.split(",");
		selectedListArray.splice( $.inArray(id, selectedListArray), 1 );
		selectedList = selectedListArray.join(",")
		$(fieldName).val(selectedList);
	} else {
		selectedListArray = selectedList.split(",");
		selectedListLength = selectedListArray.length;
		var mroArray = new Array();
		for(var c=0; c<selectedListLength; c++){
			mroArray = selectedListArray[c].split("-");
			if(mroArray[0] == id){
				selectedListArray[c] = id+"-"+mro;
			}
		}
		$(fieldName).val(selectedListArray.join(","));
	}
	}catch(e){
		// to do
	}
}

function getOrganizationList(org_name,isMore,fromPage){
	try{
	if(org_name.length>2 || org_name.length==0){
		var selectedIds = $('#org_selected_id').val();
		org_name = org_name.length==0?'-':org_name;
		selectedIds = selectedIds.length==0?'-':selectedIds;
		var pagenate = $('#org_pagenation').val().split('#');
		var total;
		var passPage;
		if(isMore=='more'){
			passPage = pagenate[1];
		}else{
			passPage = 0;
		}
		if(fromPage == 'discounts'){
 		  url = "/?q=administration/commerce/discounts/getorglist" + '/' + org_name + '/' + selectedIds + "/" + passPage;
		}
		else{
		  url = "/?q=administration/learning/access/getorglist" + '/' + org_name + '/' + selectedIds + "/" + passPage;
		}
		$('.admin-access-jobrole-field1 .admin-access-jobrole-field').addClass('ac_loading');
		$.ajax({
			type: "POST",
			url: url,
			data:  '',
			success: function(result){
				if(result!=undefined && result!=null && result!=''){
					if(isMore=='more'){
						$('#org_more').remove();
						$('#organization-available > ul').append(result);
						$('#org_pagenation').val(pagenate[0]+"#"+(Number(pagenate[1])+1));
						pagenate = $('#org_pagenation').val().split('#');
						total = 15*(Number(pagenate[1]));
					}else{
						$('#organization-available > ul').html(result);
						$('#org_pagenation').val(pagenate[0]+"#1");
						pagenate = $('#org_pagenation').val().split('#');
						total = 15*1;
					}
				}
					
				$('.admin-access-jobrole-field1 .admin-access-jobrole-field').removeClass('ac_loading');
				if(Number(pagenate[0])<=total){
					$('#org_more').remove();
				}
			}
		});
	}
	}catch(e){
		// to do
	}
}

function getJobRoles(role_name,isMore,fromPage){
	try{
	if(role_name.length>2 || role_name.length==0){
		var selectedIds = $('#jobroles_selected_id').val();
		role_name = role_name.length==0?'-':role_name;
		selectedIds = selectedIds.length==0?'-':selectedIds;
		var pagenate = $('#jobrole_pagenation').val().split('#');
		var total;
		var passPage;
		if(isMore=='more'){
			passPage = pagenate[1];
		}else{
			passPage = 0;
		}
		if(fromPage == 'discounts'){
			url = "/?q=administration/commerce/discounts/getjobroles" + '/' + role_name + '/' + selectedIds + "/" + passPage;
		}
		else{
			url = "/?q=administration/learning/access/getjobroles" + '/' + role_name + '/' + selectedIds + "/" + passPage;
		}
		$('.admin-access-jobrole-field2 .admin-access-jobrole-field').addClass('ac_loading'); 
		$.ajax({
			type: "POST",
			url: url,
			data:  '',
			success: function(result){
				if(result!=undefined && result!=null && result!=''){
					if(isMore=='more'){
						$('#jobrole_more').remove();
						$('#jobroles-available > ul').append(result);
						$('#jobrole_pagenation').val(pagenate[0]+"#"+(Number(pagenate[1])+1));
						pagenate = $('#jobrole_pagenation').val().split('#');
						total = 15*(Number(pagenate[1]));
					}else{
						$('#jobroles-available > ul').html(result);
						$('#jobrole_pagenation').val(pagenate[0]+"#1");
						pagenate = $('#jobrole_pagenation').val().split('#');
						total = 15*1;
					}
				}

				$('.admin-access-jobrole-field2 .admin-access-jobrole-field').removeClass('ac_loading');
				if(Number(pagenate[0])<=total){
					$('#jobrole_more').remove();
				}
			}
		});
	}
	}catch(e){
		// to do
	}
}

function getUserTypes(user_type_name,isMore,fromPage){
	try{
	if(user_type_name.length>2 || user_type_name.length==0){
		var selectedIds = $('#usertype_selected_id').val();
		user_type_name = user_type_name.length==0?'':user_type_name;
		selectedIds = selectedIds.length==0?'':selectedIds;
		var pagenate = $('#usertype_pagenation').val().split('#');
		var total;
		var passPage;
		if(isMore=='more'){
			passPage = pagenate[1];
		}else{
			passPage = 0;
		}
		if(fromPage == 'discounts'){
			url = "/?q=administration/commerce/discounts/getusertype" + '/' + user_type_name+ '/' + selectedIds + "/" + passPage;
		}
		else{
			url = "/?q=administration/learning/access/getusertype" + '/' + user_type_name+ '/' + selectedIds + "/" + passPage;
		}
		$('.admin-access-jobrole-field3 .admin-access-jobrole-field').addClass('ac_loading');
		$.ajax({
			type: "POST",
			url: url,
			data:  '',
			success: function(result){
				if(result!=undefined && result!=null && result!=''){
					if(isMore=='more'){
						$('#usertype_more').remove();
						$('#usertype-available > ul').append(result);
						$('#usertype_pagenation').val(pagenate[0]+"#"+(Number(pagenate[1])+1));
						pagenate = $('#usertype_pagenation').val().split('#');
						total = 15*(Number(pagenate[1]));
					}else{
						$('#usertype-available > ul').html(result);
						$('#usertype_pagenation').val(pagenate[0]+"#1");
						pagenate = $('#usertype_pagenation').val().split('#');
						total = 15*1;
					}
				}

				$('.admin-access-jobrole-field3 .admin-access-jobrole-field').removeClass('ac_loading');
				if(Number(pagenate[0])<=total){
					$('#usertype_more').remove();
				}
			}
		});
	}
	}catch(e){
		// to do
	}
}

function updateAccessOnKeyDown(evt,obj){
	try{
	evt = evt || window.event;
    var charCode = evt.keyCode || evt.which;
    if (charCode == 13) {           	    	
        evt.preventDefault();
        evt.stopPropagation();
        return false;           	    	
    }
	}catch(e){
		// to do
	}
}

function selectKeyDownAccess(id, evt, type){
	/* 	
		Down arrow - 40
		Up arrow - 38
	*/
	try{
	evt = evt || window.event;
    var charCode = evt.keyCode || evt.which;
    if (charCode == 40) { 
    	$('#'+type+' #'+id).next().focus();           	    	
    	$('#'+type+' #'+id).next().addClass('selected-list');
    }	
    if (charCode == 38) { 
    	$('#'+type+' #'+id).removeClass('selected-list');           	    	
    	$('#'+type+' #'+id).prev().focus();
    }	
    evt.preventDefault();
    evt.stopPropagation();
    return false;  
	}catch(e){
		// to do
	}
}
(function($) {
	$.widget("ui.accessgroup", {
	callMultiSelect: function(id,uniq,mro,entType,emptyId){
		var autoUrl = this.constructUrl("administration/catalogaccess/group/autocomplete&type="+entType+"&uniqueId="+uniq);
		var grpUrl;
		var obj = this;
		var autoHelpTxt = Drupal.t('LBL1270');
		if(typeof(entType) == 'undefined') entType = '';
		if(entType =='Discount'){
			grpurl = this.constructUrl("administration/catalogaccess/discount/group/"+uniq);
		}else{
			grpurl = this.constructUrl("administration/catalogaccess/group/"+uniq+"/"+emptyId+"&type="+entType);
		}
		var xWidth = 270;
		if(document.getElementById('sel-unsel-usrlist') != null)
			xWidth = 305;
		if(id == 'sel-unsel-usrlist'){
			grpurl = this.constructUrl("administration/catalogaccess/user/"+uniq+"/"+emptyId+"&type="+entType);
			autoUrl = this.constructUrl("administration/catalogaccess/user/autocomplete&type="+entType+"&uniqueId="+uniq);
			autoHelpTxt = Drupal.t('LBL036') + ' ' + Drupal.t('LBL054');
			$('#sel-unsel-grplist').hide();
			$('#sel-unsel-usrlist').show();
			
			if($('#user-list-control').length > 0){
				$('#group-list-control').find('span:last')
	    		.removeClass('down-tip-arrow')
	    		.addClass('right-tip-arrow');
	    	
		    	$('#user-list-control').find('span:last')
				.removeClass('right-tip-arrow')
				.addClass('down-tip-arrow');
			}
		}else{
			
			$('#sel-unsel-grplist').show();
			$('#sel-unsel-usrlist').hide();
			
			if($('#user-list-control').length > 0){
				$('#user-list-control').find('span:last')
	    		.removeClass('down-tip-arrow')
	    		.addClass('right-tip-arrow');
	    	
		    	$('#group-list-control').find('span:last')
				.removeClass('right-tip-arrow')
				.addClass('down-tip-arrow');
			}
		}
		if($('#'+id + ' #ui-multiselect-con').size()>0){
			return true;
		}
		var res = '';
		if($('#hidden_oplist').val() != null) {
			res = JSON.parse($('#hidden_oplist').val());
		}
		this.currTheme = Drupal.settings.ajaxPageState.theme;
		//console.log($(this));
		if(this.currTheme == 'expertusoneV2'){
			$('#'+id).expMultiSelectDropdownExtend({
				//data :x,
				width: xWidth,
				height: 235,
				listmodel :{id:'opt',title:'val',dispTitle:'dispval',selected:'sel'},
				sublistmodel :{enable:'dropdown',defaultval:'mro'},
				optlistmodel :{id :'opt',title:'val'},
				optional: {optionlist:res,enable:mro},
				url: grpurl,
				searchfilter:{url:autoUrl,enable:true},
				helpText: {autocomplete:autoHelpTxt,checkAll:'Check All',uncheckAll:'Uncheck All'},
				dataType:"json",
				rownum:15,
				checkAll :false,
				uncheckall :false,
				titlelength : 30,
				widget: this,
				onselect:this.onselectfn,
				onunselect:this.onunselectfn,
				ondropdown:this.ondropdownselfn
				
			});
		}else{
			$('#'+id).expmultiselectDropdown({
				//data :x,
				width: xWidth,
				height: 235,
				listmodel :{id:'opt',title:'val',dispTitle:'dispval',selected:'sel'},
				sublistmodel :{enable:'dropdown',defaultval:'mro'},
				optlistmodel :{id :'opt',title:'val'},
				optional: {optionlist:res,enable:mro},
				url: grpurl,
				searchfilter:{url:autoUrl,enable:true},
				helpText: {autocomplete:autoHelpTxt,checkAll:'Check All',uncheckAll:'Uncheck All'},
				dataType:"json",
				rownum:15,
				checkAll :false,
				uncheckall :false,
				titlelength : 27,
				widget: this,
				onselect:this.onselectfn,
				onunselect:this.onunselectfn,
				ondropdown:this.ondropdownselfn
				
			});
			$('#chk ul li').each(function(){
				if($(this).hasClass('learner-group-container')) {
					$(this).css("display","table-row");
				}
			});
		}
		//if(id == 'sel-unsel-usrlist'){
			//$('#sel-unsel-usrlist #multiautocomplete').css('width','180px');
			setTimeout(function(){
				$('#'+id+ ' #chk ul li .access-fullname .fade-out-image-access').remove();
				//var lid = (id == 'sel-unsel-usrlist') ? 'sel-user-list' : 'sel-group-list';
				$('#sel-user-list .cls-access-list-select').each(function(){
					var id = $(this).find('span:first').attr('id');
					id = id.replace('group-names-','');
					obj.resetRighPane('sel-user-list',id);
				});
			},100)
		//}
		this.callScroll();
		vtip();
	},
	
	callScroll: function(){
		var aHight = $('#group-control').height()-60;
		var gHight = $('#sel-group-list').height();
		var uHight = $('#sel-user-list').height();
		var sHight = (gHight !=0 && uHight !=0) ? (gHight + uHight + 101) : (gHight + uHight+23);
		if(sHight>=aHight){
			if($('#group-scroll-wrapper').find('.jspContainer').length>0){
				$('#group-scroll-wrapper').jScrollPane('reinitialise');
			}else{
				$('#group-scroll-wrapper').jScrollPane({});
			}
		}else{
			if($('#group-scroll-wrapper').find('.jspContainer').length>0){
				$('#group-scroll-wrapper').jScrollPane('destroy');
				//$('#group-scroll-wrapper').html($('#group-scroll-wrapper .jspPane').html());
			}
		}
	},
	
	onselectfn: function(uniq,data,ob){
		var id = $(uniq).attr('id');
		var lid = (id == 'sel-unsel-usrlist') ? 'sel-user-list' : 'sel-group-list';
		var inid = (id == 'sel-unsel-usrlist') ? 'hidden_selection_usr' : 'hidden_selection'; 
		var inids = (id == 'sel-unsel-usrlist') ? 'hidden_idlist_usr' : 'hidden_idlist';
        var str=$('input[id="'+inid+'"]').attr('value');
    	var selected_list='';
        if(str.length==0)
        {
            if($('#'+data.value).attr('opt')==='enable')
            selected_list=data.value+'-cre_sys_inv_opt';
            else
            selected_list=data.value+'-';
        }else{
	        if($('#'+data.value).attr('opt')==='enable')
	            selected_list=','+data.value+'-cre_sys_inv_opt';
	        else
	            selected_list=','+data.value+'-';
        }
		var selListItem = $('#'+id).expmultiselectDropdown('getValue','selected');
		var selList = $('#'+lid).html();
		selList = titleRestrictionFadeoutImage("-"+" "+data.title, "addedit-cataog-access-group-name-fadeout-container");
		var mroList = 'mro-names-'+data.value;
		var grpname = 'group-names-'+data.value;
		if(document.getElementById(grpname)==null){
			$('#'+lid).append('<div class="cls-access-list-select"><span id="'+grpname+'" class="vtip" title ="'+data.title+'"></span><span id="'+mroList+'"></span></div>');
		}
		$('#group-names-'+data.value).html(selList);
		if($(".contentauthorclone").size() == 0)
			ob.sortList(lid);
		if(selListItem.length != '') {
			if(id == 'sel-unsel-usrlist')
				$('#help-msg-usr').css('display','block') +'<br>';
			if(id == 'sel-unsel-grplist')
				$('#help-msg-grp').css('display','block') +'<br>';
			$('#sel-group-text').css('display','none');
			$('#sel-message').css('display','none');
			$('#sel-msg').css('display','none');
		}
		if(id == 'sel-unsel-usrlist') {
			$('#'+id+ ' #chk ul li .access-username').remove();
			$('#'+id+ ' #chk ul li .access-fullname').css('min-width','130px');
		}
	  //Add selected list code in hidden variable
		var i ='';
		$.each(selListItem,function(){
			i += i==''?(this.value+"-"+this.selectedOption.optId) : ","+(this.value+"-"+this.selectedOption.optId);
			});
		$('input[id="'+inids+'"]').attr('value',i);
        str=str+selected_list;
        $('input[id="'+inid+'"]').attr('value',str);
		//$('#group-scroll-wrapper').jScrollPane({});
        
        ob.dispSeparator();
		ob.callScroll();
		vtip();
	},
	
	sortList: function(lid){
		var mylist = $('#'+lid); 
		var l = mylist.children('div').get();
		l.sort(function(a,b){
			return $(a).text().toUpperCase().localeCompare($(b).text().toUpperCase());
		});
		$.each(l, function(idx, itm) { $('#'+lid).append(itm); });
	},
	
	onunselectfn : function(uniq,data, ob){
		var id = $(uniq).attr('id');
		var lid = (id == 'sel-unsel-usrlist') ? 'sel-user-list' : 'sel-group-list';
		var inid = (id == 'sel-unsel-usrlist') ? 'hidden_selection_usr' : 'hidden_selection';
		var inids = (id == 'sel-unsel-usrlist') ? 'hidden_idlist_usr' : 'hidden_idlist';
		var str=$('input[id="'+inid+'"]').attr('value');
	    var unsel=data.value+'-';
	    var pattern1='(^|,)'+unsel+'(cre_sys_inv_rec|cre_sys_inv_man|cre_sys_inv_opt|)';
	    var regex1=new RegExp(pattern1);
	    str=str.replace(regex1,'');
	    if(str.charAt(0)==',')
	       str=str.substring(1,str.length);
		var selList =$('#'+lid).html();
		selList = selList.split("-");
		selList.splice(selList.indexOf(data.title),1);
		var regExp = new RegExp(",","g");
		selList = selList.toString().replace(regExp, '-');
		$('#group-names-'+data.value).html('');
		$('#mro-names-'+data.value).html('');
		$('#group-names-'+data.value).parent().remove();
		$('input[id="'+inid+'"]').attr('value','');
		var selListItem = $('#'+id).expmultiselectDropdown('getValue','selected');
		var i ='';
		$.each(selListItem,function(){
		      i += i==''?(this.value+"-"+this.selectedOption.optId) : ","+(this.value+"-"+this.selectedOption.optId);
			});
		 $('input[id="'+inids+'"]').attr('value',i);
		 str = (str == undefined || str == 'undefined') ? '' : str;
         $('input[id="'+inid+'"]').attr('value',str);
         ob.dispSeparator(id);
		 ob.callScroll();
	},
	
	dispSeparator: function(id){
		/*var groupSelect = $('#sel-unsel-grplist').data('expmultiselectDropdown') != undefined ? $('#sel-unsel-grplist').expmultiselectDropdown('getValue','selected') : [];
		var userSelect = $('#sel-unsel-usrlist').data('expmultiselectDropdown') != undefined ?$('#sel-unsel-usrlist').expmultiselectDropdown('getValue','selected') : [];*/
		var groupSelect = $('#sel-group-list').children();
		var userSelect = $('#sel-user-list').children();
		if(groupSelect.length > 0 && userSelect.length > 0){
			$('#right-separator').css('display','block');
		}else{
			$('#right-separator').css('display','none');
		}
		if(groupSelect.length == 0 && userSelect.length == 0){
			$('#sel-group-text').css('display','inline');
			$('#sel-message').css('display','inline');
			$('#sel-msg').css('display','inline');
		}else{
			$('#sel-group-text').css('display','none');
			$('#sel-message').css('display','none');
			$('#sel-msg').css('display','none');
		}
		if(groupSelect.length == 0)
			$('#help-msg-grp').css('display','none');
		if(userSelect.length == 0)
			$('#help-msg-usr').css('display','none');
	},
	
	ondropdownselfn : function(uniq,data,ob){
		var id = $(uniq).attr('id');
		var lid = (id == 'sel-unsel-usrlist') ? 'sel-user-list' : 'sel-group-list';
		var inid = (id == 'sel-unsel-usrlist') ? 'hidden_selection_usr' : 'hidden_selection';
		var inids = (id == 'sel-unsel-usrlist') ? 'hidden_idlist_usr' : 'hidden_idlist';
        var str=$('input[id="'+inid+'"]').attr('value');
        var optChanged=','+data.value+'-'+data.selectedOption.optId;
        var unsel=data.value+'-';
        var pattern1='(^|,)'+unsel+'(cre_sys_inv_rec|cre_sys_inv_man|cre_sys_inv_opt|)';
        var regex1=new RegExp(pattern1);
        str=str.replace(regex1,optChanged);
        if(str.charAt(0)==',')
           str=str.substring(1,str.length);
		var selList = $('#'+lid).html();
		selList = " "+"<span>("+data.selectedOption.optval +")</span>";		
		var selectedValue = data.selectedOption.optId;

		//$('#group-names-'+data.value).append("<span id='"+mroList+"'></span><br>");
		$('#mro-names-'+data.value).html('');
		$('#mro-names-'+data.value).html(selList);
		if(selectedValue == 'cre_sys_inv_opt'){
			$('#mro-names-'+data.value).html("");
		}
		else{
			$('#mro-names-'+data.value).html(selList);
		}
		
		ob.resetRighPane(lid,data.value);
		
		var hid = $('input[id="'+inids+'"]').val();
        hid = hid+'-'+data.selectedOption.optId;
        
        var selListItem = $('#'+id).expmultiselectDropdown('getValue');
   
        var i = '';
		$.each(selListItem,function(){
			i += i==''?(this.value+"-"+this.selectedOption.optId) : ","+(this.value+"-"+this.selectedOption.optId);
		});
		$('input[id="'+inids+'"]').attr('value',i);
        $('input[id="'+inid+'"]').attr('value',str);

	},
	
	resetRighPane:function(lid,value){
		var Width = $('#'+lid).width();
		var mWidth = $('#mro-names-'+value+' span').width()+2;
		var tWidth = $('#group-names-'+value+' .fade-out-title-container .title-lengthy-text').width();
		var aWidth = Width - mWidth;
		var fWidth = (tWidth > aWidth) ? (aWidth - 5) : tWidth;

		$('#group-names-'+value).css('float','left');
		$('#group-names-'+value+' .fade-out-title-container.addedit-cataog-access-group-name-fadeout-container').css('max-width',fWidth+'px');
		$('#group-names-'+value+' .fade-out-title-container.addedit-cataog-access-group-name-fadeout-container span .fade-out-image').remove();
		if(tWidth > aWidth){
			$('#group-names-'+value+' .fade-out-title-container.addedit-cataog-access-group-name-fadeout-container span').append('<span class="fade-out-image"></span>');
			$('#mro-names-'+value).css('width',mWidth+'px').css('padding-left','0px');
		}else{
			$('#mro-names-'+value).css('width',mWidth+'px').css('padding-left','10px');
		}
		$('#mro-names-'+value).css('float','left');
	},
	moreAccessSearchTypeText : function(dCode,dText) {
	    $('#access-select-list-class-dropdown-list').hide();
	    $('#access-select-list-class-dropdown').text(dCode);
	    $('#access-search_all_classs_type-hidden').val(dText);
	    var displayText;
	    if(dText=='clstit'){
	 	   displayText = Drupal.t('LBL766');     
	    }else if (dText=='clsstatus') {
	 	   displayText =Drupal.t('LBL036') + ' ' + Drupal.t('Class')+ ' ' + dCode;
	    }else{
	 	   displayText =Drupal.t('LBL036') + ' ' + dCode;
	    }
	    
		 var searchType = $('#access-select-list-class-dropdown').html();
		 var x = $('#sel-unsel-grplist').data('expmultiselectDropdown');
		 if(x.options.searchfilter.url.indexOf("Admin")>=0){
		      x.options.searchfilter.url = x.options.searchfilter.url.replace('Admin',searchType);
		      x.options.url = x.options.url.replace('Admin',searchType);
		 }
		 else if(x.options.searchfilter.url.indexOf("Learner")>=0){
		      x.options.searchfilter.url = x.options.searchfilter.url.replace('Learner',searchType);
		      x.options.url =  x.options.url.replace('Learner',searchType);
		 }
		 else if(x.options.searchfilter.url.indexOf("Any")>=0){
			 x.options.searchfilter.url = x.options.searchfilter.url.replace('Any',searchType);
			 x.options.url = x.options.url.replace('Any',searchType);
		 }
		 $('#sel-unsel-grplist').expmultiselectDropdown('autocompleteInit');
	},
	moreUserAccessSearchTypeText : function(dCode,dText) {
	    $('#select-list-dropdown-list').hide();
	    var privVal = $('#search_all_enroll_type-hidden').val();
	    $('#select-list-dropdown').text(dCode);
	    $('#search_all_enroll_type-hidden').val(dText);
	    var displayText = Drupal.t('LBL036') + ' ' + dCode;
	    $('#sel-unsel-usrlist #multiautocomplete').val(displayText);
		 //var searchType = $('#select-list-dropdown').html();
		 var x = $('#sel-unsel-usrlist').data('expmultiselectDropdown');
		 if(x.options.searchfilter.url.indexOf(privVal)>=0){
		      x.options.searchfilter.url = x.options.searchfilter.url.replace(privVal,dText);
		      x.options.url = x.options.url.replace(privVal,dText);
		      x.options.helpText.autocomplete = displayText;
		 }
		 
		 $('#sel-unsel-usrlist').expmultiselectDropdown('autocompleteInit');
	},
	 moreAccessSearchHideShow : function (id) {			
			 $('#access-select-list-class-dropdown-list').slideToggle();
			 $('#access-select-list-class-dropdown-list li:last').css('border-bottom','0px none');		
     },
     moreUserAccessSearchHideShow : function (id) {			
		 $('#select-list-dropdown-list').slideToggle();
		 $('#select-list-dropdown-list li:last').css('border-bottom','0px none');		
     },
	accessClose: function(){
		$('#group-control').remove();
	}
});
	$.extend($.ui.accessgroup.prototype, EXPERTUS_SMARTPORTAL_AbstractManager, EXPERTUS_SMARTPORTAL_AbstractDetailsWidget);
})(jQuery);

$(function() {
	try{
		$("#root-admin").accessgroup();	
	}catch(e){
			// To Do
	}
});
(function($) {
	$.widget("custom.multiselectclone",  {
		 // default options
		options: {
		checkAll: false,
		uncheckAll: false,
		helpText: {autocomplete: 'Search', checkAll:'Check All',uncheckAll:'Uncheck All'},
		targetClass: '',
		onunselectAll: '',
		onselectAll: '',
		theme: ''
		},
		_create: function(){
			  var options = this.options,
			  	obj = this,
				html ='',
				chkAll = '',
				chk= '<ul></ul>',
				unchk = '<ul></ul>',
				unchkAll = '',
				cHight=options.height - 30;
		 	 this.elem = this.element;
		 	 this.elemid = $(this.elem).attr('id');
		 	 
		 	 if($(".contentauthorclone").size() > 0)
		 	 {
		 	 		html +='<div id ="ui-multiselect-con"><div id = "container"><div id ="chk"></div></div></div>';
		 	 		
		 	 		$(obj.element).append(html);
		    		$(obj.element).find('#ui-multiselect-con').addClass(options.classes).css({'width':options.width,'height':options.height});
		    		$(obj.element).find('#container').css({'height':cHight});
		    		$(obj.element).find('.label-text').each(function(){
		 				obj._labelBind(this);
		 			});
	    			obj._dataLoad();
	    			//obj._binding();
		 	 }
		 	 else
		 	 {
		 	 
		 	 if(options.checkAll == true) {
		 		 if(options.theme == "expertusoneV2") {
		 			chkAll +='<div><ul><li style="display:none;" class="select-all-wrapper"><label class="clone-label-list" for="checkall" title="'+options.helpText.checkAll+'">'+options.helpText.checkAll+'</label><div class="form-item form-type-checkbox form-item-checkbox-attributes-access"><div class="checkbox-unselected"><input class="form-checkbox" type="checkbox" name="checkall" id="selectcheckall"><span class="field-suffix"></span></div></div></li></ul></div>';
		 		 }
		 		 else {
		 			 chkAll +='<div><ul><li style="display:none;" class="select-all-wrapper"><input class="form-checkbox" type="checkbox" name="checkall" id="selectcheckall"><label class="clone-label-list" for="checkall">'+options.helpText.checkAll+'</label></li></ul></div>';
		 		 }
		 	 }
		 	 
			 if(options.uncheckAll == true) {
				 if(options.theme == "expertusoneV2") {
					 unchkAll +='<div><ul><li style="display:none;" class="select-all-wrapper"><label class="clone-label-list" for="uncheckall" title="'+options.helpText.uncheckAll+'">'+options.helpText.uncheckAll+'</label><div class="form-item form-type-checkbox form-item-checkbox-attributes-access"><div class="checkbox-unselected"><input class="form-checkbox" type="checkbox" name="uncheckall" id="selectuncheckall"><span class="field-suffix"></span></div></div></li></ul></div>';
			 	}
				 else {
					 unchkAll +='<div><ul><li style="display:none;" class="select-all-wrapper"><input class="form-checkbox" type="checkbox" name="uncheckall" id="selectuncheckall"><label class="clone-label-list" for="uncheckall">'+options.helpText.uncheckAll+'</label></li></ul></div>';
				 }

			 }
		 	html +='<div id ="ui-multiselect-con"><div id = "container">'+unchkAll+'<div id ="chk">'+chk+'</div><div class="line-separator" style="display:none;"/>'+chkAll+'<div id ="unchk">'+unchk+'</div></div></div>';
		    $(obj.element).append(html);
		    $(obj.element).find('#ui-multiselect-con')
		    	.addClass(options.classes)
				.css({'width':options.width,'height':options.height});
		    $(obj.element).find('#container')
				.css({'height':cHight});
		    $(obj.element).find('.label-text').each(function(){
		 		obj._labelBind(this);
		 	});
	    	obj._dataLoad();
	    	obj._binding();
	    	}
	    	if($(".contentauthorclone").size() == 0)
	    		obj._sortlist();
	    	$(obj.element).jScrollPane();
		},
		_dataLoad : function(){
			var obj = this;
			
			if($(".contentauthorclone").size() > 0)
			{
				$.each($(obj.element).find('.'+obj.options.targetClass), function() {
					var checkbox = $(this).find('input').eq(0);
					$(obj.element).find('#chk ul').append($(this));
				});
			}
			else
			{
			
			//load checked and unchecked checkboxes to the respective divs
			$.each($(obj.element).find('.'+obj.options.targetClass), function() {
				var checkbox = $(this).find('input').eq(0);
				if(checkbox.attr('checked')) {
					$(obj.element).find('#chk ul').append($(this));
				}
				else {
					$(obj.element).find('#unchk ul').append($(this));
				}
				obj._clickfuntion($(obj.element).find('input[id="'+$(this).find('input').attr('id')+'"]'));
			});
		     // Show/Hide "Select All" Option
		    $(obj.element).find('#selectcheckall').parents('.select-all-wrapper')
		     	[ (this.options.checkAll == true && $('#'+this.elemid+' #unchk ul li').filter(function() {
			 	    return $(this).css('display') !== 'none';
			 	}).length > 1) ? 'show' : 'hide' ]();
		     
		    // Show/Hide "Unselect All" Option with checked attribute
		 	if(this.options.uncheckAll == true && $('#'+this.elemid+' #chk ul li').filter(function() {
		 	    return $(this).css('display') !== 'none';
		 	}).length > 1) {
		 		$(obj.element).find('#selectuncheckall').attr('checked','checked');
		 		
		 		$(obj.element).find('#selectuncheckall').parents('.select-all-wrapper').show();
		 	}else{
		 		$(obj.element).find('#selectuncheckall').removeAttr('checked');
		 		$(obj.element).find('#selectuncheckall').parents('.select-all-wrapper').hide();
		 	}
		 	if(obj.options.theme == "expertusoneV2") {
				checkboxSelectedUnselectedCommon($(obj.element).find('#selectuncheckall'));
			}
			
			if($(obj.element).find('#unchk ul li').filter(function() {
		 	    return $(this).css('display') !== 'none';
		 	}).length <= 0 || $(obj.element).find('#chk ul li').filter(function() {
		 	    return $(this).css('display') !== 'none';
		 	}).length <= 0)
				 $(obj.element).find('.line-separator').hide();
		    else
		    	 $(obj.element).find('.line-separator').show();
		    }
		},
		_moveItems : function(ele){
			var id = ele.attr('id'),
				obj = this;
			var checked = $(obj.elem).find('#chk ul');
			var unchecked = $(obj.elem).find('#unchk ul');
			
			$.each(ele, function() {
				if($(this).attr('checked')) {
					$(this).closest("."+obj.options.targetClass).appendTo(checked);
				}
				else {
					$(this).closest("."+obj.options.targetClass).appendTo(unchecked);
				}
			});
		
			checked.find('input[id="'+id+'"]').attr('checked','checked');
			
			// Show "Unselect All" option if there are 2 or more list items are available
			var lst = checked.find('li').length;
			if(this.options.uncheckAll == true){
				if(lst > 1){
					$(obj.elem).find('input[id="selectuncheckall"]')
						.attr('checked','checked')
						.parents('.select-all-wrapper')
						.css('display', 'block');
				}else {
					$(obj.elem).find('input[id="selectuncheckall"]')
						.attr('checked','checked')
						.parents('.select-all-wrapper')
						.css('display', 'none');
				}
				if(obj.options.theme == "expertusoneV2") {
					checkboxSelectedUnselectedCommon($(obj.element).find('#selectuncheckall'));
				}
			}
			
			// Hide "Select All" option if there are less than 2 list items are available
			if($(unchecked).find('li').length <= 1) {
				$(this.elem).find('input[id="selectcheckall"]')
				.removeAttr('checked')
				.parents('.select-all-wrapper')
				.css('display', 'none');
			} else {
				$(this.elem).find('input[id="selectcheckall"]')
				.removeAttr('checked')
				.parents('.select-all-wrapper')
				.css('display', 'block');
			}
			
			// Show or hide the separator line 
			if($('#'+this.elemid+' #unchk ul li').filter(function() {
				    return $(this).css('display') !== 'none';
				}).length <= 0 || $('#'+this.elemid+' #chk ul li').filter(function() {
				    return $(this).css('display') !== 'none';
				}).length <= 0)
				 $(this.elem).find('.line-separator').hide();
			 else
				 $(this.elem).find('.line-separator').show();
			if($(".contentauthorclone").size() == 0)
				obj._sortlist();
			$(obj.element).data('jsp').reinitialise();
		},
		_clickfuntion : function(ele){
			var obj = this;
			$(ele).bind('click',function(){
				obj._moveItems($(ele));
			});	
		},
		_binding : function() {
			var obj = this;
			if(obj.options.checkAll == true){
				$(obj.element).find('#selectcheckall').unbind('click')
					.click(function () {
						obj._selectAll($(this));
						if(obj.options.theme =="expertusoneV2") {
							checkboxSelectedUnselectedCommon(this);
						}
					});
			}
			if(obj.options.uncheckAll == true){
				$(obj.element).find('#selectuncheckall').unbind('click')
					.click(function () {
						obj._selectAll($(this));
						if(obj.options.theme =="expertusoneV2") {
							checkboxSelectedUnselectedCommon(this);
						}
					});
			}
		},
		_selectAll: function(ele) {
			var obj = this;
			/*	clicked target = select All*/
			var target;
			if(ele.attr('id') == 'selectcheckall') {
				target = $(obj.element).find('#unchk ul input');
				target.each(function(){
					if(!$(this).attr('disabled')) {
						$(this).attr('checked', 'checked');
						if(obj.options.theme == "expertusoneV2") {
							checkboxSelectedUnselectedCommon(this);
						}
					}
				});
				this._moveItems(target);
			}
			else {
				target = $(obj.element).find('#chk ul input');
				target.each(function(){
					$(this).removeAttr('checked');
					if(obj.options.theme == "expertusoneV2") {
						checkboxSelectedUnselectedCommon(this);
					}
				});
				this._moveItems(target);
			}
			
		},
		_sortlist :function(){
			var mylist = $(this.elem).find('#chk ul'); 
			var srt = this.options.sort;
			var listitems = mylist.children('li').get();
			listitems.sort(function(a, b) {
				if(srt == 'desc')
					return $(b).text().toUpperCase().localeCompare($(a).text().toUpperCase());
				else
					return $(a).text().toUpperCase().localeCompare($(b).text().toUpperCase());
			});
			$.each(listitems, function(idx, itm) { mylist.append(itm); });

		}
	});
})(jQuery);

(function($) {
	/**	this function will be called on Drupal ajax completion*/
	$.fn.enableMultiCheckClone = function(classId) {
	
	if($(".contentauthorclone").size() > 0)
	{
		$('#clonescrolldiv'+classId).multiselectclone({
			checkAll: false, 
			uncheckAll: false,   
			targetClass: 'clone-list-class',
			helpText: {autocomplete: 'Search', checkAll: Drupal.t('Check')+' '+Drupal.t('LBL1039'), uncheckAll: Drupal.t('LBL1272')+' '+Drupal.t('LBL1039')},
			theme: Drupal.settings.ajaxPageState.theme
		});
	}
	else
	{
		$('#clonescrolldiv'+classId).multiselectclone({
			checkAll: true, 
			uncheckAll: true,   
			targetClass: 'clone-list-class',
			helpText: {autocomplete: 'Search', checkAll: Drupal.t('Check')+' '+Drupal.t('LBL1039'), uncheckAll: Drupal.t('LBL1272')+' '+Drupal.t('LBL1039')},
			theme: Drupal.settings.ajaxPageState.theme
		});
	} 
	};
})(jQuery);
;
/*! Copyright (c) 2013 Brandon Aaron (http://brandon.aaron.sh)
 * Licensed under the MIT License (LICENSE.txt).
 *
 * Version: 3.1.9
 *
 * Requires: jQuery 1.2.2+
 */

(function (factory) {
	if ( typeof define === 'function' && define.amd ) {
        // AMD. Register as an anonymous module.
        define(['jquery'], factory);
    } else if (typeof exports === 'object') {
        // Node/CommonJS style for Browserify
        module.exports = factory;
    } else {
        // Browser globals
        factory(jQuery);
    }
}(function ($) {

    var toFix  = ['wheel', 'mousewheel', 'DOMMouseScroll', 'MozMousePixelScroll'],
        toBind = ( 'onwheel' in document || document.documentMode >= 9 ) ?
                    ['wheel'] : ['mousewheel', 'DomMouseScroll', 'MozMousePixelScroll'],
        slice  = Array.prototype.slice,
        nullLowestDeltaTimeout, lowestDelta;

    if ( $.event.fixHooks ) {
        for ( var i = toFix.length; i; ) {
            $.event.fixHooks[ toFix[--i] ] = $.event.mouseHooks;
        }
    }

    var special = $.event.special.mousewheel = {
        version: '3.1.9',

        setup: function() {
            if ( this.addEventListener ) {
                for ( var i = toBind.length; i; ) {
                    this.addEventListener( toBind[--i], handler, false );
                }
            } else {
                this.onmousewheel = handler;
            }
            // Store the line height and page height for this particular element
            $.data(this, 'mousewheel-line-height', special.getLineHeight(this));
            $.data(this, 'mousewheel-page-height', special.getPageHeight(this));
        },

        teardown: function() {
            if ( this.removeEventListener ) {
                for ( var i = toBind.length; i; ) {
                    this.removeEventListener( toBind[--i], handler, false );
                }
            } else {
                this.onmousewheel = null;
            }
        },

        getLineHeight: function(elem) {
            return parseInt($(elem)['offsetParent' in $.fn ? 'offsetParent' : 'parent']().css('fontSize'), 10);
        },

        getPageHeight: function(elem) {
            return $(elem).height();
        },

        settings: {
            adjustOldDeltas: true
        }
    };

    $.fn.extend({
        mousewheel: function(fn) {
            return fn ? this.bind('mousewheel', fn) : this.trigger('mousewheel');
        },

        unmousewheel: function(fn) {
            return this.unbind('mousewheel', fn);
        }
    });


    function handler(event) {
        var orgEvent   = event || window.event,
            args       = slice.call(arguments, 1),
            delta      = 0,
            deltaX     = 0,
            deltaY     = 0,
            absDelta   = 0;
        event = $.event.fix(orgEvent);
        event.type = 'mousewheel';

        // Old school scrollwheel delta
        if ( 'detail'      in orgEvent ) { deltaY = orgEvent.detail * -1;      }
        if ( 'wheelDelta'  in orgEvent ) { deltaY = orgEvent.wheelDelta;       }
        if ( 'wheelDeltaY' in orgEvent ) { deltaY = orgEvent.wheelDeltaY;      }
        if ( 'wheelDeltaX' in orgEvent ) { deltaX = orgEvent.wheelDeltaX * -1; }

        // Firefox < 17 horizontal scrolling related to DOMMouseScroll event
        if ( 'axis' in orgEvent && orgEvent.axis === orgEvent.HORIZONTAL_AXIS ) {
            deltaX = deltaY * -1;
            deltaY = 0;
        }

        // Set delta to be deltaY or deltaX if deltaY is 0 for backwards compatabilitiy
        delta = deltaY === 0 ? deltaX : deltaY;

        // New school wheel delta (wheel event)
        if ( 'deltaY' in orgEvent ) {
            deltaY = orgEvent.deltaY * -1;
            delta  = deltaY;
        }
        if ( 'deltaX' in orgEvent ) {
            deltaX = orgEvent.deltaX;
            if ( deltaY === 0 ) { delta  = deltaX * -1; }
        }

        // No change actually happened, no reason to go any further
        if ( deltaY === 0 && deltaX === 0 ) { return; }

        // Need to convert lines and pages to pixels if we aren't already in pixels
        // There are three delta modes:
        //   * deltaMode 0 is by pixels, nothing to do
        //   * deltaMode 1 is by lines
        //   * deltaMode 2 is by pages
        if ( orgEvent.deltaMode === 1 ) {
            var lineHeight = $.data(this, 'mousewheel-line-height');
            delta  *= lineHeight;
            deltaY *= lineHeight;
            deltaX *= lineHeight;
        } else if ( orgEvent.deltaMode === 2 ) {
            var pageHeight = $.data(this, 'mousewheel-page-height');
            delta  *= pageHeight;
            deltaY *= pageHeight;
            deltaX *= pageHeight;
        }

        // Store lowest absolute delta to normalize the delta values
        absDelta = Math.max( Math.abs(deltaY), Math.abs(deltaX) );

        if ( !lowestDelta || absDelta < lowestDelta ) {
            lowestDelta = absDelta;

            // Adjust older deltas if necessary
            if ( shouldAdjustOldDeltas(orgEvent, absDelta) ) {
                lowestDelta /= 40;
            }
        }

        // Adjust older deltas if necessary
        if ( shouldAdjustOldDeltas(orgEvent, absDelta) ) {
            // Divide all the things by 40!
            delta  /= 40;
            deltaX /= 40;
            deltaY /= 40;
        }

        // Get a whole, normalized value for the deltas
        delta  = Math[ delta  >= 1 ? 'floor' : 'ceil' ](delta  / lowestDelta);
        deltaX = Math[ deltaX >= 1 ? 'floor' : 'ceil' ](deltaX / lowestDelta);
        deltaY = Math[ deltaY >= 1 ? 'floor' : 'ceil' ](deltaY / lowestDelta);

        // Add information to the event object
        event.deltaX = deltaX;
        event.deltaY = deltaY;
        event.deltaFactor = lowestDelta;
        // Go ahead and set deltaMode to 0 since we converted to pixels
        // Although this is a little odd since we overwrite the deltaX/Y
        // properties with normalized deltas.
        event.deltaMode = 0;

        // Add event and delta to the front of the arguments
        args.unshift(event, delta, deltaX, deltaY);

        // Clearout lowestDelta after sometime to better
        // handle multiple device types that give different
        // a different lowestDelta
        // Ex: trackpad = 3 and mouse wheel = 120
        if (nullLowestDeltaTimeout) { clearTimeout(nullLowestDeltaTimeout); }
        nullLowestDeltaTimeout = setTimeout(nullLowestDelta, 200);

        return ($.event.dispatch || $.event.handle).apply(this, args);
    }

    function nullLowestDelta() {
        lowestDelta = null;
    }

    function shouldAdjustOldDeltas(orgEvent, absDelta) {
        // If this is an older event and the delta is divisable by 120,
        // then we are assuming that the browser is treating this as an
        // older mouse wheel event and that we should divide the deltas
        // by 40 to try and get a more usable deltaFactor.
        // Side note, this actually impacts the reported scroll distance
        // in older browsers and can cause scrolling to be slower than native.
        // Turn this off by setting $.event.special.mousewheel.settings.adjustOldDeltas to false.
        return special.settings.adjustOldDeltas && orgEvent.type === 'mousewheel' && absDelta % 120 === 0;
    }

}));
;
/*
 * jQuery Autocomplete plugin 1.1
 *
 * Copyright (c) 2009 J�rn Zaefferer
 *
 * Dual licensed under the MIT and GPL licenses:
 *   http://www.opensource.org/licenses/mit-license.php
 *   http://www.gnu.org/licenses/gpl.html
 *
 * Revision: $Id: jquery.autocomplete.js,v 1.1 2011-01-03 13:10:27 srprabhu Exp $
 */

;(function($) {
	
$.fn.extend({
	autocomplete: function(urlOrData, options) {
		var isUrl = typeof urlOrData == "string" || typeof urlOrData== "function";;
		options = $.extend({}, $.Autocompleter.defaults, {
			url: isUrl ? urlOrData : null,
			data: isUrl ? null : urlOrData,
			delay: isUrl ? $.Autocompleter.defaults.delay : 10,
			max: options && !options.scroll ? 10 : 150
		}, options);
				
		// if highlight is set to false, replace it with a do-nothing function
		options.highlight = options.highlight || function(value) { return value; };
		
		// if the formatMatch option is not specified, then use formatItem for backwards compatibility
		options.formatMatch = options.formatMatch || options.formatItem;
		
		return this.each(function() {
			new $.Autocompleter(this, options);
		});
	},
	result: function(handler) {
		return this.bind("result", handler);
	},
	search: function(handler) {
		return this.trigger("search", [handler]);
	},
	flushCache: function() {
		return this.trigger("flushCache");
	},
	setOptions: function(options){
		return this.trigger("setOptions", [options]);
	},
	unautocomplete: function() {
		return this.trigger("unautocomplete");
	}
});

$.Autocompleter = function(input, options) {

	var KEY = {
		UP: 38,
		DOWN: 40,
		DEL: 46,
		TAB: 9,
		RETURN: 13,
		ESC: 27,
		COMMA: 188,
		PAGEUP: 33,
		PAGEDOWN: 34,
		BACKSPACE: 8
	};

	// Create $ object for input element
	var $input = $(input).attr("autocomplete", "off").addClass(options.inputClass);

	var timeout;
	var previousValue = "";
	var cache = $.Autocompleter.Cache(options);
	var hasFocus = 0;
	var lastKeyPressCode;
	var config = {
		mouseDownOnSelect: false
	};
	var select = $.Autocompleter.Select(options, input, selectCurrent, config);
	
	var blockSubmit;
	
	// prevent form submit in opera when selecting with return key
	$.browser.opera && $(input.form).bind("submit.autocomplete", function() {
		if (blockSubmit) {
			blockSubmit = false;
			return false;
		}
	});
	
	// only opera doesn't trigger keydown multiple times while pressed, others don't work with keypress at all
	$input.bind(($.browser.opera ? "keypress" : "keydown") + ".autocomplete", function(event) {
		// a keypress means the input has focus
		// avoids issue where input had focus before the autocomplete was applied
		hasFocus = 1;
		// track last key pressed
		lastKeyPressCode = event.keyCode;
		switch(event.keyCode) {
		
			case KEY.UP:
				event.preventDefault();
				if ( select.visible() ) {
					select.prev();
				} else {
					onChange(0, true);
				}
				break;
				
			case KEY.DOWN:
				event.preventDefault();
				if ( select.visible() ) {
					select.next();
				} else {
					onChange(0, true);
				}
				break;
				
			case KEY.PAGEUP:
				event.preventDefault();
				if ( select.visible() ) {
					select.pageUp();
				} else {
					onChange(0, true);
				}
				break;
				
			case KEY.PAGEDOWN:
				event.preventDefault();
				if ( select.visible() ) {
					select.pageDown();
				} else {
					onChange(0, true);
				}
				break;
			
			// matches also semicolon
			case options.multiple && $.trim(options.multipleSeparator) == "," && KEY.COMMA:
			case KEY.TAB:
			case KEY.RETURN:
				if( selectCurrent() ) {
					// stop default to prevent a form submit, Opera needs special handling
					event.preventDefault();
					blockSubmit = true;
					return false;
				}
				break;
				
			case KEY.ESC:
				select.hide();
				break;
				
			default:
				clearTimeout(timeout);
				timeout = setTimeout(onChange, options.delay);
				break;
		}
	}).focus(function(){
		// track whether the field has focus, we shouldn't process any
		// results if the field no longer has focus
		hasFocus++;
	}).blur(function() {
		hasFocus = 0;
		if (!config.mouseDownOnSelect) {
			hideResults();
		}
	}).click(function() {
		// show select when clicking in a focused field
		if ( hasFocus++ > 1 && !select.visible() ) {
			onChange(0, true);
		}
	}).bind("search", function() {
		// TODO why not just specifying both arguments?
		var fn = (arguments.length > 1) ? arguments[1] : null;

		function findValueCallback(z, data) {
			var result;
			if( data && data.length ) {
				for (var i=0; i < data.length; i++) {
					if( data[i].result.toLowerCase() == z.toLowerCase() ) {
						result = data[i];
						break;
					}
				}
			}
			if( typeof fn == "function" ) fn(result);
			else $input.trigger("result", result && [result.data, result.value]);
		}
		$.each(trimWords($input.val()), function(i, value) {
			request(value, findValueCallback, findValueCallback);
		});
	}).bind("flushCache", function() {
		cache.flush();
	}).bind("setOptions", function() {
		$.extend(options, arguments[1]);
		// if we've updated the data, repopulate
		if ( "data" in arguments[1] )
			cache.populate();
	}).bind("unautocomplete", function() {
		select.unbind();
		$input.unbind();
		$(input.form).unbind(".autocomplete");
	});
	
	
	function selectCurrent() {
		var selected = select.selected();
		if( !selected )
			return false;
		
		var v = selected.result;
		
		/* Coustomized by Vincent for support id & name : starts */
		var sd_encode = selected.data;
		var sd = rawurldecode(sd_encode);
		var sd1 = String(sd).split(" - <b>");
		sd = sd1[0];
		if(options.extraParams.id){
			var nd = String(sd).split(",");
      if (!options.hasOwnProperty('formatResult')) { // If formatResult() is defined, use v (selected.result) already set at the top, which is
                                                     // output of formatResult(). This check is added on 13 Sep 2012 by Sunil
  			if (nd.length > 1) {
  				v='';
  				for(var ki=1;ki<nd.length;ki++){
  					v+=v==''?nd[ki]:','+nd[ki];
  					//console.log('v+:'+v);
  				}
  			}else{
  				v=nd[0];
  			}
      }
  	  //console.log('Updating ' + options.extraParams.id + ' from value = ' + $('#'+options.extraParams.id).val() + ' to value = ' + nd[0]);
      
  		// While we select location get the id paint location capacity value  
  		if(options.capacityParams && options.extraParams.capacityId) {
  			var cp = String(nd[0]).split("#");
  			$('#'+options.extraParams.id).val(cp[0]);
  			$(options.extraParams.capacityId).val(cp[1]);
  		}else{
  			if(options.multiple == true){
  				var nval = $('#'+options.extraParams.id).val();
  				nval = (nval=='')?nd[0]:nval+"|"+nd[0];
  				$('#'+options.extraParams.id).val(nval);
  			}else{
  				$('#'+options.extraParams.id).val(nd[0]);
  			}
  		   
  		}
  	} else if (!options.hasOwnProperty('formatResult')) { // If formatResult() is defined, use v  (selected.result) already set at the top, which is
                                                         // output of formatResult(), otherwise this code. This check is added on 13 Sep 2012 by Sunil
  		v=String(sd);
  	}
    //console.log('selectCurrent() : v = ' + v);
		
		/*if(options.extraParams.callback){
			eval(options.extraParams.callback+'("'+String(sd)+'","'+options.extraParams.id+'")');
		}*/
		
		/* Coustomized by Vincent for support id & name : ends */
		
		previousValue = v;
		
		if ( options.multiple ) {
			var words = trimWords($input.val());
			if ( words.length > 1 ) {
				var seperator = options.multipleSeparator.length;
				var cursorAt = $(input).selection().start;
				var wordAt, progress = 0;
				$.each(words, function(i, word) {
					progress += word.length;
					if (cursorAt <= progress) {
						wordAt = i;
						return false;
					}
					progress += seperator;
				});
				words[wordAt] = v;
				// TODO this should set the cursor to the right position, but it gets overriden somewhere
				//$.Autocompleter.Selection(input, progress + seperator, progress + seperator);
				v = words.join( options.multipleSeparator );
			}
			v += options.multipleSeparator;
		}
		//console.log('v value'+v);
		
		var maxChars = $input.attr('maxlength');
		if(maxChars != -1 && maxChars != '' && maxChars !== undefined) {
			$input.val(v.substring(0, maxChars));
		}
		else {
			$input.val(v);
		}
		
		if(options.extraParams.callback){
			eval(options.extraParams.callback+'("'+String(sd)+'","'+options.extraParams.id+'")');
			
		}
		hideResultsNow();
		$input.trigger("result", [selected.data, selected.value]);
		
		return true;
	}
	
	function split(sep){
		alert(sep);
	}
	
	function onChange(crap, skipPrevCheck) {
		if( lastKeyPressCode == KEY.DEL ) {
			select.hide();
			return;
		}
		
		var currentValue = $input.val();
		
		if ( !skipPrevCheck && currentValue == previousValue )
			return;
		
		previousValue = currentValue;
		
		currentValue = lastWord(currentValue);
		if ( currentValue.length >= options.minChars) {
			$input.addClass(options.loadingClass);
			if (!options.matchCase)
				currentValue = currentValue.toLowerCase();
			request(currentValue, receiveData, hideResultsNow);
		} else {
			stopLoading();
			select.hide();
		}
	};
	
	function trimWords(value) {
		if (!value)
			return [""];
		if (!options.multiple)
			return [$.trim(value)];
		return $.map(value.split(options.multipleSeparator), function(word) {
			return $.trim(value).length ? $.trim(word) : null;
		});
	}
	
	function lastWord(value) {
		if ( !options.multiple )
			return value;
		var words = trimWords(value);
		if (words.length == 1) 
			return words[0];
		var cursorAt = $(input).selection().start;
		if (cursorAt == value.length) {
			words = trimWords(value)
		} else {
			words = trimWords(value.replace(value.substring(cursorAt), ""));
		}
		return words[words.length - 1];
	}
	
	// fills in the input box w/the first match (assumed to be the best match)
	// z: the term entered
	// sValue: the first matching result
	function autoFill(z, sValue){
		/* autoFill has been suppressed by Vincent on 22-Jun-2010 */
		
		// autofill in the complete box w/the first match as long as the user hasn't entered in more data
		// if the last user key pressed was backspace, don't autofill
		//if( options.autoFill && (lastWord($input.val()).toLowerCase() == z.toLowerCase()) && lastKeyPressCode != KEY.BACKSPACE ) {
			// fill in the value (keep the case the user has typed)
			//$input.val($input.val() + sValue.substring(lastWord(previousValue).length));
			// select the portion of the value not typed by the user (so the next character will erase)
			//$(input).selection(previousValue.length, previousValue.length + sValue.length);
		//}
	};

	function hideResults() {
		clearTimeout(timeout);
		timeout = setTimeout(hideResultsNow, 200);
	};

	function hideResultsNow() {
		var wasVisible = select.visible();
		select.hide();
		clearTimeout(timeout);
		stopLoading();
		if (options.mustMatch) {
			// call search and run callback
			$input.search(
				function (result){
					// if no value found, clear the input box
					if( !result ) {
						if (options.multiple) {
							var words = trimWords($input.val()).slice(0, -1);
							
							$input.val( words.join(options.multipleSeparator) + (words.length ? options.multipleSeparator : "") );
						}
						else {
							$input.val( "" );
							$input.trigger("result", null);
						}
					}
				}
			);
		}
	};

	function receiveData(z, data) {
		if ( data && data.length && hasFocus ) {
			stopLoading();
			select.display(data, z);
			autoFill(z, data[0].value);
			select.show();
			hide_findTraining(); /* IE 6 issue */
						
		} else {
			hideResultsNow();
		}
	};

	function request(term, success, failure) {
		if (!options.matchCase)
			term = term.toLowerCase();
		var data = cache.load(term);
		// recieve the cached data
		if (data && data.length) {
			success(term, data);
		// if an AJAX url has been supplied, try loading the data now
		} else if( (typeof options.url == "string") && (options.url.length > 0) ){
			
			var extraParams = {
				timestamp: +new Date()
			};
			$.each(options.extraParams, function(key, param) {
				extraParams[key] = typeof param == "function" ? param() : param;
			});
			autoCompleteTimeOut = parseInt(options.autoCompleteTimeOut);
			if(autoCompleteTimeOut>0){
				$.ajax({
					// try to leverage ajaxQueue plugin to abort previous requests
					mode: "abort",
					// limit abortion to this input
					port: "autocomplete" + input.name,
					dataType: options.dataType,
					url: options.url,
					timeout:autoCompleteTimeOut,
					data: $.extend({
						z: lastWord(term),
						limit: options.max
					}, extraParams),
					success: function(data) {
						var parsed = options.parse && options.parse(data) || parse(data);
						cache.add(term, parsed);
						success(term, parsed);
					},error: function(xhr, status, message) {
				        if(status == "timeout") {
				        	stopLoading();
				        	var error = new Array();
							error[0] = options.errMsg;
				        	$('#show_expertus_message').html(expertus_error_message(error,'error'));
							$('#show_expertus_message').show();
				       }
				   }
				});
			}else{
				$.ajax({
					// try to leverage ajaxQueue plugin to abort previous requests
					mode: "abort",
					// limit abortion to this input
					port: "autocomplete" + input.name,
					dataType: options.dataType,
					url: options.url,
					data: $.extend({
						z: lastWord(term),
						limit: options.max
					}, extraParams),
					success: function(data) {
						var parsed = options.parse && options.parse(data) || parse(data);
						cache.add(term, parsed);
						success(term, parsed);
					}
				});
			}
		} 
		else if(typeof options.url == "function")
		{
			options.url(lastWord(term),functionAdder,success);
			//temp=parseFunction(temp);
			//cache.add(term, temp);
			//success(term, temp);
		}
		else {
			// if we have a failure, we need to empty the list -- this prevents the the [TAB] key from selecting the last successful match
			select.emptyList();
			failure(term);
		}
	};
	
	function functionAdder(success,term,temp)
	{
		temp=parseFunction(temp);
		cache.add(term, temp);
		success(term, temp);
	}
	
	function parseFunction(data) {
	var parsed = [];
	var rows = data.split("}");
	for (var i=0; i < rows.length; i++) {
		var row = $.trim(rows[i]);
		if (row) {
			row = row.split("|");
			parsed[parsed.length] = {
				data: row,
				value: row[0],
				result: options.formatResult && options.formatResult(row, row[0]) || row[0]
			};
		}
	}
	return parsed;
	};
	
	function parse(data) {
		var parsed = [];
		var rows = data.split("\n");
		for (var i=0; i < rows.length; i++) {
			var row = $.trim(rows[i]);
			if (row) {
				row = row.split(Drupal.settings.custom.EXP_AC_SEPARATOR);
				parsed[parsed.length] = {
					data: row,
					value: row[0],
					result: options.formatResult && options.formatResult(row, row[0]) || row[0]
				};
			}
		}
		return parsed;
	};

	function stopLoading() {
		$input.removeClass(options.loadingClass);
	};

};

$.Autocompleter.defaults = {
	inputClass: "ac_input",
	resultsClass: "ac_results",
	loadingClass: "ac_loading",
	minChars: 1,
	delay: 400,
	matchCase: false,
	matchSubset: true,
	matchContains: false,
	cacheLength: 10,
	max: 100,
	mustMatch: false,
	extraParams: {},
	selectFirst: false,
	formatItem: function(row) { return row[0]; },
	formatMatch: null,
	autoFill: false,
	width: 0,
	multiple: false,
	multipleSeparator: ", ",
	highlight: function(value, term) {
		return value.replace(new RegExp("(?![^&;]+;)(?!<[^<>]*)(" + term.replace(/([\^\$\(\)\[\]\{\}\*\.\+\?\|\\])/gi, "\\$1") + ")(?![^<>]*>)(?![^&;]+;)", "gi"), "<strong>$1</strong>");
	},
    scroll: true,
    scrollHeight: 200,
    autoCompleteTimeOut:0,
    errMsg:''
    /*scrollHeight: 180*/
};

$.Autocompleter.Cache = function(options) {

	var data = {};
	var length = 0;
	
	function matchSubset(s, sub) {
		if (!options.matchCase) 
			s = s.toLowerCase();
		var i = s.indexOf(sub);
		if (options.matchContains == "word"){
			i = s.toLowerCase().search("\\b" + sub.toLowerCase());
		}
		if (i == -1) return false;
		return i >= 0 || options.matchContains;
	};
	
	function add(z, value) {
		if (length > options.cacheLength){
			flush();
		}
		if (!data[z]){ 
			length++;
		}
		data[z] = value;
	}
	
	function populate(){
		if( !options.data ) return false;
		// track the matches
		var stMatchSets = {},
			nullData = 0;

		// no url was specified, we need to adjust the cache length to make sure it fits the local data store
		if( !options.url ) options.cacheLength = 1;
		
		// track all options for minChars = 0
		stMatchSets[""] = [];
		
		// loop through the array and create a lookup structure
		for ( var i = 0, ol = options.data.length; i < ol; i++ ) {
			var rawValue = options.data[i];
			// if rawValue is a string, make an array otherwise just reference the array
			rawValue = (typeof rawValue == "string") ? [rawValue] : rawValue;

			var value = options.formatMatch(rawValue, i+1, options.data.length);
			if ( value === false )
				continue;
				
			var firstChar = value.charAt(0).toLowerCase();
			// if no lookup array for this character exists, look it up now
			if( !stMatchSets[firstChar] ) 
				stMatchSets[firstChar] = [];

			// if the match is a string
			var row = {
				value: value,
				data: rawValue,
				result: options.formatResult && options.formatResult(rawValue) || value
			};
			// push the current match into the set list
			stMatchSets[firstChar].push(row);

			// keep track of minChars zero items
			if ( nullData++ < options.max ) {
				stMatchSets[""].push(row);
			}
		};

		// add the data items to the cache
		$.each(stMatchSets, function(i, value) {
			// increase the cache size
			options.cacheLength++;
			// add to the cache
			add(i, value);
		});
	}
	
	// populate any existing data
	setTimeout(populate, 25);
	
	function flush(){
		data = {};
		length = 0;
	}
	
	return {
		flush: flush,
		add: add,
		populate: populate,
		load: function(z) {
			if (!options.cacheLength || !length)
				return null;
			/* 
			 * if dealing w/local data and matchContains than we must make sure
			 * to loop through all the data collections looking for matches
			 */
			if( !options.url && options.matchContains ){
				// track all matches
				var csub = [];
				// loop through all the data grids for matches
				for( var k in data ){
					// don't search through the stMatchSets[""] (minChars: 0) cache
					// this prevents duplicates
					if( k.length > 0 ){
						var c = data[k];
						$.each(c, function(i, x) {
							// if we've got a match, add it to the array
							if (matchSubset(x.value, z)) {
								csub.push(x);
							}
						});
					}
				}
				
				return csub;
			} else 
			// if the exact item exists, use it
			if (data[z]){
				return data[z];
			} else
			if (options.matchSubset) {
				for (var i = z.length - 1; i >= options.minChars; i--) {
					var c = data[z.substr(0, i)];
					if (c) {
						var csub = [];
						$.each(c, function(i, x) {
							if (matchSubset(x.value, z)) {
								csub[csub.length] = x;								
							}
						});
						return csub;
					}
				}
			}
			return null;
		}
	};
};

$.Autocompleter.Select = function (options, input, select, config) {
	var CLASSES = {
		ACTIVE: "ac_over"
	};
	
	var listItems,
		active = -1,
		data,
		term = "",
		needsInit = true,
		element,
		list;
	
	// Create results
	function init() {
		if (!needsInit)
			return; 
		
		//Added by ganeshbabuv for Location UI filter #0073054 Search auto-suggestion UI needs to be improvised for Location filter
		var no_of_ac_results_cls = $('.ac_results').length;   

		element = $("<div/>")
		.hide()
		.addClass(options.resultsClass)
		.attr("id", 'ac_id_'+no_of_ac_results_cls) 
		.css("position", "absolute")						 
		.appendTo(document.body);  
		
		list = $("<ul/>").appendTo(element).mouseover( function(event)	{
			if(target(event).nodeName && target(event).nodeName.toUpperCase() == 'LI') {
	            active = $("li", list).removeClass(CLASSES.ACTIVE).index(target(event));
			    $(target(event)).addClass(CLASSES.ACTIVE);            
	        }
		}).click(function(event) {
			$(target(event)).addClass(CLASSES.ACTIVE);
			select();
			// TODO provide option to avoid setting focus again after selection? useful for cleanup-on-focus
			input.focus();
			return false;
		}).mousedown(function() {
			config.mouseDownOnSelect = true;
		}).mouseup(function() {
			config.mouseDownOnSelect = false;
		});
		
		if( options.width > 0 )
			element.css("width", options.width);
			
		needsInit = false;
	} 
	
	function target(event) {
		var element = event.target;
		while(element && element.tagName != "LI")
			element = element.parentNode;
		// more fun with IE, sometimes event.target is empty, just ignore it then
		if(!element)
			return [];
		return element;
	}

	function moveSelect(step) {
		listItems.slice(active, active + 1).removeClass(CLASSES.ACTIVE);
		movePosition(step);
        var activeItem = listItems.slice(active, active + 1).addClass(CLASSES.ACTIVE);
        if(options.scroll) {
            var offset = 0;
            listItems.slice(0, active).each(function() {
				offset += this.offsetHeight;
			});
            if((offset + activeItem[0].offsetHeight - list.scrollTop()) > list[0].clientHeight) {
                list.scrollTop(offset + activeItem[0].offsetHeight - list.innerHeight());
            } else if(offset < list.scrollTop()) {
                list.scrollTop(offset);
            }
        }
	};
	
	function movePosition(step) {
		active += step;
		if (active < 0) {
			active = listItems.size() - 1;
		} else if (active >= listItems.size()) {
			active = 0;
		}
	}
	
	function limitNumberOfItems(available) {
		return options.max && options.max < available
			? options.max
			: available;
	}
	
	function fillList() {
		list.empty();
		var max = limitNumberOfItems(data.length);
		for (var i=0; i < max; i++) {
			if (!data[i])				
				continue;			
			var formatted = rawurldecode(options.formatItem(data[i].data, i+1, max, data[i].value, term));
			//var formatted = options.formatItem(data[i].data, i+1, max, data[i].value, term);
			if ( formatted === false )
				continue;
			var li = $("<li/>").html( options.highlight(formatted, term) ).addClass(i%2 == 0 ? "ac_even" : "ac_odd").appendTo(list)[0];			
			$.data(li, "ac_data", data[i]);
		}
		listItems = list.find("li");
		if ( options.selectFirst ) {
			listItems.slice(0, 1).addClass(CLASSES.ACTIVE);
			active = 0;
		}
		// apply bgiframe if available
		if ( $.fn.bgiframe )
			list.bgiframe();
	}
	
	return {
		display: function(d, z) {
			init();
			data = d;			
			term = z;
			
			fillList();
		},
		next: function() {
			moveSelect(1);
		},
		prev: function() {
			moveSelect(-1);
		},
		pageUp: function() {
			if (active != 0 && active - 8 < 0) {
				moveSelect( -active );
			} else {
				moveSelect(-8);
			}
		},
		pageDown: function() {
			if (active != listItems.size() - 1 && active + 8 > listItems.size()) {
				moveSelect( listItems.size() - 1 - active );
			} else {
				moveSelect(8);
			}
		},
		hide: function() {
			element && element.hide();
			listItems && listItems.removeClass(CLASSES.ACTIVE);
			active = -1;
			show_findTraining();
		},
		visible : function() {
			return element && element.is(":visible");
		},
		current: function() {
			return this.visible() && (listItems.filter("." + CLASSES.ACTIVE)[0] || options.selectFirst && listItems[0]);
		},
		show: function() {
			var offset = $(input).offset(); 
			
			//Added by ganeshbabuv March 15th 2017 for Location UI filter #0073054 Search auto-suggestion UI needs to be improvised for Location filter
			var loc_filter_ac='0'; 
			var top_search_cls='ac_jscroll_results_left_panel_li_div';
			
			
			//Search Filter for Admin Calender - Added/Changed by ganesh on May 9th 2017 for #73716
			var elem_admin_cal_txt_id=$(input).attr('id');  
			if(elem_admin_cal_txt_id=='narrow-search-calendar-filter'){
		      options.width='150px';
			  offset.left=offset.left-14;
			  loc_filter_ac='1';
			}
			
			
			//Location Filter UI for Learner Catalog		   
		   if($(input).hasClass('loc_catalogpage_ac')){ 
			    options.width='140px'; 
			    offset.left=offset.left-12;
			    loc_filter_ac='1'; 
		    }
			
			//Location Filter UI for autocomplete of admin class catalog
			var elem_admin_class_loc_filter_id=$(input).attr('id'); 
			
			if(elem_admin_class_loc_filter_id=='classLocation-addltext-filter'){
		      options.width='178px';
			  offset.left=offset.left-12;
			  loc_filter_ac='1';
			}
			 
			//Location Filter UI for autocomplete of admin manage location
			var elem_admin_manage_loc_filter_id=$(input).attr('id'); 
			var elem_admin_manage_loc_filter_name=$(input).attr('name');  
			
			if(elem_admin_manage_loc_filter_id=='rescitystate-addltext-filter' && elem_admin_manage_loc_filter_name=='LocationFilter'){
			    options.width='179px';
			    offset.left=offset.left-12;
			    loc_filter_ac='1';			
			} 
			
			//Location Filter UI for Manage Location Top Search
			if($(input).hasClass('manage_location_top_txt_filter')){  
			     options.width='232px';
			     offset.left=offset.left-15;
			     loc_filter_ac='1';
			     //ac_top_ac_search='1';
			     top_search_cls='ac_jscroll_results_top_panel_li_div'; 
			} 
			
			//Location Filter UI for Admin Catalog Class Edit and Add the class location
			if($(input).hasClass('addedit-edit-new_location')){
			    options.width='163px'; 
			    offset.left=offset.left;
			    loc_filter_ac='1';	 
			}   
			
			//Location Filter UI for the my learning/my programs
			var elem_user_mylearing_loc_id=$(input).attr('id');  
			if(elem_user_mylearing_loc_id=='myenrollment-location' || elem_user_mylearing_loc_id=='myprograms-location'){
			  options.width='155px';   
			  offset.left=offset.left+1;
			  loc_filter_ac='1';
			  top_search_cls='ac_jscroll_results_mylearning_panel_li_div';
			} 
			
			//Location Filter UI for the my classes
			if(elem_user_mylearing_loc_id=='myclasses-location'){
			  options.width='168px';  
			  offset.left=offset.left+1;
			  loc_filter_ac='1';
			  top_search_cls='ac_jscroll_results_mylearning_panel_li_div';
			}  
			
			element.css({
				width: typeof options.width == "string" || options.width > 0 ? options.width : $(input).width(),
				top: offset.top + input.offsetHeight,
				left: offset.left
			}).show();
			
			 
			hide_findTraining(); 
			
			if(loc_filter_ac=='1'){ // Initiate JScrollpane for Location Filter 
				
				 options.scroll=false;  
				  
				 var elem_id='#'+$(element).attr('id'); 
				 
				 $(elem_id).addClass('ac_jscroll_results');
				 
				 $(elem_id + ' ul li').each(function( index ) {
				    var li_txt=$(this).html();
				    var li_txt_format='<div class=\''+top_search_cls+'\'>'+li_txt+'</div>';
				    $(this).html(li_txt_format);
				});   
			   
				var ac_res_height=$(elem_id + " ul").height();  
				 
				if(ac_res_height > options.scrollHeight){
					Js_scrollbarsHeight=options.scrollHeight;
				}else{
					Js_scrollbarsHeight=ac_res_height; 
				}   
				
				$(elem_id).css('height',Js_scrollbarsHeight);
				$(elem_id).css('width', options.width);  
				
				$(elem_id).jScrollPane({
					autoReinitialise: true,
					verticalGutter:0,
					horizontalGutter:0				 	 					 
				});  
				 	 
		    }
			
			
            if(options.scroll) {
                list.scrollTop(0);
                list.css({
					maxHeight: options.scrollHeight
					/*overflow: 'hidden'*/
				});
				
                if($.browser.msie && typeof document.body.style.maxHeight === "undefined") {
					var listHeight = 0;
					listItems.each(function() {
						listHeight += this.offsetHeight;
					});
					var scrollbarsVisible = listHeight > options.scrollHeight;
                    list.css('height', scrollbarsVisible ? options.scrollHeight : listHeight );
					if (!scrollbarsVisible) {
						// IE doesn't recalculate width when scrollbar disappears
						listItems.width( list.width() - parseInt(listItems.css("padding-left")) - parseInt(listItems.css("padding-right")) );
					}
                }
                
            }
		},
		selected: function() {
			var selected = listItems && listItems.filter("." + CLASSES.ACTIVE).removeClass(CLASSES.ACTIVE);
			return selected && selected.length && $.data(selected[0], "ac_data");
		},
		emptyList: function (){
			list && list.empty();
		},
		unbind: function() {
			element && element.remove();
			show_findTraining();
		}
	};
};

$.fn.selection = function(start, end) {
	if (start !== undefined) {
		return this.each(function() {
			if( this.createTextRange ){
				var selRange = this.createTextRange();
				if (end === undefined || start == end) {
					selRange.move("character", start);
					selRange.select();
				} else {
					selRange.collapse(true);
					selRange.moveStart("character", start);
					selRange.moveEnd("character", end);
					selRange.select();
				}
			} else if( this.setSelectionRange ){
				this.setSelectionRange(start, end);
			} else if( this.selectionStart ){
				this.selectionStart = start;
				this.selectionEnd = end;
			}
		});
	}
	var field = this[0];
	if ( field.createTextRange ) {
		var range = document.selection.createRange(),
			orig = field.value,
			teststring = "<->",
			textLength = range.text.length;
		range.text = teststring;
		var caretAt = field.value.indexOf(teststring);
		field.value = orig;
		this.selection(caretAt, caretAt + textLength);
		return {
			start: caretAt,
			end: caretAt + textLength
		}
	} else if( field.selectionStart !== undefined ){
		return {
			start: field.selectionStart,
			end: field.selectionEnd
		}
	}
};

/*
 * A JavaScript function equivalent of PHP’s rawurldecode
 */
function rawurldecode(str) {
	  return decodeURIComponent((str + '')
	    .replace(/%(?![\da-f]{2})/gi, function() {
	      // PHP tolerates poorly formed escape sequences
	      return '%25';
	    }));
	}
})(jQuery);;
/*!
 * jScrollPane - v2.0.0beta12
 * 
 *
 * Copyright (c) 2012 Expertus
 */


(function($,window,undefined){

	$.fn.jScrollPane = function(settings)
	{
		// JScrollPane "class" - public methods are available through $('selector').data('jsp')
		function JScrollPane(elem, s)
		{
			var settings, jsp = this, pane, paneWidth, paneHeight, container, contentWidth, contentHeight,
				percentInViewH, percentInViewV, isScrollableV, isScrollableH, verticalDrag, dragMaxY,
				verticalDragPosition, horizontalDrag, dragMaxX, horizontalDragPosition,
				verticalBar, verticalTrack, scrollbarWidth, verticalTrackHeight, verticalDragHeight, arrowUp, arrowDown,
				horizontalBar, horizontalTrack, horizontalTrackWidth, horizontalDragWidth, arrowLeft, arrowRight,
				reinitialiseInterval, originalPadding, originalPaddingTotalWidth, previousContentWidth,
				wasAtTop = true, wasAtLeft = true, wasAtBottom = false, wasAtRight = false,
				originalElement = elem.clone(false, false).empty(),
				mwEvent = $.fn.mwheelIntent ? 'mwheelIntent.jsp' : 'mousewheel.jsp';

			originalPadding = elem.css('paddingTop') + ' ' +
								elem.css('paddingRight') + ' ' +
								elem.css('paddingBottom') + ' ' +
								elem.css('paddingLeft');
			originalPaddingTotalWidth = (parseInt(elem.css('paddingLeft'), 10) || 0) +
										(parseInt(elem.css('paddingRight'), 10) || 0);

			function initialise(s)
			{

				var /*firstChild, lastChild, */isMaintainingPositon, lastContentX, lastContentY,
						hasContainingSpaceChanged, originalScrollTop, originalScrollLeft,
						maintainAtBottom = false, maintainAtRight = false;

				settings = s;

				if (pane === undefined) {
					originalScrollTop = elem.scrollTop();
					originalScrollLeft = elem.scrollLeft();

					elem.css(
						{
							overflow: 'hidden',
							padding: 0
						}
					);
					// TODO: Deal with where width/ height is 0 as it probably means the element is hidden and we should
					// come back to it later and check once it is unhidden...
					paneWidth = elem.innerWidth() + originalPaddingTotalWidth;
					paneHeight = elem.innerHeight();

					elem.width(paneWidth);
					
					pane = $('<div class="jspPane" />').css('padding', originalPadding).append(elem.children());
					container = $('<div class="jspContainer" />')
						.css({
							'width': paneWidth + 'px',
							'height': paneHeight + 'px'
						}
					).append(pane).appendTo(elem);

					/*
					// Move any margins from the first and last children up to the container so they can still
					// collapse with neighbouring elements as they would before jScrollPane 
					firstChild = pane.find(':first-child');
					lastChild = pane.find(':last-child');
					elem.css(
						{
							'margin-top': firstChild.css('margin-top'),
							'margin-bottom': lastChild.css('margin-bottom')
						}
					);
					firstChild.css('margin-top', 0);
					lastChild.css('margin-bottom', 0);
					*/
				} else {
					elem.css('width', '');

					maintainAtBottom = settings.stickToBottom && isCloseToBottom();
					maintainAtRight  = settings.stickToRight  && isCloseToRight();

					hasContainingSpaceChanged = elem.innerWidth() + originalPaddingTotalWidth != paneWidth || elem.outerHeight() != paneHeight;

					if (hasContainingSpaceChanged) {
						paneWidth = elem.innerWidth() + originalPaddingTotalWidth;
						paneHeight = elem.innerHeight();
						container.css({
							width: paneWidth + 'px',
							height: paneHeight + 'px'
						});
					}

					// If nothing changed since last check...
					if (!hasContainingSpaceChanged && previousContentWidth == contentWidth && pane.outerHeight() == contentHeight) {
						elem.width(paneWidth);
						return;
					}
					previousContentWidth = contentWidth;
					
					pane.css('width', '');
					elem.width(paneWidth);

					container.find('>.jspVerticalBar,>.jspHorizontalBar').remove().end();
				}

				pane.css('overflow', 'auto');
				if (s.contentWidth) {
					contentWidth = s.contentWidth;
				} else {
					contentWidth = pane[0].scrollWidth;
				}
				contentHeight = pane[0].scrollHeight;
				pane.css('overflow', '');

				percentInViewH = contentWidth / paneWidth;
				percentInViewV = contentHeight / paneHeight;
				isScrollableV = percentInViewV > 1;

				isScrollableH = percentInViewH > 1;

				//console.log(paneWidth, paneHeight, contentWidth, contentHeight, percentInViewH, percentInViewV, isScrollableH, isScrollableV);

				if (!(isScrollableH || isScrollableV)) {
					elem.removeClass('jspScrollable');
					pane.css({
						top: 0,
						width: container.width() - originalPaddingTotalWidth
					});
					removeMousewheel();
					removeFocusHandler();
					removeKeyboardNav();
					removeClickOnTrack();
				} else {
					elem.addClass('jspScrollable');

					isMaintainingPositon = settings.maintainPosition && (verticalDragPosition || horizontalDragPosition);
					if (isMaintainingPositon) {
						lastContentX = contentPositionX();
						lastContentY = contentPositionY();
					}

					initialiseVerticalScroll();
					initialiseHorizontalScroll();
					resizeScrollbars();

					if (isMaintainingPositon) {
						scrollToX(maintainAtRight  ? (contentWidth  - paneWidth ) : lastContentX, false);
						scrollToY(maintainAtBottom ? (contentHeight - paneHeight) : lastContentY, false);
					}

					initFocusHandler();
					initMousewheel();
					initTouch();
					
					if (settings.enableKeyboardNavigation) {
						initKeyboardNav();
					}
					if (settings.clickOnTrack) {
						initClickOnTrack();
					}
					
					observeHash();
					if (settings.hijackInternalLinks) {
						hijackInternalLinks();
					}
				}

				if (settings.autoReinitialise && !reinitialiseInterval) {
					reinitialiseInterval = setInterval(
						function()
						{
							initialise(settings);
						},
						settings.autoReinitialiseDelay
					);
				} else if (!settings.autoReinitialise && reinitialiseInterval) {
					clearInterval(reinitialiseInterval);
				}

				originalScrollTop && elem.scrollTop(0) && scrollToY(originalScrollTop, false);
				originalScrollLeft && elem.scrollLeft(0) && scrollToX(originalScrollLeft, false);

				elem.trigger('jsp-initialised', [isScrollableH || isScrollableV]);
			}

			function initialiseVerticalScroll()
			{
				if (isScrollableV) {

					container.append(
						$('<div class="jspVerticalBar" />').append(
							$('<div class="jspCap jspCapTop" />'),
							$('<div class="jspTrack" />').append(
								$('<div class="jspDrag" />').append(
									$('<div class="jspDragTop" />'),
									$('<div class="jspDragBottom" />')
								)
							),
							$('<div class="jspCap jspCapBottom" />')
						)
					);

					verticalBar = container.find('>.jspVerticalBar');
					verticalTrack = verticalBar.find('>.jspTrack');
					verticalDrag = verticalTrack.find('>.jspDrag');

					if (settings.showArrows) {
						arrowUp = $('<a class="jspArrow jspArrowUp" />').bind(
							'mousedown.jsp', getArrowScroll(0, -1)
						).bind('click.jsp', nil);
						arrowDown = $('<a class="jspArrow jspArrowDown" />').bind(
							'mousedown.jsp', getArrowScroll(0, 1)
						).bind('click.jsp', nil);
						if (settings.arrowScrollOnHover) {
							arrowUp.bind('mouseover.jsp', getArrowScroll(0, -1, arrowUp));
							arrowDown.bind('mouseover.jsp', getArrowScroll(0, 1, arrowDown));
						}

						appendArrows(verticalTrack, settings.verticalArrowPositions, arrowUp, arrowDown);
					}

					verticalTrackHeight = paneHeight;
					container.find('>.jspVerticalBar>.jspCap:visible,>.jspVerticalBar>.jspArrow').each(
						function()
						{
							verticalTrackHeight -= $(this).outerHeight();
						}
					);


					verticalDrag.hover(
						function()
						{
							verticalDrag.addClass('jspHover');
						},
						function()
						{
							verticalDrag.removeClass('jspHover');
						}
					).bind(
						'mousedown.jsp',
						function(e)
						{
							// Stop IE from allowing text selection
							$('html').bind('dragstart.jsp selectstart.jsp', nil);

							verticalDrag.addClass('jspActive');

							var startY = e.pageY - verticalDrag.position().top;

							$('html').bind(
								'mousemove.jsp',
								function(e)
								{
									positionDragY(e.pageY - startY, false);
								}
							).bind('mouseup.jsp mouseleave.jsp', cancelDrag);
							return false;
						}
					);
					sizeVerticalScrollbar();
				}
			}

			function sizeVerticalScrollbar()
			{
				verticalTrack.height(verticalTrackHeight + 'px');
				verticalDragPosition = 0;
				scrollbarWidth = settings.verticalGutter + verticalTrack.outerWidth();

				// Make the pane thinner to allow for the vertical scrollbar
				pane.width(paneWidth - scrollbarWidth - originalPaddingTotalWidth);

				// Add margin to the left of the pane if scrollbars are on that side (to position
				// the scrollbar on the left or right set it's left or right property in CSS)
				try {
					if (verticalBar.position().left === 0) {
						pane.css('margin-left', scrollbarWidth + 'px');
					}
				} catch (err) {
				}
			}

			function initialiseHorizontalScroll()
			{
				if (isScrollableH) {

					container.append(
						$('<div class="jspHorizontalBar" />').append(
							$('<div class="jspCap jspCapLeft" />'),
							$('<div class="jspTrack" />').append(
								$('<div class="jspDrag" />').append(
									$('<div class="jspDragLeft" />'),
									$('<div class="jspDragRight" />')
								)
							),
							$('<div class="jspCap jspCapRight" />')
						)
					);

					horizontalBar = container.find('>.jspHorizontalBar');
					horizontalTrack = horizontalBar.find('>.jspTrack');
					horizontalDrag = horizontalTrack.find('>.jspDrag');

					if (settings.showArrows) {
						arrowLeft = $('<a class="jspArrow jspArrowLeft" />').bind(
							'mousedown.jsp', getArrowScroll(-1, 0)
						).bind('click.jsp', nil);
						arrowRight = $('<a class="jspArrow jspArrowRight" />').bind(
							'mousedown.jsp', getArrowScroll(1, 0)
						).bind('click.jsp', nil);
						if (settings.arrowScrollOnHover) {
							arrowLeft.bind('mouseover.jsp', getArrowScroll(-1, 0, arrowLeft));
							arrowRight.bind('mouseover.jsp', getArrowScroll(1, 0, arrowRight));
						}
						appendArrows(horizontalTrack, settings.horizontalArrowPositions, arrowLeft, arrowRight);
					}

					horizontalDrag.hover(
						function()
						{
							horizontalDrag.addClass('jspHover');
						},
						function()
						{
							horizontalDrag.removeClass('jspHover');
						}
					).bind(
						'mousedown.jsp',
						function(e)
						{
							// Stop IE from allowing text selection
							$('html').bind('dragstart.jsp selectstart.jsp', nil);

							horizontalDrag.addClass('jspActive');

							var startX = e.pageX - horizontalDrag.position().left;

							$('html').bind(
								'mousemove.jsp',
								function(e)
								{
									positionDragX(e.pageX - startX, false);
								}
							).bind('mouseup.jsp mouseleave.jsp', cancelDrag);
							return false;
						}
					);
					horizontalTrackWidth = container.innerWidth();
					sizeHorizontalScrollbar();
				}
			}

			function sizeHorizontalScrollbar()
			{
				container.find('>.jspHorizontalBar>.jspCap:visible,>.jspHorizontalBar>.jspArrow').each(
					function()
					{
						horizontalTrackWidth -= $(this).outerWidth();
					}
				);

				horizontalTrack.width(horizontalTrackWidth + 'px');
				horizontalDragPosition = 0;
			}

			function resizeScrollbars()
			{
				if (isScrollableH && isScrollableV) {
					var horizontalTrackHeight = horizontalTrack.outerHeight(),
						verticalTrackWidth = verticalTrack.outerWidth();
					verticalTrackHeight -= horizontalTrackHeight;
					$(horizontalBar).find('>.jspCap:visible,>.jspArrow').each(
						function()
						{
							horizontalTrackWidth += $(this).outerWidth();
						}
					);
					horizontalTrackWidth -= verticalTrackWidth;
					paneHeight -= verticalTrackWidth;
					paneWidth -= horizontalTrackHeight;
					horizontalTrack.parent().append(
						$('<div class="jspCorner" />').css('width', horizontalTrackHeight + 'px')
					);
					sizeVerticalScrollbar();
					sizeHorizontalScrollbar();
				}
				// reflow content
				if (isScrollableH) {
					pane.width((container.outerWidth() - originalPaddingTotalWidth) + 'px');
				}
				contentHeight = pane.outerHeight();
				percentInViewV = contentHeight / paneHeight;

				if (isScrollableH) {
					horizontalDragWidth = Math.ceil(1 / percentInViewH * horizontalTrackWidth);
					if (horizontalDragWidth > settings.horizontalDragMaxWidth) {
						horizontalDragWidth = settings.horizontalDragMaxWidth;
					} else if (horizontalDragWidth < settings.horizontalDragMinWidth) {
						horizontalDragWidth = settings.horizontalDragMinWidth;
					}
					horizontalDrag.width(horizontalDragWidth + 'px');
					dragMaxX = horizontalTrackWidth - horizontalDragWidth;
					_positionDragX(horizontalDragPosition); // To update the state for the arrow buttons
				}
				if (isScrollableV) {
					verticalDragHeight = Math.ceil(1 / percentInViewV * verticalTrackHeight);
					if (verticalDragHeight > settings.verticalDragMaxHeight) {
						verticalDragHeight = settings.verticalDragMaxHeight;
					} else if (verticalDragHeight < settings.verticalDragMinHeight) {
						verticalDragHeight = settings.verticalDragMinHeight;
					}
					verticalDrag.height(verticalDragHeight + 'px');
					dragMaxY = verticalTrackHeight - verticalDragHeight;
					_positionDragY(verticalDragPosition); // To update the state for the arrow buttons
				}
			}

			function appendArrows(ele, p, a1, a2)
			{
				var p1 = "before", p2 = "after", aTemp;
				
				// Sniff for mac... Is there a better way to determine whether the arrows would naturally appear
				// at the top or the bottom of the bar?
				if (p == "os") {
					p = /Mac/.test(navigator.platform) ? "after" : "split";
				}
				if (p == p1) {
					p2 = p;
				} else if (p == p2) {
					p1 = p;
					aTemp = a1;
					a1 = a2;
					a2 = aTemp;
				}

				ele[p1](a1)[p2](a2);
			}

			function getArrowScroll(dirX, dirY, ele)
			{
				return function()
				{
					arrowScroll(dirX, dirY, this, ele);
					this.blur();
					return false;
				};
			}

			function arrowScroll(dirX, dirY, arrow, ele)
			{
				arrow = $(arrow).addClass('jspActive');

				var eve,
					scrollTimeout,
					isFirst = true,
					doScroll = function()
					{
						if (dirX !== 0) {
							jsp.scrollByX(dirX * settings.arrowButtonSpeed);
						}
						if (dirY !== 0) {
							jsp.scrollByY(dirY * settings.arrowButtonSpeed);
						}
						scrollTimeout = setTimeout(doScroll, isFirst ? settings.initialDelay : settings.arrowRepeatFreq);
						isFirst = false;
					};

				doScroll();

				eve = ele ? 'mouseout.jsp' : 'mouseup.jsp';
				ele = ele || $('html');
				ele.bind(
					eve,
					function()
					{
						arrow.removeClass('jspActive');
						scrollTimeout && clearTimeout(scrollTimeout);
						scrollTimeout = null;
						ele.unbind(eve);
					}
				);
			}

			function initClickOnTrack()
			{
				removeClickOnTrack();
				if (isScrollableV) {
					verticalTrack.bind(
						'mousedown.jsp',
						function(e)
						{
							if (e.originalTarget === undefined || e.originalTarget == e.currentTarget) {
								var clickedTrack = $(this),
									offset = clickedTrack.offset(),
									direction = e.pageY - offset.top - verticalDragPosition,
									scrollTimeout,
									isFirst = true,
									doScroll = function()
									{
										var offset = clickedTrack.offset(),
											pos = e.pageY - offset.top - verticalDragHeight / 2,
											contentDragY = paneHeight * settings.scrollPagePercent,
											dragY = dragMaxY * contentDragY / (contentHeight - paneHeight);
										if (direction < 0) {
											if (verticalDragPosition - dragY > pos) {
												jsp.scrollByY(-contentDragY);
											} else {
												positionDragY(pos);
											}
										} else if (direction > 0) {
											if (verticalDragPosition + dragY < pos) {
												jsp.scrollByY(contentDragY);
											} else {
												positionDragY(pos);
											}
										} else {
											cancelClick();
											return;
										}
										scrollTimeout = setTimeout(doScroll, isFirst ? settings.initialDelay : settings.trackClickRepeatFreq);
										isFirst = false;
									},
									cancelClick = function()
									{
										scrollTimeout && clearTimeout(scrollTimeout);
										scrollTimeout = null;
										$(document).unbind('mouseup.jsp', cancelClick);
									};
								doScroll();
								$(document).bind('mouseup.jsp', cancelClick);
								return false;
							}
						}
					);
				}
				
				if (isScrollableH) {
					horizontalTrack.bind(
						'mousedown.jsp',
						function(e)
						{
							if (e.originalTarget === undefined || e.originalTarget == e.currentTarget) {
								var clickedTrack = $(this),
									offset = clickedTrack.offset(),
									direction = e.pageX - offset.left - horizontalDragPosition,
									scrollTimeout,
									isFirst = true,
									doScroll = function()
									{
										var offset = clickedTrack.offset(),
											pos = e.pageX - offset.left - horizontalDragWidth / 2,
											contentDragX = paneWidth * settings.scrollPagePercent,
											dragX = dragMaxX * contentDragX / (contentWidth - paneWidth);
										if (direction < 0) {
											if (horizontalDragPosition - dragX > pos) {
												jsp.scrollByX(-contentDragX);
											} else {
												positionDragX(pos);
											}
										} else if (direction > 0) {
											if (horizontalDragPosition + dragX < pos) {
												jsp.scrollByX(contentDragX);
											} else {
												positionDragX(pos);
											}
										} else {
											cancelClick();
											return;
										}
										scrollTimeout = setTimeout(doScroll, isFirst ? settings.initialDelay : settings.trackClickRepeatFreq);
										isFirst = false;
									},
									cancelClick = function()
									{
										scrollTimeout && clearTimeout(scrollTimeout);
										scrollTimeout = null;
										$(document).unbind('mouseup.jsp', cancelClick);
									};
								doScroll();
								$(document).bind('mouseup.jsp', cancelClick);
								return false;
							}
						}
					);
				}
			}

			function removeClickOnTrack()
			{
				if (horizontalTrack) {
					horizontalTrack.unbind('mousedown.jsp');
				}
				if (verticalTrack) {
					verticalTrack.unbind('mousedown.jsp');
				}
			}

			function cancelDrag()
			{
				$('html').unbind('dragstart.jsp selectstart.jsp mousemove.jsp mouseup.jsp mouseleave.jsp');

				if (verticalDrag) {
					verticalDrag.removeClass('jspActive');
				}
				if (horizontalDrag) {
					horizontalDrag.removeClass('jspActive');
				}
			}

			function positionDragY(destY, animate)
			{
				if (!isScrollableV) {
					return;
				}
				if (destY < 0) {
					destY = 0;
				} else if (destY > dragMaxY) {
					destY = dragMaxY;
				}

				// can't just check if(animate) because false is a valid value that could be passed in...
				if (animate === undefined) {
					animate = settings.animateScroll;
				}
				if (animate) {
					jsp.animate(verticalDrag, 'top', destY,	_positionDragY);
				} else {
					verticalDrag.css('top', destY);
					_positionDragY(destY);
				}

			}

			function _positionDragY(destY)
			{
				if (destY === undefined) {
					destY = verticalDrag.position().top;
				}

				container.scrollTop(0);
				verticalDragPosition = destY;

				var isAtTop = verticalDragPosition === 0,
					isAtBottom = verticalDragPosition == dragMaxY,
					percentScrolled = destY/ dragMaxY,
					destTop = -percentScrolled * (contentHeight - paneHeight);

				if (wasAtTop != isAtTop || wasAtBottom != isAtBottom) {
					wasAtTop = isAtTop;
					wasAtBottom = isAtBottom;
					elem.trigger('jsp-arrow-change', [wasAtTop, wasAtBottom, wasAtLeft, wasAtRight]);
				}
				
				updateVerticalArrows(isAtTop, isAtBottom);
				pane.css('top', destTop);
				elem.trigger('jsp-scroll-y', [-destTop, isAtTop, isAtBottom]).trigger('scroll');
			}

			function positionDragX(destX, animate)
			{
				if (!isScrollableH) {
					return;
				}
				if (destX < 0) {
					destX = 0;
				} else if (destX > dragMaxX) {
					destX = dragMaxX;
				}

				if (animate === undefined) {
					animate = settings.animateScroll;
				}
				if (animate) {
					jsp.animate(horizontalDrag, 'left', destX,	_positionDragX);
				} else {
					horizontalDrag.css('left', destX);
					_positionDragX(destX);
				}
			}

			function _positionDragX(destX)
			{
				if (destX === undefined) {
					destX = horizontalDrag.position().left;
				}

				container.scrollTop(0);
				horizontalDragPosition = destX;

				var isAtLeft = horizontalDragPosition === 0,
					isAtRight = horizontalDragPosition == dragMaxX,
					percentScrolled = destX / dragMaxX,
					destLeft = -percentScrolled * (contentWidth - paneWidth);

				if (wasAtLeft != isAtLeft || wasAtRight != isAtRight) {
					wasAtLeft = isAtLeft;
					wasAtRight = isAtRight;
					elem.trigger('jsp-arrow-change', [wasAtTop, wasAtBottom, wasAtLeft, wasAtRight]);
				}
				
				updateHorizontalArrows(isAtLeft, isAtRight);
				pane.css('left', destLeft);
				elem.trigger('jsp-scroll-x', [-destLeft, isAtLeft, isAtRight]).trigger('scroll');
			}

			function updateVerticalArrows(isAtTop, isAtBottom)
			{
				if (settings.showArrows) {
					arrowUp[isAtTop ? 'addClass' : 'removeClass']('jspDisabled');
					arrowDown[isAtBottom ? 'addClass' : 'removeClass']('jspDisabled');
				}
			}

			function updateHorizontalArrows(isAtLeft, isAtRight)
			{
				if (settings.showArrows) {
					arrowLeft[isAtLeft ? 'addClass' : 'removeClass']('jspDisabled');
					arrowRight[isAtRight ? 'addClass' : 'removeClass']('jspDisabled');
				}
			}

			function scrollToY(destY, animate)
			{
				var percentScrolled = destY / (contentHeight - paneHeight);
				positionDragY(percentScrolled * dragMaxY, animate);
			}

			function scrollToX(destX, animate)
			{
				var percentScrolled = destX / (contentWidth - paneWidth);
				positionDragX(percentScrolled * dragMaxX, animate);
			}

			function scrollToElement(ele, stickToTop, animate)
			{
				var e, eleHeight, eleWidth, eleTop = 0, eleLeft = 0, viewportTop, viewportLeft, maxVisibleEleTop, maxVisibleEleLeft, destY, destX;

				// Legal hash values aren't necessarily legal jQuery selectors so we need to catch any
				// errors from the lookup...
				try {
					e = $(ele);
				} catch (err) {
					return;
				}
				eleHeight = e.outerHeight();
				eleWidth= e.outerWidth();

				container.scrollTop(0);
				container.scrollLeft(0);
				
				// loop through parents adding the offset top of any elements that are relatively positioned between
				// the focused element and the jspPane so we can get the true distance from the top
				// of the focused element to the top of the scrollpane...
				while (!e.is('.jspPane')) {
					eleTop += e.position().top;
					eleLeft += e.position().left;
					e = e.offsetParent();
					if (/^body|html$/i.test(e[0].nodeName)) {
						// we ended up too high in the document structure. Quit!
						return;
					}
				}

				viewportTop = contentPositionY();
				maxVisibleEleTop = viewportTop + paneHeight;
				if (eleTop < viewportTop || stickToTop) { // element is above viewport
					destY = eleTop - settings.verticalGutter;
				} else if (eleTop + eleHeight > maxVisibleEleTop) { // element is below viewport
					destY = eleTop - paneHeight + eleHeight + settings.verticalGutter;
				}
				if (destY) {
					scrollToY(destY, animate);
				}
				
				viewportLeft = contentPositionX();
	            maxVisibleEleLeft = viewportLeft + paneWidth;
	            if (eleLeft < viewportLeft || stickToTop) { // element is to the left of viewport
	                destX = eleLeft - settings.horizontalGutter;
	            } else if (eleLeft + eleWidth > maxVisibleEleLeft) { // element is to the right viewport
	                destX = eleLeft - paneWidth + eleWidth + settings.horizontalGutter;
	            }
	            if (destX) {
	                scrollToX(destX, animate);
	            }

			}

			function contentPositionX()
			{
				return -pane.position().left;
			}

			function contentPositionY()
			{
				return -pane.position().top;
			}

			function isCloseToBottom()
			{
				var scrollableHeight = contentHeight - paneHeight;
				return (scrollableHeight > 20) && (scrollableHeight - contentPositionY() < 10);
			}

			function isCloseToRight()
			{
				var scrollableWidth = contentWidth - paneWidth;
				return (scrollableWidth > 20) && (scrollableWidth - contentPositionX() < 10);
			}

			function initMousewheel()
			{
				container.unbind(mwEvent).bind(
					mwEvent,
					function (event, delta, deltaX, deltaY) {
						var dX = horizontalDragPosition, dY = verticalDragPosition;
						jsp.scrollBy(deltaX * settings.mouseWheelSpeed, -deltaY * settings.mouseWheelSpeed, false);
						// return true if there was no movement so rest of screen can scroll
						return dX == horizontalDragPosition && dY == verticalDragPosition;
					}
				);
			}

			function removeMousewheel()
			{
				container.unbind(mwEvent);
			}

			function nil()
			{
				return false;
			}

			function initFocusHandler()
			{
				pane.find(':input,a').unbind('focus.jsp').bind(
					'focus.jsp',
					function(e)
					{
						scrollToElement(e.target, false);
					}
				);
			}

			function removeFocusHandler()
			{
				pane.find(':input,a').unbind('focus.jsp');
			}
			
			function initKeyboardNav()
			{
				var keyDown, elementHasScrolled, validParents = [];
				isScrollableH && validParents.push(horizontalBar[0]);
				isScrollableV && validParents.push(verticalBar[0]);
				
				// IE also focuses elements that don't have tabindex set.
				pane.focus(
					function()
					{
						elem.focus();
					}
				);
				
				elem.attr('tabindex', 0)
					.unbind('keydown.jsp keypress.jsp')
					.bind(
						'keydown.jsp',
						function(e)
						{
							if (e.target !== this && !(validParents.length && $(e.target).closest(validParents).length)){
								return;
							}
							var dX = horizontalDragPosition, dY = verticalDragPosition;
							switch(e.keyCode) {
								case 40: // down
								case 38: // up
								case 34: // page down
								case 32: // space
								case 33: // page up
								case 39: // right
								case 37: // left
									keyDown = e.keyCode;
									keyDownHandler();
									break;
								case 35: // end
									scrollToY(contentHeight - paneHeight);
									keyDown = null;
									break;
								case 36: // home
									scrollToY(0);
									keyDown = null;
									break;
							}

							elementHasScrolled = e.keyCode == keyDown && dX != horizontalDragPosition || dY != verticalDragPosition;
							return !elementHasScrolled;
						}
					).bind(
						'keypress.jsp', // For FF/ OSX so that we can cancel the repeat key presses if the JSP scrolls...
						function(e)
						{
							if (e.keyCode == keyDown) {
								keyDownHandler();
							}
							return !elementHasScrolled;
						}
					);
				
				if (settings.hideFocus) {
					elem.css('outline', 'none');
					if ('hideFocus' in container[0]){
						elem.attr('hideFocus', true);
					}
				} else {
					elem.css('outline', '');
					if ('hideFocus' in container[0]){
						elem.attr('hideFocus', false);
					}
				}
				
				function keyDownHandler()
				{
					var dX = horizontalDragPosition, dY = verticalDragPosition;
					switch(keyDown) {
						case 40: // down
							jsp.scrollByY(settings.keyboardSpeed, false);
							break;
						case 38: // up
							jsp.scrollByY(-settings.keyboardSpeed, false);
							break;
						case 34: // page down
						case 32: // space
							jsp.scrollByY(paneHeight * settings.scrollPagePercent, false);
							break;
						case 33: // page up
							jsp.scrollByY(-paneHeight * settings.scrollPagePercent, false);
							break;
						case 39: // right
							jsp.scrollByX(settings.keyboardSpeed, false);
							break;
						case 37: // left
							jsp.scrollByX(-settings.keyboardSpeed, false);
							break;
					}

					elementHasScrolled = dX != horizontalDragPosition || dY != verticalDragPosition;
					return elementHasScrolled;
				}
			}
			
			function removeKeyboardNav()
			{
				elem.attr('tabindex', '-1')
					.removeAttr('tabindex')
					.unbind('keydown.jsp keypress.jsp');
			}

			function observeHash()
			{
				if (location.hash && location.hash.length > 1) {
					var e,
						retryInt,
						hash = escape(location.hash.substr(1)) // hash must be escaped to prevent XSS
						;
					try {
						e = $('#' + hash + ', a[name="' + hash + '"]');
					} catch (err) {
						return;
					}

					if (e.length && pane.find(hash)) {
						// nasty workaround but it appears to take a little while before the hash has done its thing
						// to the rendered page so we just wait until the container's scrollTop has been messed up.
						if (container.scrollTop() === 0) {
							retryInt = setInterval(
								function()
								{
									if (container.scrollTop() > 0) {
										scrollToElement(e, true);
										$(document).scrollTop(container.position().top);
										clearInterval(retryInt);
									}
								},
								50
							);
						} else {
							scrollToElement(e, true);
							$(document).scrollTop(container.position().top);
						}
					}
				}
			}

			function hijackInternalLinks()
			{
				// only register the link handler once
				if ($(document.body).data('jspHijack')) {
					return;
				}

				// remember that the handler was bound
				$(document.body).data('jspHijack', true);

				// use live handler to also capture newly created links
				$(document.body).delegate('a[href*=#]', 'click', function(event) {
					// does the link point to the same page?
					// this also takes care of cases with a <base>-Tag or Links not starting with the hash #
					// e.g. <a href="index.html#test"> when the current url already is index.html
					var href = this.href.substr(0, this.href.indexOf('#')),
						locationHref = location.href,
						hash,
						element,
						container,
						jsp,
						scrollTop,
						elementTop;
					if (location.href.indexOf('#') !== -1) {
						locationHref = location.href.substr(0, location.href.indexOf('#'));
					}
					if (href !== locationHref) {
						// the link points to another page
						return;
					}

					// check if jScrollPane should handle this click event
					hash = escape(this.href.substr(this.href.indexOf('#') + 1));

					// find the element on the page
					element;
					try {
						element = $('#' + hash + ', a[name="' + hash + '"]');
					} catch (e) {
						// hash is not a valid jQuery identifier
						return;
					}

					if (!element.length) {
						// this link does not point to an element on this page
						return;
					}

					container = element.closest('.jspScrollable');
					jsp = container.data('jsp');

					// jsp might be another jsp instance than the one, that bound this event
					// remember: this event is only bound once for all instances.
					jsp.scrollToElement(element, true);

					if (container[0].scrollIntoView) {
						// also scroll to the top of the container (if it is not visible)
						scrollTop = $(window).scrollTop();
						elementTop = element.offset().top;
						if (elementTop < scrollTop || elementTop > scrollTop + $(window).height()) {
							container[0].scrollIntoView();
						}
					}

					// jsp handled this event, prevent the browser default (scrolling :P)
					event.preventDefault();
				});
			}
			
			// Init touch on iPad, iPhone, iPod, Android
			function initTouch()
			{
				var startX,
					startY,
					touchStartX,
					touchStartY,
					moved,
					moving = false;
  
				container.unbind('touchstart.jsp touchmove.jsp touchend.jsp click.jsp-touchclick').bind(
					'touchstart.jsp',
					function(e)
					{
						var touch = e.originalEvent.touches[0];
						startX = contentPositionX();
						startY = contentPositionY();
						touchStartX = touch.pageX;
						touchStartY = touch.pageY;
						moved = false;
						moving = true;
					}
				).bind(
					'touchmove.jsp',
					function(ev)
					{
						if(!moving) {
							return;
						}
						
						var touchPos = ev.originalEvent.touches[0],
							dX = horizontalDragPosition, dY = verticalDragPosition;
						
						jsp.scrollTo(startX + touchStartX - touchPos.pageX, startY + touchStartY - touchPos.pageY);
						
						moved = moved || Math.abs(touchStartX - touchPos.pageX) > 5 || Math.abs(touchStartY - touchPos.pageY) > 5;
						
						// return true if there was no movement so rest of screen can scroll
						return dX == horizontalDragPosition && dY == verticalDragPosition;
					}
				).bind(
					'touchend.jsp',
					function(e)
					{
						moving = false;
						/*if(moved) {
							return false;
						}*/
					}
				).bind(
					'click.jsp-touchclick',
					function(e)
					{
						if(moved) {
							moved = false;
							return false;
						}
					}
				);
			}
			
			function destroy(){
				var currentY = contentPositionY(),
					currentX = contentPositionX();
				elem.removeClass('jspScrollable').unbind('.jsp');
				elem.replaceWith(originalElement.append(pane.children()));
				originalElement.scrollTop(currentY);
				originalElement.scrollLeft(currentX);

				// clear reinitialize timer if active
				if (reinitialiseInterval) {
					clearInterval(reinitialiseInterval);
				}
			}

			// Public API
			$.extend(
				jsp,
				{
					// Reinitialises the scroll pane (if it's internal dimensions have changed since the last time it
					// was initialised). The settings object which is passed in will override any settings from the
					// previous time it was initialised - if you don't pass any settings then the ones from the previous
					// initialisation will be used.
					reinitialise: function(s)
					{
						s = $.extend({}, settings, s);
						initialise(s);
					},
					// Scrolls the specified element (a jQuery object, DOM node or jQuery selector string) into view so
					// that it can be seen within the viewport. If stickToTop is true then the element will appear at
					// the top of the viewport, if it is false then the viewport will scroll as little as possible to
					// show the element. You can also specify if you want animation to occur. If you don't provide this
					// argument then the animateScroll value from the settings object is used instead.
					scrollToElement: function(ele, stickToTop, animate)
					{
						scrollToElement(ele, stickToTop, animate);
					},
					// Scrolls the pane so that the specified co-ordinates within the content are at the top left
					// of the viewport. animate is optional and if not passed then the value of animateScroll from
					// the settings object this jScrollPane was initialised with is used.
					scrollTo: function(destX, destY, animate)
					{
						scrollToX(destX, animate);
						scrollToY(destY, animate);
					},
					// Scrolls the pane so that the specified co-ordinate within the content is at the left of the
					// viewport. animate is optional and if not passed then the value of animateScroll from the settings
					// object this jScrollPane was initialised with is used.
					scrollToX: function(destX, animate)
					{
						scrollToX(destX, animate);
					},
					// Scrolls the pane so that the specified co-ordinate within the content is at the top of the
					// viewport. animate is optional and if not passed then the value of animateScroll from the settings
					// object this jScrollPane was initialised with is used.
					scrollToY: function(destY, animate)
					{
						scrollToY(destY, animate);
					},
					// Scrolls the pane to the specified percentage of its maximum horizontal scroll position. animate
					// is optional and if not passed then the value of animateScroll from the settings object this
					// jScrollPane was initialised with is used.
					scrollToPercentX: function(destPercentX, animate)
					{
						scrollToX(destPercentX * (contentWidth - paneWidth), animate);
					},
					// Scrolls the pane to the specified percentage of its maximum vertical scroll position. animate
					// is optional and if not passed then the value of animateScroll from the settings object this
					// jScrollPane was initialised with is used.
					scrollToPercentY: function(destPercentY, animate)
					{
						scrollToY(destPercentY * (contentHeight - paneHeight), animate);
					},
					// Scrolls the pane by the specified amount of pixels. animate is optional and if not passed then
					// the value of animateScroll from the settings object this jScrollPane was initialised with is used.
					scrollBy: function(deltaX, deltaY, animate)
					{
						jsp.scrollByX(deltaX, animate);
						jsp.scrollByY(deltaY, animate);
					},
					// Scrolls the pane by the specified amount of pixels. animate is optional and if not passed then
					// the value of animateScroll from the settings object this jScrollPane was initialised with is used.
					scrollByX: function(deltaX, animate)
					{
						var destX = contentPositionX() + Math[deltaX<0 ? 'floor' : 'ceil'](deltaX),
							percentScrolled = destX / (contentWidth - paneWidth);
						positionDragX(percentScrolled * dragMaxX, animate);
					},
					// Scrolls the pane by the specified amount of pixels. animate is optional and if not passed then
					// the value of animateScroll from the settings object this jScrollPane was initialised with is used.
					scrollByY: function(deltaY, animate)
					{
						var destY = contentPositionY() + Math[deltaY<0 ? 'floor' : 'ceil'](deltaY),
							percentScrolled = destY / (contentHeight - paneHeight);
						positionDragY(percentScrolled * dragMaxY, animate);
					},
					// Positions the horizontal drag at the specified x position (and updates the viewport to reflect
					// this). animate is optional and if not passed then the value of animateScroll from the settings
					// object this jScrollPane was initialised with is used.
					positionDragX: function(x, animate)
					{
						positionDragX(x, animate);
					},
					// Positions the vertical drag at the specified y position (and updates the viewport to reflect
					// this). animate is optional and if not passed then the value of animateScroll from the settings
					// object this jScrollPane was initialised with is used.
					positionDragY: function(y, animate)
					{
						positionDragY(y, animate);
					},
					// This method is called when jScrollPane is trying to animate to a new position. You can override
					// it if you want to provide advanced animation functionality. It is passed the following arguments:
					//  * ele          - the element whose position is being animated
					//  * prop         - the property that is being animated
					//  * value        - the value it's being animated to
					//  * stepCallback - a function that you must execute each time you update the value of the property
					// You can use the default implementation (below) as a starting point for your own implementation.
					animate: function(ele, prop, value, stepCallback)
					{
						var params = {};
						params[prop] = value;
						ele.animate(
							params,
							{
								'duration'	: settings.animateDuration,
								'easing'	: settings.animateEase,
								'queue'		: false,
								'step'		: stepCallback
							}
						);
					},
					// Returns the current x position of the viewport with regards to the content pane.
					getContentPositionX: function()
					{
						return contentPositionX();
					},
					// Returns the current y position of the viewport with regards to the content pane.
					getContentPositionY: function()
					{
						return contentPositionY();
					},
					// Returns the width of the content within the scroll pane.
					getContentWidth: function()
					{
						return contentWidth;
					},
					// Returns the height of the content within the scroll pane.
					getContentHeight: function()
					{
						return contentHeight;
					},
					// Returns the horizontal position of the viewport within the pane content.
					getPercentScrolledX: function()
					{
						return contentPositionX() / (contentWidth - paneWidth);
					},
					// Returns the vertical position of the viewport within the pane content.
					getPercentScrolledY: function()
					{
						return contentPositionY() / (contentHeight - paneHeight);
					},
					// Returns whether or not this scrollpane has a horizontal scrollbar.
					getIsScrollableH: function()
					{
						return isScrollableH;
					},
					// Returns whether or not this scrollpane has a vertical scrollbar.
					getIsScrollableV: function()
					{
						return isScrollableV;
					},
					// Gets a reference to the content pane. It is important that you use this method if you want to
					// edit the content of your jScrollPane as if you access the element directly then you may have some
					// problems (as your original element has had additional elements for the scrollbars etc added into
					// it).
					getContentPane: function()
					{
						return pane;
					},
					// Scrolls this jScrollPane down as far as it can currently scroll. If animate isn't passed then the
					// animateScroll value from settings is used instead.
					scrollToBottom: function(animate)
					{
						positionDragY(dragMaxY, animate);
					},
					// Hijacks the links on the page which link to content inside the scrollpane. If you have changed
					// the content of your page (e.g. via AJAX) and want to make sure any new anchor links to the
					// contents of your scroll pane will work then call this function.
					hijackInternalLinks: $.noop,
					// Removes the jScrollPane and returns the page to the state it was in before jScrollPane was
					// initialised.
					destroy: function()
					{
							destroy();
					}
				}
			);
			
			initialise(s);
		}

		// Pluginifying code...
		settings = $.extend({}, $.fn.jScrollPane.defaults, settings);
		
		// Apply default speed
		$.each(['mouseWheelSpeed', 'arrowButtonSpeed', 'trackClickSpeed', 'keyboardSpeed'], function() {
			settings[this] = settings[this] || settings.speed;
		});

		return this.each(
			function()
			{
				var elem = $(this), jspApi = elem.data('jsp');
				if (jspApi) {
					jspApi.reinitialise(settings);
				} else {
					$("script",elem).filter('[type="text/javascript"],not([type])').remove();
					jspApi = new JScrollPane(elem, settings);
					elem.data('jsp', jspApi);
				}
			}
		);
	};

	$.fn.jScrollPane.defaults = {
		showArrows					: false,
		maintainPosition			: true,
		stickToBottom				: false,
		stickToRight				: false,
		clickOnTrack				: true,
		autoReinitialise			: false,
		autoReinitialiseDelay		: 500,
		verticalDragMinHeight		: 0,
		verticalDragMaxHeight		: 99999,
		horizontalDragMinWidth		: 0,
		horizontalDragMaxWidth		: 99999,
		contentWidth				: undefined,
		animateScroll				: false,
		animateDuration				: 300,
		animateEase					: 'linear',
		hijackInternalLinks			: false,
		verticalGutter				: 4,
		horizontalGutter			: 4,
		mouseWheelSpeed				: 0,
		arrowButtonSpeed			: 0,
		arrowRepeatFreq				: 50,
		arrowScrollOnHover			: false,
		trackClickSpeed				: 0,
		trackClickRepeatFreq		: 70,
		verticalArrowPositions		: 'split',
		horizontalArrowPositions	: 'split',
		enableKeyboardNavigation	: true,
		hideFocus					: false,
		keyboardSpeed				: 0,
		initialDelay                : 300,        // Delay before starting repeating
		speed						: 30,		// Default speed when others falsey
		scrollPagePercent			: .8		// Percent of visible area scrolled when pageUp/Down or track area pressed
	};

})(jQuery,this);

;
(function($) {

$.widget("ui.learningcore", {
	qtipLoadSet : new Array(),
	qtipLenth : 0,
	_init: function() {
		try{
			var self = this;
			/*
		if($('#block-system-main-menu a[href="/?q=learning/catalog-search"]').hasClass('active-trail') == true){
			$('#block-system-main-menu').parents('div').siblings('.theme-navigation-menu-bg-left').addClass('active-header-curve');
		}else{
			$('#block-system-main-menu').parents('div').siblings('.theme-navigation-menu-bg-left').removeClass('active-header-curve');
		}
			 */
			//change by ayyappans for 39837: Theme is not getting applied for 'Catalog' header menu in Catalog -> Class details page
			var pageUrl = window.location.search;
			var catalogMenu = $('#block-system-main-menu a[href="/?q=learning/catalog-search"]');
			var forumMenu = $('#block-system-main-menu a[href="/?q=learning/forum-list"]');
			var firstMenuSel=$('.theme-navigation-menu #block-system-main-menu').find('.menu li:first-child');
			var lastMenuSel=$('.theme-navigation-menu #block-system-main-menu').find('.menu li:last-child');
			if(firstMenuSel.is('.active-trail')){
			$('.theme-navigation-menu-bg-left').addClass('active-header-curve');
			}else {
			$('.theme-navigation-menu-bg-left').removeClass('active-header-curve');
			}
			if(lastMenuSel.is('.active-trail')){
				$('.theme-navigation-menu-bg-right').addClass('active-header-curve');
				lastMenuSel.css("border-right","0");
			}else {
				$('.theme-navigation-menu-bg-right').removeClass('active-header-curve');
			}
			if((pageUrl.indexOf("learning/course-details") > -1 || pageUrl.indexOf("learning/class-details") > -1 || pageUrl.indexOf("learning/learning-plan-details") > -1) && !catalogMenu.hasClass('active-trail')) {
				catalogMenu.addClass('active active-trail').parent().addClass('active active-trail');
				if(catalogMenu.parent().is(':first-child')) {
					$('.theme-navigation-menu-bg-left').addClass('active-header-curve');
				}
				else {
					$('.theme-navigation-menu-bg-left').removeClass('active-header-curve');
				}
			}
			else if(pageUrl.indexOf("learning/forum-topic-list") > -1 && !forumMenu.hasClass('active-trail')) {
				forumMenu.addClass('active active-trail').parent().addClass('active active-trail');
			}
		}catch(e){
			// to do
		}
	},


	 callAvailableSeats : function(userId, courseId, classId, waitlist) {
		 try{
		 var obj = this;
			url = obj.constructUrl("ajax/learningcore/availableseats/" + classId+'/'+waitlist+'/'+userId);
			$.ajax({
				type: "POST",
				url: url,
				//data:  '', //Commented by ganeshbabuv to avoid the data value as null when invoke the ajax callback for implement salesforce cookieless option #0054508 on 30th Sep 2015 10:40 AM
				success: function(result){
				   $("#seats_available_"+classId).html(result);
				}
		    });
		 }catch(e){
				// to do
			}
	},

	callObjectAvailableSeats : function(objectId) {
		try{
		var obj = this;
		url = obj.constructUrl("ajax/learningcore/objectavailableseats/" + objectId);
		$.ajax({
			type: "POST",
			url: url,
			//data:  '',//Commented by ganeshbabuv to avoid the data value as null when invoke the ajax callback for implement salesforce cookieless option #0054508 on 30th Sep 2015 10:40 AM
			success: function(result){
			   $("#object-seats_available_"+objectId).html(result);
			}
	    });
		}catch(e){
			// to do
		}
	},

	callSigninWidget : function(clickedid){
		try{
			//after login auto register or add to cart related work start
			//console.log(clickedid);
			var current_url_arr = window.getUrlVars();
			var url_query_string = current_url_arr['q'];
			var pagenumber = 	$('.ui-pg-input').val();
			var rownumber = 	$("#paintContentResults").jqGrid('getGridParam', 'rowNum');
			//console.log(rownumber);
			//document.cookie="user_selected_class_id="+clickedid+"; expires="+expireTime;
			$.cookie("user_selected_class_id", clickedid,{ expires: 300 });
			$.cookie("user_selected_url",url_query_string ,{ expires: 300 });
			//console.log(pagenumber);
			if(pagenumber!=null && pagenumber != undefined)
				$.cookie("user_selected_page_number", pagenumber,{ expires: 300 });
			if(rownumber!=null && rownumber != undefined)
				$.cookie("user_selected_row_number", rownumber,{ expires: 300 });
			//after login auto register or add to cart related work start
		 //$(".ctools-modal-ctools-login-style").click();
			$("#signin").click();
		}catch(e){
			// console.log(e);
		}
	},

	callRegisterClass : function(widgetId,userId, courseId, classId, waitList, idValue) {
		try{
		var currtheme = Drupal.settings.ajaxPageState.theme;
		if(typeof(idValue)==='undefined') idValue = '';
		 var obj = this;
		 var loaderObj = widgetId;
		 var userId = this.getLearnerId();

			if(!userId) {
				this.callMessageWindow('registertitle',"Please sign in to proceed.");
			}else{
					this.createLoader(loaderObj);
					var isAdminSide = 'Nlnrsearch';
					url = obj.constructUrl("ajax/learningcore/register/" + userId + '/' + courseId + '/' + classId+'/'+waitList+'/'+isAdminSide);
					$.ajax({
						type: "POST",
						url: url,
						// data:  '', //Commented by ganeshbabuv to avoid the data value as null when invoke the ajax callback for implement salesforce cookieless option #0054508 on 30th Sep 2015 10:40 AM
						success: function(result){
							result_arr = result.split('~~');
							result = $.trim(result_arr[0]);
							if(result_arr[1]!='' && result_arr[1]!=undefined && (result_arr[3] == 'vod' || result_arr[3]=='wbt') && (document.getElementById('lnr-prerequisite-container')==undefined || document.getElementById('lnr-prerequisite-container')=='')){
								if(Drupal.settings.convertion.mylearn_version==1)
									var launchInfo_arr = result_arr[1];
								else
								 var launchInfo_arr = $.parseJSON(result_arr[1]);
								 var del_type = result_arr[3];
								 var enrolled_id = result_arr[2];
								 var action_status = result;
								 var pre_ass_status = result_arr[4];
								 //console.log(pre_ass_status);
								 var query_str = window.location.href.slice(window.location.href.indexOf('?') + 1);
								 var recurring = $('#reccuring_'+classId).attr('value');
								 if ((query_str.indexOf("learning/course-details") >= 0 || query_str.indexOf("learning/class-details") >= 0) && (result == 'Registered' || result == Drupal.t('Registered')) && recurring !=1){
									   location.reload();
									   return;
								 }
								  else if((result == 'Registered' || result == Drupal.t('Registered')) && Drupal.settings.convertion.mylearn_version == 1){
									   var enrolled_id = result_arr[2];
									   $('.progress_'+classId).attr('id','progress_'+enrolled_id);
									   //76575: Class Details - UI issue when registering to recurring Classes
									   $('.progress_'+classId).html('');
									   progressBarRound(enrolled_id,0, 'enr_progress','progress_',$("#lnr-catalog-search").data("contentPlayer"));
									   //$("#lnr-catalog-search").data("contentPlayer").progressbardetail(enrolled_id,0, 'enr_progress','progress_');
									   $('#progress_'+enrolled_id).show();
								 }
								 registeredToLaunch(launchInfo_arr,userId,classId,courseId,del_type,enrolled_id,action_status,pre_ass_status);
							}else{

						   if(userId!=0)

						   //alert('result : '+result);
						   if((result == 'Registered') || (result == Drupal.t('Registered')) || (result == 'Waitlisted') || (result == Drupal.t('LBL190'))) {
							 //  if(idValue != 'fromClasslvl') {
								   obj.callAvailableSeats(userId, courseId, classId, waitList);
							  // }

 							   var showAction = (result) ? result  : '';
							   if(result == Drupal.t('Registered')) {
								 $("#registerCls_"+classId).removeClass("action-btn");
								 $("#registerCls_"+classId).html(Drupal.t('Registered'));
							   } else if(result == Drupal.t('LBL190')) {
								   $("#registerCls_"+classId).removeClass("action-btn-waitlist");
							   }

							   $("#registerCls_"+classId).removeAttr('onclick');
							   //$("#registerCls_"+classId).removeClass("action-btn");
							   $("#registerCls_"+classId).addClass("action-btn-disable");
							   if(idValue == 'fromClasslvl') {
								   if(currtheme == 'expertusoneV2'){
									   $("#select-class-dialog #registerCls_"+classId).html('<div>'+showAction+'</div>');
									   $("#myteam-catalog-seats-available-"+classId).html('');
									   $('#select-class-dialog').next('.ui-widget-overlay').css('display','block');
								   	}
									if (widgetId=='lnr-catalog-search') {
										var currentPage = $('.ui-pg-input').val();
										if(typeof $("#lnr-catalog-search").data("lnrcatalogsearch") == 'undefined' || $("#lnr-catalog-search").data("lnrcatalogsearch").refreshLastAccessedCatalogRow() == false) {
											$("#paintContentResults").trigger("reloadGrid",[{page:currentPage}]);
										}
									   }
							   }else{
								   $("#registerCls_"+classId).html(showAction);
							   }
							   //$("#registerCls_"+classId).html(showAction);

							   if(document.getElementById("preReqClsStatus"+courseId)) {
								   $("#preReqClsStatus"+courseId).html(Drupal.t('Enrolled'));
								   $("#registerClsPreReq_"+classId).removeAttr('onclick');
								   $("#registerClsPreReq_"+classId).removeClass("action-btn");
								   $("#registerClsPreReq_"+classId).addClass("action-btn-disable");
								   $("#registerClsPreReq_"+classId).html(showAction);
							   }
							   var query_str = window.location.href.slice(window.location.href.indexOf('?') + 1);
							   var recurring = $('#reccuring_'+classId).attr('value');
							   if ((query_str.indexOf("learning/course-details") >= 0 || query_str.indexOf("learning/class-details") >= 0) && (result == 'Registered' || result == Drupal.t('Registered')) && recurring !=1){
								   location.reload();
								   return;
							   }
							   else if((result == 'Registered' || result == Drupal.t('Registered')) && Drupal.settings.convertion.mylearn_version == 1){
								   var enrolled_id = result_arr[2];
								   $('.progress_'+classId).attr('id','progress_'+enrolled_id);
								   //76575: Class Details - UI issue when registering to recurring Classes
								   $('.progress_'+classId).html('');
								   	progressBarRound(enrolled_id,0, 'enr_progress','progress_',$("#lnr-catalog-search").data("contentPlayer"));
									//$("#lnr-catalog-search").data("contentPlayer").progressbardetail(enrolled_id,0, 'enr_progress','progress_');
								   $('#content-available-seats_'+classId).hide();
								   $('#progress_'+enrolled_id).show();
							   }
						   } else {
							    var commClassId;
							       //obj.callMessageWindow('registertitle',result);
							   if(resource['catalog_reg'] == 'Class' || (resource['catalog_reg'] == 'Course' && idValue != 'fromClasslvl') ){
								   obj.callMessageWindow('registertitle',result);
							   }else{
								   var errResult = new Array();
								   errResult[0] = result;
								   var err_msg = expertus_error_message(errResult,'error');
									$('#show_expertus_message').html(err_msg);
									$('#show_expertus_message').show();
							   	}
							   		if(result.indexOf(Drupal.t('MSG311')) >= 0){
							   			if(idValue == 'fromCourselvl') {
							   				commClassId = courseId;
							   			}else{
							   				commClassId = classId;
							   			//$("#registerCls_"+classId).html(Drupal.t('LBL032'));
								   			var tmp = $("#registerCls_"+commClassId).html();
								   			var tmp1 = $.trim(tmp).split('<div>');
								   			var str1='';
								   			if(tmp1.length>1){
								   				/*-- Issue fix for #38288 --*/
								   				if($.browser.msie && parseInt($.browser.version, 10)=='9') {
								   					var divLen = tmp1.length-2;
								   				} else {
								   					var divLen = tmp1.length-1;
								   				}
								   				for(var i=0;i<divLen;i++){
								   					if(tmp1[i].trim()!='')
								   						str1 += "<div>"+tmp1[i];
								   				}
								   				str1 += "<div>"+Drupal.t('Registered')+"</div>";
								   			}else{
								   				str1 = Drupal.t('Registered');
								   			}
							   			}
							   			$("#registerCls_"+commClassId).html(str1);
									    var regStatus = 'lrn_crs_reg_cnf';
									    var stringAttr = $("#registerCls_"+commClassId).attr("onClick");
									    var contains = stringAttr.indexOf('lrn_crs_reg_cnf');
									    if(contains == -1){
									    	if(idValue == 'fromCourselvl') {
									    		var setNewAttr = '$("body").data("learningcore").callEquivalencePopup(\''+widgetId+'\',\''+userId+'\',\''+courseId+'\',\''+classId+'\',\''+waitList+'\',\''+regStatus+'\',\''+idValue+'\')';
									    	}else {
									    		var setNewAttr = '$("body").data("learningcore").callEquivalencePopup(\''+widgetId+'\',\''+userId+'\',\''+courseId+'\',\''+classId+'\',\''+waitList+'\',\''+regStatus+'\')';
									    	}
										    $("#registerCls_"+commClassId).attr("onClick", setNewAttr);
									    }
									    if((idValue == 'fromCourselvl' || idValue == 'fromClasslvl') && widgetId=='lnr-catalog-search'){
									    	var currentPage = $('.ui-pg-input').val();
											if(typeof $("#lnr-catalog-search").data("lnrcatalogsearch") == 'undefined' || $("#lnr-catalog-search").data("lnrcatalogsearch").refreshLastAccessedCatalogRow() == false) {
												$("#paintContentResults").trigger("reloadGrid",[{page:currentPage}]);
											}
									    }
							   	}
						   }
						}
						   obj.destroyLoader(loaderObj);

						}
				    });
			}
		}catch(e){
			// to do
			//console.log(e)
		}
	},

	registerConfirmation : function(title, message ,widgetId, userId, courseId, classId, waitList,selectValues,compClassPopup,courseLevelCnt){
		try{
		if(typeof(selectValues)==='undefined') selectValues = '';
		if(typeof(compClassPopup)==='undefined') compClassPopup = '';
		if(title == 'registertitle'){
			title = Drupal.t('LBL721');
		}

	    $('#commonMsg-wizard').remove();
	    var html = '';
	    html+='<div id="commonMsg-wizard" style="display:none; padding: 0px;">';
	    html+='<table width="100%" cellpadding="0" cellspacing="0" border="0" valign="center">';
	    html+='<tr><td height="30"></td></tr>';
	    html+='<tr>';
    	html+= '<td align="center"><span class="select-greyed-out-text">'+SMARTPORTAL.t(message)+'</span></td>';
	    html+='</tr>';
	    html+='</table>';
	    html+='</div>';
	    $("body").append(html);
	    var closeButt={};
    	closeButt[Drupal.t('LBL123')]=function(){ $(this).dialog('destroy');$(this).dialog('close');$('#commonMsg-wizard').remove();};
    	if(selectValues=='fromCourselvl' && (compClassPopup == 'Y' || courseLevelCnt == 'Y')) {
    		closeButt[Drupal.t('Yes')]=function(){
    		$(this).dialog('destroy');
    		$(this).dialog('close');
    		$('#equvMsg-wizard').remove();
    		$('#select-class-equalence-dialog').remove();
    		$("#lnr-catalog-search").data("lnrcatalogsearch").showSelectClass(userId, courseId); };
    	} else {
    	closeButt[Drupal.t('Yes')]=function(){ $("body").data("learningcore").callRegisterClass(widgetId,userId, courseId, classId, waitList,selectValues); $(this).dialog('destroy');$(this).dialog('close');$('#equvMsg-wizard').remove(); };
    	}
    	$("#commonMsg-wizard").dialog({
	        position:[(getWindowWidth()-500)/2,100],
	        bgiframe: true,
	        width:500,
	        resizable:false,
	        modal: true,
	        title: SMARTPORTAL.t(title),
	        buttons:closeButt,
	        closeOnEscape: false,
	        draggable:true,
	        overlay:
	         {
	           opacity: 0.9,
	           background: "black"
	         }
	    });

	    $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').addClass("removebutton").end();
	    $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(1)').before('<div class="admin-save-button-left-bg"></div>');
		$('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(1)').addClass("admin-save-button-middle-bg").end();
		$('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(1)').after('<div class="admin-save-button-right-bg"></div>');

		this.currTheme = Drupal.settings.ajaxPageState.theme;
		if ( $.browser.msie && parseInt($.browser.version, 10)=='9' && this.currTheme == "expertusoneV2"|| $.browser.msie && parseInt($.browser.version, 10)=='8'&& this.currTheme == "expertusoneV2"){
			 $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').before('<div class="white-btn-bg-left"></div>');
			 $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').addClass('white-btn-bg-middle');
			 $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').after('<div class="white-btn-bg-right"></div>');
			 $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').next('.white-btn-bg-right').css('margin-right','0px');
	 }
	 	if(this.currTheme == "expertusoneV2"){
	 		//changeDialogPopUI();
	 		 $('#select-class-equalence-dialog').prevAll().removeAttr('select-class-equalence-dialog');
		 	   $('#commonMsg-wizard').closest('.ui-dialog').wrap("<div id='select-class-equalence-dialog'></div>");
		       $('#select-class-equalence-dialog').find('.ui-dialog-content').addClass('commonMsg-select-class');
			   changeChildDialogPopUI('select-class-equalence-dialog');
			 //$('#select-class-equalence-dialog').prev('.ui-widget-overlay').css('display','none');
			   if ( $.browser.msie && parseInt($.browser.version, 10)=='9' && this.currTheme == "expertusoneV2"|| $.browser.msie && parseInt($.browser.version, 10)=='8'&& this.currTheme == "expertusoneV2"){
			   $('#select-class-equalence-dialog .ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').prev('.white-btn-bg-left').remove();
			   $('#select-class-equalence-dialog .ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').next('.white-btn-bg-right').remove();
			   }
			}
		 	else {
		 		$('#select-class-equalence-dialog').prevAll().removeAttr('select-class-equalence-dialog');
			 	$('#commonMsg-wizard').closest('.ui-dialog').wrap("<div id='select-class-equalence-dialog'></div>");
				changeChildDialogPopUI('select-class-equalence-dialog');
				$('#select-class-equalence-dialog').prev('.ui-widget-overlay').css('display','none');
				$('#select-class-equalence-dialog .ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').prev('.white-btn-bg-left').remove();
				$('#select-class-equalence-dialog .ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').next('.white-btn-bg-right').remove();
			   }
	    $("#commonMsg-wizard").show();
		$('.ui-dialog-titlebar-close, .removebutton').click(function(){
			$('#select-class-dialog').next('.ui-widget-overlay').css('display','block');
	        $("#commonMsg-wizard").remove();
	    });
		}catch(e){
			// to do
		}
	},

/*
 * 0024925: Enforce equivalence in training plans
 * for this ticket we created equivalence option for training plan
 * don't delete it. Its may need for feature enhancement
 *

 */
 /*

	registerConfirmationTP : function(title, message ,widgetId, prgId,addToCart,isAdminSide,userListIfAdminSide,recertifyId,lengthTP){
		try{
		if(typeof(addToCart)==='undefined') addToCart = '';
		if(typeof(isAdminSide)==='undefined') isAdminSide = 'N';
		if(typeof(userListIfAdminSide)==='undefined') userListIfAdminSide = '';
		if(typeof(recertifyId)==='undefined') recertifyId = '';
		//alert('title:'+title+'|'+'message:'+message+'|'+widgetId+'|'+prgId+'|'+addToCart+'|'+isAdminSide+'|'+userListIfAdminSide+'|'+recertifyId);
		if(title == 'registertitle'){
			title = Drupal.t('LBL721');
		}

	    $('#commonMsg-wizard').remove();
	    var html = '';
	    html+='<div id="commonMsg-wizard" style="display:none; padding: 0px;">';
	    html+='<table width="100%" cellpadding="0" cellspacing="0" border="0" valign="center">';
	    html+='<tr><td height="30"></td></tr>';
	    html+='<tr>';
    	html+= '<td align="center"><span class="select-greyed-out-text">'+SMARTPORTAL.t(message)+'</span></td>';
	    html+='</tr>';
	    html+='</table>';
	    html+='</div>';
	    $("body").append(html);
	    var closeButt={};
    	closeButt[Drupal.t('LBL123')]=function(){ $(this).dialog('destroy');$(this).dialog('close');$('#commonMsg-wizard').remove();};
    	if(lengthTP > 0 ) {
    		closeButt[Drupal.t('Yes')]=function(){ $("body").data("learningcore").callPopupOrNotTP(widgetId, prgId,addToCart,isAdminSide,userListIfAdminSide,recertifyId); $(this).dialog('destroy');$(this).dialog('close');$('#equvMsg-wizard').remove(); };
    	} else {
    		closeButt[Drupal.t('Yes')]=function(){ $("body").data("learningcore").callPopupOrNotTP(widgetId, prgId,addToCart,isAdminSide,userListIfAdminSide,recertifyId); $(this).dialog('destroy');$(this).dialog('close');$('#equvMsg-wizard').remove(); };
    	}
    	$("#commonMsg-wizard").dialog({
	        position:[(getWindowWidth()-500)/2,100],
	        bgiframe: true,
	        width:500,
	        resizable:false,
	        modal: true,
	        title: SMARTPORTAL.t(title),
	        buttons:closeButt,
	        closeOnEscape: false,
	        draggable:true,
	        overlay:
	         {
	           opacity: 0.9,
	           background: "black"
	         }
	    });

	    $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').addClass("removebutton").end();
	    $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(1)').before('<div class="admin-save-button-left-bg"></div>');
		$('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(1)').addClass("admin-save-button-middle-bg").end();
		$('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(1)').after('<div class="admin-save-button-right-bg"></div>');

		this.currTheme = Drupal.settings.ajaxPageState.theme;
		if ( $.browser.msie && parseInt($.browser.version, 10)=='9' && this.currTheme == "expertusoneV2"|| $.browser.msie && parseInt($.browser.version, 10)=='8'&& this.currTheme == "expertusoneV2"){
			 $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').before('<div class="white-btn-bg-left"></div>');
			 $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').addClass('white-btn-bg-middle');
			 $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').after('<div class="white-btn-bg-right"></div>');
			 $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').next('.white-btn-bg-right').css('margin-right','0px');
	 }
	 	if(this.currTheme == "expertusoneV2"){
	 		//changeDialogPopUI();
	 		 $('#select-class-equalence-dialog').prevAll().removeAttr('select-class-equalence-dialog');
		 	   $('#commonMsg-wizard').closest('.ui-dialog').wrap("<div id='select-class-equalence-dialog'></div>");
		       $('#select-class-equalence-dialog').find('.ui-dialog-content').addClass('commonMsg-select-class');
			   changeChildDialogPopUI('select-class-equalence-dialog');
			   $('#select-class-equalence-dialog').prev('.ui-widget-overlay').css('display','none');
			   if ( $.browser.msie && parseInt($.browser.version, 10)=='9' && this.currTheme == "expertusoneV2"|| $.browser.msie && parseInt($.browser.version, 10)=='8'&& this.currTheme == "expertusoneV2"){
			   $('#select-class-equalence-dialog .ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').prev('.white-btn-bg-left').remove();
			   $('#select-class-equalence-dialog .ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').next('.white-btn-bg-right').remove();
			   }
			}
		 	else {
		 		$('#select-class-equalence-dialog').prevAll().removeAttr('select-class-equalence-dialog');
			 	$('#commonMsg-wizard').closest('.ui-dialog').wrap("<div id='select-class-equalence-dialog'></div>");
				changeChildDialogPopUI('select-class-equalence-dialog');
				$('#select-class-equalence-dialog').prev('.ui-widget-overlay').css('display','none');
				$('#select-class-equalence-dialog .ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').prev('.white-btn-bg-left').remove();
				$('#select-class-equalence-dialog .ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').next('.white-btn-bg-right').remove();
			   }
	    $("#commonMsg-wizard").show();
		$('.ui-dialog-titlebar-close, .removebutton').click(function(){
			$('#select-class-dialog').next('.ui-widget-overlay').css('display','block');
	        $("#commonMsg-wizard").remove();
	    });
		}catch(e){
			// to do
		}
	},

*/
    enrollChangeClassErrorMessage : function(title, message, restoreOverlay){
	 try{
		if(title == 'registertitle'){
			title = Drupal.t('LBL721');
		}

	    $('#commonMsg-wizard').remove();
	    var html = '';
	    html+='<div id="commonMsg-wizard" style="display:none; padding: 0px;">';
	    html+='<table width="100%" cellpadding="0" cellspacing="0" border="0" valign="center">';
	    html+='<tr><td height="30"></td></tr>';
	    html+='<tr>';
    	html+= '<td align="center"><span class="select-greyed-out-text">'+SMARTPORTAL.t(message)+'</span></td>';
	    html+='</tr>';
	    html+='</table>';
	    html+='</div>';
	    $("body").append(html);
	    var closeButt={};
    	closeButt[Drupal.t('LBL123')]=function(){ $(this).dialog('destroy');$(this).dialog('close');$('#commonMsg-wizard').remove();};
    	//closeButt[Drupal.t('LBL342')]=function(){ $(this).dialog('destroy');$(this).dialog('close');$('#equvMsg-wizard').remove(); };
	    $("#commonMsg-wizard").dialog({
	        position:[(getWindowWidth()-500)/2,100],
	        bgiframe: true,
	        width:500,
	        resizable:false,
	        modal: true,
	        title: SMARTPORTAL.t(title),
	        buttons:closeButt,
	        closeOnEscape: false,
	        draggable:true,
	        overlay:
	         {
	           opacity: 0.9,
	           background: "black"
	         }
	    });

	    $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').addClass("removebutton").end();
	    //$('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(1)').before('<div class="admin-save-button-left-bg"></div>');
		//$('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(1)').addClass("admin-save-button-middle-bg").end();
		//$('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(1)').after('<div class="admin-save-button-right-bg"></div>');

		this.currTheme = Drupal.settings.ajaxPageState.theme;
		if ( $.browser.msie && parseInt($.browser.version, 10)=='9' && this.currTheme == "expertusoneV2"|| $.browser.msie && parseInt($.browser.version, 10)=='8'&& this.currTheme == "expertusoneV2"){
				 $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').before('<div class="white-btn-bg-left"></div>');
				 $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').addClass('white-btn-bg-middle');
				 $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').after('<div class="white-btn-bg-right"></div>');
				 $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').next('.white-btn-bg-right').css('margin-right','0px');
		 }
		if(this.currTheme == "expertusoneV2"){
		 	   $('#select-class-enrollChange-dialog').prevAll().removeAttr('select-class-enrollChange-dialog');
		 	   $('#commonMsg-wizard').closest('.ui-dialog').wrap("<div id='select-class-enrollChange-dialog'></div>");
		       $('#select-class-enrollChange-dialog').find('.ui-dialog-content').addClass('commonMsg-select-class');
			   changeChildDialogPopUI('select-class-enrollChange-dialog');
			   if(typeof restoreOverlay == "undefined" || restoreOverlay == 0) {
			   $('#select-class-enrollChange-dialog').prev('.ui-widget-overlay').css('display','none');
			   }
			   if ( $.browser.msie && parseInt($.browser.version, 10)=='9' && this.currTheme == "expertusoneV2"|| $.browser.msie && parseInt($.browser.version, 10)=='8'&& this.currTheme == "expertusoneV2"){
			   $('#select-class-enrollChange-dialog .ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').prev('.white-btn-bg-left').remove();
			   $('#select-class-enrollChange-dialog .ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').next('.white-btn-bg-right').remove();
			   }
			}
		 	else {
		 		$('#select-class-enrollChange-dialog').prevAll().removeAttr('select-class-enrollChange-dialog');
			 	$('#commonMsg-wizard').closest('.ui-dialog').wrap("<div id='select-class-enrollChange-dialog'></div>");
				changeChildDialogPopUI('select-class-enrollChange-dialog');
				$('#select-class-enrollChange-dialog').prev('.ui-widget-overlay').css('display','none');
			   }
	    $("#commonMsg-wizard").show();
		$('.ui-dialog-titlebar-close,.removebutton').click(function(){
			$('#my-team-dialog').next('.ui-widget-overlay').css('display','block');
	        $("#commonMsg-wizard").remove();
	    });
	 }catch(e){
			// to do
		}
	},


	callAddToCart : function(widgetId,act,ObjectId,addFrom,class_ids,waitlist, catalogType) {
		try{
		var loaderObj = widgetId ;
		if(typeof(catalogType)==='undefined') catalogType = '';
		var currtheme = Drupal.settings.ajaxPageState.theme;

		 if(addFrom == 'Cart'){
			var classData 	= eval($('#object-addToCartList_'+ObjectId).attr("data"));
		 }else{
			 var classData 	= eval($('#addToCartList_'+ObjectId).attr("data"));
		 }
			var LMSNodeId 	= classData.NodeId;
			var classId	 	= addFrom == 'Cart' ? classData.TpId : classData.ClassId;
			var courseId	= classData.CourseId;

			var obj = this;
			this.createLoader(loaderObj);
			if(addFrom == 'Cart'){
				//var class_ids = '';
				if(class_ids ==''){
					class_ids = 0;
				}
				url =  this.constructUrl("ajax/cart/tpproduct/add/" + LMSNodeId + "/" + classId + "/" + 'null' + "/" + class_ids);
			}
			else{
				url =  this.constructUrl("ajax/cart/product/add/" + LMSNodeId + "/" + classId + "/" + courseId+'/'+waitlist);
			}

			$.ajax({
				type: "POST",
				url: url,
				// data:  '', //Commented by ganeshbabuv to avoid the data value as null when invoke the ajax callback for implement salesforce cookieless option #0054508 on 30th Sep 2015 10:40 AM
				success: function(result){
					obj.destroyLoader(loaderObj);
					var cart_msg = result.cart_msg;
					if((result.cart_msg == Drupal.t('MSG247')) || (result.cart_msg == 'waitlisted')) {
						if(addFrom == 'Cart'){
							$("#tainingplan-register"+ObjectId).remove();
						}
						var showBtnTxt = cart_msg == 'CartAdded' ? 'Added to Cart' : 'Waitlisted';
						var showBtnTxt = Drupal.t('LBL049');
						var objDivId = (addFrom == 'Cart')? 'object-addToCartList_' : 'addToCartList_';

						if(cart_msg == Drupal.t('MSG247')) {
						  $("#"+objDivId+classId).removeClass("action-btn-disable");
						} else if(cart_msg == 'waitlisted') {
						  $("#"+objDivId+classId).removeClass("action-btn-waitlist");
						}
						$("#"+objDivId+classId).removeAttr('onclick');
						$("#"+objDivId+classId).removeClass("action-btn");
						$("#"+objDivId+classId).addClass("action-btn-disable");
						$("#addToCartList_"+classId).html(Drupal.t('LBL049'));
						//$("#"+objDivId+classId).html("Added to Cart");

						if(catalogType == 'fromClasslvl') {
							   if(currtheme == 'expertusoneV2'){
								   $("#select-class-dialog #"+objDivId+classId).html(showBtnTxt);
								   $("#myteam-catalog-seats-available-"+classId).html('');
							   if (widgetId=='lnr-catalog-search') {
									   var currentPage = $('.ui-pg-input').val();
									   if(typeof $("#lnr-catalog-search").data("lnrcatalogsearch") == 'undefined' || $("#lnr-catalog-search").data("lnrcatalogsearch").refreshLastAccessedCatalogRow() == false) {
											$("#paintContentResults").trigger("reloadGrid",[{page:currentPage}]);
										}
								   }
							   }
						   }else{
							   $("#"+objDivId+classId).html(showBtnTxt);
						   }

					}
					else{
						if(addFrom == 'Cart'){
							var errorMessages = new array();
							errorMessages[0]=result.cart_msg;
							var message_call = expertus_error_message(errorMessages,'error');
							$('#show_expertus_message').html(message_call);
							$('#show_expertus_message').show();
						}
						else{
							obj.callMessageWindow('registertitle',result.cart_msg);
						}
					}
					if (parseInt(result.total_product) > 0) {
						$("#ShoppingCartItemsId").addClass("filled");
						$("#ShoppingCartItemsId").html(result.total_product);
					} else {
						$("#ShoppingCartItemsId").removeClass("filled");
						$("#ShoppingCartItemsId").html('');
					}
				}
		    });
		}catch(e){
			// to do
			// console.log(e);
		}
	},

/*	callObjectAddToCart : function(widgetId,act,objectId) {
		alert("Under Construction");
	},*/

	//Common function for calling dialog window. Param : title, message
	callMessageWindow : function(title,message, restrictTitle){
	 try{
		if(title == 'registertitle'){
			title = Drupal.t('LBL721');
		}

	    $('#commonMsg-wizard').remove();
	    var html = '';
	    html+='<div id="commonMsg-wizard" style="display:none; padding: 0px;">';
	    html+='<table width="100%" cellpadding="0" cellspacing="0" border="0" valign="center">';
	    html+='<tr><td height="30"></td></tr>';
	    html+='<tr>';
    	html+= '<td align="center"><span class="select-greyed-out-text">'+unescape(SMARTPORTAL.t(message))+'</span></td>';
	    html+='</tr>';
	    html+='</table>';
	    html+='</div>';
	    $("body").append(html);
	    var closeButt={};
    	closeButt[Drupal.t('LBL123')]=function(){ $(this).dialog('destroy');$(this).dialog('close');$('#commonMsg-wizard').remove();};
	    $("#commonMsg-wizard").dialog({
	        position:[(getWindowWidth()-500)/2,100],
	        bgiframe: true,
	        width:520,
	        resizable:false,
	        modal: true,
	        title: SMARTPORTAL.t(title),
	        buttons:closeButt,
	        closeOnEscape: false,
	        draggable:true,
	        overlay:
	         {
	           opacity: 0.9,
	           background: "black"
	         }
	    });
	    if(restrictTitle !== undefined) {
	    	$('#ui-dialog-title-commonMsg-wizard').attr('title', title).text(titleRestricted(title, restrictTitle));
	    }
	   	$('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').addClass("removebutton").end();
	    this.currTheme = Drupal.settings.ajaxPageState.theme;
		  if ( $.browser.msie && parseInt($.browser.version, 10)=='9' && this.currTheme == "expertusoneV2"|| $.browser.msie && parseInt($.browser.version, 10)=='8'&& this.currTheme == "expertusoneV2"){
			 $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').before('<div class="white-btn-bg-left"></div>');
			 $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').addClass(' white-btn-bg-middle');
			 $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').after('<div class="white-btn-bg-right"></div>');
			 $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').next('.white-btn-bg-right').css('margin-right','0px');
			}
	    /*new dialog popUI Script*/
		 // $('#select-class-dialog').hide();
	 	if(this.currTheme == "expertusoneV2"){
	     //changeDialogPopUI();
	 	   $('#select-class-equalence-dialog').prevAll().removeAttr('select-class-equalence-dialog');
	 	   $('#commonMsg-wizard').closest('.ui-dialog').wrap("<div id='select-class-equalence-dialog'></div>");
	       $('#select-class-equalence-dialog').find('.ui-dialog-content').addClass('commonMsg-select-class');
		   changeChildDialogPopUI('select-class-equalence-dialog');
		   $('#select-class-equalence-dialog').prev('.ui-widget-overlay').css('display','none');
		   if ( $.browser.msie && parseInt($.browser.version, 10)=='9' && this.currTheme == "expertusoneV2"|| $.browser.msie && parseInt($.browser.version, 10)=='8'&& this.currTheme == "expertusoneV2"){
		   $('#select-class-equalence-dialog .ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').prev('.white-btn-bg-left').remove();
		   $('#select-class-equalence-dialog .ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').next('.white-btn-bg-right').remove();
		   }
		}
	 	else {
	 		$('#select-class-equalence-dialog').prevAll().removeAttr('select-class-equalence-dialog');
		 	$('#commonMsg-wizard').closest('.ui-dialog').wrap("<div id='select-class-equalence-dialog'></div>");
			changeChildDialogPopUI('select-class-equalence-dialog');
			$('#select-class-equalence-dialog').prev('.ui-widget-overlay').css('display','none');
		   }
	    $("#commonMsg-wizard").show();
		$('.ui-dialog-titlebar-close,.removebutton').click(function(){
			if(opener!=null && opener!=undefined && opener.location.href.indexOf("admincalendar") >= 0){
				window.close();
			}
			$("#commonMsg-wizard").remove();
	        //$('#select-class-dialog').show();
	        $('#select-class-dialog').next('.ui-widget-overlay').css('display','block');
	    });
	 }catch(e){
			// to do
		}
	},


	registerTPClassDetails : function(widgetId,prgId,addToCart,fromPage,recertifyId){
	 try{
		if(typeof(recertifyId) == 'undefined') recertifyId = '';
		var courseList = $('#courseListIds').val();
		var courseListIds = courseList.split(",");

		var isAdminSide = $('#isadminsidefield').val();
		var userListIds = $('#userListIds').val();

		var courseId;
		var selectedClass = '';
		var inc = 0;
		var classIds = '';
		var selectedClass1;
		var registeredNsingleCourseClassIds;

		var params = 'selectedItem={';

			for(c=0; c < courseListIds.length ; c++){

				inc=inc+1;
				courseId 	= courseListIds[c];

				registeredNsingleCourseClassIds = $("#classListIds-"+courseId).val();

				selectedClass = $('input[name="'+courseId+'-clsregister"]:radio:checked').val();

					if(registeredNsingleCourseClassIds == '' && (selectedClass == undefined || selectedClass == 'undefined') ) {
							selectedClass1='NULL';
							break;
					}

				//if(registeredNsingleCourseClassIds != '' && recertifyId !='R') { // Fixed For this Issue #0040101 First time Recertifying registeredNsingleCourseClassIds has Value.
					// selectedClass = registeredNsingleCourseClassIds;
				//} Commented by rajeshwar for #71732


				params += '"'+c+'":'+'{';
				params += '"tpid":"'+prgId+'",';
				params += '"courseid":"'+courseId+'",';
				params += '"classid":"'+selectedClass+'",';
				params += '"recertifyid":"'+recertifyId+'"';
				params += '}';

				classIds +=  selectedClass;
				if(inc < courseListIds.length) {
					params += ',';
					classIds += ',';
				 }

			}

			params += '}';
			
		 /* Start : #0069220 Added by ganesh for implement cookieless option in Salesforce on Oct 6th 2016 10:40 AM -  Passing session variables to ajax callback */
		 			var sf_exp_ses_value = $('.salesforce-widget #widget').attr('data-exp-sess-id');  
					if (typeof sf_exp_ses_value !== typeof undefined && sf_exp_ses_value !== false) {
						 if(params!=''){
						    params = params+'&exp_sess_id='+sf_exp_ses_value; 
						 }else{
						      params = 'exp_sess_id='+sf_exp_ses_value;
						 }
					 }					 
		   /* End : #0069220 Added by ganesh for implement cookieless option in Salesforce */   
		   

			if(selectedClass1 == "NULL") {
				var errMsg = new Array();
				errMsg[0] = Drupal.t("ERR066");
				var message_call = expertus_error_message(errMsg,'error');
				$('#show_expertus_message').html(message_call);
				$('#show_expertus_message').show();

				/* $("#errMsgDisplay").html(Drupal.t("ERR149"));
				 $(".error").css('display','block');*/
			}else{
				if(addToCart != 'Cart'){

					var MasterMandatory=$('#assignPrg_checkbox_'+prgId+':checked').val();
					if(MasterMandatory==undefined){
						MasterMandatory='N';
					}
					this.createLoader('tainingplan-register'+prgId);
					//alert(MasterMandatory)
					var url = this.constructUrl("ajax/trainingplan/class-list-register/"+isAdminSide+ "/" + userListIds+ "/" + fromPage+ "/" + MasterMandatory);
					var obj = this;
					$.ajax({
						type: "POST",
						url: url,
						data:  params,
						datatype: 'text',
						success: function(result){

							if(isAdminSide =="Y") {
								result = eval(result);
							}else{
								result = $.trim(result);
							}

							if(isAdminSide =="Y") {
								 $("#tainingplan-register"+prgId).remove();
								 obj.displayRegistrationStatus(result);
							}else if(result == 'Registered' || result == 'Waitlisted') {

							   obj.callObjectAvailableSeats(prgId);
							   if(fromPage != 'MyTeam'){
								   $("#tainingplan-register"+prgId).remove();
								   $("#object-registerCls_"+prgId).removeAttr('onclick');
								   if(result == 'Waitlisted') {
									   $("#object-registerCls_"+prgId).removeClass("action-btn-waitlist");
									   $("#object-registerCls_"+prgId).html(Drupal.t('LBL190'));
								   }else{
									   $("#object-registerCls_"+prgId).removeClass("action-btn");
									   $("#object-registerCls_"+prgId).html(Drupal.t('Registered'));
								   }
								   $("#object-registerCls_"+prgId).addClass("action-btn-disable");

								   if (widgetId=='lnr-catalog-search') {
									   var currentPage = $('.ui-pg-input').val();
									   if(typeof $("#lnr-catalog-search").data("lnrcatalogsearch") == 'undefined' || $("#lnr-catalog-search").data("lnrcatalogsearch").refreshLastAccessedCatalogRow() == false) {
											$("#paintContentResults").trigger("reloadGrid",[{page:currentPage}]);
										}
								   }
								   if(document.getElementById("learningplan-tab-inner")){
									   if(widgetId == 'enroll-lp-result-container'){ // Expired Tab Reload issue #0046138
										   $("#learningplan-tab-inner").data("learningplan").callLearningPlan("lrn_tpm_ovr_exp","EnrollExpired");
									   }
								   }
								   if(document.getElementById("learning-plan-details-display-content"))
									   location.reload();
							   }else{
								   $("#paintClassesSelectList"+prgId).remove();
								   $("#assignClass_"+prgId).removeAttr('onclick');
								   $("#assignClass_"+prgId).removeClass("action-btn");
								   $("#assignClass_"+prgId).addClass("action-btn-disable");
								   if(result == 'Waitlisted') {
									   $("#assignClass_"+prgId).html(Drupal.t('LBL190'));
								   }else{
									   $("#assignClass_"+prgId).html(Drupal.t('Registered'));
								   }
								   var currentPage = $('.ui-pg-input').val();
								   $("#tbl-paintCatalogContentResults").trigger("reloadGrid",[{page:currentPage}]);
							   }
						   }else{
							   var errResult = new Array();
							   errResult[0] = result;
							   var err_msg = expertus_error_message(errResult,'error');
								$('#show_expertus_message').html(err_msg);
								$('#show_expertus_message').show();
						   }
						   obj.destroyLoader('tainingplan-register'+prgId);
						}
				    });
				}
				else{
					var waitlist = 0; // waitlist function
					this.callAddToCart(widgetId,'', prgId,addToCart,classIds,waitlist);
				}
			}
	 }catch(e){
			// to do
		}
	},


	displayRegistrationStatus : function(result) {
	 try{
		var rhtml='';
		rhtml += "<table border='1' cellpadding='5' style='width: 100%;'>";
		rhtml += "<tr style='background-color:#EFEFEF'>";
		rhtml += "<td style='width: 150px;font-weight:bold;font-size:15px;'>User Name</td>";
		rhtml += "<td style='width: 150px;font-weight:bold;font-size:15px;'>Status</td>";
		rhtml += "</tr>";
		for(c=0; c < result.length ; c++){

			rhtml += "<tr>";
			rhtml += "<td>"+result[c]['username']+"</td>";
			rhtml += "<td>"+result[c]['status']+"</td>";
			rhtml += "</tr>";

		}
		rhtml += "</table>";

		$("#displayRegisteredUserStatus").html(rhtml);
	 }catch(e){
			// to do
		}
	},


	myteamAccordin : function(widgetId,prgId,addToCart) {
		try{
		//alert(1)
		}catch(e){
			// to do
		}
	},

	renderPopup : function(widgetId,prgId,addToCart,fromPage,recertifyId) {
		try{
		var html = "<div id='tainingplan-register"+prgId+"' style='height:250px;width:600px;overflow:visible;padding:0px;'></div>";
		$("#tainingplan-register"+prgId).remove();
		$('body').append(html);

		var nHtml = "<div id='show_expertus_message'></div><table id='lnr-tainingplan-register' class='lnr-tainingplan-register learningplan-content-wrapper'></table>";
		$('#tainingplan-register'+prgId).html(nHtml);

		var closeButt = {};
		closeButt[Drupal.t('LBL569')]=function(){
			eval('$("body").data("learningcore").registerTPClassDetails(\''+widgetId+'\',\''+prgId+'\',\''+addToCart+'\',\''+fromPage+'\',\''+recertifyId+'\')');


		};
		var prewidth = 780;
		//Embed widget related work (Create flexible grid)
		if(Drupal.settings.widget.widgetCallback==true){
		    var iwidth = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);
		    prewidth = iwidth - 40;
		}
		$("#tainingplan-register"+prgId).dialog({
			bgiframe: true,
			width:prewidth,
			resizable:false,
			draggable:false,
			closeOnEscape: false,
			modal: true,
			title:Drupal.t('LBL716'),
			buttons: closeButt,
			close: function(){
				$("#tainingplan-register"+prgId).remove();
			},
			overlay: {
			   opacity: 0.5,
			   background: '#000000'
			 }
		});
		 $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').before('<div class="admin-save-button-left-bg"></div>');
		 $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').addClass("admin-save-button-middle-bg");
		 $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').after('<div class="admin-save-button-right-bg"></div>');

		 this.currTheme = Drupal.settings.ajaxPageState.theme;
		 	if(this.currTheme == "expertusoneV2"){
		    changeDialogPopUI();
		 	}
		
		//$('.ui-dialog-buttonpane .ui-dialog-buttonset button').addClass("removebutton");
		//$('#tainingplan-register'+prgId).parent().css('border','4px solid gray');
		}catch(e){
			// to do
		}
	},


	callPopupOrNot : function(widgetId, prgId,addToCart,isAdminSide,userListIfAdminSide,recertifyId) {
		try{
		/**
 		* 0024925: Enforce equivalence in training plans
 		* for this ticket we created equivalence option for training plan
 		* don't delete it. Its may need for feature enhancement
 		*
 		*/
		/*
			var obj = this;
			var userId = this.getLearnerId();
			if(!userId) {
				this.callMessageWindow('registertitle',"Please sign in to proceed.");
			}
			obj.callEquivalencePopupTP(widgetId, prgId,addToCart,isAdminSide,userListIfAdminSide,recertifyId);
		}catch(e){
			// to do
		}
	},

	callPopupOrNotTP : function(widgetId, prgId,addToCart,isAdminSide,userListIfAdminSide,recertifyId) {
		try{
			var obj = this;
			var userId = this.getLearnerId();

			//obj.callEquivalencePopupTP(widgetId,userId, prgId);
		*/
		if(typeof(recertifyId) == 'undefined') recertifyId='';
		var userId = this.getLearnerId();
		var LMSNodeId = 0;
		var returnMsg;
		var userIdList = this.getLearnerId();
		var loaderId;
		
		if(!userId) {
			this.callMessageWindow('registertitle',"Please sign in to proceed.");
		}else{
			if(userListIfAdminSide != null && userListIfAdminSide != '') {
				userIdList = userListIfAdminSide;
			}

				var isCart =(addToCart =='Cart') ? 1 : 0;
				if(addToCart == 'Cart'){
					var tpData 	= eval($('#object-addToCartList_'+prgId).attr("data"));
					LMSNodeId = tpData.NodeId;
				 }
				var MasterMandatory = 'N';
				var fromPage = 'catalogpopup';
				if(document.getElementById(widgetId)!=null){ // Loader display on widgetId which passed
					loaderId = widgetId;
					this.createLoader(widgetId);
				}else{
					if(document.getElementById('tbl-paintCatalogContentResults')!= null){ // Check for team page or not
						loaderId = 'tbl-paintCatalogContentResults';
						this.createLoader('tbl-paintCatalogContentResults');
					}else{ // default loader
						loaderId = 'paintContent';
						this.createLoader('paintContent');
					}
				}
				/*if(fromPage != 'MyTeam'){
					this.createLoader('paintContent');
				}else{
					this.createLoader('tbl-paintCatalogContentResults');
				}*/
				var pageandmandatory = fromPage + "-" +MasterMandatory;
				var params = {"recertifyid":recertifyId};
				var url = this.constructUrl("ajax/trainingplan/class-cnt-for-course/"+prgId + "/" + LMSNodeId +"/" + isCart+"/" + isAdminSide+"/" + userIdList+"/" + pageandmandatory);
				var obj = this;
				$.ajax({
					type: "POST",
					url: url,
					data:  params,
					success: function(result){

						returnMsg =(addToCart !='Cart' || ($.type(result) === "string")) ? result : result.cart_msg;
					    returnMsg = $.trim(returnMsg);

							if(returnMsg == 'MultiRegister') {
						        obj.getModuleListForTP(widgetId, prgId,addToCart,isAdminSide,userIdList,'catalogpopup',recertifyId);

							} else if(returnMsg == 'Registered' || returnMsg == 'Waitlisted') {
									obj.callObjectAvailableSeats(prgId);
								  /* $("#object-registerCls_"+prgId).removeAttr('onclick');
								   $("#object-registerCls_"+prgId).removeClass("action-btn");
								   $("#object-registerCls_"+prgId).addClass("action-btn-disable");
								   $("#object-registerCls_"+prgId).html("Registered");

								   if (widgetId=='lnr-catalog-search') {
									   var currentPage = $('.ui-pg-input').val();
									   $("#paintContentResults").trigger("reloadGrid",[{page:currentPage}]);
								   }
								   */

									if(fromPage != 'MyTeam'){
										   $("#object-registerCls_"+prgId).removeAttr('onclick');
										   if(returnMsg == Drupal.t('LBL190')) {
											   $("#object-registerCls_"+prgId).removeClass("action-btn-waitlist");
											   $("#object-registerCls_"+prgId).html(Drupal.t('LBL190'));
										   }else{
											   $("#object-registerCls_"+prgId).removeClass("action-btn");
											   $("#object-registerCls_"+prgId).html(Drupal.t('Registered'));
										   }
										   $("#object-registerCls_"+prgId).addClass("action-btn-disable");

										   if (widgetId=='lnr-catalog-search') {
											   var currentPage = $('.ui-pg-input').val();
											   if(typeof $("#lnr-catalog-search").data("lnrcatalogsearch") == 'undefined' || $("#lnr-catalog-search").data("lnrcatalogsearch").refreshLastAccessedCatalogRow() == false) {
													$("#paintContentResults").trigger("reloadGrid",[{page:currentPage}]);
												}
										   }else if(widgetId == 'enroll-lp-result-container' && recertifyId.indexOf('R')>=0) {
											   var currentPage = $('.ui-pg-input').val();
											   $("#paintEnrollmentLPResults").trigger("reloadGrid",[{page:currentPage}]);
										   }
										   if(document.getElementById("learning-plan-details-display-content"))
											   location.reload();
									   }else{
										   $("#assignClass_"+prgId).removeAttr('onclick');
										   $("#assignClass_"+prgId).removeClass("action-btn");
										   $("#assignClass_"+prgId).addClass("action-btn-disable");
										   if(returnMsg == Drupal.t('LBL190')) {
											   $("#assignClass_"+prgId).html(Drupal.t('LBL190'));
										   }else{
											   $("#assignClass_"+prgId).html(Drupal.t('Registered'));
										   }
										   var currentPage = $('.ui-pg-input').val();
										   $("#tbl-paintCatalogContentResults").trigger("reloadGrid",[{page:currentPage}]);
									   }

							} else if(returnMsg == 'CartAdded') {
								$("#object-addToCartList_"+prgId).removeAttr('onclick');
								$("#object-addToCartList_"+prgId).removeClass("action-btn");
								$("#object-addToCartList_"+prgId).addClass("action-btn-disable");
								$("#object-addToCartList_"+prgId).html(Drupal.t('LBL049'));
								if (parseInt(result.total_product) > 0) {
									$("#ShoppingCartItemsId").addClass("filled");
									$("#ShoppingCartItemsId").html(result.total_product);
								} else {
									$("#ShoppingCartItemsId").removeClass("filled");
									$("#ShoppingCartItemsId").html('');
								}
							} else {

								if(isAdminSide != 'Y'){
										if(returnMsg == 'nocourses'){
											//returnMsg = SMARTPORTAL.t('No courses has been associated');
											returnMsg = Drupal.t('MSG268');
										} else if(returnMsg == 'noclasses'){
											//returnMsg = SMARTPORTAL.t('No classes under one of the associated course(s)');
											returnMsg = Drupal.t('MSG379');
										} else if(returnMsg == 'seatsfull'){
											//returnMsg = SMARTPORTAL.t('No seats available for this Program');
											returnMsg = Drupal.t('MSG380');
										}

										obj.callMessageWindow('registertitle',returnMsg);

								}else{

									if(returnMsg == 'nocourses' || returnMsg == 'noclasses' || returnMsg == 'seatsfull'){
										if(returnMsg == 'nocourses'){
											//returnMsg = SMARTPORTAL.t('No courses has been associated');
											returnMsg = Drupal.t('MSG268');
										}else if(returnMsg == 'noclasses') {
											returnMsg = SMARTPORTAL.t('No classes under one of the associated course(s)');

										}else if(returnMsg == 'seatsfull'){
											//returnMsg = SMARTPORTAL.t('No seats available for this Program');
											returnMsg = Drupal.t('MSG380');
										}
										obj.callMessageWindow('registertitle',returnMsg);
									}else{
										returnMsg = eval(result);
										obj.displayRegistrationStatus(returnMsg);
									}

								}
							}
							obj.destroyLoader(loaderId);
					}
			    });
		}
		}catch(e){
			// to do
			//console.log(e);
		}
	},


	getModuleListForTP : function(widgetId, prgId, addToCart,isAdminSide,userListIfAdminSide,fromPage,recertifyId) {
		try{
		if(fromPage == 'MyTeam') {
			this.myteamAccordin(widgetId,prgId,addToCart);
			this.createLoader('paintClassesSelectList'+prgId);
		}else{
			this.renderPopup(widgetId,prgId,addToCart,fromPage,recertifyId);
			this.createLoader('tainingplan-register'+prgId);
		}

			if(isAdminSide == 'Y') {
				$(".error").css('display','none');
			}

            var url = this.constructUrl("ajax/trainingplan/module-list/"+prgId+ "/" + userListIfAdminSide+ "/" +isAdminSide+ "/"+fromPage);			
			var obj = this;
			var params = {"recertifyid":recertifyId};
			$.ajax({
				type: "POST",
				url: url,
				data:  params,
				success: function(result){
						//obj.paintTPCourseDetails(result,prgId,isAdminSide,userIdList);

						obj.paintTPModuleDetails(widgetId,addToCart,result,prgId,isAdminSide,userListIfAdminSide,fromPage);
						//$(".lnr-tainingplan-register").jScrollPane();
						$("body").data("learningcore").refreshJScrollPane(".lnr-tainingplan-register");
						if(isAdminSide == 'Y') {
							$(".error").css('display','none');
						}
						/*for(c=0; c < result.length ; c++){
								obj.accordionForModuleView(result[c]['module_details']['module_id']);
						}*/
						if(fromPage == 'MyTeam') {
							obj.destroyLoader('paintClassesSelectList'+prgId);
						}else{
							obj.destroyLoader('tainingplan-register'+prgId);
						}
						/*-- #34270 - scroll pane for the dynamic contents in team assign learn popup --*/
						if($("#my-team-dialog #gview_tbl-paintCatalogContentResults").length) {
							$("body").data("learningcore").refreshJScrollPane("#my-team-dialog #gview_tbl-paintCatalogContentResults");
						}
						if(fromPage == 'MyTeam') {
							resetFadeOutByClass('.tp-register-select-class-crs-title', 'item-title-code', 'line-item-container', 'myteam');
							resetFadeOutByClass('.course-sub-class-detail', 'item-title-code', 'line-item-container', 'myteam');
						}
						if(fromPage == 'catalogpopup'){
							resetFadeOutByClass('.page-learning-catalog-search .ui-widget-content .content-detail-container ', 'content-detail-code', 'line-item-container', 'catalogpopup');
						}
				}
		    });
			
		}catch(e){
			// to do
		}
	},

	paintTPModuleDetails : function(widgetId,addToCart,result,prgId,isAdminSide,userIdList,fromPage){
	 try{
		
		var rhtml = "";
		var c;
		var moduleTitle;
		var moduleId;
		var moduleCode;
		var moduleDesc;

		var courseList = '';
		var courseId;
		this.currTheme = Drupal.settings.ajaxPageState.theme;

		var obj = $("body").data("learningcore");
		var objStr = '$("body").data("learningcore")';
		if(result.length > 0 ) {
			//rhtml += "<tr><td><div id='show_expertus_message'></div></td></tr>";
			rhtml += "<tr><td><div class='main-module-level'>";
			rhtml += "<tr><td><div class='module-level'>";
			rhtml += "<table border='0' cellpadding='0' class='enroll-show-morecourse' cellspacing='0'>";
			for(c=0; c < result.length ; c++){

				moduleId = result[c]['module_details']['group_code'];
				moduleTitle = result[c]['module_details']['group_title'];
				moduleCode = result[c]['module_details']['module_code'];
				moduleDesc = result[c]['module_details']['module_desc'];
				//modTitle = result[c]['module_details']['module_title'];
				//modId = result[c]['module_details']['module_id'];
				if(result[c]['course_details'].length > 0) {
					var z = 0;
					var inc5 = 0;
					var passParams = "[";

					var crsDetailsLenth = result[c]['course_details'].length;

					 if(courseList != '') {
						 courseList += ',';
					 }

					$(result[c]['course_details']).each(function(){

						 courseId = result[c]['course_details'][inc5]['crs_id'];
						 courseList += courseId;
						 var cls_det='[';
						 var clscnt = 0;
						 var clsLength = result[c]['course_details'][inc5]['class_details'].length;
						 //alert(result[c]['course_details'][inc5]['class_details'].toSource())
						 $(result[c]['course_details'][inc5]['class_details']).each(function(){
							 var x = this;
							 cls_det += '{';
							 cls_det += "'cls_id':'"+x["class_details"]["cls_id"]+"',";
							 cls_det += "'crs_id':'"+x["class_details"]["crs_id"]+"',";
							 cls_det +=	"'cls_code':'"+escape(x['class_details']['cls_code'])+"',";
							 cls_det += "'cls_title':'"+escape(x['class_details']['cls_title'])+"',";
							 cls_det += "'cls_short_description':'"+escape(x['class_details']['cls_short_description'])+"',";
							 cls_det += "'delivery_type_code':'"+x['class_details']['delivery_type_code']+"',";
							 cls_det += "'delivery_type_name':'"+x['class_details']['delivery_type_name']+"',";
							 cls_det += "'language':'"+x['class_details']['language']+"',";
							 cls_det += "'session_id':'"+x['class_details']['session_id']+"',";
							 cls_det += "'country_name':'"+x['class_details']['country_name']+"',";
							 cls_det += "'location':'"+escape(x['class_details']['location'])+"',";
							 cls_det += "'loationaddr1':'"+escape(x['class_details']['loationaddr1'])+"',";
							 cls_det += "'locationaddr2':'"+escape(x['class_details']['locationaddr2'])+"',";
							 cls_det += "'locationcity':'"+escape(x['class_details']['locationcity'])+"',";
							 cls_det += "'locationstate':'"+x['class_details']['locationstate']+"',";
							 cls_det += "'locationzip':'"+x['class_details']['locationzip']+"',";
							 cls_det += "'sess_start_date':'"+x['class_details']['sess_start_date']+"',";
					
							 var enrolled_det = '[';
							 if(x['class_details']['enrolled_id']) {
							 	enrolled_det += '{';
							 	enrolled_det += "'comp_status':'"+x['class_details']['enrolled_id'].comp_status+"',";
							 	enrolled_det += "'enrolled_id':'"+x['class_details']['enrolled_id'].enrolled_id+"',";
							 	enrolled_det += "'enrolled_status':'"+x['class_details']['enrolled_id'].enrolled_status+"',";
							 	enrolled_det += "'waitlist_flag':'"+x['class_details']['enrolled_id'].waitlist_flag+"',";
							 	enrolled_det += "'waitlist_priority':'"+x['class_details']['enrolled_id'].waitlist_priority+"'";						 								 	
							 	enrolled_det += '}';
							 }
							 enrolled_det += ']';
							 cls_det += "'enrolled_id':"+enrolled_det+",";
							 var enrolled_last_comp_class = '[';
							 if(x['class_details']['class_last_comp']) {
							 	enrolled_last_comp_class += '{';
							 	enrolled_last_comp_class += "'comp_status':'"+x['class_details']['class_last_comp'].comp_status+"',";
							 	enrolled_last_comp_class += "'enrolled_id':'"+x['class_details']['class_last_comp'].enrolled_id+"',";
							 	enrolled_last_comp_class += "'comp_on':'"+x['class_details']['class_last_comp'].comp_on+"'";						 								 	
							 	enrolled_last_comp_class += '}';
							 }
							 enrolled_last_comp_class += ']';
							 
							 cls_det += "'enrolled_last_comp_class':"+enrolled_last_comp_class+",";
							 cls_det += "'waitlist_status':'"+x['class_details']['waitlist_status']+"',";
							 var sesslis = '[';
							 if(x['session_details'].length > 0) {
								 var inc = 0;
								 var sessLen = x['session_details'].length;
								 $(x['session_details']).each(function(){
									inc=inc+1;
									sesslis += '{';
									sesslis += "'session_title':'"+(escape($(this).attr("session_title")) ? escape($(this).attr("session_title")) : '')+"',";
								       sesslis += "'session_day':'"+$(this).attr("session_day")+"',";
								       sesslis += "'start_date':'"+$(this).attr("start_date")+"',";
								       sesslis += "'start_time':'"+$(this).attr("start_time")+"',";
								       sesslis += "'end_time':'"+$(this).attr("end_time")+"',";
								       sesslis += "'start_form':'"+$(this).attr("start_form")+"',";
								       sesslis += "'sessionInstructorName':'"+escape($(this).attr("session_instructor_name"))+"',";
                                if(x['class_details']['delivery_type_code']=='lrn_cls_dty_ilt'){
                                    sesslis += "'ilt_session_day':'"+$(this).attr("ilt_session_day")+"',";
									sesslis += "'ilt_start_date':'"+$(this).attr("ilt_start_date")+"',";
									sesslis += "'ilt_start_time':'"+$(this).attr("ilt_start_time")+"',";
									sesslis += "'ilt_end_time':'"+$(this).attr("ilt_end_time")+"',";
									sesslis += "'ilt_start_form':'"+$(this).attr("ilt_start_form")+"',";
									sesslis += "'ilt_end_form':'"+$(this).attr("ilt_end_form")+"',";
									sesslis += "'loc_tzcode':'"+$(this).attr("loc_tzcode")+"',";
									sesslis += "'loc_tz':'"+$(this).attr("loc_tz")+"',";
									sesslis += "'user_tz':'"+$(this).attr("user_tz")+"',";
									sesslis += "'session_id':'"+$(this).attr("session_id")+"',";
									sesslis += "'user_tzcode':'"+$(this).attr("user_tzcode")+"',";
                                                                 }
								    	sesslis += "'end_form':'"+$(this).attr("end_form")+"'";
									sesslis += '}';
									 if(inc < sessLen) {
										 sesslis += ",";
									 }

								 });
							 }
							 sesslis += ']';
							 cls_det += "'session_details':"+sesslis+",";
							 cls_det += "'availableSeats':'"+x['class_details']['availableSeats']+"'";
							 cls_det += '}';
							 clscnt++;
							 if(clscnt < clsLength)
								 cls_det += ',';

						 });
						 cls_det += ']';
						 //alert(cls_det)
						 z = z + 1;
						 if(z < crsDetailsLenth) {
								courseList += ',';
						 }


						 passParams += "{";
						 passParams += "'crs_id':'"+result[c]['course_details'][inc5]['crs_id']+"',";
						 passParams += "'crs_code':'"+escape(result[c]['course_details'][inc5]['crs_code'])+"',";
						 passParams += "'crs_title':'"+escape(result[c]['course_details'][inc5]['crs_title'])+"',";
						 passParams += "'crs_desc':'"+escape(result[c]['course_details'][inc5]['crs_desc'])+"',";
						 passParams += "'is_required':'"+result[c]['course_details'][inc5]['is_required']+"',";
						 passParams += "'registered_cnt':'"+result[c]['course_details'][inc5]['registered_cnt']+"',";
						 passParams += "'single_class':'"+result[c]['course_details'][inc5]['single_class']+"',";
						 passParams += "'sequence_no':'"+result[c]['course_details'][inc5]['sequence_no']+"',";
						 passParams += "'start_date':'"+result[c]['course_details'][inc5]['start_date']+"',";
						 passParams += "'end_date':'"+result[c]['course_details'][inc5]['end_date']+"',";
						 passParams += "'clscount':'"+result[c]['course_details'][inc5]['clscount']+"',";
						 passParams += "'class_details':"+cls_det;
						 passParams += "}";


						 if(result[c]['course_details'][inc5]['registered_cnt'] == 1 && isAdminSide != 'Y') {

							var regValue =  result[c]['course_details'][inc5]['cls_id'];

						 }else if (result[c]['course_details'][inc5]['clscount'] == 1 ){
							var regValue =  result[c]['course_details'][inc5]['single_class'];

						 }else{
							var regValue = '';
						 }

						rhtml += '<input type="hidden" id="classListIds-'+courseId+'" name="classListIds" value="'+regValue+'">';


						 inc5=inc5+1;
						 if(inc5 < crsDetailsLenth) {
							 passParams += ",";
						 }

					});
					passParams += "]";


				}else{
					var passParams="''";
				}

			    var param = "data={'prgId':'"+prgId+"'," +
			    "'moduleId':'"+moduleId+"'," +
			    "'isAdminSide':'"+isAdminSide+"'," +
			    		"'userIdList':'"+userIdList+"'," +
   						"'courseDetails':"+passParams+"}";

				//var param = "data={'courseDetails':"+passParams+"}";


	 			rhtml += '<tr class="set-height ui-widget-content" id ="lp-crs-module-'+moduleId+'">';
				rhtml += '<td>';
				// Added condition for 0072664
				if(moduleId == null || moduleId == undefined || moduleId == ''){
					rhtml += '<div class="set-height-column-left" id="lp-crs-accodion-module-'+moduleId+'" data="'+param+'"></div>';
				}else{
					if(fromPage == "MyTeam") {
						rhtml += '<a class="set-height-column-left title_close" id="lp-crs-accodion-module-'+moduleId+'" href="javascript:void(0);" data="'+param+'" onclick=\''+objStr+'.accordionForModuleView("'+moduleId+'","'+fromPage+'");\'>&nbsp;</a>';
						rhtml += '<div class="tp-register-select-module-title"><div class="set-height-column-right"><span class="item-title limit-title-row"><span class="limit-title limit-title-mulcls-module-title lp-reg-class-title vtip " title="'+unescape(moduleTitle).replace(/"/g, '&quot;')+'" href="javascript:void(0);">';
					} else {
						rhtml += '<a style="display: none;" class="set-height-column-left title_close" id="lp-crs-accodion-module-'+moduleId+'" href="javascript:void(0);" data="'+param+'" onclick=\''+objStr+'.accordionForModuleView("'+moduleId+'","'+fromPage+'");\'>&nbsp;</a>';
						// rhtml += '<div class="tp-register-select-module-title"><div class="set-height-column-right">';
						rhtml += '<div class="lp_group_title"><fieldset><legend align="left">';
						rhtml += '<span class="item-title limit-title-row"><span class="limit-title limit-title-mulcls-module-title lp-reg-class-title vtip " title="'+unescape(moduleTitle).replace(/"/g, '&quot;')+'" href="javascript:void(0);">';
					}
				/*if(fromPage == "MyTeam") {
					if(this.currTheme == "expertusoneV2"){
						rhtml += titleRestrictionFadeoutImage(moduleTitle,'tp-view-module-title');
						//rhtml += titleRestricted(moduleTitle,80);
					}else{
						rhtml += titleRestricted(moduleTitle,70);
					}
				}else{
					rhtml += titleRestrictionFadeoutImage(moduleTitle,'tp-view-module-title');
				}*/
					rhtml += titleRestrictionFadeoutImage(moduleTitle,'tp-view-module-title', 20);
				rhtml += '</span></span>';
				//rhtml += '<div class="course-info item-title-code">';
				//rhtml += '<span title="'+unescape(moduleCode)+'">'+titleRestricted(moduleCode,10)+'</span>';
				//rhtml += '<span class="pipeline">|</span>';
				//rhtml += '</div>';

				//rhtml += '<div class="course-desc-info">';
				//rhtml += '<span>'+moduleDesc+'</span>';
				//rhtml += '</div>';
					if(fromPage == "MyTeam") {
						rhtml += '</div></div>';
					} else {
						rhtml += '</legend></fieldset></div>';
					}
				}
				rhtml += '</td>';
				rhtml += '</tr>';

		  }


			 rhtml += '<tr><td><input type="hidden" id="courseListIds" name="courseListIds" value="'+courseList+'"></td></tr>';

	    	 rhtml += '<tr><td><input type="hidden" id="isadminsidefield" name="isadminsidefield" value="'+isAdminSide+'"></td></tr>';

			 rhtml += '<tr><td><input type="hidden" id="userListIds" name="userListIds" value="'+userIdList+'"></td></tr>';

			 if(fromPage == "MyTeam") {
				 var fnClick = objStr+'.registerTPClassDetails("'+widgetId+'","'+prgId+'","'+addToCart+'","'+fromPage+'")';
				// var fnClick = '$("#lnr-myteam-search").data("lnrmyteamsearch").registerTPObjectDetails("'+prgId+'","'+userIdList+'")';
				 rhtml += "<tr><td><div class='admin-save-button-container'><div class='admin-save-button-left-bg'></div><input type='button' class ='assign-btn admin-save-button-middle-bg' id='assign_btn_"+prgId+"' value = '"+Drupal.t('LBL569')+"' onclick='"+fnClick+"'><div class='admin-save-button-right-bg'></div></div></td></tr>";
			 }


		  rhtml += '</table>';
		  rhtml += '</div></td></tr>';
		}
		else{
			rhtml += "<tr><td class='no-item-found'>"+SMARTPORTAL.t('No modules associated with this.')+"</td></tr>";
		}
		 if(fromPage == "MyTeam") {
			 $("#paintClassesSelectList"+prgId).html(rhtml);
		 }else{
			 $("#lnr-tainingplan-register").html(rhtml);
		 }
		 //$(".lnr-tainingplan-register").jScrollPane();
		 $("body").data("learningcore").refreshJScrollPane(".lnr-tainingplan-register");
		 $('.enroll-show-morecourse .set-height td .title_close').trigger("click");

		// Added condition for 0072664
		 var grpId = result[0]['module_details']['group_code'];
		 if(grpId == null || grpId == undefined || grpId == ''){
			 this.accordionForModuleView(grpId,fromPage);
			 $('#lp-crs-accodion-module-'+grpId).removeClass('title_open');
		 }
		 
		 for(c=0; c < result.length ; c++){

			moduleId = result[c]['module_details']['group_code'];
			var data = eval($("#lp-crs-accodion-module-"+moduleId).attr("data"));
			var classDetSec = this.paintTPCourseDetails(data,fromPage);
			/*-- #34270 scroll pane for the dynamic contents in team assign learn popup --*/
			if($("#my-team-dialog #gview_tbl-paintCatalogContentResults").length) {
				$("#my-team-dialog .class-details-info tr:last-child .course-delivery-info").css('border-bottom','0px none');
				$("#my-team-dialog .course-level .set-height-column-right").css('border-bottom','0px none');
				$("body").data("learningcore").refreshJScrollPane("#my-team-dialog #gview_tbl-paintCatalogContentResults");
			}else{
				$("#lnr-tainingplan-register .class-details-info tr:last-child .course-delivery-info").css('border-bottom','0px none');
				$("#lnr-tainingplan-register .course-level .set-height-column-right").css('border-bottom','0px none');
			}
			$("body").data("learningcore").refreshJScrollPane(".lnr-tainingplan-register");
			//$(".lnr-tainingplan-register").jScrollPane();
		 }
		 vtip();
		 resetFadeOutByClass('#lnr-tainingplan-register','content-detail-code','line-item-container','select');		 
	 	 $('.limit-title-mulcls-title').trunk8(trunk8.tpmod_title);
		 $('.limit-desc-mulcls').trunk8(trunk8.tpmod_desc);
		 $('.limit-title-mulcls-module-title').trunk8(trunk8.tpgroup_title);
		 //Overlay container display full bg height
		 $('#tainingplan-register'+prgId).parent(".ui-dialog").next('.ui-widget-overlay').css({"height":"100%", "position":"fixed"})
		 scrollBar_Refresh('tp-select-class');
	 }catch(e){
			// to do
			// console.log(e, e.stack);
		}
	},

	accordionForModuleView : function(moduleId,fromPage) {
	 try{
		var currTr = moduleId;

		if(!document.getElementById(currTr+"ModuleSubGrid")) {
			$("#lp-crs-module-"+currTr).after("<tr id='"+currTr+"ModuleSubGrid'><td colspan='4'><div id='module-details-"+currTr+"' ></div></td></tr>");
			$("#"+currTr+"ModuleSubGrid").show();//css("display","block");
			//$("#"+currTr+"ModuleSubGrid").css("visibility", 'visible');
			$("#lp-crs-accodion-module-"+currTr).removeClass("title_close");
			$("#lp-crs-accodion-module-"+currTr).addClass("title_open");
			$("#lp-crs-module-"+currTr).removeClass("ui-widget-content");
			$("#"+currTr+"ModuleSubGrid").slideDown(1000);
			$("#lp-crs-module-"+currTr).find(".set-height-column-right").css("border-bottom","0px");
		} else {
			var clickStyle = $("#"+currTr+"ModuleSubGrid").css("display");
    		if((clickStyle == "none") || (clickStyle == 'undefined')) {
    			$("#"+currTr+"ModuleSubGrid").show();//css("display","block");
    			//$("#"+currTr+"ModuleSubGrid").css("visibility", 'visible');
    			$("#"+currTr+"ModuleSubGrid").slideDown(1000);
    			$("#lp-crs-accodion-module-"+currTr).removeClass("title_close");
				$("#lp-crs-accodion-module-"+currTr).addClass("title_open");
				$("#lp-crs-module-"+currTr).removeClass("ui-widget-content");
				$("#lp-crs-module-"+currTr).find(".set-height-column-right").css("border-bottom","0px");
    		} else {
    			$("#"+currTr+"ModuleSubGrid").hide();//css("display","none");
    			//$("#"+currTr+"ModuleSubGrid").css("visibility", 'hidden');
    			$("#"+currTr+"ModuleSubGrid").slideUp(1000);
    			$("#lp-crs-accodion-module-"+currTr).removeClass("title_open");
				$("#lp-crs-accodion-module-"+currTr).addClass("title_close");
				$("#lp-crs-module-"+currTr).removeClass("ui-widget-content");
				$("#lp-crs-module-"+currTr).addClass("ui-widget-content");
				//$("#lp-crs-module-"+currTr).find(".set-height-column-right").css("border-bottom","1px solid #cccccc"); commented for border line within select class in recertify popup

    		}
		}


		//var data = eval($("#lp-crs-accodion-module-"+currTr).attr("data"));


		//var classDetSec = this.paintTPCourseDetails(data,fromPage);
		$('.class-details-info > tbody > tr:last > td').find('.course-delivery-info').css('border-bottom','0px none');
		/*-- #34270 scroll pane for the dynamic contents in team assign learn popup --*/
		if($("#my-team-dialog #gview_tbl-paintCatalogContentResults").length) {
			$("body").data("learningcore").refreshJScrollPane("#my-team-dialog #gview_tbl-paintCatalogContentResults");
		}
		$("body").data("learningcore").refreshJScrollPane(".lnr-tainingplan-register");
		//$(".lnr-tainingplan-register").jScrollPane();
	 }catch(e){
			// to do
		}
	},


	paintTPCourseDetails : function(data, fromPage){
	 try{
		var crslength = data.courseDetails.length;
		var rhtml = "";
		var c;
		var courseId;
		var courseCode;
		var compStatus;
		var courseTitle;
		var isRequired;
		var registeredCnt;
		var courseList = '';
		this.currTheme = Drupal.settings.ajaxPageState.theme;
		var inc = 0;

		var obj = $("body").data("learningcore");
		var objStr = '$("body").data("learningcore")';
		rhtml += "<table cellpadding='0' cellspacing='0' style='width:100%'>";
		if(crslength > 0 ) {

			rhtml += "<tr><td><div class='course-level'>";
			rhtml += "<table border='0' cellpadding='0' class='enroll-show-morecourse' cellspacing='0'>";
			for(c=0; c < crslength ; c++){
				var rhtmlcls = obj.paintTPClassDetails(data.courseDetails[c]['class_details'], '', fromPage);
				courseId 	= data.courseDetails[c]['crs_id'];
				courseCode 	= data.courseDetails[c]['crs_code'];
				courseTitle = data.courseDetails[c]['crs_title'];
				courseDesc = data.courseDetails[c]['crs_desc'];
				isRequired = data.courseDetails[c]['is_required'];
				registeredCnt = data.courseDetails[c]['registered_cnt'];

				courseList += courseId;

				inc = inc + 1;
				if(inc < crslength) {
					courseList += ',';
				 }

				var param="data={'PrgId':'"+data.prgId+"','CourseId':'"+courseId+"','UserId':'"+data.userIdList+"'}";
	 			rhtml += '<tr class="set-height" id ="lp-crs-course-'+courseId+'">';
				rhtml += '<td>';
				if(fromPage == "MyTeam") {
					rhtml += '<a class="set-height-column-left title_open" id="lp-crs-accodion-course-'+courseId+'" href="javascript:void(0);" data="'+param+'" onclick=\''+objStr+'.accordionForCourseView('+courseId+', "MyTeam");\'>&nbsp;</a>';
					rhtml += '<div class="tp-register-select-class-crs-title"><div class="set-height-column-right"><span class="item-title limit-title-row"><span class="limit-title limit-title-mulcls-title lp-reg-class-title vtip" title="'+unescape(courseTitle).replace(/"/g, '&quot;')+'" href="javascript:void(0);">';
				} else {
					// rhtml += '<a class="set-height-column-left title_open" id="lp-crs-accodion-course-'+courseId+'" href="javascript:void(0);" data="'+param+'" onclick=\''+objStr+'.accordionForCourseView('+courseId+');\'>&nbsp;</a>';
					rhtml += '<div class="content-row-container cre_sys_obt_crs cls-course-title-code" id="content-row-container-'+courseId+'">';
					rhtml += '<div class="content-icon-container"><div title="' + Drupal.t("Course") + '" class="content-icon crs-icon vtip"></div></div>';
					// rhtml += '';
					// rhtml += '';
					// rhtml += '';
					rhtml += '<div class="content-detail-container"><div class="tp-register-select-class-crs-title"><div class="set-height-column-right"><span class="item-title limit-title-row content-title"><span class="limit-title limit-title-mulcls-title lp-reg-class-title vtip" title="'+unescape(courseTitle).replace(/"/g, '&quot;')+'" href="javascript:void(0);">';
				}
				if(fromPage == "MyTeam") {
					if(this.currTheme == "expertusoneV2"){
						rhtml += unescape(courseTitle);
						//rhtml += titleRestricted(unescape(courseTitle),80);
					}else{
						rhtml += unescape(courseTitle);
					}
				}else {
					rhtml += unescape(courseTitle);
				}
				rhtml += '</span></span>';
				if(fromPage != "MyTeam") {
					rhtml += '</div></div>';
				}
				rhtml += '<div class="course-info item-title-code">';
				rhtml += '<div class="line-item-container float-left" ><span title="'+unescape(courseCode).replace(/"/g, '&quot;')+'" class="vtip">'+titleRestrictionFadeoutImage(unescape(courseCode),'tp-view-course-code')+'</span></div>';
				rhtml += '<div class="line-item-container float-left" ><span class="pipeline">|</span>';
				rhtml += '<span>'+((isRequired =='Y')?''+Drupal.t("Mandatory")+'':''+Drupal.t("Optional")+'')+'</span></div>';
				if(data.isAdminSide != 'Y') {
					rhtml += '<div class="line-item-container float-left" ><span class="pipeline">|</span>';
					rhtml += '<span>'+((registeredCnt < 1)?''+Drupal.t("Not Registered")+'':''+Drupal.t("Registered")+'')+'</span></div>';
				}
				rhtml += '</div>';

				rhtml += '<div class="course-desc-info limit-desc-row">';
				rhtml += '<span class="limit-desc limit-desc-mulcls crs_desc vtip">'+unescape(courseDesc)+'</span>';
				if(fromPage == "MyTeam") {
					rhtml += '</div></div>';
					rhtml += '</td>';
					rhtml += '</tr><tr id='+courseId+'CourseSubGrid ><td colspan="4"><div id="course-details-'+courseId+'">'+rhtmlcls+'</div></td></tr>';
				} else {
					rhtml += '</div></div></div>';	//close tag for <div content-row-container
					rhtml += '<div class="course_list_content" id="' + courseId + 'CourseSubGrid"><div class="course-content-content-wrapper"><div id="course-details-'+courseId+'">'+rhtmlcls+'</div></div></div>';
				rhtml += '<div id="course_content_more_"'+courseId+' class="select-class-course-content-more course-content-more padbt5"><div class="show_more_less" id="lp-crs-accodion-course-'+courseId+'" href="javascript:void(0);" data="'+param+'" onclick=\''+objStr+'.accordionForCourseView('+courseId+');\'>'+Drupal.t('LBL3042')+'</div></div>';
					if(c!=(crslength-1))
						rhtml += '<div class="clsAfterMoreDiv">&nbsp;</div>';
					rhtml += '</td>';
					// console.log(rhtml);
					rhtml += '</tr>';
					// rhtml += '</tr><tr id='+courseId+'CourseSubGrid ><td colspan="4"><div id="course-details-'+courseId+'">'+rhtmlcls+'</div></td></tr>';
				}
				// rhtml += '</td>';
				// console.log(rhtml);
				rhtml += '</tr>';
				// rhtml += '</tr><tr id='+courseId+'CourseSubGrid ><td colspan="4"><div id="course-details-'+courseId+'">'+rhtmlcls+'</div></td></tr>';

		  }

		  rhtml += '</table>';
		  rhtml += '</div></td></tr>';
		}
		else{
			rhtml += "<tr><td class='no-item-found'>"+Drupal.t('There are no course(s) under this program.')+"</td></tr>";
		}
		rhtml += "</table>";

		$("#module-details-"+data.moduleId).html(rhtml);
		$("body").data("learningcore").refreshJScrollPane(".lnr-tainingplan-register");
		//$(".lnr-tainingplan-register").jScrollPane();
		//reinitialise jscrollane on description show/hide event
		$(".lnr-tainingplan-register .course-desc-info .more-icon-sec").click(function() {
			//$('.lnr-tainingplan-register').jScrollPane().data().jsp.reinitialise();
			$("body").data("learningcore").refreshJScrollPane(".lnr-tainingplan-register");
		});
		$('.limit-title-mulcls-title').trunk8(trunk8.tpmod_title);
		$('.limit-desc-mulcls').trunk8(trunk8.tpmod_desc);
		$('.lmt-lrp-crs-cls-title').trunk8(trunk8.class_detail_title);
		$('.lmt-lrp-crs-cls-desc').trunk8(trunk8.lp_detail_course_desc);
		resetFadeOutByClass('#lnr-tainingplan-register .cls-course-title-code','course-info','line-item-container','select');
		//resetFadeOutByClass('#lnr-tainingplan-register .class_list_container','cls-class-title-code','line-item-container','select');
		vtip();
		scrollBar_Refresh('tp-select-class');
	 }catch(e){
			// to do
			// console.log(e, e.stack);
		}
	},

	accordionForCourseView : function(courseId, fromPage) {
	 try{
		var currTr = courseId;

		if(!document.getElementById(currTr+"CourseSubGrid")) {
			if(fromPage == "MyTeam") {
				$("#lp-crs-course-"+currTr).after("<tr id='"+currTr+"CourseSubGrid'><td colspan='4'><div id='course-details-"+currTr+"' ></div></td></tr>");
				$("#lp-crs-accodion-course-"+currTr).removeClass("title_close");
				$("#lp-crs-accodion-course-"+currTr).addClass("title_open");
			} else {
				$("#lp-crs-course-"+currTr).find('#content-row-container-'+courseId).after('<div class="course_list_content" id="' + courseId + 'CourseSubGrid"><div class="course-content-content-wrapper"><div id="course-details-'+courseId+'"></div></div></div>');
				$("#lp-crs-accodion-course-"+currTr).text(Drupal.t("LBL3042"));
			}
			
			$("#"+currTr+"CourseSubGrid").show();//css("display","block");
			$("#lp-crs-course-"+currTr).removeClass("ui-widget-content");
			$("#"+currTr+"CourseSubGrid").slideDown(1000);
			$("#lp-crs-course-"+currTr).find(".set-height-column-right").css("border-bottom","0px");
		} else {
			var clickStyle = $("#"+currTr+"CourseSubGrid").css("display");
    		if((clickStyle == "none") || (clickStyle == 'undefined')) {
    			$("#"+currTr+"CourseSubGrid").show();//css("display","block");
    			$("#"+currTr+"CourseSubGrid").slideDown(1000);
				if(fromPage == "MyTeam") {
					$("#lp-crs-accodion-course-"+currTr).removeClass("title_close");
					$("#lp-crs-accodion-course-"+currTr).addClass("title_open");
				} else {
					$("#lp-crs-accodion-course-"+currTr).text(Drupal.t("LBL3042"));
				}
				$("#lp-crs-course-"+currTr).removeClass("ui-widget-content");
				$("#lp-crs-course-"+currTr).find(".set-height-column-right").css("border-bottom","0px");
    		} else {
    			$("#"+currTr+"CourseSubGrid").hide();//css("display","none");
    			$("#"+currTr+"CourseSubGrid").slideUp(1000);
				if(fromPage == "MyTeam") {
					$("#lp-crs-accodion-course-"+currTr).removeClass("title_open");
					$("#lp-crs-accodion-course-"+currTr).addClass("title_close");
				} else {
					$("#lp-crs-accodion-course-"+currTr).text(Drupal.t("LBL713"));
				}
				$("#lp-crs-course-"+currTr).removeClass("ui-widget-content");
				$("#lp-crs-course-"+currTr).addClass("ui-widget-content");
				$("#lp-crs-course-"+currTr).find(".set-height-column-right").css("border-bottom","0px solid #cccccc");
    			$('.set-height-column-right > tbody > tr:last > td').find('.set-height-column-right').css('border-bottom','0px none');
    		}
		}


		var data = eval($("#lp-crs-accodion-course-"+currTr).attr("data"));


		var classDetSec = this.getClassListForCourse(data, fromPage);
		//$(".lnr-tainingplan-register").jScrollPane();
		$("body").data("learningcore").refreshJScrollPane(".lnr-tainingplan-register");
		$('.class-details-info > tbody > tr:last > td').find('.course-delivery-info').css('border-bottom','0px none');
	 	$('.limit-title-mulcls-title').trunk8(trunk8.tpmod_title);
		$('.limit-desc-mulcls').trunk8(trunk8.tpmod_desc);
		if($("#my-team-dialog #gview_tbl-paintCatalogContentResults").length) {
			$("body").data("learningcore").refreshJScrollPane("#my-team-dialog #gview_tbl-paintCatalogContentResults");
		}
		if($('.lnr-tainingplan-register').length > 0) {
			scrollBar_Refresh('tp-select-class');
		}
	 }catch(e){
			// to do
			// console.log(e, e.stack);
		}
	},

	getClassListForCourse : function(data, fromPage){
	 try{
		var prgId = data.PrgId;
		var courseId = data.CourseId;
		var userId = data.UserId;
		//alert(data.toSource())

		if($("#course-details-"+courseId).html() == ''){
			this.createLoader("course-details-"+courseId);
			var url = this.constructUrl("ajax/trainingplan/class-list/" + courseId + "/" + userId);
			var obj = this;
			$.ajax({
				type: "POST",
				url: url,
				//data:  '',//Commented by ganeshbabuv to avoid the data value as null when invoke the ajax callback for implement salesforce cookieless option #0054508 on 30th Sep 2015 10:40 AM 
				success: function(result){

					obj.paintTPClassDetails(result,data,fromPage);
					$('.class-details-info > tbody > tr:last > td').find('.course-delivery-info').css('border-bottom','0px none');
					obj.destroyLoader("course-details-"+courseId);
					/* /*  Commented For Multiple class selection #0038560
					 * for(c=0; c < result.length ; c++){
							var enrolledId = result[c]['class_details']['enrolled_id'];
							if(enrolledId.enrolled_id ) {
								if($('input[name="'+courseId+'-clsregister"]:radio').is(":checked") == true)
								{
									$('input[name="'+courseId+'-clsregister"]:radio').attr('disabled',true);
								}
							}
						} */

						/*-- #34270 scroll pane for the dynamic contents in team assign learn popup --*/
						if($("#my-team-dialog #gview_tbl-paintCatalogContentResults").length) {
							$("body").data("learningcore").refreshJScrollPane("#my-team-dialog #gview_tbl-paintCatalogContentResults");
						}

				}
		    });
		}
	 }catch(e){
			// to do
		}
	},

	paintTPClassDetails : function(result,data,fromPage){
	 try{
		var isadminsidefield = $('#isadminsidefield').val();
		// console.log('paintTPClassDetails result', result);
		var obj = $("body").data("learningcore");
		var objStr = '$("body").data("learningcore")';
		var rhtml ='';

		rhtml += "<div class='class-level'>";
		rhtml += "<table border='0' cellpadding='0' class='class-details-info' cellspacing='0'>";
		if(result.length > 0) {

			for(c=0; c < result.length ; c++){
				var courseId 	= result[c]['crs_id'];
				var classId 	= result[c]['cls_id'];
				var classCode 	= unescape(result[c]['cls_code']);
				var classTitle 	= unescape(result[c]['cls_title']);
				var classDesc 	= unescape(result[c]['cls_short_description']);
				var deliveryTypeCode 	= result[c]['delivery_type_code'];
				var deliveryTypeName 	= result[c]['delivery_type_name'];
				var language 	= result[c]['language'];
				var sessionId   = result[c]['session_id'];
				var countryName = result[c]['country_name'];
				var locationName = result[c]['location'];
				var locationAddr1 = result[c]['loationaddr1'];
				var locationAddr2 = result[c]['locationaddr2'];
				var locationCity = result[c]['locationcity'];
				var locationState = result[c]['locationstate'];
				var locationZip = result[c]['locationzip'];
				Drupal.t('Web-based');
				Drupal.t('Virtual Class');
				Drupal.t('Video');
				Drupal.t('Classroom');

				var sessionStartDate = result[c]['sess_start_date'];
				if(result[c]['enrolled_id'].length > 0){
					var enrolledId = result[c]['enrolled_id'][0];
				}else{
					var enrolledId = '';
				}
				
				if(result[c]['enrolled_last_comp_class'].length > 0){
					var last_comp_enrolledId = result[c]['enrolled_last_comp_class'][0].enrolled_id;
				}else{
					var last_comp_enrolledId = '';
				}
				
				var waitList = result[c]['waitlist_status'];
				var availableSeats = result[c]['availableSeats'];


				var checkedValue = "";

				if(isadminsidefield != 'Y') {
					if(enrolledId.comp_status == 'lrn_crs_cmp_cmp') {
						checkedValue = "checked";
					}
				}

				if(result.length == 1) {
					checkedValue = "checked";
				}


				var startDate = '';
				var startDateVtip = '';
				var sessioncount = 1; // 072871: Catalog - Select Class pop up - Time zone pop up window is breaking
				if(result[c]['session_details'].length > 0) {
					var sDay = result[c]['session_details'][0]['start_date'];
					var sTime = result[c]['session_details'][0]['start_time'];
					var sTimeForm = result[c]['session_details'][0]['start_form'];
                    
						if(result[c]['session_details'].length > 1) {
							sessLenEnd = result[c]['session_details'].length-1;
							var eDay = result[c]['session_details'][sessLenEnd]['start_date'];
							var eTime = result[c]['session_details'][sessLenEnd]['end_time'];
							var eTimeForm = result[c]['session_details'][sessLenEnd]['end_form'];

							startDate = sDay +' '+ sTime+' '+'<span class="time-zone-text">'+sTimeForm+'</span>'+ ' ' +Drupal.t('LBL621')+ ' ' +eDay+ ' ' +eTime+' <span class="time-zone-text">'+eTimeForm+'</span>';
							startDateVtip =  sDay +' '+ sTime+' '+sTimeForm+' ' +Drupal.t('LBL621')+ ' ' +eDay+ ' ' +eTime+' '+eTimeForm;
						}else {

							var eTime = result[c]['session_details'][0]['end_time'];
							var eTimeForm = result[c]['session_details'][0]['end_form'];

							startDate = sDay +' '+ sTime+' '+'<span class="time-zone-text">'+sTimeForm+'</span>'+ ' ' +Drupal.t('LBL621')+ ' ' +eTime+' <span class="time-zone-text">'+eTimeForm+'</span>';
							startDateVtip =  sDay +' '+ sTime+' '+sTimeForm+' ' +Drupal.t('LBL621')+ ' ' +eTime+' '+eTimeForm;
						}

                     if(result[c]['delivery_type_code']=='lrn_cls_dty_ilt'){
                    	 var sDay = result[c]['session_details'][0]['start_date'];
     					var sTime = result[c]['session_details'][0]['start_time'];
     					var sTimeForm = result[c]['session_details'][0]['start_form'];
     					var usDay = result[c]['session_details'][0]['ilt_start_date'];
     					var usTime = result[c]['session_details'][0]['ilt_start_time'];
     					var usTimeForm = result[c]['session_details'][0]['ilt_start_form'];
     					var loc_tz = result[c]['session_details'][0]['loc_tz'];
     					var loc_tzcode = result[c]['session_details'][0]['loc_tzcode'];
     					var user_tz = result[c]['session_details'][0]['user_tz'];
     					var user_tzcode = result[c]['session_details'][0]['user_tzcode'];
     						if(result[c]['session_details'].length > 1) {
     							sessLenEnd = result[c]['session_details'].length-1;
     							var eDay = result[c]['session_details'][sessLenEnd]['start_date'];
     							var eTime = result[c]['session_details'][sessLenEnd]['end_time'];
     							var eTimeForm = result[c]['session_details'][sessLenEnd]['end_form'];
     							var uDay = result[c]['session_details'][sessLenEnd]['ilt_start_date'];
     							var uTime = result[c]['session_details'][sessLenEnd]['ilt_end_time'];
     							var uTimeForm = result[c]['session_details'][sessLenEnd]['ilt_end_form'];
                                
     							startDate = sDay+' '+ sTime+' '+'<span class="time-zone-text">'+sTimeForm+'</span>'+ ' ' +Drupal.t('LBL621')+ ' ' +eDay+ ' ' +eTime+' <span class="time-zone-text">'+eTimeForm+'</span>'+ ' ' +user_tz+' '+user_tzcode+'';
     							startDateVtip =  sDay +' '+ sTime+' '+sTimeForm+' ' +Drupal.t('LBL621')+ ' ' +eDay+ ' ' +eTime+' '+eTimeForm+ ' ' +user_tz+' '+user_tzcode;
     							sessstartDate = usDay +' '+ usTime+' '+'<span class="time-zone-text">'+usTimeForm+'</span>'+ ' ' +Drupal.t('LBL621')+ ' ' +uDay+ ' ' +uTime+' <span class="time-zone-text">'+uTimeForm+'</span>'+ ' ' +loc_tz+' '+loc_tzcode+'';
     							sessioncount = 2;
     						}else {

     							var eTime = result[c]['session_details'][0]['end_time'];
     							var eTimeForm = result[c]['session_details'][0]['end_form'];
     							var uTime = result[c]['session_details'][0]['ilt_end_time'];
     							var uTimeForm = result[c]['session_details'][0]['ilt_end_form'];

     							startDate = sDay +' '+ sTime+' '+'<span class="time-zone-text">'+sTimeForm+'</span>'+ ' ' +Drupal.t('LBL621')+ ' ' +eTime+' <span class="time-zone-text">'+eTimeForm+'</span>'+ ' ' +user_tz+' '+user_tzcode+'';
     							startDateVtip =  sDay +' '+ sTime+' '+sTimeForm+' ' +Drupal.t('LBL621')+ ' ' +eTime+' '+eTimeForm+ ' ' +user_tz+' '+user_tzcode;
     							sessstartDate = usDay +' '+ usTime+' '+'<span class="time-zone-text">'+usTimeForm+'</span>'+ ' ' +Drupal.t('LBL621')+ ' ' +uTime+' <span class="time-zone-text">'+uTimeForm+'</span>'+ ' ' +loc_tz+' '+loc_tzcode+'';
     							
     						}
                     }

					var inc = 0;
					var passParams = "[";

					var sessLen = result[c]['session_details'].length;
					// console.log('session_details', result[c]['session_details']);
					$(result[c]['session_details']).each(function(){
						// console.log('session_details', $(this));
						inc=inc+1;
						passParams += "{";
						 passParams += "'sessionTitle':'"+(($(this).attr("session_title")) ? $(this).attr("session_title") : '')+"',";
						 passParams += "'sessionDay':'"+$(this).attr("session_day")+"',";
						 passParams += "'sessionSDate':'"+$(this).attr("start_date")+"',";
						 passParams += "'start_time':'"+$(this).attr("start_time")+"',";
						 passParams += "'end_time':'"+$(this).attr("end_time")+"',";
						 passParams += "'sessionSDayForm':'"+$(this).attr("start_form")+"',";
						 if(deliveryTypeCode == 'lrn_cls_dty_ilt'){
							 passParams += "'session_id':'"+$(this).attr("session_id")+"',";
							 passParams += "'iltsessionDay':'"+$(this).attr("ilt_session_day")+"',";
							 passParams += "'iltsessionSDate':'"+$(this).attr("ilt_start_date")+"',";
							 passParams += "'iltstart_time':'"+$(this).attr("ilt_start_time")+"',";
							 passParams += "'iltend_time':'"+$(this).attr("ilt_end_time")+"',";
							 passParams += "'iltsessionSDayForm':'"+$(this).attr("ilt_start_form")+"',";
							 passParams += "'loc_tz':'"+$(this).attr("loc_tz")+"',";
							 passParams += "'loc_tzcode':'"+$(this).attr("loc_tzcode")+"',";
							 passParams += "'user_tz':'"+$(this).attr("user_tz")+"',";
							 passParams += "'user_tzcode':'"+$(this).attr("user_tzcode")+"',";
							 passParams += "'iltsessionEDayForm':'"+$(this).attr("ilt_end_form")+"',";
						}
						 passParams += "'sessionEDayForm':'"+$(this).attr("end_form")+"',";
						 passParams += "'sessionInstructorName':'"+$(this).attr("sessionInstructorName")+"'";
						 passParams += "}";
						 if(inc < sessLen) {
							 passParams += ",";
						 }

					});
					passParams += "]";

				}else{
					var passParams="''";
				}
				var LocationNameArg = ((locationName != null) ? ((unescape(locationName).replace(/"/g, '&quot;')).replace(/'/g, "\\'")) : locationName);
				var LocationAdd1Arg = ((locationAddr1!= null) ? ((unescape(locationAddr1).replace(/"/g, '&quot;')).replace(/'/g, "\\'")) : locationAddr1);
				var LocationAdd2Arg = ((locationAddr2 != null) ? ((unescape(locationAddr2).replace(/"/g, '&quot;')).replace(/'/g, "\\'")) : locationAddr2);
				var LocationcityArg = ((locationCity != null) ? ((unescape(locationCity).replace(/"/g, '&quot;')).replace(/'/g, "\\'")) : locationCity);
				var param = "data={'classId':'"+classId+"','classCode':'"+escape(classCode)+"','classDesc':'"+escape(classDesc)+"','language':'"+language+"'," +
			    		"'sessionId':'"+sessionId+"','deliveryTypeCode':'"+deliveryTypeCode+"','countryName':'"+countryName+"','locationName':'"+LocationNameArg+"','locationAddr1':'"+LocationAdd1Arg+"','locationAddr2':'"+LocationAdd2Arg+"'," +
	    				"'locationCity':'"+LocationcityArg+"','locationState':'"+locationState+"','locationZip':'"+locationZip+"'," +
   						"'sessionDetails':"+passParams+"}";


	 			rhtml += '<tr class="set-height ui-widget-content" id ="lp-class-'+classId+'">';
	 			if(last_comp_enrolledId!=''){
					if(last_comp_enrolledId == enrolledId.enrolled_id){
						checkedValue = (waitList==0 && availableSeats==0)?checkedValue+' disabled="disabled"': checkedValue;
					}else{
						checkedValue = '';
					}
				}else{
					checkedValue = (waitList==0 && availableSeats==0)?checkedValue+' disabled="disabled"': checkedValue;
				}
				if(fromPage == "MyTeam") {
					if(deliveryTypeCode =='lrn_cls_dty_vcl' || deliveryTypeCode =='lrn_cls_dty_ilt')  {
						rhtml += '<td class="course-sub-class-detail"><table border="0" width="100%" cellpadding="0" cellspacing="0"><tr><td valign="top" class="course-detail-col1">';
						rhtml += '<a id="lp-class-accodion-'+classId+'" href="javascript:void(0);" data="'+param+'" class="title_close" onclick=\''+objStr+'.accordionForClassView('+classId+', "'+fromPage+'");\'>&nbsp;</a>';
						rhtml += '<div class="tp-register-iltvcl-select-class limit-title-row"><span class="lp-reg-class-title limit-title limit-title-mulcls-title vtip" title="'+unescape(classTitle).replace(/"/g, '&quot;')+'" href="javascript:void(0);">';
						rhtml += classTitle; /*titleRestricted(classTitle,30);*/
						rhtml += '</span></div></td>';
						if(deliveryTypeCode =='lrn_cls_dty_ilt' && loc_tz!=user_tz ){
						rhtml += '<td valign="top" class="course-detail-col2 vtip" title="'+sDay+' '+sTime+' '+sTimeForm+' to '+eTime+' '+eTimeForm+' '+user_tz+' '+user_tzcode+'"><div><span style="display: inline-block;">'+titleRestrictionFadeoutImage(startDate,'exp-sp-lnrenrollment-timezone', 20)+'';
						}
						else{
							rhtml += '<td valign="top" class="course-detail-col2"><span>'+startDate+'';
						}
						rhtml += '</span>'; 
						if(deliveryTypeCode =='lrn_cls_dty_ilt' && loc_tz!=user_tz ){
							rhtml += qtip_popup_paint(classId,sessstartDate,sessioncount); 
						}
						rhtml += '</div></td>';

						//rhtml += '<input class="rButtonclass" type="radio" id="'+courseId+'-clsregister" name="'+courseId+'-clsregister" value="'+classId+'">';
						//checkedValue = (waitList==0 && availableSeats==0)?checkedValue+' disabled="disabled"': checkedValue;
						rhtml += '<td valign="top" class="course-detail-col3"><input '+checkedValue+' type="radio" id="'+courseId+'-'+classId+'-clsregister" name="'+courseId+'-clsregister" value="'+classId+'"></td>';
					} else {
						rhtml += '<td class="course-sub-class-detail"><table border="0" width="100%" cellpadding="0" cellspacing="0"><tr><td valign="top" colspan="2" class="course-detail-col1-new">';
						rhtml += '<a id="lp-class-accodion-'+classId+'" href="javascript:void(0);" data="'+param+'" class="title_close" onclick=\''+objStr+'.accordionForClassView('+classId+', "'+fromPage+'");\'>&nbsp;</a>';
						rhtml += '<div class="tp-register-select-class limit-title-row"><span class="lp-reg-class-title limit-title limit-title-mulcls-title vtip" title="'+unescape(classTitle).replace(/"/g, '&quot;')+'" href="javascript:void(0);">';
						rhtml += classTitle; /*titleRestricted(classTitle,30);*/
						rhtml += '</span></div></td>';
						//rhtml += '<td valign="top" class="course-detail-col2"><span>'+startDate+'</span></td>';
						//rhtml += '<input class="rButtonclass" type="radio" id="'+courseId+'-clsregister" name="'+courseId+'-clsregister" value="'+classId+'">';
						//checkedValue = (waitList==0 && availableSeats==0)?checkedValue+' disabled="disabled"': checkedValue;
						rhtml += '<td valign="top" class="course-detail-col3"><input '+checkedValue+' type="radio" id="'+courseId+'-'+classId+'-clsregister" name="'+courseId+'-clsregister" value="'+classId+'"></td>';
					}
					rhtml += '</tr></table>';
					rhtml += '<div class="course-delivery-info item-title-code cls-class-title-code">';
					//rhtml += '<span title="'+unescape(classCode)+'" class="vtip">'+titleRestrictionFadeoutImage(unescape(classCode),'tp-view-class-code')+'</span>';
					rhtml += '<div class="line-item-container float-left myteam"><span class="vtip" title="'+unescape(classCode).replace(/"/g, '&quot;')+'">'+titleRestrictionFadeoutImage(unescape(classCode),'tp-view-class-code')+'</span></div>';
					rhtml += '<div class="line-item-container float-left myteam">';
					rhtml += '<span class="pipeline">|</span>';
				} else {
					rhtml += '<td class="course-sub-class-detail"><div class="course-class-content-wrapper"><div class="class-list padtp5" id="class-container-loader-'+classId+'"><div class="class_list_container"><div class="content-row-container id="content-row-container-class-'+classId+'" '+deliveryTypeCode+'">';
				}
				var row_det_type;
				var iconClass;
				if (deliveryTypeCode == '' || deliveryTypeCode == '-') {
					return '<span>&nbsp;</span>';
				}
				else if(deliveryTypeCode=='lrn_cls_dty_wbt'){
					row_det_type = Drupal.t("Web-based");
					iconClass = 'wbt-icon';
		        }
		        else if(deliveryTypeCode=='lrn_cls_dty_vcl'){
		        	row_det_type = Drupal.t("Virtual Class");
					iconClass = 'vcl-icon';
		        }
		        else if(deliveryTypeCode=='lrn_cls_dty_ilt'){
		        	row_det_type = Drupal.t("Classroom");
					iconClass = 'ilt-icon';
		        }
		        else if(deliveryTypeCode=='lrn_cls_dty_vod'){
		        	row_det_type = Drupal.t("Video");
					iconClass = 'vod-icon';
		        }
				if(fromPage == "MyTeam") {
					rhtml += '<span>'+row_det_type+'</span>';
					rhtml += '</div>';
					if(deliveryTypeCode=='lrn_cls_dty_ilt') {
						rhtml += '<div class="line-item-container float-left myteam">';
						rhtml += '<span class="pipeline">|</span>';
						rhtml += '<span>'+unescape(locationName)+'</span>';
						rhtml += '</div>';
					}
					if(deliveryTypeCode=='lrn_cls_dty_ilt' || deliveryTypeCode=='lrn_cls_dty_vcl') {
						if(waitList > 0) {
							rhtml += '<div class="line-item-container float-left myteam">';
							rhtml += '<span class="pipeline">|</span>';
							if(waitList==1)
								rhtml += '<span>'+waitList+" "+Drupal.t("LBL126")+'</span>';
							else
								rhtml += '<span>'+waitList+" "+Drupal.t("LBL127")+'</span>';
							rhtml += '</div>';
						}else if(waitList == 0 && availableSeats==0){
							rhtml += '<div class="line-item-container float-left myteam">';
							rhtml += '<span class="pipeline">|</span>';
							rhtml += '<span>'+Drupal.t("LBL106")+" "+Drupal.t("LBL046")+'</span>';
							rhtml += '</div>';
						}else{
							rhtml += '<div class="line-item-container float-left myteam">';
							rhtml += '<span class="pipeline">|</span>';
							if(availableSeats==1)
								rhtml += '<span>'+availableSeats+" "+Drupal.t("LBL052")+'</span>';
							else
								rhtml += '<span>'+availableSeats+" "+Drupal.t("LBL053")+'</span>';
							rhtml += '</div>';
						}
					}
					if(enrolledId.comp_status == 'lrn_crs_cmp_cmp' || enrolledId.comp_status == 'lrn_crs_cmp_enr') {
						rhtml += '<div class="line-item-container float-left myteam">';
						rhtml += '<span class="pipeline">|</span>';
						var regClassStatus = (enrolledId.comp_status == 'lrn_crs_cmp_cmp') ? Drupal.t("Completed") : Drupal.t("Registered");
						rhtml += '<span>'+regClassStatus+'</span>';
						rhtml += '</div>';
					}
					rhtml += '</div>';
					rhtml += '</td>';
				} else {	// else of fromPage == "MyTeam"
					var classIcon = '<div class="content-icon-container"><div title="'+row_det_type+'" class="content-icon '+iconClass+' vtip"></div></div>';
					// console.log('classIcon', classIcon);
					rhtml += classIcon;
					var classDetail = '<div class="content-detail-container"><div class="content-title vtip limit-title-row"><span title="'+unescape(classTitle).replace(/"/g, '&quot;')+'" class="limit-title lmt-lrp-crs-cls-title vtip">'+classTitle+'</span></div>';
					// console.log('classDetail', classDetail);
					var classInfo = '<div class="course-delivery-info item-title-code content-detail-code">';
					classInfo += '<div class="line-item-container float-left" ><span class="vtip" title="'+unescape(classCode).replace(/"/g, '&quot;')+'">'+titleRestrictionFadeoutImage(unescape(classCode),'tp-view-class-code')+'</span></div>';
					// classInfo += '<span class="pipeline">|</span>';
					// classInfo += '<span>'+row_det_type+'</span>';
					if(deliveryTypeCode=='lrn_cls_dty_ilt') {
						classInfo += '<div class="line-item-container float-left" >';
						classInfo += '<span class="pipeline">|</span>';
						classInfo += '<span class="vtip" title="'+unescape(locationName).replace(/"/g, '&quot;')+'">'+titleRestrictionFadeoutImage(unescape(locationName),'tp-view-location-selectbox')+'</span>';
						classInfo += '</div>';
					}
					if(deliveryTypeCode=='lrn_cls_dty_ilt' || deliveryTypeCode=='lrn_cls_dty_vcl') {
						if(waitList > 0) {
							classInfo += '<div class="line-item-container float-left" >';
							classInfo += '<span class="pipeline">|</span>';
							if(waitList==1) {
								classInfo += '<span>'+waitList+" "+Drupal.t("LBL126")+'</span>';
							} else {
								classInfo += '<span>'+waitList+" "+Drupal.t("LBL127")+'</span>';
							}
							classInfo += '</div>';
						} else if(waitList == 0 && availableSeats==0) {
							classInfo += '<div class="line-item-container float-left" >';
							classInfo += '<span class="pipeline">|</span>';
							classInfo += '<span>'+Drupal.t("LBL106")+" "+Drupal.t("LBL046")+'</span>';
							classInfo += '</div>';
						} else {
							classInfo += '<div class="line-item-container float-left" >';
							classInfo += '<span class="pipeline">|</span>';
							var seats_left_dis = availableSeats+" "+Drupal.t("LBL052");
							if(availableSeats==1) {
								classInfo += '<span class="vtip" title="'+unescape(availableSeats).replace(/"/g, '&quot;')+'">'+titleRestrictionFadeoutImage(unescape(seats_left_dis),'tp-view-class-seatsleft')+'</span>';
							} else {
								classInfo += '<span class="vtip" title="'+unescape(availableSeats).replace(/"/g, '&quot;')+'">'+titleRestrictionFadeoutImage(unescape(seats_left_dis),'tp-view-class-seatsleft')+'</span>';
							}
							classInfo += '</div>';
						}
					}
					if(enrolledId.comp_status == 'lrn_crs_cmp_cmp' || enrolledId.comp_status == 'lrn_crs_cmp_enr') {
						classInfo += '<div class="line-item-container float-left" >';
						classInfo += '<span class="pipeline">|</span>';
						var regClassStatus = (enrolledId.comp_status == 'lrn_crs_cmp_cmp') ? Drupal.t("Completed") : Drupal.t("Registered");
						classInfo += '<span>'+regClassStatus+'</span>';
						classInfo += '</div>';
					}
					var sessionInfo = '';
					var classRegisterStatus = '';
					if(deliveryTypeCode =='lrn_cls_dty_vcl' || deliveryTypeCode =='lrn_cls_dty_ilt') {
						if(deliveryTypeCode =='lrn_cls_dty_ilt' && loc_tz!=user_tz ) {
							sessionInfo += '<div class="float-left" >';
							sessionInfo += '<span valign="top" class="vakku course-detail-col2 clsWithTz vtip" title="'+sDay+' '+sTime+' '+sTimeForm+' to '+eTime+' '+eTimeForm+' '+user_tz+' '+user_tzcode+'"><div><span style="display: inline-block;">'+titleRestrictionFadeoutImage(startDate,'exp-sp-lnrenrollment-timezone', 20)+'';
							sessionInfo += '</span>';
							sessionInfo += qtip_popup_paint(classId,sessstartDate,sessioncount);					
							sessionInfo += '</div></span>';	
							sessionInfo += '</div>';
						} else {
							sessionInfo += '<div class="float-left" >';
							sessionInfo += '<span valign="top" class="vakku course-detail-col2 vtip" title="'+startDateVtip+'">'+titleRestrictionFadeoutImage(startDate,'exp-sp-lnrenrollment-timezone', 20)+'';
							sessionInfo += '</span>'; 		
							sessionInfo += '</div>';
						}
						classRegisterStatus += '<div valign="top" class="content-action-container"><input '+checkedValue+' type="radio" id="'+courseId+'-'+classId+'-clsregister" name="'+courseId+'-clsregister" value="'+classId+'"></div>';
					} else {
						classRegisterStatus += '<div valign="top" class="content-action-container"><input '+checkedValue+' type="radio" id="'+courseId+'-'+classId+'-clsregister" name="'+courseId+'-clsregister" value="'+classId+'"></div>';
					}
					if(sessionInfo != '') {
						classInfo += '<div class="line-item-container float-left" >';
						classInfo += '<span class="pipeline">|</span>';
						classInfo += sessionInfo;
						classInfo += '</div>';
					}
					classInfo += '</div>';
					classDetail += classInfo;
					classDetail += '<div class="limit-desc-row content-description padbt5 '+deliveryTypeCode+'"><div class="limit-desc lmt-lrp-crs-cls-desc vtip">'+classDesc+'</div></div>';
					classDetail += '</div>';
					rhtml += classDetail;
					rhtml += classRegisterStatus;
					rhtml += '</div>';
					var showMoreLess = '<div class="class_list_content"><div class="class-content-content-wrapper"><div id="class_content_more_'+classId+'" class="class-content-more padbt5"><div id="lp-class-accodion-'+classId+'" href="javascript:void(0);" data="'+param+'" class="show_more_less" onclick=\''+objStr+'.accordionForClassView('+classId+');\'>'+Drupal.t("LBL713")+'</div></div></div></div>';
					var moreClassInfo = '<div class="class-content-wrapper class-content-content-wrapper border-box-cnt-tp '+deliveryTypeCode+'"><div class="content-list"><div id="'+classId+'ClassSubGrid" style="display: none;"><div id="class-details-'+classId+'" class="class-level"></div></div></div></div>';
					rhtml += moreClassInfo;
					rhtml += showMoreLess;
					rhtml += '</div></div></div></td>';				
					rhtml += '</div></td>';
				}
				rhtml += '</tr>';
			}

		} else {
			rhtml += '<tr>';
			rhtml += '<td class="no-item-found">'+SMARTPORTAL.t("There are no classes under this course")+'</td>';
			rhtml += '</tr>';
		}
	  rhtml += '</table>';
	  rhtml += '</div>';
	 // alert('final output '+ rhtml)
	  return rhtml;
	  vtip();
	  //$("#course-details-"+data.CourseId).html(rhtml);
	  //$('.class-details-info > tbody > tr:last > td').find('.course-delivery-info').css('border-bottom','0px none');
	 } catch(e) {
			// to do
			// console.log(e, e.stack);
		}
	},


	accordionForClassView : function(classId, fromPage) {
		try{
		var currTr = classId;

		if(!document.getElementById(currTr+"ClassSubGrid")) {
			if(fromPage == "MyTeam") {
				$("#lp-class-"+currTr).after("<tr id='"+currTr+"ClassSubGrid'><td colspan='4'><div id='class-details-"+currTr+"' class='class-level'></div></td></tr>");
				$("#lp-class-accodion-"+currTr).removeClass("title_close");
				$("#lp-class-accodion-"+currTr).addClass("title_open");
				$("#"+currTr+"ClassSubGrid").find(".class-level").css("border-bottom","1px solid #cccccc");
			} else {
				$("#lp-class-"+currTr).find('#content-row-container-class-'+currTr).after("<div class='class-content-wrapper border-box-cnt-tp'><div class='content-list'><div id='"+currTr+"ClassSubGrid'><div id='class-details-"+currTr+"' class='class-level'></div></div></div></div>");
				$("#lp-class-accodion-"+currTr).text(Drupal.t("LBL3042"));
			}
			
			$("#"+currTr+"ClassSubGrid").show();//css("display","block");
			$("#lp-class-"+currTr).removeClass("ui-widget-content");
			$("#"+currTr+"ClassSubGrid").slideDown(1000);
			$("#lp-class-"+currTr).find(".course-delivery-info").css("border-bottom","0px");
			//$("#"+currTr+"ClassSubGrid").find(".class-level").css("margin-left","16px");
			$('.class-details-info > tbody > tr:last > td').find('.class-level').css('border-bottom','0px none');
		} else {
			var clickStyle = $("#"+currTr+"ClassSubGrid").css("display");
			var getWidth=$(".course-class-content-wrapper").find(".content-row-container").width();
    		if((clickStyle == "none") || (clickStyle == 'undefined')) {
    			$("#"+currTr+"ClassSubGrid").show();//css("display","block");
    			$("#"+currTr+"ClassSubGrid").slideDown(1000);
				if(fromPage == "MyTeam") {
					$("#lp-class-accodion-"+currTr).removeClass("title_close");
					$("#lp-class-accodion-"+currTr).addClass("title_open");
					$("#"+currTr+"ClassSubGrid").find(".class-level").css("border-bottom","1px solid #cccccc");
				} else {
					$("#lp-class-accodion-"+currTr).text(Drupal.t("LBL3042"));
					
				}
				$("#lp-class-"+currTr).removeClass("ui-widget-content");
				$("#lp-class-"+currTr).find(".course-delivery-info").css("border-bottom","0px");
				//$("#"+currTr+"ClassSubGrid").find(".class-level").css("margin-left","16px");
				$('.class-details-info > tbody > tr:last > td').find('.class-level').css('border-bottom','0px none');
				//$("#lp-class-"+currTr).find(".course-class-content-wrapper .content-detail-container").removeClass("expand-content-detail-container");
				//$("#lp-class-"+currTr).find(".course-class-content-wrapper .content-detail-container").addClass("expand-content-detail-container");
				if(Drupal.settings.widget.widgetCallback==true){
				$("#lp-class-accodion-"+currTr).parents("tr").find(".course-class-content-wrapper .class_list_container > div").css("width",getWidth);
				}
    		} else {
    			$("#"+currTr+"ClassSubGrid").hide();//css("display","none");
    			$("#"+currTr+"ClassSubGrid").slideUp(1000);
				if(fromPage == "MyTeam") {
					$("#lp-class-accodion-"+currTr).removeClass("title_open");
					$("#lp-class-accodion-"+currTr).addClass("title_close");
				} else {
					$("#lp-class-accodion-"+currTr).text(Drupal.t("LBL713"));
				}
				$("#lp-class-"+currTr).removeClass("ui-widget-content");
				$("#lp-class-"+currTr).addClass("ui-widget-content");
				if(fromPage == "MyTeam") {
					$("#lp-class-"+currTr).find(".course-delivery-info").css("border-bottom","1px solid #cccccc");
					$('.class-details-info > tbody > tr:last > td').find('.course-delivery-info').css('border-bottom','0px none');
				}
				//$("#lnr-tainingplan-register .course-class-content-wrapper .content-row-container").find(".content-detail-container").removeClass("expand-content-detail-container");
    		    //$("#lnr-tainingplan-register .course-class-content-wrapper .content-row-container").find(".content-detail-container").addClass("collapse-content-detail-container");
    		    //$("#lp-class-"+currTr).find(".course-class-content-wrapper .content-detail-container").removeClass("expand-content-detail-container");
    		   // $("#lp-class-accodion-"+currTr).parents("tr").find(".course-class-content-wrapper .content-detail-container").removeAttr("style");
				if(Drupal.settings.widget.widgetCallback==true){
    		     $("#lp-class-accodion-"+currTr).parents("tr").find(".course-class-content-wrapper .class_list_container > div").css("width",getWidth);
				}
    			}
		}


		var data = eval($("#lp-class-accodion-"+currTr).attr("data"));

		var classDetSec = this.paintTPClassSessionDetails(data, fromPage);
		if(fromPage == "MyTeam") {
			$('.class-details-info > tbody > tr:last > td').find('.course-delivery-info').css('border-bottom','0px none');
			$('.class-details-info > tbody > tr.set-height:last td').find('.course-delivery-info').css('border-bottom','0px');
			$('.class-details-info > tbody > tr:last > td').find('.cls-description').css('border-bottom','0px none');
		}
		/*-- #34270 scroll pane for the dynamic contents in team assign learn popup --*/
		if($("#my-team-dialog #gview_tbl-paintCatalogContentResults").length) {
			$("body").data("learningcore").refreshJScrollPane("#my-team-dialog #gview_tbl-paintCatalogContentResults");
		}
		$('.lmt-lrp-crs-cls-title').trunk8(trunk8.class_detail_title);
		$('.lmt-lrp-crs-cls-desc').trunk8(trunk8.lp_detail_course_desc);
		$("body").data("learningcore").refreshJScrollPane(".lnr-tainingplan-register");
		
		//$(".lnr-tainingplan-register").jScrollPane();
		}catch(e){
			// to do
			// console.log(e, e.stack);
		}
	},


	paintTPClassSessionDetails : function(data, fromPage){
		try{
			// console.log(data);
		var oHtml = '';
		if(fromPage == "MyTeam") {
			oHtml += "<table cellpadding='2' class='sub-course-class' cellspacing='2' width='100%'>";
		} else {
			oHtml += '<div class="class-content-wrapper border-box-cnt-tp">';
		}
		if(data.classCode && fromPage == "MyTeam") {
			oHtml += "<tr><td class=''><div class='viewlrn-cls-lbl'>"+Drupal.t("LBL263")+":</div><div class='viewlrn-cls-lbl-val vtip' title='"+unescape(data.classCode)+"'> "+titleRestrictionFadeoutImage(unescape(data.classCode),'assignlearn-tp-cls-title')+"</div></td></tr>";
		}
		if(fromPage == "MyTeam") {
			oHtml += "<tr><td><div class='viewlrn-cls-lbl'>"+Drupal.t("LBL229")+":</div><div class='viewlrn-cls-lbl-val'> "+unescape(data.classDesc)+"</div></td></tr> <tr><td class='cls-description'>";
		} else {
			oHtml += '<div class="content-list"><div class="session-details-warpper">';
		}
		if(data.sessionDetails.length>0) {
			if(fromPage == "MyTeam") {
				oHtml += '<div class="enroll-session-details viewlrn-cls-lbl">'+Drupal.t("LBL670")+':</div>';
			} else {
				oHtml += '<div class="sub-section-title padbt5">'+Drupal.t("LBL277")+'</div>';
			}
			var inc = 1;
			$(data.sessionDetails).each(function(){
				if($(this).attr("sessionTitle")) {
					var sesionsH = ($(this).attr("sessionTitle") != '') ? $(this).attr("sessionTitle") : "&nbsp;";
					var sesionsHead = sesionsH;
					if(fromPage == "MyTeam") {
						oHtml += '<div class="sessionDet"><div class="sessName vtip" title="'+(($(this).attr("sessionTitle") != '') ? unescape($(this).attr("sessionTitle")).replace(/"/g, '&quot;') : "&nbsp;")+'">'+titleRestrictionFadeoutImage(unescape(sesionsHead),'assignlearn-tp-cls-session-title')+'</div>';
						oHtml += '<div class="sessDay">'+$(this).attr("sessionDay")+'</div>';
						if(data.deliveryTypeCode == 'lrn_cls_dty_ilt') {
							oHtml += '<div class="sessDate">'+$(this).attr("sessionSDate")+ " " +$(this).attr("start_time")+ " <span class='time-zone-text'>"+$(this).attr("sessionSDayForm")+"</span>"+' ' + Drupal.t('LBL621') + ' ' +$(this).attr("end_time")+" <span class='time-zone-text'>"+$(this).attr("sessionEDayForm")+"</span>"+$(this).attr("user_tz")+" "+$(this).attr("user_tzcode")+"";
							var locdetails ='<div class="locsessDate">'+$(this).attr("iltsessionSDate")+ " " +$(this).attr("iltstart_time")+ " <span class='time-zone-text'>"+$(this).attr("iltsessionSDayForm")+"</span>"+' ' + Drupal.t('LBL621') + ' ' +$(this).attr("iltend_time")+" <span class='time-zone-text'>"+$(this).attr("iltsessionEDayForm")+"</span>"+$(this).attr("loc_tz")+" "+$(this).attr("loc_tzcode")+"</div>";
							// console.log($(this).attr("user_tz"));
							// console.log($(this).attr("loc_tz"));
							if($(this).attr("user_tz")!= $(this).attr("loc_tz")){
								oHtml += qtip_popup_paint($(this).attr("session_id"),locdetails); 
							}
							oHtml +='</div></div>';
					   }
					   else{
						oHtml += '<div class="sessDate">'+$(this).attr("sessionSDate")+ " " +$(this).attr("start_time")+ " <span class='time-zone-text'>"+$(this).attr("sessionSDayForm")+"</span>"+' ' + Drupal.t('LBL621') + ' ' +$(this).attr("end_time")+" <span class='time-zone-text'>"+$(this).attr("sessionEDayForm")+"</span></div></div>";
					   }
					} else {	// end of if(fromPage == "MyTeam")
					var sessionDetail = '<div class="session-detail-block padbt5 sessionDet">';
					var sessionName = '<div class="session-name session-row">';
					sessionName += '<span class="sess-attr-name">'+Drupal.t("LBL107")+': </span>';
					sessionName += '<div class="sessName vtip" title="'+(($(this).attr("sessionTitle") != '') ? unescape($(this).attr("sessionTitle")).replace(/"/g, '&quot;') : "&nbsp;")+'">'+titleRestrictionFadeoutImage(unescape(sesionsHead),'assignlearn-tp-cls-session-title')+'</div>';
					sessionName += '</div>';
					var sessionDate = '<div class="session-date session-row">';
					sessionDate += '<span class="sess-attr-name">'+Drupal.t("LBL042")+'</span>';
					sessionDate += '<span title="" class="sess-attr-val">';

					
					sessionDate += $(this).attr("sessionDay") + ' ';
			       if(data.deliveryTypeCode == 'lrn_cls_dty_ilt'){
					sessionDate += $(this).attr("sessionSDate")+ " " +$(this).attr("start_time")+ " <span class='time-zone-text'>"+$(this).attr("sessionSDayForm")+"</span>"+' ' + Drupal.t('LBL621') + ' ' +$(this).attr("end_time")+" <span class='time-zone-text'>"+$(this).attr("sessionEDayForm")+"</span>"+$(this).attr("user_tz")+" "+$(this).attr("user_tzcode")+"";
                    var locdetails ='<div class="locsessDate">'+$(this).attr("iltsessionSDate")+ " " +$(this).attr("iltstart_time")+ " <span class='time-zone-text'>"+$(this).attr("iltsessionSDayForm")+"</span>"+' ' + Drupal.t('LBL621') + ' ' +$(this).attr("iltend_time")+" <span class='time-zone-text'>"+$(this).attr("iltsessionEDayForm")+"</span>"+$(this).attr("loc_tz")+" "+$(this).attr("loc_tzcode")+"</div>";
					// console.log($(this).attr("user_tz"));
					// console.log($(this).attr("loc_tz"));   

					if($(this).attr("user_tz")!= $(this).attr("loc_tz")){
						sessionDate += qtip_popup_paint($(this).attr("session_id"), locdetails); 
					}
					// sessionDate +='</div></div>';
			       }
			       else{
					sessionDate += $(this).attr("sessionSDate")+ " " +$(this).attr("start_time")+ " <span class='time-zone-text'>"+$(this).attr("sessionSDayForm")+"</span>"+' ' + Drupal.t('LBL621') + ' ' +$(this).attr("end_time")+" <span class='time-zone-text'>"+$(this).attr("sessionEDayForm")+"</span>";
			       }
				   sessionDate += '</span></div>';
				   sessionDetail += sessionName;
				   sessionDetail += sessionDate;
				  
				   var sessionInstructor = '';
				   if($(this).attr("sessionInstructorName") != null) {
						var instrName = ($(this).attr("sessionInstructorName") == 'null' ? '' : $(this).attr("sessionInstructorName"));
						sessionInstructor += '<div class="session-instructor session-row">';
						sessionInstructor += '<span class="sess-attr-name">'+Drupal.t('Instructor')+': </span>';
						sessionInstructor += '<span class="sess-attr-val vtip" title="'+unescape(instrName).replace(/"/g, '&quot;')+'">';
						// sessionInstructor += '<div class="fade-out-title-container class-detail-session-instructor-fadeout-container" style=""><span class="title-lengthy-text" style="">'+$(this).attr("sessionInstructorName")+'</span></div>';
						sessionInstructor += titleRestrictionFadeoutImage(unescape(instrName).replace(/"/g, '&quot;'), 'class-detail-session-instructor-fadeout-container');
						sessionInstructor += '</span></div>';
					
					}
					sessionDetail += sessionInstructor;
					sessionDetail += '</div>';
					oHtml += sessionDetail;
					// console.log('sessionInstructor', sessionInstructor);
					}
					inc++;
				}
			});
		}
		if(data.language) {
			if(fromPage == "MyTeam") {
				oHtml += "<div class='cls-lang'><div class='viewlrn-cls-lbl'>"+Drupal.t("LBL038")+":</div><div class='viewlrn-cls-lbl-val'> "+Drupal.t(data.language)+"</div></div>";
			} else {
				var locationInfo = '<div class="session-location-warpper"><div class="sub-section-title padbt5">'+Drupal.t("LBL038")+'</div><div class="session-location-block "><div class="location-address padbt10">'+Drupal.t(data.language)+'</div></div></div>';
				oHtml += locationInfo;
			}
		}

		if(data.deliveryTypeCode=='lrn_cls_dty_ilt') {
			var LocationName 	= data.locationName;
			if(LocationName != '') {
				if(fromPage == "MyTeam") {
					oHtml +='<table class="enroll-loc-details"><tr><td class="enroll-location-head" valign="top"><div class="enroll-loc-head viewlrn-cls-lbl">'+Drupal.t("Location")+':</div><div class="viewlrn-cls-lbl-val">';
					oHtml += "<div class='enroll-location-text'>"+unescape(LocationName)+"</div>";
					if(data.locationAddr1 !='' && data.locationAddr1 != null && data.locationAddr1 != 'null') {
						oHtml += "<div class='enroll-location-text'>"+data.locationAddr1+"</div>";
					}
					if(data.locationAddr2 !='' && data.locationAddr2 != null && data.locationAddr2 != 'null') {
						oHtml += "<div class='enroll-location-text'>"+data.locationAddr2+"</div>";
					}
					if(data.locationCity !='' && data.locationCity != null && data.locationCity != 'null') {
						oHtml += "<div class='enroll-location-text'>"+data.locationCity;
						if (data.locationState == '' && data.locationState != null && data.locationState != 'null') {
							oHtml += "<br />";
						}
					}
					if(data.locationState !='' && data.locationState != null && data.locationState != 'null') {
						if (data.locationCity != '' && data.locationCity != null && data.locationCity != 'null') {
						   oHtml += ", ";
						}
						oHtml += "<div class='enroll-location-text'>"+data.locationState+"</div>";
					}
					oHtml += "<div class='enroll-location-text'>"+data.countryName;
					if(data.locationZip !='' && data.locationZip != null && data.locationZip != 'null'){
						oHtml += " - "+data.locationZip;
					}
					oHtml += "</div>";
					oHtml += "</td></tr></table>";
				} else {
					var locationInfo = '';
					locationInfo += '<div class="session-location-warpper">';
					locationInfo += '<div class="sub-section-title padbt5">'+Drupal.t("Location")+': </div>';
					locationInfo += '<div class="session-location-block"><div class="location-address padbt10">';
					locationInfo += unescape(LocationName);
					if(data.locationAddr1 !='' && data.locationAddr1 != null && data.locationAddr1 != 'null') {
						locationInfo += ", "+data.locationAddr1;
					}
					if(data.locationAddr2 !='' && data.locationAddr2 != null && data.locationAddr2 != 'null') {
						locationInfo += ", "+data.locationAddr2;
					}
					if(data.locationCity !='' && data.locationCity != null && data.locationCity != 'null') {
						locationInfo += ", "+data.locationCity;
					}
					if(data.locationState !='' && data.locationState != null && data.locationState != 'null') {
						locationInfo += ", "+data.locationState;
					}
					if(data.locationZip !='' && data.locationZip != null && data.locationZip != 'null'){
						locationInfo += " - "+data.locationZip;
					}
					locationInfo += ", "+data.countryName;
					locationInfo += "</div></div></div>";
					// console.log('locationInfo', locationInfo);
					oHtml += locationInfo;
				}
			}
		}
		if(fromPage == "MyTeam") {
			oHtml += "</td></tr></table>";
		} else {
			oHtml += "</div></div></div>";
		}
		$("#class-details-"+data.classId).html(oHtml);
		$("body").data("learningcore").refreshJScrollPane(".lnr-tainingplan-register");
		//$(".lnr-tainingplan-register").jScrollPane();
		}catch(e){
			// to do
			// console.log(e, e.stack);
		}
		vtip();
	},

	displayEquvPopup : function(widgetId,userId, courseId, classId,result,type,selectValues){
		try{
	    $('#equvMsg-wizard').remove();
	    var html = '';
	    html+='<div id="equvMsg-wizard" style="display:none; padding: 0px;">';
	    html+='<table width="100%" cellpadding="0" cellspacing="0" border="0" valign="center">';
	    html+='<tr><td height="30"></td></tr>';
	   // html+='<tr>';
	    if(result.length == 1)
		html+='<td align="center" class="light-gray-color">'+Drupal.t(result[0]['errormsg']['msg1'])+'</td></tr>';
	    else
	    html+='<td align="center" class="light-gray-color">'+Drupal.t(result[0]['errormsg']['msg2'])+'</td></tr>';

		for(k=0;k < result.length ; k++){
			html+= '<tr><td align="center"><i>"'+unescape(result[k]['equv_title'])+'"</i></td></tr>';
		}


		html+= '<tr><td align="center" class="light-gray-color"><span>'+Drupal.t(result[0]['errormsg']['msg3'])+'</span></td></tr>';
	    //html+='</tr>';
	    html+='</table>';
	    html+='</div>';
	    $("body").append(html);
	    var closeButt={};
	    closeButt[Drupal.t('LBL123')]=function(){ $(this).dialog('destroy');$(this).dialog('close');$('#equvMsg-wizard').remove();};
	    closeButt[Drupal.t('Yes')]=function(){ $("body").data("learningcore").callRegisterClass(widgetId,userId, courseId, classId,type,selectValues); $(this).dialog('destroy');$(this).dialog('close');$('#equvMsg-wizard').remove(); };

	    $("#equvMsg-wizard").dialog({
	        position:[(getWindowWidth()-500)/2,100],
	        bgiframe: true,
	        width:500,
	        resizable:false,
	        modal: true,
	        title:Drupal.t('LBL247'),
	        buttons:closeButt,
	        closeOnEscape: false,
	        draggable:true,
	        overlay:
	         {
	           opacity: 0.9,
	           background: "black"
	         }
	    });

	    $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').addClass("removebutton").end();
	    $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(1)').before('<div class="admin-save-button-left-bg"></div>');
		$('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(1)').addClass("admin-save-button-middle-bg").end();
		$('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(1)').after('<div class="admin-save-button-right-bg"></div>');
	    this.currTheme = Drupal.settings.ajaxPageState.theme;
		if ($.browser.msie && parseInt($.browser.version, 10)=='9' && this.currTheme == "expertusoneV2"|| $.browser.msie && parseInt($.browser.version, 10)=='8'&& this.currTheme == "expertusoneV2"){
			$('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').before('<div class="white-btn-bg-left"></div>');
			$('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').addClass('white-btn-bg-middle');
			$('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').after('<div class="white-btn-bg-right"></div>');
			$('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').next('.white-btn-bg-right').css('margin-right','0px');
	    }
	    $("#equvMsg-wizard").show();
	 	if(this.currTheme == "expertusoneV2"){
	 		//changeDialogPopUI();
	 		 $('#select-class-equalence-dialog').prevAll().removeAttr('select-class-equalence-dialog');
		 	   $('#equvMsg-wizard').closest('.ui-dialog').wrap("<div id='select-class-equalence-dialog'></div>");
		       $('#select-class-equalence-dialog').find('.ui-dialog-content').addClass('commonMsg-select-class');
		       $('#select-class-equalence-dialog #equvMsg-wizard').css('height','270px');
			   $('#select-class-equalence-dialog #equvMsg-wizard').jScrollPane();
			   changeChildDialogPopUI('select-class-equalence-dialog');
			   $('#select-class-equalence-dialog').prev('.ui-widget-overlay').css('display','none');
			   if ( $.browser.msie && parseInt($.browser.version, 10)=='9' && this.currTheme == "expertusoneV2"|| $.browser.msie && parseInt($.browser.version, 10)=='8'&& this.currTheme == "expertusoneV2"){
			   $('#select-class-equalence-dialog .ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').prev('.white-btn-bg-left').remove();
			   $('#select-class-equalence-dialog .ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').next('.white-btn-bg-right').remove();
			   }
			}
		 	else {
		 		$('#select-class-equalence-dialog').prevAll().removeAttr('select-class-equalence-dialog');
			 	$('#equvMsg-wizard').closest('.ui-dialog').wrap("<div id='select-class-equalence-dialog'></div>");
				changeChildDialogPopUI('select-class-equalence-dialog');
				$('#select-class-equalence-dialog').prev('.ui-widget-overlay').css('display','none');
			   }
	    $("#equvMsg-wizard").show();
		$('.ui-dialog-titlebar-close, .removebutton').click(function(){
			$('#select-class-dialog').next('.ui-widget-overlay').css('display','block');
	        $("#equvMsg-wizard").remove();
	    });
		}catch(e){
			// to do
		}
	},

	callEquivalencePopup : function(widgetId,userId, courseId, classId, waitList, enrolledStatus,selectValues,courseLevelCnt){
		try{
		if(typeof(selectValues)==='undefined') selectValues = '';
		if(typeof(courseLevelCnt)==='undefined') courseLevelCnt = '';
		var obj = this;
		var loaderObj = widgetId;
		var loaderFlg = true;
		this.createLoader(loaderObj);
		var userId = this.getLearnerId();
		if(!userId) {
			this.callMessageWindow('registertitle',"Please sign in to proceed.");
		}else{
				url = obj.constructUrl("ajax/learningcore/check-equivalence/" + userId + '/' + courseId + '/' + classId);
				var IN_FLIGHT = 'requestinflight';
				var $ajaxcall;
				$ajaxcall = $( this );
               if( ! $ajaxcall.data( IN_FLIGHT ) ){
					$ajaxcall.data( IN_FLIGHT, true );
					$.ajax({
						type: "POST",
						url: url,
						//data:  '',  //Commented by ganeshbabuv to avoid the data value as null when invoke the ajax callback for implement salesforce cookieless option #0054508 on 30th Sep 2015 10:40 AM
						success: function(result){
							var	compClassPopup = '';
							var regtestcount = (result.length >0 && result[0].recurringcount) ? result[0].recurringcount : 'N';
							var class_cnt = (result.length >0 && result[0].class_cnt) ? result[0].class_cnt : 0;
							var isCompliance = (result.length >0 && result[0].isCompliance) ? result[0].isCompliance : '';
							var comp_inc = (result.length >0 && result[0].comp_inc) ? result[0].comp_inc : '';
							
							
							if(result.length >0 && result[0].enrollexist){
								compClassPopup = 'Y';
							}
							var tpcompclass = (result.length > 0 && result[0].tpenrollexist) ? 'Y' : '';

							$ajaxcall.data( IN_FLIGHT, true );
							if(result.length > 0 && result[0].enrollexist != 'Y' && result[0].tpenrollexist != 'Y'){
								obj.displayEquvPopup(widgetId,userId, courseId, classId,result,waitList,selectValues);
							}else{
								if((enrolledStatus == 'lrn_crs_reg_cnf' && courseLevelCnt != 'Y' && regtestcount == "Y") || (enrolledStatus=='' && isCompliance==1 && comp_inc=='lrn_crs_cmp_inc')){
									if(class_cnt > 1 && (selectValues != 'fromClasslvl' && selectValues  != '')){
										$("#lnr-catalog-search").data("lnrcatalogsearch").showSelectClass(userId, courseId); 	
									}
									else{
										regMsg = Drupal.t('MSG535') +'<br />'+ Drupal.t('MSG536');
										obj.registerConfirmation('registertitle', regMsg, widgetId, userId, courseId, classId, waitList,selectValues,compClassPopup);
									}
								}else if(tpcompclass == 'Y'){
										if(result.length > 0 && result[0].recurringcount != '' &&  result[0].recurringcount != 'undefined' && result[0].recurringcount != undefined && result[0].recurringcount == "Y"){
									    	regMsg = Drupal.t('MSG535') +'<br />'+ Drupal.t('MSG536');
											obj.registerConfirmation('registertitle', regMsg, widgetId, userId, courseId, classId, waitList,selectValues,compClassPopup);
                                        }else{
											status_msg = Drupal.t('MSG535');
                                        	obj.callMessageWindow(Drupal.t('LBL721'),status_msg);
                                        }
								}else if((compClassPopup == 'Y' || courseLevelCnt == 'Y') && selectValues != 'fromClasslvl'){
										regMsg = Drupal.t('LBL1267') +'<br />'+ Drupal.t('LBL1268');
										obj.registerConfirmation('registertitle', regMsg, widgetId, userId, courseId, classId, waitList,selectValues,compClassPopup,courseLevelCnt);
								}else{
									obj.destroyLoader(loaderObj);
									loaderFlg = false;
									obj.callRegisterClass(widgetId,userId, courseId, classId, waitList,selectValues);
									//$("#tbl-paintCatalogContentResults").trigger("reloadGrid",[{page:1}]);
								}
							}
							if(loaderFlg==true)
								obj.destroyLoader(loaderObj);
						},
					    complete: function()
					    {
							$ajaxcall.data( IN_FLIGHT, false );
					    }
					});
              }
		}
		scrollBar_Refresh('catalog');
		}catch(e){
			// to do
			//console.log(e);
		}
	},
 /*
 * 0024925: Enforce equivalence in training plans
 * for this ticket we created equivalence option for training plan
 * don't delete it. Its may need for feature enhancement
 *
 */
 /*

	callEquivalencePopupTP : function(widgetId, prgId,addToCart,isAdminSide,userListIfAdminSide,recertifyId){
		try{

			var obj = this;
			var loaderObj = widgetId;
			var userId = this.getLearnerId();
			if(userId=='') {

				this.callMessageWindow('registertitle',"Please sign in to proceed.");
			}else{
				url = obj.constructUrl("ajax/learningcore/check-equivalence-tp/"+userId+'/'+prgId);
				//alert(url);
				var IN_FLIGHT = 'requestinflight';
				var $ajaxcall;
				$ajaxcall = $( this );
               if( ! $ajaxcall.data( IN_FLIGHT ) ){
					$ajaxcall.data( IN_FLIGHT, true );
					$.ajax({
						type: "POST",
						url: url,
						//data:  '',  //Commented by ganeshbabuv to avoid the data value as null when invoke the ajax callback for implement salesforce cookieless option #0054508 on 30th Sep 2015 10:40 AM
						success: function(resultTP){
							var	compClassPopup = '';
							 if(resultTP.length >0 ){
								compClassPopup = 'Y';
								var title ='';
								//alert(JSON.stringify(resultTP));
								for(i=0; i<resultTP.length; i++) {
									title = title+resultTP[i].equv_title+"<br />";

								}
							}
							 regMsg = Drupal.t("MSG703TP")+'<br />'+title+Drupal.t("MSG734TP");
							$ajaxcall.data( IN_FLIGHT, true );
							if(resultTP.length > 0){
									var lengthTP = resultTP.length;
									obj.registerConfirmationTP('registertitle', regMsg,widgetId, prgId,addToCart,isAdminSide,userListIfAdminSide,recertifyId,lengthTP);
								}else{
									obj.callPopupOrNotTP(widgetId, prgId,addToCart,isAdminSide,userListIfAdminSide,recertifyId);
								}
						},
					    complete: function()
					    {
							$ajaxcall.data( IN_FLIGHT, false );
					    }
					});
              }
			}
		}catch(e){
				// to do
			}
	},*/


	getRatingDetails : function(ratingdata,nodeid,average) {
		try{
		var total_average = average/20;

		var data= eval($(ratingdata).attr("data"));
		var ratingDetails = '';

		if(!document.getElementById("rating_details_popup-"+nodeid)) {


			ratingDetails += "<span class='voting-details rating-header'>Rating : "+total_average+" out of 5 stars</span>";

			var ratedArr =new Array();

		    $(data).each(function(){
		    	var rate = $(this).attr("rating_value");
				var rate_value = $(this).attr("rating_value")/20;
				ratedArr[rate_value] = $(this).attr("cnt_value");

				//var widthcnt = $(this).attr("cnt_value") * 10;
				//ratingDetails += "<span class='voting-details'> "+rate_value+" star <span class='voting-flow'><span class='voting-rating' style='width:"+widthcnt+"%'></span></span><span>("+$(this).attr("cnt_value")+")</span></span>";

			});

			for(i = 5;i >= 1;i--){
				var rateValue = (ratedArr[i]!=undefined?ratedArr[i]:0);
				var selectedCntClass = (ratedArr[i]!=undefined?'selected-cnt':'');
				var widthcnt = (ratedArr[i]!=undefined?(ratedArr[i]*5):0);
				ratingDetails += "<span class='voting-details'> "+i+" star <span class='voting-flow'><span class='voting-rating' style='width:"+widthcnt+"%'></span></span><span class='"+selectedCntClass+"'>("+rateValue+")</span></span>";
			}


			$('#rating-popup-'+nodeid).qtip({
				 content: '<div id="rating_details_popup-'+nodeid+'" class="tooltiptop"></div><div class="tooltipmid">'+ratingDetails+'</div><div class="tooltipbottom"></div>',
			     show:{
					when:{
						event:'mouseover'
					},
					effect:'slide'
				 },
				 hide: {
					when:{
						event:'mouseout'
					},
					effect:'slide'
				},
/*				position: {
				    corner: {
				       target: 'bottomLeft',
				       tooltip: 'topLeft'
				    }
				},*/
				style: {
					width: 325,
					background: 'none',
					color: '#333333'
				},
				position: { adjust: { x: -98, y: -5 } }
			});
		}
		}catch(e){
			// to do
		}
	},

	disableFiveStarOnVoting : function(){
	 try{
		var divId = document.getElementById('fivestar-already-rated');
		if(divId != null && divId != "" && divId != undefined){
			$('#fivestar-already-rated .fivestar-click').removeClass('fivestar-click');
		    $('#fivestar-already-rated .fivestar-widget').unbind('mouseover');
		    $('#fivestar-already-rated .fivestar-widget .star a').unbind('click');
		    $('#fivestar-already-rated .fivestar-widget .star a').css('cursor','default');
		}
	 }catch(e){
			// to do
		}
	},

	fiveStarCheck : function(node_id,divId){
	 try{
		Drupal.attachBehaviors();
	    $('#'+divId+node_id+' '+'.fivestar-click').removeClass('fivestar-click');
	    $('#'+divId+node_id+' '+'.fivestar-widget').unbind('mouseover');
	    $('#'+divId+node_id+' '+'.fivestar-widget .star a').unbind('click');
	    $('#'+divId+node_id+' '+'.fivestar-widget .star a').css('cursor','default');
	 }catch(e){
			// to do
		}
	},

	/* Common function to evaluate the typed username and pass word in esignature
		and if true, to proceed with the remaining functionality
	*/
	evaluateLogin : function(){
		//drop call -- accord,enrollId,baseType,refundflag,isCommerceEnabled,assMand,learnerId,classid
		//mark call --- accord,userId,enrolledId,classTitle,learningType,classId
		//$("#instructor-tab-inner").data("instructordesk").dropEnrollCall(enrollId,baseType,"",isCommerceEnabled,assMand,learnerId,classid); $("#dropmsg-content").html("Cancelling the enrollment. Please wait...");
		try{
		var obj = this;
		if(this.mandatoryCheck(this.esignObj.accord)){
			var uname = $('#esign-uname').val();
			var pass = $('#esign-pass').val();
			url = this.constructUrl("ajax/learningcore/evaluate-login");
			var params = {"uname":uname,"pass":pass};
			$.ajax({
				type: "POST",
				url: url,
				data:  params,
				success: function(result){
					if(result == true){
						$('#esign-pass-error').css('display','none');
						$('.esign-msg-close-btn').css('display','none');
						if(obj.esignObj.esignFor == "InstructorCancel"){
							$("#instructor-tab-inner").data("instructordesk").dropEnrollCall(obj.esignObj.enrollId,obj.esignObj.baseType,
									obj.esignObj.refundflag,obj.esignObj.isCommerceEnabled,
									obj.esignObj.assMand,obj.esignObj.learnerId,obj.esignObj.classid);
							$("#dropmsg-content").html(Drupal.t("MSG424"));
						}else if(obj.esignObj.esignFor == "InstructorMarkComplete"){
							$('#esign-pass-error').css('display','none');
							$("#instructor-tab-inner").data("instructordesk").learnerMarkcompleteLearning(obj.esignObj.userId,
									obj.esignObj.enrolledId,obj.esignObj.classTitle,obj.esignObj.learningType,obj.esignObj.classId);
							$('#'+obj.esignObj.fieldset).remove();
						}else if(obj.esignObj.esignFor == "ManagerReject"){
							$("#lnr-myteam-search").data("lnrmyteamsearch").dropEnrollCall(obj.esignObj.userId, obj.esignObj.classId,
									obj.esignObj.enrolledId, obj.esignObj.learningType, obj.esignObj.refundFlag, obj.esignObj.isCommerceEnabled, obj.esignObj.assMand, obj.esignObj.classTitle, obj.esignObj.trid); $("#dropmsg-content").html(Drupal.t('MSG424'));
							$('#'+obj.esignObj.fieldset).remove();
						}else if(obj.esignObj.esignFor == "ManagerMarkComplete"){
							$("#lnr-myteam-search").data("lnrmyteamsearch").markcompleteLearning(obj.esignObj.userId,obj.esignObj.enrolledId,obj.esignObj.classTitle,
									obj.esignObj.rowObj,obj.esignObj.learningType,obj.esignObj.classId,obj.esignObj.trid);
							$('#'+obj.esignObj.fieldset).remove();
						}else if(obj.esignObj.esignFor == "ManagerAssign"){
							$("#lnr-myteam-search").data("lnrmyteamsearch").renderCallAssignClass(obj.esignObj.userId, obj.esignObj.courseId,
									obj.esignObj.classId, obj.esignObj.rowObj, obj.esignObj.wailist);
							$('#'+obj.esignObj.fieldset).remove();
						}else if(obj.esignObj.esignFor == "ManagerAssignProgram"){
							$("#lnr-myteam-search").data("lnrmyteamsearch").renderCallObjectAssignClass(obj.esignObj.userId,
									obj.esignObj.prgId, obj.esignObj.assignObject);
							$('#'+obj.esignObj.fieldset).remove();
						}
					}else{
						$('#esign-pass-error').css('display','block');
						$('.esign-msg-close-btn').css('display','block');
				    	$("#esign-pass").addClass("error");
					}
				}
		    });
		}else{
			$('.esign-msg-close-btn').css('display','none');
			$('#esign-pass-error').css('display','none');
		}
		}catch(e){
			// to do
		}
	},
	/* Common function to paint the esign fieldset when clicking on
		yes button or any okay button in the popups for Instructor Class
		cancel, instructor mark complete, manger reject class and manager mark complete.
	*/
	esign_accord_toggle : function(esignObj){
	 try{
		this.esignObj = esignObj;
		//$('#'+accord).toggle();
		var objStr = '$("body").data("learningcore")';
		var clickStyle = $("#"+esignObj.fieldset).css("display");
		if(clickStyle == "none") {
			var html = "";
			html +='<table cellpadding="4" cellspacing="0" border="0" valign="center">';
			html +='<tr><td class="field-title">'+SMARTPORTAL.t('Username')+'</td><td class="light-gray-color"><input id="esign-uname" type ="text" value="'+esignObj.uname+'" readonly></td></tr>';
			html +='<tr><td class="field-title">'+SMARTPORTAL.t('Password')+'</td><td class="light-gray-color"><input id="esign-pass" type ="password" name = "'+SMARTPORTAL.t('Password')+'" class="mandatory"><div id="esign-pass-error" style="display:none; color:#ff0000;font-size: 0.9em;">Please enter valid password.</div></td></tr>';
			//html +='<tr><td></td><td></td></tr>';
			html +='<tr><td></td><td class="tdButtonHolder" style="padding-right: 29px; text-align: right;"><a class="esign-close" href="javascript:void(0)" onclick=\''+objStr+'.disableButtonOnEsign();\'>'+SMARTPORTAL.t('Close')+'</a><input type ="button" class="form-submit" value ="'+SMARTPORTAL.t("E-Sign")+'"  onclick =\''+objStr+'.evaluateLogin();\'></td></tr>';
			html +='</table>';
			html +='</div>';
			$('#'+esignObj.accord).html(html);
			if(esignObj.fieldset == "esign-fieldset")
			{
				$('#'+esignObj.fieldset).prev('div').children('button').attr('disabled',"disabled");
				$('#'+esignObj.fieldset).prev('div').fadeTo('slow',.3);
			}
			if(esignObj.esignFor == "ManagerAssignProgram" || esignObj.esignFor == "ManagerAssign"){
				$('#tbl-paintCatalogContentResults > tbody > tr:last .myteam-esign-fieldset').addClass("myteam-esign-fieldset-last");
			}
			$('#'+esignObj.fieldset).show();//css("display","block");
			$('#'+esignObj.fieldset).slideDown(1000);

		} else {
   			$('#'+esignObj.fieldset).hide();//css("display","none");
			$('#'+esignObj.fieldset).slideUp(1000);
		}
	 }catch(e){
			// to do
		}
	},

	disableButtonOnEsign : function(){
	 try{
		$('#'+this.esignObj.fieldset).hide();//css("display","none");
		$('#'+this.esignObj.fieldset).slideUp(1000);
		$('#'+this.esignObj.fieldset).prev('div').children('button').removeAttr('disabled');
		$('#'+this.esignObj.fieldset).prev('div').css('opacity','');
	 }catch(e){
			// to do
		}
	},

	getEsignPopup : function(esignObj){
	 try{
    	var obj = this;
    	url = this.constructUrl("ajax/learningcore/getConcatenatedUserDets");
		$.ajax({
			type: "POST",
			url: url,
			//data:  '', //Commented by ganeshbabuv to avoid the data value as null when invoke the ajax callback for implement salesforce cookieless option #0054508 on 30th Sep 2015 10:40 AM
			success: function(details){

				obj.esignObj = esignObj;
			    $('#esign-wizard').remove();
			    var html = "";
			    html += '<div id = "esign-wizard" class="esign-wizard-class">';
			    html += '<div id="esign-pass-error"><span class="esign-span-error">'+details[0].password_valid_txt+'</span></div>';
			    html += '<div id="esign-mandatory-error"><span class="esign-span-error">'+details[0].password_req_txt+'</span></div>';
			    html += '<div class="esign-msg-close-btn" onclick="$(\'body\').data(\'learningcore\').closeErrorMessage();"></div>';
			    html += '<div id="esign-message">'+details[0].esign_static_message+'</div>';
			    html += '<table cellpadding="4" cellspacing="0" border="0" valign="center">';
			    html += '<tr><td colspan="3" class="esign-labels">'+details[0].esign_date_txt+' : '+details[0].curr_date_time+'&nbsp;';
				html += details[0].time_zone+'</td></tr>';
				html += '<tr><td class="esign-labels">'+details[0].esign_name_txt+' : '+details[0].full_name+'</td></tr>';
				html += '</table>';

				html +='<table cellpadding="4" cellspacing="0" border="0" valign="center">';
				html +='<tr><td colspan="2" class="esign-title1">'+details[0].esign_uname_txt+' :</td>';
				html +='<td class="esign-textbox1"><input id="esign-uname" tabindex="1001" type ="text" value="'+details[0].user_name+'" maxlength = "60" size ="32" readonly></td>';
				html +='<td></td></tr>';
				html +='<tr><td colspan="2" class="esign-title2">'+details[0].esign_pass_txt+' :<span class="require-text">*</span></td>';
				html +='<td class="esign-textbox2"><input id="esign-pass" tabindex="1002" type ="password" name = "'+SMARTPORTAL.t('Password')+'" maxlength = "60" size ="32"></td>';
				html +='<td></td></tr>';
				html +='</table>';
				html +='</div>';
			    $("body").append(html);
			    var closeButt={};
			    closeButt[details[0].esign_cancel_txt]=function(){ $(this).dialog('destroy');$(this).dialog('close');$('#esign-wizard').remove();
			    if(esignObj){
			    	$("#"+obj.esignObj.popupDiv).show();
			    }
			    };
			    closeButt[details[0].esign_sign_txt]=function(){ $("body").data("learningcore").getNewEvaluateLogin();  };

			    $("#esign-wizard").dialog({
			        position:[(getWindowWidth()-500)/2,200],
			        bgiframe: true,
			        width:'auto',
			        resizable:false,
			        modal: true,
			        title: details[0].esign_title,
			        buttons:closeButt,
			        closeOnEscape: false,
			        draggable:true,
			        overlay:
			         {
			           opacity: 0.9,
			           background: "black"
			         }
			    });
			    $('#esign-wizard').parent('.ui-dialog').wrap("<div id='esign-wizard-dialog'></div>");

				$('#esign-pass').focus();
				$('#esign-wizard-dialog .ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').attr('tabindex','1003');
				$('#esign-wizard-dialog .ui-dialog-buttonpane .ui-dialog-buttonset button:eq(1)').attr('tabindex','1004');
				$('#esign-wizard-dialog .ui-dialog-buttonpane .ui-dialog-buttonset button:eq(1)').attr('id','esign-sign-button');

			    $('#esign-wizard-dialog  .ui-dialog-buttonpane .ui-dialog-buttonset button:eq(1)').before('<div class="admin-save-button-left-bg"></div>');
				$('#esign-wizard-dialog  .ui-dialog-buttonpane .ui-dialog-buttonset button:eq(1)').addClass("admin-save-button-middle-bg");
				$('#esign-wizard-dialog  .ui-dialog-buttonpane .ui-dialog-buttonset button:eq(1)').after('<div class="admin-save-button-right-bg"></div>');
			    $('#esign-wizard-dialog .ui-dialog-buttonpane .ui-dialog-buttonset button:eq(1)').addClass("esign-button-wizard").end();
			    $('#esign-wizard-dialog .ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').addClass("esign-close-button").end();

			    if(esignObj){
			    	$("#"+obj.esignObj.popupDiv).hide();
			    }
			    $("#esign-wizard").show();
			    this.currTheme = Drupal.settings.ajaxPageState.theme;
			 	if(this.currTheme == "expertusoneV2"){
			    changeChildDialogPopUI('esign-wizard-dialog');
			 	}

				$('.ui-dialog-titlebar-close').click(function(){
			        $("#esign-wizard").remove();
			        if(esignObj){
			        	$("#"+obj.esignObj.popupDiv).show();
			        }
			    });
				$("#esign-pass").keyup(function(event){
				    if(event.keyCode == 13){
				        $("#esign-sign-button").click();
				    }
				});

				//Chrome browser dialog box UI fixes
				var getScreenWidth = $(window).width()/4;
				$("#esign-wizard-dialog").find('.ui-dialog').css('left',Math.round(getScreenWidth)+'px');

			}
		});


	 }catch(e){
			// to do
		}
	},


	getEvaluateLogin : function(){
		//drop call -- accord,enrollId,baseType,refundflag,isCommerceEnabled,assMand,learnerId,classid
		//mark call --- accord,userId,enrolledId,classTitle,learningType,classId
		//$("#instructor-tab-inner").data("instructordesk").dropEnrollCall(enrollId,baseType,"",isCommerceEnabled,assMand,learnerId,classid); $("#dropmsg-content").html("Cancelling the enrollment. Please wait...");
		try{
		var obj = this;
		if($('#esign-pass').val() != ''){
			var uname = $('#esign-uname').val();
			var pass = $('#esign-pass').val();
			url = this.constructUrl("ajax/learningcore/evaluate-login");
			var params = {"uname":uname,"pass":pass};
			$.ajax({
				type: "POST",
				url: url,
				data:  params,
				success: function(result){
					if(result == true){
						$('#esign-pass-error').css('display','none');
						$('.esign-msg-close-btn').css('display','none');
						$('#esign-wizard').dialog('destroy');$('#esign-wizard').dialog('close');$('#esign-wizard').remove();
							if(obj.esignObj){
								if(obj.esignObj.esignFor == "InstructorCancel"){
								$("#instructor-tab-inner").data("instructordesk").dropEnrollCall(obj.esignObj.enrollId,obj.esignObj.baseType,
										obj.esignObj.refundflag,obj.esignObj.isCommerceEnabled,
										obj.esignObj.assMand,obj.esignObj.learnerId,obj.esignObj.classid);
								//$("#dropMsg-wizard").show();
								$("#dropmsg-content").html(Drupal.t("MSG424"));
								}else if(obj.esignObj.esignFor == "InstructorMarkComplete"){
									$('#esign-pass-error').css('display','none');
									$("#instructor-tab-inner").data("instructordesk").learnerMarkcompleteLearning(obj.esignObj.userId,
											obj.esignObj.enrolledId,obj.esignObj.classTitle,obj.esignObj.learningType,obj.esignObj.classId);
									//$('#mark-complete-wizard').show();
								}else if(obj.esignObj.esignFor == "ManagerReject"){
									$("#lnr-myteam-search").data("lnrmyteamsearch").dropEnrollCall(obj.esignObj.userId, obj.esignObj.classId,
											obj.esignObj.enrolledId, obj.esignObj.learningType, obj.esignObj.refundFlag, obj.esignObj.isCommerceEnabled, obj.esignObj.assMand, obj.esignObj.classTitle, obj.esignObj.trid); $("#dropmsg-content").html(Drupal.t('MSG424'));
									//$('#reject-wizard').show();
								}else if(obj.esignObj.esignFor == "ManagerMarkComplete"){
									$("#lnr-myteam-search").data("lnrmyteamsearch").markcompleteLearning(obj.esignObj.userId,obj.esignObj.enrolledId,obj.esignObj.classTitle,
											obj.esignObj.rowObj,obj.esignObj.learningType,obj.esignObj.classId,obj.esignObj.trid);
									//$("#mark-complete-wizard").show();
								}else if(obj.esignObj.esignFor == "ManagerAssign"){
									$("#lnr-myteam-search").data("lnrmyteamsearch").renderCallAssignClass(obj.esignObj.userId, obj.esignObj.courseId,
											obj.esignObj.classId, obj.esignObj.rowObj, obj.esignObj.wailist);

								}else if(obj.esignObj.esignFor == "ManagerAssignProgram"){
									$("#lnr-myteam-search").data("lnrmyteamsearch").renderCallObjectAssignClass(obj.esignObj.userId,
											obj.esignObj.prgId, obj.esignObj.assignObject);

								}else if(obj.esignObj.esignFor == "UserAdmin" || obj.esignObj.esignFor == "CatalogClassAdmin"){
									$('#last-button-account').click();
								}else if(obj.esignObj.esignFor == "EsignAdmin"){
									$('.common-esign-save').click();
								}else if(obj.esignObj.esignFor == "UserAddrAdmin"){
									$('.common-esign-save-addr').click();
								}else if(obj.esignObj.esignFor == "AddAdmin"){
									$("#"+obj.esignObj.esignButtId).click();
								}
								else if(obj.esignObj.esignFor == "contentAuthorAddInteractions_edit_unpublish"){
									$("#edit-catalog-course-save-unpublish").click();
								}
								else if(obj.esignObj.esignFor == "contentAuthorAddInteractions_edit_publish"){
									var data = saveInteractionsH5PWrapper(this);
									if(data == false)
									{
										return false;
									}
									$("#INTERACTIONDATA").val(data);
									$("#content_save_pub_btn").click();
								}
								else if(obj.esignObj.esignFor == "contentAuthorAddInteractions_edit"){
										var data = saveInteractionsH5PWrapper(this);
										if(data == false)
										{
											return false;
										}
										$("#INTERACTIONDATA").val(data);
										$("#content_save_btn").click();
								}
								else if(obj.esignObj.esignFor == "contentAuthorAddInteractions_new"){
										$("#content_save_btn").click();
								}
								else if(obj.esignObj.esignFor == "contentAuthorAddInteractions_new_publish"){
									$("#content_save_pub_btn").click();
								}
								else if(obj.esignObj.esignFor == "contentAuthorAddInteractions_new_unpublish"){
										$("#edit-catalog-course-save-unpublish").click();
								}
								else if(obj.esignObj.esignFor == "contentAuthorPresentationInteractions"){
									saveInteractionsH5PWrapper(null,obj.esignObj.paramForPublish);
								}								
								
								
								$("#"+obj.esignObj.popupDiv).show();
							}else{
								$('#last-button-account').click();
							}
					}else{
						$('#esign-mandatory-error').css('display','none');
						$('.esign-msg-close-btn').css('display','none');
						$('#esign-pass-error').css('display','block');
						$('#esign-pass').val('');
				    	$("#esign-pass").addClass("esign-pass-txt-error");
					}
				}
		    });
		}else{
			$('#esign-pass-error').css('display','none');
			$('#esign-mandatory-error').css('display','block');
			$('.esign-msg-close-btn').css('display','block');
			$("#esign-pass").addClass("esign-pass-txt-error");
		}
		}catch(e){
			// to do
		}
	},

	getNewEvaluateLogin : function(){
		//drop call -- accord,enrollId,baseType,refundflag,isCommerceEnabled,assMand,learnerId,classid
		//mark call --- accord,userId,enrolledId,classTitle,learningType,classId
		//$("#instructor-tab-inner").data("instructordesk").dropEnrollCall(enrollId,baseType,"",isCommerceEnabled,assMand,learnerId,classid); $("#dropmsg-content").html("Cancelling the enrollment. Please wait...");
		try{
		var obj = new Object;
		obj.esignObj =$.fn.getNewEsignPopup.esignObj;
		if($('#esign-pass').val() != ''){
			var uname = $('#esign-uname').val();
			var pass = $('#esign-pass').val();
			url = this.constructUrl("ajax/learningcore/evaluate-login");
			var params = {"uname":uname,"pass":pass};
			$.ajax({
				type: "POST",
				url: url,
				data:  params,
				success: function(result){
					if(result == true){
						$('#esign-pass-error').css('display','none');
						$('.esign-msg-close-btn').css('display','block');
						$('#esign-wizard').dialog('destroy');$('#esign-wizard').dialog('close');$('#esign-wizard').remove();
							if(obj.esignObj){
								
								if(obj.esignObj.esignFor == "contentAuthorAddInteractions_edit_unpublish"){
									$("#edit-catalog-course-save-unpublish").click();
								}
								else if(obj.esignObj.esignFor == "contentAuthorAddInteractions_edit_publish"){
									var data = saveInteractionsH5PWrapper(this);
									if(data == false)
									{
										return false;
									}
									$("#INTERACTIONDATA").val(data);
									$("#content_save_pub_btn").click();
									
								}
								if(obj.esignObj.esignFor == "contentAuthorAddInteractions_edit"){
										var data = saveInteractionsH5PWrapper(this);
										if(data == false)
										{
											return false;
										}
										$("#INTERACTIONDATA").val(data);
										$("#content_save_btn").click();
								}
								if(obj.esignObj.esignFor == "contentAuthorAddInteractions_new"){
										$("#content_save_btn").click();
								}
								else if(obj.esignObj.esignFor == "contentAuthorAddInteractions_new_publish"){
									$("#content_save_pub_btn").click();
								}
								else if(obj.esignObj.esignFor == "contentAuthorAddInteractions_new_unpublish"){
										$("#edit-catalog-course-save-unpublish").click();
								}
								if(obj.esignObj.esignFor == "contentAuthorPresentationInteractions"){
									saveInteractionsH5PWrapper(null,obj.esignObj.paramForPublish);
									
								}								
								
								
								if(obj.esignObj.esignFor == "InstructorCancel"){
								$("#instructor-tab-inner").data("instructordesk").dropEnrollCall(obj.esignObj.enrollId,obj.esignObj.baseType,
										obj.esignObj.refundflag,obj.esignObj.isCommerceEnabled,
										obj.esignObj.assMand,obj.esignObj.learnerId,obj.esignObj.classid);
								//$("#dropMsg-wizard").show();
								$("#dropmsg-content").html(Drupal.t("MSG424"));
								}else if(obj.esignObj.esignFor == "InstructorMarkComplete"){
									$('#esign-pass-error').css('display','none');
									$("#instructor-tab-inner").data("instructordesk").learnerMarkcompleteLearning(obj.esignObj.userId,
											obj.esignObj.enrolledId,obj.esignObj.classTitle,obj.esignObj.learningType,obj.esignObj.classId);
									//$('#mark-complete-wizard').show();
								}else if(obj.esignObj.esignFor == "ManagerReject"){
									$("#lnr-myteam-search").data("lnrmyteamsearch").dropEnrollCall(obj.esignObj.userId, obj.esignObj.classId,
											obj.esignObj.enrolledId, obj.esignObj.learningType, obj.esignObj.refundFlag, obj.esignObj.isCommerceEnabled, obj.esignObj.assMand, obj.esignObj.classTitle, obj.esignObj.trid); $("#dropmsg-content").html(Drupal.t('MSG424'));
									//$('#reject-wizard').show();
								}else if(obj.esignObj.esignFor == "ManagerMarkComplete"){
									$("#lnr-myteam-search").data("lnrmyteamsearch").markcompleteLearning(obj.esignObj.userId,obj.esignObj.enrolledId,obj.esignObj.classTitle,
											obj.esignObj.rowObj,obj.esignObj.learningType,obj.esignObj.classId,obj.esignObj.trid);
									//$("#mark-complete-wizard").show();
								}else if(obj.esignObj.esignFor == "ManagerAssign"){
									$("#lnr-myteam-search").data("lnrmyteamsearch").renderCallAssignClass(obj.esignObj.userId, obj.esignObj.courseId,
											obj.esignObj.classId, obj.esignObj.rowObj, obj.esignObj.wailist);

								}else if(obj.esignObj.esignFor == "ManagerAssignProgram"){
									$("#lnr-myteam-search").data("lnrmyteamsearch").renderCallObjectAssignClass(obj.esignObj.userId,
											obj.esignObj.prgId, obj.esignObj.assignObject);

								}else if(obj.esignObj.esignFor == "DeleteFunctionality"){
									$("body").data("mulitselectdatagrid").deleteEntity(obj.esignObj.type,obj.esignObj.entityId,obj.esignObj.entityType,obj.esignObj.id);
								}else if(obj.esignObj.esignFor == "AddKeywordToTemplate"){
									$("body").data("mulitselectdatagrid").addKeywordtoTemplate(obj.esignObj.type,obj.esignObj.entityId,obj.esignObj.entityType,obj.esignObj.id,obj.esignObj.kwdName);
								}else if(obj.esignObj.esignFor == "UserAdmin" || obj.esignObj.esignFor == "CatalogClassAdmin"){
									$('#last-button-account').click();
								}else if(obj.esignObj.esignFor == "EsignAdmin"){
									$('.common-esign-save').click();
								}else if(obj.esignObj.esignFor == "UserAddrAdmin"){
									$('.common-esign-save-addr').click();
								}else if(obj.esignObj.esignFor == "AddAdmin"){
									$("#"+obj.esignObj.esignButtId).click();
								}
								else if(obj.esignObj.esignFor == "attachCrsDelete"){
								      $("#"+obj.esignObj.objectId).click();
								}
								else if(obj.esignObj.esignFor == "addScreenDetails"){ //Added by Ganesh for Custom Attribute #custom_attribute_0078975
								     $("#hidden-screen-button").click();
								}
								else if(obj.esignObj.esignFor == "confirmationForMdlDel"){
								     deleteModuleCall(obj.esignObj.objectId, obj.esignObj.moduleId,obj.esignObj.objectType);
								}
								else if(obj.esignObj.esignFor == "DeleteAdminObject"){
									$("#root-admin").data("narrowsearch").callDeleteProcess(obj.esignObj.objectId,obj.esignObj.objectType);
								}else if(obj.esignObj.esignFor == "PublishUnpublishCatalog"){
									$("#root-admin").data("narrowsearch").publishAndUnpublishCat(obj.esignObj.catalogId,obj.esignObj.catalogType,obj.esignObj.actionStatus,obj.esignObj.rowObj);
								}else if(obj.esignObj.esignFor == "displaymessagewizard"){
									$("#root-admin").data("narrowsearch").publishAndUnpublishCat(obj.esignObj.catalogId,obj.esignObj.catalogType,obj.esignObj.actionStatus,obj.esignObj.rowObj);
									$("input[name = 'saveandshow']").click();
								}else if(obj.esignObj.esignFor == "PublishUnpublishProgram"){
									$("#root-admin").data("narrowsearch").publishAndUnpublishPrg(obj.esignObj.programId,obj.esignObj.rowObj);
								}else if(obj.esignObj.esignFor == "ActivateDeactivateResource"){
									$("#root-admin").data("narrowsearch").activateAndDeactivateRsc(obj.esignObj.resourceId,obj.esignObj.resourceType,obj.esignObj.rowObj);
								}else if(obj.esignObj.esignFor == "ActivateDeactivateObject"){
									$("#root-admin").data("narrowsearch").activateAndDeactivateObj(obj.esignObj.objectId, obj.esignObj.objectType, obj.esignObj.rowObj);
								}else if(obj.esignObj.esignFor == "publishAndUnpublishSurveyAssessment"){
									$("#root-admin").data("narrowsearch").publishAndUnpublishSur(obj.esignObj.surveyId, obj.esignObj.surveyType, obj.esignObj.rowObj);
								}else if(obj.esignObj.esignFor == "publishAndUnpublishSurveyAssessmentQuestions"){
									$("#root-admin").data("narrowsearch").publishAndUnpublishQus(obj.esignObj.questionId, obj.esignObj.rowObj);
                               }else if(obj.esignObj.esignFor == "publishAndUnpublishContent"){
                            	   $("#root-admin").data("narrowsearch").publishAndUnpublishCnt(obj.esignObj.contentId, obj.esignObj.rowObj);
                              }else if(obj.esignObj.esignFor == "publishAndUnpublishVideo"){
                            	   $("#root-admin").data("narrowsearch").publishAndUnpublishCntVideo(obj.esignObj.contentId, obj.esignObj.rowObj);
                              }else if(obj.esignObj.esignFor == "publishAndUnpublishPresentation"){
                            	   $("#root-admin").data("narrowsearch").publishAndUnpublishCntPresentation(obj.esignObj.contentId, obj.esignObj.rowObj);
                              }else if(obj.esignObj.esignFor == "publishAndUnpublishBanner"){
									$("#root-admin").data("narrowsearch").publishAndUnpublishBan(obj.esignObj.bannerId, obj.esignObj.bannerType, obj.esignObj.rowObj);
							  }else if(obj.esignObj.esignFor == "publishAndUnpublishLocation"){
									$("#root-admin").data("narrowsearch").publishAndUnpublishLoc(obj.esignObj.locationId, obj.esignObj.rowObj);
							  }else if(obj.esignObj.esignFor == "publishAndUnpublishCustom"){//#custom_attribute_0078975
									$("#root-admin").data("narrowsearch").publishAndUnpublishCus(obj.esignObj.CustomId, obj.esignObj.rowObj);}
							  else if(obj.esignObj.esignFor == "publishAndUnpublishNotification"){
									$("#root-admin").data("narrowsearch").publishAndUnpublishNot(obj.esignObj.notificationId, obj.esignObj.rowObj);
							  }else if(obj.esignObj.esignFor == "publishAndUnpublishModule"){
									$("#root-admin").data("narrowsearch").publishAndUnpublishModuleDialog(obj.esignObj.moduleName, obj.esignObj.rowObj);
							  }else if(obj.esignObj.esignFor == "publishAndUnpublishDiscount"){
									$("#root-admin").data("narrowsearch").publishAndUnpublishDiscountDialog(obj.esignObj.discountId, obj.esignObj.rowObj);
							  }else if(obj.esignObj.esignFor == "publishAndUnpublishPayment"){
									$("#root-admin").data("narrowsearch").publishAndUnpublishPaymentDialog(obj.esignObj.paymentId, obj.esignObj.rowObj);
							  }else if(obj.esignObj.esignFor == "publishAndUnpublishOrder"){
									$("#root-admin").data("narrowsearch").publishAndUnpublishOrderDialog(obj.esignObj.orderId, obj.esignObj.orderStatus, obj.esignObj.rowObj);
							  }else if(obj.esignObj.esignFor == "addReportPublishAndUnpublish"){
							  $("body").data("reportsearch").addReportPublishAndUnpublish(obj.esignObj.statusType);
							  }else if(obj.esignObj.esignFor == "displayWarningWizard"){
								  callInsertProcess(obj.esignObj.dupId,'esign');
							  }else if(obj.esignObj.esignFor == "displayDeleteWizardForum"){
								  switch (obj.esignObj.forumObjType) {
							    	case 'forum':
							    		$("#forum-list-display").data("forumlistdisplay").deleteForum(obj.esignObj.objectId,obj.esignObj.objectType);
							    		break;
							    	case 'topic':
							    		$("#forum-topic-list-display").data("forumlistdisplay").deleteTopics(obj.esignObj.objectId,obj.esignObj.nodeId);
								    	break;
							    	case 'comment':
							    		$("#forum-topic-list-display").data("forumlistdisplay").deleteComments(obj.esignObj.objectId,obj.esignObj.nodeId,obj.esignObj.commentId);
							    		break;
							    }
							  }else if(obj.esignObj.esignFor == "DeleteAdminObjectSettingsList"){
								  $('#deleteAddedList-'+obj.esignObj.objectId).click();
							  }

								$("div#"+obj.esignObj.popupDiv).show();
							}else{
								$('#last-button-account').click();
							}
					}else{
						$('#esign-mandatory-error').css('display','none');
						$('.esign-msg-close-btn').css('display','block');
						$('#esign-pass-error').css('display','block');
						$('#esign-pass').val('');
				    	$("#esign-pass").addClass("esign-pass-txt-error");
					}
				}
		    });
		}else{
			$('#esign-pass-error').css('display','none');
			$('#esign-mandatory-error').css('display','block');
			$('.esign-msg-close-btn').css('display','block');
			$("#esign-pass").addClass("esign-pass-txt-error");
		}
		}catch(e){
			// to do
		}
	},

	deleteDrupalUsers : function(drupalUserId){
		try{
		if(drupalUserId != ""){
			url = resource.base_url+'/?q='+"administration/learning-core/delete-drupal-users";
			var params = {"drupalUserId":drupalUserId};
			$.ajax({
				type: "POST",
				url: url,
				data:  params,
				success: function(result){
					//success
				}
			});
		}
		}catch(e){
			// to do
		}
	},

//Dupliacate for QTIP div function is used in the leaner side under User catalog Block
	getLeanerQtipDiv : function(qtipObj,obj) {
	 try{
		var popupId 	= qtipObj.popupDispId;
		this.qtipLenth = this.qtipLenth+1;
		var entityType = qtipObj.entityType;
		//var courseId = qtipObj.courseId!=undefined?qtipObj.courseId:'';
		var url 			  = resource.base_host+'?q='+qtipObj.url; // resource.base_host+'?q=administration/catalogaccess/33/cre_sys_obt_crs';
		var qtipClass 		  = qtipObj.qtipClass;
		var wBubble 		  = qtipObj.wBubble;//700; //Bubble Popup Width
		var hBubble 		  = qtipObj.hBubble;//300; //Bubble Popup Height
		var setwBubble        = wBubble-5;
		var setBtmLeft        = (setwBubble-104)/2;
		var qtipLeftPos       = (wBubble > 700) ? 400 : (setBtmLeft + 20);
		var tipPos = qtipObj.tipPosition;
		var catalogVisibleId = qtipObj.catalogVisibleId;
		var mLeft = 0;
		var tipPosition 	 = qtipObj.tipPosition;
		var topElements,bottomElements;
		var setTip			 = $(obj).position();
		EXPERTUS_SMARTPORTAL_AbstractDetailsWidget.createLoader(popupId);
		$.ajax({
			 type: "GET",
   	         url: url,
   	         // data:  '', //Commented by ganeshbabuv to avoid the data value as null when invoke the ajax callback for implement salesforce cookieless option #0054508 on 30th Sep 2015 10:40 AM
   	         success: function(data){
				$(".active-qtip-div").remove();
				var paintHtml = topElements+"<div id='paintContent"+popupId+"'>"+data.render_content_main+"</div>"+bottomElements;
				var contentDiv = qtipObj.catalogVisibleId+"_disp";
				$("#"+popupId).append("<div class='bottom-qtip-tip active-qtip-div set-wbubble-left'></div>");
				if(qtipClass == 'display-message-positioning'){
					$("#"+popupId).append("<div id='"+contentDiv+"' class='active-qtip-div "+qtipClass+"'></div>");
				}
				else{
					$("#"+popupId).append("<div id='"+contentDiv+"' class='active-qtip-div'></div>");
				}
				$("#"+contentDiv).html(paintHtml);

				$(".bottom-qtip-tip").css('bottom','0px').css('position','absolute').css('z-index','101');
				$("#"+contentDiv).css('position','absolute').css('left','-'+qtipLeftPos+'px').css('bottom','40px').css('z-index','100');


				var p = $("#"+popupId);
				var position = p.position();
				var divHeight = $("#"+contentDiv).height();
				var parentTopPos = Math.round(position.top) + 10;
				var parentLeftPos = Math.round(position.left);
				this.currTheme = Drupal.settings.ajaxPageState.theme;
			 	if(this.currTheme == "expertusoneV2"){
					 if(tipPosition == 'tipfaceTopMiddle'){
						$('#wizarad-myprofile-skills .ui-jqgrid-bdiv').css({'overflow':'visible'});
						$("#"+popupId).append("<div class='bottom-qtip-tip-up active-qtip-div set-wbubble-left'></div>");
						$("#"+popupId+" .bottom-qtip-tip-up").css({'top':+Math.round(setTip.top)+10+'px','left':Math.round(setTip.left)-21+'px','position':'absolute'});
						$(".bottom-qtip-tip").remove();
						$("#"+contentDiv).css({'position':'absolute','left':Math.round(setTip.left)-270+'px','top':Math.round(setTip.top)+38+'px','z-index':'100'});
						$("#learner-myskill-details .block-title-middle #skill-qtipid .active-qtip-div").css({'top':'86px'});
						$("#learner-myskill-details .block-title-middle #skill-qtipid .bottom-qtip-tip-up").css({'top':'57px','left':'567px'});
					}if(tipPosition == 'tipfaceTopMiddleFaceUp'){
						$("#"+popupId).append("<div class='bottom-qtip-tip-up active-qtip-div set-wbubble-left'></div>");
						$("#"+popupId+" .bottom-qtip-tip-up").css({'top':+Math.round(setTip.top)+10+'px','left':Math.round(setTip.left)-21+'px','position':'absolute'});
						$(".bottom-qtip-tip").remove();
						$("#"+contentDiv).css({'position':'absolute','left':Math.round(setTip.left)-90+'px','top':Math.round(setTip.top)+30+'px','z-index':'100'});

					}
			 	}else {
			 		 if(tipPosition == 'tipfaceTopMiddle'){
							$('#wizarad-myprofile-skills .ui-jqgrid-bdiv').css({'overflow':'visible'});
							$("#"+popupId).append("<div class='bottom-qtip-tip-up active-qtip-div set-wbubble-left'></div>");
							$("#"+popupId+" .bottom-qtip-tip-up").css({'top':+Math.round(setTip.top)+10+'px','left':Math.round(setTip.left)-21+'px','position':'absolute'});
							$(".bottom-qtip-tip").remove();
							$("#"+contentDiv).css({'position':'absolute','left':Math.round(setTip.left)-295+'px','top':Math.round(setTip.top)+38+'px','z-index':'100'});
							$("#learner-myskill-details .block-title-middle #skill-qtipid .active-qtip-div").css({'top':'47px','left':'326px'});
							$("#learner-myskill-details .block-title-middle #skill-qtipid .bottom-qtip-tip-up").css({'top':'18px','left':'628px'});
						}if(tipPosition == 'tipfaceTopMiddleFaceUp'){
							$("#"+popupId).append("<div class='bottom-qtip-tip-up active-qtip-div set-wbubble-left'></div>");
							$("#"+popupId+" .bottom-qtip-tip-up").css({'top':+Math.round(setTip.top)+10+'px','left':Math.round(setTip.left)-21+'px','position':'absolute'});
							$(".bottom-qtip-tip").remove();
							$("#"+contentDiv).css({'position':'absolute','left':Math.round(setTip.left)-90+'px','top':Math.round(setTip.top)+30+'px','z-index':'100'});

						}
			 	}
			 	if(tipPosition == 'tipfaceMiddleRight'){
			 		var tipFrom = qtipObj.tipFrom;
			 		var boxRight = '151px';
			 		var tipRight = '103px';
			 		if(tipFrom == 'addUserOrder'){
			 			boxRight = '130px';
			 			tipRight = '81px';
			 		}
			 		else if(tipFrom == 'addProductOrder'){
			 			boxRight = '165px';
			 			tipRight = '116px';
			 		}
					$("#"+popupId).append("<div class='bottom-qtip-tip-right active-qtip-div set-wbubble-left'></div>");
					$(".bottom-qtip-tip-right").css({'top':+parentTopPos-30+'px','position':'absolute','right': tipRight});
					$(".bottom-qtip-tip").remove();
					$("#"+contentDiv).css({'position':'absolute','right':boxRight,'left':'auto','top':+parentTopPos-125+'px','bottom':'0px','z-index':'100'});
				}
				if($("#"+popupId+" .tab-title").width() > 0 ){
					 var labelWidth = ($("#"+popupId+" .tab-title").width())/2;
					 var bubbleWidth = 32;
					 var setbubblePosition = labelWidth - bubbleWidth;
					 $(".set-wbubble-left").css('left', setbubblePosition +'px');
			    }

				//Set buble tool tip arrow position
				tipPosition       = (qtipObj.tipPosition) ? qtipObj.tipPosition : 'bottomMiddle';
				topElements = '<a class="qtip-close-button" onclick="$(\'.active-qtip-div\').remove();"></a><span id="popup_container_'+popupId+'"><table cellspacing="0" cellpadding="0" width="'+setwBubble+'px" height="'+hBubble+'px" id="bubble-face-table"><tbody><tr><td class="bubble-tl"></td><td class="bubble-t"></td><td class="bubble-tr"></td></tr><tr><td class="bubble-cl"></td><td valign="top" class="bubble-c">';
				bottomElements ='</td><td class="bubble-cr"></td></tr><tr><td class="bubble-bl"></td><td class="bubble-blt"></td><td class="bubble-br"></td></tr></tbody></table></span>';
				$("#"+popupId).parent().parent().parent().parent().removeClass("qtip-access-control");

				var paintHtml = topElements+"<div id='paintContent"+popupId+"'><div id='show_expertus_message'></div>"+data.render_content_main+"</div>"+bottomElements;
				var contentDiv = qtipObj.catalogVisibleId+"_disp";
				EXPERTUS_SMARTPORTAL_AbstractDetailsWidget.destroyLoader(popupId);
				$("#"+contentDiv).html(paintHtml);
				if(data.drupal_settings) {
				   $.extend(true, Drupal.settings, data.drupal_settings);
				}
					Drupal.attachBehaviors();
	            }
 			});
	 }catch(e){
			// to do
		}
	},

	paintOtherUserProfile: function(qtipObj){
		try{
		$('.ui-dialog').remove();
		var popupId 	= qtipObj.popupDispId;
		var url 			  = resource.base_host+'?q='+qtipObj.url;
		var contentDiv = qtipObj.catalogVisibleId+"_disp";
		var loaderDivId = qtipObj.dataloaderid;
		var dataIntId = qtipObj.dataIntId;
		var stdid		= this.getLearnerId();
		if(stdid == "0" || stdid == "")
		{
		    self.location='?q=learning/enrollment-search';
	        return;
		}
		$('#paintContent'+popupId).remove(); //0079970: Unable to close the user profile pop up
		this.createLoader(loaderDivId);
		var themeKey = Drupal.settings.ajaxPageState.theme;
		var abstractObj = this;
		$.ajax({
			 type: "GET",
  	         url: url,
  	        // data:  '', //Commented by ganeshbabuv to avoid the data value as null when invoke the ajax callback for implement salesforce cookieless option #0054508 on 30th Sep 2015 10:40 AM
  	         success: function(data){
  	        	 //0033772: Code Re-Factoring - Home page - Remove unwanted JavaScript
			if(Drupal.settings.activeModulesList.myactivity == 'Y')
  	        	abstractObj.include("/sites/all/modules/core/exp_sp_core/modules/exp_sp_my_activity/exp_sp_my_activity.js");
			if(Drupal.settings.activeModulesList.myskill == 'Y')
  	        	abstractObj.include("/sites/all/modules/core/exp_sp_core/modules/exp_sp_my_skill/exp_sp_my_skill.js");
  	        	if(themeKey == "expertusoneV2"){
	  	        	abstractObj.includecss("/sites/all/modules/core/exp_sp_core/modules/exp_sp_my_activity/exp_sp_my_activity_v2.css");
	  	        	abstractObj.includecss("/sites/all/modules/core/exp_sp_core/modules/exp_sp_my_skill/exp_sp_my_skill_v2.css");
	  	        	abstractObj.includecss("/sites/all/modules/core/exp_sp_core/modules/exp_sp_my_profile/exp_sp_my_profile_v2.css");
  	        	}else{
  	        		abstractObj.includecss("/sites/all/modules/core/exp_sp_core/modules/exp_sp_my_activity/exp_sp_my_activity.css");
  	  	        	abstractObj.includecss("/sites/all/modules/core/exp_sp_core/modules/exp_sp_my_skill/exp_sp_my_skill.css");
  	  	        	abstractObj.includecss("/sites/all/modules/core/exp_sp_core/modules/exp_sp_my_profile/exp_sp_my_profile.css");
  	        	}
				$("#"+contentDiv).dialog({
					bgiframe: true,
					width:535,
					resizable:false,
					draggable:false,
					closeOnEscape: false,
					modal: true,
					close: function(){
						$('.ui-dialog').remove();
						$('#paintContent'+popupId).remove();
						/*if(document.getElementById('wizarad-myprofile-activity')){
							$('#wizarad-myprofile-activity').myprofileactivity();
							$("#wizarad-myprofile-activity").data('myprofileactivity').destroyLoader('wizarad-myprofile-activity');
						}else if(document.getElementById('wizarad-myprofile-skills')) {
							$("#wizarad-myprofile-skills").myprofileskills();
							$("#wizarad-myprofile-skills").data('myprofileskills').destroyLoader('wizarad-myprofile-skills');
						}*/
					},
					title: Drupal.t('LBL852'),
					overlay:
					{
					   opacity: 0.5,
					   background: '#000000'
					 }

				});
				/*if(qtipObj.dataIntId == 'announcement'){
					$('.ui-widget-overlay').css('z-index','1000');
				}else{
					$('.ui-widget-overlay').css('z-index','99');
				}*/
				$('.ui-widget-overlay').css('z-index','1000');
				var paintHtml = "<div id='paintContent"+popupId+"'>"+data+"</div>";
				$('.ui-dialog #'+contentDiv).html(paintHtml);
				var uiHeightSet = '';
				uiHeightSet = $('.ui-dialog:visible').css('top');
				uiHeightSet = Math.round(uiHeightSet.substring(uiHeightSet.length-2,0)) - 120;
				$('.ui-dialog').css('top',uiHeightSet+'px');
				var profileDialogHeight = $("#"+contentDiv).height();
				$(".ui-dialog #"+contentDiv).css('overflow-y','scroll').css('height',440);
				this.currTheme = Drupal.settings.ajaxPageState.theme;
			 	if(this.currTheme == "expertusoneV2"){
			 	$(".ui-dialog #"+contentDiv).addClass('user-popout-container');
				$('.user-popout-container').find('.block').css("margin-top","10px");
				changeDialogPopUI();
				$('.expertusV2PopupContainer').find('.ui-dialog-content').css("padding","0px 13px");

			 	}
				$("#"+loaderDivId).data(dataIntId).destroyLoader(loaderDivId);
				/* #0039834 Ie The Skills and Profile Activity Loader are Gets Generated and It is not Destroyed So Issue is Identifed For only My-profile Page */
				if(Drupal.settings.activeModulesList.myactivity == 'Y'){
					  if ($.browser.msie && loaderDivId == 'catalog-users') {
						$("#wizarad-myprofile-activity").data('myprofileactivity').destroyLoader('wizarad-myprofile-activity');
					  }
				}
				if(Drupal.settings.activeModulesList.myskill == 'Y'){
					if ($.browser.msie && loaderDivId == 'catalog-users') {
						$("#wizarad-myprofile-skills").data('myprofileskills').destroyLoader('wizarad-myprofile-skills');
				    }
				}
				vtip();
				
				setTimeout(function () {
					    $(".user-popout-container .profile-name-inline .limit-title").trunk8(trunk8.profile_title);
						$(".user-popout-container #userprofile-part .limit-desc").trunk8(trunk8.profile_desc);
			    }, 100);
				
			}

		});
		//$(".user-popout-container .profile-name-inline .limit-title").trunk8(trunk8.profile_title);
		//$(".user-popout-container #userprofile-part .limit-desc").trunk8(trunk8.profile_desc);
		}catch(e){
			// to do
		}
	},
	showHideMultipleLi: function() {
		try{
		var n = 1;
		var $list = $('.messages ul');
		$list.find('li').addClass('visibility').removeClass('hide');
		var totalWidth = 0, actualWidth = 0;
		var divId = (document.getElementById('show_expertus_message')!= null)? '#show_expertus_message' :'#show_expertus_tp_message';
		var divwidth= $(divId).parent().css('width');
		divwidth = parseInt(divwidth.substring(0,divwidth.length-2));
		$list.children().each(function() {
			totalWidth = $(this).width();
			if(totalWidth > actualWidth){
				if(totalWidth >= (divwidth-40)){
					actualWidth = divwidth-40;
				}else{
					actualWidth = totalWidth;
				}
			}

		});
		$list.find('li').removeClass('visibility').addClass('hide');
		$list.find('li:lt(' + n + ')').removeClass('hide');
		//$('.messages ul li').css('width',(actualWidth+5)+'px');
		$list.find('.hide').slideDown('slow', function(){
			if(Drupal.settings.ajaxPageState.theme == "expertusoneV2") {
			$('.msg-minmax-icon').css('background','url("/sites/all/themes/core/expertusoneV2/expertusone-internals/images/ExpertusIcons.png") no-repeat -118px -25px');
		    }else{
			$('.msg-minmax-icon').css('background','url("/sites/all/themes/core/expertusone/expertusone-internals/images/ExpertusIcons.png") no-repeat -118px -25px');
		    }
		});
		$('#message-container').css('visibility','visible');
		}catch(e){
			// to do
		}
	},
	/*selectedOptionTypeDisplay : function(sortbytxt,className,toggleClassName) {
		if (sortbytxt!=null && sortbytxt!=undefined) this.sortbyValue = sortbytxt;
		if(this.sortbyValue!=''){
			if(this.sortbyValue == 'AZ'){
				$('.'+className).text('');
				$('.'+className).text(Drupal.t('LBL017'));
			}
			else if(this.sortbyValue == 'Time'){
				$('.'+className).text('');
				$('.'+className).text(Drupal.t('LBL044'));
			}
			else if(this.sortbyValue == 'ClassStartDate'){
				$('.'+className).text('');
				$('.'+className).text(Drupal.t('LBL045'));
			}
			else if(this.sortbyValue == 'Mandatory'){
				$('.'+className).text('');
				$('.'+className).text(Drupal.t('LBL022'));
			}
			else if(this.sortbyValue == 'ZA'){
				$('.'+className).text('');
				$('.'+className).text(Drupal.t('LBL018'));
			}
			else if(this.sortbyValue == 'dateOld'){
				$('.'+className).text('');
				$('.'+className).text(Drupal.t('LBL019'));
			}
			else if(this.sortbyValue == 'dateNew'){
				$('.'+className).text('');
				$('.'+className).text(Drupal.t('LBL020'));
			}
			else if(this.sortbyValue == 'type'){
				$('.'+className).text('');
				$('.'+className).text(Drupal.t('LBL021'));
			}
		} else {
			$('.'+className).text('');
		}
		$("body").data("learningcore").sortTypeToggle(toggleClassName);
	},*/

	closeErrorMessage: function() {
		try{
		$('#message-container').remove();
		$('#esign-mandatory-error').css('display','none');
		$('#esign-pass-error').css('display','none');
		$('.esign-msg-close-btn').css('display','none');
		}catch(e){
			// to do
		}
	},

	paintLearningImage : function(cellvalue, options, rowObject) {
		try{
		// console.log('cellvalue=', cellvalue, 'rowObject-', rowObject);
		var html = '';
		var clsImage 				= rowObject['learning_type_image'];
		var dataDelType				= rowObject['learning_type'];
		html += '<div title="' +Drupal.t(dataDelType) + '" class="'+ clsImage +' vtip"></div>';
		return html;
		}catch(e){
			// to do
		}
	},

	deleteLearnWidget : function(contentId, widgetId ){
		try{
			var loaderElement = ($(".salesforce-widget").length) ?  "widget" :  "main";
			this.createLoader(loaderElement); // show loader
			$('.loadercontent').css('z-index','2000');
			var params = {
				id: contentId,
				widgetId: widgetId,
				action: "delete",
				salesforce: ($(".salesforce-widget").length) ? 1: 0
			};
			$.ajax({
				type: "POST",
				url: '/?q=user-preference/update',
				data:  params,
				dataType:  'json',
				success: function(result){
					if (result.session != undefined && result.session == 'session_out') {
						self.location='?q=learning/enrollment-search';
						return;
					}
					$("#" + contentId + " #" + widgetId).remove();
					Drupal.settings.last_left_panel = result.last_left_panel;
					//52001: Change class pop not showing when we click on change class link in action link button in My Enrollment panel
					if(widgetId == 'tab_my_learningplan_customized'){
						$( "#page-container" ).append( '<div id="learningplan-tab-inner" class="dummyelement_tab_my_learningplan" style="display:none;"></div>' );
						Drupal.attachBehaviors('learningplan-tab-inner');
						$( "#learningplan-tab-inner" ).learningplan();
					}
					if(widgetId == 'tab_my_enrollment_customized'){
						$(".page-learning-enrollment-search #page-container" ).append( '<div id="learner-enrollment-tab-inner" class="dummyelement_tab_my_enrollment" style="display:none;"></div>' );
						Drupal.attachBehaviors('learner-enrollment-tab-inner');
						$("#learner-enrollment-tab-inner").enrollment();
						$("#learner-enrollment-tab-inner" ).contentLaunch();
					}
					$('#delete-msg-wizard').remove();
					if (result.sidebar == false) {
						$("body").data("learningcore").removeSideBarSection();
					}
					if (result.last_left_panel == true) {
						$("#highlight-list li:first").find(".delete-widget").css("display","none");
						$("#highlight-list li:first").find(".delete-widget-disabled").css("display","block");
						// Retrive 20 rows, when it was a last panel in left - 51857
						var gridId = $("#highlight-list li:first").find(".ui-jqgrid-btable").attr('id');
						$("#"+gridId).setGridParam({rowNum: 20, rowList: [20,30,40], page:1}).trigger('reloadGrid');
						$("#highlight-list li:first").find(".page_count_view").text(20);
					}
					$("body").data("learningcore").destroyLoader(loaderElement);
				}
			});
		}catch(e){
			// to do
		}

	},

	showWidgetList : function(){
		try {
			var params = { salesforce: ($(".salesforce-widget").length) ? 1: 0 };
			$.ajax({
				type: "GET",
				url: '/?q=user-preference/list',
				data:  params,
				success: function(result){
					if (result == 'session_out') {
						self.location='?q=learning/enrollment-search';
						return;
					}
				  if ($("#user-preference-settings #manage-dd-list").length) {
					  $("#user-preference-settings #manage-dd-list").replaceWith(result);
				  } else {
					  $("#user-preference-settings").append(result);
				  }
				//  $('#manage-dd-list').css('visibility','visible');
				  //Vtip-Display toolt tip in mouse over
				  vtip();
				}
			});
		}catch(e){
			// to do
		}
	},

	addLearnWidget : function(contentId, widgetId ){
		try {
			var loaderElement = ($(".salesforce-widget").length) ?  "widget" :  "main";
			this.createLoader(loaderElement); // show loader
			var params = {
				id: contentId,
				widgetId: widgetId,
				action: "add",
				salesforce: ($(".salesforce-widget").length) ? 1: 0
			};
			$.ajax({
				type: "POST",
				url: '/?q=user-preference/update',
				data:  params,
				dataType: 'json',
				success: function(result){
					//52001: Change class pop not showing when we click on change class link in action link button in My Enrollment panel
					if(widgetId == 'tab_my_learningplan_customized'){
						$(".dummyelement_tab_my_learningplan" ).remove();
					}
					if(widgetId == 'tab_my_enrollment_customized'){
				    	$(".dummyelement_tab_my_enrollment" ).remove();
					}
				  if ($(".region-highlight").length == 0) {
					$("#main-wrapper #content .section").append('<div class="region region-highlight"><ul class="sortable-list" id="highlight-list"></ul></div>');
					createSortableList(".region-highlight .sortable-list");
				  }

				  if (result.sidebar == true && $(".region-sidebar-second").length == 0) {
						$("body").data("learningcore").addSideBarSection();
				  }
				  Drupal.settings.last_left_panel = result.last_left_panel;
				  $("#"+contentId).append(result.content);
				  $('#manage-dd-list').css('visibility','hidden');
				  switch(widgetId) {
				  	case "tab_my_enrollment_customized":
				  		enrFilters = [];
				  		enrFilters.push({filterVal : 'lrn_crs_cmp_enr|lrn_crs_cmp_inp|lrn_crs_cmp_att', attrVal : 'Enrolled', type : 'Enrollmentpart',name: 'status_filter_myenrollment'});
				  		Drupal.settings.myenrolmentSearchStr = '&regstatuschk=lrn_crs_cmp_enr|lrn_crs_cmp_inp|lrn_crs_cmp_att&del_type=&tra_type=&price=&scheduled=&reg=&due=&assignedby=&location=&selectedLocID=&searchText=&sortBy=AZ'				 
				  		$("#learner-enrollment-tab-inner").contentLaunch();
				  		$("#block-take-survey").surveylearner();
				  		if(Drupal.settings.convertion.mylearn_version==1) {
				  			$("#learner-enrollment-tab-inner").contentPlayer();
				  		}
						statusFilterSubmit('myenrollment','AZ');
						$("#learner-enrollment-tab-inner").enrollment();
				  		break;
				  	case "tab_my_learningplan_customized":
				  		prgFilters = [];
				  		prgFilters.push({filterVal : 'lrn_tpm_ovr_enr|lrn_tpm_ovr_inp', attrVal : 'Enrolled', type : 'EnrollmentLP',name: 'status_filter_myprograms'});
					    Drupal.settings.myprogramsSearchStr = '&regstatuschk=lrn_tpm_ovr_enr|lrn_tpm_ovr_inp&del_type=&tra_type=&price=&scheduled=&reg=&due=&assignedby=&location=&selectedLocID=&searchText=&sortBy=AZ';
				  		statusFilterSubmit('myprograms','AZ'); 
				  		$("#learningplan-tab-inner").contentLaunch();
				  		$("#block-take-survey").surveylearner();
				  		if(Drupal.settings.convertion.mylearn_version==1) {
				  			$("#learningplan-tab-inner").contentPlayer();
				  		}
				  		$("#learningplan-tab-inner").learningplan();
						break;
				  	case "tab_instructor_desk_customized":
				  		clsFilters = [];
				  		clsFilters.push({filterVal : 'scheduled', attrVal : 'Scheduled', type : 'Scheduled',name: 'status_filter_myclasses'});
				  		Drupal.settings.myclassesSearchStr = '&regstatuschk=scheduled&del_type=&tra_type=&price=&scheduled=&reg=&due=&assignedby=&location=&selectedLocID=&searchText=&sortBy=AZ';
					  	statusFilterSubmit('myclasses','AZ');
					  	$("#instructor-tab-inner").instructordesk();	
						break;
				  	case "announcement":
				  		$("#div_announcement").announcement();
						break;
				  	case "tab_my_calendar":
				  		$("#catalog-admin-cal").mycalendar();
						break;
				  	case "mytranscript":
						$("#div_my_transcript").mytranscript();
						break;
				  	case "online_users":
				  		$("#expertus-online-users").lnrwhoisonline();
						break;
				  }
				 	if (result.last_left_panel == false) {
				 		$("#highlight-list .delete-widget-disabled").css('display','none');
						$("#highlight-list .delete-widget").css('display','block');
						var gridId = $("#highlight-list li:first").find(".ui-jqgrid-btable").attr('id');
						var rowsView = $("#"+gridId).jqGrid('getGridParam', 'rowNum'); // Check the rows, based on the retrive new results
						if (rowsView > 10 ) {
							$("#"+gridId).setGridParam({ rowNum:10, rowList:[10,15,20], page: 1 }).trigger("reloadGrid");
							$("#highlight-list li:first").find(".page_count_view").text(10);
						}
					}
					attachHandlerToFilterIcon();
					$("body").data("learningcore").destroyLoader(loaderElement);
				}
			});
		}catch(e){
			// to do
		}
	},

	removeSideBarSection : function() {
		try {
			Drupal.settings.mylearning_right = false;
			$(".region-sidebar-second").remove();

			$("#content").addClass("clsContentFull");
			var currentPage = $('.ui-pg-input').val();
			var currentWidth = ($(".salesforce-widget").length) ? $("#block-system-main-menu").width() : $("#header").width();
			if ($("#tab_my_enrollment").length) { // enrollment
			  $("#learner-enrollment-tab-inner").data("enrollment").createLoader('enroll-result-container');
			  $("#enroll-result-container").addClass("clsenroll-result-container");
			  if (Drupal.settings.last_left_panel) {
				  $("#paintEnrollmentResults").jqGrid('setGridParam', { rowNum:20, rowList: [20,30,40], page:1}); // set new grid params, when it was a last panel in left
				  $("#highlight-list li:first").find(".page_count_view").text(20);
			  } else {
				  $("#paintEnrollmentResults").jqGrid('setGridParam', { page:1});
			  }
			  $("#paintEnrollmentResults").jqGrid('setGridWidth', currentWidth);
			  $("#paintEnrollmentResults").trigger("reloadGrid");
			}

			if ($("#tab_my_learningplan").length) { // lp
			  $("#learningplan-tab-inner").data("learningplan").createLoader('enroll-lp-result-container');
			  $("#enroll-lp-result-container").addClass("clsenroll-lp-result-container");
			  if (Drupal.settings.last_left_panel) {
				  $("#paintEnrollmentLPResults").jqGrid('setGridParam', { rowNum:20, rowList: [20,30,40], page:1});  // set new grid params, when it was a last panel in left
				  $("#highlight-list li:first").find(".page_count_view").text(20);
			  } else {
				  $("#paintEnrollmentLPResults").jqGrid('setGridParam', { page:1});
			  }
			  $("#paintEnrollmentLPResults").jqGrid('setGridWidth', currentWidth);
			  $("#paintEnrollmentLPResults").trigger("reloadGrid");
			}

			if ($("#tab_instructor_desk").length) { // my classes
			  $("#instructor-tab-inner").data("instructordesk").createLoader('instructor-result-container');
			  $("#instructor-result-container").addClass("clsinstructor-result-container");
			  if (Drupal.settings.last_left_panel) {
				  $("#paintInstructorResults").jqGrid('setGridParam', { rowNum:20, rowList: [20,30,40], page:1});  // set new grid params, when it was a last panel in left
				  $("#highlight-list li:first").find(".page_count_view").text(20);
			  } else {
				  $("#paintInstructorResults").jqGrid('setGridParam', { page:1});
			  }
			  $("#paintInstructorResults").jqGrid('setGridWidth', currentWidth);
			  $("#paintInstructorResults").trigger("reloadGrid");
			}

			$(".enroll-bottom-curve").addClass("clsRightNoData");
		}catch(e){
			// to do
		}
	},

	addSideBarSection : function() {
		try {
			Drupal.settings.mylearning_right = true;

			if ($(".region-sidebar-second").length == 0) {
				$("#main-wrapper #main").append('<div class="region region-sidebar-second column sidebar"><ul class="sortable-list" id="sidebar_second-list"></ul></div>');
				createSortableList(".region-sidebar-second .sortable-list");
			}

			$("#content").removeClass("clsContentFull");
			var currentPage = $('.ui-pg-input').val();

			if ($("#tab_my_enrollment").length) { // enrollment
			  var currentWidth = $("#enroll-result-container").width();
			  $("#learner-enrollment-tab-inner").data("enrollment").createLoader('enroll-result-container');
			  $("#enroll-result-container").removeClass("clsenroll-result-container");
			  $("#paintEnrollmentResults").jqGrid('setGridWidth', currentWidth);
			  $("#paintEnrollmentResults").trigger("reloadGrid",[{page:currentPage}]);

			}

			if ($("#tab_my_learningplan").length) { // lp
			  var currentWidth = 663;
			  $("#learningplan-tab-inner").data("learningplan").createLoader('enroll-lp-result-container');
			  $("#enroll-lp-result-container").removeClass("clsenroll-lp-result-container");
			  $("#paintEnrollmentLPResults").jqGrid('setGridWidth', currentWidth);
			  $("#paintEnrollmentLPResults").trigger("reloadGrid",[{page:currentPage}]);

			}

			if ($("#tab_instructor_desk").length) { // my classes
			  var currentWidth = $("#instructor-result-container").width();
			  $("#instructor-tab-inner").data("instructordesk").createLoader('instructor-result-container');
			  $("#instructor-result-container").removeClass("clsinstructor-result-container");
			  $("#paintInstructorResults").jqGrid('setGridWidth', currentWidth);
			  $("#paintInstructorResults").trigger("reloadGrid",[{page:currentPage}]);

			}

			$(".enroll-bottom-curve").removeClass("clsRightNoData");
		}catch(e){
			// to do
		}
	},

	displayDeleteWizardLearner : function(title,objectId,objectType,wSize){
		try {
			var uniqueClassPopup = '';
			var currTheme = Drupal.settings.ajaxPageState.theme;
			var wSize = (wSize) ? wSize : 300;
			var closeButAction = '';

			closeButAction = function(){ $("body").data("learningcore").deleteLearnWidget(objectType,objectId); };
			$('#delete-msg-wizard').remove();
		    var html = '';
		    html+='<div id="delete-msg-wizard" style="display:none; padding: 0px;">';
		    html+='<table width="100%" cellpadding="0" cellspacing="0" border="0" valign="center">';
			if(currTheme == 'expertusoneV2'){
		    		html+= '<tr><td style="padding: 30px 24px;" class="commanTitleAll">'+title+''+'?'+'</td></tr>';
		    } else {
		    		html+= '<tr><td color="#333333" style="padding: 30px 24px; text-align: justify;">'+title+''+'?'+'</td></tr>';
		    }
		    html+='</table>';
		    html+='</div>';
		    $("body").append(html);
		    var closeButt={};
		    closeButt[Drupal.t('LBL109')]=function(){ $(this).dialog('destroy');$(this).dialog('close');$('#delete-msg-wizard').remove();};
		    closeButt[Drupal.t('Yes')]= closeButAction;

		    $("#delete-msg-wizard").dialog({
		        position:[(getWindowWidth()-400)/2,200],
		        bgiframe: true,
		        width:wSize,
		        minHeight:"auto",
		        resizable:false,
		        modal: true,
		        title: Drupal.t('LBL082') + ' ' + Drupal.t('Panel'),//"title",
		        buttons:closeButt,
		        closeOnEscape: false,
		        draggable:false,
		        overlay:
		         {
		           opacity: 0.9,
		           background: "black"
		         }
		    });
		    $('.ui-dialog').wrap("<div id='delete-object-dialog' class='"+uniqueClassPopup+"'></div>");

		    $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').addClass("removebutton").end();
		    $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(1)').before('<div class="admin-save-button-left-bg"></div>');
		    $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(1)').addClass("admin-save-button-middle-bg").end();
		    $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(1)').after('<div class="admin-save-button-right-bg"></div>');

		    $("#delete-msg-wizard").show();

			$('.ui-dialog-titlebar-close').click(function(){
		        $("#delete-msg-wizard").remove();
		    });
			if(currTheme == 'expertusoneV2'){
		    	changeDialogPopUI();
		    }
			$("#delete-msg-wizard .commanTitleAll").css('padding','30px 24px');
			/*-- 37211: Unable to delete a class in FF version 32.0 --*/
		    if($('div.qtip-defaults').length > 0) {
		    	var prevZindex = $('.qtip-defaults').css('z-index');
		    	$('#delete-object-dialog .ui-widget-content').css('z-index', prevZindex+2);
		    	$('.ui-widget-overlay').css('z-index', prevZindex+1);
		    }
		}catch(e){
			// to do
		}
	},
	refreshJScrollPane: function(selector) {
		try {
			if($(selector).data('jsp') !== undefined) {
				$(selector).data('jsp').reinitialise();
				setTimeout(function () {
					if($(selector+" .jspContainer").find('.jspVerticalBar').length==0){
						$(selector+' .jspPane').css('top','0px');
					}
				},100);
			} else {
				$(selector).jScrollPane({ autoReinitialise: true });
			}
		} catch(e) {
			// window.console.log(e, e.stack);
		}
	},
	refreshLastAccessedLearningRow: function(grid, gridRow) {
		try {
			var rowFound = false;
			// console.log('refreshLastAccessedLearningRow', console.trace());
			var grid = $(grid);
			if(gridRow === undefined) {
				var gridRow = grid.jqGrid('getGridParam', 'lastAccessedRow');
			}
			if(gridRow !== undefined && gridRow != null && typeof gridRow.id != 'undefined') {
				// console.log(gridRow, gridRow.id);
				var enrId = gridRow.id;
				// console.log('refreshLastAccessedLearningRow enr_id', enrId);
				var options = {data: {enr_id: enrId,page:1,rows:1}};
				grid.jqGrid('updateRowByRowId', options);
				rowFound = true;	// return true to stop the grid reload
				grid.jqGrid('setGridParam', {lastAccessedRow: null});	// set it to null to avoid grid reload confusions
			} else {
				// grid.trigger("reloadGrid",[{page:1}]);
				rowFound = false;	// return false so that reload of grid happens as no last accessed grid row found
			}
		} catch(e) {
			rowFound = false;
			// window.console.log(e, e.stack);
		}
		// window.console.log(rowFound);
		return rowFound;
	}
});

$.extend($.ui.learningcore.prototype,EXPERTUS_SMARTPORTAL_AbstractManager, EXPERTUS_SMARTPORTAL_AbstractDetailsWidget,{defaults:{start:true}});

})(jQuery);

$(function() {
	try{
	$("body").learningcore();

  //below code to load showHideMultipleLi() for messgae display
  var wrul=window.location;
	wrul=wrul.toString();
	var tmp=$('#message-container').html();
	if((tmp != null) &&(tmp != '')){
		if(wrul.indexOf("cart")>=0 || wrul.indexOf("administration/order")){
			$('body').data('learningcore').showHideMultipleLi();
		}
	}


  // Command to update score on video ctools modal close
  Drupal.ajax.prototype.commands.updateVODScoreOnCtoolsModalClose = function(ajax, response, status) {
    if (typeof Drupal.CTools.Modal.closeCommand.updateVODScore === 'undefined') {
      //console.log('exp_sp_learning.js : updateVODScoreOnCtoolsModalClose() - response.launched_from = ' + response.launched_from);
      //console.log('exp_sp_learning.js : updateVODScoreOnCtoolsModalClose() - response.course_id = ' + response.course_id);
      //console.log('exp_sp_learning.js : updateVODScoreOnCtoolsModalClose() - response.class_id = ' + response.class_id);
      //console.log('exp_sp_learning.js : updateVODScoreOnCtoolsModalClose() - response.lesson_id = ' + response.lesson_id);
      //console.log('exp_sp_learning.js : updateVODScoreOnCtoolsModalClose() - response.enroll_id = ' + response.enroll_id);
      //console.log('exp_sp_learning.js : updateVODScoreOnCtoolsModalClose() - response.prev_content_status = ' + response.prev_content_status);
      Drupal.CTools.Modal.closeCommand.updateVODScore =
        (function (launchedFrom, courseId, classId, lessonId, versionId,enrollId, prevContentStatus, videoSessionId) {
          var jsObject = 'contentLaunch';
          var objectSelector = '';
           if (launchedFrom == 'LP') {
             var objectSelector = '#learningplan-tab-inner';
           }
           else if (launchedFrom == 'ME') {
        	   if(document.getElementById('lnr-catalog-search'))
        		   var objectSelector = '#lnr-catalog-search';
        	   else
             		var objectSelector = '#learner-enrollment-tab-inner';
           }

           return { cmd: function () {
        	   			  $( "#launch-content-container" ).parent().parent('.ui-widget-content').css( "visibility", "visible" );
        	   			  $("#lplaunch-content-container" ).parent().parent('.ui-widget-content').css( "visibility", "visible" );
                           //console.log('exp_sp_learning.js : updateVODScore.cmd() - jsObject = ' + jsObject);
                           //console.log('exp_sp_learning.js : updateVODScore.cmd() - launchedFrom = ' + launchedFrom);
                           //console.log('exp_sp_learning.js : updateVODScore.cmd() - courseId = ' + courseId);
                           //console.log('exp_sp_learning.js : updateVODScore.cmd() - classId = ' + classId);
                           //console.log('exp_sp_learning.js : updateVODScore.cmd() - lessonId = ' + lessonId);
                           //console.log('exp_sp_learning.js : updateVODScore.cmd() - enrollId = ' + enrollId);
                           //console.log('exp_sp_learning.js : updateVODScore.cmd() - prevContentStatus = ' + prevContentStatus);

                           $(objectSelector).data(jsObject).updateVODScoreOnCtoolsModalClose(
                               launchedFrom,
                               courseId,
                               classId,
                               lessonId,
                               versionId,
                               enrollId,
                               prevContentStatus,
							   videoSessionId,
							   response.type,
							   response.h5p_cnt_id
							   );
                         }
                   };
        })(response.launched_from, response.course_id, response.class_id, response.lesson_id,response.version_id, response.enroll_id, response.prev_content_status, response.video_session_id);
    }
  };

  Drupal.ajax.prototype.commands.ctoolsModalCreateLoader = function(ajax, response, status) {
    EXPERTUS_SMARTPORTAL_AbstractDetailsWidget.createLoader('modal-content');
    $('.ctool-video-modal .ctools-modal-content .ctools-sample-modal-content ctools-face-table').css('margin', '0 auto');
    $('.ctool-video-modal .loaderimg').css('margin', '0 auto');
    $( "#launch-content-container" ).parent().parent('.ui-widget-content').css( "visibility", "hidden" );
    $("#lplaunch-content-container" ).parent().parent('.ui-widget-content').css( "visibility", "hidden" );
	seekForFirstTime = false;
	if(videojs !== undefined && response.video_id !== undefined) {
	disposeVideoJSPlayer(response.video_id);
	videojs(response.video_id, {}, function(){
	  // Player (this) is initialized and ready.
	  var vodPlayer = this;
	  vodPlayer.on('mouseout', function(){ 
		  this.controls(false);
		});

		vodPlayer.on('mouseover', function(){
		  this.controls(true);
		});
	  // $('#'+response.video_id).css('visibility', 'visible');
	  // $('#'+response.video_id).find('video').css('visibility', 'visible');
	  winobj = {closed: false};
	  SCORM_API_WRAPPER.prototype.refreshSession();
	  if(response.play_from !== undefined) {
	    vodPlayer.currentTime(response.play_from);
	    vodPlayer.play();
		seekForFirstTime = true;
	  }
	  vodPlayer.on('loadedmetadata', function() {
		if(seekForFirstTime && response.play_from > this.currentTime()) {
		  this.currentTime(response.play_from);
		  seekForFirstTime = false;
		}
	  });
      if(response.launchedFrom == 'LP'){
          setObj = $("#learningplan-tab-inner").data("contentLaunch");
      }
	  else if(response.launchedFrom == 'ME'){
		  if(document.getElementById('lnr-catalog-search'))
			  setObj = $("#lnr-catalog-search").data("contentLaunch");
		  else
          	setObj = $("#learner-enrollment-tab-inner").data("contentLaunch");
      }
	  updateStatusToDB = setInterval(function(){updateVideoProgressToDB(response,setObj); },Drupal.settings.content);
	  vodPlayer.on('durationchange', function() {
		this.controlBar.progressControl.seekBar.loadProgressBar.update();
	  });
	  $('#loaderdivmodal-content').remove();
	  ajaxInterval = vodPlayer.setInterval(function() {
	    updateVideoProgress(vodPlayer);
	  }, 1000, vodPlayer);
      
	  var updateFreq = (response.update_frequency !== undefined ? (response.update_frequency * 1000) : 10000);
	  saveInterval = setInterval(function() {
	    saveVideoProgress(vodPlayer, false);
	  }, updateFreq, vodPlayer);
      
	  vodPlayer.on('ended', function(){
	    vodPlayer = this;
		if(vodPlayer.techName_ == 'Youtube') {
			vodPlayer.pause();
			vodPlayer.play();
		}
	    var progress	= 100; // when player cursor moved at the end.
	    videoTrackerProgress = {
	      session_id: response.video_id,
	      current_position: this.currentTime(),
	      progress: progress,
	      video_duration: this.duration(),
	      additional_data: {video_session_id: response.video_id}
	    };
	    saveVideoProgress(vodPlayer, true);
	    updateVideoProgressToDB(response,setObj);
	    clearInterval(saveInterval);
	    clearInterval(ajaxInterval);
	    clearInterval(updateStatusToDB);
	  });
	});
	}
  };


  Drupal.behaviors.expInitJWPlayer =  {
    attach: function (context, settings) {
      //alert('In exp_sp_learning.js : Drupal.behaviors.expInitJWPlayer attach()');
      $('.exp-jwplayer:not(.exp-jwplayer-initialized)').addClass('exp-jwplayer-initialized').each(function () {
        //alert($(this).data('exp-jwplayer-settings'));
        var jwPlayerSettings = eval('(' + $(this).data('exp-jwplayer-settings') + ')');
        jwPlayerSettings.events = {
        		onReady : function() {
        			EXPERTUS_SMARTPORTAL_AbstractDetailsWidget.destroyLoader('modal-content');/*this.play();*/
        			// console.log(this);
//        			this.seek(100);
        			expjwPlayerSettings = this;
        		},
        		onError : function(e) {
        			$('.exp-jwplayer-container').hide();
        			$('.no-video-found').show();
        		},
        		onComplete: function() {
					// console.log("video completed!");
				}
        };
        var initDivId = $(this).attr('id');
        //alert ('In exp_sp_learning.js : Drupal.behaviors.expInitJWPlayer attach() : id = ' + initDivId);
        if (typeof jwplayer === "undefined") {
          //alert("In exp_sp_learning.js : jwplayer is undefined");
          $.getScript("/sites/all/modules/core/exp_sp_core/js/jwplayer/jwplayer.js",
              function() {
                jwplayer(initDivId).setup(jwPlayerSettings);
              }
          );
        }
        else {
          //alert("In exp_sp_learning.js : jwplayer is already defined");
          jwplayer(initDivId).setup(jwPlayerSettings);
        }
        if(document.getElementById('launch-lp-wizard')){
        	$('#launch-lp-wizard').parent().css('display', 'none');
        }
        else if(document.getElementById('launch-wizard')){
        	$('#launch-wizard').parent().css('display', 'none');
        }
      });
    }
  };

  Drupal.behaviors.expInitJWPlayerYouTube =  {
    attach: function (context, settings) {
      //alert('In exp_sp_learning.js : Drupal.behaviors.expInitJWPlayerYouTube attach()');
      $('.exp-jwplayer-yt:not(.exp-jwplayer-yt-initialized)').addClass('exp-jwplayer-yt-initialized').each(function () {
        //alert($(this).data('exp-jwplayer-yt-settings'));
        var jwPlayerSettings = eval('(' + $(this).data('exp-jwplayer-yt-settings') + ')');
        jwPlayerSettings.events = {
        		onReady : function() {
        			EXPERTUS_SMARTPORTAL_AbstractDetailsWidget.destroyLoader('modal-content');/*this.play();*/
					// console.log(this);
       			// this.seek(100);
					expjwPlayerSettings = this;
        			},
    			onError : function(e) {
    				// console.log("video error!");
        		},
        		onComplete: function() {
					// console.log("video completed!");
				}
        };
        var initDivId = $(this).attr('id');
        //alert ('In exp_sp_learning.js : Drupal.behaviors.expInitJWPlayerYouTube attach() : id = ' + initDivId);
        if (typeof jwplayer === "undefined") {
          //alert("In exp_sp_learning.js : jwplayer is undefined");
          $.getScript("/sites/all/modules/core/exp_sp_core/js/jwplayer/jwplayer.js",
              function() {
                jwplayer(initDivId).setup(jwPlayerSettings);
              }
          );
        }
        else {
          //alert("In exp_sp_learning.js : jwplayer is already defined");
          jwplayer(initDivId).setup(jwPlayerSettings);
        }
      });
    }
  };
	}catch(e){
		// to do
		// console.log(e);
	}
});

(function($) {
	$.fn.getNewEsignPopup = function(esignObj){
	try{
	var obj = new Object;//this;
	if(typeof(esignObj) == "string"){
		$.fn.getNewEsignPopup.esignObj = $.parseJSON(esignObj);
	}else{
		$.fn.getNewEsignPopup.esignObj = esignObj;
	}
	url = resource.base_url+'/?q='+"ajax/learningcore/getConcatenatedUserDets";
	$.ajax({
		type: "POST",
		url: url,
		//data:  '', //Commented by ganeshbabuv to avoid the data value as null when invoke the ajax callback for implement salesforce cookieless option #0054508 on 30th Sep 2015 10:40 AM
		success: function(details){
			obj.esignObj = $.fn.getNewEsignPopup.esignObj;
		    $('#esign-wizard , #esign-wizard-dialog').remove(); // esign-wizard-dialog Removed For this Issue #0038827
		    var html = "";
		    html += '<div id = "esign-wizard" class="esign-wizard-class">';
		    html += '<div id="esign-pass-error"><span class="esign-span-error">'+details[0].password_valid_txt+'</span></div>';
		    html += '<div id="esign-mandatory-error"><span class="esign-span-error">'+details[0].password_req_txt+'</span></div>';
		    html += '<div class="esign-msg-close-btn" onclick="$(\'body\').data(\'learningcore\').closeErrorMessage();"></div>';
		    html += '<div id="esign-message">'+details[0].esign_static_message+'</div>';
		    html += '<table class="esign-table" cellpadding="3" cellspacing="0" border="0" valign="center">';
		   // html += '<tr><td><table cellpadding="4" cellspacing="0" border="0" valign="center">';
		    html += '<tr><td class="esign-labels esign-field-label">'+details[0].esign_date_txt+' : </td><td class="esign-label-values esign-label-values-container">'+details[0].curr_date_time+'&nbsp;';
			html += details[0].time_zone+'</td></tr>';
			html += '<tr><td class="esign-field-label esign-field-label-name">'+details[0].esign_name_txt+' : </td><td class="esign-label-values esign-field-label-name">'+details[0].full_name+'</td></tr>';
			//html += '</table>';

			//html +='<table cellpadding="4" cellspacing="0" border="0" valign="center">';
			html +='<tr><td class="esign-field-label">'+details[0].esign_uname_txt+' :</td>';
			html +='<td class="esign-label-values"><input id="esign-uname" tabindex="1001" type ="text" disabled="true" class="readonly-text" value="'+details[0].user_name+'" maxlength = "60" size ="32" readonly></td>';
			html +='</tr>';
			html +='<tr><td class="esign-field-label">'+details[0].esign_pass_txt+' :<span class="require-text">*</span></td>';
			html +='<td class="esign-label-values"><input id="esign-pass" tabindex="1002" type ="password" name = "'+SMARTPORTAL.t('Password')+'" maxlength = "60" size ="32"></td>';
			html +='</tr>';
			html +='</table>';
			//html +='</td></tr></table>';
			html +='</div>';
		    $("body").append(html);
		    var closeButt={};
		    closeButt[details[0].esign_cancel_txt]=function(){ $(this).dialog('destroy');$(this).dialog('close');$('#esign-wizard').remove();
		    if(esignObj){
		    	if(obj.esignObj.esignFor == "AddAdmin"){
		    		$("body").data("learningcore").deleteDrupalUsers(obj.esignObj.drupalUserId);
				}else if(obj.esignObj.esignFor == "contentAuthorPresentationInteractions") 
				{
					//$("#h5p_presentation_frame").contents().find("#h5p-content-node-form").attr("esigndisplayed","off");
					$(".h5p-editor-iframe").attr("esigndisplayed","off");
				}else if(obj.esignObj.esignFor == "contentAuthorAddInteractions_edit" || obj.esignObj.esignFor == "contentAuthorAddInteractions_edit_publish" || obj.esignObj.esignFor == "contentAuthorAddInteractions_edit_unpublish"){
							$(".h5p-editor-iframe").attr("esigndisplayed","off");
					}
				else if(obj.esignObj.esignFor == "contentAuthorAddInteractions_new" || obj.esignObj.esignFor == "contentAuthorAddInteractions_new_publish" || obj.esignObj.esignFor == "contentAuthorAddInteractions_new_unpublish"){
							$("#exp-sp-administration-contentauthor-addedit-form").attr("esigndisplayed","off");
					}
				else if(obj.esignObj.esignFor == "attachCrsDelete"){
				
				}
		    	$("div#"+obj.esignObj.popupDiv).show();
		    }
		    };
		    closeButt[details[0].esign_sign_txt]=function(){ $("body").data("learningcore").getNewEvaluateLogin();  };

		    $("#esign-wizard").dialog({
		        position:[(getWindowWidth()-400)/2,200],
		        bgiframe: true,
		        width:348,
		        resizable:false,
		        modal: true,
		        title: details[0].esign_title,
		        buttons:closeButt,
		        closeOnEscape: false,
		        draggable:true,
		        overlay:
		         {
		           opacity: 0.9,
		           background: "black"
		         }
		    });

		    $('#esign-wizard').parent('.ui-dialog').wrap("<div id='esign-wizard-dialog'></div>");

			 setTimeout(function () {
		    	  $('#esign-pass').focus();
		    	}, 10);

			$('#esign-wizard-dialog .ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').attr('tabindex','1003');
			$('#esign-wizard-dialog .ui-dialog-buttonpane .ui-dialog-buttonset button:eq(1)').attr('tabindex','1004');
			$('#esign-wizard-dialog .ui-dialog-buttonpane .ui-dialog-buttonset button:eq(1)').attr('id','esign-sign-button');

			$('#esign-wizard-dialog .ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').before('<div class="white-btn-bg-left"></div>');
			$('#esign-wizard-dialog .ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').addClass('white-btn-bg-middle');
			$('#esign-wizard-dialog .ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').after('<div class="white-btn-bg-right"></div>');
			$('#esign-wizard-dialog .ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').next('.white-btn-bg-right').css('margin-right','0px');
		    $('#esign-wizard-dialog  .ui-dialog-buttonpane .ui-dialog-buttonset button:eq(1)').before('<div class="admin-save-button-left-bg esign-admin-save-button-left-bg"></div>');
			$('#esign-wizard-dialog  .ui-dialog-buttonpane .ui-dialog-buttonset button:eq(1)').addClass("admin-save-button-middle-bg");
			$('#esign-wizard-dialog  .ui-dialog-buttonpane .ui-dialog-buttonset button:eq(1)').after('<div class="admin-save-button-right-bg"></div>');
		    $('#esign-wizard-dialog .ui-dialog-buttonpane .ui-dialog-buttonset button:eq(1)').addClass("esign-button-wizard").end();
		    $('#esign-wizard-dialog .ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').addClass("esign-close-button").end();

		    if(esignObj){
		    	$("div#"+obj.esignObj.popupDiv).hide();
		    }
		    $("#esign-wizard").show();
		    this.currTheme = Drupal.settings.ajaxPageState.theme;
		 	if(this.currTheme == "expertusoneV2"){
		 	changeChildDialogPopUI('esign-wizard-dialog');
		    }
		 	//when add/attach content E-Sign pop up gets hidden behind the Add content pop up #0030278 And z-index Increased For this Ticket #0040188 and #0040178
		 	$('#esign-wizard').parent('.ui-dialog').parent('#esign-wizard-dialog').prev('#esign-wizard-dialog').remove();
		    $("#esign-wizard-dialog").find('.ui-dialog').css('z-index','60011');
		    $("#esign-wizard-dialog").next('.ui-widget-overlay').css({'z-index':'60010','position':'fixed'});

		   $('.ui-dialog-titlebar-close').click(function(){
		        $("#esign-wizard").remove();
		        if(esignObj){
				    if(obj.esignObj.esignFor == "AddAdmin"){
				    	$("body").data("learningcore").deleteDrupalUsers(obj.esignObj.drupalUserId);
				    }else if(obj.esignObj.esignFor == "contentAuthorPresentationInteractions") 
					{
						//$("#h5p_presentation_frame").contents().find("#h5p-content-node-form").attr("esigndisplayed","off");
						$(".h5p-editor-iframe").attr("esigndisplayed","off");
						
					}
				    else if(obj.esignObj.esignFor == "contentAuthorAddInteractions_edit"  || obj.esignObj.esignFor == "contentAuthorAddInteractions_edit_publish" || obj.esignObj.esignFor == "contentAuthorAddInteractions_edit_unpublish"){
				    	$(".h5p-editor-iframe").attr("esigndisplayed","off");
					}
				    else if(obj.esignObj.esignFor == "contentAuthorAddInteractions_new" || obj.esignObj.esignFor == "contentAuthorAddInteractions_new_publish" || obj.esignObj.esignFor == "contentAuthorAddInteractions_new_unpublish"){
							$("#exp-sp-administration-contentauthor-addedit-form").attr("esigndisplayed","off");
					}
				    
		        	$("div#"+obj.esignObj.popupDiv).show();
		        }
		    });
			$("#esign-pass").keyup(function(event){
			    if(event.keyCode == 13){
			        $("#esign-sign-button").click();
			    }
			});

			//Chrome browser dialog box UI fixes
			//var getScreenWidth = $(window).width()/4;
			//$("#esign-wizard-dialog").find('.ui-dialog').css('left',Math.round(getScreenWidth)+'px');

		}
	});
	return false;
	}catch(e){
		// to do
	}
};
})(jQuery);
function addslashes(str) {
	  return (str + '')
	    .replace(/[\\"']/g, '\\$&')
	    .replace(/\u0000/g, '\\0');
	}
function paintContentStatus(launchInfo, courseId, classId, elementId,lessonCnt,enroll_progress) {
	try{
//	console.log(Drupal.settings.convertion.mylearn_version);
	 if(Drupal.settings.convertion.mylearn_version==0){
	  //  console.log(launchInfo); 
	    var crsClassId      = courseId + '_' + classId
	    var attemptDiv      = 'attempt_left_' + crsClassId;
	    var validityDiv     = 'content_validity_' + crsClassId;
	    var progressDiv     = 'content_progress_' + crsClassId;
//	    console.log('attemptDiv: ' +attemptDiv);
//	    console.log('validityDiv: ' +validityDiv);
	    if (launchInfo.triggering_lesson_details != undefined) {  // content update from launch.js
	    	var isMultiContent  = (lessonCnt > 1) ? true : false;
	        var attemptLeft     = launchInfo.triggering_lesson_details.AttemptLeft;
	        var ValidityDays    = launchInfo.triggering_lesson_details.ValidityDays;
	        var remDays    		= launchInfo.triggering_lesson_details.remDays;
	        var IsLaunchable    = launchInfo.triggering_lesson_details.IsLaunchable;
	        var LaunchType      = launchInfo.triggering_lesson_details.LaunchType;
	        var SuspendData     = launchInfo.triggering_lesson_details.SuspendData;
	    } else {
	        var isMultiContent  = (launchInfo.length > 1) ? true : false;
	        var attemptLeft     = launchInfo[0].AttemptLeft;
	        var ValidityDays    = launchInfo[0].ValidityDays;
	        var remDays    		= launchInfo[0].remDays;
	        var IsLaunchable    = launchInfo[0].IsLaunchable;
	        var LaunchType      = launchInfo[0].LaunchType;      
	        var SuspendData     = launchInfo[0].SuspendData;     
	        
	    }
//	    console.log('attemptLeft' + attemptLeft);
//	    console.log('ValidityDays' + ValidityDays);
//	    console.log('remDays' + remDays);
	    if (attemptLeft != 'notset'){
	       var attemptHtml      = parseInt(attemptLeft) + ' ' + Drupal.t('LBL202');
	       if(document.getElementById(attemptDiv)) {
	           $('#'+attemptDiv).html(attemptHtml);
	       } else {
	           var attemptFullHtml = '<div class="course-attempt-left"><span id="attempt_left_' + crsClassId + '" class="attempts_left">' + attemptHtml + '</span></div>';
	           if (elementId != undefined && IsLaunchable && !isMultiContent) {
	                $('#'+elementId).parents('.top-record-div').append(attemptFullHtml);
	           }
	       }
	    }
	    var remValidityDays = ValidityDays - remDays;
	    if (ValidityDays != '' && remValidityDays !== undefined) {
	    	remValidityDays = parseInt(remValidityDays);
	       var dayString = (remValidityDays == 1) ? Drupal.t('LBL910') : Drupal.t('LBL605');
	       var ValidityHtml     =  parseInt(remValidityDays) + ' ' + dayString + ' ' + Drupal.t('LBL604');
	       if(document.getElementById(validityDiv)) {
	           $('#'+validityDiv).html(ValidityHtml);
	       } else {
	           var validityFullHtml = '<div class="course-content-validity yyyyy">';
	           if (attemptLeft != 'notset') {
	                validityFullHtml += '<span id="content_concat_str_' + crsClassId + '" class="content_concat_string">' + Drupal.t('LBL647') + '</span>';
	           }
	           validityFullHtml += '<span id="content_validity_' + crsClassId + '" class="content_validity">' + ValidityHtml + '</span></div>'; 
	           if (elementId != undefined && IsLaunchable && !isMultiContent) {
	                $('#'+elementId).parents('.top-record-div').append(validityFullHtml);
	           }
	       }       
	    }
	           
	       if(document.getElementById(progressDiv)) {
				var suspend_data = (SuspendData != null && SuspendData != "" && SuspendData != undefined) ? JSON.parse(unescape(SuspendData)) : null;
				var progress = (suspend_data != null && suspend_data != undefined) ? suspend_data['progress'] : 0;
				var progress = (progress == null || isNaN(progress)) ? 0 : progress;
				var progress_data = parseInt(progress) + '% ' + Drupal.t('Completed');
				$('#'+progressDiv).html(progress_data);
	       }else{
	       
	          if(LaunchType == "VOD" && !isMultiContent){       
		            progressFullHtml = '<div class="course-content-validity">';     
		            if ((ValidityDays != '' && remValidityDays !== undefined) || attemptLeft != 'notset') {   
		           	  progressFullHtml += '<span id="content_concat_str_' + crsClassId + '" class="content_concat_string">' + Drupal.t('LBL647') + '</span>';
		          	}
		        	var suspend_data = (SuspendData != null && SuspendData != "" && SuspendData != undefined) ? JSON.parse(unescape(SuspendData)) : null;
					var progress = (suspend_data != null && suspend_data != undefined) ? suspend_data['progress']  : 0;
					progress = isNaN(progress) ? 0 : progress;
					progressFullHtml += '<span id="content_progress_' + crsClassId + '" class="content_validity">' + progress + '% ' + Drupal.t('Completed')+ '</span></div>'; 
	           if (elementId != undefined && IsLaunchable && !isMultiContent) {
	                	$('#'+elementId).parents('.top-record-div').append(progressFullHtml);
	           }
	       }
	    }
	       if(document.getElementById("learning-plan-details-display-content")){
				 var urlpro = resource.base_url+'/?q='+'ajax/get-progress/'+enroll_progress;
				 $.ajax({
						type: "POST",
						url: urlpro,
						data:  {updateFrom: 'TP'},
						success: function(result){
							var res_arr = result.split('*~*');
							progressBarRound(res_arr[2],res_arr[1], 'enr_progress','prm_progress_',$("#lnr-catalog-search").data("contentPlayer"));
							//progressbarlpdetail(res_arr[2],res_arr[1], 'enr_progress','prm_progress_');
							//change the action button label
							var pro_class = $('#prm_progress_'+res_arr[2]).attr('class');
							var cls_arr = pro_class.split(' ');
							var int_cls_arr = cls_arr[1].split('_');
							if(res_arr[3] == 'lrn_tpm_ovr_cmp'){
								$('#object-registerCls_'+int_cls_arr[2]).html('<div>'+Drupal.t("Completed")+'</div>');
							}
							if(res_arr[3] == 'lrn_tpm_ovr_inc'){
								$('#object-registerCls_'+int_cls_arr[2]).html('<div>'+Drupal.t("Registered")+'</div>');
							}
						}
				 });
			}
	       if($("#select-class-dialog #gview_tbl-paintCatalogContentResults").length) { 
				$("body").data("learningcore").refreshJScrollPane("#select-class-dialog #gview_tbl-paintCatalogContentResults");
		   }
	}else{
		var reg_pro_arr = enroll_progress.split('*~*');
		var progress = 0;
		var enroll_id = reg_pro_arr[0];
		if(reg_pro_arr[1]!='' && reg_pro_arr[1] !=undefined){
			if(reg_pro_arr[1]> 0 && reg_pro_arr[1]<=1){
			   progress = reg_pro_arr[1];
			 }
		}
		var launch_status = reg_pro_arr[2];
		if(document.getElementById("paindContentclsid_"+classId)){
			$('#paindContentclsid_'+classId).attr('alt',enroll_id);
			var oldprogressid = $('.progress_'+classId).attr('id');
			var opid_arr = oldprogressid.split('_');
			if(opid_arr[1]==undefined || typeof opid_arr[1] == 'undefined')
				$('.progress_'+classId).attr('id', 'progress_'+enroll_id);
			else if(opid_arr[1]!=enroll_id){
				$('.progress_'+classId).html('');
				$('.progress_'+classId).attr('id', 'progress_'+enroll_id);					
			}
			$('.paindContentclsid_'+classId).attr('id', 'paindContentResults_'+enroll_id);
			setTimeout(function(){
				if(launch_status==1 || launch_status==undefined || typeof launch_status == 'undefined'){
					if(document.getElementById("course-details-display-content")){
						$('#class_content_more_'+classId).hide();
						$('#class_content_moredetail_'+classId).show();
						$('#paindContentclsid_'+classId).click();
					}else if(document.getElementById("class_detail_content")){
						$('#paindContentclsid_'+classId).click();
					}else if(document.getElementById("learning-plan-details-display-content")){
						$('#paindContentclsid_'+classId).click();
					}
				}
				if(launch_status==0){
					$('#class_content_moredetail_'+classId+' .class-content-wrapper').remove();
				}
				else
					$('.progress').show();
				if(document.getElementById("learning-plan-details-display-content")){
					 var urlpro = resource.base_url+'/?q='+'ajax/get-progress/'+enroll_id;
					 $.ajax({
							type: "POST",
							url: urlpro,
							data:  {updateFrom: 'TP'},
							success: function(result){
								var res_arr = result.split('*~*');
								progressBarRound(res_arr[2],res_arr[1], 'enr_progress','prm_progress_',$("#lnr-catalog-search").data("contentPlayer"));
								//change the action button label
								var pro_class = $('#prm_progress_'+res_arr[2]).attr('class');
								var cls_arr = pro_class.split(' ');
								var int_cls_arr = cls_arr[1].split('_');
								if(res_arr[3] == 'lrn_tpm_ovr_cmp'){
									$('#object-registerCls_'+int_cls_arr[2]).html('<div>'+Drupal.t("Completed")+'</div>');
								}
								if(res_arr[3] == 'lrn_tpm_ovr_inc'){
									$('#object-registerCls_'+int_cls_arr[2]).html('<div>'+Drupal.t("Registered")+'</div>');
								}
							}
					 });
				}
				progressBarRound(enroll_id,progress, 'enr_progress','progress_',$("#lnr-catalog-search").data("contentPlayer"));
				//$("#lnr-catalog-search").data("contentPlayer").progressbardetail(enroll_id,progress, 'enr_progress','progress_');
			},100);
		}
	}
	 if(('#selCompleteBy_'+classId).length>0){
		 $('#selCompleteBy_'+classId).show();
	 }
	}catch(e){
		// To Do
	}
}
function registeredToLaunch(launchInfo_arr,userId,classId,courseId,del_type,enrolled_id,action_status,pre_ass_status)
{
	try{
	if(userId!=0)
	   if(action_status == 'Registered' || action_status == Drupal.t('Registered')){
		   if(document.getElementById("registerCls_"+classId))
			 $("#registerCls_"+classId).html('');
			 var launchLen = launchInfo_arr.length;
			 if(launchLen == 1){
				 if(Drupal.settings.convertion.mylearn_version==1){
					 var launchInfo =  eval(launchInfo_arr[0]);
					 var launch_data = {
						masterEnrollId : 0,
						enrollId :	enrolled_id,
						courseId : courseId, 
						classId  : classId,
						userId : userId,
						LaunchFrom : 'CL',
						defaultContent : '',
						//classTitle:launchInfo["Title"],
						pagefrom : 'launch'
					};
						launch_data = objectToString(launch_data);
						var callLaunchUrlFn = "$('#lnr-catalog-search').data('contentPlayer').playContent(" + launch_data + ");";
						var onclickFun = "$('#lnr-catalog-search').data('contentPlayer').playContent(" + launch_data + ");";
				 }else{
				 	var data ='';
					for(i=0;i<launchLen;i++){
						var launchInfo =  eval(launchInfo_arr[0]);
						if (del_type == 'vod'){
				        	var title = launchInfo["Title"];
						    title = encodeURIComponent(title.replace(/\//g, '()|()'));
						    callLaunchUrlFn = "/?q=learning/nojs/play_video/";
						    callLaunchUrlFn += title + "/";
						    callLaunchUrlFn += escape(launchInfo["ContentSubTypeCode"]) + "/";
						    callLaunchUrlFn += escape(launchInfo["LearnerLaunchURL"].replace(/\//g, '()|()')) + '/';
						    callLaunchUrlFn += "ME" + "/";
						    callLaunchUrlFn += courseId + "/";
						    callLaunchUrlFn += classId + "/";
						    callLaunchUrlFn += launchInfo["ID"] + "/";
						    callLaunchUrlFn += launchInfo["VersionId"] + "/";
						    callLaunchUrlFn += enrolled_id + "/";
						    callLaunchUrlFn += escape(launchInfo["StatusCode"]);
			            }else{
			            	var onclickFun = "$('#lnr-catalog-search').data('contentLaunch').launchWBTContent({'LaunchFrom':'CL','Id':'"+launchInfo["ID"]+"','enrollId':'"+enrolled_id+"','VersionId':'"+launchInfo["VersionId"]+"','VersionNum':'"+launchInfo["VersionNum"]+"','url1':'"+launchInfo['LearnerLaunchURL']+"','courseId':'"+courseId+"','classId':'"+classId+"','url2':'"+launchInfo["PresenterLaunchURL"]+"','ErrMsg':''	,'contentType':'"+launchInfo["ContentType"]+"','Status':'"+launchInfo["Status"]+"','LessonLocation':'"+launchInfo["LessonLocation"]+"','launch_data':'"+launchInfo["LaunchData"]+"','suspend_data':'"+launchInfo["SuspendData"]+"','exit':'"+launchInfo["CmiExit"]+"','AICC_SID':'"+launchInfo["AICC_SID"]+"','MasteryScore':'"+launchInfo["masteryscore"]+"'});";
			            }
					    break;
					 }
				 }
			}else{
				 if(Drupal.settings.convertion.mylearn_version==1){
					 var launch_data = {
						masterEnrollId : 0,
						enrollId :	enrolled_id,
						courseId : courseId, 
						classId  : classId,
						userId : userId,
						LaunchFrom : 'CL',
						defaultContent : '',
					//	classTitle:'test',
						pagefrom : 'launch'
					};
						launch_data = objectToString(launch_data);
						var onclickFun = "$('#lnr-catalog-search').data('contentPlayer').playContent(" + launch_data + ");";
				 }else{
					var onclickFun ="$('#lnr-catalog-search').data('enrollment').launchMultiContent("+enrolled_id+",this);";
					var data ="[";
					for(i=0;i<launchLen;i++){
						var launchInfo =  launchInfo_arr[i];
						data +="[{'LaunchFrom':'CL','Id':'"+launchInfo["ID"]+"','ContentId':'"+launchInfo["ContentId"]+"','VersionId':'"+launchInfo["VersionId"]+"','VersionNum':'"+launchInfo["VersionNum"]+"','enrollId':'"+enrolled_id+"','Title':'"+addslashes(launchInfo["Title"])+"','ContentTitle':'"+addslashes(launchInfo["Code"])+"','url1':'"+launchInfo["LearnerLaunchURL"]+"','courseId':'"+courseId+"','IsLaunchable':'"+launchInfo["IsLaunchable"]+"','AttemptLeft':'"+launchInfo["AttemptLeft"]+"','ValidityDays':'"+launchInfo["ValidityDays"]+"','remDays':'"+launchInfo["remDays"]+"','daysLeft':'"+launchInfo["daysLeft"]+"','contValidateMsg':'"+launchInfo["contValidateMsg"]+"','classId':'"+classId+"','url2':'"+launchInfo["PresenterLaunchURL"]+"','ErrMsg':'','contentType':'"+launchInfo["ContentType"]+"','contentSubTypeCode':'"+launchInfo["ContentSubTypeCode"]+"','launchType':'"+launchInfo["LaunchType"]+"','ClsScore':'"+launchInfo["ClsScore"]+"','LesScore':'"+launchInfo["LesScore"]+"','ContScore':'"+launchInfo["ContScore"]+"','Status':'"+launchInfo["Status"]+"','ContentStatus':'"+launchInfo["ContentStatus"]+"','Lessoncnt':'"+launchInfo["Lessoncnt"]+"','LessonLocation':'"+launchInfo["LessonLocation"]+"','launch_data':'"+launchInfo["LaunchData"]+"','suspend_data':'"+launchInfo["SuspendData"]+"','exit':'"+launchInfo["CmiExit"]+"','AICC_SID':'"+launchInfo["AICC_SID"]+"','MasteryScore':'"+launchInfo["masteryscore"]+"','contentQuizStatus':'"+launchInfo["contentQuizStatus"]+"','ContentCompletionStatus':'"+launchInfo["ContentCompletionStatus"]+"','StatusCode':'"+launchInfo["StatusCode"]+"'}],";
					}
					data +="]";
			}
			}
			 //$("#registerCls_"+classId).attr('onclick',null);
			 if(document.getElementById("registerCls_"+classId)){
				 $("#registerCls_"+classId).removeAttr('onclick');
				 if(del_type == 'vod' && launchLen == 1){
					// $("#registerCls_"+classId).css({'line-height':'48px','width':'113px'});
					/* $("#registerCls_"+classId).css('position','absolute');
					 $("#registerCls_"+classId).css('height','40px');
					 $("#registerCls_"+classId).css('padding-top','15px');*/
					 if(parseInt(pre_ass_status) == 1){
						 $("#registerCls_"+classId).attr("alt", callLaunchUrlFn);
						 document.getElementById("registerCls_"+classId).setAttribute('onclick',"$('#lnr-catalog-search').data('lnrcatalogsearch').preAssMsgBox("+enrolled_id+",'sinVod');");
						 $("#registerCls_"+classId).html(Drupal.t('LBL199'));
						 $("#registerCls_"+classId).append('<a href="'+callLaunchUrlFn+'" id="dummylaunch'+enrolled_id+'" style="display:none;" class="enroll-launch use-ajax ctools-modal-ctools-video-style">dummy</a>');
					 }else{
						 $("#registerCls_"+classId).addClass(' enroll-launch use-ajax ctools-modal-ctools-video-style');
						 $("#registerCls_"+classId).attr("href", callLaunchUrlFn);
						 $("#registerCls_"+classId).html(Drupal.t('LBL199'));
					 }
					 Drupal.attachBehaviors($("#registerCls_"+classId));
					 var elementId = "registerCls_"+classId;
					 paintContentStatus(launchInfo_arr, courseId, classId, elementId,'',enrolled_id);
				 }else{
					 //console.log("registerCls_"+classId)
					 if( parseInt(pre_ass_status) == 1 && Drupal.settings.convertion.mylearn_version==0){
						 var alertfun = "$('#lnr-catalog-search').data('lnrcatalogsearch').preAssMsgBox("+enrolled_id+");";
						 var funCom = onclickFun+alertfun;
						 //$("#registerCls_"+classId).attr("onclick", alertfun);
						 document.getElementById("registerCls_"+classId).setAttribute('onclick',alertfun);
						 document.getElementById("registerCls_"+classId).setAttribute('alt',onclickFun);
					 }
					 else{
						 document.getElementById("registerCls_"+classId).setAttribute('onclick',onclickFun);
					 }
					 $("#registerCls_"+classId).attr("data",data);
					 $("#registerCls_"+classId).html(Drupal.t('LBL199'));
					 Drupal.attachBehaviors($("#registerCls_"+classId));
					 var elementId = "registerCls_"+classId;
                     paintContentStatus(launchInfo_arr, courseId, classId, elementId,'',enrolled_id);
				 }
				 $("#registerCls_"+classId).attr('id', 'launch'+enrolled_id);
			 }
            //Code commented as per vincent concern ontime only we give the launch offer.
			 if(document.getElementById('tbl-paintCatalogContentResults')){
					$("#lnr-catalog-search").data("lnrcatalogsearch").createLoader('searchRecordsPaint');
					if(typeof $("#lnr-catalog-search").data("lnrcatalogsearch") == 'undefined' || $("#lnr-catalog-search").data("lnrcatalogsearch").refreshLastAccessedCatalogRow() == false) {
						$("#paintContentResults").trigger("reloadGrid");
					}
			 }
	   }
	}catch(e){
		// To Do
	}
}

function remove_qtip(val){
	$(".active-qtip-div").remove();
}

function showUserPreferenceSettings(){
	try{
	
	$('#manage-dd-list').toggle();
	$("body").data("learningcore").showWidgetList();
	if($('#block-exp-sp-learning-tab-user-customization').hasClass('active')){
		$('#block-exp-sp-learning-tab-user-customization').removeClass('active');
	}else{
		$('#block-exp-sp-learning-tab-user-customization').addClass('active');
	}
	if(!$('#block-exp-sp-learning-tab-user-customization').hasClass('active')){
	     $('#block-exp-sp-learning-tab-user-customization').removeClass('active');
	     $('#block-exp-sp-learning-tab-user-customization').height("");
	     }
	}catch(e){
			// To Do
	}
}
function closeUserPreference() {
	$('#manage-dd-list').css('visibility','hidden');
}
function disableWidgetDeleteAction(elementId) {
	try {
		if (document.getElementById(elementId))
			$("#"+elementId).find('.widget-delete-button').addClass('inactiveLink');
	} catch (e){

	}
}
function activateWidgetDeleteAction(elementId) {
	try {
		if (document.getElementById(elementId))
			$("#"+elementId).find('.widget-delete-button').removeClass('inactiveLink');
	} catch (e){

	}
}
function createSortableList(element) {
	try {
		$(element).sortable({
	        axis: 'y',
	        //containment: 'parent',
	        connectWith: element,
	        forceHelperSize: true,
	        forcePlaceholderSize: true,
	        handle: '.block-title',
	        cancel : '.filter-block',
	        opacity: 0.9,
	        zIndex: 2000,
	        //tolerance: 'pointer',
	        placeholder: 'placeholder',
	        helper: "original",
	        sort: function(event, ui) {
	        	if(Drupal.settings.mylearning_right===false){
	        		$(".ui-sortable-helper #block-exp-sp-lnrenrollment-tab-my-enrollment-customized," +
	        			".ui-sortable-helper #block-exp-sp-lnrlearningplan-tab-my-learningplan-customized," +
	        			".ui-sortable-helper #block-exp-sp-instructor-desk-tab-instructor-desk-customized").css('width', '942px');
	           	} else {
	        		$(".ui-sortable-helper #block-exp-sp-lnrenrollment-tab-my-enrollment-customized," +
	            		".ui-sortable-helper #block-exp-sp-lnrlearningplan-tab-my-learningplan-customized," +
	            		".ui-sortable-helper #block-exp-sp-instructor-desk-tab-instructor-desk-customized").css('width', '658px');
	        	}
	        },
			start: function(event, ui) {
	        },
	        stop: function(e, ui) {
	        	$("#block-exp-sp-lnrenrollment-tab-my-enrollment-customized, #block-exp-sp-lnrlearningplan-tab-my-learningplan-customized, #block-exp-sp-instructor-desk-tab-instructor-desk-customized").removeAttr('style');
	        },
	        update: function(event, ui){
	            var changedList = this.id;
	            var order = $(this).sortable('toArray');
	            var positions = order.join(',');
	        	var params = {id: changedList, positions: positions};
	            $.ajax({
					type: "POST",
					url: '/?q=user-preference/update',
					data:  params,
					dataType: 'json',
					success: function(result){
						if (result.session != undefined && result.session == 'session_out') {
							self.location='?q=learning/enrollment-search';
							return;
						}
					}
				});
	        }
	  	});
	}catch(e){
		// to do
	}
}
function getVideoSuspendData() {
	videoTrackerProgress = {
	session_id: session_id,
	current_position: ytPlayer.getCurrentTime(),
	progress: progress,
	video_duration: ytPlayer.getDuration(),
	additional_data: {video_session_id: session_id},
	content_type : 'youtube'
	};  
}
$('body').bind('click', function(event) {
	 try{
		  if(event.target.id != 'user-preference-settings'){
			  $('#manage-dd-list').css('display','none');
		  }
	 }catch(e){
			// to do
}
});
$(document).ready(function() {
	try{
	  $("#cart-form-pane #cart-form-products .sticky-table tr th:last-child").css("border-left"," 0px");
	  /*-- My learning page widget customization --*/
	  if (Drupal.settings.salesforce.type != "iframe") {
		  createSortableList(".region-sidebar-second .sortable-list");
		  createSortableList(".region-highlight .sortable-list");
	  }
	  //52001: Change class pop not showing when we click on change class link in action link button in My Enrollment panel
	  if(document.getElementById('tab_my_learningplan')==null || document.getElementById('tab_my_learningplan')==undefined){
		  //52687: Course after completion is not moving to completed status.Launch button is still retailed in Catalog Page.
		    // added the parent class bcz of above issue.
			$(".page-learning-enrollment-search #page-container" ).append( '<div id="learningplan-tab-inner" class="dummyelement_tab_my_learningplan" style="display:none;"></div>' );
			Drupal.attachBehaviors('learningplan-tab-inner');
			$( "#learningplan-tab-inner" ).learningplan();
		}
	  if(document.getElementById('tab_my_enrollment')==null || document.getElementById('tab_my_enrollment')==undefined){
			$(".page-learning-enrollment-search #page-container" ).append( '<div id="learner-enrollment-tab-inner" class="dummyelement_tab_my_enrollment" style="display:none;"></div>' );
			Drupal.attachBehaviors('learner-enrollment-tab-inner');
			$("#learner-enrollment-tab-inner").enrollment();
			$("#learner-enrollment-tab-inner").contentLaunch();
		}
	  if(document.getElementById('tab_my_learningplan') !== undefined && $("#block-take-survey" ).data('surveylearner') === undefined) {
		  $('<div id="block-take-survey"></div>').insertAfter("#learningplan-tab-inner");
		  Drupal.attachBehaviors('block-take-survey');
		  $("#block-take-survey").surveylearner();
	  }
	if(Drupal.settings.mylearning.user.survey_urlname == 'surveylink') {
		setTimeout(loadSurveyLink,2000);
	}

	  /*-- My learning page widget customization --*/
	}catch(e){
		// to do
	}
});

function addClearIcon(inputElem){
	try {
		var input = inputElem.attr('id');
		var width = inputElem.width();
		inputElem.width(width - 18);
		width = inputElem.width();
		$('<div class="eol-search-clearance"><span id="searchclear" onmousedown="clearInput(this, \''+input+'\')"></span></div>').insertAfter(inputElem)
		.css({
			'margin-left': width+'px',
			'display': 'block'
		});
	} catch(e) {
		// window.console.log(e, e.stack);
	}
}

function removeClearIcon(inputElem) {
	try {
		if(inputElem.siblings('.eol-search-clearance').length > 0) {
			var width = inputElem.width();
			inputElem.width(width + 18);
			width = inputElem.width();
			inputElem.siblings('.eol-search-clearance').remove();
		}
	} catch(e) {
		
		// window.console.log(e, e.stack);
	}
}

function clearInput(_this, input) {
	try {
		var inputElem = $('#'+input);
		inputElem.val('');
		removeClearIcon(inputElem);
	} catch(e) {
		// window.console.log(e, e.stack);
	}
}

$("#search_searchtext, #forum_searchtext, #reports_searchtext, #myteam_searchtext, #narrow-search-calendar-filter").focus(function () {
	try {
		var inputElem = $(this);
		inputElem.val() == '' || addClearIcon(inputElem);
	} catch(e) {
		// window.console.log(e, e.stack);
	}
})
.blur(function(e) {
	try {
		var inputElem = $(this);
		removeClearIcon(inputElem)
	} catch(e) {
		// window.console.log(e, e.stack);
	}
}).keyup(function () {
	var inputElem = $(this);
	if(inputElem.siblings('.eol-search-clearance').length < 1) {
		inputElem.val() == '' || addClearIcon(inputElem);
	} else {
		inputElem.val() == '' && removeClearIcon(inputElem);
	}
});

function locationdetails(qtipObj,seestime){
 
	// convert the string to object
	if(typeof qtipObj == 'string'){
		var qtipObj =  unserialize(qtipObj);
	}
	$('.qtip-popup-visible').html('').hide();
		
	var cls_id = qtipObj.entityId;
	var popupId 	= qtipObj.popupDispId;
	var entId = qtipObj.entityId;
	var qTipOptions = {
		wid : qtipObj.wid,
		heg : qtipObj.heg,
		top:qtipObj.top,
		entityId : qtipObj.entityId,
		popupDispId : qtipObj.popupDispId,
		postype : qtipObj.postype,
		poslwid : (qtipObj.poslwid == '' || qtipObj.poslwid == undefined || qtipObj.poslwid == null) ? '' : qtipObj.poslwid,
		posrwid : (qtipObj.posrwid == '' || qtipObj.posrwid == undefined || qtipObj.posrwid == null) ? '' : qtipObj.posrwid,
		disp	: (qtipObj.qdis == '' || qtipObj.qdis == undefined || qtipObj.qdis == null) ? ''	: qtipObj.qdis,
		linkid	: qtipObj.linkid,
		dispDown : (qtipObj.dispDown == undefined) ? '': qtipObj.dispDown,
		beforeShow: function() {
			$('#'+popupId+' #visible-popup-'+entId+' #bubble-face-table .bubble-c #paintContent'+popupId).html($('#selSessionId-'+entId).html())
		}
	};
	
	if(qtipObj.entityId.indexOf("changeclass") != -1 
		|| qtipObj.entityId.indexOf("assign-learning-") != -1 
		|| qtipObj.entityId.indexOf("course-details-") != -1) {
		qTipOptions.beforeShow = function() {
			$("#wrapper-visible-popup-"+entId).remove();
			$('#'+popupId+' #visible-popup-'+entId+' #bubble-face-table .bubble-c #paintContent'+popupId).html($('#selSessionId-'+entId).html());
			$('#visible-popup-'+entId).css({'visibility': 'hidden'});
		};
		qTipOptions.afterShow = function() {
			setTimeout(function() {
				var offset = $('#'+qtipObj.linkid).offset();
				var newSpan = $('#visible-popup-'+entId).clone()
				.appendTo('body')
				.offset(offset)
				.zIndex(10010)
				.wrap('<div class="location-session-detail-clone" id="wrapper-visible-popup-'+entId+'"></div>')
				.css({'visibility': 'visible'});
				}, 10);
		};
	}
	$('#' + qtipObj.popupDispId).qtipPopup(qTipOptions);
	$('body').bind('click', function(event) {
		if((event.target.id != 'manage-location-time-'+cls_id+'' || event.target.id != 'manage-location-cal-'+cls_id+'')
				&& document.getElementById('paintContentlocation-session-details_'+cls_id) != null ){
			$('.qtip-popup-visible').html('').hide();
		}
	});
}	
function closeQtip(popupId,entId,onClsFn){
    try{
            if(typeof(onClsFn) == 'undefined') onClsFn='';
            if(popupId == '')
                    $('.qtip-popup-visible').html('').hide();
            else
                    $('#'+popupId+' #visible-popup-'+entId).html('').hide();
            
            if(typeof(onClsFn) == 'function') {
                    onClsFn();
            }
    }catch(e){
            
    }
}

function showClassDetailMore(classId,dType,cStatus) {
	try {
		var classId = (classId != undefined) ? classId : 0;
		//console.log("class id - "+classId);
		//console.log("type - "+dType);
		//console.log("status - "+cStatus);
		if (classId > 0) {
			if(document.getElementById('block-exp-sp-coursedetail-course-details'))
				$("#gbox_paint-classes-list #"+classId+" .content-description").find("#arrow-more").click();
			if(document.getElementById('block-exp-sp-learning-plan-detail-learning-details'))
				$(".learning-classes-details #"+classId+" .content-description").find("#arrow-more").click();
			$('#class_content_moredetail_' + classId).slideDown();
			$('#class_content_more_' + classId).hide();
			var enr_id = $('#paindContentclsid_classId').attr('alt');
			if((dType=='lrn_cls_dty_wbt'||dType=='lrn_cls_dty_vod') && ((cStatus=='lrn_crs_cmp_enr' ||  cStatus == 'lrn_crs_cmp_inp' || cStatus == 'lrn_crs_cmp_att') || (cStatus=='' && enr_id>0))){
				$('#class_content_moredetail_'+classId+' .class-content-wrapper').addClass('padbt10');
				if($('#class_content_moredetail_'+classId+' .class-content-wrapper').length >0){
					$('#paindContentclsid_'+classId).click();
				}
			}
			resetInstructorFadeout('#'+classId);
            $('.lmt-cls-desc-add').trunk8(trunk8.class_detail_add_desc);
		}
	} catch(e) {

	}
}

function resetInstructorFadeout(selector,callFrom){
	selector = (selector == null || selector == undefined) ? '' : selector;
	$(selector + ' .content-instructor-block').each(function(){
		var insCnt = $(this).find('.content-instructor-row').size();
		if(insCnt == 1 || (callFrom == 'class' && insCnt == 2)){ // Reset the max-width for instructors
			var w1 = $(this).width();
			w1 = (callFrom == 'class' && insCnt == 2) ? Math.ceil(w1/insCnt) : w1;
			var w2 = $(this).find('.avatar-image').width();
			var w3 = (w1-w2) - 20;
			var pw = (callFrom == 'class' && insCnt == 2) ? 50 : 100; 
			$(this).find('.content-instructor-row').css('width',pw+'%');
			$(this).find('.content-instructor-row .content-instructor-detail').css('max-width',w3+'px');
			$(this).find('.content-instructor-row .content-instructor-detail .class-detail-ins-details-name-fadeout-container').css('max-width',w3+'px');
			$(this).find('.content-instructor-row .content-instructor-detail .class-detail-ins-details-job-fadeout-container').css('max-width',w3+'px');
		}
		$(this).find('.content-instructor-detail .class-detail-ins-details-name-fadeout-container').each(function() {
			if($(this).width() >= $(this).find('.title-lengthy-text').width() && $(this).find('.title-lengthy-text').width() != 0) {
				$(this).find('.fade-out-image').remove();
			}
		});
		$(this).find('.content-instructor-detail .class-detail-ins-details-job-fadeout-container').each(function() {
			if($(this).width() >= $(this).find('.title-lengthy-text').width() && $(this).find('.title-lengthy-text').width() != 0) {
				$(this).find('.fade-out-image').remove();
			}
		});
	});

	$(selector + ' .session-details-warpper .session-instructor').each(function(){
		var insCnt = $(this).find('.class-detail-session-instructor-fadeout-container').size();
		var mWidth = $(this).find('.sess-attr-val').width();
		if(insCnt > 1){
			mWidth = Math.ceil(mWidth/insCnt)-10; // subtract the with by 10 for comma and a space between two names
			mWidth = mWidth <= 60 ? 58 : mWidth;
		}
		$(this).find('.class-detail-session-instructor-fadeout-container').css('max-width',mWidth+"px");
		$(this).find('.class-detail-session-instructor-fadeout-container').each(function() {
			if($(this).width() >= $(this).find('.title-lengthy-text').width() && $(this).find('.title-lengthy-text').width() != 0) {
				$(this).find('.fade-out-image').remove();
			}
		});
	});
	
	$(selector + ' .session-details-warpper .session-name').each(function(){
		var insCnt = $(this).find('.class-detail-session-title-fadeout-container').size();
		var mWidth = $(this).find('.sess-attr-val').width();
		if(insCnt > 1){
			mWidth = Math.ceil(mWidth/insCnt)-10; // subtract the with by 10 for comma and a space between two names
			mWidth = mWidth <= 60 ? 58 : mWidth;
		}
		$(this).find('.class-detail-session-title-fadeout-container').css('max-width',mWidth+"px");
		$(this).find('.class-detail-session-title-fadeout-container').each(function() {
			if($(this).width() >= $(this).find('.title-lengthy-text').width() && $(this).find('.title-lengthy-text').width() != 0) {
				$(this).find('.fade-out-image').remove();
			}
		});
	});
}

function showClassDetailLess(classId) {
	try {
		var classId = (classId != undefined) ? classId : 0;

		if (classId > 0) {
			if(document.getElementById('block-exp-sp-coursedetail-course-details'))
				$("#gbox_paint-classes-list #"+classId+" .content-description").find("#arrow-less").click();
			if(document.getElementById('block-exp-sp-learning-plan-detail-learning-details'))
				$(".learning-classes-details #"+classId+" .content-description").find("#arrow-less").click();
			$('#class_content_moredetail_' + classId).slideUp();
			setTimeout(function(){$('#class_content_more_' + classId).show();},300)
		}
	} catch(e) {
		
	}
}

function updateVideoProgress(vodPlayer) {
	if(vodPlayer === undefined || vodPlayer.duration() == 0) {
		return;
	}

	var percentage 	= (vodPlayer.currentTime() / vodPlayer.duration()) * 100;
	var progress 	= isNaN(percentage) == false ? percentage : 0;

	videoTrackerProgress = {
				session_id: vodPlayer.id_,
				current_position: vodPlayer.currentTime(),
				progress: progress,
				video_duration: vodPlayer.duration(),
				additional_data: {video_session_id: vodPlayer.id_}
			};
}
function updateVideoProgressToDB(response,setObj){
	if($('#video-container').length) {
		var launchedFrom 	= response.launchedFrom;
		var courseId 		= response.video_detail_arr[0]
		var	classId			= response.video_detail_arr[1]
		var	lessonId		= response.video_detail_arr[2]
		var	versionId		= response.video_detail_arr[3]
		var	enrollId		= response.video_detail_arr[4]
		var prevContentStatus = '';
		var launchflag      = 1;
		setObj.updateVODScoreOnCtoolsModalClose(launchedFrom, courseId, classId, lessonId, versionId, enrollId, prevContentStatus, launchflag); 
	}
}
                
function saveVideoProgress(vodPlayer, ended) {
	try {
		if((ended || (videojs(vodPlayer.id_) !== undefined && !vodPlayer.paused())) && vodPlayer.duration() != 0) {
			$.ajax({
				url:"?q=ajax/update-launch/vod",
				type: 'POST',
				data: videoTrackerProgress,
				success: function() {
					// console.log("Call is successful.");
				},
				error: function() {
					// console.log("Call is unsuccessful.");
				},
				complete: function() {
					// console.log("Server update complete.");
        }
      });
    }
	}
	catch(e) {
		// console.log(e);
	}
}
function loadSurveyLink(){
	$.cookie('SurUrlName', null);
	$.cookie('Surpath', null);
	var json_obj = Drupal.settings.mylearning.survey_data;
	var msg_string='';
	msg_string = (Drupal.settings.mylearning.user.survey_objecttype == 'cre_sys_obt_cls') ? Drupal.t('Class') : Drupal.t('Training Plan');
	
	var widgetname;
	if(Drupal.settings.mylearning.user.survey_objecttype == 'cre_sys_obt_cls' && Drupal.settings.mylearning.user.survey_dedicatetpcount < 1)
		widgetname = Drupal.t('MSG858');
	else
		widgetname = Drupal.t('MSG859');
	
	if(Drupal.settings.mylearning.user.survey_userwidget == 0) {
	if(Drupal.settings.mylearning.user.survey_count > 0) {
		if(Drupal.settings.mylearning.user.survey_enrollcount > 0) {
	
	if((Drupal.settings.mylearning.user.survey_recurringcount > 0) || ((Drupal.settings.mylearning.user.survey_recertify == 1) && (Drupal.settings.mylearning.user.survey_sharetype=='multiple')) || (Drupal.settings.mylearning.user.survey_multipleTP >= 1 && Drupal.settings.mylearning.user.survey_enrollcount > 1)) {
		 if(json_obj !== 'null') {
			 if(Drupal.settings.mylearning.user.survey_myenrolltab == 'Yes' || Drupal.settings.mylearning.user.survey_multipleTP >= 1) {
				 if($('#learning_filter_myenrollment_EnrollCompleted').parent().hasClass('checkbox-unselected')) {
					setTimeout(function(){
						$('#myenrollment-learner-menu #learning_filter_myenrollment_EnrollCompleted').click(); 
						selectedMenuFilter('myenrollment','EnrollCompleted','lrn_crs_cmp_cmp');
					}, 10);
					setTimeout(function(){statusFilterSubmit('myenrollment');}, 60);
				 }
			 } 
			 if(Drupal.settings.mylearning.user.survey_myprogramstab == 'Yes' || Drupal.settings.mylearning.user.survey_multipleTP >= 1) {
				 if($('#learning_filter_myprograms_EnrollLPCompleted').parent().hasClass('checkbox-unselected')){
				 	setTimeout(function(){
				 		$('#myprograms-learner-menu #learning_filter_myprograms_EnrollLPCompleted').click();
				 		selectedMenuFilter('myprograms','EnrollLPCompleted','lrn_tpm_ovr_cmp');
				 	}, 150);
				 	setTimeout(function(){statusFilterSubmit('myprograms');}, 200);
				 }
			 }
			 setTimeout(function(){
				 $('#learner-enrollment-tab-inner').data('enrollment').launchMultiSurvey(json_obj);
			 }, 1500);
			 	return;
		 } else
				 return;
		}
			

		if(Drupal.settings.mylearning.user.survey_sharetype == 'single' && Drupal.settings.mylearning.user.survey_enrollstatus == null ) {
			$("body").data("learningcore").callMessageWindow('Survey',Drupal.t('MSG849')+' '+msg_string+' '+Drupal.t('MSG847')+' '+Drupal.t('Not Registered')+' '+Drupal.t('LBL102'));
		} else if (Drupal.settings.mylearning.user.survey_id == '' || Drupal.settings.mylearning.user.survey_id == null) {
			$("body").data("learningcore").callMessageWindow('Survey',Drupal.t('MSG850'));
		} else {

		switch(Drupal.settings.mylearning.user.survey_enrollstatus) {
			case 'lrn_crs_cmp_inc': 
			case 'lrn_tpm_ovr_inc':	
			case 'lrn_crs_cmp_nsw':
				$("body").data("learningcore").callMessageWindow('Survey',Drupal.t('MSG849')+' '+msg_string+' '+Drupal.t('MSG847')+' '+Drupal.t('Incomplete')+' '+Drupal.t('LBL102'));
				break;
			case 'lrn_crs_reg_can': 
			case 'lrn_tpm_ovr_cln':
				$("body").data("learningcore").callMessageWindow('Survey',Drupal.t('MSG849')+' '+msg_string+' '+Drupal.t('MSG847')+' '+Drupal.t('Canceled')+' '+Drupal.t('LBL102'));
				break;
			case 'lrn_crs_reg_rsv':
			case 'lrn_tpm_ovr_rsv':
				$("body").data("learningcore").callMessageWindow('Survey',Drupal.t('MSG849')+' '+msg_string+' '+Drupal.t('MSG847')+' '+Drupal.t('LBL942')+' '+Drupal.t('LBL102'));
				break;
			case 'lrn_crs_reg_rsc':	
			case 'lrn_tpm_ovr_rsc':
				$("body").data("learningcore").callMessageWindow('Survey',Drupal.t('MSG849')+' '+msg_string+' '+Drupal.t('MSG847')+' '+Drupal.t('LBL942')+Drupal.t('Canceled')+' '+Drupal.t('LBL102'));
				break;
			case 'lrn_crs_cmp_exp': 
			case 'lrn_tpm_ovr_exp':	
				$("body").data("learningcore").callMessageWindow('Survey',Drupal.t('MSG849')+' '+msg_string+' '+Drupal.t('MSG847')+' '+Drupal.t('Expired')+' '+Drupal.t('LBL102'));
				break;
			case 'lrn_tpm_ovr_wtl':
			case 'lrn_crs_reg_wtl':
				$("body").data("learningcore").callMessageWindow('Survey',Drupal.t('MSG849')+' '+msg_string+' '+Drupal.t('MSG847')+' '+Drupal.t('LBL138')+' '+Drupal.t('LBL102'));
				break;
			case 'lrn_crs_reg_ppm': 
			case 'lrn_crs_reg_ppv':
			case 'lrn_tpm_ovr_ppv':
			case 'lrn_tpm_ovr_ppm': 
				$("body").data("learningcore").callMessageWindow('Survey',Drupal.t('MSG849')+' '+msg_string+' '+Drupal.t('MSG847')+' '+Drupal.t('Pending')+' '+Drupal.t('LBL102'));
				break;
			case 'lrn_crs_cmp_cmp':
			case 'lrn_crs_cmp_enr':
			case 'lrn_crs_cmp_inp':
			case 'lrn_tpm_ovr_cmp':
			case 'lrn_tpm_ovr_enr':
			case 'lrn_tpm_ovr_inp':
				if(Drupal.settings.mylearning.user.survey_status == 0 || (Drupal.settings.convertion.mylearn_version==1 && Drupal.settings.mylearning.user.survey_completion !== 'ALL')) {
					if(Drupal.settings.convertion.mylearn_version==1) { 
						if(Drupal.settings.mylearning.user.survey_objecttype=='cre_sys_obt_cls' && Drupal.settings.mylearning.user.survey_dedicatetpcount < 1) {
							 if(Drupal.settings.mylearning.user.survey_enrollstatus == 'lrn_crs_cmp_cmp' && ($('#learning_filter_myenrollment_EnrollCompleted').parent().hasClass('checkbox-unselected'))) {
										$('#myenrollment-learner-menu #learning_filter_myenrollment_EnrollCompleted').click(); 
										selectedMenuFilter('myenrollment','EnrollCompleted','lrn_crs_cmp_cmp');
									statusFilterSubmit('myenrollment');
							 }	
							 setTimeout(function(){callContentPlayer('');}, 1800);
						} else {
							if((Drupal.settings.mylearning.user.survey_enrollstatus == 'lrn_crs_cmp_cmp' || Drupal.settings.mylearning.user.survey_enrollstatus == 'lrn_tpm_ovr_cmp') && ($('#learning_filter_myprograms_EnrollLPCompleted').parent().hasClass('checkbox-unselected'))){
								setTimeout(function(){
							 		$('#myprograms-learner-menu #learning_filter_myprograms_EnrollLPCompleted').click();
							 		selectedMenuFilter('myprograms','EnrollLPCompleted','lrn_tpm_ovr_cmp');
							 	}, 10);
							 	setTimeout(function(){statusFilterSubmit('myprograms');}, 60);
							 }
							setTimeout(function(){callContentPlayer('');}, 1800);
							}
							} else {
						if(Drupal.settings.mylearning.user.survey_objecttype=='cre_sys_obt_cls' && Drupal.settings.mylearning.user.survey_dedicatetpcount < 1) {
							if(Drupal.settings.mylearning.user.survey_enrollstatus == 'lrn_crs_cmp_cmp' && ($('#learning_filter_myenrollment_EnrollCompleted').parent().hasClass('checkbox-unselected'))) {
								setTimeout(function(){
									$('#myenrollment-learner-menu #learning_filter_myenrollment_EnrollCompleted').click(); 
									selectedMenuFilter('myenrollment','EnrollCompleted','lrn_crs_cmp_cmp');
								}, 10);
								setTimeout(function(){statusFilterSubmit('myenrollment');}, 60);
							}
							setTimeout(function(){
								$("#block-take-survey").data("surveylearner").callTakeSurveyToClass(Drupal.settings.mylearning.user.survey_objectid,""+decodeURIComponent(Drupal.settings.mylearning.user.survey_objectname)+"",""+Drupal.settings.mylearning.user.survey_objecttype+"","survey","",Drupal.settings.mylearning.user.survey_enrollid,"NULL","enroll-result-container");
							}, 600);
							setTimeout(function(){
								$("#block-take-survey").data("surveylearner").moveNext(Drupal.settings.mylearning.user.survey_id);
							}, 650);
						} else {
							if((Drupal.settings.mylearning.user.survey_enrollstatus == 'lrn_crs_cmp_cmp' || Drupal.settings.mylearning.user.survey_enrollstatus == 'lrn_tpm_ovr_cmp') && ($('#learning_filter_myprograms_EnrollLPCompleted').parent().hasClass('checkbox-unselected'))){
								setTimeout(function(){
							 		$('#myprograms-learner-menu #learning_filter_myprograms_EnrollLPCompleted').click();
							 		selectedMenuFilter('myprograms','EnrollLPCompleted','lrn_tpm_ovr_cmp');
							 	}, 10);
							 	setTimeout(function(){statusFilterSubmit('myprograms');}, 60);
							}
							setTimeout(function(){
								$("#block-take-survey").data("surveylearner").callTakeSurveyToClass(Drupal.settings.mylearning.user.survey_objectid,""+decodeURIComponent(Drupal.settings.mylearning.user.survey_objectname)+"",""+Drupal.settings.mylearning.user.survey_objecttype+"","survey","",Drupal.settings.mylearning.user.survey_enrollid,"NULL","enroll-lp-result-container");
							}, 600);
							setTimeout(function(){
								$("#block-take-survey").data("surveylearner").moveNext(Drupal.settings.mylearning.user.survey_id);
							}, 650);
						}	
					}
			} else {
				$("body").data("learningcore").callMessageWindow('Survey',Drupal.t('MSG394'));
			}
		}
		}
	} else {
		$("body").data("learningcore").callMessageWindow('Survey',Drupal.t('MSG849')+' '+msg_string+' '+Drupal.t('MSG847')+' '+Drupal.t('Not Registered')+' '+Drupal.t('LBL102'));
	}
			
	} else {
		$("body").data("learningcore").callMessageWindow('Survey',Drupal.t('MSG850'));
	}
	
	} else {
		$("body").data("learningcore").callMessageWindow('Survey',widgetname);
	}
	$('#select-class-equalence-dialog .ui-dialog').css({'width':'auto', 'min-width':'394px'});
	$('#select-class-equalence-dialog .ui-dialog #commonMsg-wizard tr td:first').height('27');
	$('.ui-dialog #commonMsg-wizard').css('min-height','63px');
	$('.ui-dialog #commonMsg-wizard span.select-greyed-out-text').css({'width': 'auto', 'padding': '0px 16px 16px'});
	$('.ui-dialog .ui-dialog-buttonpane .ui-dialog-buttonset').css('min-width','auto');
	$('.ui-dialog .ui-dialog-buttonpane .ui-dialog-buttonset .removebutton').css('margin-right','2px');
}


function RefreshFadeoutForSF(selector,divcont,linecont,fromPage){
 	   if($('.item-title-code').find('.title-lengthy-text').width()>0) {
        	resetFadeOutByClass(selector,divcont,linecont,fromPage);     
        }else{
           setTimeout(function(){RefreshFadeoutForSF(selector,divcont,linecont,fromPage);}, 100);
        }
}

function  Refreshtrunk8( fromPage, lcont) {
	   if($('.limit-title-row').find('.'+lcont).height()>0 ) {
		      if(fromPage=='myenrollments'){
		           $('.limit-title-enr').trunk8(trunk8.myenroll_title);
				   $('.limit-desc-enr').trunk8(trunk8.myenroll_desc);
			  }else if(fromPage=='myprograms'){
				   $('.limit-title-lp').trunk8(trunk8.myprogramLP_title);
				   $('.limit-desc-lp').trunk8(trunk8.myprogramLP_desc);
			  }
	    }else{
	           setTimeout(function(){Refreshtrunk8(fromPage,lcont );}, 100);
	    } 
};
//var reloadFlagForPagination=true;
(function($) {
	try{
	$.widget("ui.narrowsearch",{
						// Static variables
						widgetName : 'narrowsearch',
						widgetInitId : 'root_admin',
						widgetSelector : '#root_admin',
						searchBasePath : '',
						firstTime : true,
						filterSets : new Array(), // Each element of this  array is an object, e.g. {type: "checkbox", code: "orgstatus"}
						lastSortType : '',
						lastSortTypeHtmlId : '',
						exportPath : '',
						printPath : '',
						showTopTextFilter: true,
						topTextFilterLabel:'',
						tabContentType:'narrow_search',
						qtipLoadSet : new Array(),
						qtipLenth : 0,

						_init:function(){
							//this.initAdminLinks();
							this.currTheme = Drupal.settings.ajaxPageState.theme;
							var pageUrl = window.location.search;
							if (pageUrl.indexOf("admincalendar") < 0) // search call restricted for admin cal
								this.getSearchContentDisp();

						},

						getUrlVars : function (name) {
							var vars = {};
							var parts = window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi, function(m,key,value) {
								vars[key] = value;
							});
							return vars[name];
						},

						getModuleURLs : function(){
							var qPath = this.getUrlVars('q');
							if(qPath == 'administration'){
								//qPath = $('#root-admin-links-holder li:first-child a').attr('href');
								//window.location.href = qPath;
								return false;
							}
							var qPathArray = qPath.split('/');
							var urlArray = new Array();
							urlArray['main_module'] = qPathArray[1];
							urlArray['sub_module'] = qPathArray[2];
							return urlArray;
						},

						getSearchContentDisp : function() {
							var obj = this;
							var curObj = this;

							var moduleURLs = obj.getModuleURLs();
							if (moduleURLs === false) {
							  return false;
							}

							/* Highlight root admin menu */
							if($('#block-system-main-menu a[href="/?q=administration"]').hasClass('active') == false){
								$('#block-system-main-menu a[href="/?q=administration"]').addClass('active-trail active');
								$('#block-system-main-menu a[href="/?q=administration"]').parent().addClass('active-trail');
							}
							
						  /* Highlight selected menu links */
						  $("ul.list-item-administrator li a").removeClass("root-admin-links-selected");
						  $("#"+moduleURLs['main_module']).addClass("root-admin-links-selected");

						  /* THE BELOW LINES WRITTEN FOR NEW THEME BY VJ*/
						  $("ul.list-item-administrator li.admin-left-panel-module-list").removeClass("root-admin-module-selected");
						  $("#"+moduleURLs['main_module']).parent().addClass("root-admin-module-selected");
							curObj.createLoader("root-admin-search-right-col");
 							url = obj.constructUrl("administration/search-filter/"+moduleURLs['sub_module']);
							$.ajax({
								type: "POST",
								url: url,
								data:  '',
								success: function(data){

								   curObj.destroyLoader("root-admin-search-right-col");

								   var detailsObj = jQuery.parseJSON(data);

								   // Extend Drupal.settings, if any settings are present in the data
								   if (detailsObj!=null && detailsObj.drupal_settings) {
								     $.extend(true, Drupal.settings, detailsObj.drupal_settings);
								   }

								   /* Display the various admin tabs, etc. including the tab-content-main div */
                   $("#root-admin-results").html(detailsObj.rendered_main_div);
                   $("#root-admin-results").show();

                   /* Display the content in the main content tab.
                    * For narrow_search, this will render place holder HTML elements for search results jqGrid, sortbar, action bar, etc */
                   $("#tab-content-main").html(detailsObj.rendered_tab_content_main);
                   
                 //Added by vetrivel.P for #0070900
                   if(moduleURLs['sub_module'] == 'user'){
                   var sec = readCookie('user_upload_message');
                   if(sec !== null){
                   		sec = urldecode(sec);
                   		var error = new Array();
                   		error[0] = sec;
                   		$('#show_suspend_message').remove();
                   		 var message = "<div id='show_suspend_message' style='position:absolute;left:0;right:0;'></div></div>";
                   		 var msg='<div id="message-container" style="visibility:visible"><div class="messages error"><ul><li><span>'+error[0]+'</span></li></ul><div class="msg-close-btn" onclick="$(\'#show_suspend_message\').remove();eraseCookie(\'message\');"></div></div></div><img onload="$(\'body\').data(\'learningcore\').showHideMultipleLi();" style="display:none;" src="sites/all/themes/core/expertusone/expertusone-internals/images/close.png" height="0" width="0"/>';
                   		 $('#tab-content-main').prepend(message);
                   		 $("#tab-content-main #show_suspend_message").append(msg);
                   	eraseCookie('user_upload_message');
                   	}
                   }else if(moduleURLs['sub_module'] == 'catalog'){
                       var sec = readCookie('bulk_enrollment_upload_message');
                   if(sec !== null){
                   		sec = urldecode(sec);
                   		var error = new Array();
                   		error[0] = sec;
                   		$('#show_suspend_message').remove();
                   		 var message = "<div id='show_suspend_message' style='position:absolute;left:0;right:0;'></div></div>";
                   		 var msg='<div id="message-container" style="visibility:visible"><div class="messages error"><ul><li><span>'+error[0]+'</span></li></ul><div class="msg-close-btn" onclick="$(\'#show_suspend_message\').remove();eraseCookie(\'message\');"></div></div></div><img onload="$(\'body\').data(\'learningcore\').showHideMultipleLi();" style="display:none;" src="sites/all/themes/core/expertusone/expertusone-internals/images/close.png" height="0" width="0"/>';
                   		 $('#tab-content-main').prepend(message);
                   		 $("#tab-content-main #show_suspend_message").append(msg);
                   	eraseCookie('bulk_enrollment_upload_message');
                   	}
                   }
                  
								   if (detailsObj.rendered_tab_content_type == "narrow_search") { /* If narrow search */
									   /* Display left side filters*/
										 $("#narrow-search").html(detailsObj.rendered_narrow_search_filters);
										 $("#narrow-search").show();
										 if ($('#group_list_count').val() > 4) {
											$('#group_filterset').css({'height': '90px', 'overflow': 'hidden', 'width': '160px'});
											$("#group_filterset").jScrollPane();
										 }

						                /* if ($('#rescountry_filterset #adminFilterlist_country').val() > 5) {
							  				$('#rescountry_filterset').css({'height': '150px', 'overflow': 'hidden', 'width': '160px'});
							  		   		$('#rescountry_filterset').jScrollPane();
						  			     }	*/					              
										 // Ticket No:0080037 (Revision No:0275605, Point No: 2.3) #custom_attribute_0078975
										 var tabHeight= $("#sort-bar-V2").css('height');
										 if (navigator.appVersion.indexOf("Trident/7.0")!= -1)
											 tabHeight = parseInt(tabHeight)-2;
										 
										 /* Display top bar */
										 if (Drupal.settings.ajaxPageState.theme == 'expertusoneV2') {
											 //$("#admin-maincontent_tab").html("<img style='width:24px;height:24px;padding-top:5px;cursor:pointer;' onclick='drawCalendar();' src='/sites/all/themes/core/expertusoneV2/images/calendaricon.png'></img>");
											 $("#admin-maincontent_tab").append(detailsObj.rendered_narrow_search_sortbar);
											 $("#narrow-search-actionbar").remove();
											 // Ticket No:0080037 (Revision No:0275605, Point No: 2.3) #custom_attribute_0078975
											 if(moduleURLs['main_module']=='manage' && (moduleURLs['sub_module']=='announcement' || moduleURLs['sub_module']=='customattribute') && $('#carousel_inner').parent('#carousel_container')) {
												 $("#sort-bar-V2").css('height','0').css('overflow','hidden');
											 }
											 $("#sort-bar-V2").append(detailsObj.rendered_narrow_search_actionbar);
										 }
										 else {
											 $("#narrow-search-results-topbar").html(detailsObj.rendered_narrow_search_sortbar);
											 $("#narrow-search-actionbar").remove();
											 $("#admin-maincontent_tab").append(detailsObj.rendered_narrow_search_actionbar);
										 }
										 $("#narrow-search-results-topbar").show();

									/*	 if (Drupal.settings.ajaxPageState.theme == "expertusoneV2") {
										   var adminSubModelLength = $("ul.AdminsublinktabNavigation li").length;
											 if(adminSubModelLength >= 4) {
											 	 $("ul.AdminsublinktabNavigation li a span span").css('padding','0px 5px 0px 5px');
											 }
										 }*/
										 /* Add class "selected" to this selected tab and raise it up to the front */
										 $( "ul.AdminsublinktabNavigation li").removeClass("selected");
										 $("#admin-tab-"+moduleURLs['sub_module']).parent("li").addClass("selected");
										 resetMainTab(); // Display selected tab if it is in hidden
										 //#custom_attribute_0078975
										//Custom Attribute Changes 
										if(moduleURLs['main_module']=='manage' && $('#carousel_inner').parent('#carousel_container')) {
											var itemcnt = $('#carousel_container #carousel_inner ul li').size();
												// console.log('itemcnt: '+itemcnt);
											if(itemcnt === 6) {
												var sort_width = parseInt($('#sort-bar-V2').width());
													// console.log('load container width: '+sort_width);
												var actionbar_width = parseInt($('#narrow-search-actionbar').width());
													// console.log('load actionbar width: '+actionbar_width);
												var container_width = (sort_width - actionbar_width) - 45;
												var width_calc = '';
												var ulactual_width = $('#carousel_container #carousel_inner ul').width();
													// console.log('ul actual width: '+ulactual_width);
												$('#carousel_container #carousel_inner').css('width', 'auto');
												$('#carousel_container #carousel_inner ul').css('width', 'auto');
												var ul_width = parseInt($('#carousel_container #carousel_inner ul').width());
													// console.log('ul width: '+ul_width);
												var lastli_width = parseInt($('#carousel_container #carousel_inner ul li:last').width());
													// console.log('last li width: '+lastli_width);
												if(container_width > ul_width) {	
													width_calc = container_width;
													$('#carousel_container .last').css('display', 'none');
												} else 
													width_calc = (ul_width - lastli_width) - 4;
												// console.log('carousel_inner width: '+width_calc);
												$('#carousel_container #carousel_inner').css('width', width_calc);
												$('#carousel_container #carousel_inner ul').css('width', ulactual_width);
												
												if(moduleURLs['sub_module']=='customattribute')
													MoveTabNext(itemcnt);
											} else {
												if(moduleURLs['sub_module']=='announcement' || moduleURLs['sub_module']=='customattribute')
													MoveTabNext(itemcnt);
											}
										}
										// Ticket No:0080037 (Revision No:0275605, Point No: 2.3)
										if(moduleURLs['main_module']=='manage' && (moduleURLs['sub_module']=='announcement' || moduleURLs['sub_module']=='customattribute') && $('#carousel_inner').parent('#carousel_container')) {
											setTimeout(function(){
												$("#sort-bar-V2").css('height',tabHeight).css('overflow','visible');
											},500);
										}

										 var linkPath = 'administration/'+moduleURLs['main_module'];
										 var sublinkPath = 'administration/'+moduleURLs['main_module']+'/'+moduleURLs['sub_module'];
										 curObj.initPaths(detailsObj.rendered_tab_content_type);
										 curObj.initFilters();
										 curObj.renderSearchResults(linkPath, sublinkPath);

										 if($('#narrow-search-actionbar')){
								  	   $('#narrow-search-actionbar').hide();
										 }
										 if(typeof detailsObj.rendered_script != 'undefined'){
											 eval(detailsObj.rendered_script+"()");
										 }
										 $('.courselangtype-scroll-list-container, .coursecurrency-scroll-list-container, .contentlang-scroll-list-container, .tpcurrency-scroll-list-container, .surveydetailslang-scroll-list-container, .surveyquestionslang-scroll-list-container, .langtype-scroll-list-container, .grplang-scroll-list-container, .rescountry-scroll-list-container, .announcementlang-scroll-list-container, .ordercurrency-scroll-list-container').jScrollPane({});
				   }
								   else if (detailsObj.rendered_tab_content_type == "ajax-form") {
                     Drupal.attachBehaviors();
                   }
								}
							});
						},

						initPaths : function(tabContentType){   /* Initialize path for search, print, export, filter option */
							if(tabContentType!=""){
							  this.tabContentType=tabContentType;
							}
							if(this.tabContentType=="narrow_search"){
								/* Narrow search filter data lists */
								var filterSetData=$("#narrow-search-filters").attr("data");
								this.filterSets=eval(filterSetData); //commented for issue in Drupal translated strings for french language
								//this.filterSets=eval(filterSetData.replace(/\\u0026#39;/g,"'"));


								/*Sort bar data lists */
								var sortBarData=$("#narrow-search-sortbar").attr("data");
								var sortBarObj = jQuery.parseJSON(eval("'"+ sortBarData +"'"));
								this.lastSortType = sortBarObj.last_sort_type;
								this.lastSortTypeHtmlId = sortBarObj.last_sort_type_html_id;

								/* Action bar data lists */
								var actionBarData=$("#narrow-search-actionbar").attr("data");
								var actionBarObj = jQuery.parseJSON(eval("'"+ actionBarData +"'"));
								this.exportPath = actionBarObj.export_path;
								this.printPath = actionBarObj.print_path;

								/* Other - narrow search data lists */
								var narrowSearchOtherData=$("#narrow-search-results").attr("data");
								var narrowSearchOtherObj = jQuery.parseJSON(eval("'"+ narrowSearchOtherData +"'"));

								this.searchBasePath = narrowSearchOtherObj.search_base_path;
								this.text_filter_ac_path = narrowSearchOtherObj.text_filter_ac_path;
								this.showTopTextFilter = narrowSearchOtherObj.show_top_text_filter;
								this.topTextFilterLabel = narrowSearchOtherObj.top_text_filter_label;

								if(this.topTextFilterLabel==null || this.topTextFilterLabel=="undefined" || this.topTextFilterLabel==undefined){
									this.topTextFilterLabel = (Drupal.settings.ajaxPageState.theme == 'expertusoneV2') ? Drupal.t("LBL304") : Drupal.t("LBL304").toUpperCase();
								}

								if(this.showTopTextFilter){

								  this.initTextFilter(this.text_filter_ac_path);

								  $("#narrow-search-text-filter").val(this.topTextFilterLabel);

								  this.initTextDateFilterBlurStyle("#narrow-search-text-filter", this.topTextFilterLabel,"1");

								  $("#narrow-search-text-filter-container").show();

								}else{

								  $("#narrow-search-text-filter-container").hide();

								}
						   }else{ /* Non - NarrowSearch */

						   }

						},

						displayResultWizard : function(title,message){
						    $('#result-msg-wizard').remove();
						    var html = '';
						    html+='<div id="result-msg-wizard" style="display:none; padding: 0px;">';
						    html+='<table width="100%" cellpadding="0" cellspacing="0" border="0" valign="center">';

						    html+= '<tr><td height="40px">&nbsp;</td></tr>';
							html+= '<tr><td align="center" class="light-gray-color">'+message+'</td></tr>';

						    html+='</table>';
						    html+='</div>';
						    $("body").append(html);
						    var closeButt={};
						    closeButt[Drupal.t('LBL123')]=function(){ $(this).dialog('destroy');$(this).dialog('close');$('#result-msg-wizard').remove();};

						    $("#result-msg-wizard").dialog({
						        position:[(getWindowWidth()-400)/2,200],
						        bgiframe: true,
						        width:400,
						        resizable:false,
						        modal: true,
						        title:title,//"Delete",
						        buttons:closeButt,
						        closeOnEscape: false,
						        draggable:false,
						        overlay:
						         {
						           opacity: 0.9,
						           background: "black"
						         }
						    });

						    $('.ui-dialog').wrap("<div id='delete-object-dialog'></div>");

						    $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').addClass("removebutton").end();
						    $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(1)').before('<div class="admin-save-button-left-bg"></div>');
						    $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(1)').addClass("admin-save-button-middle-bg").end();
						    $('.ui-dialog-buttonpane .ui-difalog-buttonset button:eq(1)').after('<div class="admin-save-button-right-bg"></div>');

						    $("#result-msg-wizard").show();

							$('.ui-dialog-titlebar-close').click(function(){
						        $("#result-msg-wizard").remove();
						    });
							this.currTheme = Drupal.settings.ajaxPageState.theme;
						 	if(this.currTheme == "expertusoneV2"){
						 	 changeDialogPopUI();
							}
						},

						resetUserPassword : function(userEmail, userId, rowObj){
							var obj = this;
							$("#reset-password-loader-"+userId).remove();
							var cRow = $(rowObj).parents("tr").before("<tr><td colspan='3'><div id='reset-password-loader-"+userId+"'></div></td></tr>");
							this.createLoader("reset-password-loader-"+userId);
							url = obj.constructUrl("ajax/administration/people/reset-password" + '/' + userEmail );
							$.ajax({
								type: "POST",
								url: url,
								data:  '',
								success: function(result){
									result = $.trim(result);
									result = result.split('|');
									$("#root-admin").data("narrowsearch").displayResultWizard(result[0],result[1]);
									$("#root-admin").data("narrowsearch").destroyLoader('reset-password-loader-'+userId);
								}
							});
						},

						publishAndUnpublishCatalog : function(catalogId, catalogType,actionStatus, rowObj, iscompliance) {
							var comp = iscompliance;
							var obj = this;
							url = obj.constructUrl("ajax/administration/learning/catalog/show-catalog" + '/' + catalogId);

							$.ajax({
								type: "POST",
								url: url,
								data:  '',
								success: function(access){
									this.currTheme = Drupal.settings.ajaxPageState.theme;

									var show =	$.trim($('#publish-unpublish-'+catalogId).html());

									if(iscompliance == 1 && access == 0 && show == 'Show in Catalog'){
										var uniqueClassPopup = '';
										 $('#delete-msg-wizard').remove();
										    var html = '';
										    html+='<div id="delete-msg-wizard" style="display:none; padding: 0px;">';
										    html+='<table width="100%" cellpadding="0" cellspacing="0" border="0" valign="center">';
										    if(this.currTheme == 'expertusoneV2'){
										   	 html+= '<tr><td style="padding: 30px 24px;" class="commanTitleAll">'+Drupal.t("MSG711")+'</td></tr>';
										    } else {
										     html+= '<tr><td color="#333333" style="padding: 30px 24px; text-align: justify;">'+Drupal.t("MSG711")+'</td></tr>';
										    }
										    html+='</table>';
										    html+='</div>';
										    $("body").append(html);

										    var closeButt={};
										    //closeButt[Drupal.t('LBL109')]=function(){ $(this).dialog('destroy');$(this).dialog('close');$('#delete-msg-wizard').remove();};
										    closeButt[Drupal.t('LBL109')]=function(){ $("#root-admin").data("narrowsearch").publishAndUnpublishCat(catalogId, catalogType,actionStatus, rowObj);
										    };
										    if(availableFunctionalities.exp_sp_esignature != undefined && availableFunctionalities.exp_sp_esignature != ""){
										    	var esignObj = {'popupDiv':'catalog-publish-unpublis-dialog',
										    			'esignFor':'PublishUnpublishCatalog','catalogId':catalogId,'catalogType': catalogType,'actionStatus': actionStatus, 'rowObj': rowObj};
										    	closeButt[Drupal.t('Yes')]=function(){ $.fn.getNewEsignPopup(esignObj); };

										 }else{
											 closeButt[Drupal.t('Yes')]=function(){ $(this).dialog('destroy');$(this).dialog('close');$('#delete-msg-wizard').remove();
											 setTimeout(function() {
													$('#access-visibility-'+catalogId).click();
												}, 10);
											 };

   										 }
										    $("#delete-msg-wizard").dialog({
										        position:[(getWindowWidth()-400)/2,200],
										        bgiframe: true,
										        width:300,
										        resizable:false,
										        modal: true,
										        title:Drupal.t('LBL749'),
										        buttons:closeButt,
										        closeOnEscape: false,
										        draggable:false,
										        zIndex : 10005,
										        overlay:
										         {
										           opacity: 0.9,
										           background: "black"
										         }
										    });
										    $('.ui-dialog').wrap("<div id='catalog-publish-unpublis-dialog' class='"+uniqueClassPopup+"'></div>");
										    $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').addClass("removebutton").end();
										    $(".removebutton").text(Drupal.t("No"));
										    $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(1)').before('<div class="admin-save-button-left-bg"></div>');
										    $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(1)').addClass("admin-save-button-middle-bg").end();
										    $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(1)').after('<div class="admin-save-button-right-bg"></div>');
										    $("#delete-msg-wizard").show();

											$('.ui-dialog-titlebar-close').click(function(){
										        $("#delete-msg-wizard").remove();
										    });
											$('.admin-save-button-middle-bg').click(function(){
										        $("#delete-msg-wizard").remove();
										    });
											$('.removebutton').click(function(){
										        $("#delete-msg-wizard").remove();
										    });
											if(this.currTheme == 'expertusoneV2'){
										    	changeDialogPopUI();
										    }




										}
									else{
										var show = $('#publish-unpublish-'+catalogId).html();
										if(availableFunctionalities.exp_sp_esignature != undefined && availableFunctionalities.exp_sp_esignature != ""){
											var esignObj = {'popupDiv':'catalog-publish-unpublis-dialog',
													'esignFor':'PublishUnpublishCatalog','catalogId':catalogId,'catalogType': catalogType,'actionStatus': actionStatus, 'rowObj': rowObj};
											$.fn.getNewEsignPopup(esignObj); // #0040182 This Function is Missing
										}else{
											$("#root-admin").data("narrowsearch").publishAndUnpublishCat(catalogId, catalogType,actionStatus, rowObj);

										}
									}

								}
							});

						},

						publishAndUnpublishCat : function(catalogId, catalogType,actionStatus, rowObj){
							var obj = this;
							//$("#class-detail-loader-"+catalogId).remove();
							//var cRow = $(rowObj).parents("tr").parents("tr").before("<tr><td colspan='3'><div id='class-detail-loader-"+catalogId+"'></div></td></tr>");
							//this.createLoader("class-detail-loader-"+catalogId);
							url = obj.constructUrl("ajax/administration/learning/catalog/publish-and-unpublish" + '/' + catalogId + '/' + catalogType + '/' + actionStatus);
							$.ajax({
								type: "POST",
								url: url,
								data:  '',
								success: function(result){
								result = $.trim(result);
								result = result.split('|');
									if(result[0]=='lrn_crs_sts_atv' || result[0]=='lrn_cls_sts_atv'){
										$("#publish-unpublish-"+catalogId).removeClass("crs-publish-btn");
										$("#publish-unpublish-"+catalogId).addClass("crs-unpublish-btn");
									}
									else if(result[0]=='lrn_crs_sts_itv' || result[0]=='lrn_cls_sts_itv'){
										$("#publish-unpublish-"+catalogId).removeClass("crs-unpublish-btn");
										$("#publish-unpublish-"+catalogId).addClass("crs-publish-btn");
									}
									else if(result[0]=='lrn_cls_sts_dld'){
										$("#publish-unpublish-"+catalogId).removeClass("crs-publish-btn");
										$("#publish-unpublish-"+catalogId).removeClass("action-crs-publish-btn");
										$("#publish-unpublish-"+catalogId).addClass("crs-pub-enrolled-btn");
										$("#publish-unpublish-"+catalogId).removeAttr("onclick").unbind("click");
									}else if(result[0]=='lrn_cls_sts_can'){
										$("#publish-unpublish-"+catalogId).removeClass("crs-publish-btn");
										$("#publish-unpublish-"+catalogId).removeClass("action-crs-publish-btn");
										$("#publish-unpublish-"+catalogId).addClass("crs-pub-enrolled-btn");
										$("#publish-unpublish-"+catalogId).removeAttr("onclick").unbind("click");
									}
									$("#publish-unpublish-"+catalogId).html(result[1]);
								}
							});
						},

						publishAndUnpublishProgram : function(programId, rowObj) {
							 if(availableFunctionalities.exp_sp_esignature != undefined && availableFunctionalities.exp_sp_esignature != ""){
							    	var esignObj = {'popupDiv':'program-publish-unpublis-dialog',
							    			'esignFor':'PublishUnpublishProgram','programId':programId,'rowObj': rowObj};
							    	 $.fn.getNewEsignPopup(esignObj);
							 }else{
								 $("#root-admin").data("narrowsearch").publishAndUnpublishPrg(programId, rowObj);
							 }

						},

						publishAndUnpublishPrg : function(programId, rowObj){
							var obj = this;
							url = obj.constructUrl("ajax/administration/learning/program/publish-and-unpublish" + '/' + programId);
							$.ajax({
								type: "POST",
								url: url,
								data:  '',
								success: function(result){
								result = $.trim(result);
								result = result.split('|');
									if(result[0]=='lrn_lpn_sts_atv'){
										$("#publish-unpublish-"+programId).removeClass("crs-publish-btn");
										$("#publish-unpublish-"+programId).addClass("crs-unpublish-btn");
									}
									else if(result[0]=='lrn_lpn_sts_itv'){
										$("#publish-unpublish-"+programId).removeClass("crs-unpublish-btn");
										$("#publish-unpublish-"+programId).addClass("crs-publish-btn");
									}
									$("#publish-unpublish-"+programId).html(result[1]);
								}
							});
						},
						publishAndUnpublishSurveyAssessment : function(surveyId, surveyType, rowObj) {
							 if(availableFunctionalities.exp_sp_esignature != undefined && availableFunctionalities.exp_sp_esignature != ""){
							    	var esignObj = {'popupDiv':'survey-publish-unpublis-dialog',
							    			'esignFor':'publishAndUnpublishSurveyAssessment','surveyId':surveyId,'surveyType':surveyType,'rowObj': rowObj};
							    	 $.fn.getNewEsignPopup(esignObj);
							 }else{
								 $("#root-admin").data("narrowsearch").publishAndUnpublishSur(surveyId, surveyType, rowObj);
							 }

						},

						publishAndUnpublishSur : function(surveyId, surveyType, rowObj){
							var obj = this;
							if(surveyType =='Assessment'){
								url = obj.constructUrl("ajax/administration/assessment/survey-assessment/publish-and-unpublish" + '/' + surveyId + '/' + surveyType);
							}
							else{
								url = obj.constructUrl("ajax/administration/survey/survey-assessment/publish-and-unpublish" + '/' + surveyId + '/' + surveyType);
							}
							$.ajax({
								type: "POST",
								url: url,
								data:  '',
								success: function(result){
								result = $.trim(result);
								result = result.split('|');
									if(result[0]=='sry_det_sry_atv'){
										$("#publish-unpublish-"+surveyId).removeClass("crs-publish-btn");
										$("#publish-unpublish-"+surveyId).addClass("crs-unpublish-btn");
									}
									else if(result[0]=='sry_det_sry_itv'){
										$("#publish-unpublish-"+surveyId).removeClass("crs-unpublish-btn");
										$("#publish-unpublish-"+surveyId).addClass("crs-publish-btn");
									}
									$("#publish-unpublish-"+surveyId).html(result[1]);
								}
							});
						},

						publishAndUnpublishSurveyAssessmentQuestions : function(questionId, rowObj) {
							 if(availableFunctionalities.exp_sp_esignature != undefined && availableFunctionalities.exp_sp_esignature != ""){
							    	var esignObj = {'popupDiv':'survey-publish-unpublis-dialog',
							    			'esignFor':'publishAndUnpublishSurveyAssessmentQuestions','questionId':questionId,'rowObj': rowObj};
							    	 $.fn.getNewEsignPopup(esignObj);
							 }else{
								 $("#root-admin").data("narrowsearch").publishAndUnpublishQus(questionId, rowObj);
							 }

						},

						publishAndUnpublishQus : function(questionId, rowObj){
							var obj = this;
							url = obj.constructUrl("ajax/administration/survey/survey-assessment-questions/publish-and-unpublish" + '/' + questionId );
							$.ajax({
								type: "POST",
								url: url,
								data:  '',
								success: function(result){
								result = $.trim(result);
								result = result.split('|');
									if(result[0]=='sry_qtn_sts_atv'){
										$("#publish-unpublish-"+questionId).removeClass("crs-publish-btn");
										$("#publish-unpublish-"+questionId).addClass("crs-unpublish-btn");
									}
									else if(result[0]=='sry_qtn_sts_itv'){
										$("#publish-unpublish-"+questionId).removeClass("crs-unpublish-btn");
										$("#publish-unpublish-"+questionId).addClass("crs-publish-btn");
									}
									$("#publish-unpublish-"+questionId).html(result[1]);
								}
							});
						},
			setPositionToCtoolPop : function(path) {
//#custom_attribute_0078975
				// console.log('hello setPositionToCtoolPop');

				if(path.indexOf('group') > 1 || path.indexOf('customattribute') > 1){
					$('#create-dd-list').css('visibility','hidden');
				}
				if(path.indexOf('course-class') > 1 || path.indexOf('program') > 1 || path.indexOf('banner') > 1
						|| path.indexOf('announcement') > 1) {
					var v = $(window).scrollTop();
					if(v < 150) {
						$(window).scrollTop(150);
					}
				}
				// Added by Vincent on 07, Jan 2014 for #0029687: Refresh on Admin Enrollments page
				updatePaginationCookie(1);
				//Custom Attributes for User Registration in Site settings page #custom_attribute_0078975
				setTimeout(function(){
					$('#userregister_scrollbar_container').jScrollPane();
				}, 500);
			},

            publishAndUnpublishContent : function(contentId, rowObj) {
              if(availableFunctionalities.exp_sp_esignature != undefined && availableFunctionalities.exp_sp_esignature != ""){
                   var esignObj = {'popupDiv':'content-publish-unpublis-dialog',
                       'esignFor':'publishAndUnpublishContent', 'contentId':contentId, 'rowObj': rowObj};
                    $.fn.getNewEsignPopup(esignObj);
              }else{
                $("#root-admin").data("narrowsearch").publishAndUnpublishCnt(contentId, rowObj);
              }

           },

           publishAndUnpublishCnt : function(contentId, rowObj){
             var obj = this;
             url = obj.constructUrl("ajax/administration/manage/content/publish-and-unpublish" + '/' + contentId );
             $.ajax({
               type: "POST",
               url: url,
               data:  '',
               success: function(result){
               result = $.trim(result);
               result = result.split('|');
                 if(result[0]=='lrn_cnt_sts_atv'){
                   $("#publish-unpublish-"+contentId).removeClass("crs-publish-btn");
                   $("#publish-unpublish-"+contentId).addClass("crs-unpublish-btn");
                 }
                 else if(result[0]=='lrn_cnt_sts_itv'){
                   $("#publish-unpublish-"+contentId).removeClass("crs-unpublish-btn");
                   $("#publish-unpublish-"+contentId).addClass("crs-publish-btn");
                 }
                 $("#publish-unpublish-"+contentId).html(result[1]);
               }
             });
           },
           
           
           
           publishAndUnpublishVideo : function(contentId, rowObj) {
               if(availableFunctionalities.exp_sp_esignature != undefined && availableFunctionalities.exp_sp_esignature != ""){
                    var esignObj = {'popupDiv':'content-publish-unpublis-dialog',
                        'esignFor':'publishAndUnpublishVideo', 'contentId':contentId, 'rowObj': rowObj};
                     $.fn.getNewEsignPopup(esignObj);
               }else{
                 $("#root-admin").data("narrowsearch").publishAndUnpublishCntVideo(contentId, rowObj);
               }

            },

            publishAndUnpublishCntVideo : function(contentId, rowObj){
              var obj = this;
              url = obj.constructUrl("ajax/administration/contentauthor/video/publish-and-unpublish" + '/' + contentId );
              $.ajax({
                type: "POST",
                url: url,
                data:  '',
                success: function(result){
                result = $.trim(result);
                result = result.split('|');
                  if(result[0]=='lrn_cnt_sts_atv'){
                    $("#publish-unpublish-"+contentId).removeClass("crs-publish-btn");
                    $("#publish-unpublish-"+contentId).addClass("crs-unpublish-btn");
                    $("#share-visibility-"+contentId).removeClass("tab-disable");
                    $("#share-visibility-"+contentId).parent().parent().find(".disable-share-tab-icon").addClass("share-tab-icon");
                    $("#share-visibility-"+contentId).parent().parent().find(".disable-share-tab-icon").removeClass("disable-share-tab-icon");
                    $("#share-visibility-"+contentId).attr("onclick","javascript:void(0);");
                    		$("#share-visibility-"+contentId).click(function()
                    		{
                    										callVisibility({'entityId':contentId,
      														 'entityType':'cre_sys_obt_cnt',
      														 'url':'administration/contentauthor/content-share/'+contentId+'/cre_sys_obt_cnt/0',
      														 'popupDispId':'narrow_search_qtip_share_disp__cre_sys_obt_cnt',
      														 'catalogVisibleId':'narrow_search_qtipShareqtip_visible_disp__cre_sys_obt_cnt',
      														 'wid':645,
      														 'heg':'300',
      														 'postype':'middle',
      														 'poslwid':'50',
      														 'linkid':'share-visibility-'+contentId});
      						});
      														 
                  }
                  else if(result[0]=='lrn_cnt_sts_itv'){
                    $("#publish-unpublish-"+contentId).removeClass("crs-unpublish-btn");
                    $("#publish-unpublish-"+contentId).addClass("crs-publish-btn");
                    $("#share-visibility-"+contentId).addClass("tab-disable");
                    $("#share-visibility-"+contentId).addClass("tab-disable");
                    $("#share-visibility-"+contentId).parent().parent().find(".share-tab-icon").addClass("disable-share-tab-icon");
                    $("#share-visibility-"+contentId).parent().parent().find(".share-tab-icon").removeClass("share-tab-icon");
                    $("#share-visibility-"+contentId).attr("onclick","javascript:void(0);");
                    $("#share-visibility-"+contentId).unbind("click",null);
                  }
                  $("#publish-unpublish-"+contentId).html(result[1]);
                }
              });
            },
            
            
            publishAndUnpublishPresentation : function(contentId, rowObj) {
                if(availableFunctionalities.exp_sp_esignature != undefined && availableFunctionalities.exp_sp_esignature != ""){
                     var esignObj = {'popupDiv':'content-publish-unpublis-dialog',
                         'esignFor':'publishAndUnpublishPresentation', 'contentId':contentId, 'rowObj': rowObj};
                      $.fn.getNewEsignPopup(esignObj);
                }else{
                  $("#root-admin").data("narrowsearch").publishAndUnpublishCntPresentation(contentId, rowObj);
                }

             },

            
             
             publishAndUnpublishCntPresentation : function(contentId, rowObj){
                 var obj = this;
                 url = obj.constructUrl("ajax/administration/contentauthor/presentation/publish-and-unpublish" + '/' + contentId );
                 $.ajax({
                   type: "POST",
                   url: url,
                   data:  '',
                   success: function(result){
                   result = $.trim(result);
                   result = result.split('|');
                     if(result[0]=='lrn_cnt_sts_atv'){
                       $("#publish-unpublish-"+contentId).removeClass("crs-publish-btn");
                       $("#publish-unpublish-"+contentId).addClass("crs-unpublish-btn");
                   $("#share-visibility-"+contentId).removeClass("tab-disable");
                      $("#share-visibility-"+contentId).parent().parent().find(".disable-share-tab-icon").addClass("share-tab-icon");
                      $("#share-visibility-"+contentId).parent().parent().find(".disable-share-tab-icon").removeClass("disable-share-tab-icon");
                      $("#share-visibility-"+contentId).attr("onclick","javascript:void(0);");
                      		$("#share-visibility-"+contentId).click(function()
                      		{
                      										callVisibility({'entityId':contentId,
        														 'entityType':'cre_sys_obt_cnt',
        														 'url':'administration/contentauthor/content-share/'+contentId+'/cre_sys_obt_cnt/0',
        														 'popupDispId':'narrow_search_qtip_share_disp__cre_sys_obt_cnt',
        														 'catalogVisibleId':'narrow_search_qtipShareqtip_visible_disp__cre_sys_obt_cnt',
        														 'wid':645,
        														 'heg':'300',
        														 'postype':'middle',
        														 'poslwid':'50',
        														 'linkid':'share-visibility-'+contentId});
        						});
        								   
                     }
                     else if(result[0]=='lrn_cnt_sts_itv'){
                       $("#publish-unpublish-"+contentId).removeClass("crs-unpublish-btn");
                       $("#publish-unpublish-"+contentId).addClass("crs-publish-btn");
                       $("#share-visibility-"+contentId).addClass("tab-disable");
                       $("#share-visibility-"+contentId).addClass("tab-disable");
                       $("#share-visibility-"+contentId).parent().parent().find(".share-tab-icon").addClass("disable-share-tab-icon");
                       $("#share-visibility-"+contentId).parent().parent().find(".share-tab-icon").removeClass("share-tab-icon");
                       $("#share-visibility-"+contentId).attr("onclick","javascript:void(0);");
                       $("#share-visibility-"+contentId).unbind("click",null);
                    
                     }
                     $("#publish-unpublish-"+contentId).html(result[1]);
                   }
                 });
               },
              
             
            
            

           publishAndUnpublishTax : function(taxId, rowObj) {
               if(availableFunctionalities.exp_sp_esignature != undefined && availableFunctionalities.exp_sp_esignature != ""){
                    var esignObj = {'popupDiv':'tax-publish-unpublis-dialog',
                        'esignFor':'publishAndUnpublishTax', 'taxId':taxId, 'rowObj': rowObj};
                     $.fn.getNewEsignPopup(esignObj);
               }else{
                 $("#root-admin").data("narrowsearch").publishAndUnpublishTaxDialog(taxId, rowObj);
               }

            },

            publishAndUnpublishTaxDialog : function(taxId, rowObj){
              var obj = this;
              url = obj.constructUrl("ajax/administration/commerce/tax/publish-and-unpublish" + '/' + taxId );
              $.ajax({
                type: "POST",
                url: url,
                data:  '',
                success: function(result){
                obj.destroyLoader("paint-narrow-search-results");
                result = $.trim(result);
                result = result.split('|');
                  if(result[0]=='cme_tax_sts_atv'){
                    $("#publish-unpublish-"+taxId).removeClass("crs-publish-btn");
                    $("#publish-unpublish-"+taxId).addClass("crs-unpublish-btn");
                  }
                  else if(result[0]=='cme_tax_sts_itv'){
                    $("#publish-unpublish-"+taxId).removeClass("crs-unpublish-btn");
                    $("#publish-unpublish-"+taxId).addClass("crs-publish-btn");
                  }
                  $("#publish-unpublish-"+taxId).html(result[1]);
                }
              });
            },

            publishAndUnpublishDiscount : function(discountId, rowObj,allowPublishorNot) {
            	allowPublishorNot = (typeof allowPublishorNot == 'undefined') ? 0 : allowPublishorNot;
            	this.currTheme = Drupal.settings.ajaxPageState.theme;

				if(allowPublishorNot == 1){
					var uniqueClassPopup = '';
					 $('#delete-msg-wizard').remove();
					    var html = '';
					    html+='<div id="delete-msg-wizard" style="display:none; padding: 0px;">';
					    html+='<table width="100%" cellpadding="0" cellspacing="0" border="0" valign="center">';
					    if(this.currTheme == 'expertusoneV2'){
					   	 html+= '<tr><td style="padding: 30px 24px;" class="commanTitleAll">'+Drupal.t("ERR248")+'</td></tr>';
					    } else {
					     html+= '<tr><td color="#333333" style="padding: 30px 24px; text-align: justify;">'+Drupal.t("ERR248")+'</td></tr>';
					    }
					    html+='</table>';
					    html+='</div>';
					    $("body").append(html);

					    var closeButt={};
					    closeButt[Drupal.t('LBL123')]=function(){ $(this).dialog('destroy');$(this).dialog('close');$('#delete-msg-wizard').remove();};

					    $("#delete-msg-wizard").dialog({
					        position:[(getWindowWidth()-400)/2,200],
					        bgiframe: true,
					        width:300,
					        resizable:false,
					        modal: true,
					        title:Drupal.t('LBL749'),
					        buttons:closeButt,
					        closeOnEscape: false,
					        draggable:false,
					        zIndex : 10005,
					        overlay:
					         {
					           opacity: 0.9,
					           background: "black"
					         }
					    });
					    $('.ui-dialog').wrap("<div id='catalog-publish-unpublis-dialog' class='"+uniqueClassPopup+"'></div>");
					    $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').addClass("removebutton").end();
					    $("#delete-msg-wizard").show();

						$('.ui-dialog-titlebar-close').click(function(){
					        $("#delete-msg-wizard").remove();
					    });

						if(this.currTheme == 'expertusoneV2'){
					    	changeDialogPopUI();
					    }
					}else{
						if(availableFunctionalities.exp_sp_esignature != undefined && availableFunctionalities.exp_sp_esignature != ""){
		                     var esignObj = {'popupDiv':'discount-publish-unpublis-dialog',
		                         'esignFor':'publishAndUnpublishDiscount', 'discountId':discountId, 'rowObj': rowObj};
		                      $.fn.getNewEsignPopup(esignObj);
		                }else{
		                  $("#root-admin").data("narrowsearch").publishAndUnpublishDiscountDialog(discountId, rowObj);
		                }
					}


             },

             publishAndUnpublishDiscountDialog : function(discountId, rowObj){
               var obj = this;
               url = obj.constructUrl("ajax/administration/commerce/discounts/publish-and-unpublish" + '/' + discountId );
               $.ajax({
                 type: "POST",
                 url: url,
                 data:  '',
                 success: function(result){
                 obj.destroyLoader("paint-narrow-search-results");
                 result = $.trim(result);
                 result = result.split('|');
                   if(result[0] == 1){
                     $("#publish-unpublish-"+discountId).removeClass("crs-publish-btn");
                     $("#publish-unpublish-"+discountId).addClass("crs-unpublish-btn");
                   }
                   else if(result[0] == 0){
                     $("#publish-unpublish-"+discountId).removeClass("crs-unpublish-btn");
                     $("#publish-unpublish-"+discountId).addClass("crs-publish-btn");
                   }
                   $("#publish-unpublish-"+discountId).html(result[1]);
                 }
               });
             },

			 publishAndUnpublishGroupDialog : function(objectId, objectType, rowObj,is_admin,owner_cnt) {
				 	var title = Drupal.t('MSG773');
				 	var suspend = $('#action_icon_tooltip_'+objectId).hasClass( "Suspend" );
				 	if(suspend ){
						var uniqueClassPopup = '';
					    $('#delete-msg-wizard').remove();
					    var html = '';
					    html+='<div id="delete-msg-wizard" style="display:none; padding: 0px;">';
					    html+='<table width="100%" cellpadding="0" cellspacing="0" border="0" valign="center">';
					   
					    if(this.currTheme == 'expertusoneV2'){
					   	 html+= '<tr><td style="padding: 30px 24px;" class="commanTitleAll">'+title+'</td></tr>';
					    } else {
					     html+= '<tr><td color="#333333" style="padding: 30px 24px; text-align: justify;">'+title+'</td></tr>';
					    }
					    html+='</table>';
					    html+='</div>';
					    $("body").append(html);
	
					    var closeButt={};
					    closeButt[Drupal.t('LBL109')]=function(){ $(this).dialog('destroy');$(this).dialog('close');$('#delete-msg-wizard').remove();};
	
		                 if(availableFunctionalities.exp_sp_esignature != undefined && availableFunctionalities.exp_sp_esignature != ""){
		                      var esignObj = {'popupDiv':'object-activate-deactivate-dialog',
								    			'esignFor':'ActivateDeactivateObject','objectId':objectId,'objectType':objectType,'rowObj': rowObj};
		                      closeButt[Drupal.t('Yes')]=function(){ $.fn.getNewEsignPopup(esignObj); };
		                 }else{
		                	 closeButt[Drupal.t('Yes')]=function(){ $("#root-admin").data("narrowsearch").activateAndDeactivateObj(objectId, objectType, rowObj); };
		                 }
	
					    $("#delete-msg-wizard").dialog({
					        position:[(getWindowWidth()-400)/2,200],
					        bgiframe: true,
					        width:300,
					        resizable:false,
					        modal: true,
					        title:Drupal.t('Groups'),
					        buttons:closeButt,
					        closeOnEscape: false,
					        draggable:false,
					        overlay:
					         {
					           opacity: 0.9,
					           background: "black"
					         }
					    });
					    $('.ui-dialog').wrap("<div id='delete-object-dialog' class='"+uniqueClassPopup+"'></div>");
					    $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').addClass("removebutton").end();
					    $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(1)').before('<div class="admin-save-button-left-bg"></div>');
					    $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(1)').addClass("admin-save-button-middle-bg").end();
					    $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(1)').after('<div class="admin-save-button-right-bg"></div>');
					    $("#delete-msg-wizard").show();
	
						$('.ui-dialog-titlebar-close').click(function(){
					        $("#delete-msg-wizard").remove();
					    });
						if(this.currTheme == 'expertusoneV2'){
					    	changeDialogPopUI();
					    }
				    }else{
				    	 if(availableFunctionalities.exp_sp_esignature != undefined && availableFunctionalities.exp_sp_esignature != ""){
					    	var esignObj = {'popupDiv':'object-activate-deactivate-dialog',
								    			'esignFor':'ActivateDeactivateObject','objectId':objectId,'objectType':objectType,'rowObj': rowObj};
					    	 $.fn.getNewEsignPopup(esignObj);
						 }else{
							 $("#root-admin").data("narrowsearch").activateAndDeactivateObj(objectId, objectType, rowObj);
						 }
				    }

           },
             publishAndUnpublishOrder : function(orderId, orderStatus, rowObj) {
					var uniqueClassPopup = '';
				    $('#delete-msg-wizard').remove();
				    var html = '';
				    html+='<div id="delete-msg-wizard" style="display:none; padding: 0px;">';
				    html+='<table width="100%" cellpadding="0" cellspacing="0" border="0" valign="center">';
				    //html+= '<tr><td height="40px">&nbsp;</td></tr>';
				    if(orderStatus == 'payment_received'){
	            		var title = Drupal.t('LBL1163');
	            	}else if(orderStatus == 'canceled'){
	            		var title = Drupal.t('LBL1164');
	            	}
				    if(this.currTheme == 'expertusoneV2'){
				   	 html+= '<tr><td style="padding: 30px 24px;" class="commanTitleAll">'+title+'</td></tr>';
				    } else {
				     html+= '<tr><td color="#333333" style="padding: 30px 24px; text-align: justify;">'+title+'</td></tr>';
				    }
				    html+='</table>';
				    html+='</div>';
				    $("body").append(html);

				    var closeButt={};
				    closeButt[Drupal.t('LBL109')]=function(){ $(this).dialog('destroy');$(this).dialog('close');$('#delete-msg-wizard').remove();};

	                 if(availableFunctionalities.exp_sp_esignature != undefined && availableFunctionalities.exp_sp_esignature != ""){
	                      var esignObj = {'popupDiv':'order-publish-unpublis-dialog',
	                          'esignFor':'publishAndUnpublishOrder', 'orderId':orderId, 'orderStatus':orderStatus, 'rowObj': rowObj};
	                      closeButt[Drupal.t('Yes')]=function(){ $.fn.getNewEsignPopup(esignObj); };
	                 }else{
	                	 closeButt[Drupal.t('Yes')]=function(){ $("#root-admin").data("narrowsearch").publishAndUnpublishOrderDialog(orderId, orderStatus, rowObj); };
	                 }

				    $("#delete-msg-wizard").dialog({
				        position:[(getWindowWidth()-400)/2,200],
				        bgiframe: true,
				        width:300,
				        resizable:false,
				        modal: true,
				        title:Drupal.t('LBL820')+' - '+orderId,
				        buttons:closeButt,
				        closeOnEscape: false,
				        draggable:false,
				        overlay:
				         {
				           opacity: 0.9,
				           background: "black"
				         }
				    });
				    $('.ui-dialog').wrap("<div id='delete-object-dialog' class='"+uniqueClassPopup+"'></div>");
				    $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').addClass("removebutton").end();
				    $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(1)').before('<div class="admin-save-button-left-bg"></div>');
				    $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(1)').addClass("admin-save-button-middle-bg").end();
				    $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(1)').after('<div class="admin-save-button-right-bg"></div>');
				    $("#delete-msg-wizard").show();

					$('.ui-dialog-titlebar-close').click(function(){
				        $("#delete-msg-wizard").remove();
				    });
					if(this.currTheme == 'expertusoneV2'){
				    	changeDialogPopUI();
				    }

           },

           publishAndUnpublishOrderDialog : function(orderId, orderStatus, rowObj){
         	$('#delete-msg-wizard').remove();
             var obj = this;
             obj.createLoader("main-wrapper");
             url = obj.constructUrl("administration/commerce/orderupdate/ajax" + '/' + orderId + '/' + orderStatus );
             $.ajax({
               type: "POST",
               url: url,
               data:  '',
               success: function(result){
             	//obj.destroyLoader("paint-narrow-search-results");
				if (typeof $("#root-admin").data("narrowsearch").refreshLastAccessedRow != 'undefined' && $("#root-admin").data("narrowsearch").refreshLastAccessedRow() == false) {
             	$("#narrow-search-results-holder").trigger("reloadGrid");
               }
               }
             });
           },


            publishAndUnpublishModule : function(moduleName, rowObj) {
            if(moduleName == 'exp_sp_administration_contentauthor' || moduleName == 'exp_sp_administration_customattribute')    // For enabling/disabling content Author
            	$('#delete-msg-wizard').remove();
              if(availableFunctionalities.exp_sp_esignature != undefined && availableFunctionalities.exp_sp_esignature != ""){
                   var esignObj = {'popupDiv':'mdoule-publish-unpublis-dialog',
                       'esignFor':'publishAndUnpublishModule', 'moduleName':moduleName, 'rowObj': rowObj};
                    $.fn.getNewEsignPopup(esignObj);
              }else{
                $("#root-admin").data("narrowsearch").publishAndUnpublishModuleDialog(moduleName, rowObj);
              }

           },

           publishAndUnpublishModuleDialog : function(moduleName, rowObj){
             var obj = this;
             this.createLoader("main-wrapper");
             url = obj.constructUrl("ajax/administration/sitesetup/moduleinfo/publish-and-unpublish" + '/' + moduleName );
             var reloadgrid = obj.constructUrl("administration/sitesetup/moduleinfo/search/all");
             $.ajax({
               type: "POST",
               url: url,
               data:  '',
               success: function(result){
               result = $.trim(result);
               result = result.split('|');
                 if(result[0]==1){
                   $("#publish-unpublish-"+moduleName).removeClass("crs-publish-btn");
                   $("#publish-unpublish-"+moduleName).addClass("crs-unpublish-btn");
                   if(moduleName == 'exp_sp_administration_module_info_commerce' || moduleName == 'drupalchat'){
                	   window.location.href=window.location.href;
                   }
                 }
                 else if(result[0]==2){
                   $("#publish-unpublish-"+moduleName).removeClass("crs-unpublish-btn");
                   $("#publish-unpublish-"+moduleName).addClass("crs-publish-btn");
                   if(moduleName == 'exp_sp_administration_module_info_commerce' || moduleName == 'drupalchat'){
                	   window.location.href=window.location.href;
                   }
                 }
                 if(moduleName != 'exp_sp_administration_customattribute')
                 $("#publish-unpublish-"+moduleName).html(result[1]);
               //  $("#root-admin").data("narrowsearch").destroyLoader("main-wrapper");
               //  $("#root-admin").data("narrowsearch").createLoader("paint-narrow-search-results");
                 $('#narrow-search-results-holder').setGridParam({url:reloadgrid});
				 if (typeof $("#root-admin").data("narrowsearch").refreshLastAccessedRow != 'undefined' && $("#root-admin").data("narrowsearch").refreshLastAccessedRow() == false) {
				 	$('#narrow-search-results-holder').trigger("reloadGrid",[{page:$(".ui-pg-input").val()}]);
				 }
               }
             });
           },

           publishAndUnpublishPayment : function(paymentId, rowObj) {
             if(availableFunctionalities.exp_sp_esignature != undefined && availableFunctionalities.exp_sp_esignature != ""){
                  var esignObj = {'popupDiv':'payment-publish-unpublis-dialog',
                      'esignFor':'publishAndUnpublishPayment', 'paymentId':paymentId, 'rowObj': rowObj};
                   $.fn.getNewEsignPopup(esignObj);
             }else{
               $("#root-admin").data("narrowsearch").publishAndUnpublishPaymentDialog(paymentId, rowObj);
             }

          },

          publishAndUnpublishPaymentDialog : function(paymentId, rowObj){
            var obj = this;
            this.createLoader("admin-commerce-payment-method-plan");
            url = obj.constructUrl("administration/commerce/setting/payment/action/"+paymentId);
            $.ajax({
              type: "POST",
              url: url,
              data:  '',
              success: function(result){
              result = $.trim(result);
              result = result.split('|');
                if(result[0]==1){
                  $("#publish-unpublish-"+paymentId).removeClass("crs-publish-btn");
                  $("#publish-unpublish-"+paymentId).addClass("crs-unpublish-btn");
                }

                else if(result[0]==0){
                  $("#publish-unpublish-"+paymentId).removeClass("crs-unpublish-btn");
                  $("#publish-unpublish-"+paymentId).addClass("crs-publish-btn");
                }
                $("#publish-unpublish-"+paymentId).html(result[1]);
                $("#root-admin").data("narrowsearch").destroyLoader("admin-commerce-payment-method-plan");

              }
            });
          },

           publishAndUnpublishBanner : function(bannerId, bannerType, rowObj) {
				 if(availableFunctionalities.exp_sp_esignature != undefined && availableFunctionalities.exp_sp_esignature != ""){
				    	var esignObj = {'popupDiv':'banner-publish-unpublis-dialog',
				    			'esignFor':'publishAndUnpublishBanner','bannerId':bannerId,'bannerType':bannerType,'rowObj': rowObj};
				    	 $.fn.getNewEsignPopup(esignObj);
				 }else{
					 $("#root-admin").data("narrowsearch").publishAndUnpublishBan(bannerId, bannerType, rowObj);
				 }

			},
//#custom_attribute_0078975
			publishAndUnpublishCustom : function(CustomId, rowObj) {
				 if(availableFunctionalities.exp_sp_esignature != undefined && availableFunctionalities.exp_sp_esignature != ""){
				    	var esignObj = {'popupDiv':'Custom-publish-unpublis-dialog',
				    			'esignFor':'publishAndUnpublishCustom','CustomId':CustomId,'rowObj': rowObj};
				    	// console.log('esignObj'+JSON.stringify(esignObj));
				    	 $.fn.getNewEsignPopup(esignObj);
				 }else{
					 $("#root-admin").data("narrowsearch").publishAndUnpublishCus(CustomId, rowObj);
				 }

			},

			publishAndUnpublishAnnouncement : function(annId, annType, rowObj) {
				 if(availableFunctionalities.exp_sp_esignature != undefined && availableFunctionalities.exp_sp_esignature != ""){
				    	var esignObj = {'popupDiv':'announcement-publish-unpublis-dialog',
				    			'esignFor':'publishAndUnpublishAnnouncement','annId':annId,'annType':annType,'rowObj': rowObj};
				    	 $.fn.getNewEsignPopup(esignObj);
				 }else{
					 $("#root-admin").data("narrowsearch").publishAndUnpublishAnn(annId, annType, rowObj);
				 }

			},
			publishAndUnpublishAnn : function(annId, annType, rowObj){
				var obj = this;
				url = obj.constructUrl("ajax/administration/manage/announcement/publish-and-unpublish" + '/' + annId + '/' + annType);
				$.ajax({
					type: "POST",
					url: url,
					data:  '',
					success: function(result){
					result = $.trim(result);
					result = result.split('|');
						if(result[0]=='cre_sys_obt_not_atv'){
							$("#publish-unpublish-"+annId).removeClass("crs-publish-btn");
							$("#publish-unpublish-"+annId).addClass("crs-unpublish-btn");
						}
						else if(result[0]=='cre_sys_obt_not_itv'){
							$("#publish-unpublish-"+annId).removeClass("crs-unpublish-btn");
							$("#publish-unpublish-"+annId).addClass("crs-publish-btn");
						}
						$("#publish-unpublish-"+annId).html(result[1]);
					}
				});
			},
			publishAndUnpublishBan : function(bannerId, bannerType, rowObj){
				var obj = this;
				url = obj.constructUrl("ajax/administration/manage/banner/publish-and-unpublish" + '/' + bannerId + '/' + bannerType);
				$.ajax({
					type: "POST",
					url: url,
					data:  '',
					success: function(result){
					result = $.trim(result);
					result = result.split('|');
						if(result[0]=='cbn_anm_sts_atv'){
							$("#publish-unpublish-"+bannerId).removeClass("crs-publish-btn");
							$("#publish-unpublish-"+bannerId).addClass("crs-unpublish-btn");
						}
						else if(result[0]=='cbn_anm_sts_itv'){
							$("#publish-unpublish-"+bannerId).removeClass("crs-unpublish-btn");
							$("#publish-unpublish-"+bannerId).addClass("crs-publish-btn");
						}
						$("#publish-unpublish-"+bannerId).html(result[1]);
					}
				});
			},
//#custom_attribute_0078975
			publishAndUnpublishCus : function(CustomId, rowObj){
				var obj = this;
				url = obj.constructUrl("ajax/administration/manage/customattribute/publish-and-unpublish" + '/' + CustomId );
				

				$.ajax({
					type: "POST",
					url: url,
					data:  '',
					success: function(result){
					result = $.trim(result);
					result = result.split('|');

						if(result[0]=='cre_cattr_sts_atv'){
							

							$("#publish-unpublish-"+CustomId).removeClass("crs-publish-btn");
							$("#publish-unpublish-"+CustomId).addClass("crs-unpublish-btn");
						}
						else if(result[0]=='cre_cattr_sts_itv'){
							

							$("#publish-unpublish-"+CustomId).removeClass("crs-unpublish-btn");
							$("#publish-unpublish-"+CustomId).addClass("crs-publish-btn");
						}
						$("#publish-unpublish-"+CustomId).html(result[1]);
					}
				});
			},
			publishAndUnpublishLocation : function(locationId, rowObj) {
				 if(availableFunctionalities.exp_sp_esignature != undefined && availableFunctionalities.exp_sp_esignature != ""){
				    	var esignObj = {'popupDiv':'location-publish-unpublis-dialog',
				    			'esignFor':'publishAndUnpublishLocation','locationId':locationId,'rowObj': rowObj};
				    	 $.fn.getNewEsignPopup(esignObj);
				 }else{
					 $("#root-admin").data("narrowsearch").publishAndUnpublishLoc(locationId, rowObj);
				 }

			},

			publishAndUnpublishLoc : function(locationId, rowObj){
				var obj = this;
				url = obj.constructUrl("ajax/administration/manage/location/publish-and-unpublish" + '/' + locationId );
				$.ajax({
					type: "POST",
					url: url,
					data:  '',
					success: function(result){
						result = $.trim(result);
						result = result.split('|');
						if(result[0]=='not_able_do'){
							this.currTheme = Drupal.settings.ajaxPageState.theme;

							var show =	$.trim($('#publish-unpublish-'+locationId).html());
							var uniqueClassPopup = 'unique-delete-class';
							var wSize = (wSize) ? wSize : 300;
						    $('#delete-msg-wizard').remove();
						    var html = '';
						    html+='<div id="delete-msg-wizard" style="display:none; padding: 0px;">';
						    html+='<table width="100%" cellpadding="0" cellspacing="0" border="0" valign="center">';

						   // html+= '<tr><td height="40px">&nbsp;</td></tr>';
						    if(this.currTheme == 'expertusoneV2'){
						   	 html+= '<tr><td style="padding: 30px 24px;" class="commanTitleAll">'+Drupal.t("The location is associated to class")+'</td></tr>';
						    } else {
						     html+= '<tr><td color="#333333" style="padding: 30px 24px; text-align: justify;">'+Drupal.t("The location is associated to class")+'</td></tr>';
						    }
						    html+='</table>';
						    html+='</div>';
						    $("body").append(html);
						    var closeButt={};
						    closeButt[Drupal.t('LBL109')]=function(){ $(this).dialog('destroy');$(this).dialog('close');$('#delete-msg-wizard').remove();};


						    $("#delete-msg-wizard").dialog({
						        position:[(getWindowWidth()-400)/2,200],
						        bgiframe: true,
						        width:wSize,
						        resizable:false,
						        modal: true,
						        title:result[1],//"title",
						        buttons:closeButt,
						        closeOnEscape: false,
						        draggable:false,
						        overlay:
						         {
						           opacity: 0.9,
						           background: "black"
						         }
						    });
						    $('.ui-dialog').wrap("<div id='delete-object-dialog' class='"+uniqueClassPopup+"'></div>");

						    $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').addClass("removebutton").end();
						    $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(1)').before('<div class="admin-save-button-left-bg"></div>');
						    $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(1)').addClass("admin-save-button-middle-bg").end();
						    $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(1)').after('<div class="admin-save-button-right-bg"></div>');

						    $("#delete-msg-wizard").show();

							$('.ui-dialog-titlebar-close').click(function(){
						        $("#delete-msg-wizard").remove();
						    });
							if(this.currTheme == 'expertusoneV2'){
						    	changeDialogPopUI();
						    }
							/*-- 37211: Unable to delete a class in FF version 32.0 --*/
						    if($('div.qtip-defaults').length > 0) {
						    	var prevZindex = $('.qtip-defaults').css('z-index');
						    	$('#delete-object-dialog .ui-widget-content').css('z-index', prevZindex+2);
						    	$('.ui-widget-overlay').css('z-index', prevZindex+1);
						    }
						}else{
							if(result[0]=='lrn_res_loc_atv'){
								$("#publish-unpublish-"+locationId).removeClass("crs-publish-btn");
								$("#publish-unpublish-"+locationId).addClass("crs-unpublish-btn");
							}
							else if(result[0]=='lrn_res_loc_itv'){
								$("#publish-unpublish-"+locationId).removeClass("crs-unpublish-btn");
								$("#publish-unpublish-"+locationId).addClass("crs-publish-btn");
							}
							$("#publish-unpublish-"+locationId).html(result[1]);
						}
					}
				});
			},


			publishAndUnpublishNotification : function(notificationId, notificationType) {
				 if(availableFunctionalities.exp_sp_esignature != undefined && availableFunctionalities.exp_sp_esignature != ""){
				    	var esignObj = {'popupDiv':'notification-publish-unpublis-dialog',
				    			'esignFor':'publishAndUnpublishNotification','notificationId':notificationId,'notificationType':notificationType};
				    	 $.fn.getNewEsignPopup(esignObj);
				 }else{
					 $("#root-admin").data("narrowsearch").publishAndUnpublishNot(notificationId, notificationType);
				 }

			},

			publishAndUnpublishNot : function(notificationId, notificationType){
				var obj = this;
				if(notificationType == 'notification_template'){
				  url = obj.constructUrl("ajax/administration/manage/notification_template/publish-and-unpublish" + '/' + notificationId );
				}else {
				  url = obj.constructUrl("ajax/administration/manage/certificate/publish-and-unpublish" + '/' + notificationId );
				}
				$.ajax({
					type: "POST",
					url: url,
					data:  '',
					success: function(result){
					result = $.trim(result);
					result = result.split('|');
						if(result[0]=='cre_ntn_sts_atv'){
							$("#publish-unpublish-"+notificationId).removeClass("crs-publish-btn");
							$("#publish-unpublish-"+notificationId).addClass("crs-unpublish-btn");
						}
						else if(result[0]=='cre_ntn_sts_itv'){
							$("#publish-unpublish-"+notificationId).removeClass("crs-unpublish-btn");
							$("#publish-unpublish-"+notificationId).addClass("crs-publish-btn");
						}
						$("#publish-unpublish-"+notificationId).html(result[1]);
					}
				});
			},




						activateAndDeactivateResource : function(resourceId, resourceType, rowObj) {
							 if(availableFunctionalities.exp_sp_esignature != undefined && availableFunctionalities.exp_sp_esignature != ""){
							    	var esignObj = {'popupDiv':'program-publish-unpublis-dialog',
							    			'esignFor':'ActivateDeactivateResource','resourceId':resourceId,'resourceType':resourceType,'rowObj': rowObj};
							    	 $.fn.getNewEsignPopup(esignObj);
							 }else{
								 $("#root-admin").data("narrowsearch").activateAndDeactivateRsc(resourceId, resourceType, rowObj);
							 }

						},

						activateAndDeactivateRsc : function(resourceId, resourceType,rowObj){
							var obj = this;
							url = obj.constructUrl("ajax/administration/learning/resource/activate-and-deactivate" + '/' + resourceId+ '/' + resourceType);
							$.ajax({
								type: "POST",
								url: url,
								data:  '',
								success: function(result){
								result = $.trim(result);
									if(result=='lrn_res_loc_atv' || result=='lrn_res_fac_atv' || result=='lrn_res_rms_atv'){
										$("#publish-unpublish-"+resourceType+"-"+resourceId).removeClass("crs-publish-btn");
										$("#publish-unpublish-"+resourceType+"-"+resourceId).addClass("crs-unpublish-btn");
										$("#publish-unpublish-"+resourceType+"-"+resourceId).html("Deactivate");
									}
									else if(result=='lrn_res_loc_itv' || result=='lrn_res_fac_itv' || result=='lrn_res_rms_itv'){
										$("#publish-unpublish-"+resourceType+"-"+resourceId).removeClass("crs-unpublish-btn");
										$("#publish-unpublish-"+resourceType+"-"+resourceId).addClass("crs-publish-btn");
										$("#publish-unpublish-"+resourceType+"-"+resourceId).html("Activate");
									}
								}
							});
						},

						activateAndDeactivateObject : function(objectId, objectType, rowObj) {
							 if(availableFunctionalities.exp_sp_esignature != undefined && availableFunctionalities.exp_sp_esignature != ""){
							    	var esignObj = {'popupDiv':'object-activate-deactivate-dialog',
							    			'esignFor':'ActivateDeactivateObject','objectId':objectId,'objectType':objectType,'rowObj': rowObj};
							    	 $.fn.getNewEsignPopup(esignObj);
							 }else{
								 $("#root-admin").data("narrowsearch").activateAndDeactivateObj(objectId, objectType, rowObj);
							 }

						},

						activateAndDeactivateObj : function(objectId, objectType, rowObj){
							//alert(objectType);
							var obj = this;
							if(objectType=='User'){
								url = obj.constructUrl("ajax/administration/people/activate-and-deactivate" + '/' + objectId);
							}
							else if(objectType=='Organization'){
								url = obj.constructUrl("ajax/administration/people/organization/activate-and-deactivate" + '/' + objectId);
							}
							else if(objectType=='Grp'){
								$("#delete-msg-wizard").remove();
								url = obj.constructUrl("ajax/administration/people/group/activate-and-deactivate" + '/' + objectId);
							}
							else if(objectType=='location'){
								url = obj.constructUrl("ajax/administration/location/activate-and-deactivate" + '/' + objectId);
							}
							else if(objectType=='surveyDetails'){
								url = obj.constructUrl("ajax/administration/survey/survey-assessment/publish-and-unpublish" + '/' + objectId + '/'+objectType);
							}
							else if(objectType=='assessmentDetails'){
								url = obj.constructUrl("ajax/administration/assessment/survey-assessment/publish-and-unpublish" + '/' + objectId + '/'+objectType);
							}
							else if(objectType=='surveyQuestion'){
								url = obj.constructUrl("ajax/administration/survey/survey-assessment-questions/publish-and-unpublish" + '/' + objectId + '/'+objectType);
							}
							else if(objectType=='assessmentQuestion'){
								url = obj.constructUrl("ajax/administration/assessment/survey-assessment-questions/publish-and-unpublish" + '/' + objectId + '/'+objectType);
							}
							$.ajax({
								type: "POST",
								url: url,
								data:  '',
								success: function(result){
								result = $.trim(result);
								if(objectType=='User' && result=='activeinstr'){
									var error = new Array();
									error[0] = Drupal.t("MSG768");
									$('#show_suspend_message').remove();
							 	    var message = "<div id='show_suspend_message' style='position:absolute;left:0;right:0;'></div></div>";
							 	    var msg='<div id="message-container" style="visibility:visible"><div class="messages error"><ul><li><span>'+error[0]+'</span></li></ul><div class="msg-close-btn" onclick="$(\'#show_suspend_message\').remove();"></div></div></div><img onload="$(\'body\').data(\'learningcore\').showHideMultipleLi();" style="display:none;" src="sites/all/themes/core/expertusone/expertusone-internals/images/close.png" height="0" width="0"/>';
							 	    $('#gview_narrow-search-results-holder').prepend(message);
							 	    $("#gview_narrow-search-results-holder #show_suspend_message").append(msg);
								}else{
									$("#suspend_activate_"+objectId).html(result);
									//alert("objectId" + objectId + "result" + result);
									//44133: German-old-ui-Icon not changing when user is activate and suspend
									if(result==Drupal.t('LBL573')){
										$("#action_icon_tooltip_"+objectId).removeClass('Suspend');
										$("#action_icon_tooltip_"+objectId).addClass('Activate');

									}else{
										$("#action_icon_tooltip_"+objectId).removeClass('Activate');
										$("#action_icon_tooltip_"+objectId).addClass('Suspend');
									}
									if(objectType=='User'){
										$("#action_icon_tooltip_"+objectId).attr('title', result);
									}else{
										$("#suspend_activate_"+objectId).parent('span').attr('title', result);
									}
								}
								}
							});
						},

						initAdminLinks : function() {
							var curObj = this;
							var loadingDiv = "root-admin-search-right-col";

							/* Hide the filter and top search text box,result area */
							$("#narrow-search-text-filter-container").hide();
							$("#narrow-search").hide();
							$("#root-admin-results").hide();
							$("ul.AdminsublinktabNavigation li").removeClass("selected");

							// For Left Navigation Admin Menu Links
							$("ul.list-item-administrator li a").click(function(event,mainMenuId) {

									var linkId;
									if(mainMenuId=="" || mainMenuId=="undefined" || mainMenuId==null){
										 linkId = $(this).attr("id");
									}else{
										 linkId=mainMenuId;
									}
									var ancData = $("#"+linkId).metadata();
									var linkPath = ancData.link_path;

									/* Hides/Show narrow search and text filter */
									$("#narrow-search-text-filter-container").hide();
									$("#narrow-search").hide();
									$("#narrow-search-actionbar-list").hide();
									$("#root-admin-results").hide();

									curObj.createLoader(loadingDiv);

									var url = '?q=ajax/get/modules/'+linkPath;
									$.ajax({
											type : "POST",
											url : url,
											data : '',
											datatype : 'json',
											success : function(data) {
												curObj.destroyLoader(loadingDiv);

												$("#root-admin-results").html(data);
												$("#root-admin-results").show();
												var contentLoadingDiv = 'root-admin-results';

												/* For top tabular submenu in result page.*/
												$("ul.AdminsublinktabNavigation li a").click(function(event,firstSubmenuId){
													if($('#narrow-search-actionbar')){
													  $('#narrow-search-actionbar').hide();
													}

												  $("#narrow-search-text-filter-container").hide();
												  $("#narrow-search").hide();
												  $("#tab-content-main").html('');

													var submenuId;
													if(firstSubmenuId=="" || firstSubmenuId=="undefined" || firstSubmenuId==null){
														 submenuId = $(this).attr("id");
													}else{
														submenuId=firstSubmenuId;
													}

													var subAncData = $("#"+submenuId).metadata();

													/* Add class "selected"  if select  the tab */
													$( "ul.AdminsublinktabNavigation li").removeClass("selected");
													$("#"+ submenuId).parent("li").addClass("selected");

													/* Start - To get the submodules according to tab selection */
													curObj.createLoader(contentLoadingDiv);

													var sublinkPath=subAncData.link_path;
													var sublinkUrl = '?q='+sublinkPath;

													$.ajax({
														type : "POST",
														url : sublinkUrl,
														data : '',
														datatype : 'json',
														success : function(data) {
													     curObj.destroyLoader(contentLoadingDiv);
													     //console.log('ajax success data');
													     //console.log(data);
									   				   var detailsObj = jQuery.parseJSON(data);
									   				   //console.log('ajax success detailsObj');
                               //console.log(detailsObj);
											               // Extend Drupal.settings, if any settings are present in the data
												           if (detailsObj.drupal_settings) {
														     $.extend(true, Drupal.settings, detailsObj.drupal_settings);
														   }
														   /*Display the content for Tab wheather narrow search or non narrow search */
														   $("#tab-content-main").html(detailsObj.rendered_tab_content_main);

														   if(detailsObj.rendered_tab_content_type == "narrow_search"){ /* If narrow search */
															   /* Display left side filters and top bar*/
															   $("#narrow-search").html(detailsObj.rendered_narrow_search_filters);
															   $("#narrow-search").show();

															   // curObj.renderSearchResults();

															   $("#narrow-search-results-topbar").html(detailsObj.rendered_narrow_search_sortbar);
															   $("#narrow-search-actionbar").remove();
															   $("#admin-maincontent_tab").append(detailsObj.rendered_narrow_search_actionbar);
															   $("#narrow-search-results-topbar").show();

															   /* Initialise filters once modules loaded */
															   curObj.initPaths(detailsObj.rendered_tab_content_type);
															   curObj.initFilters();
															   curObj.renderSearchResults(linkPath,sublinkPath);
															   if($('#narrow-search-actionbar')){
													  			 $('#narrow-search-actionbar').hide();
															   }
														   }
														   else if (detailsObj.rendered_tab_content_type == "ajax-form"){
	                               Drupal.attachBehaviors();
														   }
													   } // end success
													}); /* End - To get the submodules according to tab selection */

													/* Show  the text filter */
													$("#narrow-search-actionbar-list").show();
												});

												/* Auto load first sub menu */
												var tmpFirstSubmenuId=$("ul.AdminsublinktabNavigation li a:first").attr("id");
												if(tmpFirstSubmenuId!="" && tmpFirstSubmenuId!="undefined" && tmpFirstSubmenuId!=null){
													 $("#"+tmpFirstSubmenuId).trigger("click",[tmpFirstSubmenuId]);
												}

											  }
										});

									/* Highlight selected menu links */
									$("ul.list-item-administrator li a").removeClass("root-admin-links-selected");
									$("#"+linkId).addClass("root-admin-links-selected");

									/* THE BELOW LINES WRITTEN BY NEW THEME BY VJ*/
									$("ul.list-item-administrator li.admin-left-panel-module-list").removeClass("root-admin-module-selected");
									$("#"+linkId).parent().addClass("root-admin-module-selected");

							 });

							/* Auto load main menu */
							var tmpFirstMainMenuId=$("ul.list-item-administrator li a:first").attr("id");
							//var tmpFirstMainMenuId="collaboration";
							if(tmpFirstMainMenuId!="" && tmpFirstMainMenuId!="undefined" && tmpFirstMainMenuId!=null){
							  $("#"+tmpFirstMainMenuId).trigger("click",[tmpFirstMainMenuId]);
							}

						},

						abstractFunctionAlert : function(functionName) {
							alert('UNDER CONSTRUCTION. Please implement function ' + functionName + ' in admin sub-module\'s js file.');
						},

						missingInitParamAlert : function(paramName) {
							alert('UNDER CONSTRUCTION. Missing init data ' + paramName);
						},

						narrowSearch : function() {
							var curObj=this;
							this.refreshGrid();
						},

						sortSearchResults : function(sortType, sortLinkHtmlId) {
							this.refreshGrid(sortType, sortLinkHtmlId);
						},

						narrowSearchByText : function() {
							this.refreshGrid();
						},

						narrowSearchByAddlText : function(code) {
							this.refreshGrid();
						},

						narrowSearchByDateRange : function(code) {
							this.refreshGrid();
						},

						narrowSearchBySlider : function(code) {
							this.refreshGrid();
						},

						printSearchResults : function() {
							if (this.printPath == undefined || this.printPath == null || this.printPath == '') {
								this.missingInitParamAlert('print_path');
								return; // Impt
							}
							window.location = this.constructUrl(this.printPath + this.getNarrowSearchURLArgs(this.lastSortType,this.lastSortTypeHtmlId));
						},

						exportSearchResults : function() {
							if (this.exportPath == undefined || this.exportPath == null || this.exportPath == '') {
								this.missingInitParamAlert('export_path');
								return; // Impt
							}

							window.location = this.constructUrl(this.exportPath + this.getNarrowSearchURLArgs(this.lastSortType,this.lastSortTypeHtmlId));
						},
//#custom_attribute_0078975						
						downloadSampleUserupload : function() {
							window.location = this.constructUrl("administration/userfeed/download/csv");
                        },

						addItem : function() {
							this.abstractFunctionAlert('addItem');
							return false;
						},

						editItem : function() {
							this.abstractFunctionAlert('editItem');
							return false;
						},

						showHide : function(strOne, strTwo) {
							$('#' + strTwo).toggle();
							var classShowHide = $('#' + strOne).hasClass(
									'cls-show');
							if (classShowHide) {
								$('#' + strOne).removeClass('cls-show');
								$('#' + strOne).addClass('cls-hide');
							} else {
								$('#' + strOne).removeClass('cls-hide');
								$('#' + strOne).addClass('cls-show');
							}
						},

						showHideCourseClass : function(type){
							if (type == 'Class') {
								$('#catalogcoursestatus_container').hide();
								$('#courselangtype_container').hide();
								$('#catalogcoursetag_container').hide();
								$('#catalogcoursemanageby_container').hide();
								$('#classhiddenmanageby_container').hide();
								$('#catalogcoursecurrency_container').hide();
								$('#coursePrice_container').hide();

								$('#catalogclassstatus_container').show();
								$('#classdeliverytype_container').show();
								$('#classPrice_container').show();
								$('#classdaterange_container').show();
								$('#classlangtype_container').show();
								$('#catalogclasstag_container').show();
								/*$('.tagscloud-scrollable:not(.jspScrollable)').each(function () {
									if ($(this).is(':visible')) {
									  var tagsHeight = $(this).height();
									  if (tagsHeight > 175) {
									    $(this).height(175);
										$(this).css('max-height', '175px');
									    $(this).jScrollPane({});
								      }
									}
								});*/

								$('#classLocation_container').show();
								$('#classInstructor_container').show();

								$('#classSurvey_container').show();
								$('#classAssessment_container').show();
								$('#classContent_container').show();
								$('#catalogclassmanageby_container').show();
								$('#catalogclasscurrency_container').show();
								$('#tagentityType').val('tagtipclass');

							} else {
								$('#catalogcoursestatus_container').show();
								$('#courselangtype_container').show();
								$('#catalogcoursetag_container').show();
								$('#catalogcoursemanageby_container').show();
								$('#catalogcoursecurrency_container').show();
								$('#coursePrice_container').show();

								$('#catalogclassstatus_container').hide();
								$('#classdeliverytype_container').hide();
								$('#classPrice_container').hide();
								$('#classdaterange_container').hide();
								$('#classlangtype_container').hide();
								$('#catalogclasstag_container').hide();
								$('#classLocation_container').hide();
								$('#classInstructor_container').hide();
								$('#catalogclassmanageby_container').hide();
								$('#catalogclasscurrency_container').hide();

								$('#classSurvey_container').hide();
								$('#classAssessment_container').hide();
								$('#classContent_container').hide();
								$('#tagentityType').val('tagtip');
							}
						},

						renderSearchResults : function(curModule,subModule) {
						  //console.log (curModule);
						  //console.log (subModule);
							var curObj = this;
							if(Drupal.settings.ajaxPageState.theme == "expertusoneV2"){
								var gridWidth 		= 720;
								var detailsWidth 	= 520;
								var actionWidth 	= 150;
								var iconsWidth 		= 74;
							}else{
								var detailsWidth 	= 595;
								var actionWidth 	= 130;
								var gridWidth 		= 770;
								var iconsWidth 		= 54;
							}
							//Condition for commerce module showindg search widget in JQgrid table format
							if(curModule == 'administration/learning' || subModule == 'administration/manage/content' || subModule == 'administration/contentauthor/video' || subModule == 'administration/contentauthor/presentation' ||  subModule == 'administration/manage/banner'  || subModule == 'administration/sitesetup/moduleinfo'
								|| subModule == 'administration/commerce/order' || subModule == 'administration/manage/announcement') {
								var tmp_html=$('#narrow-search-results-holder').html();
								if(tmp_html=="<TBODY></TBODY>" || tmp_html=="<tbody></tbody>"){
									$('#narrow-search-results-holder').html("");
								}
								if($('#narrow-search-results-holder').html().length <= 0) {
									//("renderSearchResults");
									curObj.createLoader("main-wrapper");
								
									var curObjStr = '$("#' + curObj.widgetInitId + '").data("' + curObj.widgetName + '")';
									//admininister page jqgrid declaration here
									$("#narrow-search-results-holder").jqGrid( {
										url : curObj.constructUrl(curObj.searchBasePath),
										datatype : "json",
										mtype : 'GET',
										colNames : [ 'Icons','Details', 'Action' ],
										//colNames : [ 'Details' ],
										colModel : [ {
											name : 'Icons',
											index : 'Icons',
											classes:'rowpaddTB',
											title : false,
											width : iconsWidth,
											'widgetObj' : curObjStr,
											formatter : curObj.paintSearchResultsIcons
										},  {
											name : 'Details',
											index : 'Details',
											classes:'rowpaddTB',
											title : false,
											width : detailsWidth ,
											'widgetObj' : curObjStr,
											formatter : curObj.paintSearchResults
										}, {
											name : 'Action',
											index : 'Action',
											classes:'rowpaddTB',
											title : false,
											width : actionWidth,
											'widgetObj' : curObjStr,
											formatter : curObj.paintSearchResultsAction
										} ],
										rowNum : 10,
										rowList : [ 10, 25, 50 ],
										pager : '#narrow-search-results-pager',
										viewrecords : true,
										emptyrecords : "",
										sortorder : "desc",
										toppager : true,
										height : 'auto',
										width : gridWidth,
										loadtext : "",
										recordtext : "",
										pgtext : "{0}"+" "+Drupal.t('LBL981')+" "+"{1}",
										loadui : false,
										userdata: "userdata",
										loadComplete : curObj.loadComplete
									});
									/* .navGrid('#narrow-search-results-pager', {
										add : false,
										edit : false,
										del : false,
										search : false,
										refreshtitle : true
									}); */
									// curObj.hidePageControls(true); // show in loadComplete()
								}else{
								curObj.refreshGrid();
								if($('#narrow-search-actionbar')){
								  $('#narrow-search-actionbar').show();
								}
							}
						} else if((curModule == 'administration/people' && subModule != 'administration/people/organization'&&
						            subModule != 'administration/people/group')  ||
						               subModule == 'administration/commerce/setting'  ||  subModule == 'administration/people/setup' ||  subModule == 'administration/manage/announcement' ||  subModule == 'administration/sitesetup/config') {
              				var iconsWidth = 38;
              				if (subModule == 'administration/commerce/setting' || subModule == 'administration/people/setup' || subModule == 'administration/sitesetup/config') {
                				iconsWidth = 80;
                				detailsWidth = 440;
              				}
              			
							var tmp_html=$('#narrow-search-results-holder').html();
							if(tmp_html=="<TBODY></TBODY>" || tmp_html=="<tbody></tbody>"){
								$('#narrow-search-results-holder').html("");
							}
							if($('#narrow-search-results-holder').html().length <= 0) {
								//("renderSearchResults");
								curObj.createLoader("main-wrapper");
								var curObjStr = '$("#' + curObj.widgetInitId + '").data("' + curObj.widgetName + '")';

								if(Drupal.settings.ajaxPageState.theme == "expertusoneV2"){
									var iconsWidth 		= 50;
								}
								$("#narrow-search-results-holder").jqGrid( {
									url : curObj.constructUrl(curObj.searchBasePath),
									datatype : "json",
									mtype : 'GET',
									colNames : [ 'Icons','Details'],
									//colNames : [ 'Details' ],
									colModel : [ {
										name : 'Icons',
										index : 'Icons',
										classes:'rowpaddTB',
										title : false,
										width : iconsWidth,
										'widgetObj' : curObjStr,
										formatter : curObj.paintSearchResultsIcons
									},  {
										name : 'Details',
										index : 'Details',
										classes:'rowpaddTB',
										title : false,
										width : detailsWidth,
										'widgetObj' : curObjStr,
										formatter : curObj.paintSearchResults
									}],
									rowNum : 10,
									rowList : [ 10, 25, 50 ],
									pager : '#narrow-search-results-pager',
									viewrecords : true,
									emptyrecords : "",
									sortorder : "desc",
									toppager : true,
									height : 'auto',
									width : gridWidth,
									loadtext : "",
									recordtext : "",
									pgtext : "{0}"+" "+Drupal.t('LBL981')+" "+"{1}",
									loadui : false,
									loadComplete : curObj.loadComplete
								});
								/* .navGrid('#narrow-search-results-pager', {
									add : false,
									edit : false,
									del : false,
									search : false,
									refreshtitle : true
								}); */
								// curObj.hidePageControls(true); // show in loadComplete()
							}else{
								curObj.refreshGrid();
								if($('#narrow-search-actionbar')){
								  $('#narrow-search-actionbar').show();
								}
							}
						}
//#custom_attribute_0078975
						else if(curModule == 'administration/survey' || subModule == 'administration/survey/surveydetails' || 
								subModule == 'administration/assessment/assessmentdetails' || subModule == 'administration/assessment/assessmentquestions' || 
								subModule == 'administration/survey/surveyquestions' || subModule == 'administration/contentauthor/video' 
									||subModule == 'administration/contentauthor/presentation' 
										||subModule == 'administration/manage/location'
										|| subModule == 'administration/manage/customattribute' || subModule == 'administration/manage/notification_template' || subModule == 'administration/manage/certificate'
							  || subModule == 'administration/commerce/tax' || subModule == 'administration/commerce/discounts'){
							var tmp_html=$('#narrow-search-results-holder').html();
							if(tmp_html=="<TBODY></TBODY>" || tmp_html=="<tbody></tbody>"){
								$('#narrow-search-results-holder').html("");
							}

							if(Drupal.settings.ajaxPageState.theme == "expertusoneV2"){
								var detailsWidth 	= 600;
								var actionWidth 	= 150;
							}else{
								var detailsWidth 	= 655;
								var actionWidth 	= 130;
							}
							if($('#narrow-search-results-holder').html().length <= 0) {
								//("renderSearchResults");
								curObj.createLoader("main-wrapper");
								var curObjStr = '$("#' + curObj.widgetInitId + '").data("' + curObj.widgetName + '")';

								$("#narrow-search-results-holder").jqGrid( {
									url : curObj.constructUrl(curObj.searchBasePath),
									datatype : "json",
									mtype : 'GET',
									colNames : [ 'Details', 'Action' ],
									colModel : [ {
										name : 'Details',
										index : 'Details',
										classes:'rowpaddTB',
										title : false,
										width : detailsWidth,
										'widgetObj' : curObjStr,
										formatter : curObj.paintSearchResults
									}, {
										name : 'Action',
										index : 'Action',
										classes:'rowpaddTB',
										title : false,
										width : actionWidth,
										'widgetObj' : curObjStr,
										formatter : curObj.paintSearchResultsAction
									}],
									rowNum : 10,
									rowList : [ 10, 25, 50 ],
									pager : '#narrow-search-results-pager',
									viewrecords : true,
									emptyrecords : "",
									sortorder : "desc",
									toppager : true,
									height : 'auto',
									width : gridWidth,
									loadtext : "",
									recordtext : "",
									pgtext : "{0}"+" "+Drupal.t('LBL981')+" "+"{1}",
									loadui : false,
									loadComplete : curObj.loadComplete
								});
								/* .navGrid('#narrow-search-results-pager', {
									add : false,
									edit : false,
									del : false,
									search : false,
									refreshtitle : true
								});
								curObj.hidePageControls(true); // show in loadComplete() */
							}else{
								curObj.refreshGrid();
								if($('#narrow-search-actionbar')){
								  $('#narrow-search-actionbar').show();
								}
							}
						}
						else {
							var tmp_html=$('#narrow-search-results-holder').html();
							if(tmp_html=="<TBODY></TBODY>" || tmp_html=="<tbody></tbody>"){
								$('#narrow-search-results-holder').html("");
							}
							if($('#narrow-search-results-holder').html().length <= 0) {
								//("renderSearchResults");
								curObj.createLoader("main-wrapper");
								var curObjStr = '$("#' + curObj.widgetInitId + '").data("' + curObj.widgetName + '")';

								$("#narrow-search-results-holder").jqGrid( {
									url : curObj.constructUrl(curObj.searchBasePath),
									datatype : "json",
									mtype : 'GET',
									//colNames : [ 'Details', 'Action' ],
									colNames : [ 'Details' ],
									colModel : [ {
										name : 'Details',
										index : 'Details',
										classes:'rowpaddTB',
										title : false,
										width : detailsWidth,
										'widgetObj' : curObjStr,
										formatter : curObj.paintSearchResults
									}/*, {
										name : 'Action',
										index : 'Action',
										title : false,
										width : 130,
										'widgetObj' : curObjStr,
										formatter : curObj.paintSearchResultsAction
									}*/ ],
									rowNum : 10,
									rowList : [ 10, 25, 50 ],
									pager : '#narrow-search-results-pager',
									viewrecords : true,
									emptyrecords : "",
									sortorder : "desc",
									toppager : true,
									height : 'auto',
									width : gridWidth,
									loadtext : "",
									recordtext : "",
									pgtext : "{0}"+" "+Drupal.t('LBL981')+" "+"{1}",
									loadui : false,
									loadComplete : curObj.loadComplete
								});
								/* .navGrid('#narrow-search-results-pager', {
									add : false,
									edit : false,
									del : false,
									search : false,
									refreshtitle : true
								});
								curObj.hidePageControls(true); // show in loadComplete() */
							}else{
								curObj.refreshGrid();
								if($('#narrow-search-actionbar')){
								  $('#narrow-search-actionbar').show();
								}
							}
						}
					},

						paintSearchResults : function(cellvalue, options,rowObject) {
							return rowObject['details'];
						},

						paintSearchResultsAction : function(cellvalue, options,rowObject) {
							return rowObject['action'];
						},
						paintSearchResultsIcons : function(cellvalue, options,rowObject) {
							return rowObject['image'];
						},

						/* hidePageControls : function(hideAll) {
						//Ayyappan
						console.log('hide pager heer');
						  var lastDataRow = $('#narrow-search-results-holder tr.ui-widget-content').filter(":last");
						  //console.log(lastDataRow.length);

              // if (hideAll) {
                //$('#narrow-search-results-pager').hide();
                 if(this.currTheme == "expertusoneV2")
    	  			$('#root-admin-results .block-footer-left').show();
      				$('#narrow-search-results-pager').hide();

                //remove bottom dotted border from the last row in result if records are present
                if (lastDataRow.length != 0) {
                  //console.log('hidePageControls() : hideAll - last data row found');
                  lastDataRow.children('td').css('border', '0 none');
                }
              }
              else {
              	$('#narrow-search-results-pager').show();
                //console.log('hidePageControls() : hide only next/prev page control');
                if(this.currTheme == "expertusoneV2")
                $('#root-admin-results .block-footer-left').hide();
                $('#narrow-search-results-pager #narrow-search-results-pager_center #first_narrow-search-results-pager').hide();
                $('#narrow-search-results-pager #narrow-search-results-pager_center #last_narrow-search-results-pager').hide();
                $('#narrow-search-results-pager #narrow-search-results-pager_center #next_narrow-search-results-pager').hide();
                $('#narrow-search-results-pager #narrow-search-results-pager_center #prev_narrow-search-results-pager').hide();
                $('#narrow-search-results-pager #narrow-search-results-pager_center #sp_1_narrow-search-results-pager').parent().hide();
                //if (lastDataRow.length != 0) {
                  //add bottom dotted border from the last row in result if records are present
                  //lastDataRow.children('td').css('border-bottom', '1px dotted #CCCCCC');
                //}
              }
						}, */

	showPageControls : function() {
	  //console.log('showPageControls() : show all control');
	  $('#narrow-search-results-pager').show();
	  if(this.currTheme == "expertusoneV2")
	  $('#root-admin-results .block-footer-left').hide();
	  $('#narrow-search-results-pager #narrow-search-results-pager_center #first_narrow-search-results-pager').show();
	  $('#narrow-search-results-pager #narrow-search-results-pager_center #last_narrow-search-results-pager').show();
      $('#narrow-search-results-pager #narrow-search-results-pager_center #next_narrow-search-results-pager').show();
      $('#narrow-search-results-pager #narrow-search-results-pager_center #prev_narrow-search-results-pager').show();
      $('#narrow-search-results-pager #narrow-search-results-pager_center #sp_1_narrow-search-results-pager').parent().show();
             // issue In Pagination Width
      if(this.currTheme == "expertusone")
    	  $('#narrow-search-results-pager #narrow-search-results-pager_center').removeAttr("style");
      //add bottom dotted border from the last row in result if records are present
      //var lastDataRow = $('#narrow-search-results-holder tr.ui-widget-content').filter(":last");
      //if (lastDataRow.length != 0) {
        //lastDataRow.children('td').css('border-bottom', '1px dotted #CCCCCC');
      //}
				},

						loadComplete : function(response, postdata, formid, updateShowMore) {
							var curObj=this;
							curObj.widgetInitId="root-admin";
							curObj.widgetName="narrowsearch";

							Drupal.attachBehaviors(); // for initializing ctools.
							$('#narrow-search-results-holder').show();
							//alert("Load Complete");
							if($('#narrow-search-actionbar')){
							  $('#narrow-search-actionbar').show();
							}
							//38455: Managed by filters me is not checked when login as multilanguage
							// Managed By behavior
							var userData = $('#narrow-search-results-holder').jqGrid('getGridParam', 'userData');
				              if (typeof userData.managedBy != 'undefined' && userData.managedBy != '') {
				                var managedByCheckboxId = '#managed_by_1 input';	//change by ayyappans for 0040223: See more link is not working in narrow filter in user grid page
				                if (typeof userData.adminPage != 'undefined' && userData.adminPage == 'class') {
				                  managedByCheckboxId = '#managed_by_1 input';
				                }

				                if (typeof userData.adminPage != 'undefined' && userData.adminPage == 'class') {
				                  $('#checkbox_clspgopened').attr('checked', 'checked');
				                  $('#checkbox_clspgopened').parent().removeClass('narrow-search-filterset-checkbox-unselected');
				                  $('#checkbox_clspgopened').parent().addClass('narrow-search-filterset-checkbox-selected');
				                }

				                if (userData.managedBy == 'me') {
				                  $(managedByCheckboxId).attr('checked', 'checked');
				                  $(managedByCheckboxId).parent().removeClass('narrow-search-filterset-checkbox-unselected');
				                  $(managedByCheckboxId).parent().addClass('narrow-search-filterset-checkbox-selected');
				                  $('#managed_by_1').children('.narrow-search-filterset-item-label-unselected').removeClass('narrow-search-filterset-item-label narrow-search-filterset-item-label-unselected').addClass('narrow-search-filterset-item-label narrow-search-filterset-item-label-selected');
				                }
				              }

							var numRecords = parseInt($("#narrow-search-results-holder").getGridParam("records"), 10);
							//console.log('loadComplete() : numRecords = ' + numRecords);
							if (numRecords == 0) {
								$('#narrow-search-no-records').show();
							} else {
								$('#narrow-search-no-records').hide();
							}

							// Show pagination only when search results span multiple pages
			              var recordsPerPage = parseInt($("#narrow-search-results-holder").getGridParam("reccount"), 10);
			              //console.log('loadComplete() : recordsPerPage = ' + recordsPerPage);

			              var hideAllPageControls = true;
			              if (numRecords > 10) { // 10 is the least view per page option.
			                hideAllPageControls = false;
			                //console.log('loadComplete() : hideAllPageControls set to false');
			                $("#page-container #narrow-search-results-holder tr.ui-widget-content:last-child > td.rowpaddTB").css("padding-bottom","9px");
			              }

			              /* if (numRecords <= recordsPerPage) {
			               //console.log('loadComplete() : numRecords <= recordsPerPage : hide pagination controls');
			                $('#' + curObj.widgetInitId).data(curObj.widgetName).hidePageControls(hideAllPageControls);
			              }
			              else {
			                //console.log('loadComplete() : numRecords <= recordsPerPage : show pagination controls including view per page control');
			                $('#' + curObj.widgetInitId).data(curObj.widgetName).showPageControls();
			              } */
							//$('#' + curObj.widgetInitId).data(curObj.widgetName).initGrid('#' + curObj.widgetInitId,curObj.widgetName);
							if ($('#' + curObj.widgetInitId).data(curObj.widgetName).firstTime) {
								$("#narrow-search-filters").show();
								$("#narrow-search-results-topbar").show();
								$("#" + response.initial_sort_type_html_id).addClass('sortype-high-lighter');
								$('#' + curObj.widgetInitId).data(curObj.widgetName).firstTime = false;
								$('#' + curObj.widgetInitId).data(curObj.widgetName).initGrid('#' + curObj.widgetInitId,curObj.widgetName);
							}
							else{
								if($('#' + curObj.widgetInitId).data(curObj.widgetName).lastSortTypeHtmlId)
								    $("#" + $('#' + curObj.widgetInitId).data(curObj.widgetName).lastSortTypeHtmlId).addClass('sortype-high-lighter');
								else
									$("#" + response.initial_sort_type_html_id).addClass('sortype-high-lighter');
							}
							$('#' + curObj.widgetInitId).data(curObj.widgetName).destroyLoader('paint-narrow-search-results');
							$('#' + curObj.widgetInitId).data(curObj.widgetName).destroyLoader('main-wrapper');
								//Vtip-Display toolt tip in mouse over
//							$('.fade-out-title-container').each(function() {
//								//console.log($(this).width());
//								//console.log($(this).find('.title-lengthy-text').width());
//								if($(this).width() >= $(this).find('.title-lengthy-text').width()) {
//									$(this).find('.fade-out-image').remove();
//								}
//								//title-lengthy-text
//							});
								 vtip();
								 resetFadeOutByClass('#narrow-search-results-holder','narrow-search-results-item-detail','vtip','admin'); /*Viswanathan added for #76811*/
							$('.limit-title').trunk8(trunk8.admin_title);
					 		$('.limit-desc').trunk8(trunk8.admin_desc);
						//	Drupal.attachBehaviors();
							// if ($("#paint-narrow-search-results").data('showmore') === undefined) {
							updateShowMore = ((updateShowMore == undefined || updateShowMore == null) ? true : updateShowMore);

							if(updateShowMore) {
								$("#paint-narrow-search-results").showmore({
									showAlways: true,
									'grid': '#narrow-search-results-holder',
									'gridWrapper': '#main-wrapper',
									'showMore': '#admin-narrow-search-show-more'
								});
							}
								//bind onclick event for the ajax edit narrow search result icon
								$('#narrow-search-results-holder tr.jqgrow:not(.click-binded)').bind('mousedown', function (e) {
									try {
										// console.log('click happens');
										$('#narrow-search-results-holder').setGridParam({
											'lastAccessedRow': $(e.target).closest("tr.jqgrow")[0]
										});
									} catch (e) {
										// console.log(e, e.stack);
									}
								})
								.addClass('click-binded');
							// }
							// console.log($("#paint-narrow-search-results"), $("#paint-narrow-search-results").data('showmore'));
						},

						getNarrowSearchURLArgs : function(sortType,sortTypeHtmlId) {

							var searchNarrowParams = '';
							var curObj=this;
							var numfilterSets = curObj.filterSets.length;

							for ( var i = 0; i < numfilterSets; i++) {
								searchNarrowParams += '&' + curObj.filterSets[i].code + '=';
								var appliedFilters = '';
								switch (curObj.filterSets[i].type) {
								case 'radio':
									appliedFilters += $('input[name="'+curObj.filterSets[i].code+'"]:checked').val();
									break;

								case 'checkbox':
									$('#' + curObj.filterSets[i].code + '_filterset .narrow-search-filterset-checkbox').each(function() {
														if ($(this).is(':checked')) {
															appliedFilters += (appliedFilters == '') ? '': '|';
															appliedFilters += $(this).val();
														}
									});
									break;

								case 'addltext':
									var tmpDefaultText;
									var curText = $('#' + curObj.filterSets[i].code + '-addltext-filter').val();
									if (curText == curObj.filterSets[i].defaultText || curText == undefined || curText === null || curText == "") {
										tmpDefaultText = '';
									} else {
										tmpDefaultText = curText;
									}
									appliedFilters += encodeURIComponent(tmpDefaultText);
									break;

								case 'tagscloud':
									var curText = $('#' + curObj.filterSets[i].code + '-addltext-filter').val();
									if(curText == undefined || curText === null || curText == ""){
										curText = '';
									}
									appliedFilters += encodeURIComponent(curText);
									break;

								case 'slider':
									var prefix = $('#'+curObj.filterSets[i].code+'_filterset').data("prefix");
									var suffix = $('#'+curObj.filterSets[i].code+'_filterset').data("suffix");
									var tempprice;
									var Lprice = '';
									var Rprice = '';

									if($( '#value-slide-left-'+curObj.filterSets[i].code+'' ).val() != undefined){
										Lprice = $( '#value-slide-left-'+curObj.filterSets[i].code+'' ).val().replace(prefix+suffix,'');
									}
									if($( '#value-slide-right-'+curObj.filterSets[i].code+'' ).val() != undefined){
										Rprice = $( '#value-slide-right-'+curObj.filterSets[i].code+'' ).val().replace(prefix+suffix,'');
									}
									
									if((Lprice == undefined || Lprice === null || Lprice == "") || (Rprice == undefined || Rprice === null || Rprice == "")) {
										tempprice = '';
									}
									else {
										tempprice = $.trim(Lprice+'|'+Rprice);
									}
//									if(tempprice == 'undefined-undefined' || tempprice == undefined-undefined || tempprice =='|' || tempprice == undefined || tempprice === null || tempprice == "")
//										tempprice = '';

									appliedFilters += tempprice;
									break;

								case 'daterange':
									var clrLinkSelector = '#' + curObj.filterSets[i].code + '-daterange-clr';

									var fromDate = $('#' + curObj.filterSets[i].code + '-daterange-from-date').val();
									var toDate = $('#' + curObj.filterSets[i].code + '-daterange-to-date').val();

									if (fromDate == curObj.filterSets[i].from_default_text || fromDate == undefined || fromDate === null || fromDate == "") {
										fromDate = '';
									} else {
										$(clrLinkSelector).css('display','block');
									}

									if (toDate == curObj.filterSets[i].to_default_text || toDate == undefined || toDate === null || toDate == "") {
										toDate = '';
									} else {
										$(clrLinkSelector).css('display','block');
									}
									appliedFilters += fromDate + '|' + toDate;
									break;
								} // end switch

								searchNarrowParams += appliedFilters;
							} // end for loop

							// Append sortby to the search string
							searchNarrowParams += '&sortby=' + sortType;

							// Append text substring from Search By Text filter
							var textFilter = ($('#narrow-search-text-filter').val() == curObj.topTextFilterLabel) ? '' : $('#narrow-search-text-filter').val();
							 //44552: search not working in survey and assessment page.
							searchNarrowParams += '&textfilter=' + encodeURIComponent(textFilter);

							return searchNarrowParams;
						},

						refreshGrid : function(sortType, sortTypeHtmlId) {
							if($('#narrow-search-actionbar')){
							  //$('#narrow-search-actionbar').hide();
							}
							var curObj=this;

							if (sortType == undefined || sortType == null || sortType == '') {
								sortType = curObj.lastSortType;
							}
							if (sortTypeHtmlId == undefined || sortTypeHtmlId == null || sortType == '') {
								sortTypeHtmlId = curObj.lastSortTypeHtmlId;
							}
							$('#gview_narrow-search-results-holder').css('min-height', '100px');
                         //   if(curObj.searchBasePath == "administration/learning/catalog/search/all/")
                            curObj.createLoader('main-wrapper');
                         //   else
							//curObj.createLoader('paint-narrow-search-results');

							var ajaxUrl = curObj.constructUrl(curObj.searchBasePath + curObj.getNarrowSearchURLArgs(sortType,sortTypeHtmlId));
							//console.log('ajaxUrl', ajaxUrl);
							if(ajaxUrl.indexOf('catalogtype=Class') !== -1) {
								$('#narrow-search-results-holder').setGridParam({jsonReader: {id: "jqgrid-rowid"}});;
							} else {
								$('#narrow-search-results-holder').setGridParam({jsonReader: {id: "id"}});;
							}
							$('#narrow-search-results-holder').setGridParam({url : ajaxUrl});

							$("#narrow-search-results-holder").trigger("reloadGrid", [ {page : 1} ]);

							curObj.updateCheckboxFiltersDisplay();

							// Highlight correct sort type
							$('.narrow-search-sortbar-sortlinks li').each(function() {
										$(this).find('a').removeClass('sortype-high-lighter');
							});

							if (sortTypeHtmlId.length > 0) {
								$('#' + sortTypeHtmlId).addClass('sortype-high-lighter');
								curObj.lastSortType = sortType;
								curObj.lastSortTypeHtmlId = sortTypeHtmlId;
							}
							vtip();
						},

						updateCheckboxFiltersDisplay : function() {
							$('.narrow-search-filtersets-holder').find('input[type=checkbox]').each(function() {
												if ($(this).is(':checked')) {
													$(this).parent().next('label').removeClass('narrow-search-filterset-item-label-unselected');
													$(this).parent().next('label').addClass('narrow-search-filterset-item-label-selected');
													$(this).parent().removeClass('narrow-search-filterset-checkbox-unselected');
													$(this).parent().addClass('narrow-search-filterset-checkbox-selected'); // The checkbox itself is animage
												} else {
													$(this).parent().next('label').removeClass('narrow-search-filterset-item-label-selected');
													$(this).parent().next('label').addClass('narrow-search-filterset-item-label-unselected');
													$(this).parent().removeClass('narrow-search-filterset-checkbox-selected');
													$(this).parent().addClass('narrow-search-filterset-checkbox-unselected'); // The checkbox itself is an image
												}
											});

							$('.narrow-search-filtersets-holder').find('input[type=radio]').each(function() {
								if ($(this).is(':checked')) {
									$(this).parent().next('label').removeClass('narrow-search-filterset-item-label-unselected');
									$(this).parent().next('label').addClass('narrow-search-filterset-item-label-selected');
									$(this).parent().removeClass('narrow-search-filterset-radio-unselected');
									$(this).parent().addClass('narrow-search-filterset-radio-selected'); // The radio itself is animage
									// the data is undefined,added this condition.							
									if($(".classlangtype-scroll-list-container").jScrollPane({}).data('jsp') != undefined)
									{
									$(".classlangtype-scroll-list-container").jScrollPane({}).data('jsp').destroy();
									}
									$(".classlangtype-scroll-list-container").jScrollPane();	//Apply scroll
									if($(".classcurrency-scroll-list-container").jScrollPane({}).data('jsp') != undefined)
									{
									$(".classcurrency-scroll-list-container").jScrollPane({}).data('jsp').destroy();
									}
									$(".classcurrency-scroll-list-container").jScrollPane();	//Apply scroll	
								} else {
									$(this).parent().next('label').removeClass('narrow-search-filterset-item-label-selected');
									$(this).parent().next('label').addClass('narrow-search-filterset-item-label-unselected');
									$(this).parent().removeClass('narrow-search-filterset-radio-selected');
									$(this).parent().addClass('narrow-search-filterset-radio-unselected'); // The checkbox itself is an image

								}
							})
							vtip();
						},

						initGrid : function(widgetSelector, widgetName) {
							$('#first_narrow-search-results-pager').click(function(e) {
												if (!$('#first_narrow-search-results-pager').hasClass('ui-state-disabled')) {
													$('#narrow-search-results-holder').hide();
													$('#gview_narrow-search-results-holder').css('min-height','100px');
													$(widgetSelector).data(widgetName).createLoader('paint-narrow-search-results');
												}
											});
							$('#prev_narrow-search-results-pager').click(function(e) {
												if (!$('#prev_narrow-search-results-pager').hasClass('ui-state-disabled')) {
													$('#narrow-search-results-holder').hide();
													$('#gview_narrow-search-results-holder').css('min-height','100px');
													$(widgetSelector).data(widgetName).createLoader('paint-narrow-search-results');
												}
											});

							$('#next_narrow-search-results-pager').click(function(e) {
												if (!$('#next_narrow-search-results-pager').hasClass('ui-state-disabled')) {
													$('#narrow-search-results-holder').hide();
													$('#gview_narrow-search-results-holder').css('min-height','100px');
													$(widgetSelector).data(widgetName).createLoader('paint-narrow-search-results');
												}
											});
							$('#last_narrow-search-results-pager').click(function(e) {
												if (!$('#last_narrow-search-results-pager').hasClass('ui-state-disabled')) {
													$('#narrow-search-results-holder').hide();
													$('#gview_narrow-search-results-holder').css('min-height','100px');
													$(widgetSelector).data(widgetName).createLoader('paint-narrow-search-results');
												}
											});

							$('.ui-pg-selbox').bind('change',function() {
												$('#narrow-search-results-holder').hide();
												$('#gview_narrow-search-results-holder').css('min-height','100px');
												$(widgetSelector).data(widgetName).createLoader('paint-narrow-search-results');
												$(widgetSelector).data(widgetName).hidePageControls(false);
												this.blur();
											});

							$(".ui-pg-input").keyup(function(event) {
												if (event.keyCode == 13) {
													$('#narrow-search-results-holder').hide();
													$('#gview_narrow-search-results-holder').css('min-height','100px');
													$(widgetSelector).data(widgetName).createLoader('paint-narrow-search-results');
												}
											});

							if(this.currTheme == "expertusoneV2"){
								$('#narrow-search-results-pager .page-show-prev').bind('click',function() {
									if(parseInt($("#narrow-search-results-pager .page_count_view").attr('id')) < 0){
										$("#narrow-search-results-pager .page_count_view").attr('id','0');
									}else{
										$('#narrow-search-results-holder').hide();
										$('#gview_narrow-search-results-holder').css('min-height','100px');
										$(widgetSelector).data(widgetName).createLoader('paint-narrow-search-results');
										$(widgetSelector).data(widgetName).hidePageControls(false);
									}
								});

								$('#narrow-search-results-pager .page-show-next').bind('click',function() {
									if(parseInt($("#narrow-search-results-pager .page_count_view").attr('id')) >= parseInt($("#narrow-search-results-pager .page-total-view").attr('id'))){
										$("#narrow-search-results-pager .page_count_view").attr('id',($("#narrow-search-results-pager .page_count_view").attr('id')-1));
									}else{
										$('#narrow-search-results-holder').hide();
										$('#gview_narrow-search-results-holder').css('min-height','100px');
										$(widgetSelector).data(widgetName).createLoader('paint-narrow-search-results');
										$(widgetSelector).data(widgetName).hidePageControls(false);
									}
								});

							}
							vtip();
						},

						initTextFilter : function(textFilterACPath) {

							if ($('#narrow-search-text-filter')) {
								var obj = this;
								// Destroy previous autocomplete setup on this field
								$('#narrow-search-text-filter').removeData();

								$("#narrow-search-text-filter").keyup(function(event) {
											if (event.keyCode == 13) {
												obj.narrowSearchByText();
												$('.ac_results').css('display', 'none');
											}
								});

								$('#narrow-search-text-filter-go').click(function() {
									        /*this.currTheme = Drupal.settings.ajaxPageState.theme;*/
											obj.narrowSearchByText();
											 /*var selector='#narrow-search-text-filter';
                                             $(selector).addClass('header-search-text-filter');
                                             $(selector).removeClass('narrow-search-filterset-daterange-nonempty');
                                             $(selector).addClass('narrow-search-filterset-daterange-empty');
                                             if(this.currTheme == 'expertusoneV2'){
                                            	 $(selector).val(Drupal.t('LBL304'));
                                             }else{
                                            	 $(selector).val((Drupal.t('LBL304')).toUpperCase());
                                             }*/

								});

								if (textFilterACPath != undefined && textFilterACPath != 'undefined' && textFilterACPath != null && textFilterACPath != '') {
									textFilterACPath = "/?q="+ textFilterACPath;
									$('#narrow-search-text-filter').autocomplete(textFilterACPath, {
												minChars : 3,
												max : 50,
												autoFill : true,
												mustMatch : false,
												matchContains : false,
												inputClass : "ac_input",
												loadingClass : "ac_loading"
											});
								}
							}

							this.initTextDateFilterBlurStyle("#narrow-search-text-filter", obj.topTextFilterLabel,"1");
							$("#narrow-search-text-filter").focus(function () {
								try {
									var inputElem = $(this);
									inputElem.val() == '' || addClearIcon(inputElem);
								} catch(e) {
									// window.console.log(e, e.stack);
								}
							})
							.blur(function(e) {
								try {
									var inputElem = $(this);
									removeClearIcon(inputElem)
								} catch(e) {
									// window.console.log(e, e.stack);
								}
							}).keyup(function () {
								var inputElem = $(this);
								if(inputElem.siblings('.eol-search-clearance').length < 1) {
									inputElem.val() == '' || addClearIcon(inputElem);
								} else {
									inputElem.val() == '' && removeClearIcon(inputElem);
								}
							});
							vtip();						
						},


						initFilters : function() {

							// init each filter as appropriate
							for ( var i = 0; i < this.filterSets.length; i++) {
								var filterSet = this.filterSets[i];
								 //alert(filterSet.toSource());
								switch (filterSet.type) {
								case 'addltext':
									this.initAddlTextFilter(filterSet);
									break;

//								case 'tagscloud':
//									if ($('#' + filterSet.code + '_tagscloud').is(':visible')) {
//								      var tagsHeight = $('#' + filterSet.code + '_tagscloud').height();
//								      if (tagsHeight > 175) {
//								        $('#' + filterSet.code + '_tagscloud').height(175);
//									    $('#' + filterSet.code + '_tagscloud').css('max-height', '175px');
//										$('#' + filterSet.code + '_tagscloud').jScrollPane({});
//									  }
//	                                }
//									break;

								case 'daterange':
									this.initDateRangeFilter(filterSet);
									break;

								case 'slider' :
									this.initSlider(filterSet);
									break;

								case 'checkbox':
									if (filterSet.code =='group') {
										if ($('#' + filterSet.code + '_filterset').is(':visible')) {
											($('#' + filterSet.code + '_filterset').removeClass('display-more'));
											var groupHeight = $('#' + filterSet.code + '_filterset').height();
										      if (groupHeight > 10) {
											    $('#' + filterSet.code + '_filterset').css({'width':'160px'});
											    //$('#' + filterSet.code + '_filterset').css({'height':'100px','max-height', '100px'});
											    //$('.jspContainer').css('width','160px');
												//$('#' + filterSet.code + '_filterset').jScrollPane({});
										}
									}
								  }
								} // end switch
							} // end for
							//Removing last filter type border
							var filterCount = $('.narrow-search-filterset').filter(':visible').length-1;
							$('.narrow-search-filterset:eq('+filterCount+')').css({'border-bottom':'none','padding-bottom':'0px'});
						},


					    initTextDateFilterBlurStyle : function(selector,defaultText,fromTopFilterTextSearch) {

							var data = selector + '&' + defaultText + '&' + fromTopFilterTextSearch;
							var curObj=this;

							$(selector).blur(data,function(event) { // Can pass a string data only. but not an object data as objects are passed by reference
												var data = event.data;
												var tokens = data.split("&");
												var selector = tokens[0];
												var fieldValue = $(selector).val();
												var defaultText = tokens[1];
												var fromTopFilterTextSearch = tokens[2];

												if(fromTopFilterTextSearch=="1"){
													defaultText=curObj.topTextFilterLabel;
												}

												if (fieldValue == '' || fieldValue == defaultText) {
													$(selector).removeClass('narrow-search-filterset-daterange-nonempty');
													$(selector).addClass('narrow-search-filterset-daterange-empty');
													$(selector).val(defaultText);
												} else if (fieldValue != defaultText) {
													$(selector).removeClass('narrow-search-filterset-daterange-empty');
													$(selector).addClass('narrow-search-filterset-daterange-nonempty');
												}

											});

							$(selector).focus(data,function(event) { // Can pass a string data only.but not an object data as objects are passed by  reference
												var data = event.data;
												var tokens = data.split("&");
												var selector = tokens[0];
												var fieldValue = $(selector).val();
												var defaultText = tokens[1];
												//$(selector).val('');
												if (fieldValue == defaultText) {
													$(selector).val('');
												}
												$(selector).removeClass('narrow-search-filterset-daterange-empty');
												$(selector).addClass('narrow-search-filterset-daterange-nonempty');

											});

							$(selector).change(data,function(event) { // Can pass a string data only.but not an object data as objects are passed by reference
												var data = event.data;
												var tokens = data.split("&");
												var selector = tokens[0];
												var fieldValue = $(selector).val();
												var defaultText = tokens[1];
												var fromTopFilterTextSearch = tokens[2];

												if(fromTopFilterTextSearch=="1"){
													defaultText=curObj.topTextFilterLabel;
												}

												if (fieldValue == '' || fieldValue == defaultText) {
													$(selector).removeClass('narrow-search-filterset-daterange-nonempty');
													$(selector).addClass('narrow-search-filterset-daterange-empty');
													$(selector).val(defaultText);
												} else {
													$(selector).removeClass('narrow-search-filterset-daterange-empty');
													$(selector).addClass('narrow-search-filterset-daterange-nonempty');
												}

											});

							var fieldValue = $(selector).val();

							if (fieldValue == defaultText) {
								$(selector).addClass('header-search-text-filter');
								$(selector).removeClass('narrow-search-filterset-daterange-nonempty');
								$(selector).addClass('narrow-search-filterset-daterange-empty');
								$(selector).val(defaultText);
							}

							vtip();
						},


						initAddlTextFilter : function(filterSet) {
							if ($('#' + filterSet.code + '-addltext-filter')) {

								var obj = this;

								$('#' + filterSet.code + '-addltext-filter').keyup(filterSet.code,function(event) {
													if (event.keyCode == 13) {
														obj.narrowSearchByAddlText(event.data);

														//Display clear link in the arrow search filter
														$('#' + filterSet.code + '-addltext-clr').css('display','block');
														$('.ac_results').css('display', 'none');
													}
								});

								$('#' + filterSet.code + '-addltext-filter-go').click(filterSet.code,function(event) {
									if($("#" + filterSet.code + "-addltext-filter").val() != filterSet.defaultText){
										obj.narrowSearchByAddlText(event.data);
									}
								});

								if (filterSet.acpath != undefined && filterSet.acpath != 'undefined' && filterSet.acpath != null && filterSet.acpath != '') {
									var addlTextFilterACPath = "/?q=" + filterSet.acpath;
									var multipleval = '';
									if(filterSet.code == 'grporg' || filterSet.code == 'grpjobrole' || filterSet.code == 'grploc'|| filterSet.code == 'grpempl' || filterSet.code == 'grpdep' || filterSet.code == 'grpusrtyp' || filterSet.code == 'grpcontry'|| filterSet.code == 'grplang')
										multipleval = true;
									else
										multipleval = false;
									$('#' + filterSet.code + '-addltext-filter') .autocomplete(addlTextFilterACPath,{
														minChars : 3,
														max : 50,
														autoFill : true,
														mustMatch : false,
														matchContains : false,
														inputClass : "ac_input",
														loadingClass : "ac_loading",
														multiple: multipleval

								    });
								} // endif !empty(textFilterACPath)
							} // end filterset exists

							var selector = "#" + filterSet.code + '-addltext-filter';
							var defaultText = filterSet.defaultText;
							this.initTextDateFilterBlurStyle(selector,defaultText);
						},

						initDateRangeFilter : function(filterSet) {
							if ($('#' + filterSet.code + '-daterange-from-date')) {
								filterSet.__init = 'FROM';
								this.initDateRangeDateField(filterSet);
							}
							if ($('#' + filterSet.code + '-daterange-to-date')) {
								filterSet.__init = 'TO';
								this.initDateRangeDateField(filterSet);
							}
						},

						initDateRangeDateField : function(filterSet) {
							var selectorSuffix = (filterSet.__init == 'FROM') ? '-daterange-from-date' : '-daterange-to-date';
							var selector = '#' + filterSet.code + selectorSuffix;
							var buttonText = (filterSet.__init == 'FROM') ? filterSet.from_tooltip : filterSet.to_tooltip;
							var calendarIcon = resource.base_url + '/' + themepath + '/expertusone-internals/images/calendar_icon.JPG';
							// alert(calendarIcon);
							$(selector).datepicker({
												duration : '',
												showTime : false,
												constrainInput : false,
												stepMinutes : 5,
												stepHours : 1,
												time24h : true,
												dateFormat : "mm-dd-yy",
												buttonImage : calendarIcon,
												buttonImageOnly : true,
												firstDay : 0,
												showOn : 'both',
												buttonText : buttonText,
												showButtonPanel : true,
												changeMonth : true,
												changeYear : true,
												daterangeDiffDays : 20000,

												beforeShow : function(input) {

													var data = $("#" + input.id).metadata();
													var dateFieldCode = data.dateFieldCode;
													var dateShowOption = data.dateRangeShowOption;

													if (dateShowOption == "" || dateShowOption == null || dateShowOption == "undefined") {
														dateShowOption = "all";
													}
													if (dateFieldCode == "" || dateFieldCode == null || dateFieldCode == "undefined") {
														var tokens = data .split("-");
														var dateFieldCode = tokens[0];
													}

													var dateMin = null;
													var dateMax = null;
													var fromSelectorCode = dateFieldCode + '-daterange-from-date';
													var toSelectorCode = dateFieldCode + '-daterange-to-date';
													var fromSelector = '#' + fromSelectorCode;
													var toSelector = '#' + toSelectorCode;

													if (input.id == fromSelectorCode && $(fromSelector).datepicker("getDate") != null) {
														var daterangeDiffDays = $(fromSelector).datepicker("option","daterangeDiffDays");

														if (dateShowOption == "future") { // To show future and today date for From Date

															dateMin = new Date();
															dateMax = $(toSelector).datepicker("getDate");
															dateMax.setDate(dateMin.getDate()+daterangeDiffDays);

														} else if (dateShowOption == "past") { // Default is to Show Past and Today Date for From Date

															var toDateFull = $(toSelector).datepicker("getDate");
															var fromDateFull = $(fromSelector).datepicker("getDate");
															var fromDate = fromDateFull.getFullYear()+ ","+ fromDateFull.getMonth()+ ","+ fromDateFull.getDate();
															var toDate = toDateFull.getFullYear()+ ","+ toDateFull.getMonth()+ ","+ toDateFull.getDate();
															var dateFromObj = new Date(fromDate);
															var dateToObj = new Date(toDate);
															var diffDates = dateToObj - dateFromObj;

															dateMax = new Date();

															if (diffDates == 0) {
																dateMin = $(fromSelector).datepicker("getDate");
																dateMin.setDate(dateMin.getDate() - daterangeDiffDays);
																dateMax = new Date();
															} else {
																dateMax = $(toSelector).datepicker("getDate");
																dateMin = $(toSelector).datepicker("getDate");
																dateMin.setDate(dateMax.getDate() - daterangeDiffDays);
																dateMax.setDate(dateMax.getDate() - 0);
															}
														}
													} else if (input.id == toSelectorCode) {

														var daterangeDiffDays = $(toSelector).datepicker("option","daterangeDiffDays");

														if (dateShowOption == "future") { // To Show Future and Today Date for To Date
															dateMax = new Date();
															if ($(fromSelector).datepicker("getDate") != null) {
																dateMin = $(fromSelector).datepicker("getDate");
																dateMax = $(fromSelector).datepicker("getDate");
																dateMax.setDate(dateMax.getDate() + daterangeDiffDays);
															}
														} else if (dateShowOption == "past") { // Default is to Show Past and Today Date for To Date
															dateMax = new Date();
															if ($(fromSelector).datepicker("getDate") != null) {
																dateMin = $(fromSelector).datepicker("getDate");
																var minDate = dateMin.getFullYear()+ ","+ dateMin.getMonth()+ ","+ dateMin.getDate();
																var maxDate = dateMax.getFullYear()+ ","+ dateMax.getMonth()+ ","+ dateMax.getDate();
																var dateFromObj = new Date(minDate);
																var dateToObj = new Date(maxDate);
																var diffDates = dateToObj - dateFromObj;

																if (diffDates <= 0) {
																	dateMin.setDate(dateMin.getDate() - daterangeDiffDays);
																} else {
																	dateMin.setDate(dateMin.getDate() - 0);
																}
															}
														}
													}

													return {
														minDate : dateMin,
														maxDate : dateMax
													};

												}
											});

							var defaultText = (filterSet.__init == 'FROM') ? filterSet.from_default_text : filterSet.to_default_text;

							this.initTextDateFilterBlurStyle(selector,defaultText);
						},

						initSlider: function(filterSet){
							obj = this;
							var valueMin = $('#'+filterSet.code+'_filterset').data("startval");
							var valueMax = $('#'+filterSet.code+'_filterset').data("endval");
							var prefix = $('#'+filterSet.code+'_filterset').data("prefix");
							var suffix = $('#'+filterSet.code+'_filterset').data("suffix");
							if(valueMax > valueMin){

								$('#value-slider-range-' + filterSet.code + '').slider({
									range: true,
									min: valueMin,
									max: valueMax,
									values: [ valueMin, valueMax ],
									slide: function( event, ui ) {
										$( '#value-slide-left-'+filterSet.code+'' ).val( prefix + ui.values[ 0 ] + suffix);
										$( '#value-slide-right-'+filterSet.code+'' ).val( prefix + ui.values[ 1 ] + suffix);
										 //+ " - $" + ui.values[ 1 ] );
									},
									change: function(e,ui){
										//$("#prg-admin-search").data("prgsesarch").searchAction();
										 obj.narrowSearchBySlider();
								    }
								});
								$( '#value-slide-left-'+filterSet.code+'').val( prefix + $('#value-slider-range-'+filterSet.code+'' ).slider( 'values', 0 ) + suffix);
								$( '#value-slide-right-'+filterSet.code+'' ).val( prefix + $( '#value-slider-range-'+filterSet.code+'' ).slider( 'values', 1 ) + suffix);
								/*if(this.currTheme == "expertusoneV2"){
									$( '#value-slider-range-'+filterSet.code+' a:last').css('margin-left','-9px');
								}*/
							}

						},

						/*
						 * IsValidDate() - Check that given date is valid or not -
						 * TRUE if date is valid - FALSE if date is valid
						 */
						IsValidDate : function(Day, Mn, Yr) {
							var DateVal = Mn + "/" + Day + "/" + Yr;
							var dt = new Date(DateVal);

							if (dt.getDate() != Day) {
								//alert('Invalid Date');
								return (false);
							} else if (dt.getMonth() != Mn - 1) {
								// this is for the purpose JavaScript starts the
								// month from 0
								//alert('Invalid Date');
								return (false);
							} else if (dt.getFullYear() != Yr) {
								//alert('Invalid Date');
								return (false);
							}

							return (true);
						},

						/*
						 * validateDateRangeDates() - Action for the Go button
						 * in the daterange component - validates dates in the
						 * date range narrow search component. - On error,
						 * displays the error message in the component. - On
						 * success, submits the search request
						 */
						validateDateRangeDates : function(code,ID) {
                            var fromDefaultText = $('#' + ID).data('default-fromtext');
                            var toDefaultText =  $('#' + ID).data('default-totext');
							var fromDateSelector = '#' + code + '-daterange-from-date';

							var toDateSelector = '#' + code + '-daterange-to-date';

							var dateFrom = ($(fromDateSelector).val() == fromDefaultText) ? '' : $(fromDateSelector).val();
							var dateTo = ($(toDateSelector).val() == toDefaultText) ? '' : $(toDateSelector).val();

							if (dateFrom == '' && dateTo == '') {
								this.narrowSearchByDateRange(code);
								return;
							}

							var msg = "";
							var validFromDate = false;
							var validToDate = false;
							if (dateFrom != "") {
								var dateFromSplit = dateFrom.split('-');
								var fromDay = dateFromSplit[1];
								var fromMonth = dateFromSplit[0];
								var fromYear = dateFromSplit[2];
								validFromDate = this.IsValidDate(fromDay, fromMonth, fromYear);
								if (!validFromDate) {
									msg += Drupal.t("LBL1154");
								}
							}
							if (dateTo != "") {
								var dateToSplit = dateTo.split('-');
								var toDay = dateToSplit[1];
								var toMonth = dateToSplit[0];
								var toYear = dateToSplit[2];
								validToDate = this.IsValidDate(toDay, toMonth, toYear);
								if (!validToDate) {
									if (msg != "")
										msg += "<br/>";
									//msg += Drupal.t("LBL1146");
								}
							}
							if (validFromDate == true && validFromDate == true) {
								var dateFromObjStr = fromYear + '/' + fromMonth + '/' + fromDay;
								var dateToObjStr = toYear + '/' + toMonth + '/'+ toDay;
								var dateFromObj = new Date(dateFromObjStr);
								var dateToObj = new Date(dateToObjStr);
								var diffDates = dateToObj - dateFromObj;
								if (diffDates < 0) {
									if (msg != "")
										msg += "<br/>";
									msg += Drupal.t("LBL1155");
								}
							}
							errMsgDivSelector = '#' + code + '-daterange-errmsg';
							if (msg != "") {
								$(errMsgDivSelector).html(Drupal.t(msg));
								$(errMsgDivSelector).css('display','inline-block');
								$(errMsgDivSelector).show();
							} else {
								$(errMsgDivSelector).hide();
								this.narrowSearchByDateRange(code);
							}

						},

						/*
						 * clearDateRangeFields() - Action for the clear link in
						 * the daterange component
						 */
						clearDateRangeFields : function(code, ID) {
							// Prepare the jQuery selectors
							var fromDefaultText = $('#' + ID).data('default-fromtext');
                            var toDefaultText =  $('#' + ID).data('default-totext');
							var fromDateSelector = "#" + code + "-daterange-from-date";
							var toDateSelector = "#" + code + "-daterange-to-date";
							var clearDateRangeSelector = '#' + code + '-daterange-clr';
							var errMsgDivSelector = '#' + code + '-daterange-errmsg';

							// Show the default texts in date fields in default
							// color and font
							$(fromDateSelector).removeClass('narrow-search-filterset-daterange-nonempty');
							$(fromDateSelector).addClass('narrow-search-filterset-daterange-empty');
							$(fromDateSelector).val(fromDefaultText);

							$(toDateSelector).removeClass('narrow-search-filterset-daterange-nonempty');
							$(toDateSelector).addClass('narrow-search-filterset-daterange-empty');
							$(toDateSelector).val(toDefaultText);

							// Hide the clear link
							$(clearDateRangeSelector).css('display', 'none');

							// Hide the error message box
							$(errMsgDivSelector).hide();

							// Refresh the datepicker
							$(fromDateSelector).datepicker("refresh");
							$(toDateSelector).datepicker("refresh");

							// Search as per cleared filter settings
							this.narrowSearchByDateRange(code);

						},
						/*
						 * validatetextField() - Action for the clear link to appear near the
						 * relevant text box.
						 */

						validatetextField : function(code, ID) {
							var defaultText = $('#' + ID).data('default-text');
							var defaultTextSelector = "#" + code + "-addltext-filter";
							var showClearLink = "#" + code + "-addltext-clr";
							if($("#" + code + "-addltext-filter").val() != defaultText){
								$(showClearLink).css('display', 'block');
							}

						},
						/*
						 * clearTextBoxFields() - Action for the clear link in
						 * the username, organization and location component
						 */
						clearTextBoxFields : function(code, ID) {
							var defaultText = $('#' + ID).data('default-text');
							var defaultTextSelector = "#" + code + "-addltext-filter";
							var clearTextFieldSelector = '#' + code + '-addltext-clr';
							// Show the default texts in date fields in default
							// color and font
							$(defaultTextSelector).removeClass('narrow-search-filterset-daterange-nonempty');
							$(defaultTextSelector).addClass('narrow-search-filterset-daterange-empty');
							$(defaultTextSelector).val(defaultText);
							// Hide the clear link
							$(clearTextFieldSelector).css('display', 'none');
							this.narrowSearchByAddlText(code);

						},

						clearTagsCloudNarrowFilter : function(code) {
							$('#' + code + '-addltext-filter').val('');
							$('.tagscloud-tag').css('text-decoration', '');
							$('#' + code + '-tagscloud-clr').css('display', 'none');
							$('#root-admin').data('narrowsearch').refreshGrid();
						},

						moreListDisplay : function(recLen,dispId,html_id) {
							if(html_id==''){
				            		for(i=0;i<=recLen;i++){
				            			$('#'+dispId+'_'+i).css("display","block");
				            		}
				            		$('#'+dispId+'_more').css("display","none");
				            		$('#'+dispId+'_short').css("display","block");
							}else{
			            		for(i=0;i<=recLen;i++){
			            			$('#'+html_id+' #'+dispId+'_'+i).css("display","block");
			            		}
			            		$('#'+html_id+' #'+dispId+'_more').css("display","none");
			            		$('#'+html_id+' #'+dispId+'_short').css("display","block");
							}
							vtip();
		            	},

		            	shortListDisplay : function(recLen,dispId,html_id){
		            		if(html_id==''){
		            			for(i=0;i<=recLen;i++){
			            			if(i<=4){
			            				$('#'+dispId+'_'+i).css("display","block");
			            				}
			            			else {
			            				$('#'+dispId+'_'+i).css("display","none");
			            				}
			            			}
			            		$('#'+dispId+'_short').css("display","none");
			            		$('#'+dispId+'_more').css("display","block");
		            		}else{
			            		for(i=0;i<=recLen;i++){
			            			if(i<=4){
			            				$('#'+html_id+' #'+dispId+'_'+i).css("display","block");
			            				}
			            			else {
			            				$('#'+html_id+' #'+dispId+'_'+i).css("display","none");
			            				}
			            			}
			            		$('#'+html_id+' #'+dispId+'_short').css("display","none");
			            		$('#'+html_id+' #'+dispId+'_more').css("display","block");
		            		}
		            		vtip();
		            	},


						/*	callDeleteObject : function(objectId,objectType){
						 var obj = this;
							url = obj.constructUrl("ajax/admincore/deleteobject/" + objectId+'/'+objectType);
							$.ajax({
								type: "POST",
								url: url,
								data:  '',
								success: function(result){
								result = $.trim(result);
								//alert(result)
								   if(result > 0){
									   if(objectType == "Class") {
										   obj.callMessageWindow('Delete','This Class has been Enrolled/Futured. So cannot delete.');
									   }else if(objectType == "Course"){
										   obj.callMessageWindow('Delete','This Course has one of the Enrolled/Futured Class. So cannot delete.');
									   }else{
										   obj.callMessageWindow('Delete','Training Plan');
									   }

								   }else{
									   obj.displayDeleteWizard(objectId,objectType);
								   }
								}
						    });

					},	*/

					callDeleteProcess : function(objectId,objectType){
						$('#delete-msg-wizard').remove();
						var obj = this;
							url = obj.constructUrl("ajax/admincore/deleteprocessobject/" + objectId+'/'+objectType);
							$.ajax({
								type: "POST",
								url: url,
								data:  '',
								success: function(result){
									Drupal.CTools.Modal.dismiss();
									// Admin Calendar - Start - Refresh calendar after delete announcement
									if(window.location.href.indexOf("admincalendar") >0 )
										getCalendarData();
									// Admin Calendar - End
									$("#root-admin").data("narrowsearch").refreshGrid();
								}
						    });

					},

					displayDeleteWizard : function(title,objectId,objectType,wSize){
						var uniqueClassPopup = '';
						if(Drupal.settings.ajaxPageState.theme == 'expertusoneV2'){
							if(objectType == "Class" && document.getElementById('catalog-course-basic-addedit-form')){
								uniqueClassPopup = 'unique-delete-class';
							}
						}
						var wSize = (wSize) ? wSize : 300;
						var closeButAction = '';
						var esignForType = '';
						var settingsList = ['cre_usr_dpt', 'cre_usr_etp', 'cre_usr_jrl', 'cre_usr_jtl', 'cre_usr_ptp'];
						if (settingsList.indexOf(objectType) != -1)  {
							closeButAction = function(){ $('#deleteAddedList-'+objectId).click(); };
							esignForType = 'DeleteAdminObjectSettingsList';
						} else {
							
							if(objectId == "cre_ste_mod_aut" || objectId == "cre_ste_mod_cattr"){   //For enable/Disable of Content Authoring module
								closeButAction = function(){ $("#root-admin").data("narrowsearch").publishAndUnpublishModule(objectType,''); };
							}else{
							closeButAction = function(){ $("#root-admin").data("narrowsearch").callDeleteProcess(objectId,objectType); };
							 }
							esignForType = 'DeleteAdminObject';
						}
							$('#delete-msg-wizard').remove();
					    var html = '';
					    html+='<div id="delete-msg-wizard" style="display:none; padding: 0px;">';
					    html+='<table width="100%" cellpadding="0" cellspacing="0" border="0" valign="center">';

					   // html+= '<tr><td height="40px">&nbsp;</td></tr>';
					    if(this.currTheme == 'expertusoneV2'){
					    	if(objectType == 'Content')
					    		html+= '<tr><td style="padding: 30px 24px;" class="commanTitleAll">'+title+'</td></tr>';
					    	else
					    		html+= '<tr><td style="padding: 30px 24px;" class="commanTitleAll">'+title+''+'?'+'</td></tr>';
					    } else {
					    	if(objectType == 'Content')
					    		html+= '<tr><td color="#333333" style="padding: 30px 24px; text-align: left;">'+title+'</td></tr>';
					    	else
					    		html+= '<tr><td color="#333333" style="padding: 30px 24px; text-align: justify;">'+title+''+'?'+'</td></tr>';
					    }
					    html+='</table>';
					    html+='</div>';
					    $("body").append(html);
					    var closeButt={};
					    closeButt[Drupal.t('LBL109')]=function(){ $(this).dialog('destroy');$(this).dialog('close');$('#delete-msg-wizard').remove();};

					    if(availableFunctionalities.exp_sp_esignature != undefined && availableFunctionalities.exp_sp_esignature != "" && objectId != "cre_ste_mod_aut" && objectId != "cre_ste_mod_cattr"){
					    	var esignObj = {'popupDiv':'delete-object-dialog','esignFor':esignForType,'objectId':objectId,'objectType':objectType};
					    	closeButt[Drupal.t('Yes')]=function(){ $.fn.getNewEsignPopup(esignObj);  };
					    }else{
					    	closeButt[Drupal.t('Yes')]= closeButAction;
					    }

					    if(objectType == 'UnlockUser'){
					    	var drupalTitle = Drupal.t("LBL930");
					    }else if(objectType == 'exp_sp_administration_contentauthor'){
					    	var drupalTitle = Drupal.t("LBL749");
					    }else if(objectType == 'exp_sp_administration_customattribute'){
					    	var drupalTitle = Drupal.t("LBL2015");
					    }else{
					    	var drupalTitle = Drupal.t("LBL286");
					    }

					    
					    $("#delete-msg-wizard").dialog({
					        position:[(getWindowWidth()-400)/2,200],
					        bgiframe: true,
					        width:wSize,
					        resizable:false,
					        modal: true,
					        title:Drupal.t(drupalTitle),//"title",
					        buttons:closeButt,
					        closeOnEscape: false,
					        draggable:false,
					        zIndex : 10005,
					        overlay:
					         {
					           opacity: 0.9,
					           background: "black"
					         }
					    });
					    $('.ui-dialog').wrap("<div id='delete-object-dialog' class='"+uniqueClassPopup+"'></div>");

					    $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').addClass("removebutton").end();
					    $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(1)').before('<div class="admin-save-button-left-bg"></div>');
					    $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(1)').addClass("admin-save-button-middle-bg").end();
					    $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(1)').after('<div class="admin-save-button-right-bg"></div>');

					    $("#delete-msg-wizard").show();

						$('.ui-dialog-titlebar-close').click(function(){
					        $("#delete-msg-wizard").remove();
					    });
						if(this.currTheme == 'expertusoneV2'){
					    	changeDialogPopUI();
					    }
						/*-- 37211: Unable to delete a class in FF version 32.0 --*/
					    if($('div.qtip-defaults').length > 0) {
					    	var prevZindex = $('.qtip-defaults').css('z-index');
					    	$('#delete-object-dialog .ui-widget-content').css('z-index', prevZindex+2);
					    	$('.ui-widget-overlay').css('z-index', prevZindex+1);
					    }

					},
					
					displayH5PPreview : function(h5pplayer,objectId,objectType,wSize,hSize){
							var uniqueClassPopup = '';
						if(Drupal.settings.ajaxPageState.theme == 'expertusoneV2'){
							if(objectType == "Class" && document.getElementById('catalog-course-basic-addedit-form')){
								uniqueClassPopup = 'unique-delete-class';
							}
						}
						var wSize = (wSize) ? wSize : 300;
						var hSize = (hSize) ? hSize : 800;
						var closeButAction = '';
						var esignForType = '';
						$('#delete-msg-wizard').remove();
					    var html = '';
					    html+='<div id="delete-msg-wizard" style="display:none; padding: 0px;">';
					    //html+='<table width="100%" cellpadding="0" cellspacing="0" border="0" valign="center">';

					   
					   //html+= '<tr><td style="padding: 30px 24px;" class="commanTitleAll">'+title+'</td></tr>';
					   
					    
					    //html+='</table>';
					    html+='</div>';
					    $("body").append(html);
					    var closeButt={};
					    var drupalTitle = Drupal.t("LBL694");
					    $("#delete-msg-wizard").dialog({
					        position:'center',//[(getWindowWidth()-400)/2,200],
					        bgiframe: true,
					        width:wSize,
					        height:hSize,
					        resizable:false,
					        modal: true,
					        title:Drupal.t(drupalTitle),//"title",
					        buttons:closeButt,
					        closeOnEscape: true,
					        draggable:false,
					        zIndex : 10005,
					        overlay:
					         {
					           opacity: 0.9,
					           background: "black"
					         }
					    });
					    $('.ui-dialog').wrap("<div id='delete-object-dialog' class='"+uniqueClassPopup+"'></div>");

					    $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').addClass("removebutton").end();
					    $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(1)').before('<div class="admin-save-button-left-bg"></div>');
					    $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(1)').addClass("admin-save-button-middle-bg").end();
					    $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(1)').after('<div class="admin-save-button-right-bg"></div>');

					    $("#delete-msg-wizard").show();
					    //display content
					    if(objectType != "customattr"){
					    window.setTimeout(function(){
					    	createLoaderNew("delete-msg-wizard");
					    	},500);
					    }
					    $("#delete-msg-wizard").html(h5pplayer);
					    $("#delete-msg-wizard").css("overflow","hidden");

						$('.ui-dialog-titlebar-close').click(function(){
					        $("#delete-msg-wizard").remove();
					    });
						if(this.currTheme == 'expertusoneV2'){
					    	changeDialogPopUI();
					    }
						/*-- 37211: Unable to delete a class in FF version 32.0 --*/
					    if($('div.qtip-defaults').length > 0) {
					    	var prevZindex = $('.qtip-defaults').css('z-index');
					    	$('#delete-object-dialog .ui-widget-content').css('z-index', prevZindex+2);
					    	$('.ui-widget-overlay').css('z-index', prevZindex+1);
					    }

					},
					

					clearBubblePopupSet : function() {
						//this.qtipLoadSet = array();
					},

					fillCompletionDate : function(uniqueId, uniqueId2){
						var overallDate = $('#overall_completion_date_'+uniqueId2).val();
						$('input[name="hidden_completion_date_'+uniqueId+'"]').val(overallDate);
						//$('#datagrid-completiondate-'+uniqueId).val(overallDate);
					},

					completionDateQTip : function(uniqueId,entityId,sessionStartdate){
					$('.qtip-popup-exempted').html('').hide();
						$('.catalog-pub-add-list').hide();
						$('#completion_date_container_'+uniqueId).show();
						$('#overall_completion_date'+uniqueId).datepicker( "destroy" );

						if(entityId!='' && entityId!=undefined){
							if(sessionStartdate !== undefined) {
								if(this.currTheme == 'expertusoneV2'){
									if($.trim(sessionStartdate)){
										$('#overall_completion_date_'+uniqueId).datepicker({minDate:new Date(sessionStartdate), dateFormat: "mm/dd/yy", showOn: "both", buttonImage: themepath+"/expertusone-internals/images/calendar_icon.JPG", buttonImageOnly: true });
									}
									else{
									    $('#overall_completion_date_'+uniqueId).datepicker({dateFormat: "mm/dd/yy", showOn: "both", buttonImage: themepath+"/expertusone-internals/images/calendar_icon.JPG", buttonImageOnly: true });
									}
								}else{
								    if($.trim(sessionStartdate)){
										  $('#overall_completion_date_'+uniqueId).datepicker({minDate:new Date(sessionStartdate), dateFormat: "mm/dd/yy", showOn: "button", buttonImage: "sites/all/themes/core/expertusone/expertusone-internals/images/calendar_icon.JPG", buttonImageOnly: true });
										}
										else{
										  $('#overall_completion_date_'+uniqueId).datepicker({dateFormat: "mm/dd/yy", showOn: "button", buttonImage: "sites/all/themes/core/expertusone/expertusone-internals/images/calendar_icon.JPG", buttonImageOnly: true });
										}
								} 
							}
							else {
								//will work for TP completion where sessionStartdate will be undefined
								url = this.constructUrl("ajax/administration/getClassStartDate/" + entityId );
								$.ajax({
									type: "POST",
									url: url,
									data:  '',
									success: function(result){
										var sesStartDate = result.replace(/\,/g, '/');
										this.currTheme = Drupal.settings.ajaxPageState.theme;
										if(this.currTheme == 'expertusoneV2'){
											if($.trim(sesStartDate)){
												$('#overall_completion_date_'+uniqueId).datepicker({minDate:new Date(sesStartDate), dateFormat: "mm/dd/yy", showOn: "both", buttonImage: themepath+"/expertusone-internals/images/calendar_icon.JPG", buttonImageOnly: true });
											}
											else{
											    $('#overall_completion_date_'+uniqueId).datepicker({dateFormat: "mm/dd/yy", showOn: "both", buttonImage: themepath+"/expertusone-internals/images/calendar_icon.JPG", buttonImageOnly: true });
											}
										}else{
										    if($.trim(sesStartDate)){
	 										  $('#overall_completion_date_'+uniqueId).datepicker({minDate:new Date(sesStartDate), dateFormat: "mm/dd/yy", showOn: "button", buttonImage: "sites/all/themes/core/expertusone/expertusone-internals/images/calendar_icon.JPG", buttonImageOnly: true });
	 										}
	 										else{
	 										  $('#overall_completion_date_'+uniqueId).datepicker({dateFormat: "mm/dd/yy", showOn: "button", buttonImage: "sites/all/themes/core/expertusone/expertusone-internals/images/calendar_icon.JPG", buttonImageOnly: true });
	 										}
										}
									}
								});
							}

						}else{
							this.currTheme = Drupal.settings.ajaxPageState.theme;
							if(this.currTheme =='expertusoneV2'){
								$('#overall_completion_date_'+uniqueId).datepicker({dateFormat: "mm/dd/yy", showOn: "both", buttonImage: themepath+"/expertusone-internals/images/calendar_icon.JPG", buttonImageOnly: true });
							}else{
								$('#overall_completion_date_'+uniqueId).datepicker({dateFormat: "mm/dd/yy", showOn: "button", buttonImage: "sites/all/themes/core/expertusone/expertusone-internals/images/calendar_icon.JPG", buttonImageOnly: true });
					        }
						}
					},

					fillRegistrationDate : function(uniqueId, uniqueId2){
						var overallDate = $('#overall_registration_date_'+uniqueId2).val();
						$('input[name="hidden_registration_date_'+uniqueId+'"]').val(overallDate);
						$('#registration_date_container_'+uniqueId).hide();
					},

					registrationDateQTip : function(uniqueId,entityId, isPastClass, sessionStartdate){
						$('.catalog-pub-add-list').hide();
						if(entityId!='' && entityId!=undefined){
							if(isPastClass) {
								$('#registration_date_container_'+uniqueId).show();
								$('#overall_registration_date'+uniqueId).datepicker("destroy");
								this.currTheme = Drupal.settings.ajaxPageState.theme;
								if(this.currTheme == 'expertusoneV2'){
									if($.trim(sessionStartdate)){
										$('#overall_registration_date_'+uniqueId).datepicker({maxDate:new Date(sessionStartdate), dateFormat: "mm/dd/yy", showOn: "both", buttonImage: themepath+"/expertusone-internals/images/calendar_icon.JPG", buttonImageOnly: true });
									}
									else{
										$('#overall_registration_date_'+uniqueId).datepicker({dateFormat: "mm/dd/yy", showOn: "both", buttonImage: themepath+"/expertusone-internals/images/calendar_icon.JPG", buttonImageOnly: true });
									}
								}else{
									if($.trim(sessionStartdate)){
										$('#overall_registration_date_'+uniqueId).datepicker({maxDate:new Date(sessionStartdate), dateFormat: "mm/dd/yy", showOn: "button", buttonImage: "sites/all/themes/core/expertusone/expertusone-internals/images/calendar_icon.JPG", buttonImageOnly: true });
									}
									else{
										$('#overall_registration_date_'+uniqueId).datepicker({dateFormat: "mm/dd/yy", showOn: "button", buttonImage: "sites/all/themes/core/expertusone/expertusone-internals/images/calendar_icon.JPG", buttonImageOnly: true });
									}
								}
							}
						}else{
							this.currTheme = Drupal.settings.ajaxPageState.theme;
							if(this.currTheme =='expertusoneV2'){
								$('#overall_registration_date_'+uniqueId).datepicker({dateFormat: "mm/dd/yy", showOn: "both", buttonImage: themepath+"/expertusone-internals/images/calendar_icon.JPG", buttonImageOnly: true });
							}else{
								$('#overall_registration_date_'+uniqueId).datepicker({dateFormat: "mm/dd/yy", showOn: "button", buttonImage: "sites/all/themes/core/expertusone/expertusone-internals/images/calendar_icon.JPG", buttonImageOnly: true });
					        }
						}
					},

					getBubblePopup : function(qtipObj) {
						try{						
							closeQtip('');					
							var popupId 	= qtipObj.popupDispId;	
							var qtipLen 	= this.qtipLenth;
							var inArrQtip = $.inArray(popupId, this.qtipLoadSet);
							this.qtipLoadSet[qtipLen] = popupId;
							this.qtipLenth = this.qtipLenth+1;
							var entityType = qtipObj.entityType;
							var courseId = qtipObj.courseId!=undefined?qtipObj.courseId:'';
							var url 			  = resource.base_host+'?q='+qtipObj.url; // resource.base_host+'?q=administration/catalogaccess/33/cre_sys_obt_crs';
							var wBubble 		  = qtipObj.wBubble;//700; //Bubble Popup Width
							var hBubble 		  = qtipObj.hBubble;//300; //Bubble Popup Height
							var setwBubble        = wBubble-20;
							var setBtmLeft        = (setwBubble-104)/2;
							var topElements = '<span id="popup_container_'+popupId+'"><table cellspacing="0" cellpadding="0" width="'+setwBubble+'px" height="'+hBubble+'px" id="bubble-face-table"><tbody><tr><td class="bubble-tl"></td><td class="bubble-t"></td><td class="bubble-tr"></td></tr><tr><td class="bubble-cl"></td><td valign="top" class="bubble-c">';
							var bottomElements ='</td><td class="bubble-cr"></td></tr><tr><td class="bubble-bl"></td><td class="bubble-b"><table cellspacing="0" width="100%" cellpadding="0"><tbody><tr><td class="bubble-blt" style="width:'+setBtmLeft+'px"></td><td class="bubble-blm"></td><td class="bubble-blr" style="width:'+setBtmLeft+'px"></td></tr></tbody></table></td><td class="bubble-br"></td></tr></tbody></table>';
							var tipPos = qtipObj.tipPosition;
							var catalogVisibleId = qtipObj.catalogVisibleId;
							var mLeft = 0;
							var tipPosition;
							var messageStyle = '';
							var bwidth = '';
							var crTheme = Drupal.settings.ajaxPageState.theme;
							switch(qtipObj.tipPosition) {
								case 'bottomRight':
									wBubble 		  = qtipObj.wBubble;//700; //Bubble Popup Width
									hBubble 		  = qtipObj.hBubble;//300; //Bubble Popup Height
									setwBubble        = wBubble-20;
									setBtmLeft        = (setwBubble-104)/2;
									mLeft			  = (qtipObj.catalogVisibleId.indexOf('editclass')>0)?45:(qtipObj.catalogVisibleId.indexOf('AttachCrsIdqtip')>0)?58:(qtipObj.catalogVisibleId.indexOf('AttachNotification_edittemplate')>0 || qtipObj.catalogVisibleId.indexOf('AttachCertification_edittemplate')>0)?49:62;
									bwidth            = (qtipObj.catalogVisibleId.indexOf('addusers')>0)?wBubble:Math.round((wBubble/2)/5);
									setBtmLeft        = (qtipObj.catalogVisibleId.indexOf('addusers')>0)?'214':(bwidth*6)+12;
									setBtmLeft        = (qtipObj.catalogVisibleId.indexOf('editclass')>0)?'373':(qtipObj.catalogVisibleId.indexOf('addclass')>0)?'373':(qtipObj.catalogVisibleId.indexOf('AttachCrsIdqtip')>0)?'168':(bwidth*6)+12;
									if(crTheme == 'expertusoneV2') {
									  setBtmLeft        = (qtipObj.catalogVisibleId.indexOf('addusers')>0)?'172':(bwidth*6)+12;
									  setBtmLeft        = (qtipObj.catalogVisibleId.indexOf('editclass')>0)?'373':(qtipObj.catalogVisibleId.indexOf('addclass')>0)?'373':(qtipObj.catalogVisibleId.indexOf('AttachCrsIdqtip')>0)?'168':(bwidth*6)+12;
									}
									/*if (navigator.userAgent.indexOf("Chrome")>0){
									  setBtmLeft        = (qtipObj.catalogVisibleId.indexOf('editclass')>0)?'373':(bwidth*6)+12;
									}else{

									}*/
									//Set buble tool tip arrow position
									tipPosition       = (qtipObj.tipPosition) ? qtipObj.tipPosition : 'bottomMiddle';
									topElements = '<span id="popup_container_'+popupId+'"><table cellspacing="0" cellpadding="0" width="'+setwBubble+'px" height="'+hBubble+'px" id="bubble-face-table"><tbody><tr><td class="bubble-tl"></td><td class="bubble-t"></td><td class="bubble-tr"></td></tr><tr><td class="bubble-cl"></td><td valign="top" class="bubble-c">';
									bottomElements ='</td><td class="bubble-cr"></td></tr><tr><td class="bubble-bl"></td><td class="bubble-b"><table cellspacing="0" width="100%" cellpadding="0"><tbody><tr><td class="bubble-blt" style="width:'+setBtmLeft+'px"></td><td class="bubble-blr" style="width:'+setBtmLeft+'px"></td><td class="bubble-blm"></td></tr></tbody></table></td><td class="bubble-br"></td></tr></tbody></table>';
									$("#"+popupId).parent().parent().parent().parent().removeClass("qtip-access-control");
								break;
								case 'bottomCorner':
									wBubble 		  = qtipObj.wBubble;//700; //Bubble Popup Width
									hBubble 		  = qtipObj.hBubble;//300; //Bubble Popup Height
									setwBubble        = wBubble-20;
									if(crTheme != 'expertusoneV2') {
										if (navigator.userAgent.indexOf("Chrome")>0){
											setBtmLeft        = (qtipObj.catalogVisibleId.indexOf('Accessqtip')>0 && entityType=='cre_sys_obt_cls')?(wBubble==780?374:344):(qtipObj.catalogVisibleId.indexOf('Accessqtip')>0 && (entityType=='cre_sys_obt_anm' || entityType=='cre_sys_obt_not'))?7:(qtipObj.catalogVisibleId.indexOf('listvaledit')>0)?191:(qtipObj.catalogVisibleId.indexOf('Accessqtip')>0)?451:451;
											setBtmRight       = (qtipObj.catalogVisibleId.indexOf('Accessqtip')>0 && entityType=='cre_sys_obt_cls')?281:(qtipObj.catalogVisibleId.indexOf('Accessqtip')>0 && (entityType=='cre_sys_obt_anm' || entityType=='cre_sys_obt_not'))?((entityType=='cre_sys_obt_not')?650:651):(qtipObj.catalogVisibleId.indexOf('listvaledit')>0)?16:(qtipObj.catalogVisibleId.indexOf('Accessqtip')>0)?175:175;
											mLeft			  = (qtipObj.catalogVisibleId.indexOf('Accessqtip')>0 && entityType=='cre_sys_obt_cls')?325:(qtipObj.catalogVisibleId.indexOf('Accessqtip')>0 && (entityType=='cre_sys_obt_anm' || entityType=='cre_sys_obt_not'))?((entityType=='cre_sys_obt_not')?712:712):(qtipObj.catalogVisibleId.indexOf('listvaledit')>0)?59:218;
										}else{
											setBtmLeft        = (qtipObj.catalogVisibleId.indexOf('Accessqtip')>0 && entityType=='cre_sys_obt_cls')?(wBubble==780?374:344):(qtipObj.catalogVisibleId.indexOf('Accessqtip')>0 && (entityType=='cre_sys_obt_anm' || entityType=='cre_sys_obt_not'))?6:(qtipObj.catalogVisibleId.indexOf('listvaledit')>0)?191:(qtipObj.catalogVisibleId.indexOf('Accessqtip')>0)?458:451;
											setBtmRight       = (qtipObj.catalogVisibleId.indexOf('Accessqtip')>0 && entityType=='cre_sys_obt_cls')?283:(qtipObj.catalogVisibleId.indexOf('Accessqtip')>0 && (entityType=='cre_sys_obt_anm' || entityType=='cre_sys_obt_not'))?((entityType=='cre_sys_obt_not')?535:619):(qtipObj.catalogVisibleId.indexOf('listvaledit')>0)?16:(qtipObj.catalogVisibleId.indexOf('Accessqtip')>0)?178:175;
											mLeft			  = (qtipObj.catalogVisibleId.indexOf('Accessqtip')>0 && entityType=='cre_sys_obt_cls')?325:(qtipObj.catalogVisibleId.indexOf('Accessqtip')>0 && (entityType=='cre_sys_obt_anm' || entityType=='cre_sys_obt_not'))?((entityType=='cre_sys_obt_not')?712:712):(qtipObj.catalogVisibleId.indexOf('listvaledit')>0)?59:218;
										}
									}else {
										if (navigator.userAgent.indexOf("Chrome")>0){
											setBtmLeft        = (qtipObj.catalogVisibleId.indexOf('Accessqtip')>0 && entityType=='cre_sys_obt_cls')?(wBubble==780?374:344):(qtipObj.catalogVisibleId.indexOf('Accessqtip')>0 && (entityType=='cre_sys_obt_anm' || entityType=='cre_sys_obt_not'))?7:(qtipObj.catalogVisibleId.indexOf('listvaledit')>0)?191:(qtipObj.catalogVisibleId.indexOf('Accessqtip')>0)?472:451;
											setBtmRight       = (qtipObj.catalogVisibleId.indexOf('Accessqtip')>0 && entityType=='cre_sys_obt_cls')?281:(qtipObj.catalogVisibleId.indexOf('Accessqtip')>0 && (entityType=='cre_sys_obt_anm' || entityType=='cre_sys_obt_not'))?((entityType=='cre_sys_obt_not')?650:651):(qtipObj.catalogVisibleId.indexOf('listvaledit')>0)?16:(qtipObj.catalogVisibleId.indexOf('Accessqtip')>0)?185:175;
											mLeft			  = (qtipObj.catalogVisibleId.indexOf('Accessqtip')>0 && entityType=='cre_sys_obt_cls')?325:(qtipObj.catalogVisibleId.indexOf('Accessqtip')>0 && (entityType=='cre_sys_obt_anm' || entityType=='cre_sys_obt_not'))?((entityType=='cre_sys_obt_not')?712:712):(qtipObj.catalogVisibleId.indexOf('listvaledit')>0)?59:218;
										}else{
											setBtmLeft        = (qtipObj.catalogVisibleId.indexOf('Accessqtip')>0 && entityType=='cre_sys_obt_cls')?(wBubble==780?374:344):(qtipObj.catalogVisibleId.indexOf('Accessqtip')>0 && (entityType=='cre_sys_obt_anm' || entityType=='cre_sys_obt_not'))?6:(qtipObj.catalogVisibleId.indexOf('listvaledit')>0)?191:(qtipObj.catalogVisibleId.indexOf('Accessqtip')>0)?472:451;
											setBtmRight       = (qtipObj.catalogVisibleId.indexOf('Accessqtip')>0 && entityType=='cre_sys_obt_cls')?283:(qtipObj.catalogVisibleId.indexOf('Accessqtip')>0 && (entityType=='cre_sys_obt_anm' || entityType=='cre_sys_obt_not'))?((entityType=='cre_sys_obt_not')?651:619):(qtipObj.catalogVisibleId.indexOf('listvaledit')>0)?16:(qtipObj.catalogVisibleId.indexOf('Accessqtip')>0)?185:175;
											mLeft			  = (qtipObj.catalogVisibleId.indexOf('Accessqtip')>0 && entityType=='cre_sys_obt_cls')?325:(qtipObj.catalogVisibleId.indexOf('Accessqtip')>0 && (entityType=='cre_sys_obt_anm' || entityType=='cre_sys_obt_not'))?((entityType=='cre_sys_obt_not')?712:712):(qtipObj.catalogVisibleId.indexOf('listvaledit')>0)?59:218;
										}
									}

									//Set buble tool tip arrow position
									//var tipPosition       = (qtipObj.tipPosition) ? qtipObj.tipPosition : 'bottomMiddle';
									tipPosition       = 'bottomRight';
									topElements = '<span id="popup_container_'+popupId+'"><table cellspacing="0" cellpadding="0" width="'+setwBubble+'px" height="'+hBubble+'px" id="bubble-face-table"><tbody><tr><td class="bubble-tl"></td><td class="bubble-t"></td><td class="bubble-tr"></td></tr><tr><td class="bubble-cl"></td><td valign="top" class="bubble-c">';
									bottomElements ='</td><td class="bubble-cr"></td></tr><tr><td class="bubble-bl"></td><td class="bubble-b"><table cellspacing="0" width="100%" cellpadding="0"><tbody><tr><td class="bubble-blt" style="width:'+setBtmLeft+'px"></td><td class="bubble-blm"></td><td class="bubble-blr" style="width:'+setBtmRight+'px"></td></tr></tbody></table></td><td class="bubble-br"></td></tr></tbody></table>';
								break;
								case 'rightBottom':
									//alert("right bottom");
									wBubble 		  = qtipObj.wBubble;//700; //Bubble Popup Width
									hBubble 		  = qtipObj.hBubble;//300; //Bubble Popup Height
									setwBubble        = wBubble-20;
									//setRightTop        = (hBubble-104)/2;
									tipPosition       = 'rightBottom';
									topElements = '<span id="popup_container_'+popupId+'"><table cellspacing="0" cellpadding="0" width="'+setwBubble+'px" height="'+hBubble+'px" id="bubble-face-table"><tbody><tr><td class="bubble-tl"></td><td class="bubble-t"></td><td class="bubble-tr"></td></tr><tr><td class="bubble-cl"></td><td valign="top" class="bubble-c">';
									bottomElements ='</td><td class="bubble-cr-empty"><table cellspacing="0" width="100%" height="260" cellpadding="0"><tbody><tr><td class="bubble-brt" style="height: 169px"></td></tr><tr><td class="bubble-brm"></td></tr><tr><td class="bubble-brb" style="height:30px"></td></tr></tbody></table></td></tr><tr><td class="bubble-bl"></td><td class="bubble-bm"></td><td class="bubble-br"></td></tr></tbody></table>';
								break;
								case 'bottomLeft' :
									wBubble 		  = qtipObj.wBubble;//700; //Bubble Popup Width
									hBubble 		  = qtipObj.hBubble;//300; //Bubble Popup Height
									setwBubble        = wBubble-20;
									bwidth            = (qtipObj.catalogVisibleId.indexOf('listvalues')>0)?wBubble:Math.round((wBubble/2)/5);
									if(crTheme != 'expertusoneV2') {
									setBtmLeft        = (qtipObj.catalogVisibleId.indexOf('listvalues')>0)?'17':bwidth+2;
									setBtmRight       = (qtipObj.catalogVisibleId.indexOf('listvalues')>0)?'191':(bwidth*6)+12;
									setBtmMiddle	  = (qtipObj.catalogVisibleId.indexOf('listvalues')>0)?'64':bwidth+2;
									 if (navigator.userAgent.indexOf("Chrome")>0){
										setBtmRight       = (qtipObj.catalogVisibleId.indexOf('listvalues')>0)?'203':(bwidth*6)+12;
									 }
									}
									else{
										setBtmLeft        = (qtipObj.catalogVisibleId.indexOf('listvalues')>0)?'14':bwidth+2;
										setBtmRight       = (qtipObj.catalogVisibleId.indexOf('listvalues')>0)?'155':(bwidth*6)+12;
										setBtmMiddle	  = (qtipObj.catalogVisibleId.indexOf('listvalues')>0)?'52':bwidth+2;
										if (navigator.userAgent.indexOf("Chrome")>0){
											setBtmRight       = (qtipObj.catalogVisibleId.indexOf('listvalues')>0)?'194':(bwidth*6)+12;
										}
									}
									mLeft			  = (qtipObj.catalogVisibleId.indexOf('listvalues')>0)?-63:-110;
									//Set buble tool tip arrow position
									messageStyle      =  (qtipObj.catalogVisibleId.indexOf('listvalues')>0)?"margin-left: -120px;":'';
									tipPosition       = 'bottomLeft';
									topElements = '<span id="popup_container_'+popupId+'"><table cellspacing="0" cellpadding="0" width="'+setwBubble+'px" height="'+hBubble+'px" id="bubble-face-table"><tbody><tr><td class="bubble-tl"></td><td class="bubble-t"></td><td class="bubble-tr"></td></tr><tr><td class="bubble-cl"></td><td valign="top" class="bubble-c">';
									bottomElements ='</td><td class="bubble-cr"></td></tr><tr><td class="bubble-bl"></td><td class="bubble-b"><table cellspacing="0" width="100%" cellpadding="0"><tbody><tr><td class="bubble-blt" style="width:'+setBtmLeft+'px"></td><td class="bubble-blm" style="width:'+setBtmMiddle+'px"></td><td class="bubble-blr" style="width:'+setBtmRight+'px"></td></tr></tbody></table></td><td class="bubble-br"></td></tr></tbody></table>';
									$("#"+popupId).parent().parent().parent().parent().removeClass("qtip-access-control");
									break;
								default:
									wBubble 		  = qtipObj.wBubble;//700; //Bubble Popup Width
									hBubble 		  = qtipObj.hBubble;//300; //Bubble Popup Height
									setwBubble        = wBubble-20;
									setBtmLeft        = (setwBubble-104)/2;
									//Set buble tool tip arrow position
									tipPosition       = (qtipObj.tipPosition) ? qtipObj.tipPosition : 'bottomMiddle';
									topElements = '<span id="popup_container_'+popupId+'"><table cellspacing="0" cellpadding="0" width="'+setwBubble+'px" height="'+hBubble+'px" id="bubble-face-table"><tbody><tr><td class="bubble-tl"></td><td class="bubble-t"></td><td class="bubble-tr"></td></tr><tr><td class="bubble-cl"></td><td valign="top" class="bubble-c">';
									bottomElements ='</td><td class="bubble-cr"></td></tr><tr><td class="bubble-bl"></td><td class="bubble-b"><table cellspacing="0" width="100%" cellpadding="0"><tbody><tr><td class="bubble-blt" style="width:'+setBtmLeft+'px"></td><td class="bubble-blm"></td><td class="bubble-blr" style="width:'+setBtmLeft+'px"></td></tr></tbody></table></td><td class="bubble-br"></td></tr></tbody></table>';
									$("#"+popupId).parent().parent().parent().parent().removeClass("qtip-access-control");

							}
							if(popupId == "qtip_addlistvalues_visible_disp_0_cre_usr_jtl" || popupId == "qtip_addlistvalues_visible_disp_0_cre_usr_dpt" || popupId == "qtip_addlistvalues_visible_disp_0_cre_usr_etp"  || popupId == "qtip_addlistvalues_visible_disp_0_cre_usr_jrl" || popupId == "qtip_addlistvalues_visible_disp_0_cre_usr_ptp"){
								$('.page-administration-people-setup #add_lst_pg_next,.page-administration-people-setup #add_lst_pg_previous,.page-administration-people-setup #add_lst_pg_last,.page-administration-people-setup #add_lst_pg_first,.page-administration-people-setup #add_lst_pg_txtfld,.page-administration-people-setup #listvalues-autocomplete,.page-administration-people-setup #search_listvalues').attr('style','pointer-events: none');								
							}
							try{
								$('#'+popupId).qtip("destroy");
							}catch(e){
								//Nothing to do
							}
							$('#'+qtipObj.catalogVisibleId).closest(".qtip").remove();
							//IMPORTANT !!! qtip-child, qtip-parent -- Do not set or use this class anywhere else -- this is meant to be for qtip issue fixes

							 var qtipClass = (qtipObj.qtipClass) ? qtipObj.qtipClass : 'qtip-child';
							 if(qtipSubClass != null) {
								 var qtipSubClass = (qtipObj.qtipSubClass) ? qtipObj.qtipSubClass : '';
								 qtipClass = (qtipSubClass != null) ? qtipClass+" "+qtipSubClass : qtipClass;
							 }
							 if(!document.getElementById(qtipObj.catalogVisibleId)) {
								if((!document.getElementById("popup_container_"+popupId))) {
									$('#'+popupId).qtip({
										overwrite: false, // Make sure another tooltip can't overwrite this one without it being explicitly destroyed
										content: {
										 	text: "<div style='min-height:75px;' id='"+qtipObj.catalogVisibleId+"'><div id='"+qtipObj.catalogVisibleId+"_disp' style='margin-left:"+mLeft+"px;min-height:75px;'>&nbsp;</div></div>",
										 	title: {
												      text: ' ',
												      button: '<div id="'+qtipObj.catalogVisibleId+'_close" class="admin-bubble-close" onclick="closeQtyp(\''+qtipObj.catalogVisibleId+'\',\''+courseId+'\')"> </div>'
											   	   }
											},
										   api:{
												beforeShow: function(){
													//	Hide qtip till the content load
													var qtupActive = $("#"+qtipObj.catalogVisibleId).closest(".qtip-active");
													$('#'+qtipObj.catalogVisibleId+"_close").css('visibility','hidden');
													$(qtupActive).find('.qtip-tip').css('visibility','hidden');
												},
										 		onShow: function() {
													// Hide qtip till the content load
													var qtupActive = $("#"+qtipObj.catalogVisibleId).closest(".qtip-active");
													$('#'+qtipObj.catalogVisibleId+"_close").css('visibility','hidden');
													$(qtupActive).find('.qtip-tip').css('visibility','hidden');
													$('.qtip').each(function(){
														var tmp = this;
														if($(tmp).find('#'+qtipObj.catalogVisibleId).each(function(){
															if($(tmp).attr('class').indexOf('qtip-active')<0){
																try{
																	$('#'+popupId).qtip("destroy");
																	$(this).remove();
																}catch(e){
																	//Nothing to do
																}
															}
														}));
													});
										 			if(tipPos != 'bottomCorner') {
								 						$("#"+catalogVisibleId).parent().parent().parent().parent().removeClass("qtip-access-control");

								 					}
													if(qtipObj.catalogVisibleId.indexOf('AttachNotification_edittemplate')>0 || qtipObj.catalogVisibleId.indexOf('AttachCertification_edittemplate')>0 || qtipObj.catalogVisibleId.indexOf('AttachCertification_addtemplate')>0 || qtipObj.catalogVisibleId.indexOf('AttachNotification_addtemplate')>0){
														var popTop = ($('#'+popupId).offset());
														var xtop = ($.browser.msie)?110:100;
														popTop = Math.round(popTop.top)-xtop;
														$("#"+qtipObj.catalogVisibleId).parents('.qtip-active').css('top',popTop+"px");
													}
													if(qtipObj.catalogVisibleId.indexOf('MoveUsersqtip')>0 && navigator.userAgent.indexOf("Chrome")>=0 ){
														var popTop = ($('#'+popupId).offset());
														var xtop = 150;
														popTop = Math.round(popTop.top)-xtop;
														$("#"+qtipObj.catalogVisibleId).parents('.qtip-active').css('top',popTop+"px");
													}
													$("#"+qtipObj.catalogVisibleId).parents('.qtip-active').addClass(qtipClass);
								 					//IMPORTANT !!! modal-qtips-close Do not set or use this class anywhere else -- this is meant to be for qtip issue fixes
								 					$("#"+qtipObj.catalogVisibleId).parents('.qtip-active').addClass('modal-qtips-close');
								 					$("#"+qtipObj.catalogVisibleId).parents('.qtip-active').siblings('.qtip-child').hide();
								 					if(qtipClass == "qtip-parent" || qtipClass == 'qtip-parent add-key-word-edit-list')
								 					$("#"+qtipObj.catalogVisibleId).parents('.qtip-active').siblings('.qtip-parent').hide();

													//if(!document.getElementById("paintContent"+popupId)) {
								 					if(1==1){
														EXPERTUS_SMARTPORTAL_AbstractDetailsWidget.createLoader(qtipObj.catalogVisibleId+"_disp");
														var loadPos=0;
														if(tipPosition == 'rightBottom') {
									 						$(qtupActive).find('.qtip').addClass('qtip-access-control');
															$(qtupActive).find('.qtip-tip').attr('style','height: 64px');
															$(qtupActive).find('.qtip-tip').css('background','url("/sites/all/themes/core/expertusone/expertusone-internals/images/bubble_arrow_point_right.png") no-repeat -1px 3px');
															$(qtupActive).find('.qtip-tip').css('bottom','79px');
															$(qtupActive).find('.qtip-tip').css('left','638px');
															$(qtupActive).find('.qtip-tip').css('position','absolute');
															$('#'+qtipObj.catalogVisibleId+"_close").css('top','');
														}
														if(tipPosition == 'bottomRight' && mLeft!=0) {
															//$('.qtip-tip').css('right','-35px');
									 						var leftPos=0;
									 						var rightPos="0px";
									 						var bottomPos="0px";
									 						var zIndex;
									 						var crTheme = Drupal.settings.ajaxPageState.theme;
									 						var bnrAccleftPos = (crTheme == 'expertusoneV2') ? 672 : 663;
									 						this.currTheme = Drupal.settings.ajaxPageState.theme;

									 						if(qtipObj.tipPosition == 'bottomCorner'){ // Access control fix
									 							if(qtipObj.catalogVisibleId.indexOf('Accessqtip')>0 && entityType=='cre_sys_obt_cls'){ // Class Access control
									 								loadPos = 520;
									 								leftPos = 308;
									 								rightPos = "-12px";
									 							}else if((qtipObj.catalogVisibleId.indexOf('Accessqtip')>0) && (entityType=='cre_sys_obt_anm' || entityType=='cre_sys_obt_not')){ // Banner / Announcement Access control
									 								loadPos = 715;
									 								leftPos = (crTheme == 'expertusoneV2') ? ((entityType=='cre_sys_obt_not')?693:692) : 692;;
									 								rightPos = (entityType=='cre_sys_obt_not')?"-31px":"-30px";
									 							}else if((qtipObj.catalogVisibleId.indexOf('Accessqtip')>0) && entityType!='cre_sys_obt_crs' && crTheme == 'expertusoneV2'){ // TP Access
									 								loadPos = 430;
									 								leftPos = 205;
									 								rightPos = "-6px";
									 							}else {
									 								loadPos = 430;
									 								leftPos = 201;
									 								rightPos = "-12px";
									 							}
									 						}else{ //class qtip position fix
									 							if(qtipObj.catalogVisibleId.indexOf('editclass')>0){
									 								loadPos = 380;
									 								leftPos = 28;
									 								rightPos = "-14px";
									 							}else if(qtipObj.catalogVisibleId.indexOf('AttachCrsIdqtip')>0){
									 								loadPos = 380;
									 								leftPos = 40;
									 								rightPos = "-27px";
									 							}else if(qtipObj.catalogVisibleId.indexOf('AttachNotification_edittemplate')>0){
									 								loadPos = 380;
									 								leftPos = 30;
									 								rightPos = "-18px";
									 								zIndex ="100";
									 								bottomPos = (this.currTheme == "expertusoneV2") ? "0px" : "-64px";
									 							}else if(qtipObj.catalogVisibleId.indexOf('AttachNotification_addtemplate')>0){
									 								loadPos = 380;
									 								leftPos = 44;
									 								rightPos = "-31px";
									 								zIndex ="100";
									 								bottomPos = (this.currTheme == "expertusoneV2") ? "0px" : "-64px";
									 							}else if(qtipObj.catalogVisibleId.indexOf('AttachCertification_edittemplate')>0){
									 								loadPos = 380;
									 								leftPos = 30;
									 								rightPos = "-18px";
									 								zIndex ="100";
									 							}else if(qtipObj.catalogVisibleId.indexOf('AttachIdqtip_addusers')>0){
									 								loadPos = 380;
									 								leftPos = 65;
									 								zIndex ="100";
									 								rightPos = "-41px";
									 							}else if(qtipObj.catalogVisibleId.indexOf('listvalues')>0){
									 								zIndex ="100";
									 							}else if(qtipObj.catalogVisibleId.indexOf('listvalpeoedit')>0){
									 								zIndex ="100";
									 							}else{
									 								loadPos = 380;
									 								leftPos = 44;
									 								rightPos = "-31px";
									 							}
									 						}

															$(qtupActive).find('.qtip').addClass('qtip-access-control');
															$(qtupActive).find('.qtip-tip').css('right',rightPos);
															$('#'+qtipObj.catalogVisibleId+"_close").css('left',leftPos);
															if(qtipObj.catalogVisibleId.indexOf('AttachNotification_edittemplate')>0 || qtipObj.catalogVisibleId.indexOf('AttachNotification_addtemplate')>0){
																$(qtupActive).find('.qtip-tip').css('bottom',bottomPos);
																$(qtupActive).find('.qtip-tip').css('z-index',zIndex);
																var isAtLeastIE11 = !!(navigator.userAgent.match(/Trident/) && !navigator.userAgent.match(/MSIE/))? true : false;
																if(this.currTheme == "expertusoneV2" && $.browser.msie && parseInt($.browser.version, 10)=='10' || this.currTheme == "expertusoneV2" && isAtLeastIE11==1 ){
																	$(".qtip-button .admin-bubble-close").css({"top":"-2px"});
																	$(qtupActive).find('.qtip-tip').css('bottom','-8px');
																}
                                                               if(navigator.userAgent.indexOf("Safari")!=-1){
																	$(qtupActive).find('.qtip-tip').css('bottom','-8px');
																}
															}
															if(qtipObj.catalogVisibleId.indexOf('AttachCertification_edittemplate')>0 || qtipObj.catalogVisibleId.indexOf('AttachCertification_addtemplate')>0){
																$(qtupActive).find('.qtip-tip').css('z-index',zIndex);
																if(this.currTheme == "expertusoneV2" && $.browser.msie && parseInt($.browser.version, 10)=='10'){
																	$(".qtip-button .admin-bubble-close").css({"top":"-2px"});
																}
																if(navigator.userAgent.indexOf("Safari")!=-1){
																	$(qtupActive).find('.qtip-tip').css('bottom','-8px');
																}
															}
															if(qtipObj.catalogVisibleId.indexOf('AttachIdqtip_addusers')>0){
																$(qtupActive).find('.qtip-tip').css('z-index',zIndex);
															}
															if(qtipObj.catalogVisibleId.indexOf('listvalues')>0){
																$(qtupActive).find('.qtip-tip').css('z-index',zIndex);
																if(this.currTheme == "expertusoneV2"){
																if($.browser.msie && parseInt($.browser.version, 10)=='10'){
																	$(qtupActive).find('.qtip-tip').css('bottom','1px');
																	$(".qtip-button .admin-bubble-close").css({"left":"43px","top":"-4px"});
																}else if($.browser.msie && parseInt($.browser.version, 10)=='9'){
																	$(qtupActive).find('.qtip-tip').css('bottom','0');
																	$(".qtip-button .admin-bubble-close").css({"left":"43px","top":"-4px"});
																}else if($.browser.msie && parseInt($.browser.version, 10)=='8'){
																	$(qtupActive).find('.qtip-tip').css({"bottom":"41px","right":"20px"});
																	$(".qtip-button .admin-bubble-close").css({"left":"43px","top":"-3px"});
																}else{
																	$(qtupActive).find('.qtip-tip').css('right','-31px');
																	$(".qtip-button .admin-bubble-close").css({"left":"44px"});
																}
																}else{
																	if($.browser.msie && parseInt($.browser.version, 10)=='10'|| $.browser.msie && parseInt($.browser.version, 10)=='9'){
																		$(qtupActive).find('.qtip-tip').css({'bottom':'0','right':'-31px'});
																		$(".qtip-button .admin-bubble-close").css({"left":"43px","top":"-4px"});
																	}else if($.browser.msie && parseInt($.browser.version, 10)=='8'){
																		$(qtupActive).find('.qtip-tip').css({"bottom":"40px","right":"19px"});
																		$(".qtip-button .admin-bubble-close").css({"left":"43px","top":"-3px"});
																	}else{
																		$(qtupActive).find('.qtip-tip').css('right','-31px');
																		$(".qtip-button .admin-bubble-close").css({"left":"44px"});
																	}

																}
															}

														}else if(tipPosition == 'bottomLeft' && mLeft!=0){
															var leftPos=0;
									 						var rightPos="0px";
															if(qtipObj.catalogVisibleId.indexOf('MoveUsersqtip')>0){
																loadPos = 380;
								 								leftPos = 407;
								 								rightPos = "-14px";
								 								if(this.currTheme != "expertusoneV2" && $.browser.msie && parseInt($.browser.version, 10)=='9'){
																	$(qtupActive).find('.qtip-tip').css('bottom','0');
																}
								 								if(this.currTheme != "expertusoneV2" && $.browser.msie && parseInt($.browser.version, 10)=='8'){
																	$(qtupActive).find('.qtip-tip').css('bottom','40px');
																	$(qtupActive).find('.qtip-tip').css('margin-bottom','38px');
																}
								 								if(this.currTheme = "expertusoneV2" && $.browser.msie && parseInt($.browser.version, 10)=='10'){
																	$(qtupActive).find('.qtip-tip').css('bottom','0');
																}
								 								$(qtupActive).find('.qtip-tip').css('right',rightPos).css("left","13px");
															}else if(qtipObj.catalogVisibleId.indexOf('listvalues')>0){
																leftPos = "-80px";
																$(qtupActive).find('.qtip-tip').css('left','16px');
																if (navigator.userAgent.indexOf("Chrome")>0){
																	$(qtupActive).find('.qtip-tip').css('left','13px');
																}
																if($.browser.msie && parseInt($.browser.version, 10)=='8'){
																	$(qtupActive).find('.qtip-tip').css('margin-bottom','38px');
																}
																if($.browser.msie && parseInt($.browser.version, 10)=='9' || $.browser.msie && parseInt($.browser.version, 10)=='10'){
																	$(qtupActive).find('.qtip-tip').css('bottom','0');
																}
															}
															//$(qtupActive).find('.qtip').addClass('qtip-access-control');
															$(qtupActive).find('.qtip-tip').css('right',rightPos);
															$('#'+qtipObj.catalogVisibleId+"_close").css('left',leftPos);
														}
														if(qtipObj.catalogVisibleId.indexOf("Access")>=0 || qtipObj.catalogVisibleId.indexOf("addclass")>=0
																|| qtipObj.catalogVisibleId.indexOf("editclass")>=0){
																$('#loaderdiv'+qtipObj.catalogVisibleId+"_disp").css('padding-left',loadPos);
														}
													   if(qtipObj.catalogVisibleId.indexOf("addclass")>=0){
														   if($.browser.msie && parseInt($.browser.version, 10)=='9' || $.browser.msie && parseInt($.browser.version, 10)=='10'){
																$(qtupActive).find('.qtip-tip').css('bottom','0');
																$(".qtip-button .admin-bubble-close").css({"left":"44px","top":"-1px"});
															}else if($.browser.msie && parseInt($.browser.version, 10)=='8'){
																$(qtupActive).find('.qtip-tip').css('bottom','40px');
																$(qtupActive).find('.qtip-tip').css('right','19px');
																$(qtupActive).find('.qtip-tip').css("margin-bottom","38px");
															}
													   }
													   if(qtipObj.catalogVisibleId.indexOf('editclass')>0){
															if($.browser.msie && parseInt($.browser.version, 10)=='8'){
																$(qtupActive).find('.qtip-tip').css('margin-bottom','76px');
																$(qtupActive).find('.qtip-tip').css('margin-right','50px');
															}
															if($.browser.msie && parseInt($.browser.version, 10)=='9' || $.browser.msie && parseInt($.browser.version, 10)=='10' ){
																$(qtupActive).find('.qtip-tip').css('bottom','0');
															}
														}
													   if(qtipObj.catalogVisibleId.indexOf('AttachNotification_edittemplate')>0){
														   if($.browser.msie && parseInt($.browser.version, 10)=='8' && this.currTheme == "expertusoneV2"){
																$(qtupActive).find('.qtip-tip').css('right','26px');
							 								}
								 						}
													   if(qtipObj.catalogVisibleId.indexOf('AttachCertification_edittemplate')>0){
														   if($.browser.msie && parseInt($.browser.version, 10)=='8' && this.currTheme == "expertusoneV2"){
																$(qtupActive).find('.qtip-tip').css('right','26px');
							 								}
														   if($.browser.msie && parseInt($.browser.version, 10)=='8' && this.currTheme != "expertusoneV2"){
																$(qtupActive).find('.qtip-tip').css('right','32px');
																$(qtupActive).find('.qtip-tip').css('bottom','32px');
							 								}
														   if($.browser.msie && parseInt($.browser.version, 10)=='10' && this.currTheme != "expertusoneV2"){
															   $(".qtip-button .admin-bubble-close").css("top","-3px");
														   }
														 }


														if(qtipObj.catalogVisibleId.indexOf('listvaledit')>0){
															$(qtupActive).find('.qtip-tip').css('right','-12px');
															$('#'+qtipObj.catalogVisibleId+"_close").css('left','40px');
														}
														var bubbleTop = $("#"+qtipObj.catalogVisibleId).closest(".qtip-active").css('top');
														bubbleTop = parseInt(bubbleTop.substring(0,bubbleTop.length-2));
														var bubblehb = $("#"+qtipObj.catalogVisibleId).css('height');
														bubblehb = parseInt(bubblehb.substring(0,bubblehb.length-2));
														if(document.getElementById('qtip_position')!=null){
															$('#qtip_position').val(qtipObj.catalogVisibleId+"#"+bubbleTop+"#"+bubblehb);
														}
											 			$.ajax({
											 				 type: "GET",
												   	         url: url,
												   	         data:  '',
												   	         success: function(data){
											 					var paintHtml = topElements+"<div id='paintContent"+popupId+"'><div id='show_expertus_message' style='"+messageStyle+"'></div>"+data.render_content_main+"</div>"+bottomElements;
											 					$.extend(true, Drupal.settings, data.drupal_settings);
											 					$("#"+qtipObj.catalogVisibleId+"_disp").html(paintHtml);
											 					EXPERTUS_SMARTPORTAL_AbstractDetailsWidget.destroyLoader(qtipObj.catalogVisibleId+"_disp");

											 					var bubbleha = $("#"+qtipObj.catalogVisibleId).css('height');
											 					bubbleha = parseInt(bubbleha.substring(0,bubbleha.length-2));
																bubbleTop = bubbleTop-(bubbleha-bubblehb);
																$("#"+qtipObj.catalogVisibleId).closest(".qtip-active").css('top',bubbleTop);
																bubblehb = $("#"+qtipObj.catalogVisibleId).css('height');
																bubblehb = parseInt(bubblehb.substring(0,bubblehb.length-2));
																if(document.getElementById('qtip_position')!=null){
																	$('#qtip_position').val(qtipObj.catalogVisibleId+"#"+bubbleTop+"#"+bubblehb);
																}
																$('#'+qtipObj.catalogVisibleId+"_close").css('visibility','visible');
																$(qtupActive).find('.qtip-tip').css('visibility','visible');
																this.currTheme = Drupal.settings.ajaxPageState.theme;
																if ($.browser.msie) {
																	if($.browser.version == 9){
																	  // Conditionally set top to 0 to fix the issue reported in ticket #0032959
																	  if (qtipObj.catalogVisibleId.indexOf('qtipAttachIdqtip') < 0 &&
																	        qtipObj.catalogVisibleId.indexOf('renderTagsId') < 0 &&
																	          qtipObj.catalogVisibleId.indexOf('renderPrintCerId') < 0 &&
																	            qtipObj.catalogVisibleId.indexOf('qtipBusinessqtip') < 0) {
																		  $('#' + qtipObj.catalogVisibleId + "_close").css('top', '0px');
																	  }
																		$(qtupActive).find('.qtip-tip').addClass('qtip-tip-ie9');
																	}
																	if($.browser.version == 10){
																		if(qtipObj.catalogVisibleId.indexOf('addclass')>=0 || qtipObj.catalogVisibleId.indexOf('editclass')>=0){
																			 $('#' + qtipObj.catalogVisibleId + "_close").css('top', '-2px');
																		}
																	}
																	if($.browser.version == 8 && (qtipObj.catalogVisibleId.indexOf('qtip_addusers_visible_disp')>0 ||
																			((qtipObj.catalogVisibleId.indexOf('Accessqtip')>0) && crTheme == 'expertusoneV2'))){
																		$('#'+qtipObj.catalogVisibleId+"_close").css('top','0px');
																	}

																	if(qtipObj.catalogVisibleId.indexOf('AttachNotification_edittemplate')>0 || qtipObj.catalogVisibleId.indexOf('AttachNotification_addtemplate')>0){
																		//var bot = ($.browser.version==7)?-8:-67;
																		if($.browser.version == 8){
																		bottomPos = (this.currTheme == "expertusoneV2") ?-5:-31;
																		rightPos = "25px";
																		$(qtupActive).find('.qtip-tip').css('bottom',bottomPos+'px');
																		$(qtupActive).find('.qtip-tip').css('right',rightPos);
																	  }else if($.browser.version == 9 || $.browser.version == 10){
																		bottomPos = (this.currTheme == "expertusoneV2") ?-8:-68;
																		$(qtupActive).find('.qtip-tip').css('bottom',bottomPos+'px');
																	  }
																	  else if($.browser.version == 10 && this.currTheme != "expertusoneV2"){
																		bottomPos = -68;
																		$(qtupActive).find('.qtip-tip').css('bottom',bottomPos+'px');
																		$(".qtip-button .admin-bubble-close").css("top","-3px");
																	 }
													        	   }
																	if(qtipObj.catalogVisibleId.indexOf('AttachCertification_edittemplate')>0 || qtipObj.catalogVisibleId.indexOf('AttachCertification_addtemplate')>0){
																		var bot = ($.browser.version==8)?-5:-8;
																		$(qtupActive).find('.qtip-tip').css('bottom',bot+'px');
																		if($.browser.version==8){
																			$('.qtip-tip').css("margin-right","6px");
																			$('.qtip-tip').css("margin-bottom","37px");
																		}
																	}
																}
																if (navigator.userAgent.indexOf("Chrome")>0) {
																	if(qtipObj.catalogVisibleId.indexOf('renderTagsId')>=0 || qtipObj.catalogVisibleId.indexOf('AttachIdqtip_visible')>0
																			|| qtipObj.catalogVisibleId.indexOf('Businessqtip_visible')>0 || qtipObj.catalogVisibleId.indexOf('renderPrintCerId') >=0){
																		$('#'+qtipObj.catalogVisibleId+"_close").css('top','-10px');
																	}
																	if(qtipObj.catalogVisibleId.indexOf('AttachNotification_edittemplate')>0 || qtipObj.catalogVisibleId.indexOf('AttachNotification_addtemplate')>0 || qtipObj.catalogVisibleId.indexOf('AttachCertification_addtemplate')>0){
																		/*--#41331 - Chorome browser qtip position fix --*/
																		bottomPos = (this.currTheme == "expertusoneV2") ? "-8px" : "-68px";
																		$(qtupActive).find('.qtip-tip').css('bottom',bottomPos);
																	}
																	if(qtipObj.catalogVisibleId.indexOf('AttachCertification_edittemplate')>0){
																		$(qtupActive).find('.qtip-tip').css('bottom','-8px');
																	}
																}
																if(qtipObj.catalogVisibleId.indexOf('AttachNotification_edittemplate')>0 || qtipObj.catalogVisibleId.indexOf('AttachNotification_addtemplate')>0 || qtipObj.catalogVisibleId.indexOf('AttachCertification_addtemplate')>0){
																	$('.bubble-blr').attr('style','width: 124px');
																}
																if(qtipObj.catalogVisibleId.indexOf('BannerAccessqtip')>0 && (Drupal.settings.ajaxPageState.theme == 'expertusoneV2')){
																	$('#'+qtipObj.catalogVisibleId+"_close").css('left','669px');
																	$(qtupActive).find('.qtip-tip').css('right','-17px');
																	if (navigator.userAgent.indexOf("Chrome")>0 || ($.browser.msie && $.browser.version == 9)) {
																		$('.bubble-blt').attr('style','width: 19px');
																		$('.bubble-blr').attr('style','width: 627px');
																	}
																}
																if(qtipObj.catalogVisibleId.indexOf('MoveUsersqtip')>0 && $.browser.msie && $.browser.version != 7){
																	$('#'+qtipObj.catalogVisibleId+"_close").css('top','0px');
																	if($.browser.version == 8){
																		$('.bubble-blt').css('width','58px');
																	}else if($.browser.version == 10 || $.browser.version == 9){
																		$('.bubble-blt').css('width','58px');
																	    $('.bubble-blm').css('width','58px');
																	    $('.bubble-blr').css('width','350px');
																	}else{
																		$('.bubble-blt').css('width','48px');
																	    $('.bubble-blr').css('width','290px');
																	}
																}
															  if(qtipObj.catalogVisibleId.indexOf('MoveUsersqtip')>0){
																  if(navigator.userAgent.indexOf("Chrome")>0 || navigator.userAgent.indexOf("Safari")!=-1){
																	$('.bubble-blt').css('width','61px');
																    $('.bubble-blr').css('width','375px');
																  }
															  }
																if(qtipObj.catalogVisibleId.indexOf('AttachIdqtip_listvalues')>0){
																	if(navigator.userAgent.indexOf("Chrome")>0){
																		$('.bubble-blt').attr('style','width: 14px');
																		$('.bubble-blr').attr('style','width: 194px');
																	}else if(navigator.userAgent.indexOf("Safari")!=-1){
																		$('.bubble-blt').attr('style','width: 17px');
																	    $('.bubble-blr').attr('style','width: 191px');
																    }
																}
																if(qtipObj.catalogVisibleId.indexOf('AttachCertification_edittemplate')>0 || qtipObj.catalogVisibleId.indexOf('AttachCertification_addtemplate')>0){
																	if(navigator.userAgent.indexOf("Chrome")>0){
																		$('.bubble-blt').attr('style','width: 131px');
																	}
																	else{
																		$('.bubble-blt').attr('style','width: 164px');
																		$('.bubble-blr').attr('style','width: 362px');
																	}
																	var isAtLeastIE11 = !!(navigator.userAgent.match(/Trident/) && !navigator.userAgent.match(/MSIE/))? true : false;
																	if(this.currTheme == "expertusoneV2" && isAtLeastIE11==1 ){
																	$(".qtip-button .admin-bubble-close").css({"top":"-2px"});
																	$(qtupActive).find('.qtip-tip').css('bottom','-8px');
																	}
																}
																if(qtipObj.catalogVisibleId.indexOf('MoveUsersqtip_visible')>0 && navigator.userAgent.indexOf("Chrome")>0){
																	$('.bubble-blt').attr('style','width: 61px');
																	$('.bubble-blr').attr('style','width: 375px');
																}
																
															if(tipPosition == 'bottomRight' && mLeft!=0) {
															if(qtipObj.catalogVisibleId.indexOf('listvalpeoedit')>0){
																leftPos = "44px";
																topPos  = "-2px";
																$(qtupActive).find('.qtip-tip').css({'z-index':zIndex,'right':'-31px'});
																$('#'+qtipObj.catalogVisibleId+"_close").css({'left':leftPos,'top':topPos});
																$('.bubble-blt').css('width','184px');
																$('.bubble-blr').css('width','0');
																$('.bubble-blm').css('width','58px');
																if(navigator.userAgent.indexOf("Chrome")>0){
																$('.bubble-blt').css('width','206px')
																}else if($.browser.version == 10 || $.browser.version == 9){
																$(qtupActive).find('.qtip-tip').css("bottom","0");
																$('.bubble-blt').css('width','185px');
																}
																
															}}
																/*if((qtipObj.catalogVisibleId.indexOf('AttachNotification_edittemplate')>0 || qtipObj.catalogVisibleId.indexOf('AttachNotification_addtemplate')>0) &&
																		$.browser.msie ){
																	$('#edit-subject').focus();
																}*/
																// Fix for 0014517: Issue in Class Admin while adding multiple classes - Added by Vincent July 30, 2012
																if(qtipObj.catalogVisibleId.indexOf('addclass')>=0 || qtipObj.catalogVisibleId.indexOf('editclass')>=0
																		|| (qtipObj.catalogVisibleId.indexOf('AttachNotification_edittemplate')) || (qtipObj.catalogVisibleId.indexOf('AttachCertification_edittemplate'))){
																		
																	var tipTop = $('#'+qtipObj.catalogVisibleId).offset().top;
																	var dScrollTop = $("#modal-content").scrollTop();
																	if(tipTop<=0){
																		var toScroll=dScrollTop-Math.abs(tipTop);
																		$("#modal-content").scrollTop(toScroll);
																		bubbleTop=bubbleTop-tipTop;
																		bubbleha = $("#"+qtipObj.catalogVisibleId).css('height');
													 					bubbleha = parseInt(bubbleha.substring(0,bubbleha.length-2));
																		bubbleTop = bubbleTop-(bubbleha-bubblehb);
																		$("#"+qtipObj.catalogVisibleId).closest(".qtip-active").css('top',bubbleTop);
																	}
																}
																Drupal.attachBehaviors();
											 					bubbleha = $("#"+qtipObj.catalogVisibleId).css('height');
											 					bubbleha = parseInt(bubbleha.substring(0,bubbleha.length-2));
																bubbleTop = bubbleTop-(bubbleha-bubblehb);
																$("#"+qtipObj.catalogVisibleId).closest(".qtip-active").css('top',bubbleTop);
											 					vtip();
											 					if(data.status_message != '' && data.cloned != 0){
											 						$("#bubble-face-table #show_expertus_message").html(data.status_message);
											 					}
										   	                 }
											   			});
											 			//remove style attr border and background to add/edit qtip
											 			$('.qtip-contentWrapper,.qtip-title').each(function(){
															$(this).removeAttr("style");
															$('.qtip-wrapper,.qtip-content').css("overflow","visible");
															if($.browser.version == 8){
																$('.qtip-content').css("padding-bottom","43px");
																if(qtipObj.catalogVisibleId.indexOf('AttachIdqtip_listvalues')>0)
																$('.qtip-tip').css("margin-bottom","76px");
															}
															$('.qtip').css("padding-bottom","24px");
															$(qtupActive).find('.qtip-tip').css("margin-left","-33px");
										          	    });
										 			}
									         }
									      },
									     show:{
											when:{
													event:'click',
													target:$("#"+popupId)
												},
											ready: true // Needed to make it show on first mouseover event
											//effect:'slide'
										 },
										 hide: {
												when:{
										   			event:'',
										   			target:''
												}
										//effect:'slide'
										},
										position: {
										    corner:{
										    	   	target: 'topMiddle',
										    	   	tooltip: tipPosition
										    	  }
										},
										style: {
											width:wBubble,
											height:hBubble,
											background: 'none',
											color: '#333333',
												tip: {
										         corner: tipPosition
												}
									   }
								 });
							}
						}
					}catch(sp){
						//alert(sp.toString());
					}
				},
				getQtipDiv : function(qtipObj,isVCSession,event) {
					var xCoordinate ='';
					var yCoordinate ='';
					var popupId 	= qtipObj.popupDispId;
					var qtipLen 	= this.qtipLenth;
					var inArrQtip = $.inArray(popupId, this.qtipLoadSet);
					this.qtipLoadSet[qtipLen] = popupId;
					this.qtipLenth = this.qtipLenth+1;
					var entityType = qtipObj.entityType;
					var entityId   = qtipObj.entityId;
					var courseId = qtipObj.courseId!=undefined?qtipObj.courseId:'';
					var url 			  = resource.base_host+'?q='+qtipObj.url; // resource.base_host+'?q=administration/catalogaccess/33/cre_sys_obt_crs';
					var wBubble 		  = qtipObj.wBubble;//700; //Bubble Popup Width
					var hBubble 		  = qtipObj.hBubble;//300; //Bubble Popup Height
					var setwBubble        = wBubble-20;
					var setBtmLeft        = (setwBubble-104)/2;
					var qtipLeftPos       = (wBubble > 700) ? 400 : (setBtmLeft + 20);
					var tipPos = qtipObj.tipPosition;
					var catalogVisibleId = qtipObj.catalogVisibleId;
					var mLeft = 0;
					var tipPosition;
					var qtipTopBottomDisplay;
					var topElements,bottomElements;
					var assignHtml  = qtipObj.assignHtml;
					var mtobj=this;
					var rowVal = qtipObj.rowVal;
					var qtip_tbl_clsName = qtipObj.qtip_tbl_clsName!=undefined ? qtipObj.qtip_tbl_clsName:'';
					var loaderId = (qtipObj.sessionPopupId == null || qtipObj.sessionPopupId == '') ?  popupId :qtipObj.sessionPopupId;
					$('body').live('click', function(e){
			    		xCoordinate = e.pageX;
			    		yCoordinate = e.pageY;
			    	});
					//console.log("qtipTopBottomDisplay001: "+ qtipObj.tipPosition);
					//EXPERTUS_SMARTPORTAL_AbstractDetailsWidget.createLoader(qtipObj.catalogVisibleId+"_disp");
					// Added by Vincent for #0021894
					EXPERTUS_SMARTPORTAL_AbstractDetailsWidget.createLoader(loaderId);
					if(isVCSession>=0){
						var i=isVCSession;
						var timeZone = $('#time_zone_'+i).val();
						var session_meetingid = $("#session_meetingid_"+i).val();
						var session_attendeepass = $("#session_attendeepass_"+i).val();
						var session_presenterpass = $("#session_presenterpass_"+i).val();
						var session_attendeeurl = $("#session_attendeeurl_"+i).val();
						var session_presenterurl = $("#session_presenterurl_"+i).val();
						var hid_session_details_id = $("#hid_session_details_id_"+i).val();

						var formDetail = '{"timezone":"'+timeZone+
									'","session_meetingid":"'+session_meetingid+
									'","session_attendeepass":"'+session_attendeepass+
									'","session_presenterpass":"'+session_presenterpass+
									'","session_attendeeurl":"'+escape(encodeURIComponent(session_attendeeurl))+
									'","session_presenterurl":"'+escape(encodeURIComponent(session_presenterurl))+
									'","instructor_id":"'+hid_session_details_id+'"}';

						//var tt = encodeURIComponent(formDetail)
						url = url + "/"+formDetail;
					}
					if(catalogVisibleId.indexOf('addpermissions')>=0){
						$('#loaderdiv'+popupId).css('top','-80px');
					}
					if(popupId.indexOf('qtip_visible_disp_addsession_iprange')>=0)
					{
						$('#loaderdiv'+popupId).css('left','180px').css('top','-60px');
					}
					if (popupId.indexOf("exp_meeting_qtip_visible_disp_addpresenter_0_presenter") >= 0) {
						$('#loaderdiv'+popupId).css('left','250px').css('top','-78px');
					}
					$.ajax({
		 				 type: "GET",
			   	         url: url,
			   	         data:  '',
			   	     //    async: false,
			   	         success: function(data){
							//alert('X='+xCoordinate+' Y='+yCoordinate);
			   	        	 
			   	        	if(qtipObj.qtipClass != 'admin-qtip-access-parent lrn_cls_vct_web' && qtipObj.qtipClass != 'admin-qtip-presenter-access-parent') {			   	        	 
			   	        		$(".active-qtip-div").remove();
			   	        	}			   	        	
			   	        	var span_width1 = $('.admin-addanother-session-details-info').width();
			   	        	var span_width2 = $('.chosen-meeting-type').width();
							var paintHtml = topElements+"<div id='paintContent"+popupId+"'><div id='show_expertus_message'></div>"+data.render_content_main+"</div>"+bottomElements;
							var contentDiv = qtipObj.catalogVisibleId+"_disp";
							
														
							if(qtipObj.qtipClass == 'admin-qtip-access-parent lrn_cls_vct_exp' || qtipObj.qtipClass == 'admin-qtip-access-parent lrn_cls_vct_web' || qtipObj.qtipClass == 'admin-qtip-access-parent lrn_cls_vct_oth' || qtipObj.qtipClass == 'admin-qtip-presenter-access-parent') {
								var repstr = qtipObj.qtipClass;
								var replacedstr = repstr.replace(' ','-');
								$("#"+popupId).append("<div id="+replacedstr+" class='bottom-qtip-tip active-qtip-div set-wbubble-left' ></div>");
							} 
							else {
								$("#"+popupId).append("<div class='bottom-qtip-tip active-qtip-div set-wbubble-left'></div>");
							}
							
							if(qtipObj.qtipClass == 'display-message-positioning' || qtipObj.qtipClass == 'pwdstrength-admin-popup' || qtipObj.qtipClass == 'admin-qtip-presenter-access-parent' || qtipObj.qtipClass == 'admin-qtip-access-parent lrn_cls_vct_exp' || qtipObj.qtipClass == 'admin-qtip-access-parent lrn_cls_vct_web' || qtipObj.qtipClass == 'admin-qtip-access-parent lrn_cls_vct_oth') {
								$("#"+popupId).append("<div id='"+contentDiv+"' class='active-qtip-div "+qtipObj.qtipClass+"'></div>");
							}else{
								$("#"+popupId).append("<div id='"+contentDiv+"' class='active-qtip-div'></div>");
							}
							$("#"+contentDiv).html(paintHtml);
							if(catalogVisibleId.indexOf('addroletousers')>=0){
								$("#paintContent"+popupId).css('min-height','225px');
							}
							$(".bottom-qtip-tip").css('bottom','0px').css('position','absolute').css('z-index','101');
							//$('#upload_browse_and_url').find('#search-list-title-keyword').css('z-index','0');
							//$('#upload_detail_container').find('.content-browse-upload').css('z-index','0');
							if (qtipObj.qtipClass == 'add-key-word-popup') {
								$("#"+contentDiv).css('position','absolute').css('left','-'+parseInt(qtipLeftPos-98)+'px').css('bottom','40px').css('z-index','100');
							}
							else if (qtipObj.qtipClass == 'pwdstrength-admin-popup') {
							  $("#"+contentDiv).css('position','absolute').css('left','-'+parseInt(qtipLeftPos-48)+'px').css('bottom','40px').css('z-index','100');
							}
							else if (catalogVisibleId.indexOf("1_qtip_visible_disp_addsession_iprange")==0) {
								$("#"+contentDiv).css('position','absolute').css('left',parseInt(qtipLeftPos)-133+'px').css('bottom','48px').css('z-index','100');
							}
							else if (catalogVisibleId.indexOf("2_qtip_visible_disp_addsession_iprange")==0) {
								$("#"+contentDiv).css('position','absolute').css('left','-6px').css('bottom','30px').css('z-index','100');
							}
							else if (catalogVisibleId.indexOf("qtip_visible_disp_iprange_1_iprange_disp")==0) {
								$("#"+contentDiv).css('position','absolute').css('left',parseInt(qtipLeftPos-75)+'px').css('bottom','40px').css('z-index','100');
							}
							else if (catalogVisibleId.indexOf("EditSessionIdqtip") < 0) {
								$("#"+contentDiv).css('position','absolute').css('left','-'+qtipLeftPos+'px').css('bottom','40px').css('z-index','100');
							}
							var p = $("#"+popupId);
							var position = p.position();
							var divHeight = $("#"+contentDiv).height();
		 					var parentTopPos = position.top + 130;
		 					//alert("top Pos: "+parentTopPos+" | divHeight: "+divHeight);
		 					if($("#"+popupId+" .tab-title").width() > 0 ){
								 var labelWidth = ($("#"+popupId+" .tab-title").width())/2;
								 var bubbleWidth = 32;
								 var setbubblePosition = labelWidth - bubbleWidth;
								 $(".set-wbubble-left").css('left', setbubblePosition +'px');
						    }
		 					if(catalogVisibleId.indexOf("MoreEditSession")>0||catalogVisibleId.indexOf("EditSessionIdqtip")>0){
		 						$('.session-add-list').hide();
		 					}

		 				   var dispop=$('.add_session_popup').css('display');
		 				   var SRecrowCount = $('#admin-data-grid').find('.admin-datagrid-session-with-addanother .ui-jqgrid-bdiv tr').length;
		 				   var sessionScrId=$('#admin-data-grid').parent('div').attr("class");

		 				   if (parentTopPos < divHeight && position.top!=0 || catalogVisibleId.indexOf("AddMoreSessionIdqtip")>0)  {
		 					  //Add another session qtip working code
		 					  if(sessionScrId=="catalog-class-session-basic-addedit-form-container" && SRecrowCount > 5){
		 							qtipTopBottomDisplay = "tipfaceUp";
									if(catalogVisibleId.indexOf("EditSessionIdqtip") < 0);
									$("#"+contentDiv).css('position','absolute').css('left','-'+qtipLeftPos+'px').css('top','42px').css('bottom','0px').css('z-index','100');

		 					  }else{
		 					   if ($.browser.msie && $.browser.version == 7) {
									qtipTopBottomDisplay = "tipfaceUp";
									$(".narrow-search-multi-action-container div").css("position"," ");
									$(".active-qtip-div").remove();
									$("body").append("<div class='bottom-qtip-tip-up active-qtip-div set-wbubble-left'></div>");
									$("body").append("<div id='"+contentDiv+"' class='active-qtip-div'></div>");
									$("#"+contentDiv).prev().css('top',+yCoordinate+'px').css('position','absolute').css('left',+(xCoordinate-30)+'px').css('z-index','101');
									$(".bottom-qtip-tip").remove();
									if(catalogVisibleId.indexOf("EditSessionIdqtip") < 0)
										$("#"+contentDiv).css('top',+(yCoordinate+29)+'px').css('position','absolute').css('left',+(xCoordinate-setBtmLeft)+'px').css('z-index','100');
		 						} else {
		 							qtipTopBottomDisplay = "tipfaceUp";
									$("#"+popupId).append("<div class='bottom-qtip-tip-up active-qtip-div set-wbubble-left'></div>");
									//add script for qtip arrow come twoice in add another session
									 if(dispop=="block") {
			 						 $("#"+popupId+" .bottom-qtip-tip-up").css('top','13px').css('position','absolute');
			 						 $("#"+popupId).last('div').prev('.bottom-qtip-tip-up').remove();
			 					        } else	{
										 $("#"+popupId+" .bottom-qtip-tip-up").css('top','13px').css('position','absolute').css('left','-10px');//add minus 10px for tipfaceup qtip
									 }
									$(".bottom-qtip-tip").remove();
									if(catalogVisibleId.indexOf("EditSessionIdqtip") < 0);
									$("#"+contentDiv).css('position','absolute').css('left','-'+qtipLeftPos+'px').css('top','42px').css('bottom','0px').css('z-index','100');
								}
		 					}
		 				  }
		 					if( qtipObj.tipPosition == 'tipTopLeft'){
		 						qtipTopBottomDisplay = "tipfaceUp";
								//Add another session qtip working code
								if(sessionScrId=="catalog-class-session-basic-addedit-form-container" && SRecrowCount > 5){
								    $(".bottom-qtip-tip").remove();
									$("#"+popupId).append("<div class='bottom-qtip-tip active-qtip-div set-wbubble-left'></div>");
								    $("#"+popupId+" .bottom-qtip-tip").css('bottom','2px').css('left','55').css('z-index','101').css('position','absolute');
									//$("#"+popupId+" .active-qtip-div").css('bottom','30px');
							    	$("#"+popupId+" .active-qtip-div").css('left','55px'); /*viswanathan changed 76px to 55px for #74374*/
									$("#"+contentDiv).css('position','absolute').css('left','-19px').css('top','').css('bottom','40px').css('z-index','100');
								}
								else{
								    $("#"+popupId).append("<div class='bottom-qtip-tip-up active-qtip-div set-wbubble-left'></div>");
								    
								    
								    if(qtipObj.qtipClass == 'admin-qtip-access-parent another-lrn_cls_vct_web' || qtipObj.qtipClass == 'admin-qtip-access-parent another-lrn_cls_vct_oth' || qtipObj.qtipClass == 'admin-qtip-access-parent another-lrn_cls_vct_exp') {
								    var repstr = qtipObj.qtipClass;
								    var replacedstr = repstr.split(' ');
									$("#"+popupId+" .active-qtip-div").addClass(replacedstr[1]);
								    
								    	if ((navigator.userAgent.toLowerCase().indexOf('chrome') > -1) || ($.browser.msie && $.browser.version < 8)) {
								    		$("#"+popupId+" .bottom-qtip-tip-up").css('top','13px').css('position','absolute').css('left',parseInt((span_width1+span_width2)-13)+'px');
								    	} else {
								    		$("#"+popupId+" .bottom-qtip-tip-up").css('top','13px').css('position','absolute').css('left',parseInt((span_width1+span_width2)-9)+'px');
								    	}
								    } else {
								    	$("#"+popupId+" .bottom-qtip-tip-up").css('top','13px').css('position','absolute');
								    }
								    
								    
								    $(".bottom-qtip-tip").remove();
								    $("#"+contentDiv).css('position','absolute').css('left','-'+19+'px').css('top','42px').css('bottom','0px').css('z-index','100');
								}
						    } else if(qtipObj.tipPosition == 'tipTopRight') {

						    	$("#"+popupId+" .bottom-qtip-tip-up").css('left','-20px');
						    	if(catalogVisibleId.indexOf("EditSessionIdqtip") >0){
						    		if(catalogVisibleId.indexOf("qtip_EditSessionIdqtipvisible_disp_iprange")==0)
				    				{
				    				$("#"+contentDiv).css('position','absolute').css('left','').css('right','-'+34+'px').css('top','').css('bottom','-'+12+'px').css('z-index','100');
				    				$("#"+popupId+" .bottom-qtip-tip").css('bottom','').css('left','-26px').css('z-index','101').css('position','absolute');
				    				}
						    		else
						    		{
						    		//edit and more session qtip working code
						    		if(rowVal>4){
						    			$("#"+popupId+" .bottom-qtip-tip").css('bottom','2px').css('left','-26px').css('z-index','101').css('position','absolute');
						    			$("#"+contentDiv).css('position','absolute').css('left','').css('right','-'+34+'px').css('top','').css('bottom','40px').css('z-index','100');
						    		}else{
						    			$(".bottom-qtip-tip").remove();
						    			$("#"+popupId).append("<div class='bottom-qtip-tip-up active-qtip-div set-wbubble-left'></div>");
						    			$("#"+popupId+" .bottom-qtip-tip-up").css('top','13px').css('left','-26px').css('position','absolute');
						    			$("#"+contentDiv).css('position','absolute').css('left','').css('right','-'+34+'px').css('top','42px').css('bottom','0px').css('z-index','100');
						    			
						    	    	}
						    		 }
						    	}else{
						    	  $("#"+contentDiv).css('position','absolute').css('left','-'+375+'px').css('top','42px').css('bottom','0px').css('z-index','100');
						    	}
						    }else if(qtipObj.tipPosition == 'tipfaceMiddleRight' && catalogVisibleId.indexOf("AddNewSessionIdqtip") >0 ) {
						       	var getSessTop=$("#"+catalogVisibleId+"_disp").offset();
						       	if(parseInt(getSessTop.top) < "30"){
						    		qtipTopBottomDisplay = "tipfaceUp";
						    		$(".bottom-qtip-tip").remove();
					    			$("#"+popupId).append("<div class='bottom-qtip-tip-up active-qtip-div set-wbubble-left'></div>");
					    			$("#"+popupId+" .bottom-qtip-tip-up").css('top','13px').css('left','300px').css('position','absolute');
					    			$("#"+contentDiv).css('position','absolute').css('left','0').css('right','').css('top','42px').css('bottom','0px').css('z-index','100');
					       			//Drupal.ajax.prototype.commands.CtoolsModalAdjust();
					    			
						    	}else{
						    	qtipTopBottomDisplay = "tipfaceUp";
						    	$("#"+popupId+" .active-qtip-div").css('bottom','32px');
						    	if (Drupal.settings.ajaxPageState.theme == 'expertusoneV2'){
						    		$("#"+popupId+" .active-qtip-div").css('left','319px');
						    		$("#"+contentDiv).css('position','absolute').css('left','0').css('bottom','70px').css('z-index','auto');
						    	} else{
						    		$("#"+popupId+" .active-qtip-div").css('left','210px');
						    		$("#"+contentDiv).css('position','absolute').css('left','0').css('bottom','70px').css('z-index','unset');
						    	}
						    	}
						    }
							switch(qtipTopBottomDisplay) {
							case 'tipfaceUp':
								wBubble 		  = qtipObj.wBubble;//700; //Bubble Popup Width
								hBubble 		  = qtipObj.hBubble;//300; //Bubble Popup Height
								setwBubble        = wBubble-20;
								setBtmLeft        = (setwBubble-104)/2;
								mLeft			  = (qtipObj.catalogVisibleId.indexOf('editclass')>0)?45:(qtipObj.catalogVisibleId.indexOf('AttachCrsIdqtip')>0)?58:82;
								//Set buble tool tip arrow position
								tipPosition       = (qtipObj.tipPosition) ? qtipObj.tipPosition : 'bottomMiddle';
								topElements = '<a class="qtip-close-button" onclick="$(\'#root-admin\').data(\'narrowsearch\').removeActiveQtip(\''+catalogVisibleId+'\');"></a><span id="popup_container_'+popupId+'"><table cellspacing="0" cellpadding="0" width="'+setwBubble+'px" height="'+hBubble+'px" id="bubble-face-table" class="'+qtip_tbl_clsName+'"><tbody><tr><td class="bubble-tl"></td><td class="bubble-t"></td><td class="bubble-tr"></td></tr><tr><td class="bubble-cl"></td><td valign="top" class="bubble-c">';
								bottomElements ='</td><td class="bubble-cr"></td></tr><tr><td class="bubble-bl"></td><td class="bubble-blt"></td><td class="bubble-br"></td></tr></tbody></table></span>';
								$("#"+popupId).parent().parent().parent().parent().removeClass("qtip-access-control");
							break;
							default:
								wBubble 		  = qtipObj.wBubble;//700; //Bubble Popup Width
								hBubble 		  = qtipObj.hBubble;//300; //Bubble Popup Height
								setwBubble        = wBubble-20;
								setBtmLeft        = (setwBubble-104)/2;
								//Set buble tool tip arrow position
								tipPosition       = (qtipObj.tipPosition) ? qtipObj.tipPosition : 'bottomMiddle';
								topElements = '<a class="qtip-close-button" onclick="$(\'#root-admin\').data(\'narrowsearch\').removeActiveQtip(\''+catalogVisibleId+'\');"></a><span id="popup_container_'+popupId+'"><table cellspacing="0" cellpadding="0" width="'+setwBubble+'px" height="'+hBubble+'px" id="bubble-face-table" class="'+qtip_tbl_clsName+'"><tbody><tr><td class="bubble-tl"></td><td class="bubble-t"></td><td class="bubble-tr"></td></tr><tr><td class="bubble-cl"></td><td valign="top" class="bubble-c">';
								bottomElements ='</td><td class="bubble-cr"></td></tr><tr><td class="bubble-bl"></td><td class="bubble-blt"></td><td class="bubble-br"></td></tr></tbody></table></span>';
								$("#"+popupId).parent().parent().parent().parent().removeClass("qtip-access-control");
							}
							var paintHtml = topElements +
                              "<div id='paintContent" + popupId + "'>" +
                                "<div id='show_expertus_message'></div>" +
                                data.render_content_main +
                              "</div>" +
                              bottomElements;
							var contentDiv = qtipObj.catalogVisibleId+"_disp";
              				if(data.drupal_settings) {
							   $.extend(true, Drupal.settings, data.drupal_settings);
							}
              				EXPERTUS_SMARTPORTAL_AbstractDetailsWidget.destroyLoader(loaderId);
							$("#"+contentDiv).html(paintHtml);
							//EXPERTUS_SMARTPORTAL_AbstractDetailsWidget.destroyLoader(qtipObj.catalogVisibleId+"_disp");

							//For getting default meeting details on VC session details page
							if(assignHtml == 'meeting-container'){
								mtobj.getMeetingType();
							}
							Drupal.attachBehaviors();
							if(catalogVisibleId.indexOf('addpermissions')>=0 || catalogVisibleId.indexOf('addlistpermissions')>=0){
								$('#admin-add-scroll').jScrollPane({});
								/*if(catalogVisibleId.indexOf('addpermissions')>=0){
									$('#permission-cancel-save-btn').css('margin-right','-4px')
								}else{
									$('#permission-cancel-save-btn').css('margin-right','18px')
								}*/
							} else if(catalogVisibleId.indexOf('qtipAttachIdqtip_visible_disp')>=0){
								var heigt = $("#scrolldiv").height();
								if(heigt > 80){
									$('#catalog-attachment-disp-container #scrolldiv').css('height','100px');
									$('#catalog-attachment-disp-container #scrolldiv').jScrollPane({});
									}
								}
							if(catalogVisibleId.indexOf('qtipAddSessionIdqtip_visible_disp')>=0){
								$(".bottom-qtip-tip").css('bottom','2px').css('left','0').css('position','absolute').css('z-index','101');
							}else if (catalogVisibleId.indexOf("1_qtip_visible_disp_addsession_iprange")==0) {
								$(".bottom-qtip-tip").css('bottom','20px').css('left','195px').css('position','absolute').css('z-index','101');
							}else if (catalogVisibleId.indexOf("2_qtip_visible_disp_addsession_iprange")==0) {
								$(".bottom-qtip-tip").css('bottom','2px').css('left','0').css('position','absolute').css('z-index','101');
							}
							} //end $.ajax success

						});
                vtip();
				},
				visiblePopup : function(qtipObj) {
					try{
						var url = resource.base_host+'?q='+qtipObj.url;
						var popupId 	= qtipObj.popupDispId;
						//var catalogVisibleId = qtipObj.catalogVisibleId;
						var entId = qtipObj.entityId;
						var qtipScrollId = qtipObj.scrollid;

						$.ajax({
			 				 type: "GET",
				   	         url: url,
				   	         data:  '',
				   	         success: function(data){
			 					//var paintHtml = bpTop+"<div id='paintContent"+popupDispId+"'><div id='show_expertus_message' style='"+messageStyle+"'></div>"+data.render_content_main+"</div>"+bpBot;
			 					$('#'+popupId+' #visible-popup-'+entId+' #bubble-face-table .bubble-c #paintContent'+popupId).html(data.render_content_main);
			 					$.extend(true, Drupal.settings, data.drupal_settings);
			 					EXPERTUS_SMARTPORTAL_AbstractDetailsWidget.destroyLoader("paintContent"+popupId);

			 					if(qtipScrollId != '' && qtipScrollId != undefined && qtipScrollId != null){
			 						var qtipScrollType = (qtipObj.scrolltype == 'class') ? '.' : '#';
			 						$('#'+popupId+' '+qtipScrollType+qtipScrollId).jScrollPane('destroy');
			 						$('#'+popupId+' '+qtipScrollType+qtipScrollId).jScrollPane({});
			 					}
								Drupal.attachBehaviors();
			 					vtip();
			 					
			 					if('[qtipObj.linkid^=visible-sharelink]') {
			 						if (navigator.appVersion.indexOf("Safari")!= -1 && ($(window).height() < 742))
			 							$('#program-tp-basic-addedit-form-container .survey-attach-grid-wrapper .ui-jqgrid .jqgrow #bubble-face-table td.bubble-c').css('height','33px');
			 								 						
									if(Drupal.settings.user.language !== undefined && $.inArray(Drupal.settings.user.language, ["pt-pt", "de", "fr"]) != -1) {
										$('#catalog-class-basic-addedit-form-container #survey-sharelink-button #edit-sharelink-button').css('margin-right','-30px');
										if (navigator.userAgent.indexOf("MSIE") != -1 && navigator.appVersion.indexOf("10")!= -1)
											$('#program-tp-basic-addedit-form-container #survey-sharelink-button #edit-sharelink-button').css('margin-right','-4px');
										else
										$('#program-tp-basic-addedit-form-container #survey-sharelink-button #edit-sharelink-button').css('margin-right','-15px');
									} else if (Drupal.settings.user.language !== undefined && Drupal.settings.user.language == 'ru') {
										$('#catalog-class-basic-addedit-form-container #survey-sharelink-button #edit-sharelink-button').css('margin-right','-33px');
										if (navigator.userAgent.indexOf("MSIE") != -1 && navigator.appVersion.indexOf("10")!= -1)
											$('#program-tp-basic-addedit-form-container #survey-sharelink-button #edit-sharelink-button').css('margin-right','-4px');
										else
										$('#program-tp-basic-addedit-form-container #survey-sharelink-button #edit-sharelink-button').css('margin-right','-15px');
									} else if (Drupal.settings.user.language !== undefined && Drupal.settings.user.language == 'ja') {
										$('#catalog-class-basic-addedit-form-container #survey-sharelink-button #edit-sharelink-button').css('margin-right','-30px');
										if (navigator.userAgent.indexOf("MSIE") != -1 && navigator.appVersion.indexOf("10")!= -1)
											$('#program-tp-basic-addedit-form-container #survey-sharelink-button #edit-sharelink-button').css('margin-right','-4px');
										else
										$('#program-tp-basic-addedit-form-container #survey-sharelink-button #edit-sharelink-button').css('margin-right','-15px');
									} else if (Drupal.settings.user.language !== undefined && Drupal.settings.user.language == 'ko') {
										$('#catalog-class-basic-addedit-form-container #survey-sharelink-button #edit-sharelink-button').css('margin-right','-26px');
										if (navigator.userAgent.indexOf("MSIE") != -1 && navigator.appVersion.indexOf("10")!= -1)
											$('#program-tp-basic-addedit-form-container #survey-sharelink-button #edit-sharelink-button').css('margin-right','-3px');
										else
										$('#program-tp-basic-addedit-form-container #survey-sharelink-button #edit-sharelink-button').css('margin-right','-14px');
									} else if (Drupal.settings.user.language !== undefined && Drupal.settings.user.language == 'zh-hans') {
										$('#catalog-class-basic-addedit-form-container #survey-sharelink-button #edit-sharelink-button').css('margin-right','-54px');
										if (navigator.userAgent.indexOf("MSIE") != -1 && navigator.appVersion.indexOf("10")!= -1)
											$('#program-tp-basic-addedit-form-container #survey-sharelink-button #edit-sharelink-button').css('margin-right','-32px');
										else
										$('#program-tp-basic-addedit-form-container #survey-sharelink-button #edit-sharelink-button').css('margin-right','-42px');
									} else if (Drupal.settings.user.language !== undefined && Drupal.settings.user.language == 'it') { 
										if (navigator.userAgent.indexOf("MSIE") != -1 && navigator.appVersion.indexOf("10")!= -1)
											$('#program-tp-basic-addedit-form-container #survey-sharelink-button #edit-sharelink-button').css('margin-right','-3px');
										else
											$('#program-tp-basic-addedit-form-container #survey-sharelink-button #edit-sharelink-button').css('margin-right','-14px');
									} else if (Drupal.settings.user.language !== undefined && Drupal.settings.user.language == 'es') { 
										if (navigator.userAgent.indexOf("MSIE") != -1 && navigator.appVersion.indexOf("10")!= -1)
											$('#program-tp-basic-addedit-form-container #survey-sharelink-button #edit-sharelink-button').css('margin-right','-4px');
										else
											$('#program-tp-basic-addedit-form-container #survey-sharelink-button #edit-sharelink-button').css('margin-right','-14px');
									} else if (Drupal.settings.user.language !== undefined && Drupal.settings.user.language == 'en-us') { 
										if ((navigator.userAgent.indexOf("MSIE") != -1 && navigator.appVersion.indexOf("10")!= -1) || (navigator.appVersion.indexOf("Trident/7.0")!= -1))
											$('#program-tp-basic-addedit-form-container #survey-sharelink-button #edit-sharelink-button').css('margin-right','-3px');
										else
											$('#program-tp-basic-addedit-form-container #survey-sharelink-button #edit-sharelink-button').css('margin-right','-14px');
									}else {
										$('#catalog-class-basic-addedit-form-container #survey-sharelink-button #edit-sharelink-button').css('margin-right','-28px');
										$('#program-tp-basic-addedit-form-container #survey-sharelink-button #edit-sharelink-button').css('margin-right','-14px');
									}
								}
		   	                 }
			   			});

					}catch(e){
						alert(e);
					}

				},
				timepickerLoad : function(){
				try{
					$('input.exp-timepicker').click(function(){
						var attributeId = $(this).attr('id');
						var expDropDownId = 'exp-dropdown-'+attributeId;
						var c = $(this).attr('class');
						var x= c.indexOf('callback')>=0?c.substring(c.indexOf('callback')):'';
						var y = x.substring(x.indexOf('-')+1,(x.indexOf(' ')>0?x.indexOf(' '):x.length));
						var hours, minutes;
						$('.exp-timepicker-selection').css('display', 'none');
						if($(this).val() == Drupal.t('hh:mm')){
							$(this).val('');
						}
						if($('#'+expDropDownId).length >0){
							if($('#'+expDropDownId).is(':visible') == true){
								$('#'+expDropDownId).css('display', 'none');
							} else {
					 			$('#'+expDropDownId).css('display', 'block');
							}
						} else {
							$(this).after('<div id="'+expDropDownId+'" data="'+attributeId+'" class="exp-timepicker-selection"><ul></ul></div>');
							for(var i = 0 ;i <= 1425; i += 15){
								hours = Math.floor(i / 60);
								minutes = i % 60;
								if (hours < 10){
								    hours = '0' + hours;
								}
								if (minutes < 10){
								    minutes = '0' + minutes;
								}
								$('#'+expDropDownId+' ul').append('<li>'+hours + ':' + minutes + '</li>');
						    }
							$('div.exp-timepicker-selection li').click(function(){
								var attributeId = $(this).closest('.exp-timepicker-selection').attr('data');
								var selectedTime = $(this).html();
								$('#'+attributeId).val(selectedTime);
								$(this).closest('.exp-timepicker-selection').css('display', 'none');
								if(y!=null && y!=undefined && y!='undefined' && $.trim(y) !=''){
									eval(y+'('+attributeId+')');
								}
							});
						}
					});
					
  			$('body,#admin-data-grid td').bind("click",function(event){
                  if($(event.target).hasClass('exp-timepicker') != true){
                   $('.exp-timepicker-selection').css('display', 'none');
                  }	
				  if($('#exp-dropdown-start_hours').is(':visible')) {
					var Index = $('#exp-dropdown-start_hours').parents('.active-qtip-div').siblings('.bottom-qtip-tip').zIndex();
				    $('#exp-dropdown-start_hours').parents('.active-qtip-div').siblings('.bottom-qtip-tip').zIndex(100);
				  } else {
					var Index = $('#exp-dropdown-start_hours').parents('.active-qtip-div').siblings('.bottom-qtip-tip').zIndex();
				    $('#exp-dropdown-start_hours').parents('.active-qtip-div').siblings('.bottom-qtip-tip').zIndex(101);
				  }
               });
               
           }catch(e){
			 alert(e);
			}
                  
				},
                /* added function to randomize li tags while switching between meetings during session creation */
				reverseSessionType : function(){
					if($(".session-list-ul li").length == 1 )
						{
							$(".session-list-ul li").addClass("single_meeting");
						}
					$('.session_type_list').click(function(){
						var liId = $(this).attr("id");
					    $('.session-list-ul li:eq(0)').removeClass('admin-save-button-middle-bg');
					    $('.session-list-ul li:eq(0)').text($('.session-list-ul li:eq(0)').text().replace(Drupal.t("LBL287"), ''));
						$('.session-list-ul span.session-list').append($('.session-list-ul li:eq(0)'));
						$('#'+liId).text(Drupal.t('LBL287')+' '+$('#'+liId).text());
						$('#'+liId).addClass('admin-save-button-middle-bg');
						$('.session-list-ul span.admin-save-button-left-bg').after($(this));
						$('.session-list-ul span.session-list').hide();
						if(document.getElementById('lrn_cls_vct_oth') && liId != "lrn_cls_vct_oth"){
							$('.session-list-ul span.session-list').append($('#lrn_cls_vct_oth'));
						}

						if(liId =='lrn_cls_vct_web') {
							$('.admin-empty-text-msg').text(Drupal.t('MSG756'));
							$('.expertus-meeting-button-container div.add_session_button_div div.dropdownadd-dd-list-arrow').css('left','95px');
						} else if(liId =='lrn_cls_vct_oth') {
							$('.admin-empty-text-msg').text(Drupal.t('MSG757'));
							$('.expertus-meeting-button-container div.add_session_button_div div.dropdownadd-dd-list-arrow').css('left','95px');
						} else {
							$('.admin-empty-text-msg').text(Drupal.t('MSG800'));
							$('.expertus-meeting-button-container div.add_session_button_div div.dropdownadd-dd-list-arrow').css('left','130px');
						}
			
						vtip();
						//$(".session-list-ul li:not(#"+liId+")").randomize();
					});

				},

				removeActiveQtip: function(id) {
				  // Handle cancel policy qtip popup close
				  var cancelPolicyQtip = $('.active-qtip-div').parents('.cancel-policy-popup-wrapper');
				  if (cancelPolicyQtip) {
				    if(id=='qtip_visible_disp_addpresenter_0_presenter') {
						  $('#exp_meeting_qtip_visible_disp_addpresenter_0_presenter').empty();
					 } else {
						  $('.active-qtip-div').remove();
					 }
				    if (cancelPolicyQtip.hasClass('add-another-cancel-policy-popup')) {
  				    //alert('closing cancel policy add another qtip popup');
  				    var defaultLabel = $('#add-another-cancel-policy-label').data('default-label');
  				    $('#add-another-cancel-policy-label').text(defaultLabel);
				    }
				    return;
				  }

				  $('.active-qtip-div').remove();
					$(".narrow-search-multi-action-container div").css("position","relative");
					if(id!=null){
						if(id.indexOf('AddMoreSessionId')>=0){
							$('#meeting-title').html('');
						}else if(id.indexOf('addroletousers')>=0){
							$("#narrow-search-results-holder").trigger("reloadGrid",[{page:1}]);

						}
					}
				},

				getInlineEdit : function(inlineData){
                    if(inlineData){
                    	this.actualInlineData = inlineData;
                        var inlineEditData= eval(inlineData);
                        this.inlineEditData = inlineEditData;
                        var html ="";
                        var callBlur = '$("#root-admin").data("narrowsearch")';
                        var widthAnchor = $("#tag-name-div-"+this.inlineEditData.tagEntityId+" a").width();
                        var heightAnchor = $("#tag-name-div-"+this.inlineEditData.tagEntityId+" a").height();
                        //html += '<input type ="text" class="tag-edit-txtbox" id="tag-list-name-id-'+this.inlineEditData.tagEntityId+'" style = "width:'+widthAnchor+'px;height:'+heightAnchor+'px;" value ="'+decodeURIComponent(this.inlineEditData.tagName)+'" onblur="$(\'#root-admin\').data(\'narrowsearch\').updateTagList(this);" onkeydown="$(\'#root-admin\').data(\'narrowsearch\').updateTagsOnKeyDown(event,this);" />';
                        html += '<input type ="text" maxlength="150" class="tag-edit-txtbox" id="tag-list-name-id-'+this.inlineEditData.tagEntityId+'" style = "width:'+widthAnchor+'px;height:'+heightAnchor+'px;" value ="" onblur="$(\'#root-admin\').data(\'narrowsearch\').updateTagList(this);" onkeydown="$(\'#root-admin\').data(\'narrowsearch\').updateTagsOnKeyDown(event,this);" />';
                        $("#tag-name-div-"+this.inlineEditData.tagEntityId).html(html);
    					$('#tag-list-name-id-'+this.inlineEditData.tagEntityId).focus();
    					$("#tag-list-name-id-"+this.inlineEditData.tagEntityId).val(decodeURIComponent(this.inlineEditData.tagName));
                    }
                },

                updateTagsOnKeyDown : function(evt,updateTag){

            		evt = evt || window.event;
            	    var charCode = evt.keyCode || evt.which;
            	    if (charCode == 13) {
            	    	updateTag.blur();
            	        evt.preventDefault();
            	        evt.stopPropagation();
            	        return false;
            	    }
            	},

                updateTagList : function(updatedTag){
            		var obj = this;
            		this.actualInlineData = this.actualInlineData.replace(/"/g,"&quot;");
                    var inlineData = this.inlineEditData;
                    var updatedTagName = $(updatedTag).attr("value");
                    var exist_tag_name = decodeURIComponent(inlineData.tagName);
//                    var allowedChars = /^[a-z A-Z0-9@*.,_\-\'\|]+$/;
//                    var restrictedSet = /[~`!#$%^&()+=\\}\]{\[\":;?\/><]/;	//for 34642: Handling of multi-language tags in cloud based on learner's preferred language
//                    if(restrictedSet.test(updatedTagName)) {
//                    	var error_msg = '<div><div id="message-container" style="visibility: visible;"><div class="messages error"><ul><li style="width: 250px;"><span>' +Drupal.t('LBL191') + ' ' + Drupal.t('MSG639') + '</span></li></ul><div onclick="$(\'body\').data(\'learningcore\').closeErrorMessage();" class="msg-close-btn"></div></div></div></div>';
//                    	$("#show_expertus_message").append(error_msg);
//                    	return false;
//                    }
                    if(updatedTagName != '' && $.trim(updatedTagName) != "" && updatedTagName != exist_tag_name){
                    	newupdatedTagName = updatedTagName.replace(/\//g,Drupal.settings.custom.EXP_AC_SEPARATOR);
	                    url = obj.constructUrl("administration/update-tags/"+inlineData.entityId+"/"+inlineData.emptyId+"/"+inlineData.entityType+"/"+encodeURIComponent(newupdatedTagName)+"/"+inlineData.tagEntityId);
	                    $.ajax({
	                        type: "POST",
	                        url: url,
	                        data:  '',
	                        success: function(result){	                        	
	                        	if(result == 'error'){
	                        		var error_msg = '<div><div id="message-container" style="visibility: visible;"><div class="messages error"><ul><li><span>' +Drupal.t('LBL191') + ' ' + Drupal.t('LBL271') + '</span></li></ul><div onclick="$(\'body\').data(\'learningcore\').closeErrorMessage();" class="msg-close-btn"></div></div></div></div>';
                    				$("#paintContentVisiblePopup #show_expertus_message").append(error_msg);
                    				return false;
	                        	}else{                  		
		                            obj.inlineEditData.tagName = encodeURIComponent(updatedTagName); //'data={"entityId":"'+inlineData.entityId+'","entityType":"'+inlineData.entityType+'","tagName":"'+updatedTagName+'","tagEntityId":"'+inlineData.tagEntityId+'","tagId":"'+inlineData.tagId+'"}';
		                            //obj.inlineEditData = obj.inlineEditData.replace('"',"&quot;");
		                            var html = "";
		                            obj.actualInlineData = obj.actualInlineData.replace(/&quot;/g,'"');
		                            obj.actualInlineData = eval(obj.actualInlineData);
		                            obj.actualInlineData.tagName = escape(updatedTagName);
		                            obj.actualInlineData = "data= "+EXPERTUS_SMARTPORTAL_AbstractManager.convertJsonToString(obj.actualInlineData);
		                            obj.actualInlineData = obj.actualInlineData.replace(/"/g,"&quot;");
		                            html += '<a href="javascript:void(0);" id="tag-list-name-id-'+inlineData.tagEntityId+'" name="tag-list-name-id-'+inlineData.tagEntityId+'" class = "tag-list-name"  ondblclick ="$(\'#root-admin\').data(\'narrowsearch\').getInlineEdit(\''+ obj.actualInlineData +'\');">'+updatedTagName+'</a>';
		                            $("#tag-name-div-"+inlineData.tagEntityId).html(html);
	                           }
	                        }
	                    });
                    }else{
                    	var html = "";
                    	obj.actualInlineData= addslashes(obj.actualInlineData);
                    	obj.actualInlineData.tagName = updatedTagName;
                    	obj.actualInlineData = obj.actualInlineData.replace(/"/g,"&quot;");
                        html += '<a href="javascript:void(0);" id="tag-list-name-id-'+inlineData.tagEntityId+'" name="tag-list-name-id-'+inlineData.tagEntityId+'" class = "tag-list-name"  ondblclick ="$(\'#root-admin\').data(\'narrowsearch\').getInlineEdit(\''+ obj.actualInlineData+'\');">'+exist_tag_name+'</a>';
                        $("#tag-name-div-"+inlineData.tagEntityId).html(html);
                    }
                },


                getInlineEditAttachedCourse : function(inlineData,e){
                	//e.preventDefault();
                	//console.log("double click trigger ");
                    if(inlineData){
                        var inlineEditData= eval(inlineData);
                        this.inlineEditData = inlineEditData;
                    }
                   
                   //0073705:single and double quotes
                    var fullGroupNameData = this.inlineEditData.fullGroupName;
                    fullGroupNameData = fullGroupNameData.replace(/"/g, '&quot;');


          
                    tpTabDoubleClickData = {
                    		'selector':"#attachedcourse-name-div-"+this.inlineEditData.courseId+'-'+this.inlineEditData.recertifyFlag,
                    		'data':$("#attachedcourse-name-div-"+this.inlineEditData.courseId+'-'+this.inlineEditData.recertifyFlag).html(),
                    		'oldName': $("#attachedcourse-name-div-"+this.inlineEditData.courseId+'-'+this.inlineEditData.recertifyFlag + " a span").text()
                    } 
                    var html ="";
                    var callBlur = '$("#root-admin").data("narrowsearch")';
                    var inline_txt = $("#attachedcourse-name-div-"+this.inlineEditData.courseId+"-"+this.inlineEditData.recertifyFlag+" #expires_duration").html();
                    html += '<input maxlength="250" type ="text" class="attachedcourse-edit-txtbox" id="attachedcourse-list-name-id-'+this.inlineEditData.courseId+'-'+this.inlineEditData.recertifyFlag+'" value ="'+fullGroupNameData+'" onkeydown="$(\'#root-admin\').data(\'narrowsearch\').updateAttachedCourseGroupKeyDown(event, this);" onblur="$(\'#root-admin\').data(\'narrowsearch\').updateAttachedCourseGroup(this);">';
                    html += '<span id ="expires_duration">'+inline_txt+'</span>';
                    $("#attachedcourse-name-div-"+this.inlineEditData.courseId+'-'+this.inlineEditData.recertifyFlag).html(html);
                    $('#attachedcourse-list-name-id-'+this.inlineEditData.courseId+'-'+this.inlineEditData.recertifyFlag).focus();
                },

                updateAttachedCourseGroupKeyDown : function(evt, updatedGroup){
            		evt = evt || window.event;
            	    var charCode = evt.keyCode || evt.which;
            	    if (charCode == 13) {
            	    	$("#root-admin").data("narrowsearch").updateAttachedCourseGroup(updatedGroup);
            	        evt.preventDefault();
            	        return false;
            	    }

                },

                updateAttachedCourseGroup : function(updatedGroup){
                    var inlineData = this.inlineEditData;
                    var updatedGroupName = $.trim($(updatedGroup).attr("value"));
                    var oldGroupName = this.inlineEditData.groupName;
                    this.inlineEditData.groupName = updatedGroupName;
                    var obj = this;
                    var fieldname = Drupal.t("LBL1003")+' '+Drupal.t("LBL3060");
                    var characterlist = "a-z A-Z 0-9 @ * ' . _ -";
                    var grpNameExists = 0;
                       /**Change by: ayyappans
                     * #37078: UI Issue in TP when adding any special characters in the group name
                     * Root Cause: If the group name contains special characters " and ' the object string gets broken and causes javascript error.
                     * Fix: validation has been added for Group name to contain alphanumerics, spaces and speacial characters ._-@*
                     * 		maxlength characters property added to textbox attachedcourse-list-name-id-?
                     * */
                   if(Drupal.settings.user.language == 'en-us')
                	   {
                	   var allowedChars = /^[a-z A-Z0-9@*\'\"._-]+$/;
                	   if ( updatedGroupName == '' || !allowedChars.test(updatedGroupName)) {
                           var error_msg = '<div><div id="message-container" style="visibility: visible;"><div class="messages error"><ul><li style="width: 200px;"><span>' +  Drupal.t('MSG811', {'@fieldname' : fieldname , '@character list' : characterlist }) + "</span></li></ul><div onclick=\"$('body').data('learningcore').closeErrorMessage();\" class=\"msg-close-btn\"></div></div></div></div>";
                           $("#show_expertus_message").html(error_msg);
                           return false;
                         }
                	   }
                   else {
                	   var allowedChars = /^[a-z A-Z0-9@*\'\"._-]+$/;;
                	   if (updatedGroupName == '' || !allowedChars.test(updatedGroupName)) {
                           var error_msg = '<div><div id="message-container" style="visibility: visible;"><div class="messages error"><ul><li style="width: 200px;"><span>' +  Drupal.t('MSG811', {'@fieldname' : fieldname , '@character list' : characterlist }) + "</span></li></ul><div onclick=\"$('body').data('learningcore').closeErrorMessage();\" class=\"msg-close-btn\"></div></div></div></div>";
                           $("#show_expertus_message").html(error_msg);
                           return false;
                       }
                   }
                   if(updatedGroupName.length > 49){
                   		var current_length = updatedGroupName.length;
                   		 var error_msg = '<div><div id="message-container" style="visibility: visible;"><div class="messages error"><ul><li style="width: 200px;"><span>' +  Drupal.t('!name cannot be longer than %max characters but is currently %length characters long.', {'!name' : fieldname , '%max' : 50 ,'%length' : current_length}) + "</span></li></ul><div onclick=\"$('body').data('learningcore').closeErrorMessage();\" class=\"msg-close-btn\"></div></div></div></div>";
                          $("#show_expertus_message").html(error_msg);
                          return false;
                   }
                   //Group name validation
                   $('#program_attach_tabs ul li a').each(function(i) {
                   		var validationmsg = Drupal.t("LBL1003")+' '+Drupal.t("LBL107")+Drupal.t("LBL271");
				    	if (this.text == updatedGroupName) {
				    	 	grpNameExists = 1;
				    	}
					});
					if(grpNameExists == 1){
						var validationmsg = Drupal.t("LBL1003")+' '+Drupal.t("LBL107")+Drupal.t("LBL271");
						var error_msg = '<div><div id="message-container" style="visibility: visible;"><div class="messages error"><ul><li style="width: 200px;"><span>' +  validationmsg + "</span></li></ul><div onclick=\"$('body').data('learningcore').closeErrorMessage();\" class=\"msg-close-btn\"></div></div></div></div>";
                        $("#show_expertus_message").html(error_msg);
                        return false;
				 	}
					
                   var groupName = decodeURIComponent(updatedGroupName);
                    //37078 : End of code change
                    if (updatedGroupName == "No Group Name" || updatedGroupName == "") {
                        updatedGroupName = oldGroupName;
                        this.inlineEditData.groupName = updatedGroupName;
                        full_grp_name = addslashes(inlineData.fullGroupName);
                        group_name = addslashes(inlineData.groupName);
                        var html = "";
                        var datanew = 'data={"entityId":"'+inlineData.entityId+'","entityType":"'+inlineData.entityType+'","groupName":"'+group_name+'","fullGroupName":"'+full_grp_name+'","courseId":"'+inlineData.courseId+'","recertifyFlag":"'+inlineData.recertifyFlag+'"}';
                        datanew = unescape(datanew).replace(/"/g, '&quot;');
                        html += '<a href="javascript:void(0);" id="attachedcourse-list-name-id-'+inlineData.courseId+'-'+inlineData.recertifyFlag+'" name="attachedcourse-list-name-id-'+inlineData.courseId+'-'+inlineData.recertifyFlag+'" class = "attachedcourse-list-name"  ondblclick ="$(\'#root-admin\').data(\'narrowsearch\').getInlineEditAttachedCourse(\''+datanew+'\',this);">'+updatedGroupName+'</a>';
                        $("#attachedcourse-name-div-"+inlineData.courseId+'-'+inlineData.recertifyFlag).html(html);
                    } else {
                    	obj.createLoader('attach_course_dt');
                        url = obj.constructUrl("administration/update-attachedcourse-group/"+inlineData.entityId+"/"+inlineData.entityType+"/"+updatedGroupName+"/"+inlineData.courseId+"/"+inlineData.recertifyFlag);
                        $.ajax({
                            type: "POST",
                            url: url,
                            data:  '',
                            success: function(result) {
	                        	tpTabDoubleClick = false;
	                        	if(tpTabDoubleClickData != null){
	                        		var oldData = tpTabDoubleClickData.data;
	                        		oldGroupName = tpTabDoubleClickData.oldName;

						formatOldGroupName=oldGroupName;
						formatOldGroupName = formatOldGroupName.replace(/"/g,"&quot;");
						oldData=oldData.replace(/\\/g, '');
						formatUpdatedGroupName=updatedGroupName;
						formatUpdatedGroupName = formatUpdatedGroupName.replace(/"/g,"\\&quot;");
						oldData = oldData.replace( new RegExp(formatOldGroupName, "gi"), formatUpdatedGroupName);

	                        		var clk = $(oldData + ' a').attr('onclick');
	                        		var dblclk = $(oldData + ' a').attr('ondblclick');
		                        	$(tpTabDoubleClickData.selector).html(oldData);
						//var acText = $(tpTabDoubleClickData.selector +" span:first").text();
						$(tpTabDoubleClickData.selector +" span:first").text(updatedGroupName);
		                        	$("#attachedcourse-name-div-"+inlineData.courseId+'-'+inlineData.recertifyFlag).attr('title',updatedGroupName);
		                        	$( "#page-container-tabs-prg" ).tabs('destroy');
		            				$( "#page-container-tabs-prg" ).tabs({});
		                        	tpTabDoubleClickData = null;
	                        	}
	                        	obj.destroyLoader('attach_course_dt');
                            }
                        });
                    }
                },
                moreSurAssSearchHideShow : function () {
                    $('#select-list-surass-dropdown-list').slideToggle();
                    $('#select-list-surass-dropdown-list li:last').css('border-bottom','0px none');
                	},
                	/* Ticket: 46992 */
                	moreSurAssSearchHideShowTag : function () {
                        $('#select-list-surass-dropdown-list-tag').slideToggle();
                        $('#select-list-surass-dropdown-list-tag li:last').css('border-bottom','0px none');
                    	},
                    	/* Ticket: 46992 */
               moreSurAssSearchTypeText : function(dCode,dText) {
                    $('#select-list-surass-dropdown-list').hide();
                    $('#select-list-surass-dropdown').text(dCode);
                    $('#search_all_surass_type-hidden').val(dText);
                    var displayText;
                    if(dText=='surassqus'){
                 	   displayText = Drupal.t('LBL324');
                    }else{
                 	   displayText =Drupal.t('LBL036') + ' ' + dCode;
                    }
                    //var displayText = Drupal.t('LBL036') + ' ' + dCode;
            		$('#surassattchedquestions-autocomplete').val(displayText);
            		$('#surassattchedquestions-autocomplete_hidden').val(displayText);
            		$('#surassattchedquestions-autocomplete').addClass('input-field-grey');

             },
             /* Ticket: 46992 */
             moreSurAssSearchTypeTextTag : function(dCode,dText) {

                 $('#select-list-surass-dropdown-list-tag').hide();
                 $('#select-list-surass-dropdown-tag').text(dCode);
                 $('.admin_add_multi_search_container #tagsearch_all_surass_type-hidden').val(dText);

                 var displayText;
                 if(dText=='surassqus'){
              	   displayText = Drupal.t('LBL324');
                 }else{
              	   displayText =Drupal.t('LBL193');
                 }
                 //var displayText = Drupal.t('LBL036') + ' ' + dCode;

         		$('#surassattachquestion-autocomplete-tag').val(displayText);
         		$('#surassattachquestion-autocomplete-tag_hidden').val(displayText);
         		$('#surassattchedquestions-autocomplete-tag').addClass('input-field-grey');

          },
          /* Ticket: 46992 */
               moreCourseSearchTypeText : function(dCode,dText) {
                    //console.log('moreCourseSearchTypeText() called');
                    $('#select-list-course-dropdown').text(dCode);
                    $('#search_all_course_type-hidden').val(dText);
                    var displayText;
                    if(dText=='crstit'){
                 	   displayText = Drupal.t('LBL088')+ ' '+ Drupal.t('LBL083');
                    }else{
                 	   displayText =Drupal.t('LBL036') + ' ' + dCode;
                    }
                    //var displayText = Drupal.t('LBL036') + ' ' + dCode;
            		$('#tpattchedcoursename-autocomplete').val(displayText);
            		$('#tpattchedcoursename-autocomplete_hidden').val(displayText);
            		$('#tpattchedcoursename-autocomplete').addClass('input-field-grey');

             },
             	moreAdduserSearchTypeText : function(dCode,dText) {
                 //console.log('moreCourseSearchTypeText() called');
            	 $('#search-list-class-title-keyword #select-list-class-dropdown-list').hide();
                 $('#select-list-class-dropdown').text(dCode);
                 $('#search_all_user_type-hidden').val(dText);
                 var displayText;
                 if(dText=='usrtit'){
              	   displayText = Drupal.t('LBL181');
                 }else if(dText=='fultit'){
              	   displayText =Drupal.t('LBL036') + ' ' + Drupal.t('LBL691');
                 }
                 else{
              	   displayText =Drupal.t('LBL036') + ' ' + dCode;
                 }
                 //var displayText = Drupal.t('LBL036') + ' ' + dCode;
         		$('#username-search-autocomplete').val(displayText);
         		$('#username-search-autocomplete_hidden').val(displayText);
         		$('#username-search-autocomplete').addClass('input-field-grey');

          	},
          	 moreUserSearchTypeText : function(dCode,dText) {
          		$('#search-list-class-title-keyword #select-list-class-dropdown-list').hide();
                $('#select-list-class-dropdown-adduser').text(dCode);
                $('#search_all_user_type-hidden').val(dText);
                var displayText;
                if(dText=='usrtitle'){
             	   displayText = Drupal.t('LBL181');
                }else if(dText=='fultitle'){
             	   displayText =Drupal.t('LBL036') + ' ' + Drupal.t('LBL691');
                }else if(dText=='grptitle'){
             	   displayText =Drupal.t('LBL1270');
                }
                else{
             	   displayText =Drupal.t('LBL036') + ' ' + dCode;
                }
                //var displayText = Drupal.t('LBL036') + ' ' + dCode;
        		$('#addusername-search-autocomplete').val(displayText);
        		$('#addusername-search-autocomplete_hidden').val(displayText);
        		$('#addusername-search-autocomplete').addClass('input-field-grey');

          },
                getInlineEditAttachedQuestion : function(inlineData){
                    if(inlineData){
                        var inlineEditData= eval(inlineData);
                        this.inlineEditData = inlineEditData;
                    }
                    var html ="";
                    var callBlur = '$("#root-admin").data("narrowsearch")';
                    html += '<input size="16" type ="text" class="attachedquestion-edit-txtbox" id="attachedquestion-list-name-id-'+this.inlineEditData.questionId+'" value ="'+this.inlineEditData.fullGroupName+'" onkeydown="return $(\'#root-admin\').data(\'narrowsearch\').updateAttachedQuestionGroupKeyDown(event, this);" onblur="return $(\'#root-admin\').data(\'narrowsearch\').updateAttachedQuestionGroup(this);">';
                    $("#attachedquestion-name-div-"+this.inlineEditData.questionId).html(html);
                    $('#attachedquestion-list-name-id-'+this.inlineEditData.questionId).focus();

                },

                updateAttachedQuestionGroupKeyDown : function(evt, updatedGroup){
            		evt = evt || window.event;
            	    var charCode = evt.keyCode || evt.which;
            	    if (charCode == 13) {
            	    	$("#root-admin").data("narrowsearch").updateAttachedQuestionGroup(updatedGroup);
            	        evt.preventDefault();
            	        return false;
            	    }

                },
                searchClassNameFilter : function(courseId,classId){
                	var obj = this;
                	var className    = encodeURIComponent($('#classname-autocomplete').val());
                	var searchType   = $('#search_all_classs_type-hidden').val();
					var pagerId	     = '#admin-course-class-list-'+courseId+'-pagination_toppager';
					var objStr       = '$("#root_admin").data("narrowsearch")';

					obj.createLoader("paint-class-search-results-datagrid");
					$("#admin-course-class-list-"+courseId+"-pagination").setGridParam({url: this.constructUrl("administration/class-pagination/"+courseId+"/"+classId+"/0&class_name="+className+"&search_Type="+searchType)});
					$("#admin-course-class-list-"+courseId+"-pagination").trigger("reloadGrid",[{page:1}]);

					//$('#paintContentResults').setGridParam({url: this.constructUrl('learning/catalog-search/search/all/'+searchStr)});
				    //$("#paintContentResults").trigger("reloadGrid",[{page:1}]);
               },
               moreClassSearchHideShow : function () {
                   $('#select-list-class-dropdown-list').slideToggle();
                   $('#select-list-class-dropdown-list li:last').css('border-bottom','0px none');
               	},

              moreClassSearchTypeText : function(dCode,dText) {
                   $('#select-list-class-dropdown-list').hide();
                   $('#select-list-class-dropdown').text(dCode);
                   $('#search_all_classs_type-hidden').val(dText);
                   $('#search_all_user_type-hidden').val(dText);
                   var displayText;
                   if(dText=='clstit'){
                	   displayText = Drupal.t('LBL766');
                   }else if (dText=='clsstatus') {
                	   displayText =Drupal.t('LBL036') + ' ' + Drupal.t('Class')+ ' ' + dCode;
                   }else if(dText=='usrtit' || dText=='fultit' ){
		                $('#username-search-autocomplete').val(displayText);
		                $('#username-search-autocomplete_hidden').val(displayText);
		              	$('#username-search-autocomplete').addClass('input-field-grey');
		              	$('#username-search-autocomplete').focus();
                   }
                   else{
                	   displayText =Drupal.t('LBL036') + ' ' + dCode;
                   }
                   //var displayText = Drupal.t('LBL036') + ' ' + dCode;

           		$('#classname-autocomplete').val(displayText);
           		$('#classname-autocomplete_hidden').val(displayText);
           		$('#classname-autocomplete').addClass('input-field-grey');

            },

            templateDisplayPagination : function(notificationId,templateId,argType){
				var obj = this;
				var pagerId	= '#admin-notification-template-list-'+notificationId+'-pagination_toppager';
				var objStr = '$("#root_admin").data("narrowsearch")';
				if(argType == 'notification_template'){
				  urlType = "administration/manage/notification_template/temp-pagination/"+notificationId+"/"+templateId;
				}else{
				  urlType = "administration/manage/certificate/temp-pagination/"+notificationId+"/"+templateId;
				}
				//CREATE LOADER ICON
				obj.createLoader("paint-template-search-results-datagrid");
				$("#admin-notification-template-list-"+notificationId+"-pagination").jqGrid({
					url: this.constructUrl(urlType),
					datatype: "json",
					mtype: 'GET',
					//colNames:['Detail'],
					colModel:[ {name:'Detail',index:'detail', title: false, width:620, 'widgetObj':objStr, sortable: false, formatter: obj.displayClassListValues  }],
					rowNum:5,
					rowList:[5,10,15],
					pager: pagerId,
					viewrecords:  true,
					multiselect: false,
					emptyrecords: "",
					toppager: false,
					height: "auto",
					width: 620,
					loadtext: "",
					recordtext: "",
					pgtext : "{0}"+" "+Drupal.t('LBL981')+" "+"{1}",
					loadui:false,
					loadComplete:obj.callbackTemplateListDataGrid
					}).navGrid('#pager-datagrid-'+notificationId,{add:false,edit:false,del:false,search:false,refreshtitle:true});
				$("#admin-notification-template-list-"+notificationId+'-pagination_toppager').hide();
				//}
				},
			callbackTemplateListDataGrid : function(response, postdata, formid) {
				var listRows 	= 	5;
				//var curObj	 	=	this;
				var curObjStr 	= 	$("#root-admin").data("narrowsearch");
				$('#admin-notification-template-list-'+response.notificationId+'-pagination').show();
				//$('#gview_admin-notification-template-list-'+response.notificationId+'-pagination').css();
				var element = document.getElementById('modal-content');
				if(element.clientHeight == element.scrollHeight){
					$("#gbox_admin-notification-template-list-"+response.notificationId+"-pagination").css('width','620px');
					$("#gbox_admin-notification-template-list-"+response.notificationId+"-pagination").css('overflow','hidden');
				}
				// Hide the pagination, if the record count in the view learning table is equal to or less than
				var recordCount = $('#admin-notification-template-list-'+response.notificationId+"-pagination").jqGrid('getGridParam', 'records');

		        if (recordCount == 0) {
		        	$("#admin-notification-template-list-"+response.notificationId+"-pagination"). css('display','block');
		            var html = Drupal.t('MSG381')+'.';
		            $("#admin-notification-template-list-"+response.notificationId+"-pagination").html('<tr><td class="border-style-none" width="620px"><div id="add-edit-class-norecords" class="no-records-msg">'+html+'</div></td></tr>');
		            $('#admin-notification-template-list-'+response.notificationId+"-pagination").css('text-align','center');
		            $('.border-style-none').css('border','0');
		        } else if(recordCount > listRows){
			        $("#admin-notification-template-list-"+response.notificationId+"-pagination_toppager").show();
			        if(Drupal.settings.ajaxPageState.theme == 'expertusoneV2'){
			         $("#admin-notification-template-list-"+response.notificationId+"-pagination_toppager_center").css('width','229px');
			        }else{
			         $("#admin-notification-template-list-"+response.notificationId+"-pagination_toppager_center").css('width','250px');
			        }

			        $('#add-edit-class-norecords').css('display','none');
				} else {
					$('#add-edit-class-norecords').css('display','none');
				}

				curObjStr.initGridTemplatePagination(response.notificationId);
				curObjStr.destroyLoader('paint-template-search-results-datagrid');

				$('#admin-notification-template-list-pagination-'+response.notificationId+' tr').click(function(event){
					event.stopPropagation();
				});

				$('.edit-class-list-container').last().css('border','0px none');
				var backdrop_height = $(document).height();
				$('#modalBackdrop').css('height',backdrop_height+'px');
				//When Template is added,the save and publish button is enabled
				$('.pub-unpub-only-save-btn').attr('disabled',false);
				$('.save-pub-unpub-sub-menu input').removeClass('save-and-enable-disabled');
				$('#admin-notification-template-list-'+response.notificationId+'-pagination tr td').find('div.edit-class-list').last().css('border-bottom','0px none');

				//Vtip-Display toolt tip in mouse over
				 vtip();
			},
			initGridTemplatePagination : function(notificationId) {
				var curObjStr 	= 	$("#root-admin").data("narrowsearch");

				//NEXT PREVIOUS LOADER SETTING
				$('#first_admin-notification-template-list-'+notificationId+'-pagination_toppager').click(function(e) {
									if (!$('#first_admin-notification-template-list-'+notificationId+'-pagination_toppager').hasClass('ui-state-disabled')) {
										$('#admin-notification-template-list-'+notificationId+'-pagination').hide();
										$('#gview_admin-notification-template-list-'+notificationId+'-pagination').css('min-height','50px');
										curObjStr.createLoader('paint-template-search-results-datagrid');
									}
								});
				$('#prev_admin-notification-template-list-'+notificationId+'-pagination_toppager').click(function(e) {
									if (!$('#prev_admin-notification-template-list-'+notificationId+'-pagination_toppager').hasClass('ui-state-disabled')) {
										$('#admin-notification-template-list-'+notificationId+'-pagination').hide();
										$('#gview_admin-notification-template-list-'+notificationId+'-pagination').css('min-height','50px');
										curObjStr.createLoader('paint-template-search-results-datagrid');
									}
								});
				$('#next_admin-notification-template-list-'+notificationId+'-pagination_toppager').click(function(e) {
									if (!$('#next_admin-notification-template-list-'+notificationId+'-pagination_toppager').hasClass('ui-state-disabled')) {
										$('#admin-notification-template-list-'+notificationId+'-pagination').hide();
										$('#gview_admin-notification-template-list-'+notificationId+'-pagination').css('min-height','50px');
										curObjStr.createLoader('paint-template-search-results-datagrid');
									}
								});
				$('#last_admin-notification-template-list-'+notificationId+'-pagination_toppager').click(function(e) {
									if (!$('#last_admin-notification-template-list-'+notificationId+'-pagination_toppager').hasClass('ui-state-disabled')) {
										$('#admin-notification-template-list-'+notificationId+'-pagination').hide();
										$('#gview_admin-notification-template-list-'+notificationId+'-pagination').css('min-height','50px');
										curObjStr.createLoader('paint-template-search-results-datagrid');
									}
								});

				$(".ui-pg-input").keyup(function(event) {
									if (event.keyCode == 13) {
										$('#admin-notification-template-list-'+notificationId+'-pagination').hide();
										$('#gview_admin-notification-template-list-'+notificationId+'-pagination').css('min-height','50px');
										curObjStr.createLoader('paint-template-search-results-datagrid');
									}
								});

			},
		    userDisplayPagination : function(roleId,userId){
				var obj = this;
				var pagerId	= '#admin-course-class-list-'+roleId+'-pagination_toppager';
				var objStr = '$("#root_admin").data("narrowsearch")';

				//CREATE LOADER ICON
				obj.createLoader("paint-user-search-results-datagrid");

				$("#admin-course-class-list-"+roleId+"-pagination").jqGrid({
					url: this.constructUrl("administration/people/group/user-pagination/"+roleId+"/"+userId),
					datatype: "json",
					mtype: 'GET',
					colNames:[  Drupal.t('LBL054'),Drupal.t('LBL691'),Drupal.t('LBL102'), multiselectCheckbox],
					colModel:[ { name:'User Name',index:'UserName', title: false, width:120, 'widgetObj':objStr, formatter: obj.userDisplayGridValues },
					           { name:'Full Name',index:'FullName', title: false, width:200, 'widgetObj':objStr, formatter: obj.userDisplayGridValues },
					           { name:'Status',index:'Status', title: false, width:80, 'widgetObj':objStr, formatter: obj.userDisplayGridValues, hidden: hideStatusOption },
					           { name:'MultiselectCheck',index:'MultiselectCheck', title: false, width:19, 'widgetObj':objStr, formatter: obj.userDisplayGridValues, sortable: false}
					         ],
					rowNum:5,
					rowList:[5,10,15],
					pager: pagerId,
					viewrecords:  true,
					multiselect: false,
					emptyrecords: "",
					toppager: false,
					height: "auto",
					width: 570,
					loadtext: "",
					recordtext: "",
					pgtext : "{0}"+" "+Drupal.t('LBL981')+" "+"{1}",
					loadui:false,
					loadComplete:obj.callbackUserListDataGrid
					}).navGrid('#pager-datagrid-'+roleId,{add:false,edit:false,del:false,search:false,refreshtitle:true});
				$("#admin-course-class-list-"+roleId+'-pagination_toppager').hide();
				setQtipPosition();
			},
			callbackUserListDataGrid : function(response, postdata, formid) {
				var listRows 	= 	5;
				//var curObj	 	=	this;
				var curObjStr 	= 	$("#root-admin").data("narrowsearch");
				$('#admin-course-class-list-'+response.roleId+'-pagination').show();
				var element = document.getElementById('modal-content');
				if(element.clientHeight == element.scrollHeight){
					$("#gbox_admin-course-class-list-"+response.roleId+"-pagination").css('width','570px');
					$("#gbox_admin-course-class-list-"+response.roleId+"-pagination").css('overflow','hidden');
				}
				// Hide the pagination, if the record count in the view learning table is equal to or less than
				var recordCount = $('#admin-course-class-list-'+response.roleId+"-pagination").jqGrid('getGridParam', 'records');

		        if (recordCount == 0) {
		        	$("#admin-course-class-list-"+response.roleId+"-pagination"). css('display','block');
		            var html = Drupal.t('MSG381')+'.';
		            $("#admin-course-class-list-"+response.roleId+"-pagination").html('<tr><td class="border-style-none" width="570px"><div id="add-edit-class-norecords" class="no-records-msg">'+html+'</div></td></tr>');
		            $('#admin-course-class-list-'+response.roleId+"-pagination").css('text-align','center');
		            $('.border-style-none').css('border','0');
		        } else if(recordCount > listRows){
			        $("#admin-course-class-list-"+response.roleId+"-pagination_toppager").show();
			        $('#add-edit-class-norecords').css('display','none');
				} else {
					$('#add-edit-class-norecords').css('display','none');
				}

				curObjStr.initGridUserPagination(response.roleId);
				curObjStr.destroyLoader('paint-user-search-results-datagrid');

				$('#admin-course-class-list-pagination-'+response.roleId+' tr').click(function(event){
					event.stopPropagation();
				});

				$('.edit-class-list-container').last().css('border','0px none');
				var backdrop_height = $(document).height();
				$('#modalBackdrop').css('height',backdrop_height+'px');
				//Vtip-Display toolt tip in mouse over
				 vtip();
			},
			initGridUserPagination : function(roleId) {
				var curObjStr 	= 	$("#root-admin").data("narrowsearch");

				//NEXT PREVIOUS LOADER SETTING
				$('#prev_admin-course-class-list-'+roleId+'-pagination_toppager').click(function(e) {
									if (!$('#prev_admin-course-class-list-'+roleId+'-pagination_toppager').hasClass('ui-state-disabled')) {
										$('#admin-course-class-list-'+roleId+'-pagination').hide();
										$('#gview_admin-course-class-list-'+roleId+'-pagination').css('min-height','50px');
										curObjStr.createLoader('paint-class-search-results-datagrid');
									}
								});
				$('#next_admin-course-class-list-'+roleId+'-pagination_toppager').click(function(e) {
									if (!$('#next_admin-course-class-list-'+roleId+'-pagination_toppager').hasClass('ui-state-disabled')) {
										$('#admin-course-class-list-'+roleId+'-pagination').hide();
										$('#gview_admin-course-class-list-'+roleId+'-pagination').css('min-height','50px');
										curObjStr.createLoader('paint-class-search-results-datagrid');
									}
								});

				$(".ui-pg-input").keyup(function(event) {
									if (event.keyCode == 13) {
										$('#admin-course-class-list-'+roleId+'-pagination').hide();
										$('#gview_admin-course-class-list-'+roleId+'-pagination').css('min-height','50px');
										curObjStr.createLoader('paint-class-search-results-datagrid');
									}
								});

			},



				classDisplayPagination : function(courseId,classId,oldClassId){
					var obj = this;
					var pagerId	= '#admin-course-class-list-'+courseId+'-pagination_toppager';
					var objStr = '$("#root_admin").data("narrowsearch")';

					//CREATE LOADER ICON
					obj.createLoader("paint-class-search-results-datagrid");
					if(Drupal.settings.ajaxPageState.theme == 'expertusoneV2'){
						var Wgrid = '835';
					} else {
						var Wgrid = '827';
					}

					$("#admin-course-class-list-"+courseId+"-pagination").jqGrid({
						url: this.constructUrl("administration/class-pagination/"+courseId+"/"+classId+"/"+oldClassId),
						datatype: "json",
						mtype: 'GET',
						colNames:['Detail'],
						colModel:[ {name:'Detail',index:'detail', title: false, width:860, 'widgetObj':objStr, sortable: false, formatter: obj.displayClassListValues  }],
						rowNum:5,
						rowList:[5,10,15],
						pager: pagerId,
						viewrecords:  true,
						multiselect: false,
						emptyrecords: "",
						toppager: false,
						height: "auto",
						width: Wgrid,
						loadtext: "",
						recordtext: "",
						pgtext : "{0}"+" "+Drupal.t('LBL981')+" "+"{1}",
						loadui:false,
						loadComplete:obj.callbackClassListDataGrid
						}).navGrid('#pager-datagrid-'+courseId,{add:false,edit:false,del:false,search:false,refreshtitle:true});
					$("#admin-course-class-list-"+courseId+'-pagination_toppager').hide();
					setQtipPosition();
				},
				callbackClassListDataGrid : function(response, postdata, formid) {
				Drupal.ajax.prototype.commands.CtoolsModalAdjust(null, null, null);
					if(Drupal.settings.ajaxPageState.theme == 'expertusoneV2'){
						var Wgrid = '835';
					} else {
						var Wgrid = '827';
					}
					var listRows 	= 	5;
					//var curObj	 	=	this;
					var curObjStr 	= 	$("#root-admin").data("narrowsearch");
					$('#admin-course-class-list-'+response.courseId+'-pagination').show();
					var element = document.getElementById('modal-content');
					if(element.clientHeight == element.scrollHeight){
						$("#gbox_admin-course-class-list-"+response.courseId+"-pagination").css('width',Wgrid+'px');
						$("#gbox_admin-course-class-list-"+response.courseId+"-pagination").css('overflow','hidden');
					}
					// Hide the pagination, if the record count in the view learning table is equal to or less than
					var recordCount = $('#admin-course-class-list-'+response.courseId+"-pagination").jqGrid('getGridParam', 'records');

			        if (recordCount == 0) {
			        	$("#admin-course-class-list-"+response.courseId+"-pagination"). css('display','block');
			            var html = Drupal.t('MSG381')+'.';
			            $("#admin-course-class-list-"+response.courseId+"-pagination").html('<tr><td class="border-style-none" width="'+Wgrid+'px"><div id="add-edit-class-norecords" class="no-records-msg">'+html+'</div></td></tr>');
			            $('#admin-course-class-list-'+response.courseId+"-pagination").css('text-align','center');
			            $('.border-style-none').css('border','0');
			            $("#admin-course-class-list-"+response.courseId+"-pagination_toppager").hide();
			        } else if(recordCount > listRows){
				        $("#admin-course-class-list-"+response.courseId+"-pagination_toppager").show();
				        if ( $.browser.msie && parseInt($.browser.version, 10)=='9'){
				        $("#admin-course-class-list-"+response.courseId+"-pagination_toppager").find('.ui-pg-table').css('width', 'auto');
				        }
				        $('#add-edit-class-norecords').css('display','none');
					} else {
						$('#add-edit-class-norecords').css('display','none');
						$("#admin-course-class-list-"+response.courseId+"-pagination_toppager").hide();
					}

					curObjStr.initGridClassPagination(response.courseId);
					curObjStr.destroyLoader('paint-class-search-results-datagrid');

					$('#admin-course-class-list-pagination-'+response.courseId+' tr').click(function(event){
						event.stopPropagation();
					});

					$('.edit-class-list-container').last().css('border','0px none');
					var backdrop_height = $(document).height();
					$('#modalBackdrop').css('height',backdrop_height+'px');
					//Vtip-Display toolt tip in mouse over
					 vtip();
					 $("#admin-course-class-list-"+response.courseId+"-pagination > tbody > tr:last > td > .edit-class-list"). css('border','0px none');
				},


				initGridClassPagination : function(courseId) {

					var curObjStr 	= 	$("#root-admin").data("narrowsearch");

					//NEXT PREVIOUS LOADER SETTING
					$('#first_admin-course-class-list-'+courseId+'-pagination_toppager').click(function(e) {
										if (!$('#first_admin-course-class-list-'+courseId+'-pagination_toppager').hasClass('ui-state-disabled')) {
											$('#admin-course-class-list-'+courseId+'-pagination').hide();
											$('#gview_admin-course-class-list-'+courseId+'-pagination').css('min-height','50px');
											curObjStr.createLoader('paint-class-search-results-datagrid');
										}
									});
					$('#prev_admin-course-class-list-'+courseId+'-pagination_toppager').click(function(e) {
										if (!$('#prev_admin-course-class-list-'+courseId+'-pagination_toppager').hasClass('ui-state-disabled')) {
											$('#admin-course-class-list-'+courseId+'-pagination').hide();
											$('#gview_admin-course-class-list-'+courseId+'-pagination').css('min-height','50px');
											curObjStr.createLoader('paint-class-search-results-datagrid');
										}
									});
					$('#next_admin-course-class-list-'+courseId+'-pagination_toppager').click(function(e) {
										if (!$('#next_admin-course-class-list-'+courseId+'-pagination_toppager').hasClass('ui-state-disabled')) {
											$('#admin-course-class-list-'+courseId+'-pagination').hide();
											$('#gview_admin-course-class-list-'+courseId+'-pagination').css('min-height','50px');
											curObjStr.createLoader('paint-class-search-results-datagrid');
										}
									});
					$('#last_admin-course-class-list-'+courseId+'-pagination_toppager').click(function(e) {
										if (!$('#last_admin-course-class-list-'+courseId+'-pagination_toppager').hasClass('ui-state-disabled')) {
											$('#admin-course-class-list-'+courseId+'-pagination').hide();
											$('#gview_admin-course-class-list-'+courseId+'-pagination').css('min-height','50px');
											curObjStr.createLoader('paint-class-search-results-datagrid');
										}
									});

					$(".ui-pg-input").keyup(function(event) {
										if (event.keyCode == 13) {
											$('#admin-course-class-list-'+courseId+'-pagination').hide();
											$('#gview_admin-course-class-list-'+courseId+'-pagination').css('min-height','50px');
											curObjStr.createLoader('paint-class-search-results-datagrid');
										}
									});

				},
				displayClassListValues : function(cellvalue, options, rowObject) {
					return rowObject['detail'];
				},

				userDisplayGridValues : function(cellvalue, options, rowObject){
				    var type = $('body').data('mulitselectdatagrid').type;
					var mode = $('body').data('mulitselectdatagrid').mode;
					var uniqueId = $('body').data('mulitselectdatagrid').uniqueId;
					var entityId = $('body').data('mulitselectdatagrid').entityId;
					var entityType = $('body').data('mulitselectdatagrid').entityType;
					var groupname  = '';
					var index  = options.colModel.index;
					var rowEditOptionId =  rowObject['id'] + '-' + type + '-' + entityId + '-' + entityType + '-' + index;
					if(index == 'MultiselectCheck'){
						var inputType = 'checkbox';
						var id = rowObject['MultiselectCheck'];
						return '<input type="'+inputType+'" id="multiselect-singlecheck-'+uniqueId+'_'+id+'" value="'+id+'" class="multiselect-singlecheck" />';
					}else if(index == 'UserName'){
							var titleAllowed = type == 'RoleAddusers' ?  13 : 20;
							var userNameRestricted = $('body').data('mulitselectdatagrid').titleRestricted(rowObject[index], titleAllowed);
							return '<span class="vtip" title="'+htmlEntities(rowObject[index])+'">'+userNameRestricted+'</span>';

				   }else if(index == 'FullName'){

						var titleAllowed = type == 'RoleAddusers' ?  15 : 35;
						var fullNameRestricted = $('body').data('mulitselectdatagrid').titleRestricted(rowObject[index], titleAllowed);
						return '<span class="vtip" title="'+htmlEntities(rowObject[index])+'">'+fullNameRestricted+'</span>';

					}


				},

                updateAttachedQuestionGroup : function(updatedGroup){

                    var inlineData = this.inlineEditData;
                    var updatedGroupName = escape($(updatedGroup).attr("value"));
                    var oldGroupName	= this.inlineEditData.groupName;
                    this.inlineEditData.groupName = updatedGroupName;
                    var obj = this;
                    /*-- #36135: Isuse in Survey/Assessment group name tool --*/
                    var regGroupName = /^[A-Za-z0-9.,@_\s]{0,100}$/;  // /[^a-zA-Z0-9,.@\'\_ |\/]/
                    var grpString = decodeURIComponent(updatedGroupName);
                    // 36135 : validatin code added
                    if(!regGroupName.test(grpString)) {
                    	var error_msg = '<div><div id="message-container" style="visibility: visible;"><div class="messages error"><ul><li style="width: 200px;"><span>' +Drupal.t('MSG644') + ' ' + Drupal.t('MSG639') + '</span></li></ul><div onclick="$(\'body\').data(\'learningcore\').closeErrorMessage();" class="msg-close-btn"></div></div></div></div>';
                    	$("#show_expertus_message").append(error_msg);
                    	return false;
                    }
                    if(updatedGroupName == "No Group Name" || updatedGroupName == "") {
                    	updatedGroupName = oldGroupName;
                    	this.inlineEditData.groupName = updatedGroupName;
                    	var html = "";
                        html += '<a href="javascript:void(0);" id="attachedquestion-list-name-id-'+inlineData.questionId+'" name="attachedquestion-list-name-id-'+inlineData.questionId+'" class = "attachedcourse-list-name"  ondblclick ="$(\'#root-admin\').data(\'narrowsearch\').getInlineEditAttachedQuestion();">'+updatedGroupName+'</a>';
                        $("#attachedquestion-name-div-"+inlineData.questionId).html(html);
                    }else{
                    	obj.createLoader('survey_attach_questions_dt');
                        url = obj.constructUrl("administration/update-attachedquestion-group/"+inlineData.entityId+"/"+updatedGroupName+"/"+inlineData.questionId);
                        $.ajax({
                            type: "POST",
                            url: url,
                            data:  '',
                            success: function(result){
                        	    obj.destroyLoader('survey_attach_questions_dt');
                        	    var result = result.split('|');
                        	    var shortGroupName = result[0];
                        	    var longGroupName = result[1];
                                var html = "";
                                var dataQuesGroup = 'data={"entityId":"'+inlineData.entityId+'","entityType":"'+inlineData.entityType+'","groupName":"'+$.trim(shortGroupName)+'","fullGroupName":"'+$.trim(longGroupName)+'","questionId":"'+inlineData.questionId+'"}';
                                dataQuesGroup = unescape(dataQuesGroup).replace(/"/g, '&quot;');
                                html += '<a href="javascript:void(0);" id="attachedquestion-list-name-id-'+inlineData.questionId+'" name="attachedquestion-list-name-id-'+inlineData.questionId+'" class = "attachedquestion-list-name"  ondblclick ="$(\'#root-admin\').data(\'narrowsearch\').getInlineEditAttachedQuestion(\''+dataQuesGroup+'\');">'+titleRestrictionFadeoutImage(shortGroupName,'survey-grp-name')+'</a>';
                                $("#attachedquestion-name-div-"+inlineData.questionId).html(html);
                                $("#attachedquestion-name-div-"+inlineData.questionId).attr('title', longGroupName);
                            }
                        });
                    }

                },

                /*

                updateAttachedQuestionScore : function(inlineData){
                	if(inlineData){
                          var inlineEditData= eval(inlineData);
                          this.inlineEditData = inlineEditData;
                    }
                	var scoreValue = $('#edit-edit-attachquestion-list-score-'+this.inlineEditData.loopId).val();
	                 if(scoreValue != ''){
	                    var obj = this;
	                    url = obj.constructUrl("administration/update-attachedquestion-score/"+this.inlineEditData.entityId+"/"+this.inlineEditData.entityType+"/"+this.inlineEditData.questionId+"/"+scoreValue);
	                    $.ajax({
	                        type: "POST",
	                        url: url,
	                        data:  '',
	                        success: function(result){

	                    	}
	                    });
	                 }

                },

                updateAttachedQuestionScoreKeyDown : function(evt, inlineData){
            		evt = evt || window.event;
            	    var charCode = evt.keyCode || evt.which;
            	    if (charCode == 13) {
            	    	$("#root-admin").data("narrowsearch").updateAttachedQuestionScore(inlineData);
            	        evt.preventDefault();
            	        return false;
            	    }

                }*/

		updatePreviewContent :function(){
        	/*
				function to redirect callback of content launch
				--> searches for the callback function on close of the content and removes the corresponding record from
				slt_aicc_interaction -- only for aicc contents

			*/

            var url='';
            var post_data='';
            if(scoobj._type == "AICC" || scoobj._type == "AICC Course Structure") {
            	var sid = $('#root-admin').data('narrowsearch').launchAICCId;
            	url = resource.base_url+"/sites/all/commonlib/AICC_Handler.php";
            	post_data={"session_id":sid,"command":"UPDATEAICCPREVIEW"};

        		var obj = this;
        		$.ajax({
        			type: "POST",
        			url: url,
        			data:  post_data,
        			success: function(result) {

        			}
        	    });
            }
        },

        showExpAdminDropdownMenu : function (dropdownListId) {
          var dropdownListSelector = '#' + dropdownListId;
            if ($(dropdownListSelector).is(":visible")) {
              //console.log('showExpAdminDropdownMenu() : is already displayed ' + dropdownListId);
              // hideExpAdminDropDownMenu() will hide the dropdown menu when it is already displayed.
            }
            else {
              //console.log('showExpAdminDropdownMenu() : showing ' + dropdownListId);
              $(dropdownListSelector).slideDown(); // show menu
              $(dropdownListSelector + ' li:last').css('border-bottom','0px none');

              $('html').bind('mousedown.' + dropdownListId, {dropdownListId : dropdownListId},
                                           $("#root-admin").data("narrowsearch").hideOnClickExpAdminDropDownMenu);
            }
         },

         hideOnClickExpAdminDropDownMenu : function (e) {
           var dropdownListId = e.data.dropdownListId;
           var dropdownListSelector = '#' + dropdownListId;
           var el = e.target;
           var dropdown = $('#' + dropdownListId + ':visible')[0];
           if(typeof dropdown == 'undefined') {
             //console.log('hideOnClickExpAdminDropDownMenu() : no dropdown menu open. Returning true');
             $('html').unbind('mousedown.' + dropdownListId, $("#root-admin").data("narrowsearch").hideOnClickExpAdminDropDownMenu);
             return true;
           }

           // Hide the dropdown menu
           //console.log('hideOnClickExpAdminDropDownMenu() : hiding ' + dropdownListId);
           $(dropdownListSelector).slideUp(); // hide menu
           $('html').unbind('mousedown.' + dropdownListId, $("#root-admin").data("narrowsearch").hideOnClickExpAdminDropDownMenu);
           return false; // no need to propagate the event further
        },

        meetingUrlCreate : function (meetingName,classId) {
        	if(meetingName == 'lrn_cls_vct_oth'){ // Others
        		$('#session_presenter_password').val('');
        		$('#session_attende_password').val('');
        		$('#session_meeting_id').val('');
        		$('#attendee_url').css('display','block');
        		$('#presenter_url').css('display','block');
        		$('#attendee_password').css('display','none');
        		$('#presenter_password').css('display','none');
        		$('#meeting_id_dt').css('display','none');
        		$('.admin-addedit-session-details-meeting tr:visible').removeClass('session-meeting-vc-class');
        		$('.admin-addedit-session-details-meeting tr:visible').addClass('session-meeting-vc-class-others');

	        }else if(meetingName == 'lrn_cls_vct_exp'){ // Expertus Meeting
        		$('#session_presenter_password').val('');
        		$('#session_attende_password').val('');
        		$('#session_meeting_id').val('');
        		$('#session_presenter_password').attr('disabled',true).addClass('admin-grey-out-fields');
        		$('#session_attende_password').attr('disabled',true).addClass('admin-grey-out-fields');
        		$('#session_meeting_id').attr('disabled',true).addClass('admin-grey-out-fields');
        		$('.session-pass-mandatory').css('display','none');
        		$('#attendee_url').css('display','none');
        		$('#presenter_url').css('display','none');
/*        		$('#attendee_password').css('display','block');
        		$('#presenter_password').css('display','block');
        		$('#meeting_id_dt').css('display','block'); */

        		$('#attendee_password').css('display','none');
        		$('#presenter_password').css('display','none');
        		$('#meeting_id_dt').css('display','none');
        		$('.admin-addedit-session-details-meeting tr:visible').addClass('session-meeting-vc-class');
        		$('.admin-addedit-session-details-meeting tr:visible').removeClass('session-meeting-vc-class-others');

	        }else{
	        	$('#session_presenter_password').attr('disabled',false).removeClass('admin-grey-out-fields');
    			$('#session_attende_password').attr('disabled',false).removeClass('admin-grey-out-fields');
    			$('#session_meeting_id').attr('disabled',false).removeClass('admin-grey-out-fields');
        		$('.session-pass-mandatory').css('display','inline-block');
        		$('#attendee_url').css('display','none');
        		$('#presenter_url').css('display','none');
        		$('#attendee_password').css('display','block');
        		$('#presenter_password').css('display','block');
        		$('#meeting_id_dt').css('display','none');
        		$('.admin-addedit-session-details-meeting tr:visible').removeClass('session-meeting-vc-class');
        		$('.admin-addedit-session-details-meeting tr:visible').removeClass('session-meeting-vc-class-others');
	        }
        },

		getMeetingType : function(){
        	var meetingtypeid = $('#set-meeting-type').val();
            var class_id = $('#class_id').val();
            if(meetingtypeid == 'lrn_cls_vct_oth'){
            	$('#session_presenter_password').val('');
        		$('#session_attende_password').val('');
        		$('#session_meeting_id').val('');
            	$('#attendee_url').css('display','block');
        		$('#presenter_url').css('display','block');
        		$('#attendee_password').css('display','none');
        		$('#presenter_password').css('display','none');
        		$('#meeting_id_dt').css('display','none');
        		$('.admin-addedit-session-details-meeting tr:visible').removeClass('session-meeting-vc-class');
        		$('.admin-addedit-session-details-meeting tr:visible').addClass('session-meeting-vc-class-others');
            }else if(meetingtypeid == 'lrn_cls_vct_exp'){ // Expertus Meeting
        		$('#session_presenter_password').val('');
        		$('#session_attende_password').val('');
        		$('#session_meeting_id').val('');
        		$('#session_presenter_password').attr('disabled',true).addClass('admin-grey-out-fields');
        		$('#session_attende_password').attr('disabled',true).addClass('admin-grey-out-fields');
        		$('#session_meeting_id').attr('disabled',true).addClass('admin-grey-out-fields');
        		$('.session-pass-mandatory').css('display','none');
        		$('#attendee_url').css('display','none');
        		$('#presenter_url').css('display','none');
        		$('#attendee_password').css('display','none');
        		$('#presenter_password').css('display','none');
        		$('#meeting_id_dt').css('display','none');
        		$('.admin-addedit-session-details-meeting tr:visible').addClass('session-meeting-vc-class');
        		$('.admin-addedit-session-details-meeting tr:visible').removeClass('session-meeting-vc-class-others');
	        }else{
	        	var getDisAttr = $('#session_meeting_id');
	        	if(!getDisAttr.attr('disabled')){
	        		$('#session_presenter_password').attr('disabled',false);
	        		$('#session_attende_password').attr('disabled',false);
	        		$('#session_meeting_id').attr('disabled',false);
	        	}
    			$('.session-pass-mandatory').css('display','inline-block');
    			$('#session_presenter_password').removeClass('admin-grey-out-fields');
        		$('#session_attende_password').removeClass('admin-grey-out-fields');
        		$('#session_meeting_id').removeClass('admin-grey-out-fields');
        		$('#attendee_url').css('display','none');
        		$('#presenter_url').css('display','none');
        		$('#attendee_password').css('display','block');
        		$('#presenter_password').css('display','block');
        		$('#meeting_id_dt').css('display','');
        		$('.admin-addedit-session-details-meeting tr:visible').removeClass('session-meeting-vc-class');
        		$('.admin-addedit-session-details-meeting tr:visible').removeClass('session-meeting-vc-class-others');
	        }

        },


         /*
    	function to display popup if content has multiple lessons
    	--> rendered on clicking "preview" for each version
         */
        getPreviewContent : function(contentId,VersionId,lessonlist){

    		var closeButt={};
    	    $('#lesson-wizard').remove();
    	  	html="";
    		html+='<div id="lesson-wizard" class="lesson-wizard-content" style="display:none; padding: 0px;">';
    	    html+= this.getContentVersionLessons(contentId,VersionId,lessonlist);
    	    html+='</div>';
    	    $("body").append(html);
    	    Drupal.attachBehaviors();


    	    $("#lesson-wizard").dialog({
    	        position:[(getWindowWidth()-500)/2,100],
    	        bgiframe: true,
    	        width: 450,
    	        zIndex: 10000,
    	        resizable:false,
    	        modal: true,
    	        title: Drupal.t('LBL889'),
    	        buttons:closeButt,
    	        closeOnEscape: false,
    	        draggable:false,
    	        overlay:
    	         {
    	           opacity: 0.9,
    	           background: "black"
    	         }
    	    });

    	    $("#lesson-wizard").show();

    		$('.ui-dialog-titlebar-close').click(function(){
    	        $("#lesson-wizard").remove();
    	    });
			if(this.currTheme == 'expertusoneV2'){
		    	changeDialogPopUI();
			}
    	    //SCrollbar for content dialogbox
    	    this.scrollBarContentDialog();

        },

        /*
    	function to display the list of lessons inside the dialog
    	--> rendered on clicking "preview" for each version
        */
        getContentVersionLessons : function(contentId,VersionId,data){


    	var lesCnt = 0;
    	var ostr = '';
    	ostr += '<td colspan="2"><div class="enroll-accordian-div">';
    	ostr += '<table class="launch-lesson-view" cellpadding="0" cellspacing="0" width="100%" border="0">';


    	$(data).each(function(){
    		$(this).each(function(){
    			  lesCnt++;
    			  var params = "";
    			  var lessontitle = $(this).attr('title');
    			  var launchurl =  $(this).attr('launchurl');
    			  var contentType = $(this).attr('contentype');
    			  var contentTypeCode = $(this).attr('contentypecode');
    			  var contenthostedtype = $(this).attr('contenthostedtype');
    			  var aicc_sid = $(this).attr('AICC_SID');
    			  var callLaunchUrlFn;
    			  var lessonId =  $(this).attr('lessonid');
    			  if(contentTypeCode != "lrn_cnt_typ_vod"){
    				    params = "{'Id':'"+lessonId+"','url1':'"+launchurl+
    			            "','ErrMsg':'"+"error"+"','contentType':'"+contentType+"','AICC_SID':'"+aicc_sid+"'}";
    				    callLaunchUrlFn = "onclick=\"$('#root-admin').data('narrowsearch').launchLesson("+params+")\"";
    			  }else{
    				    lessontitle = encodeURIComponent(lessontitle.replace(/\//g, '()|()'));
    				    callLaunchUrlFn = "href=\"/?q=learning/nojs/play_video/";
    				    callLaunchUrlFn += lessontitle + "/";
    				    callLaunchUrlFn += escape(contenthostedtype) + "/";
    				    callLaunchUrlFn += escape(launchurl.replace(/\//g, '()|()')) + '/';
    				    callLaunchUrlFn += "ME" + "/";
    				    callLaunchUrlFn += "/";
    				    callLaunchUrlFn += "/";
    				    callLaunchUrlFn += lessonId + "/";
    				    callLaunchUrlFn += "/";
    				    callLaunchUrlFn += "/";
    				    callLaunchUrlFn += "\"";

    			  }

    		      var pipe = '<span class="enroll-pipeline">|</span>';

    			  ostr += '<tr class="enroll-lesson-section"><td class="enroll-launch-column1">';
    			  ostr += '<div class="enroll-course-title-lesson">';
    			  ostr += '<span id="titleAccEn_'+lessonId+'" class="item-title" ><span class="enroll-course-title vtip" title="'+Drupal.t('LBL854')+' '+lesCnt+' : '+unescape(lessontitle).replace(/"/g, '&quot;')+'" href="javascript:void(0);">';
    			  ostr += 'Lesson '+lesCnt+': ' +titleRestricted(decodeURIComponent(lessontitle),35);
    			  ostr += '</span></span>';
    			  ostr += '</div>';
    			  ostr += '<div class="enroll-class-title-info">';
    			  ostr += '<div class="item-title-code">';

    			  ostr += ' </div>';
    			  ostr += '</div>';
    			  ostr += '</td>';
    			  ostr += '<td class="enroll-launch-column2">';
    			  ostr +=   '<div class="enroll-main-list">';
    			  ostr +=     '<label id="' + lessonId + '_launch_button_lbl"' +
    			                  ' class="'+"enroll-launch-full" + ' launch_button_lbl">';

    			  if(contentTypeCode != "lrn_cnt_typ_vod"){
    				  ostr += '<input type="button" id="' + lessonId + '_launch_button"' +
    			                   ' class="' + 'actionLink' + ' enroll-launch"' +

    			                       ' value="' + Drupal.t('LBL199') + '" '+ callLaunchUrlFn  + '>';
    			  }else{
    				  ostr += "<a class='actionLink enroll-launch use-ajax ctools-modal-ctools-video-style' " +
                      "title='" + Drupal.t("LBL199") + "' " +
                        "id='launch" + lessonId + "' " +
                          callLaunchUrlFn +
                            " >" +
                              Drupal.t("LBL199") + "</a>";
    			  }
    			  ostr +=     '</label>';
    			  ostr +=   '</div>';
    			  ostr += '</td></tr>';

    		});
    	});
    	ostr += '</table></div"></td>';
    	return ostr;

        },

        /*
    	function to initialixe scorm wrapper
    	--> called on clicking "preview" for each version
         */
        launchLesson : function(data){
        	var pmType 		= data.contentType;
	        var contentVersion;
	        var contentType;
		    var stdid		= this.getLearnerId();
		    var stdname 	= this.getUserName();
		    $('#root-admin').data('narrowsearch').launchUserId = stdid;
		    $('#root-admin').data('narrowsearch').launchLessonId = data.Id;
		    $('#root-admin').data('narrowsearch').launchAICCId = data.AICC_SID;
		    if(stdid == "0" || stdid == "")
			{
			    self.location='?q=learning/enrollment-search';
		        return;
			}
	        if(pmType.toLowerCase() == 'scorm 1.2' || pmType.toLowerCase() == 'scorm 2004') {
	        	pmType				= pmType;
	        	var pmTypeVer 		= pmType.split(' ');
	            contentType  	= pmTypeVer[0];
	            contentVersion 	= pmTypeVer[1];
	        } else  {
	            contentVersion 	= '';
	            contentType 	= pmType;
	        }

	        var x	= {version: contentVersion,type:contentType};
	        scoobj 	= new SCORM_API_WRAPPER(x);

	        var cdnstatus = data.cdnmodulestatus;
	        if(cdnstatus == 1){
	        	$.ajax({
	        		url: '?q=ajax/getcdnurl/'+data.Id,
					data:  '',
					success: function(result){
						var output = result.split('~~');
						var url1      = output[0];
	        var data1 = {
				    	        url				 : url1,
				    	        callback		 : $('#root-admin').data('narrowsearch').updatePreviewContent,
				    	        learnerId		 : stdid,
				    	        learnerName		 : stdname,
				    	        completionStatus : 'not attempted',
				    	        scoreMax		 : '0',
				    	        scoreMin		 : '0',
				    	        score			 : '0',
				    	        location		 : '',
				    	        courseid 		 : '0',
				    	        classid 		 : '0',
				    	        lessonid 		 : data.Id,
				    	        versionid		 : '0',
				    	        enrollid 		 : '0',
				    	        launch_data		 : '',
				    	        suspend_data     : '',
				    	        exit			 : '',
				    	        aicc_sid		 : data.AICC_SID
				    	    };

				        scoobj.Initialize(data1);
					}
				  });
				} else {

	        var data1 = {
	    	        url				 : decodeURIComponent(data.url1),
	    	        callback		 : $('#root-admin').data('narrowsearch').updatePreviewContent,
	    	        learnerId		 : stdid,
	    	        learnerName		 : stdname,
	    	        completionStatus : 'not attempted',
	    	        scoreMax		 : '0',
	    	        scoreMin		 : '0',
	    	        score			 : '0',
	    	        location		 : '',
	    	        courseid 		 : '0',
	    	        classid 		 : '0',
	    	        lessonid 		 : data.Id,
	    	        versionid		 : '0',
	    	        enrollid 		 : '0',
	    	        launch_data		 : '',
	    	        suspend_data     : '',
	    	        exit			 : '',
	    	        aicc_sid		 : data.AICC_SID
	    	    };

	        scoobj.Initialize(data1);
				}
        },

        scrollBarContentDialog : function(){
	    	var contentDialogHeight = $("#lesson-content-container").height();
	    	if(contentDialogHeight > 550) {
	    		$(".lesson-wizard-content").css('height',550);
	    	} else if(contentDialogHeight <= 550) {
	    		$(".lesson-wizard-content").css('height','auto').css('min-height','70px');
	    	}

        },

        underlineTagAndTriggerSearch : function(tagName, filterCode, currElem) {
      	  try {
      		$('.tagscloud-tag').css('text-decoration', '');
      		$(currElem).css('text-decoration', 'underline');
      		$('#' + filterCode + '-addltext-filter').val(tagName);
									    $('#' + filterCode + '-tagscloud-clr').css('display', 'block');
      	    $('#root-admin').data('narrowsearch').refreshGrid();
      	  }
      	  catch (e) {
      	    // To Do
      	  }
      	},

      underlineTagCloudAndTriggerSearch : function(tagName, filterCode, currElem,tagWeight) {
        	  try {
        		$('.tagscloud-tag').css('text-decoration', '');
        		$(currElem).css('text-decoration', 'underline');
        		$('#' + filterCode + '-addltext-filter').val(tagName);
									    $('#' + filterCode + '-tagscloud-clr').css('display', 'block');
        	    $('#root-admin').data('narrowsearch').refreshGrid();
        	    $tagText = $(currElem).html();
        	    if($('#tagentityType').val() == 'tagtip'){
        	    	 var tagpos = $.inArray($tagText,existtagArrAdmin,0);
             	    if(tagpos == -1){
         				existtagArrAdmin.unshift($tagText);
         				existtagArrAdmin.pop();
         				$('#' + filterCode + '_tagscloud #tagcloudcontainerid').find('span:last-child').remove();
         				$(currElem).html(descController('FADE OUT',$tagText,weightArrAdmin[tagWeight-1]));
         				var selectedTag = $(currElem).parent().html();
         				$('#' + filterCode + '_tagscloud #tagcloudcontainerid').prepend('<span class="tagscloud-term">'+selectedTag+'</span>');
         				$(currElem).html($tagText);
         			}else if(tagpos >= 0){
         				$('#' + filterCode + '_tagscloud #tagcloudcontainerid').find('span:nth-child('+(tagpos+1)+')').remove();
         				if (tagpos > -1) {
         					existtagArrAdmin.splice(tagpos, 1);
         				}
         				existtagArrAdmin.unshift($tagText);
         				$(currElem).html(descController('FADE OUT',$tagText,weightArrAdmin[tagWeight-1]));
         				var selectedTag = $(currElem).parent().html();
         				$('#' + filterCode + '_tagscloud #tagcloudcontainerid').prepend('<span class="tagscloud-term">'+selectedTag+'</span>');
         				$(currElem).html($tagText);
         			}
        	    }else{
        	    	var tagpos = $.inArray($tagText,existtagClsArrAdmin,0);
             	    if(tagpos == -1){
         				existtagClsArrAdmin.unshift($tagText);
         				existtagClsArrAdmin.pop();
         				$('#' + filterCode + '_tagscloud #tagcloudcontainerid').find('span:last-child').remove();
         				$(currElem).html(descController('FADE OUT',$tagText,weightArrAdmin[tagWeight-1]));
         				var selectedTag = $(currElem).parent().html();
         				$('#' + filterCode + '_tagscloud #tagcloudcontainerid').prepend('<span class="tagscloud-term">'+selectedTag+'</span>');
         				$(currElem).html($tagText);
         			}else if(tagpos >= 0){
         				$('#' + filterCode + '_tagscloud #tagcloudcontainerid').find('span:nth-child('+(tagpos+1)+')').remove();
         				existtagClsArrAdmin.unshift($tagText);
         				if (tagpos > -1) {
         					existtagClsArrAdmin.splice(tagpos, 1);
         				}
         				$(currElem).html(descController('FADE OUT',$tagText,weightArrAdmin[tagWeight-1]));
         				var selectedTag = $(currElem).parent().html();
         				$('#' + filterCode + '_tagscloud #tagcloudcontainerid').prepend('<span class="tagscloud-term">'+selectedTag+'</span>');
         				$(currElem).html($tagText);
         			}
        	    }


        	  }
        	  catch (e) {
        	    // To Do
        	  }
        	},
        	showConfirmPopup: function(submitHandlerId, action, usersList,Type,isPricedClass) {
				try {
					var learners = $('input[name='+usersList+']').val().split(',');
					var getStatus = new Array();
					for (var i=0; i<learners.length; i++) {
						getStatus[i] = $('input[name=enrolled_status_'+learners[i]+']').val();
					}
					var unique = getStatus.filter(function(itm,i,getStatus){
						return i==getStatus.indexOf(itm);
					});
					var getdefaultStatus = new Array();
					for (var i=0; i<learners.length; i++) {
						getdefaultStatus[i] = $('input[name=enrolled_default_status_'+learners[i]+']').val();
					}
					var defltstat = getdefaultStatus.filter(function(itm,i,getdefaultStatus){
						return i==getdefaultStatus.indexOf(itm);
					});				
					 if(defltstat ==  Drupal.t('Completed') && submitHandlerId == 'commonsave_save-button'){
                     $('#'+submitHandlerId).click();
                     return;
                     }   
					var enrollmentStatus;	
					var getStsLength = unique.length;
                     if((isPricedClass == 1 ) && unique == Drupal.t('Canceled')){
                     	$('#show_expertus_message').html(expertus_error_message([Drupal.t('LBL1246')]));
                     	return;
                     }
                  if(getStsLength == 1 && (unique == Drupal.t('Waived')  || (unique == Drupal.t('Enrolled')  && submitHandlerId == 'commonsave_save-button') || (unique == Drupal.t('In progress')  && submitHandlerId == 'commonsave_save-button'))){
                     $('#'+submitHandlerId).click();
                     return;
                     }
					if($('input[name='+usersList+']').val() == "") {
						$('#show_expertus_message').html(expertus_error_message([Drupal.t('ERR106')]));
						return;
					} else if(learners.length == 1) {
						learners = $('#enroll_user_'+$('input[name='+usersList+']').val()).val();
					} else {
						learners = learners.length +" "+ Drupal.t('LBL3080');
					}			
					if(Type=='Class'){
					 var cancelTitleLT = Drupal.t('Class');
					}else{
					 var cancelTitleLT = Drupal.t('Training Plan');
					}
					switch(action) {
						case 'completedandsave':
							enrollmentStatus = Drupal.t('Completed');
						break;
						case 'incompletedandsave':
							enrollmentStatus = Drupal.t('Incomplete');
						break;
						case 'noshowandsave':
							enrollmentStatus = Drupal.t('No Show');
						break;
						case 'cancelledandsave':
							enrollmentStatus = Drupal.t('Canceled');
						break;
						default: enrollmentStatus = "Common";
						break;
					}
					//show jquery dialog with yes or cancel buttons with its action callbacks
					this.currTheme = Drupal.settings.ajaxPageState.theme;
					$('#complete-confirmation-wizard').remove();
					var html = '';
				    html += '<div id="complete-confirmation-wizard" style="display:none; padding: 13px;">';
				    html += '<table width="99%" class="complete-confirmation-table" cellpadding="0" cellspacing="0" border="0" valign="center">';
				    html += '<tr><td height="30"></td></tr>';
				    html += '<tr>';				     
					if(action == "commonsave"){
						if(getStsLength == 1 && learners.length >= 1){
							if(unique == "Completed"){
							html += '<td align="center" id="complete-confirmation-content"><span>'+ Drupal.t('MSG822', {'@learner_name': learners, '@status':Drupal.t('Completed'), '@objtype': cancelTitleLT}) +'</span></td>';
						}else if(unique == "Incomplete"){
							html += '<td align="center" id="complete-confirmation-content"><span>'+ Drupal.t('MSG822', {'@learner_name': learners, '@status':Drupal.t('Incomplete'), '@objtype': cancelTitleLT}) +'</span></td>';
						}else if(unique == "Canceled"){
							html += '<td align="center" id="complete-confirmation-content"><span>'+ Drupal.t('MSG822', {'@learner_name': learners, '@status':Drupal.t('Canceled'), '@objtype': cancelTitleLT}) +'</span></td>';
						}else if(unique == "No Show"){
							html += '<td align="center" id="complete-confirmation-content"><span>'+ Drupal.t('MSG822', {'@learner_name': learners, '@status':Drupal.t('No Show'), '@objtype': cancelTitleLT}) +'</span></td>';
						}
						}else{
							html += '<td align="center" id="complete-confirmation-content"><span>'+ Drupal.t('MSG821', {'@learner_name': learners, '@objtype': cancelTitleLT}) +'</span></td>';
						}	  
					}else{						
						html += '<td align="center" id="complete-confirmation-content"><span>'+ Drupal.t('MSG822', {'@learner_name': learners, '@status': enrollmentStatus, '@objtype': cancelTitleLT}) +'</span></td>';
					}
					html += '</tr>';
		    	   html +='</table>';
		    	   html +='</div>';
		    	   $("body").append(html);
					var confButton = {};
					confButton[Drupal.t('LBL109')] = function() {
						$(this).dialog('destroy');
						$(this).dialog('close');
						$('#complete-confirmation-wizard').remove();
					};
					confButton[Drupal.t('Yes')] = function(){
						$(this).dialog('destroy');
						$(this).dialog('close');
						$('#complete-confirmation-wizard').remove();
						$('#'+submitHandlerId).click();
					}
					var messageLine;
					if(enrollmentStatus == "Common") {
						if(getStsLength == 1 && learners.length >= 1){
							if(unique == "Completed"){
							var messageLine = Drupal.t('LBL3081') + " " +Drupal.t('Completed');
							}
							else if(unique == "Incomplete"){
								var messageLine = Drupal.t('LBL3081') + " " +Drupal.t('Incomplete');
							}
							else if(unique == "Canceled"){
								var messageLine = Drupal.t('LBL3081') + " " +Drupal.t('Canceled');
							}
							else if(unique == "No Show"){
								var messageLine = Drupal.t('LBL3081') + " " +Drupal.t('No Show');
							}
						}else {
							var messageLine = Drupal.t('LBL3082');
						}
					}else{
						var messageLine = Drupal.t('LBL3081') + " " +enrollmentStatus;
					}					
					$("#complete-confirmation-wizard").dialog({
						position:[(getWindowWidth()-500)/2,100],
						autoOpen: false,
						bgiframe: true,
						width: 500,
						resizable: false,
						modal: true,
						title: messageLine,
						buttons: confButton,
						closeOnEscape: false,
						draggable: false,
						zIndex : 10005,
						overlay: {
						   opacity: 0.9,
						   background: "black"
						}
					});
					
					$('.ui-dialog').wrap("<div id='complete-confirmation-wizard-dialog'></div>");
					$('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').addClass("removebutton").end();
					
					changeDialogPopUI();
					$("#complete-confirmation-wizard").show();
					$("#complete-confirmation-wizard").dialog('open')
				} catch(e) {
				}
			},
			refreshLastAccessedRow: function (gridRow) {
				try {
					//console.log('refreshLastAccessedRow called');
					var rowFound = false;
					// console.log('refreshLastAccessedCatalogRow', console.trace());
					var grid = $("#narrow-search-results-holder");
					if (gridRow === undefined) {
						var gridRow = grid.jqGrid('getGridParam', 'lastAccessedRow');
					}
					//console.log(gridRow);
					if (gridRow !== undefined && gridRow != null && typeof gridRow.id != 'undefined') {
						//console.log(gridRow, gridRow.id);
						var rowData = ((typeof gridRow.id != 'undefined' && gridRow.id) ? gridRow.id.split('-') : null);
						var options = {
							data: {
								jqgrid_row_id: gridRow.id,
								page: 1,
								rows: 1
							}
						};
						grid.jqGrid('updateRowByRowId', options);
						rowFound = true; // return true to stop the grid reload
						grid.jqGrid('setGridParam', {lastAccessedRow: null});
					} else {
						// grid.trigger("reloadGrid",[{page:1}]);
						rowFound = false; // return false so that reload of grid happens as no last accessed grid row found
					}
				} catch (e) {
					//console.log(e, e.stack);
				}
				//console.log('rowFound ', rowFound, 'gridRow', gridRow);
				return rowFound;
			}
		});
	 $.extend($.ui.narrowsearch.prototype, EXPERTUS_SMARTPORTAL_AbstractManager,EXPERTUS_SMARTPORTAL_AbstractDetailsWidget);
		 window.paginationEnter = false;
			$('#add_lst_pg_txtfld').live('click onfocus mousedown',function(){
				$(this).keypress(function(event){
					 if (event.keyCode == 13) {
						 window.paginationEnter = true;
		              }
				});
			});
		$('.enable-edit-icon').live('click mousedown',function(){
			window.paginationEnter = false;
		});
		$('form').live('keyup keypress',function (e) {
		    var charCode = e.charCode || e.keyCode || e.which;
		    if (charCode  == 13 && e.target.nodeName != 'TEXTAREA') {
		        return false;
		    }
		});
		vtip();
	}catch(e){
			// To Do
		}
})(jQuery);
$(function() {
	try{
	$("#root-admin").narrowsearch();
	}catch(e){
			// To Do
		}
});
function editClassDetails(courseId, classId){
	try{
	if($(".qtip-active").length > 0)
		$(".qtip-active").remove();
	$('.course-class-edit-qtip').remove();
	var classVisibility = $('#catalog-class-basic-addedit-form-'+classId).is(':visible');
	$('#catalog-class-addedit-form-details .addedit-form-wrapper').hide();
	$('.edit-class-list').css('background-color','#FFFFFF');
	$('.edit-class-list').find('.admin-add-button-container').css('display','block');
	if(classVisibility == true){
		$('#catalog-class-basic-addedit-form-'+classId).hide();
	} else {
		$('#catalog-class-basic-addedit-form-'+classId).show();
		if(Drupal.settings.ajaxPageState.theme == 'expertusoneV2'){
			$('#edit-class-list-'+classId).css('background-color','');
		} else {
			$('#edit-class-list-'+classId).css('background-color','#d7ecf9');
		}
		//$('#edit-class-list-'+classId).find('.admin-add-button-container').css('display','none');
	}
	if($('#edit-catalog-course-basic-cancel')){
		$('#edit-catalog-course-basic-cancel').click();
		$('.qtip').find('.qtip-button > div').each(function(){
		    var x = $(this).attr('id');
			if(x.indexOf('cre_sys_obt_crs')>0 || x.indexOf('Course_close')>0 || x.indexOf('PrintCerId')>0){
			 $(this).closest('.qtip').remove();
			};
		});
	}
	}catch(e){
			// To Do
		}
}

function editClassQTipOpen(clickId,i){
	try{
	//Added by Vincent for issue #0015360: Class screen Qtip alignment is incorrect
	var y = $('#catalog-course-basic-addedit-form').height();
	var z = Math.round(y-433+(80*i));
	$('#modal-content').scrollTop(z);

	if($('#'+clickId).hasClass('loaded-edit-class')){
		$('#'+clickId).click();
	}
	$('#'+clickId).addClass('loaded-edit-class');
	}catch(e){
			// To Do
		}
}

function editCourseDetailsView(){
	try{
	$('#catalog-class-addedit-form-details .addedit-form-wrapper').hide();
	$('.edit-class-list').find('.admin-add-button-container').css('display','block');
    if($('#edit-newtheme-cancel-link')){
		$('#edit-newtheme-cancel-link').click();
	}
	}catch(e){
			// To Do
		}
}

/* added by ganesh #custom_attribute_0078975*/
function editCustomAttributeDetailsView(){
	try{
	$('#customattribute-addedit-form-details .addedit-form-wrapper').hide();
	$('.edit-class-list').find('.admin-add-button-container').css('display','block');
	if($('#edit-newtheme-cancel-link')){
		$('#edit-newtheme-cancel-link').click();
	}
	}catch(e){
			// To Do
		}
}

function editLocationDetailsView(){
	try{
	$('#resource-facility-addedit-form-details .addedit-form-wrapper').hide();
	$('.edit-class-list').find('.admin-add-button-container').css('display','block');
	if($('#edit-newtheme-cancel-link')){
		$('#edit-newtheme-cancel-link').click();
	}
	}catch(e){
			// To Do
		}
}

function editAttributesDetailsView(){
	try{
	$('#catalog-class-addedit-form-details .addedit-form-wrapper').hide();
	$('.edit-class-list').find('.admin-add-button-container').css('display','block');
	$('.admin-course-edit-button-container').hide();
	if($('#edit-newtheme-cancel-link')){
		$('#edit-newtheme-cancel-link').click();
	}
	}catch(e){
			// To Do
		}
}
function addClassDetails(courseId){
	try{
	var classVisibility = $('#catalog-class-basic-addedit-form-').is(':visible');
	$('.admin-course-edit-button-container').show();
	$('#catalog-class-addedit-form-details .addedit-form-wrapper').hide();
	$('.edit-class-list').css('background-color','#FFFFFF');
	if(classVisibility == true){
		$('#catalog-class-basic-addedit-form-').hide();
		$('#add-edit-class-norecords').show();
	} else {
		$('.edit-class-list').find('.admin-add-button-container').css('display','block');
		$('#catalog-class-basic-addedit-form-').show();
		$('#add-edit-class-norecords').hide();
	}
	if($('#edit-catalog-course-basic-cancel')){
		$('#edit-catalog-course-basic-cancel').click();
	}
	}catch(e){
			// To Do
		}
}


function addFacilityDetails(locationId){
	try{
	var facilityVisibility = $('#resource-facility-basic-addedit-form-').is(':visible');
	$('.admin-course-edit-button-container').show();
	$('#resource-facility-addedit-form-details .addedit-form-wrapper').hide();
	$('.edit-class-list').css('background-color','#FFFFFF');
	if(facilityVisibility == true){
		$('#resource-facility-basic-addedit-form-').hide();
		$('#add-edit-facility-norecords').show();
	} else {
		$('.edit-class-list').find('.admin-add-button-container').css('display','block');
		$('#resource-facility-basic-addedit-form-').show();
		$('#add-edit-facility-norecords').hide();
	}
	if($('#edit-resource-location-basic-cancel')){
		$('#edit-resource-location-basic-cancel').click();
	}
	}catch(e){
			// To Do
		}
}

function editFacilityDetails(locationId, facilityId){
	try{
	var facilityVisibility = $('#resource-facility-basic-addedit-form-'+facilityId).is(':visible');
	$('#resource-facility-addedit-form-details .addedit-form-wrapper').hide();
	$('.edit-class-list').css('background-color','#FFFFFF');
	$('.edit-class-list').find('.admin-add-button-container').css('display','block');
	if(facilityVisibility == true){
		$('#resource-facility-basic-addedit-form-'+facilityId).hide();
	} else {
		$('#resource-facility-basic-addedit-form-'+facilityId).show();
		if(Drupal.settings.ajaxPageState.theme == 'expertusoneV2'){
			$('#edit-facility-list-'+facilityId).css('background-color','');
		} else {
			$('#edit-facility-list-'+facilityId).css('background-color','#d7ecf9');
		}
		$('#edit-facility-list-'+facilityId).find('.admin-add-button-container').css('display','none');
	}
	if($('#edit-resource-location-basic-cancel')){
		$('#edit-resource-location-basic-cancel').click();
	}
	}catch(e){
			// To Do
		}
}


function displayResourceActionList() {
	try{
	$('.resource-add-list').toggle();
	}catch(e){
			// To Do
		}
}

function displayPubActionList(butnCls) {
	try{
	butnCls = typeof butnCls !== 'undefined' ? butnCls : '';
	if(butnCls!='')
		$('.'+butnCls).toggle();
	else
		$('.catalog-pub-add-list').toggle();
	}catch(e){
			// To Do
		}
}

function displayNarrowSearchAction(id,obj){
	try{
	$('.pub-action-list-'+id).toggle();
	$(obj).closest("tr").prevAll("tr").find("td").find(".narrowsearch-pub-add-list").hide();
	$(obj).closest("tr").nextAll("tr").find("td").find(".narrowsearch-pub-add-list").hide();
	}catch(e){
			// To Do
		}
}

function displayNotificationActionList(e) {
	try{
	$('.catalog-pub-add-list').toggle();
	/* 	0027406: Issue with Notifications */
	//event.stopPropagation();
	if(!e) var e = window.event;
	e.cancelBubble = true;
	e.returnValue = false;
	if ( e.stopPropagation ) e.stopPropagation();
	if ( e.preventDefault ) e.preventDefault();
       return false;
	}catch(e){
			// To Do
		}
}
function showHide(obj,uniqueId){
	try{
	var fieldsetId = $(obj).val();

	//var fieldsetId = $(obj).val();
    var fieldsetId = $(obj).parents('li').attr('id');
    //$(obj).find('option[value="'+fieldsetId+'"]').remove();
    /*
    if($(obj).find('option').length == 1){
        $(obj).remove();
        $('.showselect').remove();
    }
    */
    displayResourceActionList();
	if(fieldsetId=='attachment_fieldset') {
		$('#attachment-fieldset-wrapper-'+uniqueId).removeClass('disable-class');
	}else if(fieldsetId=='tag_fieldset') {
		$('#tag-fieldset-wrapper-'+uniqueId).removeClass('disable-class');
	}else if(fieldsetId=='prerequisite_fieldset') {
		$('#prerequisite-fieldset-wrapper-'+uniqueId).removeClass('disable-class');
	}else if(fieldsetId=='equivalence_fieldset') {
		$('#equivalence-fieldset-wrapper-'+uniqueId).removeClass('disable-class');
	}else if(fieldsetId=='survey_fieldset') {
		$('#survey-fieldset-wrapper-'+uniqueId).removeClass('disable-class');
	}else if(fieldsetId=='assessment_fieldset') {
		$('#assessment-fieldset-wrapper-'+uniqueId).removeClass('disable-class');
	}else if(fieldsetId=='session_detail_fieldset') {
		$('#session-details-fieldset-wrapper-'+uniqueId).removeClass('disable-class');
	}else if(fieldsetId=='wbt_detail_fieldset') {
		$('#wbt-fieldset-wrapper-'+uniqueId).removeClass('disable-class');
	}else if(fieldsetId=='register_fieldset') {
		$('#register-fieldset-wrapper-'+uniqueId).removeClass('disable-class');
	}else if(fieldsetId=='class_register_fieldset') {
		$('#classregister-fieldset-wrapper-'+uniqueId).removeClass('disable-class');
	}else if(fieldsetId=='custom_fieldset') {
		$('#custom-fieldset-wrapper-'+uniqueId).removeClass('disable-class');
	}else if(fieldsetId=='classroom_fieldset') {
		$('#classroom-fieldset-wrapper-'+uniqueId).removeClass('disable-class');
	}else if(fieldsetId=='equipment_fieldset') {
		$('#equipment-fieldset-wrapper-'+uniqueId).removeClass('disable-class');
	}
	}catch(e){
			// To Do
		}
}

function selecteDropdown() {
	try{
	$(document).ready(function(){
		if (!$.browser.opera) {
			// select element styling
			$('select.select').each(function(){
				var title = $('.select').attr('title');
				if( $('option:selected', this).val() != ''  ) title = $('option:selected',this).text();
				$(this)
					.css({'z-index':10,'opacity':0,'-khtml-appearance':'none'})
					.after('<span class="showselect">' + title + '</span>')
					.change(function(){
						val = $('option:selected','.select').text();
						$('.select').next().text(val);
						});
			});

		};

	});
	}catch(e){
			// To Do
		}
}
function hideMessageInfo(){
	try{
    setTimeout(function() {
    	$(".messages").hide();
    	Drupal.ajax.prototype.commands.CtoolsModalAdjust(null, null, null);
	}, 10000);
	}catch(e){
			// To Do
		}
}
function increasePopWidth() {
	try{
	/* $("#modalContent > .ctools-modal-content").css('width','925px');
	$("#modal-content").css('width','890px');
	Drupal.ajax.prototype.commands.CtoolsModalAdjust(null, null, null); */
	}catch(e){
			// To Do
		}
}
function textfieldTitleBlur(obj, defaultValue, searchTypeHiddenId,sessionInsId){
	try{
	if(typeof(searchTypeHiddenId)==='undefined') searchTypeHiddenId = '';
	if(typeof(sessionInsId)==='undefined') sessionInsId = '';
	var searchTypeVal = '';
	if(searchTypeHiddenId != ''){
	  searchTypeVal	= $('#'+searchTypeHiddenId).val();
	}
	if(obj.value == '' || obj.value == defaultValue || obj.value == searchTypeVal){
		if(searchTypeVal != ''){
		  $(obj).val(searchTypeVal);
		}else{
		  $(obj).val(defaultValue);
		  if(sessionInsId != ''){
			  $('#hid_instructor_id').val('');
		  }
		}
		$(obj).addClass('input-field-grey');
	} else {
		$(obj).removeClass('input-field-grey');
	}
	}catch(e){
			// To Do
		}
}

function textfieldTitleClick(obj, defaultValue, searchTypeHiddenId){
	try{
	if(typeof(searchTypeHiddenId)==='undefined') searchTypeHiddenId = '';
	var searchTypeVal = '';
	if(searchTypeHiddenId != ''){
	  searchTypeVal	= $('#'+searchTypeHiddenId).val();
	}
	if(obj.value == defaultValue || (searchTypeVal != '' && obj.value == searchTypeVal)){
		$(obj).val('');
		$(obj).removeClass('input-field-grey');
	}
	}catch(e){
			// To Do
		}
}

// Attachment : While do click on to edit, the textbox class will change
function toEditInline(attachId,callEvent) {
	try{
	$("#"+attachId).addClass("edit-attachment-txtbox");
	$("#"+attachId).removeClass("non-editable-txt");
	$("#catalog-attachment-disp-container").find(".attachment-txt-box").each(function(){
	    var gId = $(this).attr("id");
	    if((gId  == attachId) && (callEvent == 'click')) {
	    	$("#"+gId).removeClass("edit-attachment-txtbox");
	    	$("#"+gId).addClass("edit-attachment-txtbox");
	    	$("#"+gId).removeClass("non-editable-txt");
	    } else {
	    	$("#"+gId).removeClass("edit-attachment-txtbox");
	    	$("#"+gId).removeClass("non-editable-txt");
	    	$("#"+gId).addClass("non-editable-txt");
	    }
	});
	}catch(e){
			// To Do
		}
}

//Attachment : While do click on text label, the textbox should be appear with dottet line
function toEditAttachment(id,act) {
	try{
	var callEvent ='blur';
	if(act == 'label') {
		$("#attachment_list_label_"+id).hide();
		$("#attachment_list_edit_"+id).show();
		$("#attachment_list"+id).focus();
		callEvent = 'click';
	} else {
		$("#attachment_list_edit_"+id).hide();
		$("#attachment_list_label_"+id).show();
	}
	var attachId = 'attachment_list'+id;
	$("#"+attachId).addClass("edit-attachment-txtbox");
	$("#"+attachId).removeClass("non-editable-txt");
	$("#catalog-attachment-disp-container").find(".attachment-txt-box").each(function(){
	    var gId = $(this).attr("id");
	    if((gId  == attachId) && (callEvent == 'click')) {
	    	$("#"+gId).removeClass("edit-attachment-txtbox");
	    	$("#"+gId).addClass("edit-attachment-txtbox");
	    	$("#"+gId).removeClass("non-editable-txt");
	    } else {
	    	$("#"+gId).removeClass("edit-attachment-txtbox");
	    	$("#"+gId).removeClass("non-editable-txt");
	    	$("#"+gId).addClass("non-editable-txt");
	    }
	});
	}catch(e){
			// To Do
		}
}

// Attachment: In Edit attachment, to prevent default enter key submit
function toEditAttachmentKeyDown(evt) {
	try{
	evt = evt || window.event;
    var charCode = evt.keyCode || evt.which;
    if (charCode == 13) {
    	$("#attachment_done_btn").click();
    	evt.preventDefault();
        return false;
    }
	}catch(e){
			// To Do
		}
}

function disableEnrterKey(evt){
	try{
	  var eve = evt || window.event;
	  var keycode = eve.keyCode || eve.which || eve.charCode;

	  if (keycode == 13) {
	    eve.cancelBubble = true;
	    eve.returnValue = false;

	    if (eve.stopPropagation) {
	      eve.stopPropagation();
	      eve.preventDefault();
	    }

	    return false;
	  }
	}catch(e){
			// To Do
		}
}

function textfieldTitleChange(obj) {
	try{
	var selectTxt = obj.options[obj.selectedIndex].text;
	if(selectTxt == 'Select'){
		$(obj).removeClass('select-normal-text');
		$(obj).addClass('select-greyed-out-text');
	} else {
		$(obj).removeClass('select-greyed-out-text');
		$(obj).addClass('select-normal-text');
	}
	}catch(e){
			// To Do
		}
}
/* function selectDropdownOnclick(){
	var insList = $('#load_multiselect_session_instructor').val();
	var selectedId = $('#edit-session-presenter :selected').val();
	if(insList != null && insList != undefined  && insList != ''){
			var opt ='';
			var url = "/?q=administration/session/allpresenter/"+insList;
			$.ajax({
				url : url,
				async: false,
				success: function(data) {
					var is_selected = false;
					$.each(data, function(){
						var selected = "";
						if(this.id == selectedId) {
							selected = "selected";
							is_selected = true;
						}
						opt += '<option title="'+this.full_name+'" value="'+this.id+'"  ' +selected+ '>'+this.full_name+'</option>';
					});
					var selCls = (is_selected === false) ? "selected" :"";
					opt = '<option title="Select" '+selCls+'> Select </option>'+opt;
					$('#edit-session-presenter').html(opt);
					//$('#change_instructor').val(1);
				}
			});
	}else{
		$('#edit-session-presenter').html('<option title="Select"  value="selected">Select</option>');
	}
	
} */
function textfieldTitleChangeField(fieldId) {
	try{
	var selectTxt = $('#'+fieldId+' option:selected').text();
	if(selectTxt == 'Select'){
		$('#'+fieldId).removeClass('select-normal-text');
		$('#'+fieldId).addClass('select-greyed-out-text');
	} else {
		$('#'+fieldId).removeClass('select-greyed-out-text');
		$('#'+fieldId).addClass('select-normal-text');
	}
	}catch(e){
			// To Do
		}
}

function remove_messages(msgType){
	try{
	if(msgType == 'class') {
		$('#catalog-class-addedit-form-details .messages').remove();
	} else if(msgType == 'course') {
		$('#catalog-course-basic-addedit-form .messages').remove();
	} else if(msgType == 'location'){
		$('#resource-location-basic-addedit-form .messages').remove();
	} else if(msgType == 'facility'){
		$('#resource-facility-basic-addedit-form .messages').remove();
	}else if(msgType == 'profile'){
		$('#exp-sp-my-profile-form').remove();
	}else if(msgType == 'customattribute') { //#custom_attribute_0078975
		$('#customattribute-basic-addedit-form .messages').remove();
	}
	}catch(e){
			// To Do
		}
}

function opt_sel_attach(id) {
	try{
	if($("#edit-attachment-fieldset-attachment-attachment-radioname-"+id+"-url").attr("checked")) {
		$("#attach_url_control"+id).show();
		$("#attach_browse_control"+id).hide();
	} else {
		$("#attach_url_control"+id).hide();
		$("#attach_browse_control"+id).show();
	}
	}catch(e){
			// To Do
		}
}

function getStatusReason(statusSelectField, uniqueId) {
  try{
	var selectId = $(statusSelectField).attr('id');
	var statusName = $('#' + selectId + ' option:selected').text().toLowerCase();

	if (statusName == 'inactive') {
		$('#admin-status-inactive-part-' + uniqueId).show();
	} else {
		$('#admin-status-inactive-part-' + uniqueId).hide();
	}

	Drupal.ajax.prototype.commands.CtoolsModalAdjust();
  }catch(e){
		// To Do
	}
}
function changeDelTypeInAddClass(delTypeCode){
	try{
	if(delTypeCode != 'lrn_cls_dty_ilt') {
		var locationId = $('.addedit-edit-new_location').attr('id');
		$('#'+locationId).val('');
		$('.addedit-edit-new_location').attr('id');
		$('#'+locationId).val('');
		var maxSeatId = $('.addedit-edit-max_seats').attr('id');
		$('#'+maxSeatId).val('');
	}
	}catch(e){
			// To Do
		}
}

function changeDeliveryType(delTypeCode){
 try{
	//var selectId = $(deliveryType).attr('id');
	//var delTypeCode = $('#'+selectId).val();
	if(delTypeCode == 'lrn_cls_dty_vod' || delTypeCode == 'lrn_cls_dty_wbt'){
		$('#admin-class-delivery-data-part').hide();
		$('#admin-class-delivery-data-part-for-date').hide();//ui-datepicker-trigger
		//$('#admin-class-register-date-container').find('#edit-reg-end-date').attr('readonly','readonly').addClass('admin-grey-out-fields');
		//$('#admin-class-register-date-container').find('.ui-datepicker-trigger').css('visibility','hidden');
		$('.addedit-edit-min_seats').attr('readonly','readonly').addClass('admin-grey-out-fields');
		$('.addedit-edit-max_seats').attr('readonly','readonly').addClass('admin-grey-out-fields');
		$('.addedit-edit-waitlist_count').attr('readonly','readonly').addClass('admin-grey-out-fields');
		$('#admin-class-location-container').find('#edit-class-location').attr('readonly','readonly').addClass('admin-grey-out-fields');
		$('.addedit-edit-class_location').attr('disabled',true);
		$('#two-col-row-lang_code_status_status_temp .addedit-twocol-secondcol .addedit-mandatory').css('visibility','hidden');
		$('#two-col-row-regdate_deadlinedate .addedit-twocol-secondcol .addedit-mandatory').css('visibility','hidden');
		$('#two-col-row-delivery_type_price .addedit-twocol-secondcol .addedit-mandatory').css('visibility','hidden');

	}
	else{
		$('#admin-class-delivery-data-part').show();
		$('#admin-class-delivery-data-part-for-date').show();
		//$('#admin-class-register-date-container').find('#edit-reg-end-date').removeAttr('readonly').removeClass('admin-grey-out-fields');
		//$('#admin-class-register-date-container').find('.ui-datepicker-trigger').css('visibility','visible');
		$('.addedit-edit-min_seats').removeAttr('readonly').removeClass('admin-grey-out-fields');
		$('.addedit-edit-max_seats').removeAttr('readonly').removeClass('admin-grey-out-fields');
		$('.addedit-edit-waitlist_count').removeAttr('readonly').removeClass('admin-grey-out-fields');
		//$('#admin-class-location-container').find('#edit-class-location').removeAttr('readonly').removeClass('admin-grey-out-fields');
		$('#two-col-row-regdate_deadlinedate .addedit-twocol-secondcol .addedit-mandatory').css('visibility','visible');
		$('#two-col-row-delivery_type_price .addedit-twocol-secondcol .addedit-mandatory').css('visibility','visible');

		if(delTypeCode == 'lrn_cls_dty_vcl'){
			$('#admin-class-location-container').find('#edit-class-location').attr('readonly','readonly').addClass('admin-grey-out-fields');
			$('.addedit-edit-class_location').attr('disabled',true);
			//$('#two-col-row-waitlist_count_currency_type').find('.addedit-mandatory').css('visibility','hidden');
			$('#two-col-row-lang_code_status_status_temp .addedit-twocol-secondcol .addedit-mandatory').css('visibility','hidden');
		}
		else if(delTypeCode == 'lrn_cls_dty_ilt') {
		  $('#admin-class-location-container').find('#edit-class-location').removeAttr('readonly').removeClass('admin-grey-out-fields');
		  $('.addedit-edit-class_location').attr('disabled',false);
			//$('#two-col-row-waitlist_count_currency_type').find('.addedit-mandatory').css('visibility','visible');
		  $('#two-col-row-lang_code_status_status_temp .addedit-twocol-secondcol .addedit-mandatory').css('visibility','visible');
		}
		else {
			$('.addedit-edit-class_location').attr('disabled',false);

			//$('#two-col-row-waitlist_count_currency_type').find('.addedit-mandatory').css('visibility','hidden');
			$('#two-col-row-lang_code_status_status_temp .addedit-twocol-secondcol .addedit-mandatory').css('visibility','hidden');
		}
	}
 }catch(e){
		// To Do
	}
}

function displayLongDescription(desc){
	try{
	if(desc == 'short_description') {
		var shortLength = $('.admin-course-class-short-description').find('.addedit-new-field-value').height();
		if(shortLength >= 50) {
				//$('.admin-course-class-short-description').find('.addedit-new-field-value').addClass('add-scroll-button-description');
		}
	}
	else if(desc == 'long_description') {
		var longLength = $('.admin-course-class-long-description').find('.addedit-new-field-value').height();
		if(longLength >= 50) {
				//$('.admin-course-class-long-description').find('.addedit-new-field-value').addClass('add-scroll-button-description');
		}
	}
	}catch(e){
			// To Do
		}
}

function limitTextareaChars(limitField, limitNum){
	try{
	var textValue = $('.textformat-textarea-editor').val();
	var newTextValue = '';
	var limitCount = '';
	if (textValue.length > limitNum) {
		newTextValue = textValue.substring(0, limitNum);
		$('.textformat-textarea-editor').val(newTextValue);
	} else {
		//limitCount = limitNum - textValue.length;
		limitCount = textValue.length;
		$('#char_count_' + limitField).html(limitCount);
	}
	}catch(e){
			// To Do
		}
}

//Added for Custom Attribute #custom_attribute_0078975
function limitCustomAttributeTextareaChars(limitField, limitNum){ 
	try{
	 //alert('limitCustomAttributeTextareaChars');
	var textValue = $('#'+limitField+'_textarea_full_row .textformat-textarea-editor').val();
	// alert('textValue='+textValue);
	var newTextValue = '';
	var limitCount = '';
	if (textValue.length > limitNum) {
		newTextValue = textValue.substring(0, limitNum);
		//$('.textformat-textarea-editor').val(newTextValue);
		$('#'+limitField+'_textarea_full_row .textformat-textarea-editor').val(newTextValue);
		$('#char_count_' + limitField).html(limitNum);
	} else {
		//limitCount = limitNum - textValue.length;
		limitCount = textValue.length;
		$('#char_count_' + limitField).html(limitCount);
	}
	}catch(e){
			// To Do
		}
}



//For MetaTag Feature
function limitTextFieldChars(limitField, limitNum){
	try{
	var textValue = $('.addedit-edit-textfield').val();
	var newTextValue = '';
	var limitCount = '';
	if (textValue.length > limitNum) {
		newTextValue = textValue.substring(0, limitNum);
		$('.addedit-edit-textfield').val(newTextValue);
	} else {
		//limitCount = limitNum - textValue.length;
		limitCount = textValue.length;
		$('#char_count_' + limitField).html(limitCount);
	}
	}catch(e){
			// To Do
		}
}

function fillCancelReason(uniqueId){
	try{
	var cancelReason = $('#cancel_reason_'+uniqueId).val();
	$('input[name="hidden_cancel_reason"]').val(cancelReason);
	$('#qtipIdqtip_class_cancel_disp_'+uniqueId).closest('.qtip-active').remove();
	}catch(e){
			// To Do
		}
}

(function($) {
	$.fn.refreshVersionList = function(contentId) {
		try{
		/* refresh version list on save or other action performed */
		//var pageNo = $(".ui-pg-input").val();
		$("body").data("mulitselectdatagrid").createLoader("paint-class-search-results-datagrid");
		$("#admin-version-list-"+contentId+"-pagination").trigger("reloadGrid",[{page:1}]);
		}catch(e){
  			// To Do
  		}
	};
	
	$.fn.putCustomLabelForContentAuthor = function(){
		putCustomLabelForContentAuthorWrapper();
	};
	
	$.fn.initializePresentationObjects = function()
	{
		initializePresentationObjectsWrapper();	 
	
	}
	$.fn.hideUploadVideoControlAndDisplayLabel = function()
	{
	
		hideUploadVideoControlAndDisplayLabelWrapper();
	};
})(jQuery);


(function($) {
	$.fn.refreshMoveUsersQtip = function(contentId,versionId) {
		try{
		$('input[name="hidden_idlist_ContentMoveUsers-'+contentId+'-'+versionId+'"]').attr('value',0);
		/* refresh users list in move users qtip on save or other action performed */
		$("#datagrid-container-ContentMoveUsers-"+contentId+"-"+versionId).trigger("reloadGrid",[{page:1}]);
		}catch(e){
  			// To Do
  		}
	};

  $.fn.closeMoveUsersQtip = function() {
	  try{
    $(".qtip-active").remove();
    isPopupOpen=0;
	  }catch(e){
			// To Do
		}
  };
})(jQuery);

(function($) {
	$.fn.attachClose = function(entityId,entityType,type) {
		try{
		if(entityType == 'cre_sys_obt_trp'|| entityType == 'cre_sys_obt_cur' || entityType == 'cre_sys_obt_crt' || entityType == 'cre_sys_obt_trn') {
			var object_id = entityId.split('-');
			entityId = object_id[0];
			$('#qtipAttachCrsIdqtip_visible_disp_'+entityId+'_'+entityType).closest('.qtip-active').remove();
		}else if(entityType == 'cre_sec'){
			$('#qtipAttachIdqtip_addusers_visible_disp_'+entityId+'_'+entityType).closest('.qtip-active').remove();
		}else if(entityType == 'admin-order'){
			$(".active-qtip-div").remove();
		}else{
			$('#qtip_visible_disp_attach_question_'+entityId+'_'+entityType).closest('.qtip-active').remove();
		}
		if(entityType == 'cre_sys_obt_trp' || entityType == 'cre_sys_obt_cur' || entityType == 'cre_sys_obt_crt' || entityType == 'cre_sys_obt_trn'){
			var modId = object_id[1];
			var pos = ''; 
			if(modId != '' && modId != undefined && modId != 'undefined' && ($("#module-list-"+modId).index()>= 0)){
				pos = $("#module-list-"+modId).index();
				
			}else{
				//pos = ($(".first-arrow").size() > 0) ? 1 : 0;
				pos = $( "#page-container-tabs-prg .visible-main-tab:last" ).index();
			}
				if($( ".first-arrow" ).size() > 0 ){
					pos = pos-1;
				}
			$( "#page-container-tabs-prg" ).tabs('destroy');
			
	    	$( "#page-container-tabs-prg" ).tabs({
	    		selected: pos
	    	});
	    	
	    	/*Diable attach courses*/
	    	var str = $('#program_attach_tabs .ui-state-active').attr('id');
			var currmod = str.split('-');
			moduleTabclick(currmod[2]);
		}
		}catch(e){
  			// To Do
  		}
	};
})(jQuery);

(function($) {
	$.fn.validateCustomFields = function(customWrapperId,customErrorFlag) {
		try{
		if(customErrorFlag==true)
			$('#'+customWrapperId).show();
		}catch(e){
  			// To Do
  		}
	};
})(jQuery);

(function($) {
	try{
	$.fn.validateCertificate = function(defaultCertifyId) {
		$('input:radio[name="attach_certificate"]').filter('[value="'+defaultCertifyId+'"]').attr('checked', true);
		$('#certificate-display-table').jScrollPane({});
	};
	}catch(e){
			// To Do
		}
})(jQuery);

(function($) {
	try{
	$.fn.scrollPerm = function(permWrapperId) {
		$('#admin-add-scroll').jScrollPane({});
	};
	}catch(e){
			// To Do
		}
})(jQuery);

(function($) {
	try{
	$.fn.scrollTag = function(tagWrapperId) {
		$('#tag-scroll-id').jScrollPane({});
	};
	}catch(e){
			// To Do
		}
})(jQuery);

(function($) {
	try{
	$.fn.scrollView = function(argsList) {
		$("#view-scroll-wrapper").jScrollPane({});
		vtip();
		if($('#viewgroup-detail-wrapper').length) {	//to check group view form is open
			$('#modalContent .ctools-modal-content #ctools-face-table .popup-block-footer-right').css('right', '45px'); //57996
		}
	};
	}catch(e){
			// To Do
		}
})(jQuery);

(function($) {
	try{
	$.fn.cancelClassDetails = function(classId, editable) {
		$('#qtipAttachIdqtip_addlocation_visible_disp_'+classId).closest('.qtip-active').remove();

		if(document.getElementById('qtipAttachIdqtip_addclass_visible_disp_'+classId)){
		  $('#qtipAttachIdqtip_addclass_visible_disp_'+classId).closest('.qtip-active').remove();
		}
		if(document.getElementById('qtipAttachIdqtip_addclass_visible_disp_')){
			  $('#qtipAttachIdqtip_addclass_visible_disp_').closest('.qtip-active').remove();
		}
		if(document.getElementById('qtip_editclass_visible_dispid_'+classId)){
		  $('#qtip_editclass_visible_dispid_'+classId).closest('.qtip-active').remove();
		}
		if (!editable && editable != null && editable != undefined) {
			$("#edit-catalog-course-basic-cancel").click();
		}
		$('#catalog-class-addedit-form-details .addedit-form-wrapper').hide();
		$('.edit-class-list').css('background-color','#FFFFFF');
		$('.edit-class-list').find('.admin-add-button-container').css('display','block');
		$('#catalog-class-basic-addedit-form-'+classId).hide();
	};

	}catch(e){
			// To Do
		}
})(jQuery);

(function($) {
	$.fn.cancelFacilityDetails = function(facilityId) {
		try{
		$('#resource-facility-addedit-form-details .addedit-form-wrapper').hide();
		$('.edit-class-list').css('background-color','#FFFFFF');
		$('.edit-class-list').find('.admin-add-button-container').css('display','block');
		$('#resource-facility-basic-addedit-form-'+facilityId).hide();
		}catch(e){
  			// To Do
  		}
	};
})(jQuery);

function clearMessages(){
	try{
	$(".messages").hide();
	}catch(e){
			// To Do
		}
}

/*function attachmentUploadFile() {
  var provideUrlVisibility = $('#provide_url_id').is(':visible');

  if(provideUrlVisibility == true){
	 $("#provide_url_id").hide();
  }
  $("#attachment_upload_file").click();
}*/

function attachmentProvideUrl() {
	try{
	var provideUrlVisibility = $('#provide_url_id').is(':visible');

	if(provideUrlVisibility == true){
		$("#provide_url_id").hide();
	} else {
		$("#provide_url_id").show();
	}
	}catch(e){
			// To Do
		}
}
function bubblePopupClose(popupId) {
	try{
	$("#"+popupId).remove();
	}catch(e){
			// To Do
		}
}

function removebubblePopup(){
	try{
	$('.qtip').remove();
	}catch(e){
			// To Do
		}
}

function attachSubmitUrl() {
	try{
	//alert("Heree calling");
	// attachment_done_btn
	$("#attachment_done_btn").click();
	}catch(e){
			// To Do
		}
}

function validateCustomFieldClass() {
	try{
	$("#userbasic-custom-fields").find('.input-field-grey').each(function(){
	    var gId= $(this).attr("id");
	    var gVal = $("#"+gId).val();
	    if((gVal == 'Enter a Label') || (gVal == 'Enter a Value')) {
	        $("#"+gId).removeClass('input-field-grey');
	    	$("#"+gId).addClass('input-field-grey');
	    } else {
	    	$("#"+gId).removeClass('input-field-grey');
	    }
	});
	}catch(e){
			// To Do
		}
}


function sequenceDragAndDrop(containerId, type){
	try{
	if(type == 'attach_class_content'){
	  $("#"+containerId+' tbody').sortable({
		handle: '.dragndrop-selectable-item',
		cursor: 'crosshair'
	  });
	}
	else{
	  $("#"+containerId).sortable({
		handle: '.dragndrop-selectable-item',
		cursor: 'crosshair'
	  });
	}
	//$("#"+containerId).bind('click.sortable mousedown.sortable',function(ev){ ev.target.focus(); });
	//$("#"+containerId).disableSelection();
	$("#"+containerId).droppable({
		drop: function( event, ui ) {
			var sequenceOrder = '';
			var sequenceOrderArray = new Array();
			var c = 0;
			if(type == 'attach_class_content'){
				var currentId = $('#'+containerId+' tr.ui-sortable-helper').attr('id');
				var prevId = $('#'+containerId+' tr.ui-sortable-placeholder').prev().attr('id');
			}
			else{
				var currentId = $('#'+containerId+' li.ui-sortable-helper').attr('id');
				var prevId = $('#'+containerId+' li.ui-sortable-placeholder').prev().attr('id');
			}
			var recordStored = 0;
			if(prevId == undefined){
				sequenceOrderArray[0] = currentId;
				recordStored = 1;
				c = 1;
			}
			if(type == 'attach_class_content'){
				$('#'+containerId+' tr.ui-widget-content').each(function(){
					if($(this).attr('id') != currentId){
						sequenceOrderArray[c] = $(this).attr('id');
						if($(this).attr('id') == prevId){
							c++;
							sequenceOrderArray[c] = currentId;
						}
					}
					c++;
			   });
			}
			else{
				$('#'+containerId+' li.draggable-list').each(function(){
				if($(this).attr('id') != currentId){
					sequenceOrderArray[c] = $(this).attr('id');
					if($(this).attr('id') == prevId){
						c++;
						sequenceOrderArray[c] = currentId;
					}
				}
				c++;
				});
			}
			sequenceOrder = sequenceOrderArray.join(",");
			var obj = EXPERTUS_SMARTPORTAL_AbstractDetailsWidget;
			obj.createLoader(containerId);
			var i=1;
			$.ajax({
				url : obj.constructUrl("administration/sequence-drag-drop/"+type+"/"+sequenceOrder),
				async: false,
				success: function(data) {
					obj.destroyLoader(containerId);
					var sequenceArray = sequenceOrderArray.filter(function(v){return v!==''});
					var list_values = ($('#dragndrop li.draggable-list').length)-1;
					var arrLen = sequenceArray.length;
					if(list_values == arrLen ) {
						var i = 0;
						for(i=0; i<arrLen; i++) {
							$("#dragndrop li[id="+ sequenceArray[i] +"]").removeClass('odd-even-row-highlighter');
							if (i%2 == 1) {
								$("#dragndrop li[id="+ sequenceArray[i] +"]").addClass('odd-even-row-highlighter');
							}
						}
					}

				}
			});

		}
	});
	}catch(e){
			// To Do
		}
}
    $('#mandatory-list .man-opt-selection').live('click', function(){
    	try{
		if($(this).next().css('display') == 'block'){
			$(this).next().css('display', 'none');
		} else {
			$('.sub-menu').hide();
			$(this).next().css('display', 'block');
		}
    	}catch(e){
  			// To Do
  		}
	});


	$('#mandatory-list .sub-menu li').live('click', function(){
		try{
		var selectedMO = $(this).html();
		$(this).parent().prev('span').prev('span').html(selectedMO);
		$(this).parent().css('display', 'none');
		var obj = EXPERTUS_SMARTPORTAL_AbstractDetailsWidget;

		var attachValues = $(this).attr('data');
		//alert(attachValues);
		var manValue = 1;
		obj.createLoader('attach_course_dt');
		$.ajax({
			url : obj.constructUrl("administration/update-attachedcourse-mandatory/"+attachValues),
			async: false,
			success: function(data) {
				obj.destroyLoader('attach_course_dt');
				$("#root-admin").data("narrowsearch").refreshGrid();
			}
		});

		return false;
		}catch(e){
  			// To Do
  		}
	});


    $('#attach-question-mandatory-list .man-opt-selection').live('click', function(){
    	try{
		if($(this).next().css('display') == 'block'){
			$(this).next().css('display', 'none');
		} else {
			$(this).next().css('display', 'block');
		}
    	}catch(e){
  			// To Do
  		}
	});


	$('#attach-question-mandatory-list .sub-menu li').live('click', function(){
		try{
		var selectedMO = $(this).html();
		$(this).parent().prev('span').prev('span').html(selectedMO);
		$(this).parent().css('display', 'none');
		var obj = EXPERTUS_SMARTPORTAL_AbstractDetailsWidget;

		var attachValues = $(this).attr('data');
		//alert(attachValues);
		var manValue = 1;
		obj.createLoader('survey_attach_questions_dt');
		$.ajax({
			url : obj.constructUrl("administration/update-attachedquestion-mandatory/"+attachValues),
			async: false,
			success: function(data) {
				obj.destroyLoader('survey_attach_questions_dt');
			}
		});

		return false;
		}catch(e){
  			// To Do
  		}
	});


	(function($) {
		$('.addedit-customfields-wrapper .custom-field-label').live('dblclick', function(){
			try{
			var labelId = $(this).attr('id');
			var inputId = labelId.replace('custom_label_custom_value_', 'custom_input_custom_value_');
			$('#'+labelId).hide();
			$('#'+inputId).show();
			$('#'+inputId+' input').focus();
			}catch(e){
	  			// To Do
	  		}
		});
	})(jQuery);

	function updateCustomLabelKeyDown(evt, newValue, labelDetails, id, loaderWrapper){
		try{
		evt = evt || window.event;
	    var charCode = evt.keyCode || evt.which;
	    if (charCode == 13) {
	        updateCustomLabel(newValue, labelDetails, id, loaderWrapper);
	        evt.preventDefault();
	        return false;
	    }
		}catch(e){
  			// To Do
  		}
	}

	function updateCustomLabel(newValue, labelDetails, id, loaderWrapper) {
		try{
		var labelDetailsArray = labelDetails.split('-');
		var customId = labelDetailsArray[0];
		var entityId = labelDetailsArray[1];
		var entityType = labelDetailsArray[2];

		var obj = EXPERTUS_SMARTPORTAL_AbstractDetailsWidget;
		obj.createLoader(loaderWrapper);
		$.ajax({
			type: "POST",
			async: false,
			url: obj.constructUrl("administration/update-custom-fields/"+newValue+"/"+customId),
			data: '',
			success: function(result){
				$('#custom_label_custom_value_'+id).html(result);
				$('#custom_input_custom_value_'+id).hide();
				$('#custom_label_custom_value_'+id).attr('title', newValue);
				$('#custom_label_custom_value_'+id).show();
				obj.destroyLoader(loaderWrapper);
			},
			failure : function(){
				obj.destroyLoader(wrapper);
			}
	    });
		}catch(e){
  			// To Do
  		}
		    }
	function attachCrsDelete(callId) {
		try{
		if(availableFunctionalities.exp_sp_esignature != undefined && availableFunctionalities.exp_sp_esignature != ""){
			var esignObj = {'esignFor':'attachCrsDelete','objectId':callId};
			$.fn.getNewEsignPopup(esignObj);
		}else{
			$("#"+callId).click();
		    }
		}catch(e){
  			// To Do
  		}
	}

	function setQtipPosition(){
		try{
		if(document.getElementById('qtip_position')!=null){
			if($('#qtip_position').val()!=''){
				try{
					var initVal = $('#qtip_position').val().split('#');
					var bubbleha = $("#"+initVal[0]).css('height');
					var bubbleTop = initVal[1];
					var bubblehb = initVal[2];
					bubbleha = parseInt(bubbleha.substring(0,bubbleha.length-2));
					bubbleTop = bubbleTop-(bubbleha-bubblehb);
					$("#"+initVal[0]).closest(".qtip-active").css('top',bubbleTop);
				}catch(e){}
			}
		}
		}catch(e){
  			// To Do
  		}
	}

	/**
	 * closeQtyp()
	 *
	 * This function has been added by Vincent on July 19, 2012.
	 * This will be called on clicking the qtip close icon form the top right corner of the Qtip
	 *
	 * @param id
	 * @return
	 */
	function closeQtyp(id,courseId){
		try{
		var tmp ;
		//reloadFlagForPagination=true;
		if(id.indexOf('addclass')>=0){
			tmp=0;
			 //Fixed for #0038166 : added to get hidden value before ctool get closed.
	        var emptyId = $('#bubble-face-table #empty_id').val();
			var entityType = $('#bubble-face-table #entity_value').val();
			if(emptyId != null && emptyId != undefined  && emptyId != ''){
		    	var url = "?q=administration/catalogaccess/delete/"+emptyId+"/"+entityType;
		    	$.ajax({
		 		   type: "POST",
		 		   url: url,
		 		   data:  '',
		 		   success: function(respText){
		 			  res = respText;
		 	  		}
		 		 });
		  	}
		}else{
			tmp = id.substring(id.indexOf('dispid_')+7);
		}
		if(id.indexOf('addclass')>=0 || id.indexOf('editclass')>=0){
		  //Drupal.ckeditorSubmitAjaxForm();
			$("#admin-course-class-list-pagination-wrapper").empty().remove();
			$('#paint-class-search-results-datagrid').empty().remove();
			var res = document.getElementById('enrollment_upload_done_btn_view');
			var result = document.getElementById('course_class_cancel_button');
			if(document.getElementById('attachment-addedit-form-html')){
					$('#attachment-addedit-form-html').attr('enctype','application/x-www-form-urlencoded');
				if(document.getElementById('attachment_upload_file')!=undefined && document.getElementById('attachment_upload_file')!=null && document.getElementById('attachment_upload_file')!='')
					$('#attachment_upload_file').remove();
			}
			else if(res !=null && res != undefined && res != '' ){
				var formname = document.getElementsByClassName('addedit-form');
				if (formname.length > 0)
						$('.addedit-form').attr('enctype','application/x-www-form-urlencoded');
				if(document.getElementById('enrollment_upload_file_view')!=undefined && document.getElementById('enrollment_upload_file_view')!=null && document.getElementById('enrollment_upload_file_view')!='')
					$('#enrollment_upload_file_view').remove();
				if(document.getElementById('enrollment_upload_file')!=undefined && document.getElementById('enrollment_upload_file')!=null && document.getElementById('enrollment_upload_file')!='')
					$('#enrollment_upload_file').remove();
			} else if(result !=null && result != undefined && result != '' ){
				var formname = document.getElementsByClassName('addedit-form');
				if (formname.length > 0)
					$('.addedit-form').attr('enctype','application/x-www-form-urlencoded');
				if(document.getElementById('enrollment_upload_file_view')!=undefined && document.getElementById('enrollment_upload_file_view')!=null && document.getElementById('enrollment_upload_file_view')!='')
					$('#enrollment_upload_file_view').remove();
				if(document.getElementById('enrollment_upload_file')!=undefined && document.getElementById('enrollment_upload_file')!=null && document.getElementById('enrollment_upload_file')!='')				
					$('#enrollment_upload_file').remove();
				if(document.getElementById('course_class_cancel_button')!=undefined && document.getElementById('course_class_cancel_button')!=null && document.getElementById('course_class_cancel_button')!='')
		 	        $("#course_class_cancel_button").click();
			}
		  	removeQtip(tmp);
		  	if(window.location.href.indexOf("admincalendar")>0)
			{
				$(".close").click();
				adminCalCloseHandler("classaddedit");
			}
		}
		if(id.indexOf('addtemplate') >=0 || id.indexOf('edittemplate') >=0 ){
			//alert(document.getElementById('notify_template_cancel_button'));
			$("#notify_template_cancel_button").click();
			removeClassQtip();
		}
		if(id.indexOf('MoveUsersqtip') >=0 ){
			var contentId = id.split("_");
			isPopupOpen=0;
			$.fn.refreshVersionList(contentId[3]);
		}
		$('#'+id+"_disp").html('');
		$('#'+id+"_disp").closest(".qtip-active").hide();
		
		if(id == "qtipAttachIdqtip_listvalues_visible_disp_0_cre_usr_dpt" || id == "qtipAttachIdqtip_listvalues_visible_disp_0_cre_usr_etp" || id == "qtipAttachIdqtip_listvalues_visible_disp_0_cre_usr_jrl"  || id == "qtipAttachIdqtip_listvalues_visible_disp_0_cre_usr_jtl" || id == "qtipAttachIdqtip_listvalues_visible_disp_0_cre_usr_ptp"){
			$('.page-administration-people-setup #add_lst_pg_next,.page-administration-people-setup #add_lst_pg_previous,.page-administration-people-setup #add_lst_pg_last,.page-administration-people-setup #add_lst_pg_first,.page-administration-people-setup #add_lst_pg_txtfld,.page-administration-people-setup #listvalues-autocomplete,.page-administration-people-setup #search_listvalues').removeAttr('style');								
		}
		
		
		}catch(e){
  			// To Do
  		}
	}

	/**
	 * setWordCountDiv()
	 *
	 * This function has been added by Vincent on July 24, 2012 to fix ckeditor word count issue(#0014481).
	 * It is drived form /ckeditor/wordcount/plugin.js to create word count div
	 *
	 * @param id
	 * @return
	 */
	function setWordCountDiv(id){
		try{
		setTimeout(function(){
			try{
				var editorRealName;
				var editor = CKEDITOR.instances[id];
				if(editor!=null && editor!=undefined && editor!='undefined'){
					editorRealName = (editor.element.$.name).split('[');
					if(!document.getElementById('cke_wordcount_'+editor.name)) {
			    		$('#char_count_'+editorRealName[0]).html('<div id="cke_wordcount_'+editor.name+'" style="display: inline-block; float: right; text-align: right; margin-top: 0px; cursor:auto; font:10px helvetica neue,helvetica,arial; height:auto; padding:0; text-align:left; text-decoration:none; vertical-align:baseline; white-space:nowrap; width:auto;color:#666666;">'+$('#char_count_'+editorRealName[0]).html()+'</div>');
			    	}
				}
			}catch(e){
				//Do nothing;
			}
		},4000);
		}catch(e){
  			// To Do
  		}
	}

	function removeAllQtip(){
		try{
		$('.qtip').remove();
		}catch(e){
  			// To Do
  		}
	}

	function removeQtip(id){
		try{
		//reloadFlagForPagination = true;
		if(id== -1){
			$('#qtipAttachIdqtip_addlocation_visible_disp__close').closest('.qtip').remove();
		}else if(id==0){
			$("#course_class_cancel_button").click();
			$('#qtipAttachIdqtip_addclass_visible_disp__close').closest('.qtip').remove();
			$('#qtipAttachIdqtip_addlocation_visible_disp__close').closest('.qtip').remove();
		}else{
			$("#course_class_cancel_button").click();
			$('#qtipAttachIdqtip_addlocation_visible_disp_'+id+'_close').closest('.qtip').remove();
		}
		removeClassQtip();
		}catch(e){
  			// To Do
  		}
	}

	function removeClassQtip(){
		try{
		$('.qtip').find('.qtip-button > div').each(function(){
		    var x = $(this).attr('id');
			if(x.indexOf('cre_sys_obt_cls')>0 || x.indexOf('Class_close')>0){
			 $(this).closest('.qtip').remove();
			};
		});
		}catch(e){
  			// To Do
  		}
	}


(function($) {
	$.fn.addCustomGrayConversion = function(customCount) {
		try{
		//alert(customCount);
		/*for(var i=0; i<customCount;i++){
			$('.addedit-edit-custom-label-field-'+i).addClass('input-field-grey');
			$('.addedit-edit-textarea-custom_value_'+i).addClass('input-field-grey');

		}*/
		$(".addedit-customfields-wrapper").find('.input-field-grey').each(function(){
		    var gId= $(this).attr("id");
		    var gVal = $("#"+gId).val();
		    if((gVal == 'Enter a Label') || (gVal == 'Enter a Value')) {
		        $("#"+gId).removeClass('input-field-grey');
		    	$("#"+gId).addClass('input-field-grey');
		    } else {
		    	$("#"+gId).removeClass('input-field-grey');
		    }
		});
		}catch(e){
  			// To Do
  		}
	};

	// Time picker
	/*$('input.exp-timepicker').live('click',function(){
		var attributeId = $(this).attr('id');
		var expDropDownId = 'exp-dropdown-'+attributeId;
		var hours, minutes;
		$('.exp-timepicker-selection').css('display', 'none');
		if($('#'+expDropDownId).length >0){
			if($('#'+expDropDownId).is(':visible') == true){
				$('#'+expDropDownId).css('display', 'none');
			} else {
	 			$('#'+expDropDownId).css('display', 'block');
			}
		} else {
			$(this).after('<div id="'+expDropDownId+'" data="'+attributeId+'" class="exp-timepicker-selection"><ul></ul></div>');
			for(var i = 0 ;i <= 1425; i += 15){
				hours = Math.floor(i / 60);
				minutes = i % 60;
				if (hours < 10){
				    hours = '0' + hours;
				}
				if (minutes < 10){
				    minutes = '0' + minutes;
				}
				$('#'+expDropDownId+' ul').append('<li>'+hours + ':' + minutes + '</li>');
		    }
		}
	});

	$('div.exp-timepicker-selection li').live('click', function(){
		var attributeId = $(this).closest('.exp-timepicker-selection').attr('data');
		var selectedTime = $(this).html();
		$('#'+attributeId).val(selectedTime);
		$(this).closest('.exp-timepicker-selection').css('display', 'none');
	});*/
	$('body').click(function(event){
		try{
		if($(event.target).hasClass('exp-timepicker') != true){
			$('.exp-timepicker-selection').css('display', 'none');
		}
		}catch(e){
  			// To Do
  		}
	});

})(jQuery);

//Hide the drop down menu option
  $('body,#admin-add-course-training-plan .ui-widget-content').bind('click', function(event) {
	  try{
	  if(event.target.id != 'admin-dropdown-arrow'){
		 $('#select-list-course-dropdown-list').hide();
		 $('#select-list-class-dropdown-list').hide();
		 $('#select-list-surass-dropdown-list').hide();
    }
	  }catch(e){
			// To Do
		}
  });
   //$('body').bind('mousedown', function(event) {
  //if((event.target.nodeName == 'SELECT') || (event.target.nodeName == 'INPUT' && ($(event.target).attr('type') == 'text'|| $(event.target).attr('type') == 'submit'))){
  $('body').bind('mousedown', function(event) {
	  try{
	  var nsParts = window.location.href.split("/?q=");
 	   if((event.target.nodeName == 'SELECT') || (event.target.nodeName == 'INPUT')
 			  || (event.target.nodeName == 'TEXTAREA') || (event.target.nodeName == 'A' && nsParts[1] !='administration/order/create')
 		  	  || (event.target.nodeName == 'SPAN' && nsParts[1] !='administration/order/create') || (event.target.nodeName == 'LI')){
		  $('#message-container').remove();
	  }
	  }catch(e){
			// To Do
		}
  });
/*$('#location-list .loc-disp-selection').live('click', function(){
	if($(this).next().css('display') == 'block'){
		$(this).next().css('display', 'none');
		$('.add-location-cls').css('display', 'none');
	} else {
		$(this).next().css('display', 'block');
		$('.add-location-cls').css('display', 'block');
	}
});

$('#location-list .sub-menu-list li').live('click', function(){
	var selectedMO = $(this).html();
	$(this).parent().prev('span').prev('span').html(selectedMO);
	$(this).parent().css('display', 'none');
	$('.add-location-cls').css('display', 'none');

	var attachValues = $(this).attr('data');
	//$('#class_location').val(attachValues);
	$('input[name$="class_location"]').val(attachValues);

	return false;
});*/

//$('#location-list .loc-disp-selection').live('click', function(){
$('#location-list .top-select').live('click', function(){
	try{
	if($('.sub-menu-list').css('display') == 'inline-block'){
		$('.sub-menu-list').css('display', 'none');
		$('.add-location-cls').css('display', 'none');
	} else {
		var actualWidthofUL = $('ul.sub-menu-list').width();
		if ($.browser.msie  && parseInt($.browser.version, 10) === 7) {
			var widthofUL = actualWidthofUL + 37;
		} else {
			var widthofUL = actualWidthofUL + 10;
			}
		$('.sub-menu-list').css('display', 'inline-block');
		$('.add-location-cls').css('width', +widthofUL+'px');
		$('.add-location-cls').css('display', 'block');
	}
	}catch(e){
			// To Do
		}
});

$('#location-list .sub-menu-list li').live('click', function(){
	try{
	var selectedMO = $(this).html();
	$('#location-input-txt').val(selectedMO);
	$(this).parent().css('display', 'none');
	$('.add-location-cls').css('display', 'none');

	var attachValues = $(this).attr('data');
	//$('#class_location').val(attachValues);
	$('input[name$="class_location"]').val(attachValues);

	return false;
	}catch(e){
			// To Do
		}
});

(function($) {
	try{
	$.fn.classCreateLocation = function(locId,locName,classId) {
		$('#newlocationpaint').append("<li data="+locId+" title='"+locName+"'>"+locName+"</li>");
		$('#location-list .sub-menu-list li ').click();
		sortUnorderedList("newlocationpaint");
/*		if(classId){
			$('#qtipAttachIdqtip_addlocation_visible_disp_'+classId).closest('.qtip-active').remove();
		}*/
	};
	}catch(e){
			// To Do
		}
})(jQuery);
function sortUnorderedList(ul, sortDescending) {
	try{
	  if(typeof ul == "string")
	    ul = document.getElementById(ul);
	  // Get the list items and setup an array for sorting
	  var lis = ul.getElementsByTagName("LI");
	  var vals = [];
	  // Populate the array
	  for(var i = 0, l = lis.length; i < l; i++)
	    vals.push(lis[i].innerHTML);
	  // Sort it
	  vals.sort();
	  if(sortDescending)
	    vals.reverse();
	  // Change the list on the page
	  for(var i = 0, l = lis.length; i < l; i++)
	    lis[i].innerHTML = vals[i];
	}catch(e){
			// To Do
		}
}
if(!document.getElementById('location-list')){
	try{
	$('body').click(function(event) {
		if($(event.target).hasClass('add-location-cls') != true){
			$('.sub-menu-list').css('display', 'none');
			$('.add-location-cls').css('display', 'none');
		}
	});
	}catch(e){
			// To Do
		}
}
function handlePostLoadDropdown(toBeHidden,toBeShown){
	try{
	$('#'+toBeHidden).hide();
	$('#'+toBeShown).show();
	}catch(e){
			// To Do
		}
}

function searchClassNameFilter(courseId,classId,ClassName){
	try{
	var obj = this;
	var pagerId	= '#admin-course-class-list-'+courseId+'-pagination_toppager';
	var objStr = '$("#root_admin").data("narrowsearch")';
	}catch(e){
			// To Do
		}
}

function onlyNumbers(evt)
{
	try{
     var charCode = (evt.which) ? evt.which : evt.keyCode;
     if (charCode == 8 || charCode == 9 || charCode == 46 || (charCode >= 37 && charCode <= 40) || (charCode >= 48 && charCode <= 57) || (charCode >= 96 && charCode <= 105))
    	 return true;
     else
     	return false;
     /*else if (charCode > 31 && (charCode < 48 || charCode > 57))
        return false;

     return true;*/
	}catch(e){
			// To Do
		}
}
/* Added by Gayathri for #0073578 */
function onlyNumbersforPrice(evt)
{
	try{
     var charCode = (evt.which) ? evt.which : evt.keyCode;
     if (charCode == 8 || charCode == 9 || charCode == 46 || charCode == 110 || (charCode >= 37 && charCode <= 40) || (charCode >= 48 && charCode <= 57) || (charCode >= 96 && charCode <= 105))
    	 return true;
     else
     	return false;    
	}catch(e){
			// To Do
	}
}
/* Set the focus on location field */
function changeLocationFocus(focusType){
	try{
  if(focusType=='deltype') {
		$('.addedit-edit-delivery_type').focusout();
	}else{
	     $('.addedit-edit-title').focusout();
	}
	}catch(e){
			// To Do
		}
}
/* Set the focus on first field */
function autoFocusFirstField() {
	try{
  $('form').find('select,textarea,input[type=text]').filter(':visible:first').focusout();
	}catch(e){
			// To Do
		}
}

/* Get Meeting details from popup tooltip and assign into form */
function getMeetingDetails(pos) {
	try{
	 /*var timezone = $('#timezone').val();
	 var session_attende_password = $('#session_attende_password').val();
	 var session_presenter_password = $('#session_presenter_password').val();
	 var session_attendee_url = $('#session_attendee_url').val();
	 var session_presenter_url = $('#session_presenter_url').val();
	 var instructorid = $('#hid_instructor_id').val();
	 var session_meeting_id = $('#session_meeting_id').val();

	 $('#time_zone_'+pos).val(timezone);
	 $('#session_attendeepass_'+pos).val(session_attende_password);
	 $('#session_presenterpass_'+pos).val(session_presenter_password);
	 $('#session_attendeeurl_'+pos).val(session_attendee_url);
	 $('#session_presenterurl_'+pos).val(session_presenter_url);
	 $('#hid_session_details_id_'+pos).val(instructorid);
	 $('#session_meetingid_'+pos).val(session_meeting_id);*/

	 $('.active-qtip-div').remove();
	}catch(e){
			// To Do
		}
}

function checkedAll(multiSel,uniqueId){
	try{
		if($(multiSel).attr('checked') == true){
			$('.attach-permission-cls').each(function(){
					$(this).attr('checked', true);
					$(this).parent('td').removeClass('checkbox-unselected').addClass('checkbox-selected');
			});
		} else {
			$('.attach-permission-cls').each(function(){
				$(this).attr('checked', false);
				$(this).parent('td').removeClass('checkbox-selected').addClass('checkbox-unselected');
			});

		}
	}catch(e){
			// To Do
		}
}
function uncheckAllPermission(){
	try{
	// If all checkbox selected - multiselect-all should be checked
	var multiselectVar = true;
	var removeClass = "checkbox-unselected";
	var addClass = "checkbox-selected";
	$('.attach-permission-cls').each(function(){
		if($(this).attr('checked') == false){
			multiselectVar = false;
			removeClass = "checkbox-selected";
			addClass = "checkbox-unselected";
		}
	});
	$('#select-all-checkbox').attr('checked', multiselectVar);
	$('#select-all-checkbox').parent().removeClass(removeClass);
	$('#select-all-checkbox').parent().addClass(addClass);
	}catch(e){
			// To Do
		}
}

function scorllMainTabPrev(){
	try{
	var liCount = $('#sort-bar-V2 .AdminsublinktabNavigation li').size();
	var activeLiLast = $('#sort-bar-V2 .visible-main-tab:first').index();
	if(activeLiLast==1){
		return '';
	}
	//if(liCount>activeLiLast){
		$('#sort-bar-V2 ul li:eq('+(activeLiLast-1)+')').removeClass('hidden-main-tab');
		$('#sort-bar-V2 ul li:eq('+(activeLiLast-1)+')').addClass('visible-main-tab');
		$('#sort-bar-V2 .visible-main-tab:last').removeClass('visible-main-tab').addClass('hidden-main-tab');
	//}
	}catch(e){
			// To Do
		}
}

function scorllMainTabNext(){
	try{
	var liCount = $('#sort-bar-V2 .AdminsublinktabNavigation li').size();
	var activeLiLast = $('#sort-bar-V2 .visible-main-tab:last').index();
	if(activeLiLast==(liCount-2)){
		return '';
	}
	if(liCount>activeLiLast){
		$('#sort-bar-V2 ul li:eq('+(activeLiLast+1)+')').removeClass('hidden-main-tab');
		$('#sort-bar-V2 ul li:eq('+(activeLiLast+1)+')').addClass('visible-main-tab');
		$('#sort-bar-V2 .visible-main-tab:first').removeClass('visible-main-tab').addClass('hidden-main-tab');
	}
	}catch(e){
			// To Do
		}
}

function resetMainTab(){
	try{
	var selected = $('#sort-bar-V2 .selected').index();
	var lastLi = $('#sort-bar-V2 .visible-main-tab:last').index();
	if($('#sort-bar-V2 .selected').css('display')=='none'){
		for(var i=lastLi;i<selected;i++){
			scorllMainTabNext();
		}
	}
	}catch(e){
			// To Do
		}
}

function deleteOrderLineItem(nid,enrid){
	try{
	$("input[name=lineitem_nid]:hidden").val(nid);
	$("input[name=lineitem_enrid]:hidden").val(enrid);
	$("input[name = 'pay_lineitem_canceled']").click();
	}catch(e){
			// To Do
		}
}

function checkboxSelectedUnselectedMultiParent(id){
	try{
	if($(id).is(':checked')){
		$(id).parents().eq(1).removeClass('survey-checkbox-unselected');
		$(id).parents().eq(1).addClass('survey-checkbox-selected');
	}
	else {
		$(id).parents().eq(1).removeClass('survey-checkbox-selected');
		$(id).parents().eq(1).addClass('survey-checkbox-unselected');
	}
	}catch(e){
			// To Do
		}
}

function checkboxSelectedUnselectedAddInf(id){
	try{
	if($(id).is(':checked')){
		$(id).parents().eq(1).removeClass('checkbox-unselected');
		$(id).parents().eq(1).addClass('checkbox-selected');
	}
	else {
		$(id).parents().eq(1).removeClass('checkbox-selected');
		$(id).parents().eq(1).addClass('checkbox-unselected');
	}
	}catch(e){
			// To Do
		}
}
jQuery(function($){
	try{
	var currLang = $('html').attr('xml:lang');
	$.datepicker.regional[currLang] = {
		prevText: Drupal.t('LBL692'),
		nextText: Drupal.t('LBL693')
		};
	$.datepicker.setDefaults($.datepicker.regional[currLang]);
	}catch(e){
			// To Do
		}
});

(function($) {
	try{
	$.fn.getScrollDive = function() {
		var heigt = $("#scrolldiv").height();
		if(heigt > 80){
			$('#catalog-attachment-disp-container #scrolldiv').css('height','100px');
			$('#catalog-attachment-disp-container #scrolldiv').jScrollPane({});
			}
			vtip();
	};
	}catch(e){
			// To Do
		}
})(jQuery);

(function($) {
	try{
	$.fn.cloneScrollPopup = function(classId) {
		var heigt = $('#clonescrolldiv'+classId).height();
		if(heigt > 80){
			//$('#clonescrolldiv').css('height','100px');
			$('#clonescrolldiv'+classId).jScrollPane({});
			}
	};
	}catch(e){
			// To Do
		}
})(jQuery);

//if (Drupal.settings.ajaxPageState.theme == 'expertusoneV2') {
 jQuery("#classdaterange-daterange-from-date,#classdaterange-daterange-to-date").live("click",function() {
	 try{
	jQuery("#ui-datepicker-div").parent('div').removeClass('datepicker-maincontainer');
	jQuery("#ui-datepicker-div").parent('div').removeClass('edit-datepicker-maincontainer');
	jQuery("#ui-datepicker-div").parent('div').removeClass('add-datepicker-maincontainer');
	jQuery("#ui-datepicker-div").parents('div').removeClass('add-sessions-date');
	jQuery("#ui-datepicker-div").wrapAll(document.createElement('div'));
	jQuery("#ui-datepicker-div").parent('div').addClass('datepicker-maincontainer');
	 }catch(e){
			// To Do
		}
 });
 jQuery("#edit-reg-end-date,.addedit-edit-reg_end_date").live("click",function() {
	 try{
	 var rdoVal = $('.narrow-search-filterset-radio-selected').find('#radio_Class').val();
	 var rdoVal1 = $('.narrow-search-filterset-radio-selected').find('#radio_Course').val();

	 if(rdoVal =="Class")
	 {
	 jQuery("#ui-datepicker-div").parents('div').removeClass('datepicker-maincontainer');
	 jQuery("#ui-datepicker-div").parents('div').removeClass('add-datepicker-maincontainer');
	 jQuery("#ui-datepicker-div").parents('div').removeClass('edit-datepicker-maincontainer');
	 jQuery("#ui-datepicker-div").parents('div').removeClass('add-sessions-date');
	 jQuery("#ui-datepicker-div").wrapAll(document.createElement('div'));
	 jQuery("#ui-datepicker-div").parent('div').addClass('edit-datepicker-maincontainer');
	 }
	 else if(rdoVal1 =="Course")
	 {
	 jQuery("#ui-datepicker-div").parents('div').removeClass('datepicker-maincontainer');
	 jQuery("#ui-datepicker-div").parents('div').removeClass('add-datepicker-maincontainer');
	 jQuery("#ui-datepicker-div").parents('div').removeClass('edit-datepicker-maincontainer');
	 jQuery("#ui-datepicker-div").parents('div').removeClass('add-sessions-date');
	 jQuery("#ui-datepicker-div").wrapAll(document.createElement('div'));
	 jQuery("#ui-datepicker-div").parent('div').addClass('add-datepicker-maincontainer');
	 }
	 else
	 {
	 jQuery("#ui-datepicker-div").parents('div').removeClass('datepicker-maincontainer');
	 jQuery("#ui-datepicker-div").parents('div').removeClass('edit-datepicker-maincontainer');
	 jQuery("#ui-datepicker-div").parents('div').removeClass('add-datepicker-maincontainer');
	 jQuery("#ui-datepicker-div").parents('div').removeClass('add-sessions-date');
	 }
	 }catch(e){
			// To Do
		}
	});
jQuery("#start_date").live("click",function() {
	try{

	 var rdoVal2 = $('.narrow-search-filterset-radio-selected').find('#radio_Class').val();
	 var rdoVal3 = $('.narrow-search-filterset-radio-selected').find('#radio_Course').val();
	 //alert(rdoVal3);
	 if(rdoVal2 =="Class")
	 {
	 jQuery("#ui-datepicker-div").parents('div').removeClass('datepicker-maincontainer');
	 jQuery("#ui-datepicker-div").parents('div').removeClass('add-datepicker-maincontainer');
	 jQuery("#ui-datepicker-div").parents('div').removeClass('edit-datepicker-maincontainer');
	 jQuery("#ui-datepicker-div").parents('div').removeClass('add-sessions-date');
	 jQuery("#ui-datepicker-div").wrapAll(document.createElement('div'));
	 jQuery("#ui-datepicker-div").parent('div').addClass('add-sessions-date');
	 $("#ui-datepicker-div").css('z-index','10000');
	 }
	 else if(rdoVal3 =="Course")
	 {
	 jQuery("#ui-datepicker-div").parents('div').removeClass('datepicker-maincontainer');
	 jQuery("#ui-datepicker-div").parents('div').removeClass('add-datepicker-maincontainer');
	 jQuery("#ui-datepicker-div").parents('div').removeClass('edit-datepicker-maincontainer');
	 jQuery("#ui-datepicker-div").parents('div').removeClass('add-sessions-date');
	 jQuery("#ui-datepicker-div").wrapAll(document.createElement('div'));
	 jQuery("#ui-datepicker-div").parent('div').addClass('add-sessions-date');
	 $("#ui-datepicker-div").css('z-index','10000');
	 }
	}catch(e){
			// To Do
		}
});
function datepickerAddEdit(){
	try{

		 var rdoVal2 = $('.narrow-search-filterset-radio-selected').find('#radio_Class').val();
		 var rdoVal3 = $('.narrow-search-filterset-radio-selected').find('#radio_Course').val();
		 if(rdoVal2 =="Class"){
			 jQuery("#ui-datepicker-div").parents('div').removeClass('datepicker-maincontainer');
			 jQuery("#ui-datepicker-div").parents('div').removeClass('add-datepicker-maincontainer');
			 jQuery("#ui-datepicker-div").parents('div').removeClass('edit-datepicker-maincontainer');
			 jQuery("#ui-datepicker-div").parents('div').removeClass('add-sessions-date');
			 jQuery("#ui-datepicker-div").wrapAll(document.createElement('div'));
			 jQuery("#ui-datepicker-div").parent('div').addClass('add-sessions-date');
			 $("#ui-datepicker-div").css('z-index','10000');
		 }
		 else if(rdoVal3 =="Course"){
			 jQuery("#ui-datepicker-div").parents('div').removeClass('datepicker-maincontainer');
			 jQuery("#ui-datepicker-div").parents('div').removeClass('add-datepicker-maincontainer');
			 jQuery("#ui-datepicker-div").parents('div').removeClass('edit-datepicker-maincontainer');
			 jQuery("#ui-datepicker-div").parents('div').removeClass('add-sessions-date');
			 jQuery("#ui-datepicker-div").wrapAll(document.createElement('div'));
			 jQuery("#ui-datepicker-div").parent('div').addClass('add-sessions-date');
			 $("#ui-datepicker-div").css('z-index','10000');
		 }
		 $('#end_date , #start_date').bind('change',function() {
		  if($('#end_date').val()!= '' && $('#end_date').val() != undefined && $('#start_date').val() != '' && $('#start_date').val()!= undefined  && ($('#start_date').val() != 'mm-dd-yyyy' || $('#end_date').val() != 'mm-dd-yyyy')) {
			  if($('#start_date').val() == $('#end_date').val() ){
				  $(".weekday-checkbox-input").attr("checked", false);
				  $(".weekday-checkbox-input").parent().removeClass('checkbox-selected');
				  $(".weekday-checkbox-input").parent().addClass('checkbox-unselected');
				  $(".weekday-checkbox-input").attr("disabled", true);
				  $(".session_det_eachday").addClass('greyoutcheckbox');
     			  }
			  else{
				  $('.weekday-checkbox-input').removeAttr("disabled");
				  $(".session_det_eachday").removeClass('greyoutcheckbox');
			  	}
			  if($('#start_date').val()!= 'mm-dd-yyyy' && $('#end_date').val() != 'mm-dd-yyyy'){
			    var start = $('#start_date').val();
				var end = $('#end_date').val()
			    var countdays = getCountOf( start,end );
			    // console.log(countdays);
			     for (var key in countdays) {
				  if(countdays[key] ==0){
					 $("#"+key).attr("checked", false);
					  $("."+key).removeClass('checkbox-selected');
					  $("."+key).addClass('checkbox-unselected');
					  $("#"+key).attr("disabled", true);
					  $("#"+key+"-text").addClass('greyoutcheckbox');
				  	}
			     }
			}
		  }
		});	

	}catch(e){
			// To Do
	}
}


function parseDate(input) {
    var parts = input.split('-');
    return new Date(parts[2], parts[0]-1, parts[1]); 
  }
function getCountOf( date1, date2){
  var dateObj1 = parseDate(date1);
  var dateObj2 = parseDate(date2);
  var week = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"];
  var dayToSearch = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"];
  	var days_count = [];
  		for(var i = 0; i < dayToSearch.length; i++){
  				var dayIndex = week.indexOf( dayToSearch[i] );
  				var count = 0;
  					while ( dateObj1.getTime() <= dateObj2.getTime()){
  						if (dateObj1.getDay() == dayIndex )
  							{
  							   count++;
  								}       
  						dateObj1.setDate(dateObj1.getDate() + 1);
  					}
  					dateObj1 = parseDate(date1);
  					days_count[dayToSearch[i]] = count;
  		}
  return days_count;
}


//}
 $('body').live('click', function (event) {
	 try{
	 $('.add-session-popup-list').css("display","");
		if(event.target.className!='add-another-arrow-link') {
				$('.add-session-popup-list').hide();
			}
	 }catch(e){
			// To Do
		}
	});
$('.add-more-session-list li').live('click', function () {
	try{
	if(navigator.userAgent.indexOf("Chrome")>=0){
      var meetingTypeW=$('.session-add-another-popup-container').find('span.chosen-meeting-type').css("width");
   	  $(this).css('width',meetingTypeW);
	}
	}catch(e){
			// To Do
		}
 });

function updatePaginationCookie(p){
	try{
	var crPage = EXPERTUS_SMARTPORTAL_AbstractManager.getCookie('current_page');
	if(crPage!=''){
	var level = crPage.split('~');
	(p==1)?level[0] = level[0].replace('#0','#1'):level[1] = level[1].replace('#0','#1');
	var updatePage = level[0]+"~"+level[1]+"~"+level[2];
	document.cookie="current_page="+updatePage+"; path=/";
	}
	}catch(e){
			// To Do
		}
}

function manageDropdown(){
	try{
	showHideDropDown();
	var par = $('.grey-btn-bg-right');
	var position = par.position();
	$("#manage-dd-list" ).css( "left" , position.left-110);
    //$("#narrow-search-actionbar-list").find("#manage-dd-list").find("li:first").css('padding-bottom','5px');
    //$("#narrow-search-actionbar-list").find("#manage-dd-list").find("li:last").css('padding-top','5px');
	}catch(e){
			// To Do
		}
}
function createDropdown(){
	try{
	showHideDropDowncreate();
	var par = $('.pink-btn-bg-right');
	var position = par.position();
	$("#create-dd-list" ).css( "left" , position.left-75);
    //$("#narrow-search-actionbar-list").find("#manage-dd-list").find("li:first").css('padding-bottom','5px');
    //$("#narrow-search-actionbar-list").find("#manage-dd-list").find("li:last").css('padding-top','5px');
	}catch(e){
			// To Do
		}
}

/* Added for Custom Attribute - Ganesh  #custom_attribute_0078975 */
function createCustomAttributeDropdown(entity_type){ 
	try{  
		var ddlist_cls='create-dd-list-for-'+entity_type;
		var ddlist = $('.addedit-customattributes-wrapper #create-dd-list'+'.'+ddlist_cls).css('visibility'); 
		
		if(ddlist == 'hidden'){
			$('.addedit-customattributes-wrapper #create-dd-list'+'.'+ddlist_cls).css('visibility','visible');
			$('.addedit-customattributes-wrapper #create-dd-list'+'.'+ddlist_cls).css('display','block');
		}else{
			$('.addedit-customattributes-wrapper #create-dd-list'+'.'+ddlist_cls).css('visibility','hidden');
			$('.addedit-customattributes-wrapper #create-dd-list'+'.'+ddlist_cls).css('display','none');
		}   
	}catch(e){
			// To Do
	}
}

//#custom_attribute_0078975
function clickCustomAttributeDropdown(attr_type,entity_type){
	try{   
		if(attr_type!=''){
		  var repl_text = '';
		  var cls_name='';
		  if(attr_type=='cattr_type_checkbox'){
		      repl_text = Drupal.t('LBL2006');
		      cls_name='new-customattribute-wrapper-checkbox';
		  }else if(attr_type=='cattr_type_dropdown'){
		      repl_text = Drupal.t('LBL2007');
		      cls_name='new-customattribute-wrapper-dropdown';
		  }else if(attr_type=='cattr_type_radio'){
		      repl_text = Drupal.t('LBL2008');
		      cls_name='new-customattribute-wrapper-radio';
		  }else if(attr_type=='cattr_type_txtarea'){
		      repl_text = Drupal.t('LBL2010');
		      cls_name='new-customattribute-wrapper-textarea';
		  }else if(attr_type=='cattr_type_txtbox'){
		     repl_text = Drupal.t('LBL2009');
		     cls_name='new-customattribute-wrapper-textbox'; 
		  }  
		  
		  if(repl_text!=''){
		    repl_text = Drupal.t('LBL287')+' '+repl_text;
		    // $('#new-customattribute-link').html(repl_text); 
		     $('.new-customattribute-link-for-'+entity_type).html(repl_text);
		     //$('.addedit-customattributes-wrapper').addClass(cls_name);
		     $('.addedit-customattributes-wrapper .addedit-form-cancel-container-actions').attr('id', cls_name);
		     var ddlist_cls='create-dd-list-for-'+entity_type;
		     $('.addedit-customattributes-wrapper #create-dd-list'+'.'+ddlist_cls).css('display','none');
		     $('.addedit-customattributes-wrapper #create-dd-list'+'.'+ddlist_cls).css('visibility','hidden');
		  } 
		 
		}  
		 
	}catch(e){
			// To Do
	}
}  

// Visibility pop up close  #custom_attribute_0078975
function closeCustomAttributeQtip(refreshOpt){ 
	try{ 
		$('.qtip-popup-visible').html('').hide();  
		if(refreshOpt=='1'){
		  $('.hidden-save-addedit-entityform').click();
		}   
	}catch(e){
		// To Do
	}
}

function orderQtipVisible(qtipObj){
	
	try{
						//alert('Visible Popup');
						var url = resource.base_host+'?q='+qtipObj.url;
						var popupId 	= qtipObj.popupDispId;
						//var catalogVisibleId = qtipObj.catalogVisibleId;
						var entId = qtipObj.entityId;
						var qtipScrollId = qtipObj.scrollid;

						$.ajax({
			 				 type: "GET",
				   	         url: url,
				   	         data:  '',
				   	         success: function(data){
			 					//var paintHtml = bpTop+"<div id='paintContent"+popupDispId+"'><div id='show_expertus_message' style='"+messageStyle+"'></div>"+data.render_content_main+"</div>"+bpBot;
			 					$('#'+popupId+' #visible-popup-'+entId+' #bubble-face-table .bubble-c #paintContent'+popupId).html(data.render_content_main);
			 					$.extend(true, Drupal.settings, data.drupal_settings);
			 					EXPERTUS_SMARTPORTAL_AbstractDetailsWidget.destroyLoader("paintContent"+popupId);

			 					if(qtipScrollId != '' && qtipScrollId != undefined && qtipScrollId != null){
			 						var qtipScrollType = (qtipObj.scrolltype == 'class') ? '.' : '#';
			 						$('#'+popupId+' '+qtipScrollType+qtipScrollId).jScrollPane('destroy');
			 						$('#'+popupId+' '+qtipScrollType+qtipScrollId).jScrollPane({});
			 					}
								Drupal.attachBehaviors();
			 					//vtip();
			 					
			 					/*
			 					if('[qtipObj.linkid^=visible-sharelink]') {
			 						if (navigator.appVersion.indexOf("Safari")!= -1 && ($(window).height() < 742))
			 							$('#program-tp-basic-addedit-form-container .survey-attach-grid-wrapper .ui-jqgrid .jqgrow #bubble-face-table td.bubble-c').css('height','33px');
			 								 						
									if(Drupal.settings.user.language !== undefined && $.inArray(Drupal.settings.user.language, ["pt-pt", "de", "fr"]) != -1) {
										$('#catalog-class-basic-addedit-form-container #survey-sharelink-button #edit-sharelink-button').css('margin-right','-30px');
										if (navigator.userAgent.indexOf("MSIE") != -1 && navigator.appVersion.indexOf("10")!= -1)
											$('#program-tp-basic-addedit-form-container #survey-sharelink-button #edit-sharelink-button').css('margin-right','-4px');
										else
										$('#program-tp-basic-addedit-form-container #survey-sharelink-button #edit-sharelink-button').css('margin-right','-15px');
									} else if (Drupal.settings.user.language !== undefined && Drupal.settings.user.language == 'ru') {
										$('#catalog-class-basic-addedit-form-container #survey-sharelink-button #edit-sharelink-button').css('margin-right','-33px');
										if (navigator.userAgent.indexOf("MSIE") != -1 && navigator.appVersion.indexOf("10")!= -1)
											$('#program-tp-basic-addedit-form-container #survey-sharelink-button #edit-sharelink-button').css('margin-right','-4px');
										else
										$('#program-tp-basic-addedit-form-container #survey-sharelink-button #edit-sharelink-button').css('margin-right','-15px');
									} else if (Drupal.settings.user.language !== undefined && Drupal.settings.user.language == 'ja') {
										$('#catalog-class-basic-addedit-form-container #survey-sharelink-button #edit-sharelink-button').css('margin-right','-30px');
										if (navigator.userAgent.indexOf("MSIE") != -1 && navigator.appVersion.indexOf("10")!= -1)
											$('#program-tp-basic-addedit-form-container #survey-sharelink-button #edit-sharelink-button').css('margin-right','-4px');
										else
										$('#program-tp-basic-addedit-form-container #survey-sharelink-button #edit-sharelink-button').css('margin-right','-15px');
									} else if (Drupal.settings.user.language !== undefined && Drupal.settings.user.language == 'ko') {
										$('#catalog-class-basic-addedit-form-container #survey-sharelink-button #edit-sharelink-button').css('margin-right','-26px');
										if (navigator.userAgent.indexOf("MSIE") != -1 && navigator.appVersion.indexOf("10")!= -1)
											$('#program-tp-basic-addedit-form-container #survey-sharelink-button #edit-sharelink-button').css('margin-right','-3px');
										else
										$('#program-tp-basic-addedit-form-container #survey-sharelink-button #edit-sharelink-button').css('margin-right','-14px');
									} else if (Drupal.settings.user.language !== undefined && Drupal.settings.user.language == 'zh-hans') {
										$('#catalog-class-basic-addedit-form-container #survey-sharelink-button #edit-sharelink-button').css('margin-right','-54px');
										if (navigator.userAgent.indexOf("MSIE") != -1 && navigator.appVersion.indexOf("10")!= -1)
											$('#program-tp-basic-addedit-form-container #survey-sharelink-button #edit-sharelink-button').css('margin-right','-32px');
										else
										$('#program-tp-basic-addedit-form-container #survey-sharelink-button #edit-sharelink-button').css('margin-right','-42px');
									} else if (Drupal.settings.user.language !== undefined && Drupal.settings.user.language == 'it') { 
										if (navigator.userAgent.indexOf("MSIE") != -1 && navigator.appVersion.indexOf("10")!= -1)
											$('#program-tp-basic-addedit-form-container #survey-sharelink-button #edit-sharelink-button').css('margin-right','-3px');
										else
											$('#program-tp-basic-addedit-form-container #survey-sharelink-button #edit-sharelink-button').css('margin-right','-14px');
									} else if (Drupal.settings.user.language !== undefined && Drupal.settings.user.language == 'es') { 
										if (navigator.userAgent.indexOf("MSIE") != -1 && navigator.appVersion.indexOf("10")!= -1)
											$('#program-tp-basic-addedit-form-container #survey-sharelink-button #edit-sharelink-button').css('margin-right','-4px');
										else
											$('#program-tp-basic-addedit-form-container #survey-sharelink-button #edit-sharelink-button').css('margin-right','-14px');
									} else if (Drupal.settings.user.language !== undefined && Drupal.settings.user.language == 'en-us') { 
										if ((navigator.userAgent.indexOf("MSIE") != -1 && navigator.appVersion.indexOf("10")!= -1) || (navigator.appVersion.indexOf("Trident/7.0")!= -1))
											$('#program-tp-basic-addedit-form-container #survey-sharelink-button #edit-sharelink-button').css('margin-right','-3px');
										else
											$('#program-tp-basic-addedit-form-container #survey-sharelink-button #edit-sharelink-button').css('margin-right','-14px');
									}else {
										$('#catalog-class-basic-addedit-form-container #survey-sharelink-button #edit-sharelink-button').css('margin-right','-28px');
										$('#program-tp-basic-addedit-form-container #survey-sharelink-button #edit-sharelink-button').css('margin-right','-14px');
									}
								}
								*/
								
		   	                 }
			   			});

					}catch(e){
						alert(e);
					}
	
}
/* End for Custom attribute */

function showHideDropDown(){
	try{
	var ddlist = $('#manage-dd-list').css('visibility');
	if(ddlist == 'hidden'){
		$('#manage-dd-list').css('visibility','visible');
		$('#download_template').css('visibility','hidden');
                $('#download_template_enroll').css('visibility','hidden');
	}else{
		$('#manage-dd-list').css('visibility','hidden');
		$('#download_template').css('visibility','hidden');
                $('#download_template_enroll').css('visibility','hidden');
	}
	}catch(e){
			// To Do
		}
}
function showHideDropDowncreate(){
	try{
	var ddlist = $('#create-dd-list').css('visibility');
	if(ddlist == 'hidden'){
		$('#create-dd-list').css('visibility','visible');
	}else{
		$('#create-dd-list').css('visibility','hidden');
	}
	}catch(e){
			// To Do
		}
}
$('body').live('click', function (event) {
	try{
	$('#manage-dd-list').css("display","");
	if(event.target.className == 'info-user-upload vtip') {
		$('#manage-dd-list').css('visibility','visible');
		$('#manage-dd-list').css('display','block');
		$('#manage-dd-list').show();
	}else if(event.target.className == 'info-roster-upload vtip'){
                $('#manage-dd-list').css('visibility','visible');
		$('#manage-dd-list').css('display','block');
		$('#manage-dd-list').show();
	}else if(event.target.className!='grey-btn-bg-right') {
		$('#manage-dd-list').css('visibility','hidden');
		$('#manage-dd-list').hide();
	}
	$('#create-dd-list').css("display","");
	if(event.target.className!='pink-btn-bg-right' && event.target.className!='customattr-btn-bg-right'){ //Added for custom attribute by ganesh - #custom_attribute_0078975
		$("#create-dd-list" ).hide();
	}
	}catch(e){
			// To Do
		}
});


$('body').live('click', function (event) {
	try{
		classList = event.target.className.split(" ");
		if(event.target.className !='form-checkbox' && event.target.className !='tab-title' && event.target.className !='manage-clone-list' && event.target.className !='clone-label-list' && event.target.className != 'clone-list-class' && event.target.className != 'select-all-wrapper'
			&& classList[0] != ('jspDrag') && event.target.className != 'jspTrack') {
			$('.manage-clone-list').hide();
			$('.manage-clone-list').css('visibility','hidden');
		}
	}catch(e){
			// To Do
		}
});
$(".searchtext, #narrow-search-text-filter, #search_leaderboard-users_txt, #search_users_txt, #classname-autocomplete, .narrow-search-ac-text-overlap, .searchtag, .searchlocation, #tpattchedcoursename-autocomplete, #username-search-autocomplete, #surassattchedquestions-autocomplete, #countrylist-autocomplete, #enrolluser-autocomplete, #enrolltpuser-autocomplete,#prerequisite-autocomplete,#equivalence-autocomplete,#survey-autocomplete,#assessment-autocomplete,#srch_criteria_catkeyword,#report_table_autocomplete").live("click",function(){
   try{
	if(Drupal.settings.ajaxPageState.theme == 'expertusone' && ($.browser.msie && $.browser.version > 7) )
	 {
       var loaderEl = this;
       var widgetId=$(this).attr("id");
       var filterSearchClsname=$(this).attr("class");
       var filterSearchCls = filterSearchClsname.split(" ");
       $(loaderEl).val("");
       $(loaderEl).parent("div").css("position","relative");
       //reports
       $(loaderEl).closest("div.report-table-search-container").css("position","relative");
       // Top search;
	   $(loaderEl).next(".loader-hidder").remove();
	   $(".loader-hidder").remove();
	   //widget Search
	   $(loaderEl).next(".widget-loader-hidder").remove();
	   $(".widget-loader-hidder").remove();
	   //narrow filter search
	   $(loaderEl).next(".narrowfilter-loader-hidder").remove();
	   $(".narrowfilter-loader-hidder").remove();
	   //course/class search
	   $(loaderEl).next(".crecls-loader-hidder").remove();
	   $(".crecls-loader-hidder").remove();
	   //Country setting search
	   $(loaderEl).next(".countrysett-loader-hidder").remove();
	   $(".countrysett-loader-hidder").remove();
	   //select class search
	   $(loaderEl).next(".selectCls-loader-hidder").remove();
	   $(".selectCls-loader-hidder").remove();
	   //report design wizard left table search
	   $(loaderEl).next(".reportsLTbl-loader-hidder").remove();
	   $(".reportsLTbl-loader-hidder").remove();

	   $(loaderEl).after( "<div class='loader-hidder'>&nbsp;</div>" );

	   loaderEl.onkeydown = function(evt) {
           evt = evt || window.event;
          // alert("keydown: " + evt.keyCode);
          $(".loader-hidder,.widget-loader-hidder, .crecls-loader-hidder, .narrowfilter-loader-hidder, .selectCls-loader-hidder").css({"background-position":"100% -17px","cursor":"none"});
           if(widgetId=="countrylist-autocomplete" || widgetId=="enrolluser-autocomplete" || widgetId=="enrolltpuser-autocomplete" || widgetId=="prerequisite-autocomplete" || widgetId=="equivalence-autocomplete" || widgetId=="survey-autocomplete" || widgetId=="assessment-autocomplete"){
           $(".countrysett-loader-hidder").css({"background-position":"99% -16px","cursor":"none"});
           }
           if(filterSearchCls[1]=="narrow-search-ac-text-overlap" || filterSearchCls[1]=="searchtag" || filterSearchCls[1]=="searchlocation" ){
           	$(".narrowfilter-loader-hidder").css({"background-position":"100% -17px","cursor":"none"});
           }
           };
       loaderEl.onkeyup = function(evt) {
           evt = evt || window.event;
           // alert("keyup: " + evt.keyCode);
           $(".loader-hidder, .widget-loader-hidder, .crecls-loader-hidder, .narrowfilter-loader-hidder, .selectCls-loader-hidder").css("background-position","100% 3px");
           if(widgetId=="countrylist-autocomplete" || widgetId=="enrolluser-autocomplete" || widgetId=="enrolltpuser-autocomplete" || widgetId=="prerequisite-autocomplete" || widgetId=="equivalence-autocomplete" || widgetId=="survey-autocomplete" || widgetId=="assessment-autocomplete"){
             $(".countrysett-loader-hidder").css({"background-position":"99% 5px","cursor":"none"});
           }
           if(filterSearchCls[1]=="narrow-search-ac-text-overlap" || filterSearchCls[1]=="searchtag" || filterSearchCls[1]=="searchlocation" ){
        	 $(".narrowfilter-loader-hidder").css({"background-position":"100% 3px","cursor":"none"});
           }
          };

          if(widgetId=="countrylist-autocomplete" || widgetId=="enrolluser-autocomplete" || widgetId=="enrolltpuser-autocomplete" || widgetId=="prerequisite-autocomplete" || widgetId=="equivalence-autocomplete" || widgetId=="survey-autocomplete" || widgetId=="assessment-autocomplete"){
        	//$(".loader-hidder").css({"right":"22px","top":"1px","height":"22px"});
        	$(".loader-hidder").addClass("countrysett-loader-hidder");
      	    $(".countrysett-loader-hidder").removeClass("loader-hidder");
      	    if(widgetId=="enrolluser-autocomplete" || widgetId=="enrolltpuser-autocomplete"){
      	      $(".countrysett-loader-hidder").css({"right":"1px"}) ;
      	    }
      	    if(widgetId=="prerequisite-autocomplete" || widgetId=="equivalence-autocomplete" || widgetId=="survey-autocomplete" || widgetId=="assessment-autocomplete"){
      	      $(".countrysett-loader-hidder").css({"right":"1px"}) ;
      	    }
          }
          if(widgetId=="search_leaderboard-users_txt" || widgetId=="search_users_txt"){
        	  $(".loader-hidder").addClass("widget-loader-hidder");
        	  $(".widget-loader-hidder").removeClass("loader-hidder");
          }

          if(widgetId=="classname-autocomplete" || widgetId=="tpattchedcoursename-autocomplete" || widgetId=="username-search-autocomplete" || widgetId=="surassattchedquestions-autocomplete" ){
        	  $(".loader-hidder").addClass("crecls-loader-hidder");
        	  $(".crecls-loader-hidder").removeClass("loader-hidder");
        	  if(widgetId=="tpattchedcoursename-autocomplete"){
        	  $(".crecls-loader-hidder").css({"right":"1px","top":"-10px"});
        	  }
        	  if(widgetId=="surassattchedquestions-autocomplete"){
              $(".crecls-loader-hidder").css({"right":"56px","top":"-10px"});
              }
        	 /* if(widgetId=="username-search-autocomplete") {
        	  $(".crecls-loader-hidder").css("right","108px");
        	  }*/
        	  if(widgetId=="classname-autocomplete") {
              $(".crecls-loader-hidder").css("right","23px");
              }
          }
         if(widgetId=="srch_criteria_catkeyword"){
          $(".loader-hidder").addClass("selectCls-loader-hidder");
       	  $(".selectCls-loader-hidder").removeClass("loader-hidder");
         }
        if(widgetId=="report_table_autocomplete"){
             $(".loader-hidder").addClass("reportsLTbl-loader-hidder");
          	 $(".reportsLTbl-loader-hidder").removeClass("loader-hidder");
            }

          if(filterSearchCls[1]=="narrow-search-ac-text-overlap" || filterSearchCls[1]=="searchtag" || filterSearchCls[1]=="searchlocation" ){
        	 $(".loader-hidder").addClass("narrowfilter-loader-hidder");
        	 $(".narrowfilter-loader-hidder").removeClass("loader-hidder");
        	 if(filterSearchCls[1]=="searchtag" || filterSearchCls[1]=="searchlocation"){
        	 $(".narrowfilter-loader-hidder").css({"right":"21px","height":"19px"});
        	 }
          }
        }
   }catch(e){
			// To Do
		}
});
Drupal.ajax.prototype.commands.saveandclosePopup = function(ajax, response, status) {
	   try {
		   $(".active-qtip-div").remove();
		   $("#popup_container_qtip_buisness_disp_"+response.entities).closest(".qtip-active").remove();
		   $("#qtipAccessqtip_visible_disp_"+response.entities).closest(".qtip-active").remove();
	   }
	   catch(e) {
		   //nothing to do
	   }
};
Drupal.ajax.prototype.commands.displaymessagewizard = function(ajax, response, status) {
    try {
    	this.currTheme = Drupal.settings.ajaxPageState.theme;
    	var dupId = response.grpId;
	    $('#delete-msg-wizard').remove();
	    var html = '';
	    html+='<div id="delete-msg-wizard" style="display:none; padding: 0px;">';
	    html+='<table width="100%" cellpadding="0" cellspacing="0" border="0" valign="center">';

    		var title = Drupal.t('MSG711');

	    if(this.currTheme == 'expertusoneV2'){
	   	 html+= '<tr><td style="padding: 30px 24px;" class="commanTitleAll">'+title+'</td></tr>';
	    } else {
	     html+= '<tr><td color="#333333" style="padding: 30px 24px; text-align: justify;">'+title+'</td></tr>';
	    }
	    html+='</table>';
	    html+='</div>';
	    $("body").append(html);

	    var closeButt={};
	    closeButt[Drupal.t('LBL109')]=function(){  $('input[id="show_catag"]').attr('value',0); $("input[name = 'saveandshow']").click();$('#delete-msg-wizard').remove();};

         if(availableFunctionalities.exp_sp_esignature != undefined && availableFunctionalities.exp_sp_esignature != ""){
	    	var esignObj = {'popupDiv':'catalog-publish-unpublis-dialog',
	    			'esignFor':'displaymessagewizard','catalogId':dupId,'catalogType': 'Class','actionStatus': 'lrn_cls_sts_atv', 'rowObj': this};
	    	closeButt[Drupal.t('Yes')]=function(){ $.fn.getNewEsignPopup(esignObj);$(this).dialog('destroy');$(this).dialog('close');$('#delete-msg-wizard').remove();};
         }else{
        	 
        	 closeButt[Drupal.t('Yes')]=function(){ $(this).dialog('destroy');$(this).dialog('close');$('#delete-msg-wizard').remove();
	        	 setTimeout(function() {
	     			$('#visible-class-'+dupId).click()
	     		}, 300);
        	 };
         }

	    $("#delete-msg-wizard").dialog({
	        position:[(getWindowWidth()-400)/2,200],
	        bgiframe: true,
	        width:300,
	        resizable:false,
	        modal: true,
	        title:Drupal.t('LBL749'),
	        buttons:closeButt,
	        closeOnEscape: false,
	        draggable:false,
	        zIndex : 10005,
	        overlay:
	         {
	           opacity: 0.9,
	           background: "black"
	         }
	    });
	    $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').addClass("removebutton").end();
	    $(".removebutton").text(Drupal.t("No"));
	    $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(1)').before('<div class="admin-save-button-left-bg"></div>');
		 $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(1)').addClass("admin-save-button-middle-bg");
		 $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(1)').after('<div class="admin-save-button-right-bg"></div>');

	    if ( $.browser.msie && parseInt($.browser.version, 10)=='9' && this.currTheme == "expertusoneV2"|| $.browser.msie && parseInt($.browser.version, 10)=='8'&& this.currTheme == "expertusoneV2"){
			 /*$('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').before('<div class="white-btn-bg-left"></div>');
			 $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').addClass('white-btn-bg-middle');
			 $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').after('<div class="white-btn-bg-right"></div>');*/
			 $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').next('.white-btn-bg-right').css('margin-right','0px');
	    }
	    $("#delete-msg-wizard").show();

		$('.ui-dialog-titlebar-close').click(function(){
	        $("#delete-msg-wizard").remove();
	    });
		if(this.currTheme == 'expertusoneV2'){
	    	changeDialogPopUI();
	    }
    }
    catch(e){
      //Nothing to do
    }
  };


function orderEdit(){
	 try {
	  setTimeout(function() {
		var orderRow=$(".payment-billing-details-info .order-review-table tr,.payment-user-details-info .order-review-table tr").length;
		for(var i=0; i < orderRow; i++){
			var billH = $(".payment-billing-details-info .order-review-table tr:eq("+i+")").height();
			var userH = $(".payment-user-details-info .order-review-table tr:eq("+i+")").height();
			var maxH = (billH < userH) ? userH : billH;
			$(".payment-billing-details-info .order-review-table tr:eq("+i+"), .payment-user-details-info .order-review-table tr:eq("+i+")").height(maxH);
		}
	  }, 1000);
	  vtip();
	}catch(e) {
		   //nothing to do
	   }
}

function checkPaginationWidth(){
	try {
	if($("#admin-data-grid .ui-pg-table .ui-pg-table").is(":visible")){
	  var pageConWidth=$("#admin-data-grid .ui-pg-table .ui-pg-table").width();
	   $("#exportcontainer").css("right",pageConWidth+15);
	   if(document.getElementById('enrollment-upload-container') !== undefined) {
		if(Drupal.settings.ajaxPageState.theme != "expertusoneV2" && pageConWidth > 0) {
			$('.admin_ac_input_mainform.addedit-edit-enrolluser-autocomplete').width(195);
	 }
		$("#enrollment-upload-container").css("right",pageConWidth+15);
	   }
	 }
	}catch(e) {
		   //nothing to do
	   }
	};

(function($) {
	$.fn.cloneDestroyloader = function() {
		try {
			$("#root-admin").data("narrowsearch").destroyLoader('paint-narrow-search-results');
		} catch (e) {
			// To Do
		}
	};
})(jQuery);


Drupal.ajax.prototype.commands.showClonePopup = function(ajax, response, status) {

    try {
    	classId = response.class_id;
    	$('#manage-clone-list'+classId).html(response.html);

    	showHideCreateCopyDropDown(classId);
    	var par = $('.grey-btn-bg-right-create-copy');
    	var position = par.position();
    	this.currTheme = Drupal.settings.ajaxPageState.theme;
    	if(this.currTheme == "expertusoneV2"){
    	$("#ul-clone-list-"+classId ).css( "right" ,'-25px');
    	}else{
    		$("#ul-clone-list-"+classId ).css( "right" ,'-25px');
    		$("#ul-clone-list-"+classId ).css( "top" ,'30px');
    	}
		    	
    	$(".contentauthorclone").parent().parent().parent().parent().css("width","180px");
		$(".contentauthorclone .jspContainer").css("width","180px");
		$(".contentauthorclone .jspContainer .jspPane").css("width","170px;");
		$(".contentauthorclone .jspContainer .jspPane").css("height","66px;");
		$(".contentauthorclone").closest(".manage-clone-list").css("width","170px;");
		$(". contentauthorclone").css("width","200px");


		
    	Drupal.attachBehaviors();
    	vtip();
    }
    catch(e){
      //Nothing to do
    }
};

function showHideCreateCopyDropDown(entityId){
	try{
		$('.manage-clone-list').hide();
		// Qtippopup Disable
		$('#group-control').remove();
		$('.qtip-popup-visible').hide();

		var ddlist = $('#manage-clone-list' + entityId).css('visibility');
		if (ddlist == 'hidden') {
			$('#ul-clone-list-' + entityId).css('visibility', 'visible');
			$('#ul-clone-list-' + entityId).show();
		} else {
			$('#ul-clone-list-' + entityId).css('visibility', 'hidden');
		}
	}catch(e){
			// To Do
		}
}

function checkboxDisableForCloneCA(obj)
{
	$('#clone-Content').prop('checked','checked');
	$('#clone-Content').parent().removeClass('checkbox-unselected');
	$('#clone-Content').parent().addClass('checkbox-selected');

	if($(obj).attr("id") == "clone-Interactions" && $(obj).is(":checked") == true)
	{
		$('#clone-Interactions').prop('checked','checked');
		$('#clone-Interactions').parent().removeClass('checkbox-unselected');
		$('#clone-Interactions').parent().addClass('checkbox-selected');
		
		$('#clone-Content').prop('checked','checked');
		$('#clone-Content').parent().removeClass('checkbox-unselected');
		$('#clone-Content').parent().addClass('checkbox-selected');
	}else if($(obj).attr("id") == "clone-Interactions" && $(obj).is(":checked") == false)
	{
		$('#clone-Interactions').parent().removeClass('checkbox-selected');
		$('#clone-Interactions').parent().addClass('checkbox-unselected');
		$('#clone-Interactions').prop('checked','');
	}
	
	
	if($(obj).attr("id") == "clone-access" && $(obj).is(":checked") == true)
	{
		$('#clone-access').prop('checked','checked');
		$('#clone-access').parent().removeClass('checkbox-unselected');
		$('#clone-access').parent().addClass('checkbox-selected');
		
		$('#clone-Content').prop('checked','checked');
		$('#clone-Content').parent().removeClass('checkbox-unselected');
		$('#clone-Content').parent().addClass('checkbox-selected');
	}else if($(obj).attr("id") == "clone-access" && $(obj).is(":checked") == false)
	{
		$('#clone-access').parent().removeClass('checkbox-selected');
		$('#clone-access').parent().addClass('checkbox-unselected');
		$('#clone-access').prop('checked','');
	}
	
	/*if($(obj).attr("id") == "clone-Content" && $(obj).is(":checked") == true)
	{
		$('#clone-Content').prop('checked','checked');
		$('#clone-Content').parent().removeClass('checkbox-unselected');
		$('#clone-Content').parent().addClass('checkbox-selected');
	}else if($(obj).attr("id") == "clone-Content" && $(obj).is(":checked") == false)
	{
		$('#clone-Content').prop('checked','');
		$('#clone-Content').parent().removeClass('checkbox-selected');
		$('#clone-Content').parent().addClass('checkbox-unselected');
		
		$('#clone-Interactions').prop('checked','');
		$('#clone-Interactions').parent().addClass('checkbox-unselected');
		$('#clone-Interactions').parent().removeClass('checkbox-selected');
		
		
		
	}*/
	
	//{
	
	//}
/*	if($('#clone-Content').is(':checked')){
		$('#clone-Interactions').attr('disabled','');
		//$('#clone-Interactions').parent().addClass('checkbox-selected');
		//$('#clone-Interactions').parent().removeClass('checkbox-unselected');
		
	}
	else
	{
		//alert($('#clone-Interactions').size());
		
		$('#clone-Interactions').attr('checked','');
		$('#clone-Interactions').parent().addClass('checkbox-unselected');
		$('#clone-Interactions').parent().removeClass('checkbox-selected');
		$('#clone-Interactions').attr('disabled','disabled');
		
		
		
	}*/
	
	$(".jspPane").css("left","0px");
}

function checkboxDisableForClone(type,id){
	if(type == 'class'){
	if(!$('#clone-content_list').is(':checked')){
		$('#clone-enrollment').parent().removeClass('checkbox-selected');
		$('#clone-enrollment').parent().addClass('checkbox-unselected');
		$('#clone-enrollment').attr('checked','');
	}
	}else{
		if(!$('#ul-clone-list-'+id+' #clone-attachedcourses').is(':checked')){
			$('#ul-clone-list-'+id+' #clone-assessment').parent().removeClass('checkbox-selected');
			$('#ul-clone-list-'+id+' #clone-assessment').parent().addClass('checkbox-unselected');
			$('#ul-clone-list-'+id+' #clone-assessment').attr('checked','');
			
			$('#ul-clone-list-'+id+' #clone-survey').parent().removeClass('checkbox-selected');
			$('#ul-clone-list-'+id+' #clone-survey').parent().addClass('checkbox-unselected');
			$('#ul-clone-list-'+id+' #clone-survey').attr('checked','');
		}
	}
}
function checkboxAutoEchckForContentClone(type,id){
	if(type == 'class'){
	if($('#clone-enrollment').is(':checked')){
		$('#clone-content_list').attr('checked','checked');
		$('#clone-content_list').parent().removeClass('checkbox-unselected');
		$('#clone-content_list').parent().addClass('checkbox-selected');
	}
	}else{
		if($('#ul-clone-list-'+id+' #clone-assessment').is(':checked') || $('#ul-clone-list-'+id+' #clone-survey').is(':checked')){
			$('#ul-clone-list-'+id+' #clone-attachedcourses').attr('checked','checked');
			$('#ul-clone-list-'+id+' #clone-attachedcourses').parent().removeClass('checkbox-unselected');
			$('#ul-clone-list-'+id+' #clone-attachedcourses').parent().addClass('checkbox-selected');
}
	}
}

//Added by ganesh for custom attribute #custom_attribute_0078975
Drupal.ajax.prototype.commands.displayScreenWarningWizard = function(ajax, response, status) {
    try { 
        
    	this.currTheme = Drupal.settings.ajaxPageState.theme;
    	//var dupId = response.grpId; 
    	var name =  unescape(response.name).replace(/"/g, '&quot;');   
    	
		$('#delete-msg-wizard').remove();
	    var html = '';
	    html+='<div id="delete-msg-wizard" style="display:none; padding: 0px;">';
	    html+='<table width="100%" cellpadding="0" cellspacing="0" border="0" valign="center">';
	    	var title = name;

	    if(this.currTheme == 'expertusoneV2'){
	   	 html+= '<tr><td style="padding: 30px 24px;" class="commanTitleAll">'+title+'</td></tr>';
	    } else {
	     html+= '<tr><td color="#333333" style="padding: 30px 24px; text-align: justify;">'+title+'</td></tr>';
	    }
	    html+='</table>';
	    html+='</div>';
	    $("body").append(html);
 
	    var closeButt={};
	    closeButt[Drupal.t('LBL109')]=function(){ $(this).dialog('destroy');$(this).dialog('close');$('#delete-msg-wizard').remove();};

         if(availableFunctionalities.exp_sp_esignature != undefined && availableFunctionalities.exp_sp_esignature != ""){
              closeButt[Drupal.t('Yes')]=function(){
            	  var esignObj = {'popupDiv':'displayScreenWarningWizard','esignFor':'addScreenDetails'};
	                      $.fn.getNewEsignPopup(esignObj); $(this).dialog('destroy');$(this).dialog('close');};
         }else{
        	 closeButt[Drupal.t('Yes')]=function(){  
        	   
        	   $(this).dialog('destroy');$(this).dialog('close');$('#delete-msg-wizard').remove();
     		   $("#delete-msg-wizard").remove();  
			   $("#hidden-screen-button").click(); 
        	};
         }

	    $("#delete-msg-wizard").dialog({
	        position:[(getWindowWidth()-400)/2,200],
	        bgiframe: true,
	        width:300,
	        resizable:false,
	        modal: true,
	        title:Drupal.t("LBL2015"),//"title",
	        buttons:closeButt,
	        closeOnEscape: false,
	        draggable:false,
	        zIndex : 10005,
	        overlay:
	         {
	           opacity: 0.9,
	           background: "black"
	         }
	    });
	    $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').addClass("removebutton").end();
	    $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(1)').before('<div class="admin-save-button-left-bg"></div>');
		 $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(1)').addClass("admin-save-button-middle-bg");
		 $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(1)').after('<div class="admin-save-button-right-bg"></div>');

	    if ( $.browser.msie && parseInt($.browser.version, 10)=='9' && this.currTheme == "expertusoneV2"|| $.browser.msie && parseInt($.browser.version, 10)=='8'&& this.currTheme == "expertusoneV2"){
			/* $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').before('<div class="white-btn-bg-left"></div>');
			 $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').addClass('white-btn-bg-middle');
			 $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').after('<div class="white-btn-bg-right"></div>');*/
			 $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').next('.white-btn-bg-right').css('margin-right','0px');
	    }
	    $("#delete-msg-wizard").show();

		$('.ui-dialog-titlebar-close').click(function(){
	        $("#delete-msg-wizard").remove();
	    });
		if(this.currTheme == 'expertusoneV2'){
	    	changeDialogPopUI();
	    } 
			    
	      
	     
	   
    }
    catch(e){
      //Nothing to do
    }
  };

Drupal.ajax.prototype.commands.displayWarningWizard = function(ajax, response, status) {
    try {
    	this.currTheme = Drupal.settings.ajaxPageState.theme;
    	var dupId = response.grpId;
    	var name =  unescape(response.name).replace(/"/g, '&quot;');

	    $('#delete-msg-wizard').remove();
	    var html = '';
	    html+='<div id="delete-msg-wizard" style="display:none; padding: 0px;">';
	    html+='<table width="100%" cellpadding="0" cellspacing="0" border="0" valign="center">';
	    	var title = name;

	    if(this.currTheme == 'expertusoneV2'){
	   	 html+= '<tr><td style="padding: 30px 24px;" class="commanTitleAll">'+title+'</td></tr>';
	    } else {
	     html+= '<tr><td color="#333333" style="padding: 30px 24px; text-align: justify;">'+title+'</td></tr>';
	    }
	    html+='</table>';
	    html+='</div>';
	    $("body").append(html);

	    var closeButt={};
	    closeButt[Drupal.t('LBL109')]=function(){ $(this).dialog('destroy');$(this).dialog('close');$('#delete-msg-wizard').remove();};

         if(availableFunctionalities.exp_sp_esignature != undefined && availableFunctionalities.exp_sp_esignature != ""){
              closeButt[Drupal.t('Yes')]=function(){
            	  var esignObj = {'popupDiv':'displayWarningWizard','esignFor':'displayWarningWizard', 'dupId':dupId, 'rowObj': this};
	                      $.fn.getNewEsignPopup(esignObj); $(this).dialog('destroy');$(this).dialog('close');};
         }else{
        	 closeButt[Drupal.t('Yes')]=function(){ callInsertProcess(dupId);};
         }

	    $("#delete-msg-wizard").dialog({
	        position:[(getWindowWidth()-400)/2,200],
	        bgiframe: true,
	        width:300,
	        resizable:false,
	        modal: true,
	        title:Drupal.t("Group"),//"title",
	        buttons:closeButt,
	        closeOnEscape: false,
	        draggable:false,
	        zIndex : 10005,
	        overlay:
	         {
	           opacity: 0.9,
	           background: "black"
	         }
	    });
	    $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').addClass("removebutton").end();
	    $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(1)').before('<div class="admin-save-button-left-bg"></div>');
		 $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(1)').addClass("admin-save-button-middle-bg");
		 $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(1)').after('<div class="admin-save-button-right-bg"></div>');

	    if ( $.browser.msie && parseInt($.browser.version, 10)=='9' && this.currTheme == "expertusoneV2"|| $.browser.msie && parseInt($.browser.version, 10)=='8'&& this.currTheme == "expertusoneV2"){
			/* $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').before('<div class="white-btn-bg-left"></div>');
			 $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').addClass('white-btn-bg-middle');
			 $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').after('<div class="white-btn-bg-right"></div>');*/
			 $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').next('.white-btn-bg-right').css('margin-right','0px');
	    }
	    $("#delete-msg-wizard").show();

		$('.ui-dialog-titlebar-close').click(function(){
	        $("#delete-msg-wizard").remove();
	    });
		if(this.currTheme == 'expertusoneV2'){
	    	changeDialogPopUI();
	    }
    }
    catch(e){
      //Nothing to do
    }
  };
  function callInsertProcess(dupId,esign){
	  esign = typeof esign !== 'undefined' ? esign : '';
	  $('input[id="grp_war"]').attr('value',1);
	  $('input[id="grp_war_grpId"]').attr('value',dupId);
	  if(esign == 'esign'){
		  $("#esign-role-addedit-form").click();
	  }else{
		  $("input[name = 'grp-save']").click();
	  }
	  $('#delete-msg-wizard').remove();
	}

function callVisibility(qtipObj){
	
	if(typeof(qtipObj.dispGrpView) == 'undefined') qtipObj.dispGrpView='';
	if(typeof(qtipObj.catalogVisibleId) == 'undefined') qtipObj.catalogVisibleId='';
	
	if(document.getElementsByClassName('qtip-close-button') && qtipObj.catalogVisibleId.indexOf("AttachIdqtip_add_grp") <= 0){
	$('.qtip-close-button').click();
}	
	//console.log(paginationEnter);
	if(paginationEnter)
		return false;
	// Clone Onclick Disable
	var ddlist = $('#manage-clone-list' + qtipObj.entityId).css('visibility');
	if (ddlist == 'hidden') {
		$('#ul-clone-list-' + qtipObj.entityId).css('visibility', 'visible');
		$('#ul-clone-list-' + qtipObj.entityId).show();
	} else {
		$('#ul-clone-list-' + qtipObj.entityId).css('visibility', 'hidden');
	}
	$('.manage-clone-list').hide();
	
	if(qtipObj.dispGrpView == 'Y'){ // Added for this ticket #0042617 to show the Hidden tab

		var lId = $('#viewgroup-detail-wrapper #view-scroll-wrapper');
		var mypos = $('#' + qtipObj.popupDispId); // Declaring ID
		 // Popup Calculation
		var lheg = lId.height();
		var popoff = lId.offset();
		 // Action link Calculation
		var newlheg = mypos.height();
		var newpopoff = mypos.offset();

		var gridHeight = (lheg/2) + popoff.top;
		var linkHeight = newlheg + newpopoff.top;

		if(gridHeight < linkHeight){
			qtipObj.dispDown = '';
			if((linkHeight - gridHeight) > 100){
				lId.css("overflow","hidden");
				$('#viewgroup-detail-wrapper #view-scroll-wrapper .jspContainer').css("overflow","hidden");
			}else{
				lId.css("overflow","visible");
				$('#viewgroup-detail-wrapper #view-scroll-wrapper .jspContainer').css("overflow","visible");
			}
		}else{
			lId.css("overflow","visible");
			$('#viewgroup-detail-wrapper #view-scroll-wrapper .jspContainer').css("overflow","visible");
		}
	}else {
		$('#viewgroup-detail-wrapper #view-scroll-wrapper').css("overflow","hidden");
		$('#viewgroup-detail-wrapper #view-scroll-wrapper .jspContainer').css("overflow","hidden");
	}
	$('#group-control').remove();
	//console.log(qtipObj.catalogVisibleId);
	//console.log(qtipObj.catalogVisibleId.indexOf("AttachCrsIdqtip_visible_disp"));
	if(qtipObj.catalogVisibleId.indexOf("AttachCrsIdqtip_visible_disp") > 0 || qtipObj.catalogVisibleId.indexOf("AttachIdqtip_add_grp") > 0 ){
		var str = $('#program_attach_tabs .ui-state-active').attr('id');
		var currmod = str.split('-');
		//console.log(" string " + str);
		qtipObj.url = qtipObj.url + '/' + currmod[2] + '/' + $('#attach_course_dt form input[name="form_build_id"]').val(); 
	}
	if(qtipObj.catalogVisibleId.indexOf("AttachIdqtip_history") <= 0){
	$('.qtip-popup-visible').html('').hide();
	}else{
		$('.qtip-popup-history').html('').hide();
	}
	$('#' + qtipObj.popupDispId).qtipPopup({
		wid : qtipObj.wid,
		heg : qtipObj.heg,
		entityId : qtipObj.entityId,
		popupDispId : qtipObj.popupDispId,
		postype : qtipObj.postype,
		poslwid : (qtipObj.poslwid == '' || qtipObj.poslwid == undefined || qtipObj.poslwid == null) ? '' : qtipObj.poslwid,
		posrwid : (qtipObj.posrwid == '' || qtipObj.posrwid == undefined || qtipObj.posrwid == null) ? '' : qtipObj.posrwid,
		disp	: (qtipObj.qdis == '' || qtipObj.qdis == undefined || qtipObj.qdis == null) ? ''	: qtipObj.qdis,
		linkid	: qtipObj.linkid,
		onClsFn	: qtipObj.onClsFn,
		dispDown : (qtipObj.dispDown == undefined) ? '': qtipObj.dispDown,
	});
	setTimeout(function(){
		EXPERTUS_SMARTPORTAL_AbstractDetailsWidget.createLoader("paintContent"+ qtipObj.popupDispId);
		if('[qtipObj.linkid^=visible-sharelink]') {
			$('#sharelink_disp_div .survey-sharelink-main-wrapper .loadercontent .loaderimg').css('margin-top','-42px');
			$('.qtip_survey_sharelink .loadercontent .loaderimg').css('margin-top','-8px');
		}
	},10);
	//#custom_attribute_0078975
	if(qtipObj.entityType=='order'){ //For custom attribute order
		orderQtipVisible(qtipObj); // For Order	
	}else{
	$("#root-admin").data("narrowsearch").visiblePopup(qtipObj);
}
	
	 
}
// Visibility pop up close
function closeQtip(popupId,entId,onClsFn){
	try{
	
	   //#custom_attribute_0078975 Refresh the association when click on close button from show-in-screen Qtip
	   if(popupId.indexOf('qtip_showinscreen_dis')>=0){ 
	     $('#root-admin').data('narrowsearch').refreshLastAccessedRow();
	   }
	   
		if(typeof(onClsFn) == 'undefined') onClsFn='';
		if(popupId == '')
			$('.qtip-popup-visible').html('').hide();
		else
			$('#'+popupId+' #visible-popup-'+entId).html('').hide();

		if(typeof(onClsFn) == 'function') {
			onClsFn();
		}
	}catch(e){

	}
}
function checkCountryDisable(){
  if($('#add_grp_Country').is(':checked')){
	 $('#add_grp_State').attr('disabled', false);
  }else {
	 $('#add_grp_State').parent().removeClass('checkbox-selected');
	 $('#add_grp_State').parent().addClass('checkbox-unselected');
	 $('#add_grp_State').attr('checked','');
	 $('#add_grp_State').attr('disabled',true);
  }
}
function stateDisabledMessage(){
 if(!($('#add_grp_Country').is(':checked'))){
	 var error = new Array();
	 error[0] = Drupal.t('select a country');
	 var message_call = expertus_error_message(error,'error');
	 $('#show_expertus_message').show();
	 $('#show_expertus_message').html(message_call);
  }
}

function addslashes(string) {
    return string.replace(/'/g, '\\\'');
}

function removeCurrencyPopup(codeval,symbol){
	this.currTheme = Drupal.settings.ajaxPageState.theme;
	var uniqueClassPopup = '';
	 $('#delete-msg-wizard').remove();
	    var html = '';
	    html+='<div id="delete-msg-wizard" style="display:none; padding: 0px;">';
	    html+='<table width="100%" cellpadding="0" cellspacing="0" border="0" valign="center">';
	    if(this.currTheme == 'expertusoneV2'){
	   	 html+= '<tr><td style="padding: 30px 24px;" class="commanTitleAll">'+Drupal.t("MSG747")+' "'+codeval +' <span class="currency-override-bold">'+ symbol+'</span>"?'+'</td></tr>';
	    } else {
	     html+= '<tr><td color="#333333" style="padding: 30px 24px; text-align: justify;">'+Drupal.t("MSG747")+' "'+ codeval +' <span class="currency-override-bold">'+ symbol +'</span>"?'+'</td></tr>';
	    }
	    html+='</table>';
	    html+='</div>';
	    $("body").append(html);

	    var closeButt={};
	    closeButt[Drupal.t('LBL109')]=function(){ $(this).dialog('destroy');$(this).dialog('close');$('#delete-msg-wizard').remove();};

		 closeButt[Drupal.t('Yes')]=function(){
			 $("#root-admin").data("narrowsearch").createLoader("currency-detail-wrapper");
			 removeaddedcurrency(codeval);
		 };
	    $("#delete-msg-wizard").dialog({
	        position:[(getWindowWidth()-400)/2,200],
	        bgiframe: true,
	        width:300,
	        resizable:false,
	        modal: true,
	        title:Drupal.t('LBL749'),
	        buttons:closeButt,
	        closeOnEscape: false,
	        draggable:false,
	        zIndex : 10005,
	        overlay:
	         {
	           opacity: 0.9,
	           background: "black"
	         }
	    });
	    $('.ui-dialog').wrap("<div id='catalog-publish-unpublis-dialog' class='"+uniqueClassPopup+"'></div>");
	    $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(0)').addClass("removebutton").end();
	    $(".removebutton").text(Drupal.t("No"));
	    $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(1)').before('<div class="admin-save-button-left-bg"></div>');
	    $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(1)').addClass("admin-save-button-middle-bg").end();
	    $('.ui-dialog-buttonpane .ui-dialog-buttonset button:eq(1)').after('<div class="admin-save-button-right-bg"></div>');
	    $("#delete-msg-wizard").show();

		$('.ui-dialog-titlebar-close').click(function(){
	        $("#delete-msg-wizard").remove();
	    });
		$('.admin-save-button-middle-bg').click(function(){
	        $("#delete-msg-wizard").remove();
	    });
		if(this.currTheme == 'expertusoneV2'){
	    	changeDialogPopUI();
	    }
}

function removeaddedcurrency(val) {
      $.ajax({
       	type: "GET",
       	url: "/?q=administration/sitesetup/config/currency/remove/"+val,
       	success: function(data) {
       			if(data=='success'){
       				$('.row-'+val).remove();
       				$(".currency-table-heading tbody tr").removeClass( "odd-list-class" );
       				$(".currency-table-heading tbody tr").removeClass( "even-list-class" );
       				$(".currency-table-heading tbody tr.rowtbody:nth-child(odd)").addClass("even-list-class");
       			    $(".currency-table-heading tbody tr.rowtbody:nth-child(even)").addClass("odd-list-class");
       			    dynamicWidthHeight('delete');
       			    $("#root-admin").data("narrowsearch").destroyLoader("currency-detail-wrapper");
       			}
       	}
       	});
}
function checkboxSelectedUnselectedCurrency(id){
	try{
		if($(id).attr('type')!='radio'){
			if($(id).is(':checked')){
				$(id).parent().removeClass('checkbox-unselected');
				$(id).parent().addClass('checkbox-selected');
			}
			else {
				$(id).parent().removeClass('checkbox-selected');
				$(id).parent().addClass('checkbox-unselected');
			}
			
		}
		var totalcheckbox = $('#currency-td-table .multichk').length;
    	var cheklen = $('#currency-td-table .checkbox-selected').length;
    	if(totalcheckbox==cheklen){
    		$('#currency_select').attr('checked', true);
    		$('.currency-muliselect').removeClass('checkbox-unselected').addClass('checkbox-selected');
    		$('.multichk').removeClass('checkbox-unselected').addClass('checkbox-selected');
    	} else {
    		$('#currency_select').attr('checked', false);
    		$('.currency-muliselect').removeClass('checkbox-selected').addClass('checkbox-unselected');
    	}	
	}catch(e){
		// to do
	}
}
function Currencycheckedall(){
	try{
		    $("#currency_select").change(function(){
		    	$(".attach-group-list").prop('checked', $(this).prop("checked"));			    	
		    	if($('#currency_select').attr('checked')) {
		    		$(this).attr('checked', true);
		    		$('.currency-muliselect').removeClass('checkbox-unselected').addClass('checkbox-selected');
		    		$('.multichk').removeClass('checkbox-unselected').addClass('checkbox-selected');
		    	} else{
		    		$(this).attr('checked', false);
		    		$('.currency-muliselect').removeClass('checkbox-selected').addClass('checkbox-unselected');
		    		$('.multichk').removeClass('checkbox-selected').addClass('checkbox-unselected');		    		
		    	}	
		    	return false;
		    });
	}

	catch(e){

	}
}
function dynamicWidthHeight(callfrom){
	  var scrol_height = '';
	  var table_height = $('#multi_currency_setup_div .currency-table-heading').height();
	  var table_width = $('#multi_currency_setup_div .currency-table-heading').width();
	  //console.log(table_height);
	  //console.log(table_width+'here');
	  if(table_height > 310 && table_width > 800){
		  var new_width = 825;
		  var new_height = 378;
		  $('#modal-content').css({"width":new_width,'height':new_height});
		  $('#tableholder').css({'height': '307px', 'width': '790px'});
		  $('#multi_currency_setup_div').css({'height': '307px', 'width': '790px', 'overflow': 'hidden'});
		  $("#multi_currency_setup_div").jScrollPane();
	  }else if(table_height <150 && table_width <165){
		  $('#modal-content').css({'height': '150px', 'width': '295px'});
		  $('.addedit-form-cancel-and-save-actions-row').css({'width':'90%','margin-left': '40px'});
		  $('#tableholder').css({'height': '60px', 'width': '240px'});
		  $('#multi_currency_setup_div').css({'height': '60px', 'width': '240px'});
		  $('.currency-table-heading').css({'width': '245px'});
		  if($('.rowtbody').length<=0){
			  $('.currency-table-heading').remove();
			  $('#multi_currency_setup_div').append("<div width=\"130px\" height=\"100px\" class=\"currency-table-heading admin-empty-text-msg\" style=\"border:0px;\">"+Drupal.t('MSG746')+"</div>" );
		  }

	  } else{
		  if($('.rowtbody').length<=0){
			  $('.currency-table-heading').remove();
			  $('#multi_currency_setup_div').append("<div width=\"130px\" height=\"100px\" class=\"currency-table-heading admin-empty-text-msg\" style=\"border:0px;\">"+Drupal.t('MSG746')+"</div>" );
		  }
		  //console.log('here');
		  var new_width = table_width +50;
		  var new_height = table_height+72;
		  table_width = table_width +15;
		  $('#modal-content').css({"width":new_width,'height':new_height});
		  $('#tableholder').css({'height': table_height+'px', 'width': table_width+'px'});
		  $('#multi_currency_setup_div').css({'height': table_height+'px', 'width': table_width+'px'});
		  var element = $('#multi_currency_setup_div').jScrollPane({});
		  var api = element.data('jsp');
		  api.destroy();
	  }
	  $('#modalContent').removeAttr( 'style' );
	  $('#modalContent').css({"z-index":"1001"});
	  $('#modalContent').css("position","absolute");
	  $('#modalContent').css("top", Math.max(0, (($(window).height() - $('#tableholder').outerHeight()) / 2) +  $(window).scrollTop()) + "px");
	  //console.log(Math.max(0, (($(window).width() - $('#tableholder').outerWidth()) / 2) +  $(window).scrollLeft()) + "px");
	  $('#modalContent').css("left", Math.max(0, (($(window).width() - $('#tableholder').outerWidth()) / 2) +  $(window).scrollLeft()) + "px");
}

(function($) {
	$.fn.dynamicWidthHeightAdd = function(){
	try{
		dynamicWidthHeight(false);
	}catch(e){
			// To Do
		}
	};

})(jQuery);


function dynamicstylechange(callfrom){
	var rowCount = $('.sf-table-heading tr').length;
	var consumer_sec_key = $( "input[name='consumer_secret_key']" ).val();
	var consumer_key = $( "input[name='consumer_key']" ).val();
	var sf_id = $( "input[name='expertusone_sf_id']" ).val();
	if(consumer_sec_key == ''){
		$( "input[name='consumer_secret_key']" ).addClass( "sfrow-error-check" );
	} if(consumer_key == ''){
		$( "input[name='consumer_key']" ).addClass( "sfrow-error-check" );
	} if(sf_id == ''){
		$( "input[name='expertusone_sf_id']" ).addClass( "sfrow-error-check" );
	}
	for(var i=0;i<rowCount-1;i++){
		//alert('#system_user_'+i);
		var system_user = $('#system_user_'+i).val();
		var system_pasword = $('#system_user_pwd_'+i).val();
		if(system_user == ''){
			$('#system_user_'+i).addClass( "sf-table-heading check-attributes > input sfrow-error-check" );
		}
		if(system_pasword == ''){
			$('#system_user_pwd_'+i).addClass( "sf-table-heading check-attributes > input sfrow-error-check" );
		}
	}
}

(function($) {
	$.fn.dynamicstylechangeAdd = function(){
	try{
		dynamicstylechange(false);
	}catch(e){
			// To Do
		}
	};

})(jQuery);

//0053694: SF-Survey | Survey code fadeout
(function($) {
	
	$.fn.callVtip = function() {
		try{
			vtip();
		}catch(e){
  			// To Do
  		}
	};
	/*Viswanathan added for #0074786*/
	$('.fivestar-widget a').live('click', function(e) {
		e.preventDefault();
   });
   // calendar icon - right click disable
   $('#calendar-view-icon').live('contextmenu', function() {
	   return false;
   });
   $('#calendar-view-icon').live('click', function(e) {
	   e.preventDefault();
      	drawCalendar();
   });
})(jQuery);

/* //0072940: Zoho# 18142- Instructor search box is not working
(function($) {
	$('#multiautocomplete').live("focus",  function(e) {
	    $(this).select();
    });	
})(jQuery);
 */
function changeDiscountType(){
	 try{
		 if($('#two-col-row-discount_type_row').find('.addedit-edit-dis_type option:selected').val() == 3){
			 $('#currency-list-discount').addClass('discount_currency_list_visible');
			 $('#currency-list-discount').removeClass('discount_currency_list_invisible');
			 $('.addedit-edit-dis_typeval').addClass('fixed_dusccount_type_applied');
		 } else{
			 $('#currency-list-discount').removeClass('discount_currency_list_visible');
			 $('#currency-list-discount').addClass('discount_currency_list_invisible');
			 $('.addedit-edit-dis_typeval').removeClass('fixed_dusccount_type_applied');
			 $('.discount_currency_list').val('');
		 }
	 }catch(e){
		 // to do
	 }
}
function drawCalendar()
{
	document.cookie="uri="+window.location.search;
	window.location.href="?q=admincalendar";
}
//Added by vetrivel.P for #0070900
function readCookie(name) {
	var nameEQ = name + "=";
	var ca = document.cookie.split(';');
	for(var i=0;i < ca.length;i++) {
		var c = ca[i];
		while (c.charAt(0)==' ') c = c.substring(1,c.length);
		if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);
	}
	return null;
}
function urldecode(url) {
	  return decodeURIComponent(url.replace(/\+/g, ' '));
}
function eraseCookie(name) {
	createCookie(name,"",-1);
}
function createCookie(name,value,days) {
	if (days) {
		var date = new Date();
		date.setTime(date.getTime()+(days*24*60*60*1000));
		var expires = "; expires="+date.toGMTString();
	}
	else var expires = "";
	document.cookie = name+"="+value+expires+"; path=/";
}

function entityvalidation(entity_type){
	var obj = EXPERTUS_SMARTPORTAL_AbstractDetailsWidget;
	obj.createLoader('tab-content-main');
    document.getElementById(entity_type).click();
}

function downloadLink(btn_type){
    if(btn_type == 'user_upload_done_btn'){
	$('#download_template').css('visibility','visible');
	$('#download_template').css('display','block');
    }else if(btn_type == 'enrollment_upload_file'){
            $('#download_template_enroll').css('visibility','visible');
            $('#download_template_enroll').css('display','block');
   }else if(btn_type == 'enrollment_upload_class'){
            $('#download_template_class').css('visibility','visible');
            $('#download_template_class').css('display','block');

        }else{
            //do nothing
        }
}

function downloadSample(btn_type){
	
	var url = resource.base_host;
        if(btn_type == 'user_upload_done_btn'){
	var file = url+"/User_feed.csv";
        }else if(btn_type == 'enrollment_upload_file'){
            var file = url+"/Enrollment_feed.csv";
        }else{
            var file = url; // nothing to do here .. for future use
        }
	window.open(file);
	$('#manage-dd-list').css('visibility','hidden');
	$('#manage-dd-list').css('display','none');
	$('#manage-dd-list').hide();
	if(btn_type == 'user_upload_done_btn'){
	$('#download_template').css('visibility','hidden');
	$('#download_template').css('display','none');
	$('#download_template').hide();
        }else if(btn_type == 'enrollment_upload_file'){
            $('#download_template_enroll').css('visibility','hidden');
            $('#download_template_enroll').css('display','none');
            $('#download_template_enroll').hide();
        }else{
            // do nothing
        }
}
//#custom_attribute_0078975
function MoveTabPrev(itemcount) {
	//console.log('MoveTabPrev: '+itemcount);
	var div_width = $('#carousel_inner').width();
	var ul_width = $('#carousel_inner ul').width();
	var increment = '';
	var item_width = '';
	var left_indent = '';
	var current_position = '';
	var isChromium = window.chrome;
	$('#carousel_inner').css('width','auto');
	$('#carousel_inner ul').css('width','auto');
	var ul_actualwidth = $('#carousel_inner ul').width();
	$('#carousel_inner').css('width',div_width);
	$('#carousel_inner ul').css('width',ul_width);
	var lastli_width = parseInt($('#carousel_container #carousel_inner ul li:last').css('width'));
	// console.log('last li width: '+lastli_width);
	
	if(itemcount === 7) {
	
	if(Drupal.settings.user.language !== undefined && Drupal.settings.user.language == 'de'){
		if (navigator.appVersion.indexOf("Trident/7.0")!= -1)
			increment = 22;
		else
			increment = 27;
	}
	else if (Drupal.settings.user.language !== undefined && Drupal.settings.user.language == 'it') {
		if (navigator.appVersion.indexOf("Trident/7.0")!= -1)
			increment = 93;
		else
			increment = 101;
	}
	else if (Drupal.settings.user.language !== undefined && Drupal.settings.user.language == 'pt-pt') {
		if(isChromium || navigator.appVersion.indexOf("Safari")!= -1)
			increment = 164;
		else if (navigator.appVersion.indexOf("Trident/7.0")!= -1)
			increment = 156;
		else
			increment = 152;
	}
	else if (Drupal.settings.user.language !== undefined && Drupal.settings.user.language == 'ru') {
		if(isChromium)
		{
		$('#carousel_container #carousel_inner').css('width', '410px');
		increment = 42;
		}
		else if(navigator.appVersion.indexOf("Safari")!= -1)
		{
		increment = 44;
		}
		else if (navigator.appVersion.indexOf("Trident/7.0")!= -1)
			increment = 39;
		else
			increment = 32;
	}
	else if (Drupal.settings.user.language !== undefined && Drupal.settings.user.language == 'es') {
		if (navigator.appVersion.indexOf("Trident/7.0")!= -1)
			increment = 99;
		else 
			increment = 104;
	}
	else if (Drupal.settings.user.language !== undefined && Drupal.settings.user.language == 'fr') {
		if (navigator.appVersion.indexOf("Trident/7.0")!= -1)
			{
			increment = 23;
			$('#carousel_container #carousel_inner').css('width', '449px');
			}
		else
			increment = 30;
	}
	else
		increment = 30;
	
	if (Drupal.settings.user.language !== undefined && Drupal.settings.user.language == 'en-us') {
		if(navigator.userAgent.indexOf("Firefox")!= -1)
			{
			item_width = (ul_actualwidth - div_width) + 3;
		 console.log('item_width1: '+item_width+'  '+'ul_actualwidth1:'+ul_actualwidth+'  '+'div_width1:'+div_width+'  '+'ul_width1:'+ul_width);
			}
		else
			{
			//alert('hev'+navigator.userAgent.indexOf("chrome")+'navigator.userAgent'+navigator.userAgent);

			item_width = (ul_actualwidth - div_width) + 7;
		// console.log('navigator.userAgent.indexOf'+navigator.userAgent+'  '+'item_width3: '+item_width+'  '+'ul_actualwidth3:'+ul_actualwidth+'  '+'div_width3:'+div_width+'  '+'ul_width3:'+ul_width);
			}

	}
	else
		{
		item_width = (ul_width - div_width) - increment;
	
	
	 //console.log('item_width3: '+item_width+'  '+'ul_actualwidth3:'+ul_actualwidth+'  '+'div_width3:'+div_width+'  '+'ul_width3:'+ul_width+' '+'increment'+increment);
		}
	var left_indent = parseInt($('#carousel_inner ul').css('left')) + item_width;
	var current_position = parseInt($('#carousel_inner ul').css('left'));
	$('#carousel_container .first a').css('margin-right','0');
	if(current_position <= 0) {
		$('#carousel_container .first').css('display', 'none');
		$('#carousel_container').css('padding-left', '9px');
		$('#carousel_container .last').css('display', 'block');
		if (Drupal.settings.user.language !== undefined && Drupal.settings.user.language == 'en-us'){
			if(isChromium || navigator.appVersion.indexOf("Safari")!= -1)
				$('#carousel_container #carousel_inner').css('width', '377px');
			else if (navigator.appVersion.indexOf("Trident/7.0")!= -1)
				$('#carousel_container #carousel_inner').css('width', '383px');
			else
				$('#carousel_container #carousel_inner').css('width', '373px');
		}
		if (Drupal.settings.user.language !== undefined && Drupal.settings.user.language == 'it'){
			if(isChromium || navigator.appVersion.indexOf("Safari")!= -1)
				$('#carousel_container #carousel_inner').css('width', '428px');
			else if (navigator.appVersion.indexOf("Trident/7.0")!= -1)
				$('#carousel_container #carousel_inner').css('width', '433px');
			else
				$('#carousel_container #carousel_inner').css('width', '428px');
		}
		if (Drupal.settings.user.language !== undefined && Drupal.settings.user.language == 'pt-pt'){
			if(isChromium || navigator.appVersion.indexOf("Safari")!= -1)
				$('#carousel_container #carousel_inner').css('width', '400px');
			else if (navigator.appVersion.indexOf("Trident/7.0")!= -1)
				$('#carousel_container #carousel_inner').css('width', '405px');
			else
				$('#carousel_container #carousel_inner').css('width', '410px');
		}
	}
	
	}
	
	if(itemcount === 6) {
		// console.log('Hi dude came into movetabprev 6');
		
		//item_width = (navigator.appVersion.indexOf("Trident/7.0")!= -1) ? (parseInt((ul_width - div_width) / 2) + 6) : parseInt((ul_width - div_width) / 2);
				
		var width_calc = (ul_actualwidth - lastli_width) - 3;
		$('#carousel_container #carousel_inner').css('width', width_calc);
		
		left_indent = parseInt($('#carousel_inner ul').css('left')) - parseInt($('#carousel_inner ul').css('left'));
		current_position = parseInt($('#carousel_inner ul').css('left'));
		
		if(current_position <= 0) {
			$('#carousel_container .first').css('display', 'none');
			$('#carousel_container').css('padding-left', '9px');
			$('#carousel_container .last').css('display', 'block');
		}
	}
	
	$('#carousel_inner ul').animate({'left' : left_indent},{queue:true, duration:500},function(){  
    });
}
function MoveTabNext(itemcount) {
	 //console.log('MoveTabNext: '+itemcount);
	var div_width = $('#carousel_inner').width();
	var ul_width = $('#carousel_inner ul').width();
	var increment = '';
	var item_width = '';
	var left_indent = '';
	var current_position = '';
	var isChromium = window.chrome;
	$('#carousel_inner').css('width','auto');
	$('#carousel_inner ul').css('width','auto');
	var ul_actualwidth = $('#carousel_inner ul').width();
	$('#carousel_inner').css('width',div_width);
	$('#carousel_inner ul').css('width',ul_width);
	
	if(itemcount === 7) {
	
	if(Drupal.settings.user.language !== undefined && Drupal.settings.user.language == 'de'){
		if (navigator.appVersion.indexOf("Trident/7.0")!= -1)
			//increment = 17;
			increment = 22;
		else
			increment = 27;
	}
	else if (Drupal.settings.user.language !== undefined && Drupal.settings.user.language == 'it') {
		if (navigator.appVersion.indexOf("Trident/7.0")!= -1)
			//increment = 123;
			increment = 128;
		else
			increment = 129;
	}
	else if (Drupal.settings.user.language !== undefined && Drupal.settings.user.language == 'pt-pt') {
		if(isChromium || navigator.appVersion.indexOf("Safari")!= -1)
			increment = 228;
		else if (navigator.appVersion.indexOf("Trident/7.0")!= -1)
			//increment = 223;
			increment = 219;
		else
			increment = 217;
	}
	else if (Drupal.settings.user.language !== undefined && Drupal.settings.user.language == 'ru'){
		//if(isChromium || navigator.appVersion.indexOf("Safari")!= -1)
		if(isChromium)
			{
			$('#carousel_container #carousel_inner').css('width', '410px');
			increment = 42;
			}
		else if(navigator.appVersion.indexOf("Safari")!= -1)
			increment = 44;
		else if (navigator.appVersion.indexOf("Trident/7.0")!= -1)
			increment = 39;
		else
			increment = 32;
	} 
	else if (Drupal.settings.user.language !== undefined && Drupal.settings.user.language == 'es') {
		if (navigator.appVersion.indexOf("Trident/7.0")!= -1)
			{
			//increment = 99;
			increment = 102;
			$('#carousel_container #carousel_inner').css('width', '449px');
			}
		else 
			increment = 104;
	}
	else if (Drupal.settings.user.language !== undefined && Drupal.settings.user.language == 'fr') {
		if (navigator.appVersion.indexOf("Trident/7.0")!= -1)
			{
			//increment = 23;
			increment = 26;
		$('#carousel_container #carousel_inner').css('width', '449px');
			}

		else
			increment = 30;
	}
	else
		increment = 30;
	
	if (Drupal.settings.user.language !== undefined && Drupal.settings.user.language == 'en-us') {
		if(navigator.userAgent.indexOf("Firefox")!= -1)
			{
			item_width = (ul_actualwidth - div_width) - 28;
			 //console.log('item_width1: '+item_width+'  '+'ul_actualwidth1:'+ul_actualwidth+'  '+'div_width1:'+div_width+'  '+'ul_width1:'+ul_width);
			}
		else if(navigator.appVersion.indexOf("Trident/7.0")!= -1)
		{
		item_width = (ul_actualwidth - div_width) - 34;
	 //console.log('navigator.userAgent.indexOf'+navigator.userAgent+'  '+'item_widthnext: '+item_width+'  '+'ul_actualwidthnext:'+ul_actualwidth+'  '+'div_widthnext:'+div_width+'  '+'ul_widthnext:'+ul_width);
		}
		else
			{
			item_width = (ul_actualwidth - div_width) - 24;
			 //console.log('item_width3: '+item_width+'  '+'ul_actualwidth3:'+ul_actualwidth+'  '+'div_width3:'+div_width+'  '+'ul_width3:'+ul_width);
			}
	}
	else
		{
		item_width = (ul_width - div_width) - increment;
	
	
	 //console.log('item_widthnext: '+item_width+'  '+'ul_actualwidthnext:'+ul_actualwidth+'  '+'div_widthnext:'+div_width+'  '+'ul_widthnext:'+ul_width+'  '+'increment'+increment);
		}
	left_indent = parseInt($('#carousel_inner ul').css('left')) - item_width;
	current_position = parseInt($('#carousel_inner ul').css('left'));
	$('#carousel_container .first a').css('margin-right','5px');
	if(current_position >= -162) {
		$('#carousel_container').css('padding-left', '0');
		$('#carousel_container .last').css('display', 'none');
		$('#carousel_container .first').css('display', 'block');
		if (Drupal.settings.user.language !== undefined && Drupal.settings.user.language == 'en-us'){
			if(isChromium || navigator.appVersion.indexOf("Safari")!= -1)
				$('#carousel_container #carousel_inner').css('width', '408px');
			else if (navigator.appVersion.indexOf("Trident/7.0")!= -1)
				$('#carousel_container #carousel_inner').css('width', '414px');
			else
				$('#carousel_container #carousel_inner').css('width', '404px');
		}
		if (Drupal.settings.user.language !== undefined && Drupal.settings.user.language == 'it'){
			if(isChromium || navigator.appVersion.indexOf("Safari")!= -1)
				$('#carousel_container #carousel_inner').css('width', '456px');
			else if (navigator.appVersion.indexOf("Trident/7.0")!= -1)
				$('#carousel_container #carousel_inner').css('width', '463px');
			else
				$('#carousel_container #carousel_inner').css('width', '456px');
		}
		if (Drupal.settings.user.language !== undefined && Drupal.settings.user.language == 'pt-pt'){
			if(isChromium || navigator.appVersion.indexOf("Safari")!= -1)
				$('#carousel_container #carousel_inner').css('width', '464px');
			else if (navigator.appVersion.indexOf("Trident/7.0")!= -1)
				$('#carousel_container #carousel_inner').css('width', '472px');
			else {
				$('#carousel_container #carousel_inner').css('width', '475px');
			}
		}
	}
		
	}
	
	if(itemcount === 6) {
		// console.log('Hi dude came into movetabnext 6');
		
		//item_width = (navigator.appVersion.indexOf("Trident/7.0")!= -1) ? (parseInt((ul_width - div_width) / 2) + 6) : parseInt((ul_width - div_width) / 2);
				
		var sort_width = parseInt($('#sort-bar-V2').width());
			// console.log('container width: '+sort_width);
		var actionbar_width = parseInt($('#narrow-search-actionbar').width());
			// console.log('actionbar width: '+actionbar_width);
		var carousel_inner_width = (sort_width - actionbar_width) - 45;
			// console.log('carousel inner width: '+carousel_inner_width);
		var firstli_width = parseInt($('#carousel_container #carousel_inner ul li:first').css('width'));
			// console.log('first li width: '+firstli_width);
		var secondli_width = parseInt($('#carousel_container #carousel_inner ul li:nth-child(2)').css('width'));
			// console.log('second li width: '+secondli_width);
		var thirdli_width = parseInt($('#carousel_container #carousel_inner ul li:nth-child(3)').css('width'));
			// console.log('third li width: '+thirdli_width);
		if(carousel_inner_width > (parseInt(ul_actualwidth) - firstli_width))
			item_width = firstli_width + 6;
		else if(carousel_inner_width > (parseInt(ul_actualwidth) - (firstli_width + secondli_width)))
			item_width = (firstli_width + secondli_width) + 11;
		else
			item_width = (firstli_width + secondli_width + thirdli_width) + 16;
			// console.log('item_width: '+item_width);
		$('#carousel_container #carousel_inner').css('width', carousel_inner_width);	
		
		left_indent = parseInt($('#carousel_inner ul').css('left')) - item_width;
		current_position = parseInt($('#carousel_inner ul').css('left'));
			
		if(current_position >= -162) {
			$('#carousel_container').css('padding-left', '0');
			$('#carousel_container .last').css('display', 'none');
			$('#carousel_container .first').css('display', 'block');
		}
	}

	$('#carousel_inner ul').animate({'left' : left_indent},{queue:true, duration:500},function(){  
    });
}
$('body').click(function(event){
	try{
	if(event.target.className != 'info-classroster-upload vtip'){
       $('#download_template_class_wrapper').hide();
        }
	}catch(e){
		// to do
	}
    });;
(function ($) {
	$.widget("ui.showmore", {
		options: {
			// showAlways: false,
			showMore: '#jqgrid-show-more',
			grid: null,
			gridWrapper: null,
		},
		_init: function () {
			try {
				// console.log('init here');
				this.refreshShowMore();
				this.attachShowMoreBehavior();
				} catch (e) {
				// console.log(e, e.stack);
			}
		},
		refreshShowMore: function() {
			try {
				// console.log('options = ', options);
				// console.log('this options = ', this.options);
				var _grid = $(this.options.grid);
				var _showMore = $(this.options.showMore);
				// var _showMoreWrapper = $(this.options.showMore).parent();
				var maxRec = _grid.getGridParam("rowNum");
				var actRec = _grid.getGridParam("reccount");
				// console.log('maxRec = ', maxRec, 'actRec = ', actRec, _grid.getGridParam("rowNum"));
				if (maxRec > actRec) {
					_showMore.hide();
				} else {
					_showMore.show();
				}
				_grid.find('tr.ui-widget-content.ui-widget-content-last-row').removeClass('ui-widget-content-last-row');
				_grid.find('tr.ui-widget-content').filter(":last").addClass('ui-widget-content-last-row');
			} catch(e) {
				// console.log(e, e.stack);
			}
		},
		attachShowMoreBehavior: function() {
			try {
				// console.log('attachShowMoreBehavior');
				var sm = this;
				var _showMore = $(this.options.showMore);
				if(_showMore.hasClass('show-more-attached') == false) {
					_showMore.bind('click', function () {
						sm.showMoreData();
					})
					/* .bind('click', function () {
						console.log('test log here');
					}) */
					.addClass('show-more-attached');

				}
			} catch(e) {
				// console.log(e, e.stack);
			}
		},
		showMoreData: function() {
			try {
				// console.log('showMoreData called');
				var obj = this;
				var _grid = $(this.options.grid);
				var _gridWrapper = $(this.options.gridWrapper);
				//return if there is already an ajax request in progress leave doing nothing
				//or return if there are no data to show more
				// console.log('showMoreData', this, this.options, _grid, _gridWrapper);
				// console.log('isAjax', grid.data('isAjax'), 'reccount', grid.getGridParam("reccount"), 'totalrecords', grid.data('totalrecords'));
				// if(grid.data('isAjax') || (grid.getGridParam("reccount") >= _grid.data('totalrecords')) || obj.showAlways) {
				if(_grid.data('isAjax')) {
					return;
				}
				var showMore = $(this.options.showMore);
				var obj = this;
				// options.obj = obj;
				var option = {
					beforeSend: function() {
						// showMore.hide();
						obj.createLoader(_gridWrapper.attr('id'));
						_gridWrapper.find('.loadercontent').css({
							'display': 'table'
						})
						.find('div:not(.loaderimg)').css({'display': 'table-cell', 'vertical-align': 'bottom'})
						.find('td').attr('valign', 'bottom');
						_grid.data('isAjax', true);
					},
					onComplete: function() {
						try {
							_grid.data('isAjax', false);
							obj.destroyLoader(_gridWrapper.attr('id'));
						} catch(e) {
							// console.log(e, e.stack);
						}
					},
					onSuccess: function() {
						// _grid.data('isAjax', false);
					},
					onError: function() {
						// _grid.data('isAjax', false);
						// obj.destroyLoader(_gridWrapper.attr('id'));
					},
					noData: function() {
						// _grid.data('isAjax', false);
						// obj.destroyLoader(_gridWrapper.attr('id'));
						showMore.hide();
						obj.refreshShowMoreDataOnScroll(false);
					},
					beforeAppend: function () {
						// console.log('beforeAppend', _grid.find('tr.ui-widget-content').filter(":last"));
						_grid.find('tr.ui-widget-content').filter(":last").removeClass('ui-widget-content-last-row');
					},
					afterAppend: function (data, count) {
						// console.log(_grid.getGridParam("rowNum"), count);
						if(_grid.getGridParam("rowNum") <= count) {
							showMore.show();
						} else {
							showMore.hide();
							obj.refreshShowMoreDataOnScroll(false);
						}
						// console.log(_grid.find('tr.ui-widget-content').filter(":last"));
						_grid.find('tr.ui-widget-content').filter(":last").addClass('ui-widget-content-last-row');
						// obj.destroyLoader(_gridWrapper.attr('id'));
					},

				};
				//append data to existing result set
				_grid.jqGrid('appendDataToGrid', option);
				obj.refreshShowMoreDataOnScroll(true);
				obj.attachMouseLeaveHandler();
			} catch(e) {
				 // window.console.log(e, e.stack);
			}
		},
		refreshShowMoreDataOnScroll: function(attach) {
			try {
				var obj = this;
				// console.log('refreshShowMoreDataOnScroll ', attach);
				if(attach) {
					if($(window).hasClass('scroll-showmore-attached') == false) {
						$(window).bind('scroll.showmore mousewheel.showmore', function(e) {
							if (typeof lastScrollTop == 'undefined' || lastScrollTop == null) {
								lastScrollTop = $(this).scrollTop();
							} else {
								var st = $(this).scrollTop();
								if (st > lastScrollTop) {
									// downscroll code
									// console.log('scroll Down');
									obj.showMoreDataOnScroll();
								}
								/* else {
									// upscroll code
									// console.log('scroll Up');
								} */
								lastScrollTop = st;
							}
						});
						$(window).addClass('scroll-showmore-attached');
					}
				} else {
					$(window).unbind('scroll.showmore')
					.unbind('mousewheel.showmore')
					.removeClass('scroll-showmore-attached');
					lastScrollTop = null;
				}
			} catch(e) {
				// window.console.log(e, e.stack);
			}
		},
		attachMouseLeaveHandler: function() {
			try {
				var obj = this;
				var _grid = $(this.options.grid);
				var _gridWrapper = $(this.options.gridWrapper);
				if(!_grid.hasClass('mouseleave-showmore-attached')) {
					$(_grid).bind('mouseleave.showmore', function(event) {
						// console.log('target-',$(event.target));
						// console.log('relatedTarget-',$(event.relatedTarget));
						// console.log('relatedTarget-',$(event.target));
						// window.console.log('mouseleave called');
						var comingfrom = event.toElement || event.relatedTarget;
						var isVtip = ($(comingfrom).attr('id') == 'vtip' || $(comingfrom).attr('id') == 'vtipArrow');
						if(!isVtip && $(comingfrom).parents('#'+_gridWrapper.attr('id')).length == 0) {
							obj.refreshShowMoreDataOnScroll(false);
							// $(_grid).unbind('mouseleave.showmore');
						}
					})
					.addClass('mouseleave-showmore-attached');
				}
			} catch(e) {
				// console.log(e, e.stack);
			}
		},
		showMoreDataOnScroll: function(event) {
			try {
				// var obj = event.data.obj;
				// console.log('showMoreDataOnScroll called');
				var obj = this;
				var grid = $(this.options.grid);
				if (grid.is(':hover')) {
				// console.log('showMoreDataOnScroll called hover true');
					// if(grid.getGridParam("reccount") < grid.data('totalrecords')) {
						obj.showMoreData();
						// console.log('showMoreDataOnScroll showMoreData called');
					// }
				}
			} catch(e) {
				// window.console.log(e, e.stack);
			}
		},
	});
	$.extend($.ui.showmore.prototype,EXPERTUS_SMARTPORTAL_AbstractManager, EXPERTUS_SMARTPORTAL_AbstractDetailsWidget,{defaults:{start:true,catStart:true}});
})(jQuery);;
(function($){
	$.fn.qtipPopup = function(qtipObj){ // convert to json
		try{
			var ptype = qtipObj.postype;
			if(ptype.indexOf('custom') != -1)
				$(this).qtipCustomLeft(qtipObj);
			else{
				var theme = Drupal.settings.ajaxPageState.theme;
				var qwid = qtipObj.wid;	
				var mlwid = qtipObj.poslwid;
				var mrwid = qtipObj.posrwid;
				var qheg = qtipObj.heg;
				var popupDispId = qtipObj.popupDispId;
				var onClsFn = qtipObj.onClsFn;
				var entId = qtipObj.entityId;
				var disp = qtipObj.disp;
				var lId = qtipObj.linkid;
				var dispDown= qtipObj.dispDown;
				var posmin;
			var setTop=qtipObj.top;
				var catalogVisibleId = qtipObj.catalogVisibleId;	
			var beforeShow = qtipObj.beforeShow;
			var afterShow = qtipObj.afterShow;
			var afterPosition = qtipObj.afterPosition;
			
				setTimeout(function(){
					var lheg = $('#'+lId).height();
					var lwid = $('#'+lId).width();
					
					var popoff = $('#'+lId).offset();
					var lpos = $('#'+lId).position();
				var tcls = (((popoff.top - qheg) >= (qheg/2) || disp=='ctool') && dispDown !='Y') ? 'bottom-qtip-tip-visible' : 'bottom-qtip-tip-up-visible';
					
				$(this).qtipPopupShow(popupDispId,tcls,qwid,qheg,entId,onClsFn,qtipObj); // pop up
					
					var theg = $('.' + tcls).height();
					var twid = $('.' + tcls).width();
					var llwid = lwid / 2;
					var tpos = lpos.top + (lheg + theg - 12);
					var orgtpos = $('.'+tcls).position();
				if (setTop === undefined || setTop === null) 
					var ttop = (((popoff.top-qheg) >= (qheg/2) || disp=='ctool') && dispDown !='Y') ? (lpos.top-lheg) : (lpos.top + lheg);
				else
					var ttop =setTop;
					var z = lpos.left + (parseInt(llwid) - (twid / 2));
					
					$(this).tipPositioning(tcls,ttop,z,popupDispId); 
					if(popupDispId.indexOf("qtip_owner_disp") === 0)
					{
						if($("div[id^='qtip_owner_disp']").find("span[class='qtip-popup-visible']").length > 0)
						{
							$("div[id^='qtip_owner_disp']").find("span[class='qtip-popup-visible']").addClass("qtip-popup-visible_for_ie");
						}
					}
					
					if(theme == 'expertusoneV2'){
						var isAtLeastIE11 = !!(navigator.userAgent.match(/Trident/) && !navigator.userAgent.match(/MSIE/))? true : false;
						if(catalogVisibleId =='enrolled-all-exempted-disp' || catalogVisibleId == 'qtipAttachIdqtip_exempted_disp_all' || catalogVisibleId == 'qtipAttachIdqtip_exempted_single_disp'){
							posmin = $(this).qtipExemptedPosition(catalogVisibleId);
						}else{
							if($.browser.msie && $.browser.version == 10) 
								posmin = 8;
							else if($.browser.msie && $.browser.version == 11) 
								posmin = 8;
							else if($.browser.msie && $.browser.version == 9) 
								posmin = 8;
							else if($.browser.msie && $.browser.version == 8)
								posmin = 8;
							else if(navigator.userAgent.indexOf("Chrome")>0) 
								posmin = 8;
							else
								posmin = 8;
						}
					}
					//var posmin = (Drupal.settings.ajaxPageState.theme == 'expertusone') ? 13 : 8;
					
					var lps = (lpos.top == 0 ) ? lpos.top : lpos.top-lheg;
					
				    if(lId.indexOf("widget-share-")==0 )
					  lps = (parseInt(lpos.top) == 0 ) ? lpos.top : lpos.top-lheg; 
			       
			        var ppos = (((popoff.top-qheg) >= (qheg/2) || disp=='ctool') && dispDown !='Y') ? (lps+theg-posmin) : tpos;
					var post = (((popoff.top-qheg) >= (qheg/2) || disp=='ctool') && dispDown !='Y') ? 'bottom' : 'top';
					if(ptype == 'middle'){
						try{
							$(this).qtipMiddle(ppos,qwid,orgtpos,mlwid,mrwid,llwid,twid,lpos,popupDispId,entId,post); //Middle
							
						}catch(e){
							alert(e);
						}
					}else if(ptype == 'bottomleft' || ptype == 'topleft'){
						try{
							$(this).qtipLeft(ppos,qwid,orgtpos,mlwid,llwid,twid,lpos,popupDispId,entId,post); //left
						}catch(e){
							alert(e);
						}
					}else if(ptype == 'bottomright' || ptype == 'topright'){
						try{
							$(this).qtipRight(ppos,qwid,orgtpos,mlwid,llwid,twid,lpos,popupDispId,entId,post); //right
						}catch(e){
							alert(e);
						}
					}

					if(qtipObj.afterPosition !== undefined) {
						qtipObj.afterPosition.call();
					}
				},10)
			}
		}catch(e){
			//alert(e);
		}

	};
	
	$.fn.qtipPopupShow = function(popupDispId,tcls,qwid,qheg,entId,onClsFn,qtipObj){
		try{
			var bpTop = '<div class="'+tcls+'"></div> <table cellspacing="0" cellpadding="0" style="z-index:100;" height="'+qheg+'px" width="'+qwid+'px" id="bubble-face-table"> <tbody><tr><td class="bubble-tl"></td><td class="bubble-t"></td><td class="bubble-tr"><a id="admin-bubble-close" class="qtip-close-button-visible" onclick="closeQtip(\''+popupDispId+'\',\''+entId+'\','+onClsFn+');"></a></td></tr><tr><td class="bubble-cl"></td><td valign="top" class="bubble-c">';
			var bpBot = '</td><td class="bubble-cr"></td></tr><tr><td class="bubble-bl"></td><td class="bubble-b-visible"></td><td class="bubble-br"></td></tr></tbody></table>';
			var paintHtml = bpTop+"<div id='paintContentVisiblePopup'><div id='show_expertus_message'></div><div id='paintContent"+popupDispId+"'></div></div>"+bpBot;
			$('#'+popupDispId+' #visible-popup-'+entId).html(paintHtml);
			if(qtipObj.beforeShow !== undefined) {
				qtipObj.beforeShow.call();
			}
			$('#'+popupDispId+' #visible-popup-'+entId).show();
			if(qtipObj.afterShow !== undefined) {
				qtipObj.afterShow.call();
			}
		}catch(e){
			alert(e);
		}
	};
	
	$.fn.tipPositioning = function(tcls,ttop,z,popupDispId){
		try{
			$('#'+popupDispId+' .' + tcls).css('position', 'absolute').css('top', ttop+'px').css('left', z+'px');
		}catch(e){
			alert(e);
		}
	};
	
	$.fn.qtipMiddle = function(ppos,qwid,orgtpos,mlwid,mrwid,llwid,twid,lpos,popupDispId,entId,post){
		try{
			var tipleft = 0;
			var qpos = (qwid-40)/3;
			if(mlwid == '' && mrwid == ''){
				var m = qpos/3;
				var qm = m/2;
				tipleft = qpos + parseInt(m) + parseInt(qm) - (llwid - (twid / 2));
			}else{
				if(mlwid !=''){
					tipleft = qpos + parseInt(mlwid);
				}else{
					tipleft = qpos - mrwid;
				}
			}
			var tleft = orgtpos.left - tipleft + lpos.left;
			if(post == 'bottom')
				$('#'+popupDispId+' #visible-popup-'+entId+' #bubble-face-table').css('position','absolute').css('bottom',ppos+'px').css('left',tleft+'px');
			else
				$('#'+popupDispId+' #visible-popup-'+entId+' #bubble-face-table').css('position','absolute').css('top',ppos+'px').css('left',tleft+'px');
			
		}catch(e){
			alert(e);
		}
		
	};
	
	$.fn.qtipLeft = function(ppos,qwid,orgtpos,mlwid,llwid,twid,lpos,popupDispId,entId,post){
		try{
		//alert(ppos);
			var tipleft = 0;
			var qpos = (qwid-40)/3;
			if(mlwid == ''){
				var m = qpos/3;
				var qm = m/2;
				tipleft =  (m) + (qm) - (llwid - (twid / 2));
			}else{
				tipleft1 = mlwid;
				if(tipleft1 > 0){
					tipleft = tipleft1;//(llwid + (twid / 2)) - mwid;
				}
			}
			
			var tleft = orgtpos.left - tipleft + lpos.left;
			if(post == 'bottom')
				$('#'+popupDispId+' #visible-popup-'+entId+' #bubble-face-table').css('position','absolute').css('bottom',ppos+'px').css('left',tleft+'px');
			else
				$('#'+popupDispId+' #visible-popup-'+entId+' #bubble-face-table').css('position','absolute').css('top',ppos+'px').css('left',tleft+'px');
		}catch(e){
			alert(e);
		}
	};
	
	$.fn.qtipRight = function(ppos,qwid,orgtpos,mlwid,llwid,twid,lpos,popupDispId,entId,post){
		try{
			var tipleft = 0;
			var qpos = (qwid-40)/3;
			if(mlwid == ''){
				var m = qpos/3;
				var qm = m/2;
				tipleft = (qpos*2) + parseInt(m) + parseInt(qm) - (llwid - (twid / 2));
			}else{
				var d = (qpos*2);
				var balpos = qwid - (llwid + (twid / 2) +10);
				tipleft1 = d + parseInt(mlwid);
				if(tipleft1 > balpos){
					tipleft = (llwid + (twid / 2)) + d;
				}else{
					tipleft = tipleft1;
				}
			}
			var tleft = orgtpos.left - tipleft -10 + lpos.left;
			if(post == 'bottom')
				$('#'+popupDispId+' #visible-popup-'+entId+' #bubble-face-table').css('position','absolute').css('bottom',ppos+'px').css('left',tleft+'px');
			else
				$('#'+popupDispId+' #visible-popup-'+entId+' #bubble-face-table').css('position','absolute').css('top',ppos+'px').css('left',tleft+'px');
		}catch(e){
			alert(e);
		}
	};
	
	

	$.fn.qtipExemptedPosition =  function(catalogVisibleId) {
		try {
			var isAtLeastIE11 = !!(navigator.userAgent.match(/Trident/) && !navigator.userAgent.match(/MSIE/))? true : false;
			if(catalogVisibleId=='enrolled-all-exempted-disp'){
				if($.browser.msie && $.browser.version == 10) 
					posmin = 32;
				else if(isAtLeastIE11) 
					posmin = 32;
				else if($.browser.msie && $.browser.version == 9) 
					posmin = 12;
				else if(navigator.userAgent.indexOf("Chrome")>0) 
					posmin = 32;
				else
					posmin = 8;	
			}else if(catalogVisibleId=='qtipAttachIdqtip_exempted_single_disp'){
				if($.browser.msie && $.browser.version == 10) {
					posmin = 18;
				}
				else if(isAtLeastIE11) 
					posmin = 18;
				else if($.browser.msie && $.browser.version == 9) 
					posmin = 18;
				else
					posmin = 15;
			}else if(catalogVisibleId == 'qtipAttachIdqtip_exempted_disp_all'){
				if($.browser.msie && $.browser.version == 10) 
					posmin = 21;
				else if(isAtLeastIE11) 
					posmin = 21;
				else if($.browser.msie && $.browser.version == 9) 
					posmin = 8;
				else
					posmin = 21;
			}
			return posmin;
		}catch(e){
			alert(e);
		}
	};
	$.fn.qtipCustomLeft = function(qtipObj){
		try{
			// Collect qtipObj values
			var theme = Drupal.settings.ajaxPageState.theme;
			var qwid = qtipObj.wid;	
			var mlwid = qtipObj.poslwid;
			var mrwid = qtipObj.posrwid;
			var qheg = qtipObj.heg;
			var popupDispId = qtipObj.popupDispId;
			var onClsFn = qtipObj.onClsFn;
			var entId = qtipObj.entityId;
			var disp = qtipObj.disp;
			var lId = qtipObj.linkid;
			var dispRight= qtipObj.dispDown;
			var posmin;
			var catalogVisibleId = qtipObj.catalogVisibleId;
			var psubtype = qtipObj.possubtype;
			setTimeout(function(){
				psubtype = (psubtype==null || psubtype == undefined )?'middleLeft':psubtype;
				// Get positions of the triggering link
				var lpos = $('#'+lId).position();
				var lheg = $('#'+lId).height();
				var lwid = $('#'+lId).width();
				var popoff = $('#'+lId).offset();
				
				//Class name of the qtip
				var tcls = 'qtip-tip-point-right';
				// Show qtip popup
				$(this).qtipPopupShow(popupDispId,tcls,qwid,qheg,entId,onClsFn,qtipObj);
				
				// Get qtip positions
				var theg = $('.' + tcls).height();
				var twid = $('.' + tcls).width();

				//Calculate tip Position
				var tipTop = parseInt(theg/2) - 20;  //since tip height is 40
				var tipRight = parseInt(twid/2) - twid;
				
				// Position the tip
				$('.' + tcls).css('top',tipTop+'px').css('left',tipRight+'px');
				
				//Calculate popup possisions
				var tlcpos = $('.'+tcls).position();
				var left = tlcpos.left-qwid+20;
				var ppos = (lpos.top == 0) ? lpos.top : theg+(theg/2)-qheg;
				
				if(psubtype == 'middleLeft'){
					ppos = parseInt(qheg/2)-(theg/2)+10;
					left = tlcpos.left-qwid+20;
				}else if(psubtype == 'bottomleft' || psubtype == 'topleft'){
					
				}else if(psubtype == 'bottomright' || psubtype == 'topright'){
					
				}
				$('#'+popupDispId+' #visible-popup-'+entId+' #bubble-face-table').css('position','absolute').css('top','-'+ppos+'px').css('left',left+'px');
			},10)
		}catch(e){
			alert(e);
		}
	};
	
})(jQuery);


;
/**
 * Intro.js v2.5.0
 * https://github.com/usablica/intro.js
 *
 * Copyright (C) 2016 Afshin Mehrabani (@afshinmeh)
 */

(function (root, factory) {
  if (typeof exports === 'object') {
    // CommonJS
    factory(exports);
  } else if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['exports'], factory);
  } else {
    // Browser globals
    factory(root);
  }
} (this, function (exports) {
  //Default config/variables
  var VERSION = '2.5.0';

  /**
   * IntroJs main class
   *
   * @class IntroJs
   */
  function IntroJs(obj) {
    this._targetElement = obj;
    this._introItems = [];

    this._options = {
      /* Next button label in tooltip box */
      nextLabel: 'Next &rarr;',
      /* Previous button label in tooltip box */
      prevLabel: '&larr; Back',
      /* Skip button label in tooltip box */
      skipLabel: 'Skip',
      /* Done button label in tooltip box */
      doneLabel: 'Done',
      /* Hide previous button in the first step? Otherwise, it will be disabled button. */
      hidePrev: false,
      /* Hide next button in the last step? Otherwise, it will be disabled button. */
      hideNext: false,
      /* Default tooltip box position */
      tooltipPosition: 'bottom',
      /* Next CSS class for tooltip boxes */
      tooltipClass: '',
      /* CSS class that is added to the helperLayer */
      highlightClass: '',
      /* Close introduction when pressing Escape button? */
      exitOnEsc: true,
      /* Close introduction when clicking on overlay layer? */
      exitOnOverlayClick: true,
      /* Show step numbers in introduction? */
      showStepNumbers: true,
      /* Let user use keyboard to navigate the tour? */
      keyboardNavigation: true,
      /* Show tour control buttons? */
      showButtons: true,
      /* Show tour bullets? */
      showBullets: true,
      /* Show tour progress? */
      showProgress: false,
      /* Scroll to highlighted element? */
      scrollToElement: true,
      /* Set the overlay opacity */
      overlayOpacity: 0.8,
      /* Padding to add after scrolling when element is not in the viewport (in pixels) */
      scrollPadding: 30,
      /* Precedence of positions, when auto is enabled */
      positionPrecedence: ["bottom", "top", "right", "left"],
      /* Disable an interaction with element? */
      disableInteraction: false,
      /* Default hint position */
      hintPosition: 'top-middle',
      /* Hint button label */
      hintButtonLabel: 'Got it',
      /* Adding animation to hints? */
      hintAnimation: true
    };
  }

  /**
   * Initiate a new introduction/guide from an element in the page
   *
   * @api private
   * @method _introForElement
   * @param {Object} targetElm
   * @returns {Boolean} Success or not?
   */
  function _introForElement(targetElm) {
    var introItems = [],
        self = this;

    if (this._options.steps) {
      //use steps passed programmatically
      for (var i = 0, stepsLength = this._options.steps.length; i < stepsLength; i++) {
        var currentItem = _cloneObject(this._options.steps[i]);
        //set the step
        currentItem.step = introItems.length + 1;
        //use querySelector function only when developer used CSS selector
        if (typeof(currentItem.element) === 'string') {
          //grab the element with given selector from the page
          currentItem.element = document.querySelector(currentItem.element);
        }

        //intro without element
        if (typeof(currentItem.element) === 'undefined' || currentItem.element == null) {
          var floatingElementQuery = document.querySelector(".introjsFloatingElement");

          if (floatingElementQuery == null) {
            floatingElementQuery = document.createElement('div');
            floatingElementQuery.className = 'introjsFloatingElement';

            document.body.appendChild(floatingElementQuery);
          }

          currentItem.element  = floatingElementQuery;
          currentItem.position = 'floating';
        }

        if (currentItem.element != null) {
          introItems.push(currentItem);
        }
      }

    } else {
      //use steps from data-* annotations
      var allIntroSteps = targetElm.querySelectorAll('*[data-intro]');
      //if there's no element to intro
      if (allIntroSteps.length < 1) {
        return false;
      }

      //first add intro items with data-step
      for (var i = 0, elmsLength = allIntroSteps.length; i < elmsLength; i++) {
        var currentElement = allIntroSteps[i];

        // skip hidden elements
        if (currentElement.style.display == 'none') {
          continue;
        }

        var step = parseInt(currentElement.getAttribute('data-step'), 10);

        if (step > 0) {
          introItems[step - 1] = {
            element: currentElement,
            intro: currentElement.getAttribute('data-intro'),
            step: parseInt(currentElement.getAttribute('data-step'), 10),
            tooltipClass: currentElement.getAttribute('data-tooltipClass'),
            highlightClass: currentElement.getAttribute('data-highlightClass'),
            position: currentElement.getAttribute('data-position') || this._options.tooltipPosition
          };
        }
      }

      //next add intro items without data-step
      //todo: we need a cleanup here, two loops are redundant
      var nextStep = 0;
      for (var i = 0, elmsLength = allIntroSteps.length; i < elmsLength; i++) {
        var currentElement = allIntroSteps[i];

        if (currentElement.getAttribute('data-step') == null) {

          while (true) {
            if (typeof introItems[nextStep] == 'undefined') {
              break;
            } else {
              nextStep++;
            }
          }

          introItems[nextStep] = {
            element: currentElement,
            intro: currentElement.getAttribute('data-intro'),
            step: nextStep + 1,
            tooltipClass: currentElement.getAttribute('data-tooltipClass'),
            highlightClass: currentElement.getAttribute('data-highlightClass'),
            position: currentElement.getAttribute('data-position') || this._options.tooltipPosition
          };
        }
      }
    }

    //removing undefined/null elements
    var tempIntroItems = [];
    for (var z = 0; z < introItems.length; z++) {
      introItems[z] && tempIntroItems.push(introItems[z]);  // copy non-empty values to the end of the array
    }

    introItems = tempIntroItems;

    //Ok, sort all items with given steps
    introItems.sort(function (a, b) {
      return a.step - b.step;
    });

    //set it to the introJs object
    self._introItems = introItems;

    //add overlay layer to the page
    if(_addOverlayLayer.call(self, targetElm)) {
      //then, start the show
      _nextStep.call(self);

      var skipButton     = targetElm.querySelector('.introjs-skipbutton'),
          nextStepButton = targetElm.querySelector('.introjs-nextbutton');

      self._onKeyDown = function(e) {
        if (e.keyCode === 27 && self._options.exitOnEsc == true) {
          //escape key pressed, exit the intro
          //check if exit callback is defined
          _exitIntro.call(self, targetElm);
        } else if(e.keyCode === 37) {
          //left arrow
          _previousStep.call(self);
        } else if (e.keyCode === 39) {
          //right arrow
          _nextStep.call(self);
        } else if (e.keyCode === 13) {
          //srcElement === ie
          var target = e.target || e.srcElement;
          if (target && target.className.indexOf('introjs-prevbutton') > 0) {
            //user hit enter while focusing on previous button
            _previousStep.call(self);
          } else if (target && target.className.indexOf('introjs-skipbutton') > 0) {
            //user hit enter while focusing on skip button
            if (self._introItems.length - 1 == self._currentStep && typeof (self._introCompleteCallback) === 'function') {
                self._introCompleteCallback.call(self);
            }

            _exitIntro.call(self, targetElm);
          } else {
            //default behavior for responding to enter
            _nextStep.call(self);
          }

          //prevent default behaviour on hitting Enter, to prevent steps being skipped in some browsers
          if(e.preventDefault) {
            e.preventDefault();
          } else {
            e.returnValue = false;
          }
        }
      };

      self._onResize = function(e) {
        _setHelperLayerPosition.call(self, document.querySelector('.introjs-helperLayer'));
        _setHelperLayerPosition.call(self, document.querySelector('.introjs-tooltipReferenceLayer'));
      };

      if (window.addEventListener) {
        if (this._options.keyboardNavigation) {
          window.addEventListener('keydown', self._onKeyDown, true);
        }
        //for window resize
        window.addEventListener('resize', self._onResize, true);
      } else if (document.attachEvent) { //IE
        if (this._options.keyboardNavigation) {
          document.attachEvent('onkeydown', self._onKeyDown);
        }
        //for window resize
        document.attachEvent('onresize', self._onResize);
      }
    }
    return false;
  }

 /*
   * makes a copy of the object
   * @api private
   * @method _cloneObject
  */
  function _cloneObject(object) {
      if (object == null || typeof (object) != 'object' || typeof (object.nodeType) != 'undefined') {
        return object;
      }
      var temp = {};
      for (var key in object) {
        if (typeof (jQuery) != 'undefined' && object[key] instanceof jQuery) {
          temp[key] = object[key];
        } else {
          temp[key] = _cloneObject(object[key]);
        }
      }
      return temp;
  }
  /**
   * Go to specific step of introduction
   *
   * @api private
   * @method _goToStep
   */
  function _goToStep(step) {
    //because steps starts with zero
    this._currentStep = step - 2;
    if (typeof (this._introItems) !== 'undefined') {
      _nextStep.call(this);
    }
  }

  /**
   * Go to the specific step of introduction with the explicit [data-step] number
   *
   * @api private
   * @method _goToStepNumber
   */
  function _goToStepNumber(step) {
    this._currentStepNumber = step;
    if (typeof (this._introItems) !== 'undefined') {
      _nextStep.call(this);
    }
  }

  /**
   * Go to next step on intro
   *
   * @api private
   * @method _nextStep
   */
  function _nextStep() {
    this._direction = 'forward';

    if (typeof (this._currentStepNumber) !== 'undefined') {
        for( var i = 0, len = this._introItems.length; i < len; i++ ) {
            var item = this._introItems[i];
            if( item.step === this._currentStepNumber ) {
                this._currentStep = i - 1;
                this._currentStepNumber = undefined;
            }
        }
    }

    if (typeof (this._currentStep) === 'undefined') {
      this._currentStep = 0;
    } else {
      ++this._currentStep;
    }

    if ((this._introItems.length) <= this._currentStep) {
      //end of the intro
      //check if any callback is defined
      if (typeof (this._introCompleteCallback) === 'function') {
        this._introCompleteCallback.call(this);
      }
      _exitIntro.call(this, this._targetElement);
      return;
    }

    var nextStep = this._introItems[this._currentStep];
    if (typeof (this._introBeforeChangeCallback) !== 'undefined') {
      this._introBeforeChangeCallback.call(this, nextStep.element);
    }

    _showElement.call(this, nextStep);
  }

  /**
   * Go to previous step on intro
   *
   * @api private
   * @method _previousStep
   */
  function _previousStep() {
    this._direction = 'backward';

    if (this._currentStep === 0) {
      return false;
    }

    var nextStep = this._introItems[--this._currentStep];
    if (typeof (this._introBeforeChangeCallback) !== 'undefined') {
      this._introBeforeChangeCallback.call(this, nextStep.element);
    }

    _showElement.call(this, nextStep);
  }

  /**
   * Exit from intro
   *
   * @api private
   * @method _exitIntro
   * @param {Object} targetElement
   */
  function _exitIntro(targetElement) {
    //remove overlay layers from the page
    var overlayLayers = targetElement.querySelectorAll('.introjs-overlay');

    if (overlayLayers && overlayLayers.length > 0) {
      for (var i = overlayLayers.length - 1; i >= 0; i--) {
        //for fade-out animation
        var overlayLayer = overlayLayers[i];
        overlayLayer.style.opacity = 0;
        setTimeout(function () {
          if (this.parentNode) {
            this.parentNode.removeChild(this);
          }
        }.bind(overlayLayer), 500);
      };
    }

    //remove all helper layers
    var helperLayer = targetElement.querySelector('.introjs-helperLayer');
    if (helperLayer) {
      helperLayer.parentNode.removeChild(helperLayer);
    }

    var referenceLayer = targetElement.querySelector('.introjs-tooltipReferenceLayer');
    if (referenceLayer) {
      referenceLayer.parentNode.removeChild(referenceLayer);
    }
    //remove disableInteractionLayer
    var disableInteractionLayer = targetElement.querySelector('.introjs-disableInteraction');
    if (disableInteractionLayer) {
      disableInteractionLayer.parentNode.removeChild(disableInteractionLayer);
    }

    //remove intro floating element
    var floatingElement = document.querySelector('.introjsFloatingElement');
    if (floatingElement) {
      floatingElement.parentNode.removeChild(floatingElement);
    }

    _removeShowElement();

    //remove `introjs-fixParent` class from the elements
    var fixParents = document.querySelectorAll('.introjs-fixParent');
    if (fixParents && fixParents.length > 0) {
      for (var i = fixParents.length - 1; i >= 0; i--) {
        fixParents[i].className = fixParents[i].className.replace(/introjs-fixParent/g, '').replace(/^\s+|\s+$/g, '');
      }
    }

    //clean listeners
    if (window.removeEventListener) {
      window.removeEventListener('keydown', this._onKeyDown, true);
    } else if (document.detachEvent) { //IE
      document.detachEvent('onkeydown', this._onKeyDown);
    }

    //check if any callback is defined
    if (this._introExitCallback != undefined) {
      this._introExitCallback.call(self);
    }

    //set the step to zero
    this._currentStep = undefined;
  }

  /**
   * Render tooltip box in the page
   *
   * @api private
   * @method _placeTooltip
   * @param {HTMLElement} targetElement
   * @param {HTMLElement} tooltipLayer
   * @param {HTMLElement} arrowLayer
   * @param {HTMLElement} helperNumberLayer
   * @param {Boolean} hintMode
   */
  function _placeTooltip(targetElement, tooltipLayer, arrowLayer, helperNumberLayer, hintMode) {
    var tooltipCssClass = '',
        currentStepObj,
        tooltipOffset,
        targetOffset,
        windowSize,
        currentTooltipPosition;

    hintMode = hintMode || false;

    //reset the old style
    tooltipLayer.style.top        = null;
    tooltipLayer.style.right      = null;
    tooltipLayer.style.bottom     = null;
    tooltipLayer.style.left       = null;
    tooltipLayer.style.marginLeft = null;
    tooltipLayer.style.marginTop  = null;

    arrowLayer.style.display = 'inherit';

    if (typeof(helperNumberLayer) != 'undefined' && helperNumberLayer != null) {
      helperNumberLayer.style.top  = null;
      helperNumberLayer.style.left = null;
    }

    //prevent error when `this._currentStep` is undefined
    if (!this._introItems[this._currentStep]) return;

    //if we have a custom css class for each step
    currentStepObj = this._introItems[this._currentStep];
    if (typeof (currentStepObj.tooltipClass) === 'string') {
      tooltipCssClass = currentStepObj.tooltipClass;
    } else {
      tooltipCssClass = this._options.tooltipClass;
    }

    tooltipLayer.className = ('introjs-tooltip ' + tooltipCssClass).replace(/^\s+|\s+$/g, '');

    currentTooltipPosition = this._introItems[this._currentStep].position;
    if ((currentTooltipPosition == "auto" || this._options.tooltipPosition == "auto")) {
      if (currentTooltipPosition != "floating") { // Floating is always valid, no point in calculating
        currentTooltipPosition = _determineAutoPosition.call(this, targetElement, tooltipLayer, currentTooltipPosition);
      }
    }
    targetOffset  = _getOffset(targetElement);
    tooltipOffset = _getOffset(tooltipLayer);
    windowSize    = _getWinSize();

    switch (currentTooltipPosition) {
      case 'top':
        arrowLayer.className = 'introjs-arrow bottom';

        if (hintMode) {
          var tooltipLayerStyleLeft = 0;
        } else {
          var tooltipLayerStyleLeft = 15;
        }

        _checkRight(targetOffset, tooltipLayerStyleLeft, tooltipOffset, windowSize, tooltipLayer);
        tooltipLayer.style.bottom = (targetOffset.height +  20) + 'px';
        break;
      case 'right':
        tooltipLayer.style.left = (targetOffset.width + 20) + 'px';
        if (targetOffset.top + tooltipOffset.height > windowSize.height) {
          // In this case, right would have fallen below the bottom of the screen.
          // Modify so that the bottom of the tooltip connects with the target
          arrowLayer.className = "introjs-arrow left-bottom";
          tooltipLayer.style.top = "-" + (tooltipOffset.height - targetOffset.height - 20) + "px";
        } else {
          arrowLayer.className = 'introjs-arrow left';
        }
        break;
      case 'left':
        if (!hintMode && this._options.showStepNumbers == true) {
          tooltipLayer.style.top = '15px';
        }

        if (targetOffset.top + tooltipOffset.height > windowSize.height) {
          // In this case, left would have fallen below the bottom of the screen.
          // Modify so that the bottom of the tooltip connects with the target
          tooltipLayer.style.top = "-" + (tooltipOffset.height - targetOffset.height - 20) + "px";
          arrowLayer.className = 'introjs-arrow right-bottom';
        } else {
          arrowLayer.className = 'introjs-arrow right';
        }
        tooltipLayer.style.right = (targetOffset.width + 20) + 'px';

        break;
      case 'floating':
        arrowLayer.style.display = 'none';

        //we have to adjust the top and left of layer manually for intro items without element
        tooltipLayer.style.left   = '50%';
        tooltipLayer.style.top    = '50%';
        tooltipLayer.style.marginLeft = '-' + (tooltipOffset.width / 2)  + 'px';
        tooltipLayer.style.marginTop  = '-' + (tooltipOffset.height / 2) + 'px';

        if (typeof(helperNumberLayer) != 'undefined' && helperNumberLayer != null) {
          helperNumberLayer.style.left = '-' + ((tooltipOffset.width / 2) + 18) + 'px';
          helperNumberLayer.style.top  = '-' + ((tooltipOffset.height / 2) + 18) + 'px';
        }

        break;
      case 'bottom-right-aligned':
        arrowLayer.className      = 'introjs-arrow top-right';

        var tooltipLayerStyleRight = 0;
        _checkLeft(targetOffset, tooltipLayerStyleRight, tooltipOffset, tooltipLayer);
        tooltipLayer.style.top    = (targetOffset.height +  20) + 'px';
        break;

      case 'bottom-middle-aligned':
        arrowLayer.className      = 'introjs-arrow top-middle';

        var tooltipLayerStyleLeftRight = targetOffset.width / 2 - tooltipOffset.width / 2;

        // a fix for middle aligned hints
        if (hintMode) {
          tooltipLayerStyleLeftRight += 5;
        }

        if (_checkLeft(targetOffset, tooltipLayerStyleLeftRight, tooltipOffset, tooltipLayer)) {
          tooltipLayer.style.right = null;
          _checkRight(targetOffset, tooltipLayerStyleLeftRight, tooltipOffset, windowSize, tooltipLayer);
        }
        tooltipLayer.style.top = (targetOffset.height + 20) + 'px';
        break;

      case 'bottom-left-aligned':
      // Bottom-left-aligned is the same as the default bottom
      case 'bottom':
      // Bottom going to follow the default behavior
      default:
        arrowLayer.className = 'introjs-arrow top';

        var tooltipLayerStyleLeft = 0;
        _checkRight(targetOffset, tooltipLayerStyleLeft, tooltipOffset, windowSize, tooltipLayer);
        tooltipLayer.style.top    = (targetOffset.height +  20) + 'px';
        break;
    }
  }

  /**
   * Set tooltip left so it doesn't go off the right side of the window
   *
   * @return boolean true, if tooltipLayerStyleLeft is ok.  false, otherwise.
   */
  function _checkRight(targetOffset, tooltipLayerStyleLeft, tooltipOffset, windowSize, tooltipLayer) {
    if (targetOffset.left + tooltipLayerStyleLeft + tooltipOffset.width > windowSize.width) {
      // off the right side of the window
      tooltipLayer.style.left = (windowSize.width - tooltipOffset.width - targetOffset.left) + 'px';
      return false;
    }
    tooltipLayer.style.left = tooltipLayerStyleLeft + 'px';
    return true;
  }

  /**
   * Set tooltip right so it doesn't go off the left side of the window
   *
   * @return boolean true, if tooltipLayerStyleRight is ok.  false, otherwise.
   */
  function _checkLeft(targetOffset, tooltipLayerStyleRight, tooltipOffset, tooltipLayer) {
    if (targetOffset.left + targetOffset.width - tooltipLayerStyleRight - tooltipOffset.width < 0) {
      // off the left side of the window
      tooltipLayer.style.left = (-targetOffset.left) + 'px';
      return false;
    }
    tooltipLayer.style.right = tooltipLayerStyleRight + 'px';
    return true;
  }

  /**
   * Determines the position of the tooltip based on the position precedence and availability
   * of screen space.
   *
   * @param {Object} targetElement
   * @param {Object} tooltipLayer
   * @param {Object} desiredTooltipPosition
   *
   */
  function _determineAutoPosition(targetElement, tooltipLayer, desiredTooltipPosition) {

    // Take a clone of position precedence. These will be the available
    var possiblePositions = this._options.positionPrecedence.slice();

    var windowSize = _getWinSize();
    var tooltipHeight = _getOffset(tooltipLayer).height + 10;
    var tooltipWidth = _getOffset(tooltipLayer).width + 20;
    var targetOffset = _getOffset(targetElement);

    // If we check all the possible areas, and there are no valid places for the tooltip, the element
    // must take up most of the screen real estate. Show the tooltip floating in the middle of the screen.
    var calculatedPosition = "floating";

    // Check if the width of the tooltip + the starting point would spill off the right side of the screen
    // If no, neither bottom or top are valid
    if (targetOffset.left + tooltipWidth > windowSize.width || ((targetOffset.left + (targetOffset.width / 2)) - tooltipWidth) < 0) {
      _removeEntry(possiblePositions, "bottom");
      _removeEntry(possiblePositions, "top");
    } else {
      // Check for space below
      if ((targetOffset.height + targetOffset.top + tooltipHeight) > windowSize.height) {
        _removeEntry(possiblePositions, "bottom");
      }

      // Check for space above
      if (targetOffset.top - tooltipHeight < 0) {
        _removeEntry(possiblePositions, "top");
      }
    }

    // Check for space to the right
    if (targetOffset.width + targetOffset.left + tooltipWidth > windowSize.width) {
      _removeEntry(possiblePositions, "right");
    }

    // Check for space to the left
    if (targetOffset.left - tooltipWidth < 0) {
      _removeEntry(possiblePositions, "left");
    }

    // At this point, our array only has positions that are valid. Pick the first one, as it remains in order
    if (possiblePositions.length > 0) {
      calculatedPosition = possiblePositions[0];
    }

    // If the requested position is in the list, replace our calculated choice with that
    if (desiredTooltipPosition && desiredTooltipPosition != "auto") {
      if (possiblePositions.indexOf(desiredTooltipPosition) > -1) {
        calculatedPosition = desiredTooltipPosition;
      }
    }

    return calculatedPosition;
  }

  /**
   * Remove an entry from a string array if it's there, does nothing if it isn't there.
   *
   * @param {Array} stringArray
   * @param {String} stringToRemove
   */
  function _removeEntry(stringArray, stringToRemove) {
    if (stringArray.indexOf(stringToRemove) > -1) {
      stringArray.splice(stringArray.indexOf(stringToRemove), 1);
    }
  }

  /**
   * Update the position of the helper layer on the screen
   *
   * @api private
   * @method _setHelperLayerPosition
   * @param {Object} helperLayer
   */
  function _setHelperLayerPosition(helperLayer) {
    if (helperLayer) {
      //prevent error when `this._currentStep` in undefined
      if (!this._introItems[this._currentStep]) return;

      var currentElement  = this._introItems[this._currentStep],
          elementPosition = _getOffset(currentElement.element),
          widthHeightPadding = 10;

      // If the target element is fixed, the tooltip should be fixed as well.
      // Otherwise, remove a fixed class that may be left over from the previous
      // step.
      if (_isFixed(currentElement.element)) {
        helperLayer.className += ' introjs-fixedTooltip';
      } else {
        helperLayer.className = helperLayer.className.replace(' introjs-fixedTooltip', '');
      }

      if (currentElement.position == 'floating') {
        widthHeightPadding = 0;
      }

      //set new position to helper layer
      helperLayer.setAttribute('style', 'width: ' + (elementPosition.width  + widthHeightPadding)  + 'px; ' +
                                        'height:' + (elementPosition.height + widthHeightPadding)  + 'px; ' +
                                        'top:'    + (elementPosition.top    - 5)   + 'px;' +
                                        'left: '  + (elementPosition.left   - 5)   + 'px;');

    }
  }

  /**
   * Add disableinteraction layer and adjust the size and position of the layer
   *
   * @api private
   * @method _disableInteraction
   */
  function _disableInteraction() {
    var disableInteractionLayer = document.querySelector('.introjs-disableInteraction');
    if (disableInteractionLayer === null) {
      disableInteractionLayer = document.createElement('div');
      disableInteractionLayer.className = 'introjs-disableInteraction';
      this._targetElement.appendChild(disableInteractionLayer);
    }

    _setHelperLayerPosition.call(this, disableInteractionLayer);
  }

  /**
   * Setting anchors to behave like buttons
   *
   * @api private
   * @method _setAnchorAsButton
   */
  function _setAnchorAsButton(anchor){
    anchor.setAttribute('role', 'button');
    anchor.tabIndex = 0;
  }

  /**
   * Show an element on the page
   *
   * @api private
   * @method _showElement
   * @param {Object} targetElement
   */
  function _showElement(targetElement) {
    if (typeof (this._introChangeCallback) !== 'undefined') {
      this._introChangeCallback.call(this, targetElement.element);
    }

    var self = this,
        oldHelperLayer = document.querySelector('.introjs-helperLayer'),
        oldReferenceLayer = document.querySelector('.introjs-tooltipReferenceLayer'),
        highlightClass = 'introjs-helperLayer',
        elementPosition = _getOffset(targetElement.element);

    //check for a current step highlight class
    if (typeof (targetElement.highlightClass) === 'string') {
      highlightClass += (' ' + targetElement.highlightClass);
    }
    //check for options highlight class
    if (typeof (this._options.highlightClass) === 'string') {
      highlightClass += (' ' + this._options.highlightClass);
    }

    if (oldHelperLayer != null) {
      var oldHelperNumberLayer = oldReferenceLayer.querySelector('.introjs-helperNumberLayer'),
          oldtooltipLayer      = oldReferenceLayer.querySelector('.introjs-tooltiptext'),
          oldArrowLayer        = oldReferenceLayer.querySelector('.introjs-arrow'),
          oldtooltipContainer  = oldReferenceLayer.querySelector('.introjs-tooltip'),
          skipTooltipButton    = oldReferenceLayer.querySelector('.introjs-skipbutton'),
          prevTooltipButton    = oldReferenceLayer.querySelector('.introjs-prevbutton'),
          nextTooltipButton    = oldReferenceLayer.querySelector('.introjs-nextbutton');

      //update or reset the helper highlight class
      oldHelperLayer.className = highlightClass;
      //hide the tooltip
      oldtooltipContainer.style.opacity = 0;
      oldtooltipContainer.style.display = "none";

      if (oldHelperNumberLayer != null) {
        var lastIntroItem = this._introItems[(targetElement.step - 2 >= 0 ? targetElement.step - 2 : 0)];

        if (lastIntroItem != null && (this._direction == 'forward' && lastIntroItem.position == 'floating') || (this._direction == 'backward' && targetElement.position == 'floating')) {
          oldHelperNumberLayer.style.opacity = 0;
        }
      }

      //set new position to helper layer
      _setHelperLayerPosition.call(self, oldHelperLayer);
      _setHelperLayerPosition.call(self, oldReferenceLayer);

      //remove `introjs-fixParent` class from the elements
      var fixParents = document.querySelectorAll('.introjs-fixParent');
      if (fixParents && fixParents.length > 0) {
        for (var i = fixParents.length - 1; i >= 0; i--) {
          fixParents[i].className = fixParents[i].className.replace(/introjs-fixParent/g, '').replace(/^\s+|\s+$/g, '');
        };
      }

      //remove old classes if the element still exist
      _removeShowElement();

      //we should wait until the CSS3 transition is competed (it's 0.3 sec) to prevent incorrect `height` and `width` calculation
      if (self._lastShowElementTimer) {
        clearTimeout(self._lastShowElementTimer);
      }
      self._lastShowElementTimer = setTimeout(function() {
        //set current step to the label
        if (oldHelperNumberLayer != null) {
          oldHelperNumberLayer.innerHTML = targetElement.step;
        }
        //set current tooltip text
        oldtooltipLayer.innerHTML = targetElement.intro;
        //set the tooltip position
        oldtooltipContainer.style.display = "block";
        _placeTooltip.call(self, targetElement.element, oldtooltipContainer, oldArrowLayer, oldHelperNumberLayer);

        //change active bullet
        if (self._options.showBullets) {
            oldReferenceLayer.querySelector('.introjs-bullets li > a.active').className = '';
            oldReferenceLayer.querySelector('.introjs-bullets li > a[data-stepnumber="' + targetElement.step + '"]').className = 'active';
        }
        oldReferenceLayer.querySelector('.introjs-progress .introjs-progressbar').setAttribute('style', 'width:' + _getProgress.call(self) + '%;');

        //show the tooltip
        oldtooltipContainer.style.opacity = 1;
        if (oldHelperNumberLayer) oldHelperNumberLayer.style.opacity = 1;

        //reset button focus
        if (nextTooltipButton.tabIndex === -1) {
          //tabindex of -1 means we are at the end of the tour - focus on skip / done
          skipTooltipButton.focus();
        } else {
          //still in the tour, focus on next
          nextTooltipButton.focus();
        }
      }, 350);

      // end of old element if-else condition
    } else {
      var helperLayer       = document.createElement('div'),
          referenceLayer    = document.createElement('div'),
          arrowLayer        = document.createElement('div'),
          tooltipLayer      = document.createElement('div'),
          tooltipTextLayer  = document.createElement('div'),
          bulletsLayer      = document.createElement('div'),
          progressLayer     = document.createElement('div'),
          buttonsLayer      = document.createElement('div');

      helperLayer.className = highlightClass;
      referenceLayer.className = 'introjs-tooltipReferenceLayer';

      //set new position to helper layer
      _setHelperLayerPosition.call(self, helperLayer);
      _setHelperLayerPosition.call(self, referenceLayer);

      //add helper layer to target element
      this._targetElement.appendChild(helperLayer);
      this._targetElement.appendChild(referenceLayer);

      arrowLayer.className = 'introjs-arrow';

      tooltipTextLayer.className = 'introjs-tooltiptext';
      tooltipTextLayer.innerHTML = targetElement.intro;

      bulletsLayer.className = 'introjs-bullets';

      if (this._options.showBullets === false) {
        bulletsLayer.style.display = 'none';
      }

      var ulContainer = document.createElement('ul');

      for (var i = 0, stepsLength = this._introItems.length; i < stepsLength; i++) {
        var innerLi    = document.createElement('li');
        var anchorLink = document.createElement('a');

        anchorLink.onclick = function() {
          self.goToStep(this.getAttribute('data-stepnumber'));
        };

        if (i === (targetElement.step-1)) anchorLink.className = 'active';

        _setAnchorAsButton(anchorLink);
        anchorLink.innerHTML = "&nbsp;";
        anchorLink.setAttribute('data-stepnumber', this._introItems[i].step);

        innerLi.appendChild(anchorLink);
        ulContainer.appendChild(innerLi);
      }

      bulletsLayer.appendChild(ulContainer);

      progressLayer.className = 'introjs-progress';

      if (this._options.showProgress === false) {
        progressLayer.style.display = 'none';
      }
      var progressBar = document.createElement('div');
      progressBar.className = 'introjs-progressbar';
      progressBar.setAttribute('style', 'width:' + _getProgress.call(this) + '%;');

      progressLayer.appendChild(progressBar);

      buttonsLayer.className = 'introjs-tooltipbuttons';
      if (this._options.showButtons === false) {
        buttonsLayer.style.display = 'none';
      }

      tooltipLayer.className = 'introjs-tooltip';
      tooltipLayer.appendChild(tooltipTextLayer);
      tooltipLayer.appendChild(bulletsLayer);
      tooltipLayer.appendChild(progressLayer);

      //add helper layer number
      if (this._options.showStepNumbers == true) {
        var helperNumberLayer = document.createElement('span');
        helperNumberLayer.className = 'introjs-helperNumberLayer';
        helperNumberLayer.innerHTML = targetElement.step;
        referenceLayer.appendChild(helperNumberLayer);
      }

      tooltipLayer.appendChild(arrowLayer);
      referenceLayer.appendChild(tooltipLayer);

      //next button
      var nextTooltipButton = document.createElement('a');

      nextTooltipButton.onclick = function() {
        if (self._introItems.length - 1 != self._currentStep) {
          _nextStep.call(self);
        }
      };

      _setAnchorAsButton(nextTooltipButton);
      nextTooltipButton.innerHTML = this._options.nextLabel;

      //previous button
      var prevTooltipButton = document.createElement('a');

      prevTooltipButton.onclick = function() {
        if (self._currentStep != 0) {
          _previousStep.call(self);
        }
      };

      _setAnchorAsButton(prevTooltipButton);
      prevTooltipButton.innerHTML = this._options.prevLabel;

      //skip button
      var skipTooltipButton = document.createElement('a');
      skipTooltipButton.className = 'introjs-button introjs-skipbutton';
      _setAnchorAsButton(skipTooltipButton);
      skipTooltipButton.innerHTML = this._options.skipLabel;

      skipTooltipButton.onclick = function() {
        if (self._introItems.length - 1 == self._currentStep && typeof (self._introCompleteCallback) === 'function') {
          self._introCompleteCallback.call(self);
        }

        _exitIntro.call(self, self._targetElement);
      };

      buttonsLayer.appendChild(skipTooltipButton);

      //in order to prevent displaying next/previous button always
      if (this._introItems.length > 1) {
        buttonsLayer.appendChild(prevTooltipButton);
        buttonsLayer.appendChild(nextTooltipButton);
      }

      tooltipLayer.appendChild(buttonsLayer);

      //set proper position
      _placeTooltip.call(self, targetElement.element, tooltipLayer, arrowLayer, helperNumberLayer);

      //end of new element if-else condition
    }

    //disable interaction
    if (this._options.disableInteraction === true) {
      _disableInteraction.call(self);
    }

    prevTooltipButton.removeAttribute('tabIndex');
    nextTooltipButton.removeAttribute('tabIndex');

    // when it's the first step of tour
    if (this._currentStep == 0 && this._introItems.length > 1) {
      skipTooltipButton.className = 'introjs-button introjs-skipbutton';
      nextTooltipButton.className = 'introjs-button introjs-nextbutton';

      if (this._options.hidePrev == true) {
        prevTooltipButton.className = 'introjs-button introjs-prevbutton introjs-hidden';
        nextTooltipButton.className += ' introjs-fullbutton';
      } else {
        prevTooltipButton.className = 'introjs-button introjs-prevbutton introjs-disabled';
      }

      prevTooltipButton.tabIndex = '-1';
      skipTooltipButton.innerHTML = this._options.skipLabel;
    } else if (this._introItems.length - 1 == this._currentStep || this._introItems.length == 1) {
      // last step of tour
      skipTooltipButton.innerHTML = this._options.doneLabel;
      // adding donebutton class in addition to skipbutton
      skipTooltipButton.className += ' introjs-donebutton';
      prevTooltipButton.className = 'introjs-button introjs-prevbutton';

      if (this._options.hideNext == true) {
        nextTooltipButton.className = 'introjs-button introjs-nextbutton introjs-hidden';
        prevTooltipButton.className += ' introjs-fullbutton';
      } else {
        nextTooltipButton.className = 'introjs-button introjs-nextbutton introjs-disabled';
      }

      nextTooltipButton.tabIndex = '-1';
    } else {
      // steps between start and end
      skipTooltipButton.className = 'introjs-button introjs-skipbutton';
      prevTooltipButton.className = 'introjs-button introjs-prevbutton';
      nextTooltipButton.className = 'introjs-button introjs-nextbutton';
      skipTooltipButton.innerHTML = this._options.skipLabel;
    }

    //Set focus on "next" button, so that hitting Enter always moves you onto the next step
    nextTooltipButton.focus();

    _setShowElement(targetElement);

    if (!_elementInViewport(targetElement.element) && this._options.scrollToElement === true) {
      var rect = targetElement.element.getBoundingClientRect(),
        winHeight = _getWinSize().height,
        top = rect.bottom - (rect.bottom - rect.top),
        bottom = rect.bottom - winHeight;

      //Scroll up
      if (top < 0 || targetElement.element.clientHeight > winHeight) {
        window.scrollBy(0, top - this._options.scrollPadding); // 30px padding from edge to look nice

      //Scroll down
      } else {
        window.scrollBy(0, bottom + 70 + this._options.scrollPadding); // 70px + 30px padding from edge to look nice
      }
    }

    if (typeof (this._introAfterChangeCallback) !== 'undefined') {
      this._introAfterChangeCallback.call(this, targetElement.element);
    }
  }

  /**
   * To remove all show element(s)
   *
   * @api private
   * @method _removeShowElement
   */
  function _removeShowElement() {
    var elms = document.querySelectorAll('.introjs-showElement');

    for (var i = 0, l = elms.length; i < l; i++) {
      var elm = elms[i];
      _removeClass(elm, /introjs-[a-zA-Z]+/g);
    }
  }

  /**
   * To set the show element
   * This function set a relative (in most cases) position and changes the z-index
   *
   * @api private
   * @method _setShowElement
   * @param {Object} targetElement
   */
  function _setShowElement(targetElement) {
    // we need to add this show element class to the parent of SVG elements
    // because the SVG elements can't have independent z-index
    if (targetElement.element instanceof SVGElement) {
      var parentElm = targetElement.element.parentNode;

      while (targetElement.element.parentNode != null) {
        if (!parentElm.tagName || parentElm.tagName.toLowerCase() === 'body') break;

        if (parentElm.tagName.toLowerCase() === 'svg') {
          _setClass(parentElm, 'introjs-showElement introjs-relativePosition');
        }

        parentElm = parentElm.parentNode;
      }
    }

    _setClass(targetElement.element, 'introjs-showElement');

    var currentElementPosition = _getPropValue(targetElement.element, 'position');
    if (currentElementPosition !== 'absolute' &&
        currentElementPosition !== 'relative' &&
        currentElementPosition !== 'fixed') {
      //change to new intro item
      //targetElement.element.className += ' introjs-relativePosition';
      _setClass(targetElement.element, 'introjs-relativePosition')
    }

    var parentElm = targetElement.element.parentNode;
    while (parentElm != null) {
      if (!parentElm.tagName || parentElm.tagName.toLowerCase() === 'body') break;

      //fix The Stacking Context problem.
      //More detail: https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Understanding_z_index/The_stacking_context
      var zIndex = _getPropValue(parentElm, 'z-index');
      var opacity = parseFloat(_getPropValue(parentElm, 'opacity'));
      var transform = _getPropValue(parentElm, 'transform') || _getPropValue(parentElm, '-webkit-transform') || _getPropValue(parentElm, '-moz-transform') || _getPropValue(parentElm, '-ms-transform') || _getPropValue(parentElm, '-o-transform');
      if (/[0-9]+/.test(zIndex) || opacity < 1 || (transform !== 'none' && transform !== undefined)) {
        parentElm.className += ' introjs-fixParent';
      }

      parentElm = parentElm.parentNode;
    }
  }

  function _setClass(element, className) {
    if (element instanceof SVGElement) {
      var pre = element.getAttribute('class') || '';

      element.setAttribute('class', pre + ' ' + className);
    } else {
      element.className += ' ' + className;
    }
  }

  function _removeClass(element, classNameRegex) {
    if (element instanceof SVGElement) {
      var pre = element.getAttribute('class') || '';

      element.setAttribute('class', pre.replace(classNameRegex, '').replace(/^\s+|\s+$/g, ''));
    } else {
      element.className = element.className.replace(classNameRegex, '').replace(/^\s+|\s+$/g, '');
    }
  }

  /**
   * Get an element CSS property on the page
   * Thanks to JavaScript Kit: http://www.javascriptkit.com/dhtmltutors/dhtmlcascade4.shtml
   *
   * @api private
   * @method _getPropValue
   * @param {Object} element
   * @param {String} propName
   * @returns Element's property value
   */
  function _getPropValue (element, propName) {
    var propValue = '';
    if (element.currentStyle) { //IE
      propValue = element.currentStyle[propName];
    } else if (document.defaultView && document.defaultView.getComputedStyle) { //Others
      propValue = document.defaultView.getComputedStyle(element, null).getPropertyValue(propName);
    }

    //Prevent exception in IE
    if (propValue && propValue.toLowerCase) {
      return propValue.toLowerCase();
    } else {
      return propValue;
    }
  }

  /**
   * Checks to see if target element (or parents) position is fixed or not
   *
   * @api private
   * @method _isFixed
   * @param {Object} element
   * @returns Boolean
   */
  function _isFixed (element) {
    var p = element.parentNode;

    if (!p || p.nodeName === 'HTML') {
      return false;
    }

    if (_getPropValue(element, 'position') == 'fixed') {
      return true;
    }

    return _isFixed(p);
  }

  /**
   * Provides a cross-browser way to get the screen dimensions
   * via: http://stackoverflow.com/questions/5864467/internet-explorer-innerheight
   *
   * @api private
   * @method _getWinSize
   * @returns {Object} width and height attributes
   */
  function _getWinSize() {
    if (window.innerWidth != undefined) {
      return { width: window.innerWidth, height: window.innerHeight };
    } else {
      var D = document.documentElement;
      return { width: D.clientWidth, height: D.clientHeight };
    }
  }

  /**
   * Check to see if the element is in the viewport or not
   * http://stackoverflow.com/questions/123999/how-to-tell-if-a-dom-element-is-visible-in-the-current-viewport
   *
   * @api private
   * @method _elementInViewport
   * @param {Object} el
   */
  function _elementInViewport(el) {
    var rect = el.getBoundingClientRect();

    return (
      rect.top >= 0 &&
      rect.left >= 0 &&
      (rect.bottom+80) <= window.innerHeight && // add 80 to get the text right
      rect.right <= window.innerWidth
    );
  }

  /**
   * Add overlay layer to the page
   *
   * @api private
   * @method _addOverlayLayer
   * @param {Object} targetElm
   */
  function _addOverlayLayer(targetElm) {
    var overlayLayer = document.createElement('div'),
        styleText = '',
        self = this;

    //set css class name
    overlayLayer.className = 'introjs-overlay';

    //check if the target element is body, we should calculate the size of overlay layer in a better way
    if (!targetElm.tagName || targetElm.tagName.toLowerCase() === 'body') {
      styleText += 'top: 0;bottom: 0; left: 0;right: 0;position: fixed;';
      overlayLayer.setAttribute('style', styleText);
    } else {
      //set overlay layer position
      var elementPosition = _getOffset(targetElm);
      if (elementPosition) {
        styleText += 'width: ' + elementPosition.width + 'px; height:' + elementPosition.height + 'px; top:' + elementPosition.top + 'px;left: ' + elementPosition.left + 'px;';
        overlayLayer.setAttribute('style', styleText);
      }
    }

    targetElm.appendChild(overlayLayer);

    overlayLayer.onclick = function() {
      if (self._options.exitOnOverlayClick == true) {
        _exitIntro.call(self, targetElm);
      }
    };

    setTimeout(function() {
      styleText += 'opacity: ' + self._options.overlayOpacity.toString() + ';';
      overlayLayer.setAttribute('style', styleText);
    }, 10);

    return true;
  }

  /**
   * Removes open hint (tooltip hint)
   *
   * @api private
   * @method _removeHintTooltip
   */
  function _removeHintTooltip() {
    var tooltip = this._targetElement.querySelector('.introjs-hintReference');

    if (tooltip) {
      var step = tooltip.getAttribute('data-step');
      tooltip.parentNode.removeChild(tooltip);
      return step;
    }
  }

  /**
   * Start parsing hint items
   *
   * @api private
   * @param {Object} targetElm
   * @method _startHint
   */
  function _populateHints(targetElm) {
    var self = this;
    this._introItems = [];

    if (this._options.hints) {
      for (var i = 0, l = this._options.hints.length; i < l; i++) {
        var currentItem = _cloneObject(this._options.hints[i]);

        if (typeof(currentItem.element) === 'string') {
          //grab the element with given selector from the page
          currentItem.element = document.querySelector(currentItem.element);
        }

        currentItem.hintPosition = currentItem.hintPosition || this._options.hintPosition;
        currentItem.hintAnimation = currentItem.hintAnimation || this._options.hintAnimation;

        if (currentItem.element != null) {
          this._introItems.push(currentItem);
        }
      }
    } else {
      var hints = targetElm.querySelectorAll('*[data-hint]');

      if (hints.length < 1) {
        return false;
      }

      //first add intro items with data-step
      for (var i = 0, l = hints.length; i < l; i++) {
        var currentElement = hints[i];

        // hint animation
        var hintAnimation = currentElement.getAttribute('data-hintAnimation');

        if (hintAnimation) {
          hintAnimation = (hintAnimation == 'true');
        } else {
          hintAnimation = this._options.hintAnimation;
        }

        this._introItems.push({
          element: currentElement,
          hint: currentElement.getAttribute('data-hint'),
          hintPosition: currentElement.getAttribute('data-hintPosition') || this._options.hintPosition,
          hintAnimation: hintAnimation,
          tooltipClass: currentElement.getAttribute('data-tooltipClass'),
          position: currentElement.getAttribute('data-position') || this._options.tooltipPosition
        });
      }
    }

    _addHints.call(this);

    if (document.addEventListener) {
      document.addEventListener('click', _removeHintTooltip.bind(this), false);
      //for window resize
      window.addEventListener('resize', _reAlignHints.bind(this), true);
    } else if (document.attachEvent) { //IE
      //for window resize
      document.attachEvent('onclick', _removeHintTooltip.bind(this));
      document.attachEvent('onresize', _reAlignHints.bind(this));
    }
  }

  /**
   * Re-aligns all hint elements
   *
   * @api private
   * @method _reAlignHints
   */
  function _reAlignHints() {
    for (var i = 0, l = this._introItems.length; i < l; i++) {
      var item = this._introItems[i];

      if (typeof (item.targetElement) == 'undefined') continue;

      _alignHintPosition.call(this, item.hintPosition, item.element, item.targetElement)
    }
  }

  /**
   * Hide a hint
   *
   * @api private
   * @method _hideHint
   */
  function _hideHint(stepId) {
    _removeHintTooltip.call(this);
    var hint = this._targetElement.querySelector('.introjs-hint[data-step="' + stepId + '"]');

    if (hint) {
      hint.className += ' introjs-hidehint';
    }

    // call the callback function (if any)
    if (typeof (this._hintCloseCallback) !== 'undefined') {
      this._hintCloseCallback.call(this, stepId);
    }
  }

  /**
   * Hide all hints
   *
   * @api private
   * @method _hideHints
   */
  function _hideHints() {
    var hints = this._targetElement.querySelectorAll('.introjs-hint');

    if (hints && hints.length > 0) {
      for (var i = 0; i < hints.length; i++) {
        _hideHint.call(this, hints[i].getAttribute('data-step'));
      }
    }
  }

  /**
   * Show all hints
   *
   * @api private
   * @method _showHints
   */
  function _showHints() {
    var hints = this._targetElement.querySelectorAll('.introjs-hint');

    if (hints && hints.length > 0) {
      for (var i = 0; i < hints.length; i++) {
        _showHint.call(this, hints[i].getAttribute('data-step'));
      }
    } else {
      _populateHints.call(this, this._targetElement);
    }
  };

  /**
   * Show a hint
   *
   * @api private
   * @method _showHint
   */
  function _showHint(stepId) {
    var hint = this._targetElement.querySelector('.introjs-hint[data-step="' + stepId + '"]');

    if (hint) {
      hint.className = hint.className.replace(/introjs\-hidehint/g, '');
    }
  };

  /**
   * Removes all hint elements on the page
   * Useful when you want to destroy the elements and add them again (e.g. a modal or popup)
   *
   * @api private
   * @method _removeHints
   */
  function _removeHints() {
    var hints = this._targetElement.querySelectorAll('.introjs-hint');

    if (hints && hints.length > 0) {
      for (var i = 0; i < hints.length; i++) {
        _removeHint.call(this, hints[i].getAttribute('data-step'));
      }
    }
  };

  /**
   * Remove one single hint element from the page
   * Useful when you want to destroy the element and add them again (e.g. a modal or popup)
   * Use removeHints if you want to remove all elements.
   *
   * @api private
   * @method _removeHint
   */
  function _removeHint(stepId) {
    var hint = this._targetElement.querySelector('.introjs-hint[data-step="' + stepId + '"]');

    if (hint) {
      hint.parentNode.removeChild(hint);
    }
  };

  /**
   * Add all available hints to the page
   *
   * @api private
   * @method _addHints
   */
  function _addHints() {
    var self = this;

    var oldHintsWrapper = document.querySelector('.introjs-hints');

    if (oldHintsWrapper != null) {
      hintsWrapper = oldHintsWrapper;
    } else {
      var hintsWrapper = document.createElement('div');
      hintsWrapper.className = 'introjs-hints';
    }

    for (var i = 0, l = this._introItems.length; i < l; i++) {
      var item = this._introItems[i];

      // avoid append a hint twice
      if (document.querySelector('.introjs-hint[data-step="' + i + '"]'))
        continue;

      var hint = document.createElement('a');
      _setAnchorAsButton(hint);

      (function (hint, item, i) {
        // when user clicks on the hint element
        hint.onclick = function(e) {
          var evt = e ? e : window.event;
          if (evt.stopPropagation)    evt.stopPropagation();
          if (evt.cancelBubble != null) evt.cancelBubble = true;

          _hintClick.call(self, hint, item, i);
        };
      }(hint, item, i));

      hint.className = 'introjs-hint';

      if (!item.hintAnimation) {
        hint.className += ' introjs-hint-no-anim';
      }

      // hint's position should be fixed if the target element's position is fixed
      if (_isFixed(item.element)) {
        hint.className += ' introjs-fixedhint';
      }

      var hintDot = document.createElement('div');
      hintDot.className = 'introjs-hint-dot';
      var hintPulse = document.createElement('div');
      hintPulse.className = 'introjs-hint-pulse';

      hint.appendChild(hintDot);
      hint.appendChild(hintPulse);
      hint.setAttribute('data-step', i);

      // we swap the hint element with target element
      // because _setHelperLayerPosition uses `element` property
      item.targetElement = item.element;
      item.element = hint;

      // align the hint position
      _alignHintPosition.call(this, item.hintPosition, hint, item.targetElement);

      hintsWrapper.appendChild(hint);
    }

    // adding the hints wrapper
    document.body.appendChild(hintsWrapper);

    // call the callback function (if any)
    if (typeof (this._hintsAddedCallback) !== 'undefined') {
      this._hintsAddedCallback.call(this);
    }
  }

  /**
   * Aligns hint position
   *
   * @api private
   * @method _alignHintPosition
   * @param {String} position
   * @param {Object} hint
   * @param {Object} element
   */
  function _alignHintPosition(position, hint, element) {
    // get/calculate offset of target element
    var offset = _getOffset.call(this, element);
    var iconWidth = 20;
    var iconHeight = 20;

    // align the hint element
    switch (position) {
      default:
      case 'top-left':
        hint.style.left = offset.left + 'px';
        hint.style.top = offset.top + 'px';
        break;
      case 'top-right':
        hint.style.left = (offset.left + offset.width - iconWidth) + 'px';
        hint.style.top = offset.top + 'px';
        break;
      case 'bottom-left':
        hint.style.left = offset.left + 'px';
        hint.style.top = (offset.top + offset.height - iconHeight) + 'px';
        break;
      case 'bottom-right':
        hint.style.left = (offset.left + offset.width - iconWidth) + 'px';
        hint.style.top = (offset.top + offset.height - iconHeight) + 'px';
        break;
      case 'middle-left':
        hint.style.left = offset.left + 'px';
        hint.style.top = (offset.top + (offset.height - iconHeight) / 2) + 'px';
        break;
      case 'middle-right':
        hint.style.left = (offset.left + offset.width - iconWidth) + 'px';
        hint.style.top = (offset.top + (offset.height - iconHeight) / 2) + 'px';
        break;
      case 'middle-middle':
        hint.style.left = (offset.left + (offset.width - iconWidth) / 2) + 'px';
        hint.style.top = (offset.top + (offset.height - iconHeight) / 2) + 'px';
        break;
      case 'bottom-middle':
        hint.style.left = (offset.left + (offset.width - iconWidth) / 2) + 'px';
        hint.style.top = (offset.top + offset.height - iconHeight) + 'px';
        break;
      case 'top-middle':
        hint.style.left = (offset.left + (offset.width - iconWidth) / 2) + 'px';
        hint.style.top = offset.top + 'px';
        break;
    }
  }

  /**
   * Triggers when user clicks on the hint element
   *
   * @api private
   * @method _hintClick
   * @param {Object} hintElement
   * @param {Object} item
   * @param {Number} stepId
   */
  function _hintClick(hintElement, item, stepId) {
    // call the callback function (if any)
    if (typeof (this._hintClickCallback) !== 'undefined') {
      this._hintClickCallback.call(this, hintElement, item, stepId);
    }

    // remove all open tooltips
    var removedStep = _removeHintTooltip.call(this);

    // to toggle the tooltip
    if (parseInt(removedStep, 10) == stepId) {
      return;
    }

    var tooltipLayer = document.createElement('div');
    var tooltipTextLayer = document.createElement('div');
    var arrowLayer = document.createElement('div');
    var referenceLayer = document.createElement('div');

    tooltipLayer.className = 'introjs-tooltip';

    tooltipLayer.onclick = function (e) {
      //IE9 & Other Browsers
      if (e.stopPropagation) {
        e.stopPropagation();
      }
      //IE8 and Lower
      else {
        e.cancelBubble = true;
      }
    };

    tooltipTextLayer.className = 'introjs-tooltiptext';

    var tooltipWrapper = document.createElement('p');
    tooltipWrapper.innerHTML = item.hint;

    var closeButton = document.createElement('a');
    closeButton.className = 'introjs-button';
    closeButton.innerHTML = this._options.hintButtonLabel;
    closeButton.onclick = _hideHint.bind(this, stepId);

    tooltipTextLayer.appendChild(tooltipWrapper);
    tooltipTextLayer.appendChild(closeButton);

    arrowLayer.className = 'introjs-arrow';
    tooltipLayer.appendChild(arrowLayer);

    tooltipLayer.appendChild(tooltipTextLayer);

    // set current step for _placeTooltip function
    this._currentStep = hintElement.getAttribute('data-step');

    // align reference layer position
    referenceLayer.className = 'introjs-tooltipReferenceLayer introjs-hintReference';
    referenceLayer.setAttribute('data-step', hintElement.getAttribute('data-step'));
    _setHelperLayerPosition.call(this, referenceLayer);

    referenceLayer.appendChild(tooltipLayer);
    document.body.appendChild(referenceLayer);

    //set proper position
    _placeTooltip.call(this, hintElement, tooltipLayer, arrowLayer, null, true);
  }

  /**
   * Get an element position on the page
   * Thanks to `meouw`: http://stackoverflow.com/a/442474/375966
   *
   * @api private
   * @method _getOffset
   * @param {Object} element
   * @returns Element's position info
   */
  function _getOffset(element) {
    var elementPosition = {};

    var body = document.body;
    var docEl = document.documentElement;

    var scrollTop = window.pageYOffset || docEl.scrollTop || body.scrollTop;
    var scrollLeft = window.pageXOffset || docEl.scrollLeft || body.scrollLeft;

    if (element instanceof SVGElement) {
      var x = element.getBoundingClientRect()
      elementPosition.top = x.top + scrollTop;
      elementPosition.width = x.width;
      elementPosition.height = x.height;
      elementPosition.left = x.left + scrollLeft;
    } else {
      //set width
      elementPosition.width = element.offsetWidth;

      //set height
      elementPosition.height = element.offsetHeight;

      //calculate element top and left
      var _x = 0;
      var _y = 0;
      while (element && !isNaN(element.offsetLeft) && !isNaN(element.offsetTop)) {
        _x += element.offsetLeft;
        _y += element.offsetTop;
        element = element.offsetParent;
      }
      //set top
      elementPosition.top = _y;
      //set left
      elementPosition.left = _x;
    }

    return elementPosition;
  }

  /**
   * Gets the current progress percentage
   *
   * @api private
   * @method _getProgress
   * @returns current progress percentage
   */
  function _getProgress() {
    // Steps are 0 indexed
    var currentStep = parseInt((this._currentStep + 1), 10);
    return ((currentStep / this._introItems.length) * 100);
  }

  /**
   * Overwrites obj1's values with obj2's and adds obj2's if non existent in obj1
   * via: http://stackoverflow.com/questions/171251/how-can-i-merge-properties-of-two-javascript-objects-dynamically
   *
   * @param obj1
   * @param obj2
   * @returns obj3 a new object based on obj1 and obj2
   */
  function _mergeOptions(obj1,obj2) {
    var obj3 = {};
    for (var attrname in obj1) { obj3[attrname] = obj1[attrname]; }
    for (var attrname in obj2) { obj3[attrname] = obj2[attrname]; }
    return obj3;
  }

  var introJs = function (targetElm) {
    if (typeof (targetElm) === 'object') {
      //Ok, create a new instance
      return new IntroJs(targetElm);

    } else if (typeof (targetElm) === 'string') {
      //select the target element with query selector
      var targetElement = document.querySelector(targetElm);

      if (targetElement) {
        return new IntroJs(targetElement);
      } else {
        throw new Error('There is no element with given selector.');
      }
    } else {
      return new IntroJs(document.body);
    }
  };

  /**
   * Current IntroJs version
   *
   * @property version
   * @type String
   */
  introJs.version = VERSION;

  //Prototype
  introJs.fn = IntroJs.prototype = {
    clone: function () {
      return new IntroJs(this);
    },
    setOption: function(option, value) {
      this._options[option] = value;
      return this;
    },
    setOptions: function(options) {
      this._options = _mergeOptions(this._options, options);
      return this;
    },
    start: function () {
      _introForElement.call(this, this._targetElement);
      return this;
    },
    goToStep: function(step) {
      _goToStep.call(this, step);
      return this;
    },
    addStep: function(options) {
      if (!this._options.steps) {
        this._options.steps = [];
      }

      this._options.steps.push(options);

      return this;
    },
    addSteps: function(steps) {
      if (!steps.length) return;

      for(var index = 0; index < steps.length; index++) {
        this.addStep(steps[index]);
      }

      return this;
    },
    goToStepNumber: function(step) {
      _goToStepNumber.call(this, step);

      return this;
    },
    nextStep: function() {
      _nextStep.call(this);
      return this;
    },
    previousStep: function() {
      _previousStep.call(this);
      return this;
    },
    exit: function() {
      _exitIntro.call(this, this._targetElement);
      return this;
    },
    refresh: function() {
      // re-align intros
      _setHelperLayerPosition.call(this, document.querySelector('.introjs-helperLayer'));
      _setHelperLayerPosition.call(this, document.querySelector('.introjs-tooltipReferenceLayer'));

      //re-align hints
      _reAlignHints.call(this);
      return this;
    },
    onbeforechange: function(providedCallback) {
      if (typeof (providedCallback) === 'function') {
        this._introBeforeChangeCallback = providedCallback;
      } else {
        throw new Error('Provided callback for onbeforechange was not a function');
      }
      return this;
    },
    onchange: function(providedCallback) {
      if (typeof (providedCallback) === 'function') {
        this._introChangeCallback = providedCallback;
      } else {
        throw new Error('Provided callback for onchange was not a function.');
      }
      return this;
    },
    onafterchange: function(providedCallback) {
      if (typeof (providedCallback) === 'function') {
        this._introAfterChangeCallback = providedCallback;
      } else {
        throw new Error('Provided callback for onafterchange was not a function');
      }
      return this;
    },
    oncomplete: function(providedCallback) {
      if (typeof (providedCallback) === 'function') {
        this._introCompleteCallback = providedCallback;
      } else {
        throw new Error('Provided callback for oncomplete was not a function.');
      }
      return this;
    },
    onhintsadded: function(providedCallback) {
      if (typeof (providedCallback) === 'function') {
        this._hintsAddedCallback = providedCallback;
      } else {
        throw new Error('Provided callback for onhintsadded was not a function.');
      }
      return this;
    },
    onhintclick: function(providedCallback) {
      if (typeof (providedCallback) === 'function') {
        this._hintClickCallback = providedCallback;
      } else {
        throw new Error('Provided callback for onhintclick was not a function.');
      }
      return this;
    },
    onhintclose: function(providedCallback) {
      if (typeof (providedCallback) === 'function') {
        this._hintCloseCallback = providedCallback;
      } else {
        throw new Error('Provided callback for onhintclose was not a function.');
      }
      return this;
    },
    onexit: function(providedCallback) {
      if (typeof (providedCallback) === 'function') {
        this._introExitCallback = providedCallback;
      } else {
        throw new Error('Provided callback for onexit was not a function.');
      }
      return this;
    },
    addHints: function() {
      _populateHints.call(this, this._targetElement);
      return this;
    },
    hideHint: function (stepId) {
      _hideHint.call(this, stepId);
      return this;
    },
    hideHints: function () {
      _hideHints.call(this);
      return this;
    },
    showHint: function (stepId) {
      _showHint.call(this, stepId);
      return this;
    },
    showHints: function () {
      _showHints.call(this);
      return this;
    },
    removeHints: function () {
      _removeHints.call(this);
      return this;
    },
    removeHint: function (stepId) {
      _removeHint.call(this, stepId);
      return this;
    }
  };

  exports.introJs = introJs;
  return introJs;
}));
;
(function($) {
$.widget("ui.exp_sp_tour", {
	getCurrentUrl: function(page) {
	    try{
			var url = window.location.href.split("/?q=");
			return url[1];
		}catch(e){
		// to do
			// console.log(e, e.stack);
	    }
	},
	getSteps: function() {
	    try{
	    	var steps = [];
			if(Drupal.settings.exp_sp_tour !== undefined) {
				steps = JSON.parse(Drupal.settings.exp_sp_tour.tourconfig);
			}
			return steps;
	    }catch(e){
			// to do
			// console.log(e, e.stack);
	    }
	},

	_init: function() {
	    try{
	    			    	
	    	var isTourDivExist = ($('#tour_mylearn').length > 0 ? true : false);
			var steps = this.getSteps();
			// console.log('steps', steps);
			// console.log(this.rearrangeStep(steps));
			//append tour div if not exists and steps for current page is available
			if(!isTourDivExist && ((steps !== undefined && steps.length > 0) || $('[data-intro]').length > 0)) {
				$('<div class = "tour-outer-wrapper"><div id = "tour_mylearn" onclick="$(\'body\').data(\'exp_sp_tour\').startTour();"><p>'+Drupal.t('TOUR')+'</p></div></div>').prependTo('body');	
			}
			if(Drupal.settings.exp_sp_tour.auto_start == 1){
	    		setTimeout(function(){	    			
	    			$("#tour_mylearn").click()}, 500);	    		
	    	}
	    }catch(e){
			// to do
			// console.log(e, e.stack);
	    }
	},

	startTour: function() {
		try {
			var introguide = introJs();
			var steps = this.getSteps();
			var obj = this;
			// console.log('steps', steps);
			var options = {
				showStepNumbers: false,
				overlayOpacity: 0.5,
				exitOnOverlayClick: false,
				nextLabel: Drupal.t('LBL693'),
				prevLabel: Drupal.t('LBL692'),
				skipLabel: Drupal.t('LBL3213'),
				doneLabel: Drupal.t('LBL569'),
				// steps: steps
			};
			if(steps !== undefined) {
				options.steps = obj.rearrangeStep(steps).filter(function(item) {
					// console.log($(item.element).length);
					// console.log(item.welcomeText);
					var displayAlways = ['#paintCriteriaResults', '#refine-filter-pin-icon.pin-icon-white'];
					return (($(item.element).length > 0 && $(item.element).is(':visible')) || item.welcomeText || displayAlways.indexOf(item.element) != -1);
				});
				// options.steps = obj.rearrangeStep(options.steps)
				// console.log(options.steps);
			}
			introguide.setOptions(options)
			.onbeforechange(function (targetElement) {
			try {
				// console.log($(targetElement));
				var refineHidden = $('#paintCriteriaResults').hasClass('searchcriteria-div-unpinned');
				if(refineHidden) {
					if($(targetElement).attr('id') == 'paintCriteriaResults') {
						$('#lnr-catalog-search').data('lnrcatalogsearch').pinUnpinFilterCriteria();
					} else if($(targetElement).is('#refine-filter-pin-icon.pin-icon-white')) {
						$('#lnr-catalog-search').data('lnrcatalogsearch').pinUnpinFilterCriteria();
					}
				} else {
					if($(targetElement).is('#refine-filter-pin-icon.pin-icon-black')) {
						$('#lnr-catalog-search').data('lnrcatalogsearch').pinUnpinFilterCriteria();
						$('.catalog-criteria-refine-icon').trigger('mouseenter');
					}
				}
				//delete exiting mask div if any
				$('.introjs-helperLayer-Mask').remove();
			} catch(e) {
				// console.log(e, e.stack);
			}
            })
			.onafterchange(function(targetElement){
				//add a mask div to restrict actions on target element if any
				$('.introjs-helperLayer').clone().appendTo('body')
					.addClass('introjs-helperLayer-Mask');
				$('.tour-common').css("height","41px");
				$('.tour-filter').css("width","63px");
				$('.tour-filter').css("margin-left","-7px");
				$('.tour-common').css("margin-top","3px");
			})
			.oncomplete(function() {
				$('.introjs-helperLayer-Mask').remove();
			})
			.onexit(function() {
				$('.introjs-helperLayer-Mask').remove();
			})
			.start();
			// console.log(options.steps);
		}catch(e){
			// to do
			// console.log(e, e.stack);
		}
	},
	rearrangeStep: function(steps) {
		if(this.getCurrentUrl() == 'learning/enrollment-search') {
			var elementsArr = ['#block-exp-sp-lnrlearningplan-tab-my-learningplan-customized', '#block-exp-sp-lnrenrollment-tab-my-enrollment-customized', '#block-exp-sp-instructor-desk-tab-instructor-desk-customized'];
			var compare = function (a, b) {
				// console.log(a, b);
				// console.log($.inArray(a.element, elementsArr), $.inArray(b.element, elementsArr));
				if($.inArray(a.element, elementsArr) != -1 && $.inArray(b.element, elementsArr) != -1) {
					var selectorArr = $(a.element+', '+b.element);
					// console.log(selectorArr);
					var aIndex = 0;
					var bIndex = 0;
					$(a.element+', '+b.element).each(function(index, item) {
						// console.log(index, item);
						if($(item).is(a.element)) {
							aIndex = index;
						} else if($(item).is(b.element)) {
							bIndex = index;
						}
					});
					// console.log('aIndex', aIndex, 'bIndex', bIndex);
					if (aIndex < bIndex)
						return -1;
					if (aIndex > bIndex)
						return 1;
				}
				return 0;
			}
			return steps.sort(compare);
		}
		return steps;
	}
});

$.extend($.ui.exp_sp_tour.prototype,EXPERTUS_SMARTPORTAL_AbstractManager, EXPERTUS_SMARTPORTAL_AbstractDetailsWidget,{defaults:{start:true,catStart:true}});

})(jQuery);

$(function() {
	try{
	$('body').exp_sp_tour();
	}catch(e){
		// to do
	}
});;
// MSDropDown - jquery.dd.js
// author: Marghoob Suleman - Search me on google
// Date: 12th Aug, 2009
// Version: 2.38.4
// Revision: 38
// web: www.giftlelo.com | www.marghoobsuleman.com
/*
// msDropDown is free jQuery Plugin: you can redistribute it and/or modify
// it under the terms of the either the MIT License or the Gnu General Public License (GPL) Version 2
*/
;eval(function(p,a,c,k,e,r){e=function(c){return(c<a?'':e(parseInt(c/a)))+((c=c%a)>35?String.fromCharCode(c+29):c.toString(36))};if(!''.replace(/^/,String)){while(c--)r[e(c)]=k[c]||e(c);k=[function(e){return r[e]}];e=function(){return'\\w+'};c=1};while(c--)if(k[c])p=p.replace(new RegExp('\\b'+e(c)+'\\b','g'),k[c]);return p}(';(6($){3 1N="";3 3B=6(s,u){3 v=s;3 x=1b;3 u=$.3C({1c:4s,2w:7,2S:23,1O:9,1P:4t,3D:\'2g\',1J:10,3E:\'4u\',2T:\'\',2U:9,1k:\'\'},u);1b.1Z=21 3F();3 y="";3 z={};z.2V=9;z.2x=10;z.2y=1r;3 A=10;3 B={2W:\'4v\',1Q:\'4w\',1K:\'4x\',2h:\'4y\',1g:\'4z\',2X:\'4A\',2Y:\'4B\',4C:\'4D\',2z:\'4E\',3G:\'4F\'};3 C={2g:u.3D,2Z:\'2Z\',31:\'31\',32:\'32\',1w:\'1w\',1l:.30,1R:\'1R\',2A:\'2A\',2B:\'2B\',15:\'15\'};3 D={3H:"2C,33,34,1S,2D,2E,1s,1A,2F,1T,4G,22,35",1a:"1B,1x,1l,4H"};1b.1U=21 3F();3 E=$(v).1a("1d");5(1e(E)=="14"||E.18<=0){E="4I"+$.1V.3I++;$(v).2i("1d",E)};3 F=$(v).1a("1k");u.1k+=(F==14)?"":F;3 G=$(v).3J();A=($(v).1a("1B")>1||$(v).1a("1x")==9)?9:10;5(A){u.2w=$(v).1a("1B")};3 H={};3 I=0;3 J=10;3 K;3 L=10;3 M={};3 N="";3 O=6(a){5(1e(M[a])=="14"){M[a]=1o.4J(a)}11 M[a]};3 P=6(a){11 E+B[a]};3 Q=6(a){3 b=a;3 c=$(b).1a("1k");11(1e c=="14")?"":c.4K};3 R=6(a){3 b=$("#"+E+" 36:15");5(b.18>1){1C(3 i=0;i<b.18;i++){5(a==b[i].1j){11 9}}}19 5(b.18==1){5(b[0].1j==a){11 9}};11 10};3 S=6(a,b,c,d){3 e="";3 f=(d=="3a")?P("2Y"):P("2X");3 g=(d=="3a")?f+"3b"+(b)+"3b"+(c):f+"3b"+(b);3 h="";3 t="";3 i="";3 j="";5(u.1J!=10){i=\' \'+u.1J+\' \'+a.3K}19{h=$(a).1a("1p");3 k=21 3L(/^\\{.*\\}$/);3 l=k.3M(h);5(u.2U==9&&l==9){5(h.18!=0){3 m=24("["+h+"]");1W=(1e m[0].2j=="14")?"":m[0].2j;t=(1e m[0].1p=="14")?"":m[0].1p;j=(1e m[0].3N=="14")?"":m[0].3N;h=(1W.18==0)?"":\'<1W 2G="\'+1W+\'" 2H="2I" /> \'}}19{h=(h.18==0)?"":\'<1W 2G="\'+h+\'" 2H="2I" /> \'}};3 n=$(a).1t();3 o=$(a).4L();3 p=($(a).1a("1l")==9)?"1l":"3c";H[g]={1L:h+n,2k:o,1t:n,1j:a.1j,1d:g,1p:t};3 q=Q(a);5(R(a.1j)==9){e+=\'<a 3O="3P:3Q(0);" 1u="\'+C.15+\' \'+p+i+\'"\'}19{e+=\'<a  3O="3P:3Q(0);" 1u="\'+p+i+\'"\'};5(q!==10&&q!==14&&q.18!=0){e+=" 1k=\'"+q+"\'"};5(t!==""){e+=" 1p=\'"+t+"\'"};e+=\' 1d="\'+g+\'">\';e+=h+\'<1y 1u="\'+C.1w+\'">\'+n+\'</1y>\';5(j!==""){e+=j};e+=\'</a>\';11 e};3 T=6(t){3 b=t.3d();5(b.18==0)11-1;3 a="";1C(3 i 2l H){3 c=H[i].1t.3d();5(c.3R(0,b.18)==b){a+="#"+H[i].1d+", "}};11(a=="")?-1:a};3 U=6(){3 f=G;5(f.18==0)11"";3 g="";3 h=P("2X");3 i=P("2Y");f.3e(6(c){3 d=f[c];5(d.4M.4N().3d()=="4O"){g+="<1z 1u=\'4P\'>";g+="<1y 1k=\'3S-4Q:4R;3S-1k:4S;4T:4U;\'>"+$(d).1a("4V")+"</1y>";3 e=$(d).3J();e.3e(6(a){3 b=e[a];g+=S(b,c,a,"3a")});g+="</1z>"}19{g+=S(d,c,"","")}});11 g};3 V=6(){3 a=P("1Q");3 b=P("1g");3 c=u.1k;25="";25+=\'<1z 1d="\'+b+\'" 1u="\'+C.32+\'"\';5(!A){25+=(c!="")?\' 1k="\'+c+\'"\':\'\'}19{25+=(c!="")?\' 1k="2J-1D:4W 4X #4Y;1q:2m;1m:2K;\'+c+\'"\':\'\'};25+=\'>\';11 25};3 W=6(){3 a=P("1K");3 b=P("2z");3 c=P("2h");3 d=P("3G");3 e="";3 f="";5(O(E).1E.18>0){e=$("#"+E+" 36:15").1t();f=$("#"+E+" 36:15").1a("1p")};3 g="";3 t="";3 h=21 3L(/^\\{.*\\}$/);3 i=h.3M(f);5(u.2U==9&&i==9){5(f.18!=0){3 j=24("["+f+"]");g=(1e j[0].2j=="14")?"":j[0].2j;t=(1e j[0].1p=="14")?"":j[0].1p;f=(g.18==0||u.1O==10||u.1J!=10)?"":\'<1W 2G="\'+g+\'" 2H="2I" /> \'}}19{f=(f.18==0||f==14||u.1O==10||u.1J!=10)?"":\'<1W 2G="\'+f+\'" 2H="2I" /> \'};3 k=\'<1z 1d="\'+a+\'" 1u="\'+C.2Z+\'"\';k+=\'>\';k+=\'<1y 1d="\'+b+\'" 1u="\'+C.31+\'"></1y><1y 1u="\'+C.1w+\'" 1d="\'+c+\'">\'+f+\'<1y 1u="\'+C.1w+\'">\'+e+\'</1y></1y></1z>\';11 k};3 X=6(){3 c=P("1g");$("#"+c+" a.3c").1F("1S");$("#"+c+" a.3c").1f("1S",6(a){a.26();3f(1b);28();5(!A){$("#"+c).1F("1A");29(10);3 b=(u.1O==10)?$(1b).1t():$(1b).1L();1X(b);x.2n()}})};3 Y=6(){3 d=10;3 e=P("1Q");3 f=P("1K");3 g=P("2h");3 h=P("1g");3 i=P("2z");3 j=$("#"+E).4Z();3 k=u.1k;5($("#"+e).18>0){$("#"+e).2L();d=9};3 l=\'<1z 1d="\'+e+\'" 1u="\'+C.2g+\'"\';l+=(k!="")?\' 1k="\'+k+\'"\':\'\';l+=\'>\';l+=W();l+=V();l+=U();l+="</1z>";l+="</1z>";5(d==9){3 m=P("2W");$("#"+m).3g(l)}19{$("#"+E).3g(l)};5(A){3 f=P("1K");$("#"+f).2o()};$("#"+e).12("3T",j+"1v");$("#"+h).12("3T",(j-2)+"1v");5(G.18>u.2w){3 n=2p($("#"+h+" a:3h").12("2q-3U"))+2p($("#"+h+" a:3h").12("2q-1D"));3 o=((u.2S)*u.2w)-n;$("#"+h).12("1c",o+"1v")}19 5(A){3 o=$("#"+E).1c();$("#"+h).12("1c",o+"1v")};5(d==10){3V();3W(E)};5($("#"+E).1a("1l")==9){$("#"+e).12("2M",C.1l)};3X();$("#"+f).1f("1A",6(a){3i(1)});$("#"+f).1f("1T",6(a){3i(0)});X();$("#"+h+" a.1l").12("2M",C.1l);5(A){$("#"+h).1f("1A",6(c){5(!z.2x){z.2x=9;$(1o).1f("22",6(a){3 b=a.3Y;z.2y=b;5(b==39||b==40){a.26();a.2r();3j();28()};5(b==37||b==38){a.26();a.2r();3k();28()}})}})};$("#"+h).1f("1T",6(a){29(10);$(1o).1F("22",2N);z.2x=10;z.2y=1r});$("#"+f).1f("1S",6(b){29(10);5($("#"+h+":2a").18==1){$("#"+h).1F("1A")}19{$("#"+h).1f("1A",6(a){29(9)});x.3Z()}});$("#"+f).1f("1T",6(a){29(10)});5(u.1O&&u.1J!=10){2s()}};3 Z=6(a){1C(3 i 2l H){5(H[i].1j==a){11 H[i]}};11-1};3 3f=6(a){3 b=P("1g");5($("#"+b+" a."+C.15).18==1){y=$("#"+b+" a."+C.15).1t()};5(!A){$("#"+b+" a."+C.15).1M(C.15)};3 c=$("#"+b+" a."+C.15).1a("1d");5(c!=14){3 d=(z.2b==14||z.2b==1r)?H[c].1j:z.2b};5(a&&!A){$(a).1G(C.15)};5(A){3 e=z.2y;5($("#"+E).1a("1x")==9){5(e==17){z.2b=H[$(a).1a("1d")].1j;$(a).50(C.15)}19 5(e==16){$("#"+b+" a."+C.15).1M(C.15);$(a).1G(C.15);3 f=$(a).1a("1d");3 g=H[f].1j;1C(3 i=3l.51(d,g);i<=3l.52(d,g);i++){$("#"+Z(i).1d).1G(C.15)}}19{$("#"+b+" a."+C.15).1M(C.15);$(a).1G(C.15);z.2b=H[$(a).1a("1d")].1j}}19{$("#"+b+" a."+C.15).1M(C.15);$(a).1G(C.15);z.2b=H[$(a).1a("1d")].1j}}};3 3W=6(a){3 b=a;O(b).53=6(e){$("#"+b).1V(u)}};3 29=6(a){z.2V=a};3 41=6(){11 z.2V};3 3X=6(){3 b=P("1Q");3 c=D.3H.54(",");1C(3 d=0;d<c.18;d++){3 e=c[d];3 f=2c(e);5(f==9){2O(e){1h"2C":$("#"+b).1f("55",6(a){O(E).2C()});1i;1h"1S":$("#"+b).1f("1S",6(a){$("#"+E).1H("1S")});1i;1h"2D":$("#"+b).1f("2D",6(a){$("#"+E).1H("2D")});1i;1h"2E":$("#"+b).1f("2E",6(a){$("#"+E).1H("2E")});1i;1h"1s":$("#"+b).1f("1s",6(a){$("#"+E).1H("1s")});1i;1h"1A":$("#"+b).1f("1A",6(a){$("#"+E).1H("1A")});1i;1h"2F":$("#"+b).1f("2F",6(a){$("#"+E).1H("2F")});1i;1h"1T":$("#"+b).1f("1T",6(a){$("#"+E).1H("1T")});1i}}}};3 3V=6(){3 a=P("2W");$("#"+E).3g("<1z 1u=\'"+C.1R+"\' 1k=\'1c:3m;42:43;1m:2P;\' 1d=\'"+a+"\'></1z>");$("#"+E).56($("#"+a))};3 1X=6(a){3 b=P("2h");$("#"+b).1L(a)};3 3n=6(w){3 a=w;3 b=P("1g");3 c=$("#"+b+" a:2a");3 d=c.18;3 e=$("#"+b+" a:2a").1j($("#"+b+" a.15:2a"));3 f;2O(a){1h"3o":5(e<d-1){e++;f=c[e]};1i;1h"44":5(e<d&&e>0){e--;f=c[e]};1i};5(1e(f)=="14"){11 10};$("#"+b+" a."+C.15).1M(C.15);$(f).1G(C.15);3 g=f.1d;5(!A){3 h=(u.1O==10)?H[g].1t:$("#"+g).1L();1X(h);2s(H[g].1j)};5(a=="3o"){5(2p(($("#"+g).1m().1D+$("#"+g).1c()))>=2p($("#"+b).1c())){$("#"+b).2t(($("#"+b).2t())+$("#"+g).1c()+$("#"+g).1c())}}19{5(2p(($("#"+g).1m().1D+$("#"+g).1c()))<=0){$("#"+b).2t(($("#"+b).2t()-$("#"+b).1c())-$("#"+g).1c())}}};3 3j=6(){3n("3o")};3 3k=6(){3n("44")};3 2s=6(i){5(u.1J!=10){3 a=P("2h");3 b=(1e(i)=="14")?O(E).1n:i;3 c=O(E).1E[b].3K;5(c.18>0){3 d=P("1g");3 e=$("#"+d+" a."+c).1a("1d");3 f=$("#"+e).12("1Y-2j");3 g=$("#"+e).12("1Y-1m");5(g==14){g=$("#"+e).12("1Y-1m-x")+" "+$("#"+e).12("1Y-1m-y")};3 h=$("#"+e).12("2q-45");5(f!=14){$("#"+a).2u("."+C.1w).2i(\'1k\',"1Y:"+f)};5(g!=14){$("#"+a).2u("."+C.1w).12(\'1Y-1m\',g)};5(h!=14){$("#"+a).2u("."+C.1w).12(\'2q-45\',h)};$("#"+a).2u("."+C.1w).12(\'1Y-47\',\'57-47\');$("#"+a).2u("."+C.1w).12(\'2q-3U\',\'58\')}}};3 28=6(){3 a=P("1g");3 b=$("#"+a+" a."+C.15);5(b.18==1){3 c=$("#"+a+" a."+C.15).1t();3 d=$("#"+a+" a."+C.15).1a("1d");5(d!=14){3 e=H[d].2k;O(E).1n=H[d].1j};5(u.1O&&u.1J!=10)2s()}19 5(b.18>1){1C(3 i=0;i<b.18;i++){3 d=$(b[i]).1a("1d");3 f=H[d].1j;O(E).1E[f].15="15"}};3 g=O(E).1n;x.1Z["1n"]=g};3 2c=6(a){5($("#"+E).1a("59"+a)!=14){11 9};3 b=$("#"+E).3p("5a");5(b&&b[a]){11 9};11 10};3 3q=6(a){$("#"+E).2C();$("#"+E)[0].33();28();$(1o).1F("1s",2Q);$(1o).1F("1s",3q)};3 48=6(){3 a=P("1g");5(2c(\'34\')==9){3 b=H[$("#"+a+" a.15").1a("1d")].1t;5($.49(y)!==$.49(b)&&y!==""){$("#"+E).1H("34")}};5(2c(\'1s\')==9){$("#"+E).1H("1s")};5(2c(\'33\')==9){$(1o).1f("1s",3q)};11 10};3 3i=6(a){3 b=P("2z");5(a==1)$("#"+b).12({4a:\'0 5b%\'});19 $("#"+b).12({4a:\'0 0\'})};3 4b=6(){1C(3 i 2l O(E)){5(1e(O(E)[i])!==\'6\'&&1e(O(E)[i])!=="14"&&1e(O(E)[i])!=="1r"){x.1I(i,O(E)[i],9)}}};3 4c=6(a,b){5(Z(b)!=-1){O(E)[a]=b;3 c=P("1g");$("#"+c+" a."+C.15).1M(C.15);$("#"+Z(b).1d).1G(C.15);3 d=Z(O(E).1n).1L;1X(d)}};3 4d=6(i,a){5(a==\'d\'){1C(3 b 2l H){5(H[b].1j==i){5c H[b];1i}}};3 c=0;1C(3 b 2l H){H[b].1j=c;c++}};3 2R=6(){3 a=P("1g");3 b=P("1Q");3 c=$("#"+b).5d();3 d=$("#"+b).1c();3 e=$(4e).1c();3 f=$(4e).2t();3 g=$("#"+a).1c();3 h={1P:u.1P,1D:(d)+"1v",1q:"2d"};3 i=u.3E;3 j=10;3 k=C.2B;$("#"+a).1M(C.2B);$("#"+a).1M(C.2A);5((e+f)<3l.5e(g+d+c.1D)){3 l=g;h={1P:u.1P,1D:"-"+l+"1v",1q:"2d"};i="2e";j=9;k=C.2A};11{3r:j,4f:i,12:h,2J:k}};3 3s=6(){5(x.1U["4g"]!=1r){24(x.1U["4g"])(x)}};3 3t=6(){48();5(x.1U["4h"]!=1r){24(x.1U["4h"])(x)}};3 2N=6(a){3 b=P("1g");3 c=a.3Y;5(c==8){a.26();a.2r();N=(N.18==0)?"":N.3R(0,N.18-1)};2O(c){1h 39:1h 40:a.26();a.2r();3j();1i;1h 37:1h 38:a.26();a.2r();3k();1i;1h 27:1h 13:x.2n();28();1i;4i:5(c>46){N+=5f.5g(c)};3 d=T(N);5(d!=-1){$("#"+b).12({1c:\'5h\'});$("#"+b+" a").2o();$(d).2e();3 e=2R();$("#"+b).12(e.12);$("#"+b).12({1q:\'2m\'})}19{$("#"+b+" a").2e();$("#"+b).12({1c:K+\'1v\'})};1i};5(2c("22")==9){O(E).5i()};11 10};3 2Q=6(a){5(41()==10){x.2n()};11 10};3 3u=6(a){5($("#"+E).1a("4j")!=14){O(E).4j()};11 10};1b.3Z=6(){5((x.2f("1l",9)==9)||(x.2f("1E",9).18==0))11;3 a=P("1g");5(1N!=""&&a!=1N){$("#"+1N).4k("3v");$("#"+1N).12({1P:\'0\'})};5($("#"+a).12("1q")=="2d"){y=H[$("#"+a+" a.15").1a("1d")].1t;N="";K=$("#"+a).1c();$("#"+a+" a").2e();$(1o).1f("22",2N);$(1o).1f("35",3u);$(1o).1f("1s",2Q);3 b=2R();$("#"+a).12(b.12);5(b.3r==9){$("#"+a).12({1q:\'2m\'});$("#"+a).1G(b.2J);3s()}19{$("#"+a)[b.4f]("3v",6(){$("#"+a).1G(b.2J);3s()})};5(a!=1N){1N=a}}};1b.2n=6(){3 b=P("1g");5(!$("#"+b).4l(":2a")||L)11;L=9;5($("#"+b).12("1q")=="2d"){11 10};3 c=$("#"+P("1K")).1m().1D;3 d=2R();J=10;5(d.3r==9){$("#"+b).5j({1c:0,1D:c},6(){$("#"+b).12({1c:K+\'1v\',1q:\'2d\'});3t();L=10})}19{$("#"+b).4k("3v",6(a){3t();$("#"+b).12({1P:\'0\'});$("#"+b).12({1c:K+\'1v\'});L=10})};2s();$(1o).1F("22",2N);$(1o).1F("35",3u);$(1o).1F("1s",2Q)};1b.1n=6(i){5(1e(i)=="14"){11 x.2f("1n")}19{x.1I("1n",i)}};1b.4m=6(a){5(1e(a)=="14"||a==9){$("."+C.1R).5k("1k")}19{$("."+C.1R).2i("1k","1c:3m;42:43;1m:2P")}};1b.1I=6(a,b,c){5(1e a=="14"||1e b=="14")11 10;x.1Z[a]=b;5(c!=9){2O(a){1h"1n":4c(a,b);1i;1h"1l":x.1l(b,9);1i;1h"1x":O(E)[a]=b;A=($(v).1a("1B")>0||$(v).1a("1x")==9)?9:10;5(A){3 d=$("#"+E).1c();3 f=P("1g");$("#"+f).12("1c",d+"1v");3 g=P("1K");$("#"+g).2o();3 f=P("1g");$("#"+f).12({1q:\'2m\',1m:\'2K\'});X()};1i;1h"1B":O(E)[a]=b;5(b==0){O(E).1x=10};A=($(v).1a("1B")>0||$(v).1a("1x")==9)?9:10;5(b==0){3 g=P("1K");$("#"+g).2e();3 f=P("1g");$("#"+f).12({1q:\'2d\',1m:\'2P\'});3 h="";5(O(E).1n>=0){3 i=Z(O(E).1n);h=i.1L;3f($("#"+i.1d))};1X(h)}19{3 g=P("1K");$("#"+g).2o();3 f=P("1g");$("#"+f).12({1q:\'2m\',1m:\'2K\'})};1i;4i:4n{O(E)[a]=b}4o(e){};1i}}};1b.2f=6(a,b){5(a==14&&b==14){11 x.1Z};5(a!=14&&b==14){11(x.1Z[a]!=14)?x.1Z[a]:1r};5(a!=14&&b!=14){11 O(E)[a]}};1b.2a=6(a){3 b=P("1Q");5(a==9){$("#"+b).2e()}19 5(a==10){$("#"+b).2o()}19{11 $("#"+b).12("1q")}};1b.5l=6(a,b){3 c=a;3 d=c.1t;3 e=(c.2k==14||c.2k==1r)?d:c.2k;3 f=(c["1p"]==14||c["1p"]==1r)?\'\':c["1p"];3 i=(b==14||b==1r)?O(E).1E.18:b;O(E).1E[i]=21 5m(d,e);5(f!=\'\')O(E).1E[i]["1p"]=f;3 g=Z(i);5(g!=-1){3 h=S(O(E).1E[i],i,"","");$("#"+g.1d).1L(h)}19{3 h=S(O(E).1E[i],i,"","");3 j=P("1g");$("#"+j).5n(h);X()}};1b.2L=6(i){O(E).2L(i);5((Z(i))!=-1){$("#"+Z(i).1d).2L();4d(i,\'d\')};5(O(E).18==0){1X("")}19{3 a=Z(O(E).1n).1L;1X(a)};x.1I("1n",O(E).1n)};1b.1l=6(a,b){O(E).1l=a;3 c=P("1Q");5(a==9){$("#"+c).12("2M",C.1l);x.2n()}19 5(a==10){$("#"+c).12("2M",1)};5(b!=9){x.1I("1l",a)}};1b.3w=6(){11(O(E).3w==14)?1r:O(E).3w};1b.3x=6(){5(2v.18==1){11 O(E).3x(2v[0])}19 5(2v.18==2){11 O(E).3x(2v[0],2v[1])}19{5o{5p:"5q 1j 4l 5r!"}}};1b.4p=6(a){11 O(E).4p(a)};1b.1x=6(a){5(1e(a)=="14"){11 x.2f("1x")}19{x.1I("1x",a)}};1b.1B=6(a){5(1e(a)=="14"){11 x.2f("1B")}19{x.1I("1B",a)}};1b.5s=6(a,b){x.1U[a]=b};1b.5t=6(a){24(x.1U[a])(x)};1b.5u=6(r){5(1e r=="14"||r==0){11 10};3 a=P("1g");3 b=$("#"+a+" a:3h").1c();3 c=(b==0)?u.2S:b;3 d=r*c;$("#"+a).12("1c",d+"1v")};3 4q=6(){x.1I("3y",$.1V.3y);x.1I("3z",$.1V.3z)};3 4r=6(){Y();4b();4q();5(u.2T!=\'\'){24(u.2T)(x)}};4r()};$.1V={3y:\'2.38.4\',3z:"5v 5w",3I:20,4m:6(v){5(v==9){$(".1R").12({1c:\'5x\',1m:\'2K\'})}19{$(".1R").12({1c:\'3m\',1m:\'2P\'})}},5y:6(a,b){11 $(a).1V(b).3p("2g")}};$.3A.3C({1V:6(b){11 1b.3e(6(){3 a=21 3B(1b,b);$(1b).3p(\'2g\',a)})}});5(1e($.3A.1a)==\'14\'){$.3A.1a=6(w,v){5(1e v=="14"){11 $(1b).2i(w)};4n{$(1b).2i(w,v)}4o(e){}}}})(5z);',62,346,'|||var||if|function|||true|||||||||||||||||||||||||||||||||||||||||||||||||||||false|return|css||undefined|selected|||length|else|prop|this|height|id|typeof|bind|postChildID|case|break|index|style|disabled|position|selectedIndex|document|title|display|null|mouseup|text|class|px|ddTitleText|multiple|span|div|mouseover|size|for|top|options|unbind|addClass|trigger|set|useSprite|postTitleID|html|removeClass|bB|showIcon|zIndex|postID|ddOutOfVision|click|mouseout|onActions|msDropDown|img|bJ|background|ddProp||new|keydown||eval|sDiv|preventDefault||bO|bF|visible|oldIndex|bP|none|show|get|dd|postTitleTextID|attr|image|value|in|block|close|hide|parseInt|padding|stopPropagation|bN|scrollTop|find|arguments|visibleRows|keyboardAction|currentKey|postArrowID|borderTop|noBorderTop|focus|dblclick|mousedown|mousemove|src|align|absmiddle|border|relative|remove|opacity|bZ|switch|absolute|ca|bW|rowHeight|onInit|jsonTitle|insideWindow|postElementHolder|postAID|postOPTAID|ddTitle||arrow|ddChild|blur|change|keyup|option||||opt|_|enabled|toLowerCase|each|bD|after|first|bS|bL|bM|Math|0px|bK|next|data|bQ|opp|bX|bY|cb|fast|form|item|version|author|fn|bC|extend|mainCSS|animStyle|Object|postInputhidden|actions|counter|children|className|RegExp|test|postHTML|href|javascript|void|substr|font|width|bottom|bI|bE|bH|keyCode|open||bG|overflow|hidden|previous|left||repeat|bR|trim|backgroundPositions|bT|bU|bV|window|ani|onOpen|onClose|default|onkeyup|slideUp|is|debug|try|catch|namedItem|cc|cd|120|9999|slideDown|_msddHolder|_msdd|_title|_titletext|_child|_msa|_msopta|postInputID|_msinput|_arrow|_inp|keypress|tabindex|msdrpdd|getElementById|cssText|val|nodeName|toString|optgroup|opta|weight|bold|italic|clear|both|label|1px|solid|c3c3c3|outerWidth|toggleClass|min|max|refresh|split|mouseenter|appendTo|no|2px|on|events|100|delete|offset|floor|String|fromCharCode|auto|onkeydown|animate|removeAttr|add|Option|append|throw|message|An|required|addMyEvent|fireEvent|showRows|Marghoob|Suleman|20px|create|jQuery'.split('|'),0,{}));;
(function($){
Drupal.behaviors.contextReactionBlock = {attach: function(context) {
  $('form.context-editor:not(.context-block-processed)')
    .addClass('context-block-processed')
    .each(function() {
      var id = $(this).attr('id');
      Drupal.contextBlockEditor = Drupal.contextBlockEditor || {};
      $(this).bind('init.pageEditor', function(event) {
        Drupal.contextBlockEditor[id] = new DrupalContextBlockEditor($(this));
      });
      $(this).bind('start.pageEditor', function(event, context) {
        // Fallback to first context if param is empty.
        if (!context) {
          context = $(this).data('defaultContext');
        }
        Drupal.contextBlockEditor[id].editStart($(this), context);
      });
      $(this).bind('end.pageEditor', function(event) {
        Drupal.contextBlockEditor[id].editFinish();
      });
    });

  //
  // Admin Form =======================================================
  //
  // ContextBlockForm: Init.
  $('#context-blockform:not(.processed)').each(function() {
    $(this).addClass('processed');
    Drupal.contextBlockForm = new DrupalContextBlockForm($(this));
    Drupal.contextBlockForm.setState();
  });

  // ContextBlockForm: Attach block removal handlers.
  // Lives in behaviors as it may be required for attachment to new DOM elements.
  $('#context-blockform a.remove:not(.processed)').each(function() {
    $(this).addClass('processed');
    $(this).click(function() {
      $(this).parents('tr').eq(0).remove();
      Drupal.contextBlockForm.setState();
      return false;
    });
  });

  // Conceal Section title, subtitle and class
  $('div.context-block-browser', context).nextAll('.form-item').hide();
}};

/**
 * Context block form. Default form for editing context block reactions.
 */
DrupalContextBlockForm = function(blockForm) {
  this.state = {};

  this.setState = function() {
    $('table.context-blockform-region', blockForm).each(function() {
      var region = $(this).attr('id').split('context-blockform-region-')[1];
      var blocks = [];
      $('tr', $(this)).each(function() {
        var bid = $(this).attr('id');
        var weight = $(this).find('select,input').first().val();
        blocks.push({'bid' : bid, 'weight' : weight});
      });
      Drupal.contextBlockForm.state[region] = blocks;
    });

    // Serialize here and set form element value.
    $('form input.context-blockform-state').val(JSON.stringify(this.state));

    // Hide enabled blocks from selector that are used
    $('table.context-blockform-region tr').each(function() {
      var bid = $(this).attr('id');
      $('div.context-blockform-selector input[value='+bid+']').parents('div.form-item').eq(0).hide();
    });
    // Show blocks in selector that are unused
    $('div.context-blockform-selector input').each(function() {
      var bid = $(this).val();
      if ($('table.context-blockform-region tr#'+bid).size() === 0) {
        $(this).parents('div.form-item').eq(0).show();
      }
    });

  };

  // make sure we update the state right before submits, this takes care of an
  // apparent race condition between saving the state and the weights getting set
  // by tabledrag
  $('#ctools-export-ui-edit-item-form').submit(function() { Drupal.contextBlockForm.setState(); });

  // Tabledrag
  // Add additional handlers to update our blocks.
  $.each(Drupal.settings.tableDrag, function(base) {
    var table = $('#' + base + ':not(.processed)', blockForm);
    if (table && table.is('.context-blockform-region')) {
      table.addClass('processed');
      table.bind('mouseup', function(event) {
        Drupal.contextBlockForm.setState();
        return;
      });
    }
  });

  // Add blocks to a region
  $('td.blocks a', blockForm).each(function() {
    $(this).click(function() {
      var region = $(this).attr('href').split('#')[1];
      var base = "context-blockform-region-"+ region;
      var selected = $("div.context-blockform-selector input:checked");
      if (selected.size() > 0) {
        var weight_warn = false;
        var min_weight_option = -10;
        var max_weight_option = 10;
        var max_observed_weight = min_weight_option - 1;
        $('table#' + base + ' tr').each(function() {
          var weight_input_val = $(this).find('select,input').first().val();
          if (+weight_input_val > +max_observed_weight) {
            max_observed_weight = weight_input_val;
          }
        });

        selected.each(function() {
          // create new block markup
          var block = document.createElement('tr');
          var text = $(this).parents('div.form-item').eq(0).hide().children('label').text();
          var select = '<div class="form-item form-type-select"><select class="tabledrag-hide form-select">';
          var i;
          weight_warn = true;
          var selected_weight = max_weight_option;
          if (max_weight_option >= (1 + +max_observed_weight)) {
            selected_weight = ++max_observed_weight;
            weight_warn = false;
          }

          for (i = min_weight_option; i <= max_weight_option; ++i) {
            select += '<option';
            if (i == selected_weight) {
              select += ' selected=selected';
            }
            select += '>' + i + '</option>';
          }
          select += '</select></div>';
          $(block).attr('id', $(this).attr('value')).addClass('draggable');
          $(block).html("<td>"+ text + "</td><td>" + select + "</td><td><a href='' class='remove'>X</a></td>");

          // add block item to region
          //TODO : Fix it so long blocks don't get stuck when added to top regions and dragged towards bottom regions
          Drupal.tableDrag[base].makeDraggable(block);
          $('table#'+base).append(block);
          if ($.cookie('Drupal.tableDrag.showWeight') == 1) {
            $('table#'+base).find('.tabledrag-hide').css('display', '');
            $('table#'+base).find('.tabledrag-handle').css('display', 'none');
          }
          else {
            $('table#'+base).find('.tabledrag-hide').css('display', 'none');
            $('table#'+base).find('.tabledrag-handle').css('display', '');
          }
          Drupal.attachBehaviors($('table#'+base));

          Drupal.contextBlockForm.setState();
          $(this).removeAttr('checked');
        });
        if (weight_warn) {
          alert(Drupal.t('Desired block weight exceeds available weight options, please check weights for blocks before saving'));
        }
      }
      return false;
    });
  });
};

/**
 * Context block editor. AHAH editor for live block reaction editing.
 */
DrupalContextBlockEditor = function(editor) {
  this.editor = editor;
  this.state = {};
  this.blocks = {};
  this.regions = {};

  return this;
};

DrupalContextBlockEditor.prototype = {
  initBlocks : function(blocks) {
    var self = this;
    this.blocks = blocks;
    blocks.each(function() {
      if($(this).hasClass('context-block-empty')) {
        $(this).removeClass('context-block-hidden');
      }
      $(this).addClass('draggable');
      $(this).prepend($('<a class="context-block-handle"></a>'));
      $(this).prepend($('<a class="context-block-remove"></a>').click(function() {
        $(this).parent ('.block').eq(0).fadeOut('medium', function() {
          $(this).remove();
          self.updateBlocks();
        });
        return false;
      }));
    });
  },
  initRegions : function(regions) {
    this.regions = regions;
    var ref = this;

    $(regions).not('.context-ui-processed')
      .each(function(index, el) {
        $('.context-ui-add-link', el).click(function(e){
          ref.showBlockBrowser($(this).parent());
        }).addClass('context-ui-processed');
      });
    $('.context-block-browser').hide();
  },
  showBlockBrowser : function(region) {
    var toggled = false;
    //figure out the id of the context
    var activeId = $('.context-editing', this.editor).attr('id').replace('-trigger', ''),
    context = $('#' + activeId)[0];

    this.browser = $('.context-block-browser', context).addClass('active');

    //add the filter element to the block browser
    if (!this.browser.has('input.filter').size()) {
      var parent = $('.block-browser-sidebar .filter', this.browser);
      var list = $('.blocks', this.browser);
      new Drupal.Filter (list, false, '.context-block-addable', parent);
    }
    //show a dialog for the blocks list
    this.browser.show().dialog({
      modal : true,
      close : function() {
        $(this).dialog('destroy');
        //reshow all the categories
        $('.category', this).show();
        $(this).hide().appendTo(context).removeClass('active');
      },
      height: (.8 * $(window).height()),
      minHeight:400,
      minWidth:680,
      width:680
    });

    //handle showing / hiding block items when a different category is selected
    $('.context-block-browser-categories', this.browser).change(function(e) {
      //if no category is selected we want to show all the items
      if ($(this).val() == 0) {
        $('.category', self.browser).show();
      } else {
        $('.category', self.browser).hide();
        $('.category-' + $(this).val(), self.browser).show();
      }
    });

    //if we already have the function for a different context, rebind it so we don't get dupes
    if(this.addToRegion) {
      $('.context-block-addable', this.browser).unbind('click.addToRegion')
    }

    //protected function for adding a clicked block to a region
    var self = this;
    this.addToRegion = function(e){
      var ui = {
        'item' : $(this).clone(),
        'sender' : $(region)
      };
      $(this).parents('.context-block-browser.active').dialog('close');
      $(region).after(ui.item);
      self.addBlock(e, ui, this.editor, activeId.replace('context-editable-', ''));
    };

    $('.context-block-addable', this.browser).bind('click.addToRegion', this.addToRegion);
  },
  // Update UI to match the current block states.
  updateBlocks : function() {
    var browser = $('div.context-block-browser');

    // For all enabled blocks, mark corresponding addables as having been added.
    $('.block, .admin-block').each(function() {
      var bid = $(this).attr('id').split('block-')[1]; // Ugh.
    });
    // For all hidden addables with no corresponding blocks, mark as addable.
    $('.context-block-item', browser).each(function() {
      var bid = $(this).attr('id').split('context-block-addable-')[1];
    });

    // Mark empty regions.
    $(this.regions).each(function() {
      if ($('.block:has(a.context-block)', this).size() > 0) {
        $(this).removeClass('context-block-region-empty');
      }
      else {
        $(this).addClass('context-block-region-empty');
      }
    });
  },
  // Live update a region
  updateRegion : function(event, ui, region, op) {
    switch (op) {
      case 'over':
        $(region).removeClass('context-block-region-empty');
        break;
      case 'out':
        if (
          // jQuery UI 1.8
          $('.draggable-placeholder', region).size() === 1 &&
          $('.block:has(a.context-block)', region).size() == 0
        ) {
          $(region).addClass('context-block-region-empty');
        }
        break;
    }
  },
  // Remove script elements while dragging & dropping.
  scriptFix : function(event, ui, editor, context) {
    if ($('script', ui.item)) {
      var placeholder = $(Drupal.settings.contextBlockEditor.scriptPlaceholder);
      var label = $('div.handle label', ui.item).text();
      placeholder.children('strong').html(label);
      $('script', ui.item).parent().empty().append(placeholder);
    }
  },
  // Add a block to a region through an AJAX load of the block contents.
  addBlock : function(event, ui, editor, context) {
    var self = this;
    if (ui.item.is('.context-block-addable')) {
      var bid = ui.item.attr('id').split('context-block-addable-')[1];

      // Construct query params for our AJAX block request.
      var params = Drupal.settings.contextBlockEditor.params;
      params.context_block = bid + ',' + context;
      if (!Drupal.settings.contextBlockEditor.block_tokens || !Drupal.settings.contextBlockEditor.block_tokens[bid]) {
        alert(Drupal.t('An error occurred trying to retrieve block content. Please contact a site administer.'));
        return;
     }
     params.context_token = Drupal.settings.contextBlockEditor.block_tokens[bid];

      // Replace item with loading block.
      //ui.sender.append(ui.item);

      var blockLoading = $('<div class="context-block-item context-block-loading"><span class="icon"></span></div>');
      ui.item.addClass('context-block-added');
      ui.item.after(blockLoading);


      $.getJSON(Drupal.settings.contextBlockEditor.path, params, function(data) {
        if (data.status) {
          var newBlock = $(data.block);
          if ($('script', newBlock)) {
            $('script', newBlock).remove();
          }
          blockLoading.fadeOut(function() {
            $(this).replaceWith(newBlock);
            self.initBlocks(newBlock);
            self.updateBlocks();
            Drupal.attachBehaviors(newBlock);
          });
        }
        else {
          blockLoading.fadeOut(function() { $(this).remove(); });
        }
      });
    }
    else if (ui.item.is(':has(a.context-block)')) {
      self.updateBlocks();
    }
  },
  // Update form hidden field with JSON representation of current block visibility states.
  setState : function() {
    var self = this;

    $(this.regions).each(function() {
      var region = $('.context-block-region', this).attr('id').split('context-block-region-')[1];
      var blocks = [];
      $('a.context-block', $(this)).each(function() {
        if ($(this).attr('class').indexOf('edit-') != -1) {
          var bid = $(this).attr('id').split('context-block-')[1];
          var context = $(this).attr('class').split('edit-')[1].split(' ')[0];
          context = context ? context : 0;
          var block = {'bid': bid, 'context': context};
          blocks.push(block);
        }
      });
      self.state[region] = blocks;
    });
    // Serialize here and set form element value.
    $('input.context-block-editor-state', this.editor).val(JSON.stringify(this.state));
  },
  //Disable text selection.
  disableTextSelect : function() {
    if ($.browser.safari) {
      $('.block:has(a.context-block):not(:has(input,textarea))').css('WebkitUserSelect','none');
    }
    else if ($.browser.mozilla) {
      $('.block:has(a.context-block):not(:has(input,textarea))').css('MozUserSelect','none');
    }
    else if ($.browser.msie) {
      $('.block:has(a.context-block):not(:has(input,textarea))').bind('selectstart.contextBlockEditor', function() { return false; });
    }
    else {
      $(this).bind('mousedown.contextBlockEditor', function() { return false; });
    }
  },
  //Enable text selection.
  enableTextSelect : function() {
    if ($.browser.safari) {
      $('*').css('WebkitUserSelect','');
    }
    else if ($.browser.mozilla) {
      $('*').css('MozUserSelect','');
    }
    else if ($.browser.msie) {
      $('*').unbind('selectstart.contextBlockEditor');
    }
    else {
      $(this).unbind('mousedown.contextBlockEditor');
    }
  },
  // Start editing. Attach handlers, begin draggable/sortables.
  editStart : function(editor, context) {
    var self = this;
    // This is redundant to the start handler found in context_ui.js.
    // However it's necessary that we trigger this class addition before
    // we call .sortable() as the empty regions need to be visible.
    $(document.body).addClass('context-editing');
    this.editor.addClass('context-editing');
    this.disableTextSelect();
    this.initBlocks($('.block:has(a.context-block.edit-'+context+')'));
    this.initRegions($('.context-block-region').parent());
    this.updateBlocks();

    $('a.context_ui_dialog-stop').hide();

    $('.editing-context-label').remove();
    var label = $('#context-editable-trigger-'+context+' .label').text();
    label = Drupal.t('Now Editing: ') + label;
    editor.parent().parent()
      .prepend('<div class="editing-context-label">'+ label + '</div>');

    // First pass, enable sortables on all regions.
    $(this.regions).each(function() {
      var region = $(this);
      var params = {
        revert: true,
        dropOnEmpty: true,
        placeholder: 'draggable-placeholder',
        forcePlaceholderSize: true,
        items: '> .block:has(a.context-block.editable)',
        handle: 'a.context-block-handle',
        start: function(event, ui) { self.scriptFix(event, ui, editor, context); },
        stop: function(event, ui) { self.addBlock(event, ui, editor, context); },
        receive: function(event, ui) { self.addBlock(event, ui, editor, context); },
        over: function(event, ui) { self.updateRegion(event, ui, region, 'over'); },
        out: function(event, ui) { self.updateRegion(event, ui, region, 'out'); },
        cursorAt: {left: 300, top: 0}
      };
      region.sortable(params);
    });

    // Second pass, hook up all regions via connectWith to each other.
    $(this.regions).each(function() {
      $(this).sortable('option', 'connectWith', ['.ui-sortable']);
    });

    // Terrible, terrible workaround for parentoffset issue in Safari.
    // The proper fix for this issue has been committed to jQuery UI, but was
    // not included in the 1.6 release. Therefore, we do a browser agent hack
    // to ensure that Safari users are covered by the offset fix found here:
    // http://dev.jqueryui.com/changeset/2073.
    if ($.ui.version === '1.6' && $.browser.safari) {
      $.browser.mozilla = true;
    }
  },
  // Finish editing. Remove handlers.
  editFinish : function() {
    this.editor.removeClass('context-editing');
    this.enableTextSelect();

    $('.editing-context-label').remove();

    // Remove UI elements.
    $(this.blocks).each(function() {
      $('a.context-block-handle, a.context-block-remove', this).remove();
      if($(this).hasClass('context-block-empty')) {
        $(this).addClass('context-block-hidden');
      }
      $(this).removeClass('draggable');
    });

    $('a.context_ui_dialog-stop').show();

    this.regions.sortable('destroy');

    this.setState();

    // Unhack the user agent.
    if ($.ui.version === '1.6' && $.browser.safari) {
      $.browser.mozilla = false;
    }
  }
}; //End of DrupalContextBlockEditor prototype

})(jQuery);
;
/**
 * This is part of a patch to address a jQueryUI bug.  The bug is responsible
 * for the inability to scroll a page when a modal dialog is active. If the content
 * of the dialog extends beyond the bottom of the viewport, the user is only able
 * to scroll with a mousewheel or up/down keyboard keys.
 *
 * @see http://bugs.jqueryui.com/ticket/4671
 * @see https://bugs.webkit.org/show_bug.cgi?id=19033
 * @see /views_ui.module
 * @see /js/jquery.ui.dialog.min.js
 *
 * This javascript patch overwrites the $.ui.dialog.overlay.events object to remove
 * the mousedown, mouseup and click events from the list of events that are bound
 * in $.ui.dialog.overlay.create
 *
 * The original code for this object:
 * $.ui.dialog.overlay.events: $.map('focus,mousedown,mouseup,keydown,keypress,click'.split(','),
 *  function(event) { return event + '.dialog-overlay'; }).join(' '),
 *
 */

(function ($, undefined) {
  if ($.ui && $.ui.dialog) {
    $.ui.dialog.overlay.events = $.map('focus,keydown,keypress'.split(','),
                                 function(event) { return event + '.dialog-overlay'; }).join(' ');
  }
}(jQuery));
;
Drupal.locale = { 'strings': {"Content":"Content","Location":"Location","Group":"Group","ERR047":"You have already registered for this class","ERR054":"There are no courses under this program.","ERR055":"Login again since your session has expired","ERR057":"System error has occurred. Contact Support.","MSG247":"CartAdded","MSG248":"Registration completed.","Learning Plan":"Learning Plan","Certification":"Certification","Curricula":"Curricula","English":"English","Register":"Register","Sign In":"Sign In","Registered":"Registered","Completed":"Completed","Enrolled":"Enrolled","Canceled":"Canceled","Pending":"Pending","Expired":"Expired","Survey":"Survey","ERR061":"There are no classes under the course.","ERR066":"Select a class in each course.","LBL001":"Sign In","LBL012":"Enrolled","LBL013":"Completed","LBL014":"Incomplete","LBL015":"Canceled","LBL017":"title a-z","LBL018":"title z-a","LBL019":"date new to old","LBL020":"date old to new","LBL021":"type","LBL022":"mandatory","LBL024":"Expired","LBL025":"Enrolled by","LBL026":"Canceled On","LBL027":"Completed On","LBL028":"Expired On","LBL032":"Registered","LBL034":"Completed","LBL036":"Type","LBL038":"Language","LBL041":"Location","LBL042":"Date","LBL044":"newly listed","LBL045":"start date","LBL046":"Full","LBL049":"Added to cart","LBL050":"Add to cart","LBL052":"Seat left","LBL053":"Seats left","LBL054":"Username","LBL063":"Edit","LBL073":"Job Title","LBL074":"Timezone","LBL082":"Remove","LBL083":"Title","LBL086":"Instructor","German":"German","Spanish":"Spanish","French":"French","Italian":"Italian","Japanese":"Japanese","Korean":"Korean","Russian":"Russian","MSG251":"You have successfully shared the  ","LBL087":"Course","LBL088":"Enter a course","LBL096":"Code","LBL102":"Status","LBL106":"Seats","LBL107":"Name","LBL108":"Action","LBL109":"Cancel","LBL112":"mm-dd-yyyy","LBL113":"End: mm-dd-yyyy","LBL116":"Email From","LBL117":"Email To","LBL121":"optional","LBL123":"Close","LBL126":"Waitlist seat left","LBL127":"Waitlist seats left","LBL133":"Job Role","LBL134":"Manager Name","LBL137":"Organization Name","LBL173":"User Type","LBL181":"Type a Username","MSG262":"No search results found.","MSG263":"Do you want to cancel the enrollment?","MSG264":"The entire amount paid will be refunded back to your account","MSG266":"Do you still want to cancel the class registration?","LBL186":"enrolled","LBL190":"Waitlisted","LBL191":"Tags","LBL193":"Type a tag","Organization":"Organization","MSG268":"No courses have been associated","LBL199":"Launch","LBL202":"Attempts Left","LBL203":"Survey","LBL205":"Certificate","LBL218":"Select a date","LBL229":"Description","LBL231":"Attachments","LBL232":"(click to download)","LBL234":"Complete By","LBL247":"Course Equivalence","LBL251":"Start","LBL263":"Class Code","LBL271":" already exist.","LBL274":"Assessment","LBL275":"Enrollments","LBL277":"Sessions","LBL286":"Delete","LBL287":"Add","LBL295":"Session Name","Yes":"Yes","No":"No","LBL304":"Search","LBL308":"Print","LBL316":"Classroom","LBL324":"Type a question","LBL325":"Question","ERR101":" is required.","ERR106":"Select one or more.","LBL342":"Yes","LBL343":"No","MSG311":"Users can register multiple times to the class.","ERR119":"Select one or more Users.","LBL416":"Loading...","LBL426":"Mandatory","LBL427":"Recommended","LBL428":"Any","LBL429":"Recertify","LBL432":"System","LBL435":"Class","LBL545":"Type title or code","CATALOG":"CATALOG","REPORTS":"Reports","Assessment":"Assessment","LBL569":"Done","LBL573":"Activate","MSG357":"Are you sure you want to delete the ","LBL604":"Validity","LBL605":"days","LBL621":"To","Course":"Course","Class":"Class","Classroom":"Classroom","Video":"Video","Virtual Class":"Virtual Class","Web-based":"Web-based","LBL646":"Selected","LBL647":"AND","LBL648":"Starts on","LBL649":"From","LBL661":"View Option","LBL662":"Horizontal","LBL663":"Vertical","MSG379":"No classes exist under one of the associated courses. Registration failed. Contact Support Team.","MSG380":"No seats available for this program","Training Plan":"Training Plan","MSG381":"Your search did not return any results","LBL651":"Re-Certify","Mandatory":"Mandatory","Recommended":"Recommended","Optional":"Optional","LBL674":"Select","LBL668":"Score","LBL670":"Session Details","LBL675":"Select Start Date","LBL676":"Select End Date","MSG395":"Select atleast one option.","MSG399":"Paid training cannot be rescheduled. Contact Support.","MSG400":"Cancel the Course registration and Register again.","MSG401":"will be deducted if you cancel the class.","MSG402":"An amount of","MSG403":"There are no records in the system","LBL677":"Days Remaining","LBL680":"Canceled by","LBL681":"Completed by","LBL685":"completed","LBL686":"incomplete","LBL687":"expired","LBL688":"canceled","LBL689":"pending","LBL691":"Full Name","LBL692":"Previous","LBL693":"Next","LBL694":"Preview","LBL698":"Incomplete","LBL699":"Relevant to status","LBL702":"Type Course Title","LBL704":"Enrolled On","LBL706":"Completion Date","LBL726":"Not Registered","ERR149":"Select a class in each course.","LBL721":"Registration Status","LBL716":"Select Class","ERR152":"Invalid email address in","MSG419":"The session is completed.","MSG420":"The session has not started, try again at","MSG424":"Cancellation in progress.....","LBL713":"More","MSG430":"You are already enrolled in this program","LBL735":"Expires On","LBL737":"Web-based","LBL738":"Virtual Class","LBL739":"Video","LBL740":"Certification","LBL741":"Curricula","LBL742":"Learning Plan","LBL743":"C","LBL746":"R","LBL747":"Marked Complete","LBL749":"Confirmation","LBL756":"Type a Content name","LBL763":"Starts At","Not Registered":"Not Registered","Instructor":"Instructor","ERR154":"System error, Contact Support Team.","LBL766":"Type a Class Title or Code","MSG498":"There is no content attached to the class.","Compliance":"Compliance","ERR169":" are required.","MSG511":"Not Started","LBL816":"View","LBL820":"Order Id","LBL846":"Format Report Body","LBL847":"Format Report Header","LBL848":"Select options","MSG522":"Are you sure you want to delete?","LBL852":"User Profile","LBL854":"Lesson","LBL857":"Attempts","LBL867":"Reply","LBL868":"Add Comment","LBL869":"Replies","LBL871":"Post","MSG530":"There are no discussion.","MSG531":"There are no topics for the discussion.","MSG532":"posted by","MSG533":"posted on","MSG534":"There are no comments for the topic.","MSG535":"You have already registered for the class","MSG536":"Do you want to register again?","LBL880":"Join","LBL889":"Lessons","MSG538":"There are no skills for the user.","LBL893":"Minimize","LBL894":"maximize","LBL910":"Day","MSG550":"There are no activity for the user.","Simplified Chinese":"Simplified Chinese","LBL930":"Unlock","LBL941":"RegFrom","LBL945":"on","LBL951":"Type Class Title","In progress":"In progress","Incomplete":"Incomplete","No Show":"No Show","Attended":"Attended","Waitlist":"Waitlist","Manager":"Manager","MSG588":"per page","MSG605":"There are no users to be transferred.","LBL943":"Change","LBL929":"Message","LBL981":"of","LBL983":"Keyword","LBL989":"Page","LBL1003":"Module","LBL1039":"All","MSG639":"character types are lower case, upper case, digit or punctuation","MSG644":"The group name","LBL1064":"Points","Check":"Check","LBL1123":"Version","LBL1140":"Comment","LBL1145":"Insert","LBL1146":"Select valid To Date","LBL1154":"Select valid From Date","LBL1155":"To date cannot be less than the From date","MSG687":"Select an option.","LBL1163":"Do you want to confirm the order?","LBL1164":"Do you want to cancel the order?","LBL1165":"Refund","MSG692":"Cannot register since there is price associated to the Class.Contact Support.","LBL1193":"Incomplete on","LBL1207":"Schedule","LBL1224":"Last Run","LBL1230":"Type name or username","LBL1239":"Next Run","LBL1235":"Enter message. If empty SMS will not be sent to users.","LBL1246":"Priced training cannot be canceled. Cancellation can be done from the order screen.","LBL1253":"Pre","ERR245":"Attempts should not be less than 1","LBL1267":"You have already registered for another class of the same course","LBL1268":"Do you want to register to another class?","MSG711":"Access is not set. All users will be registered to the class if access is not set. Do you want to set Access?","Groups":"Groups","by":"by","Share":"Share","LBL1270":"Type a group name","Search for refine":"Search to refine","The location is associated to class":"The location is associated to class","You need to complete":"You need to complete","LBL1272":"Uncheck","E-MAIL":"E-MAIL","EMBED":"EMBED","LBL1275":"Widget Size","LBL1276":"Show thumbnail image","LBL1277":"Show description","LBL1278":"Show Register button","LBL1279":"Show Separator line","LBL1280":"Pass URL","ERR248":"Select the required details and activate the discount.","Reregister":"Reregister","!name cannot be longer than %max characters but is currently %length characters long.":"!name cannot be longer than %max characters but is currently %length characters long.","Panel":"Panel","MSG729":"Unchecking the manager role will remove all direct and indirect reports for this user. Do you want to continue?","MSG727":"Attempts not set for one or more content.","MSG728":"Do you want to proceed?","LBL1283":"Not Set","LBL1284":"Success Status","failed":"Failed","passed":"Passed","unknown":"Unknown","MSG730":"User enrollment is in progress. An email will be sent to you after it is done.","MSG746":"There are no currency to be added.","MSG747":"Are you sure you want to delete the currency","Waived":"Waived","MSG754":"Content is playing in a window. Close the window before launching another content."} };;
