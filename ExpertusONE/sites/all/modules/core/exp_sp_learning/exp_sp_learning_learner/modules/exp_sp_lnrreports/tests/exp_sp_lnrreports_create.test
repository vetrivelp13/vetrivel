<?php 
class AdminReportCreation extends ExpertusWebTestCase {
	private $test_case = array();
	private $webError = "Website encountered an unexpected error";
	
	public static function getInfo() {
		return array(
					'name' => 'Reports creation',
				'description' => 'RReports creation',
				'group' => 'exp_sp_lnrreports',
		);
	}
	
	public function setUp(){
		$this->getTestCases();
  	    parent::setUp();
	}
	
	public function testreportcreation(){
	    $testcases = $this->test_case['reports_create'];
	  	$usr = new stdClass();
	  	$usr->name =  'admin';
	  	$usr->pass_raw = 'welcome';
	  	$this->drupalLogin($usr);
	  	$this->getReportsPagenew();

		$this->AdminCreateReport();
		$this->AdminCreateReport('edit'); //for report edit
		$this->AdminCreateReportInDesignWizard('edit');
	    $this->LaunchReport();
	}

	private function getReportsPagenew(){
		$this->setHttpReferer('reports');
		$this->drupalGet('reports');
		$this->assertRaw('<div id="searchReportsRecordsPaint" class="search-record-paint"><table id="paintLearnerReportsResults"></table></div>','Form Rendered Successfully', 'exp_sp_lnrreports');
		$this->assertNoText(t($this->webError),'Web errors not found','lnrreports_search');
	}
	private function AdminCreateReport($type='') {
		debug($type);
		$this->setHttpReferer('reports');
		$modalContent = '<div class="popupLeftCorner">
   <div class="popupRightCorner">
      <div class="ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix"><span class="ui-dialog-title" id="ui-dialog-title-report-select-wizard">Report</span><a href="#" class="ui-dialog-titlebar-close ui-corner-all" role="button"><span class="ui-icon ui-icon-closethick">close</span></a></div>
   </div>
</div>
<div id="report-select-wizard" style="padding: 0px; width: auto; min-height: 0px; height: 465.2px;" class="ui-dialog-content ui-widget-content edit-report-wizard">
   <div class="new-report">
      <div class="report-wizard-image" onclick=""></div>
      <a href="javascript:void(0)" onclick="" class="new-report-title">Report Design Wizard</a>
      <div class="report-green-title">What can I do with the Report Design Wizard?</div>
      <div class="new-report-names"><span class="orange-arrow "></span>Drag and Drop Report Creation</div>
      <div class="new-report-names"><span class="orange-arrow "></span>Inline Editing</div>
      <div class="new-report-names"><span class="orange-arrow "></span>Create Narrow Filters</div>
      <div class="new-report-names"><span class="orange-arrow "></span>Export as PDF or CSV</div>
      <div class="new-report-names"><span class="orange-arrow "></span>Create or choose your Report Theme</div>
   </div>
   <div class="new-report">
      <div class="report-sql-query-builder-image" onclick=""></div>
      <a href="javascript:void(0)" onclick="" class="new-report-title">Report Query Builder</a>
      <div class="report-green-title">Write Custom SQL Statement and design Reports</div>
      <div class="new-report-names"><span class="orange-arrow "></span>Inline Editing</div>
      <div class="new-report-names"><span class="orange-arrow "></span>Create Narrow Filters</div>
      <div class="new-report-names"><span class="orange-arrow "></span>Export as PDF or CSV</div>
      <div class="new-report-names"><span class="orange-arrow "></span>Create or choose your Report Theme</div>
   </div>
</div>
<div class="popupBotLeftCorner ui-helper-clearfix">
   <div class="popupBotRightCorner">
      <div class="popupBotmiddle"></div>
   </div>
</div>';
		 
		$dom = new DOMDocument();
		$dom->loadHTML($this->content);
		$node = $dom->getElementsByTagName('body')->item(0);
		 
		$newDom = new DOMDocument();
		$newDom->loadHTML($modalContent);
		$newNode = $dom->importNode($newDom->getElementsByTagName('div')->item(0), TRUE);;
		$node->appendChild($newNode);
		 
		$this->content = $dom->saveHTML();
		$this->verbose('Request to: ' . $this->getUrl() .
		 '<hr />' . $this->content);
		
		
		$edit = array();
		// Save form
		$param = array();
		$post_field = array('submit'=>$param);
		$this->setHttpReferer('reports');
		$out = $this->drupalPostAJAX(null,$edit,array(),'?q=administration/report-search/load-report-list-items',array(),array(),'',$post_field);
		$param = array(
				'qryval' =>'select * from slv_class where classtitle="Compliance course";' 
		);
		if($type=='edit'){
			$param = array(
					'qryval' =>'select * from slv_class where classtitle="test";'
			);
			$report_id = db_query("select id from slt_report_details where title = 'reports for user list in admin groups'  order by id desc limit 1;")->fetchField();
		}
		
		$post_field = array('submit'=>$param);
		if($type=='edit')
		$out = $this->drupalPostAJAX(null,$edit,array(),'?q=administration/report-search/qry-build/'.$report_id.'',array(),array(),'',$post_field);
		else 
		$out = $this->drupalPostAJAX(null,$edit,array(),'?q=administration/report-search/qry-build/undefined',array(),array(),'',$post_field);
				
		$report_id = $out['report_id'];
		Debug($report_id);
		$this->drupalGet("learning/report-result-content/".$report_id."/1/0");
		$this->drupalGet("administration/report-search/load-report-details/'.$report_id.'");
		//$this->setHttpReferer('reports');
		$this->setHttpReferer('reports');
		$this->drupalGet('reports');
		$this->verbose('Request to: ' . $this->getUrl() . '<hr />' . $this->content);
		
		$edit = array();
		$params = array(
				'report_id' =>$report_id,
				'report_builder_type' => 'query_builder',
				'set_mainquerform_ReportDescription'=> 'reports for user list in admin groups',
				'set_mainquerform_ReportTitle' => 'reports for user list in admin groups',
				'set_mainquerform_report_visibility_type' =>	1,
				'set_mainquerform_statusType' =>'cre_rpt_rps_atv',
				'set_report_type' => 'cre_rpt_rpc_ass',
				'set_mainquerform_Theme_Name' => ''
				
		);
		if($type=='edit'){
			$params['set_mainquerform_ReportDescription']= 'Description changed';
		}
		debug($params);
		$post_fields = array('submit'=>$params);
		
		$out = $this->drupalPostAJAX(null,$edit,array(),'?q=administration/report-search/addreportpublish',array(),array(),'',$post_fields);
		
		//$out = $this->drupalPost('administration/report-search/addreportpublish', $params, t('Save'));
		Debug($out);
	//	}
	}
	private function AdminCreateReportInDesignWizard() {
		$this->setHttpReferer('reports');
		$edit = array();
		$params = array(
			'table_sql'=> 'slt_course_class,slt_course_class_session',
			'table_alias_sql' => 'Classes,ClassSession',
			'column_sql'=> 'slt_course_class.title,slt_course_class.code,slt_course_class.short_description,slt_course_class.status,slt_course_class_session.title,slt_course_class_session.start_date,slt_course_class_session.end_date,slt_course_class_session.start_time,slt_course_class_session.end_time,slt_course_class_session.capacity_max',
			'column_alias_sql'=>'Class title,Class Code,Class Short Description,Class Status,Class Session Title,Class Session Start Date,Class Session End Date,Class Session Start Time,Class Session End Time,Capacity Max',
			'report_details_id'=>'',
			'rel_column' => 'slt_course_class.id=slt_course_class_session.class_id,slt_course_class_session.class_id=slt_course_class.id',
			'map_list_items'=> '0,0,0,1,0,0,0,0,0,0',
			'window_positions' => 'line_tbl_slt_course_class-893.59375-125.59375,line_tbl_slt_course_class_session-758.59375-335.59375',
		
		);
		$post_fields = array('submit'=>$params);
		$out = $this->drupalPostAJAX(null,$edit,array(),'?q=administration/report/search/edit-report-data',array(),array(),'',$post_fields);
		$report_id = $out['report_id'];
		//$out = $this->drupalPost('administration/report-search/addreportpublish', $params, t('Save'));
		debug($out);
		$edit = array();
		$params = array(
				'report_id' =>$report_id,
				'report_builder_type' => 'query_builder',
				'set_mainquerform_ReportDescription'=> 'reports for session details',
				'set_mainquerform_ReportTitle' => 'reports for session details',
				'set_mainquerform_report_visibility_type' =>	1,
				'set_mainquerform_statusType' =>'cre_rpt_rps_atv',
				'set_report_type' => 'cre_rpt_rpc_ass',
				'set_mainquerform_Theme_Name' => ''
		
		);
		if($type=='edit'){
			$params['set_mainquerform_ReportDescription']= 'Description changed';
		}
		//debug($params);
		$post_fields = array('submit'=>$params);
		
		$out = $this->drupalPostAJAX(null,$edit,array(),'?q=administration/report-search/addreportpublish',array(),array(),'',$post_fields);
		$edit = array();
		$params= array(
				'inputNameValues' => '0',
				'rows'=>'10',
				'page'=>'1',		
				'sord'=>'desc',
		);
		$post_fields = array('submit'=>$params);
		$this->setHttpReferer('reports');
		//$out = $this->drupalPostAJAX(null,$edit,array(),'?q=learning/report-result-content/'.$report_id.'/0/1',array(),array(),'',$post_fields);
		//debug($out);
		$srcRc = $this->drupalGetAJAX('learning/report-result-content/'.$report_id.'/0/1',array('query'=>$params));
		debug($srcRc);
		
				
	}
	private function LaunchReport(){
		$params= array(
				'inputNameValues' => '0',
				'rows'=>'10',
				'page'=>'1',
				'sord'=>'desc',
		);
		$report_id = db_query("select id from slt_report_details where title = 'reports for user list in admin groups'  order by id desc limit 1;")->fetchField();
		$srcRc = $this->drupalGetAJAX('learning/report-result-content/'.$report_id.'/0/1',array('query'=>$params));
	}
	private function getTestCases(){
		//sleep(20);
		$this->test_case = array(
				'reports_basic' => array(
		    // Validate Filters
						array('<div class="block-findtraining-middle srch-filter-heading">Refine</div>','Refine filter header available','exp_sp_lnrreports'),
						// Validate Status filter options
						array('<a class="search-heading">Status</a>','Status filter header available','exp_sp_lnrreports'),
						array('<label for="lrn_srch_publish" class="checkbox-unselected"><input id="lrn_srch_publish" class="reports-status srch-checkbox-cls" value="cre_rpt_rps_atv" onclick=\'$("#lnr-reports-search").data("lnrreportssearch").searchAction();\' type="checkbox"></label>','Published checkbox available','exp_sp_lnrreports'),
						array('<span class="title-lengthy-text">Published</span>','Published label available','exp_sp_lnrreports'),
						array('<label for="lrn_srch_unpublish" class="checkbox-unselected"><input id="lrn_srch_unpublish" class="reports-status srch-checkbox-cls" value="cre_rpt_rps_itv" onclick=\'$("#lnr-reports-search").data("lnrreportssearch").searchAction();\' type="checkbox"></label>','Unpublished checkbox available','exp_sp_lnrreports'),
						array('<span class="title-lengthy-text">Unpublished</span>','Unpublished label available','exp_sp_lnrreports'),
						array('<a class="search-heading">Group</a>','Group filter header available','exp_sp_lnrreports'),
	
	
	
				),
		);
	}

	
}

?>