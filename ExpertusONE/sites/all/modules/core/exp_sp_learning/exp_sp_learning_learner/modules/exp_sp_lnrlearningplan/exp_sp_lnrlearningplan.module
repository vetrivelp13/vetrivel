<?php
/**
 * Implementation of hook_init().
 */
function exp_sp_lnrlearningplan_init() {
  try{
  global $user;
  if((arg(1) == 'enrollment-search') && ($user->uid==0)) {
    $query = array('destination' => "learning/enrollment-search");
    drupal_goto('/', array('query' => $query));
  }
  }catch (Exception $ex) {
    watchdog_exception('exp_sp_lnrlearningplan_init', $ex);
    expertusErrorThrow($ex);
  } 
}
/**
 * Implementation of hook_block_info().
 */
function exp_sp_lnrlearningplan_block_info() {
  try{
  $blocks = array();
	$blocks['tab_my_learningplan_customized'] = array(
    'info' => t('My Learning Plan Customized'),
  	'cache' => DRUPAL_CACHE_PER_ROLE,
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages' => 'learning/enrollment-search'
  );
  $blocks['tab_my_learningplan'] = array(
    'info' => t('My Learning Plan'),
  	'cache' => DRUPAL_CACHE_PER_ROLE,
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages' => 'learning/enrollment-search'
  );
  return $blocks;
 }catch (Exception $ex) {
    watchdog_exception('exp_sp_lnrlearningplan_block_info', $ex);
    expertusErrorThrow($ex);
  }   
}

function exp_sp_lnrlearningplan_menu() {
  try{
  $items = array();
  
  $items['learning/enrollment-search'] = array(
    'title' => 'Search Learning Plan',
    'page callback' => 'empty_value',
    'access arguments' => array('expertus learner'),
    'type' => MENU_CALLBACK
  );
  $items['learning/learningplan-search/all'] = array(
    'title' => 'Search Learning Plan',
    'page callback' => 'getLPSearchResults',
    'access arguments' => array('expertus learner'),
    'type' => MENU_CALLBACK,
    'file' => 'exp_sp_lnrlearningplan.inc'
  );
  $items['learning/learningplan-search/tp-search'] = array(
    'title' => 'Search Learning Plan',
    'page callback' => 'getAutoCompleteForTPText',
    'access arguments' => array('expertus learner'),
    'type' => MENU_CALLBACK,
    'file' => 'exp_sp_lnrlearningplan.inc'
  );
  $items['ajax/lp-course/%/%/%'] = array (
    'title' => 'Get Learning Plan List Of Courses',
    'page callback' => 'getLPCourses',
    'page arguments' => array(2,3,4),
    'type' => MENU_CALLBACK,
    'access arguments' => array('expertus learner'),
    'file' => 'exp_sp_lnrlearningplan.inc'
  );
  $items['ajax/lp-class/%/%/%/%/%'] = array (
    'title' => 'Get Learning Plan List Of Courses',
    'page callback' => 'getLPClasses',
    'page arguments' => array(2,3,4,5,6),
    'type' => MENU_CALLBACK,
    'access arguments' => array('expertus learner'),
    'file' => 'exp_sp_lnrlearningplan.inc'
  );
  
  $items['ajax/lp-modulelist/%'] = array (
  		'title' => 'Get Learning Plan List Of Courses',
  		'page callback' => 'getCertificationModules',
  		'page arguments' => array(2),
    'type' => MENU_CALLBACK,
    'access arguments' => array('expertus learner'),
    'file' => 'exp_sp_lnrlearningplan.inc'
  );
  $items['ajax/drop-lp/%/%/%/%/%/%'] = array (
    'title' => 'Drop enrollment',
    'page callback' => 'getDropTrainingProgram',
    'page arguments' => array(2,3,4,5,6,7),
    'type' => MENU_CALLBACK,
    'access arguments' => array('expertus learner'),
    'file' => 'exp_sp_lnrlearningplan.inc'
  );
  $items['ajax/lp-change-class/catalog-search/%/%/%/%'] = array(
    'title' => 'List All Available Classes',
    'page callback' => 'getAvailableClassResults',
  	'page arguments' => array(3,4,5,6),
    'access arguments' => array('expertus learner'),    
    'type' => MENU_CALLBACK,
  );
  $items['ajax/lp-change-class/catalog-autocomplete/%/%/%/%/%'] = array(
    'title' => 'Course-Class Title Autocomplete',
    'page callback' => 'getClsChangeAutoComplete',
  	'page arguments' => array(3,4,5,6,7),
    'access arguments' => array('expertus learner'),    
    'type' => MENU_CALLBACK,
    'file' => 'exp_sp_lnrlearningplan.inc'
  );
  $items['ajax/learning/change-class/%/%/%/%/%'] = array(
    'title' => 'Course-Class Title Autocomplete',
    'page callback' => 'changeClassEnroll',
  	'page arguments' => array(3,4,5,6,7),
    'access arguments' => array('expertus learner'),    
    'type' => MENU_CALLBACK,
    'file' => 'exp_sp_lnrlearningplan.inc'
  );
  $items['learning/learningplan/location/autocomplete'] = array(
  		'title' => 'Get learning menu and filter list',
  		'page callback' => 'getLPClassLocation',
  		'access arguments' => array('expertus learner'),
  		'type' => MENU_CALLBACK,
  		'file' => 'exp_sp_lnrlearningplan.inc'
  );
  return $items;
  }catch (Exception $ex) {
    watchdog_exception('exp_sp_lnrlearningplan_menu', $ex);
    expertusErrorThrow($ex);
  } 
}

/**
 * Implementation of hook_block_view().
 */
function exp_sp_lnrlearningplan_block_view($delta = ''){
  try{
  	expDebug::dPrint("delta value testing".$delta,5);
  require_once('exp_sp_lnrlearningplan.inc');
  $header_optional = array('type' => 'file', 'scope' => 'header', 'group' => JS_LIBRARY);
  $css_module_optional = array('type' => 'file', 'group' => CSS_DEFAULT);
  $css_theme_optional = array('type' => 'file', 'group' => CSS_THEME);
  $js_module_optional = array('type' => 'file', 'group' => JS_DEFAULT);
  global $theme_key, $user_preference;
  $block = array();
  switch ($delta) {
   case 'tab_my_learningplan':
   case 'tab_my_learningplan_customized':
      includeJqGridJsCss();
      drupal_add_js(drupal_get_path('module', 'exp_sp_lnrsearch') .'/exp_sp_lnrsearch.js', $js_module_optional);
      if (contentPlayerIsActive()) {
      	includeContentPlayerJsCss();
      	drupal_add_js(drupal_get_path('module', 'exp_sp_lnrlearningplan').'/exp_sp_lnrlearningplan_cp.js', $js_module_optional);
      	drupal_add_js(drupal_get_path('module', 'exp_sp_learning_learner').'/js/exp_sp_registrationdetail/exp_sp_launch_cp.js', $js_module_optional);
      	drupal_add_js(drupal_get_path('module', 'exp_sp_learning_learner').'/js/exp_sp_registrationdetail/SCORM-API-WRAPPER_cp.js', $js_module_optional);
      	drupal_add_js(drupal_get_path('module', 'exp_sp_learning_learner').'/js/exp_sp_registrationdetail/SCORM12-LMS-API_cp.js', $js_module_optional);
      	drupal_add_js(drupal_get_path('module', 'exp_sp_learning_learner').'/js/exp_sp_registrationdetail/SCORM2004-LMS-API_cp.js', $js_module_optional);
      	drupal_add_js(drupal_get_path('module', 'exp_sp_survey').'/exp_sp_survey_learner/js/exp_sp_surveylearner/exp_sp_surveylearner_cp.js',$js_module_optional);
      } else {
      	drupal_add_js(drupal_get_path('module', 'exp_sp_lnrlearningplan').'/exp_sp_lnrlearningplan.js', $js_module_optional);
      drupal_add_js(drupal_get_path('module', 'exp_sp_learning_learner').'/js/exp_sp_registrationdetail/exp_sp_launch.js', $js_module_optional);
  	  if(getConfigValue('wbt_content_launch_style') == 1) {
	  	drupal_add_js(drupal_get_path('module', 'exp_sp_learning_learner').'/js/exp_sp_registrationdetail/SCORM-API-WRAPPER-MODAL.js', $js_module_optional);
	  } else {
	  	drupal_add_js(drupal_get_path('module', 'exp_sp_learning_learner').'/js/exp_sp_registrationdetail/SCORM-API-WRAPPER.js', $js_module_optional);
	  }
      drupal_add_js(drupal_get_path('module', 'exp_sp_learning_learner').'/js/exp_sp_registrationdetail/SCORM12-LMS-API.js', $js_module_optional);
      drupal_add_js(drupal_get_path('module', 'exp_sp_learning_learner').'/js/exp_sp_registrationdetail/SCORM2004-LMS-API.js', $js_module_optional);
      drupal_add_js(drupal_get_path('module', 'exp_sp_survey').'/exp_sp_survey_learner/js/exp_sp_surveylearner/exp_sp_surveylearner.js',$js_module_optional);
      }
      drupal_add_js(drupal_get_path('module', 'exp_sp_learning_learner').'/js/exp_sp_registrationdetail/exp_sp_progressbar.js', $js_module_optional);
    
      	drupal_add_js(drupal_get_path('module', 'exp_sp_learning_learner').'/exp_sp_mylearning.js',$js_module_optional);
      if($theme_key == 'expertusoneV2') {
     //NEWUI THEME STYLE SHEET
	      drupal_add_css(drupal_get_path('module', 'exp_sp_learning_learner').'/css/exp_sp_lnrsearch_v2.css', $css_theme_optional);
	      if (contentPlayerIsActive()) { // Based on a content player activation load the needed files.
	      	drupal_add_css(drupal_get_path('module', 'exp_sp_survey').'/exp_sp_survey_learner/css/Survey_formatter_cp.css',$css_theme_optional);
	      	drupal_add_css(drupal_get_path('module', 'exp_sp_lnrlearningplan').'/exp_sp_lnrlearningplan_v2.css' , array('type' => 'file', 'group' => CSS_THEME, 'weight'=>1300));
	      	drupal_add_css(drupal_get_path('module', 'exp_sp_lnrlearningplan').'/exp_sp_lnrlearningplan_v2_cp.css',$css_theme_optional);
	      
	      }else{
	      drupal_add_css(drupal_get_path('module', 'exp_sp_lnrlearningplan').'/exp_sp_lnrlearningplan_v2.css' , array('type' => 'file', 'group' => CSS_THEME, 'weight'=>1300));
	      drupal_add_css(drupal_get_path('module', 'exp_sp_survey').'/exp_sp_survey_learner/css/Survey_formatter_v2.css',$css_theme_optional);
	      }
	   drupal_add_css(drupal_get_path('module', 'exp_sp_myteam') .'/exp_sp_myteam_v2.css', $css_theme_optional);
      }else{
	      drupal_add_css(drupal_get_path('module', 'exp_sp_learning_learner').'/css/exp_sp_lnrsearch.css', $css_theme_optional);
	      drupal_add_css(drupal_get_path('module', 'exp_sp_lnrlearningplan').'/exp_sp_lnrlearningplan.css', $css_module_optional);
	      drupal_add_css(drupal_get_path('module', 'exp_sp_survey').'/exp_sp_survey_learner/css/Survey_formatter.css',$css_theme_optional);
      	  drupal_add_css(drupal_get_path('module', 'exp_sp_myteam') .'/exp_sp_myteam.css', $css_theme_optional);	
      }
      $outhtml = ($theme_key == 'expertusoneV2' && !isset($user_preference['mylearning_left']['tab_my_learningplan_customized'])) ? "" : "<div id='learningplan-tab-inner'></div>";
      $block['content'] = $outhtml;
      break;     
  }
  return $block;
  }catch (Exception $ex) {
    watchdog_exception('exp_sp_lnrlearningplan_block_view', $ex);
    expertusErrorThrow($ex);
  } 
}

/*
 * Implementation of hook_theme
 */
function exp_sp_lnrlearningplan_theme() {
	try{
  return array(
    'exp_sp_lnrlearningplan-catalog-search-view-header' => array('
  		variables' => array('results' => array()),
        'template' => 'exp_sp_lnrlearningplan-catalog-search-view-header' 
        ),
    'exp_sp_lnrlearningplan-change-class-view-image' => array('
  		 variables' => array('results' => array()),
        'template' => 'exp_sp_lnrlearningplan-change-class-view-image' 
        ),
    'exp_sp_lnrlearningplan-change-class-view-detail' => array('
  		 variables' => array('results' => array()),
        'template' => 'exp_sp_lnrlearningplan-change-class-view-detail' 
        ),
    'exp_sp_lnrlearningplan-change-class-view-action' => array('
  		variables' => array('results' => array()),
        'template' => 'exp_sp_lnrlearningplan-change-class-view-action' 
        )
    );
  }catch (Exception $ex) {
  	watchdog_exception('exp_sp_lnrlearningplan_theme', $ex);
  	expertusErrorThrow($ex);
  }
}

/**
 * Callback of the Available classes view.
 */
function getAvailableClassResults($userId,$changesClassId,$courseId,$myEnrollChangeCls){
	/*
	 * To handle Sql Injection without session cookie (anonymous users)
	* Condition Added by : Vimal DM
	*/

	$sltPersonUserId = getSltpersonUserId();

	try{
		if($sltPersonUserId!=$userId){
			throw new Exception('Userid and Logged in user doesnot match.');
		}
		module_load_include('inc', 'exp_sp_lnrsearch', 'exp_sp_lnrsearch');
		$timeZone = date_default_timezone(false);
		$defaultTimezone = ($timeZone == 'Asia/Kolkata') ? 'Asia/Calcutta' : $timeZone;
		$lnrSrch = new LnrSearchCatalog();
		$lnrSrch->select = catalogClassSearchQuery($userId, true);
		$lnrSrch->select->leftjoin('slt_course_class_session', 'ses', 'cls.id=ses.class_id and ses.id=(SELECT id FROM  slt_course_class_session WHERE class_id=cls.id ORDER BY start_date, start_time LIMIT 1)');
		$lnrSrch->select->addExpression("CONCAT( DATE_FORMAT(ses.start_date, _utf8'%Y-%m-%d'),' ',ses.start_time,':00')", 'session_end_datetime'); // Added by Priya on Oct 30, 2013 for #0028593
		$lnrSrch->select->addField('ses','timezone', 'timezone'); // Added by Priya on Oct 30, 2013 for #0028593
		$lnrSrch->searchTitleClass($lnrSrch->setParamVal('title',false));
		$lnrSrch->searchTypeClass($lnrSrch->setParamVal('dl_type'),'');
		$lnrSrch->select->condition('cls.status','lrn_cls_sts_atv','=');
		if($myEnrollChangeCls == 'Enroll'){
			$lnrSrch->select->where('cls.dedicated_class_flag = \'N\' or cls.dedicated_class_flag is null');
		}
		$lnrSrch->select->groupBy("cls.id having session_end_datetime > IFNULL(CONVERT_TZ(now(), '".$defaultTimezone."' ,(select pro1.attr2 from slt_profile_list_items pro1 where pro1.code= ses.timezone)),NOW()) or session_end_datetime is null");
		filterByUserAccessPrivileges($lnrSrch->select, 'cls','','','','Class');
		$lnrSrch->select->condition('cls.course_id',$courseId);
		if($myEnrollChangeCls != 'compliance'){
			$lnrSrch->select->condition('cls.id',$changesClassId,'!=');
		}
		expDebug::dPrintDBAPI('getAvailableClassResults query: before calculating pagination', $lnrSrch->select);
		$lnrSrch->calculatePagination();
		$lnrSrch->searchSortBy($lnrSrch->setParamVal('sortby'));
		if($_REQUEST['apiname'] != 'getAvailableClassesAPI' && !$_REQUEST['mobile_version']){
		$lnrSrch->select->range($lnrSrch->start, $lnrSrch->limit);
		}
		expDebug::dPrintDBAPI('getAvailableClassResults query:', $lnrSrch->select);
		$qry_search_results = $lnrSrch->select->execute()->fetchAll();
		expDebug::dPrint(' getAvailableClassResults $qry_search_results = ' . print_r($qry_search_results, true),4);
		$srch_result_response->header = theme('exp_sp_lnrlearningplan-catalog-search-view-header', array('userId' => $userId,'changeClassId' => $changesClassId, 'courseId' =>$courseId,'myEnrollChangeCls' => $myEnrollChangeCls));
		$srch_result_response->total   = $lnrSrch->total_pages;
		$srch_result_response->records = $lnrSrch->qry_search_count;
		$srch_result_response->page    = $lnrSrch->page;
		$srch_result_response->userId  = $userId;
		$_SESSION['jq_count'] = array();
		$i=0;
		foreach ($qry_search_results as $rec_search_results) {
			if($rec_search_results->currency_type==null || $rec_search_results->currency_type=='') {
				$rec_search_results->currency_type=''; // 0056924 - default $ removal
			}

			if($rec_search_results->export_compliance == null)
				$rec_search_results->export_compliance = 'N';

			if($rec_search_results->price == null || $rec_search_results->price == '')
				$rec_search_results->price = '0.00';

			$rec_search_results->row =  $i;
			$srch_result_response->rows[$i]['id']   = $rec_search_results->cls_id;

			if($rec_search_results->object_type == 'Class') {
				$rec_search_results->available_seats = getAvailableSeats($rec_search_results->cls_id);
			}else{
				$rec_search_results->available_seats = getObjectAvailableSeats($rec_search_results->cls_id);
			}
			$rec_search_results->session_details = getSessionDetails($rec_search_results->crs_id,$rec_search_results->cls_id,$rec_search_results->delivery_type_code);
			$rec_search_results->multi_register = is_multiregistration_allowed($rec_search_results->cls_id);
			
			$rec_search_results->waived_status = getRegisteredEnrollmentExmeptedorNot('class',$userId,$courseId,$changesClassId);
			$srch_result_response->rows[$i]['cell'] = array(
					'image'               => theme('exp_sp_lnrlearningplan-change-class-view-image', array('results' => $rec_search_results)),
					'details'             => theme('exp_sp_lnrlearningplan-change-class-view-detail', array('results' => $rec_search_results,'userId' => $userId)),
					'action'              => theme('exp_sp_lnrlearningplan-change-class-view-action', array('results' => $rec_search_results,'userId' => $userId,'myEnrollChangeCls' => $myEnrollChangeCls))
			);
			$_SESSION['jq_modal'][$i] = $rec_search_results->cls_id;
		    $results[$i] = $rec_search_results;
			$i++;
		}
		
		if($_REQUEST['apiname'] == 'getAvailableClassesAPI' && $_REQUEST['mobile_version']){
			return $results;
		}else{
			echo drupal_json_output($srch_result_response);
		}
	}catch (Exception $ex) {
		watchdog_exception('getAvailableClassResults', $ex);
		expertusErrorThrow($ex);
	}
	 

}

/*
 * To get the class id and course id for the given enrollment id
 */
function getProgramDetails($enrollid){
	try{
		$query = db_select('slt_enrollment', 'enr');
		$query->addField('enr','id','id');
		$query->addField('enr','course_id','course_id');
		$query->addField('enr','class_id','class_id');
		$query->addField('enr','master_enrollment_id','master_enrollment_id');
		$query->condition('enr.master_enrollment_id', $enrollid, '=');
		$result = $query->execute()->fetchAll();
		return $result;
	}catch (Exception $ex) {
		watchdog_exception('getProgramDetails', $ex);
		expertusErrorThrow($ex);
	}
}
?>