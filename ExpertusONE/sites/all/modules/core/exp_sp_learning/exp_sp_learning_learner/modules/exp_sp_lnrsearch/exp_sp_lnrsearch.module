<?php
/**
 * Implementation of hook_block_info(). 
 */
function exp_sp_lnrsearch_block_info() {
  try{
  $blocks = array();
  $blocks['tab_find_training'] = array(
    'info' => t('Find Training'),
  	'cache' => DRUPAL_CACHE_PER_ROLE,  
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages' => 'learning/catalog-search
learning/catalog-search/*
widget/catalog-search
widget/catalog-search/*'
);
$blocks['tab_search'] = array(
    'info' => t('Header Search'),
  	'cache' => DRUPAL_CACHE_PER_ROLE,
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages' => '<front>
learning/*'
);
return $blocks;
  }catch (Exception $ex) {
    watchdog_exception('exp_sp_lnrsearch_block_info', $ex);
    expertusErrorThrow($ex);
  } 
}

/**
 * Implementation of hook_menu().
 */
function exp_sp_lnrsearch_menu() {
  try{
  $items = array();

  $items['learning/catalog-search/search/all'] = array(
    'title' => 'Search Catalog',
    'page callback' => 'getCatalogSearchResults',
    //'page arguments' => array(4),
    'access arguments' => array('access content'),    
    'type' => MENU_CALLBACK,
    'file' => 'exp_sp_lnrsearch.inc'
    );

    $items['learning/catalog-autocomplete'] = array(
    'title' => 'Search Autocomplete',
    'page callback' => 'getSearchAutoComplete',
    'access arguments' => array('access content'),    
    'type' => MENU_CALLBACK,
    'file' => 'exp_sp_lnrsearch.inc'
    );

    $items['learning/location-autocomplete'] = array(
    'title' => 'Location Autocomplete',
    'page callback' => 'getLocationAutoComplete',
    'access arguments' => array('access content'),    
    'type' => MENU_CALLBACK,
    );

    $items['learning/catalog-search'] = array(
    'title' => 'Search catalog',
    'page callback' => 'empty_value',
    'access arguments' => array('catalog learner'),
    'type' => MENU_CALLBACK
    );
    $items['learning/catalog-search/share/search/all'] = array(
    'title' => 'Search Catalog',
    'page callback' => 'getCatalogSearchResults',
    //'page arguments' => array(4),
    'access arguments' => array('access content'),    
    'type' => MENU_CALLBACK,
    'file' => 'exp_sp_lnrsearch.inc'
    );
    $items['learning/catalog-search/share'] = array(
    'title' => 'Search catalog',
    'page callback' => 'empty_value',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK
    );
    $items['learning/catalog-search/share/modal/bind'] = array(
    'title' => 'AJAX modal dialog',
    'access callback' => TRUE,
    'page callback' => 'modal_bind_callback',
    'type' => MENU_CALLBACK,
    );
    
    $items['learning/catalog-search/modal/bind'] = array(
    'title' => 'AJAX modal dialog',
    'access callback' => TRUE,
    'page callback' => 'modal_bind_callback',
    'type' => MENU_CALLBACK,
    );
    
    $items['learning/language-autocomplete'] = array(
    		'title' => 'Search Autocomplete',
    		'page callback' => 'getLanguageAutoComplete',
    		'access arguments' => array('access content'),
    		'type' => MENU_CALLBACK,
    		'file' => 'exp_sp_lnrsearch.inc'
    );
    $items['learning/language-autocomplete/fetch'] = array(
    		'title' => 'Search Autocomplete',
    		'page callback' => 'getLanguageAutoCompleteFetch',
    		'access arguments' => array('access content'),
    		'type' => MENU_CALLBACK,
    		'file' => 'exp_sp_lnrsearch.inc'
    );
    
    $items['learning/tag-autocomplete'] = array(
    'title' => 'Tag Autocomplete',
    'page callback' => 'getTagAutoComplete',
    'access arguments' => array('access content'),    
    'type' => MENU_CALLBACK,
    );
    $items['learning/courselevel-search/catalog/%/%'] = array(
    'title' => 'List All Classes with in the Course',
    'page callback' => 'getCourseLevelCatalogClassResults',
    'page arguments' => array(3,4),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'file' => 'exp_sp_lnrsearch.inc'
    );
    $items['learning/select-class/catalog-autocomplete/%/%/%'] = array(
        'title' => 'Course-Class Title Autocomplete',
        'page callback' => 'getSelectClsAutoComplete',
        'page arguments' => array(3,4,5),
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK,
        'file' => 'exp_sp_lnrsearch.inc'
    );
    $items['learning/save-preference/%'] = array(
    		'title' => 'Save User Preference',
    		'page callback' => 'get_set_user_preferences_menu',
    		'page arguments' => array(2),
    		'access arguments' => array('catalog learner'),
    		'type' => MENU_CALLBACK,
    		'file' => 'exp_sp_lnrsearch.inc'
    );
	return $items;
   }catch (Exception $ex) {
    watchdog_exception('exp_sp_lnrsearch_menu', $ex);
    expertusErrorThrow($ex);
  } 	
}



/*
 * Implementation of hook_theme
 */
function exp_sp_lnrsearch_theme() {
  try{
  return array(
  	'exp_sp_lnrsearch-view-image' => array('
  		variables' => array('results' => array()),
        'template' => 'exp_sp_lnrsearch-view-image' 
        ),
    'exp_sp_lnrsearch-view-detail' => array('
  		variables' => array('results' => array()),
        'template' => 'exp_sp_lnrsearch-view-detail' 
        ),
    'exp_sp_lnrsearch-view-filter' => array('
  		variables' => array('searchObj' => new stdClass(), 'fullSearchObj' => new stdClass()),
        'template' => 'exp_sp_lnrsearch-view-filter' 
        ),
    'exp_sp_prerequisite-detail' => array('
  		variables' => array('results' => array()),
        'template' => 'exp_sp_prerequisite-detail' 
        ),
    'exp_sp_prerequisite-view-action' => array('
  		variables' => array('results' => array()),
        'template' => 'exp_sp_prerequisite-view-action' 
        ),
    'exp_sp_lnrsearch-catalogclass-search-view-header' => array('
  		variables' => array('results' => array()),
        'template' => 'exp_sp_lnrsearch-catalogclass-search-view-header' 
        ),
    'exp_sp_lnrsearch-catalog-class-view-action' => array('
  		variables' => array('results' => array()),
        'template' => 'exp_sp_lnrsearch-catalog-class-view-action' 
        )    
    );
  }catch (Exception $ex) {
    watchdog_exception('exp_sp_lnrsearch_theme', $ex);
    expertusErrorThrow($ex);
  } 
}

/**
 * Callback of the Search Details.
 */
function getCatalogSearchResults($arg='',$callfrom=''){
  global $tTrack;
  try{
  	//set catalog cookie
  	expDebug::dPrint('req vars '.var_export($_REQUEST['catalogAppliedFilters'], 1), 5);
  	if(isset($_REQUEST['catalogAppliedFilters'])) {
  		$catalogAppliedFilters = $_REQUEST['catalogAppliedFilters'];
  		$_SESSION['catalogcookies']['catalogAppliedFilters'] = $catalogAppliedFilters;
  	}
  	expDebug::dPrint('req vars '.var_export($_SESSION['catalogcookies']['catalogAppliedFilters'], 1), 5);
  	$tTrack['end']['before_catalog_start'] = (microtime(true) -$tTrack['start']['index_start']);
  	$tTrack['start']['catalog_start'] = microtime(true);
  	//Embed widget related work
  	if(isset($_SESSION['widgetCallback']) && $_SESSION['widgetCallback']==false)
  		unset($_SESSION['widget']['catalog_display_parameters']);
  	$referer_url = $_SERVER['HTTP_REFERER'];
  	//42055: Provide an option in the admin share widget screen to pass site url
  	if((isset($_SESSION['widgetCallback']) && $_SESSION['widgetCallback']==false) && (strpos($referer_url,'page_number') === false && strpos($referer_url,'click_id') === false && strpos($referer_url,'row_number') === false) && (strpos($referer_url,'widget/catalog-search') === false)){
  		unset($_SESSION['widget']['pass_url']);
  		unset($_SESSION['widget']['display_width']);
  		unset($_SESSION['widget']['display_height']);
  	}
	$srch_result_response->filter = theme('exp_sp_lnrsearch-view-filter', array());
	$tTrack['start']['catalog_qry_start'] = microtime(true);
	
  // SOLR check starts
  $srcSource = getConfigValue('solr_search');
  $solrResult = FALSE;
	if($srcSource == 0 || $_REQUEST['sortby']=='Mandatory'){
	  $lnrSrch = new LnrSearchCatalog();
	  expDebug::dPrint('Query Search results'.print_r($lnrSrch,true),5);
	  $qry_search_results = $lnrSrch -> getSearchResults();
	  expDebug::dPrint('Query Search results'.print_r($qry_search_results,true),5);
	}else{
		require_once $_SERVER['DOCUMENT_ROOT'].'/sites/all/modules/core/exp_sp_solr/exp_sp_solr_catalog.php';
		try{
			expDebug::dPrint("Solr Search Testing",1);
			$solrObj = new CatalogSolrSearch();
			$search_results = $solrObj->getSolrSearchResult();
			$qry_search_results = $search_results['records'];
			expDebug::dPrint('Result set from solr'.print_r($qry_search_results,true),5);
			$count = $search_results['recCount'];
			expDebug::dPrint('Result set count'.print_r($count,true),5);
			$lnrSrch->qry_search_count = $search_results['recCount'];
			$lnrSrch->page    = $_GET['page'];
     	$lnrSrch->total_pages   = ceil($lnrSrch->qry_search_count/$_GET['rows']);
      $solrResult = TRUE;
    }catch(Exception $e){
			expDebug::dPrint("Error in Solr Search -- ".print_r($e->getMessage(),true),1);
		}
		expDebug::dPrint("Solr search result - Final ".print_r($qry_search_results,1),4);
	}
	
  //$lnrSrch = new LnrSearchCatalog();
  //$qry_search_results = $lnrSrch -> getSearchResults();
  $tTrack['end']['catalog_qry_end'] = (microtime(true) - $tTrack['start']['catalog_qry_start']);
  $srch_result_response->page    = $lnrSrch->page;
  $srch_result_response->total   = $lnrSrch->total_pages;
  $srch_result_response->records = $lnrSrch->qry_search_count;
  global $theme_key;
  $userId = getSltpersonUserId();

  $_SESSION['jq_count'] = array();
	$tTrack['start']['catalog_subquery_start'] = microtime(true);
	//expDebug::dPrint("QUERY RETURN ".print_r(reset($qry_search_results)->cls_id),1);
	$detail = array();
	foreach ($qry_search_results as $rec_search_results) {
		if($rec_search_results->object_type == 'Class'){
			$detail['Class']['cls_id'][]=$rec_search_results->cls_id;
			$detail['Class']['dl_type'][]=$rec_search_results->delivery_type_code;
		}else if($rec_search_results->object_type == 'Course'){
			$detail['Course']['cls_id'][]=$rec_search_results->cls_id;
			$detail['Course']['crs_id'][]=$rec_search_results->crs_id;
			$detail['Course']['dl_type'][]=$rec_search_results->delivery_type_code;
		}else{
			$detail['TP']['cls_id'][]=$rec_search_results->cls_id;
			$detail['TP']['dl_type'][]=$rec_search_results->object_type;
		}
	}
	expDebug::dPrint("Query detail for ubquery ".print_r($detail,1),4);
	$subClsQuery = '';
	$subTpQuery = '';
	$usertimezone = getUserPHPTimezoneName();
	$usertimezone = $usertimezone[0]->zone_name;
	$timeZone = date_default_timezone(false);
	$defaultTimezone = ($timeZone == 'Asia/Kolkata') ? 'Asia/Calcutta' : $timeZone;
	$usertimezone = empty($usertimezone)? $defaultTimezone : $usertimezone;
	if(count($detail['Class']['cls_id'])>0){
		$clsids = implode(',',$detail['Class']['cls_id']);
		$subClsQuery = "
				select  
					cls.id as cls_id
					,crs.id as crs_id
					,'Class' as ob_type
					,nod1.node_id as cls_nid
					,null as cls_node_id
					,null as crs_nid
					,loc.name as loc_name
					,ses1.capacity_max
					,ses1.waitlist_count
					,ses1.id as session_id
					,if(brul.entity_id is null, 0, 1) as is_multi_reg
					,if(cls.delivery_type = 'lrn_cls_dty_ilt' or cls.delivery_type = 'lrn_cls_dty_vcl', count(if(enroll.reg_status != 'lrn_crs_reg_wtl',1,null)), null) as reg_count 
					,if(cls.delivery_type = 'lrn_cls_dty_ilt' or cls.delivery_type = 'lrn_cls_dty_vcl', count(if(enroll.reg_status = 'lrn_crs_reg_wtl',1,null)), null) as wtl_count 
					,ses1tz.attr2 as session_timezone
					-- Getting Start time
					-- -- -- Without converted to TZ
					,date_format(concat(date_format(ses1.start_date,'%Y-%m-%d'),' ',ses1.start_time),'%b %d, %Y') as ilt_session_start_date_format
					,date_format(concat(date_format(ses1.start_date,'%Y-%m-%d'),' ',ses1.start_time),'%h:%i') as ilt_session_start_time_format
					,date_format(concat(date_format(ses1.start_date,'%Y-%m-%d'),' ',ses1.start_time),'%p') as ilt_session_start_time_form
					-- -- -- Converted to TZ
					,date_format(CONVERT_TZ(concat(date_format(ses1.start_date,'%Y-%m-%d'),' ',ses1.start_time),ses1tz.attr2,'$usertimezone'),'%b %d, %Y') as vc_session_start_date_format
					,date_format(CONVERT_TZ(concat(date_format(ses1.start_date,'%Y-%m-%d'),' ',ses1.start_time),ses1tz.attr2,'$usertimezone'),'%h:%i') as vc_session_start_time_format
					,date_format(CONVERT_TZ(concat(date_format(ses1.start_date,'%Y-%m-%d'),' ',ses1.start_time),ses1tz.attr2,'$usertimezone'),'%p') as vc_session_start_time_form
					-- Getting End time 
					-- -- -- Without converted to TZ
					,date_format(concat(date_format(ses2.start_date,'%Y-%m-%d'),' ',ses2.end_time),'%b %d, %Y') as ilt_session_start_end_format
					,date_format(concat(date_format(ses2.start_date,'%Y-%m-%d'),' ',ses2.end_time),'%h:%i') as ilt_session_end_time_format
					,date_format(concat(date_format(ses2.start_date,'%Y-%m-%d'),' ',ses2.end_time),'%p') as ilt_session_end_time_form
					-- -- -- Converted to TZ
					,date_format(CONVERT_TZ(concat(date_format(ses2.start_date,'%Y-%m-%d'),' ',ses2.end_time),ses2tz.attr2,'$usertimezone'),'%b %d, %Y') as vc_session_start_end_format
					,date_format(CONVERT_TZ(concat(date_format(ses2.start_date,'%Y-%m-%d'),' ',ses2.end_time),ses2tz.attr2,'$usertimezone'),'%h:%i') as vc_session_end_time_format
					,date_format(CONVERT_TZ(concat(date_format(ses2.start_date,'%Y-%m-%d'),' ',ses2.end_time),ses2tz.attr2,'$usertimezone'),'%p') as vc_session_end_time_form
					,if(ses1.id = ses2.id , 0, 1) as is_multi_session
					,ses2tz.attr1 as attr1
					,ses2tz.attr4 as attr4
					,null as crs_count
					,cls.lang_code as language_code
					,splt_language.name as language
					,cls.location_id as location_id
					,cls.course_id as crs_id
					,null as cls_count
					,cls.delivery_type AS delivery_type_code
					,splt_deliverytype.name as delivery_type_name
				from
				slt_course_class cls
				inner join slt_course_template crs on crs.id = cls.course_id
				inner join slt_node_learning_activity nod1 on nod1.entity_id = cls.id and nod1.entity_type = 'cre_sys_obt_cls' 
				LEFT OUTER JOIN slt_profile_list_items splt_deliverytype ON splt_deliverytype.code=cls.delivery_type
				LEFT OUTER JOIN slt_profile_list_items splt_language ON splt_language.code=cls.lang_code
				left outer join slt_location loc on loc.id = cls.location_id
				left outer join slt_course_class_session ses1 on ses1.class_id=cls.id 
				  and ses1.id = (select id from slt_course_class_session where class_id=cls.id order by start_date,start_time limit 1)
				left outer join slt_course_class_session ses2 on ses2.class_id=cls.id 
				  and ses2.id = (select id from slt_course_class_session where class_id=cls.id order by start_date desc ,start_time desc limit 1)
				left join slt_profile_list_items ses1tz on ses1tz.code = ses1.timezone
				left join slt_profile_list_items ses2tz on ses2tz.code = ses2.timezone
				-- Multi-registration check
				left join (
				    select br.entity_id as entity_id from slt_business_rule_mapping br
				    inner join slt_profile_list_items brpf on brpf.code = br.business_rule_code and brpf.is_active = 'Y'
				    where br.entity_type = 'cre_sys_obt_cls' and br.business_rule_code = 'cre_sys_brl_rra'
				  ) brul on brul.entity_id = cls.id
				-- Get enrollment count for validate seat availability
				left join (
				    select enr.class_id, enr.reg_status as reg_status
				    from slt_enrollment enr
				    inner join slt_course_class cl on cl.id=enr.class_id  and cl.delivery_type in ('lrn_cls_dty_ilt','lrn_cls_dty_vcl')
				    where enr.reg_status IN ('lrn_crs_reg_cnf', 'lrn_crs_reg_ppm', 'lrn_crs_reg_rsv', 'lrn_crs_reg_wtl')
				    and enr.class_id in (".$clsids.")
				    and IF(enr.reg_status = 'lrn_crs_reg_cnf', enr.comp_status IN('lrn_crs_cmp_cmp','lrn_crs_cmp_inp','lrn_crs_cmp_enr','lrn_crs_cmp_att'),1=1)
				    group by enr.user_id, enr.class_id
				  ) enroll on enroll.class_id = cls.id
				where cls.id in (".$clsids.")
				group by cls_id		
			";
	}
	// For COURSE Level Registration
	if(count($detail['Course']['cls_id'])>0 || $callfrom=='course'){
		
		if($callfrom=='course')
			$clsids = $arg;
		else
		$clsids = implode(',',$detail['Course']['cls_id']);
		
		$classQuery = '1=1';
		$userId  = getIdOfLoggedInUser();
		$userAccess  = getUserAccessPriviledges($userId);
		$enabledValues = getEnabledAttrForVisibility();
		$closeBracket='';
		$lastid = 1;
		$enabledCount = count($enabledValues);
		if($enabledCount > 0){
			//$selectStmt->where('if((FIND_IN_SET('.$userId.','.$aliasCatalogAccess.'.added_users)>0),1=1,('.$aliasCatalogAccess.'.removed_users IS NULL) OR (FIND_IN_SET('.$userId.','.$aliasCatalogAccess.'.removed_users) <= 0)');
			//	$classQuery .= 'if(select (FIND_IN_SET('.$userId.','.$aliasCatalogAccess.'.added_users)>0 from slt_group_mapping map LEFT OUTER JOIN slt_groups grp ON grp.id=map.group_id and grp.is_admin IS NULL and grp.status =\'cre_sec_sts_atv\' where map.entity_id=cls.id and map.entity_type=\'cre_sys_obt_cls\'),1=1,('.$aliasCatalogAccess.'.removed_users IS NULL) OR (FIND_IN_SET('.$userId.','.$aliasCatalogAccess.'.removed_users) <= 0)';

			/*$classQuery = 'if((select count(1) from slt_group_mapping map LEFT OUTER JOIN slt_groups grp ON grp.id=map.group_id and (grp.is_admin =0) and grp.status =\'cre_sec_sts_atv\' where map.entity_id=cls.id and map.entity_type=\'cre_sys_obt_cls\' and (FIND_IN_SET('.$userId.',grp.added_users)>0))>0,1=1,(
			if((select count(1) from slt_group_mapping where entity_id=cls.id and entity_type=\'cre_sys_obt_cls\')>0,
			(select count(1) from slt_group_mapping map LEFT OUTER JOIN slt_groups grp ON grp.id=map.group_id and (grp.is_admin =0) and grp.status =\'cre_sec_sts_atv\' where map.entity_id=cls.id and map.entity_type=\'cre_sys_obt_cls\' 
			AND ( ';*/
			
			// Changed by Vincent on 06 Apr, 2017 - For mismatch count in course level registration if any of the class does not have access
			$classQuery = 'if((select count(1) from slt_group_mapping map 
			LEFT OUTER JOIN slt_groups grp ON grp.id=map.group_id and (grp.is_admin =0) and grp.status =\'cre_sec_sts_atv\' 
			where map.entity_id=cls.id and map.entity_type=\'cre_sys_obt_cls\' and (FIND_IN_SET('.$userId.',grp.added_users)>0))>0 OR 
			((select count(1) from slt_user_access_mapping umap where umap.entity_id=cls.id and umap.entity_type=\'cre_sys_obt_cls\' and umap.user_id = '.$userId.') > 0),1=1,(
			if((select count(1) from slt_group_mapping where entity_id=cls.id and entity_type=\'cre_sys_obt_cls\')>0,
			cls.id IN (
			select cls1.id from slt_course_class cls1 
			left join slt_group_mapping map ON (map.entity_id=cls1.id AND map.entity_type = \'cre_sys_obt_cls\') and map.group_type = 0  AND \'cre_sec_sts_atv\' = (SELECT status FROM slt_groups where id = map.group_id)
			LEFT OUTER JOIN slt_groups grp ON grp.id=map.group_id and (grp.is_admin =0) and grp.status =\'cre_sec_sts_atv\' 
			where cls1.course_id IN ('.$clsids.')  
			AND ( ';
			
			foreach($enabledValues as $key => $value){
				//$closeBracket = ($lastid == $enabledCount) ? '))':'';
				if($value == 'state')
					$userValue = $userAccess->country.'-'.$userAccess->$value;
				else
					$userValue = $userAccess->$value;

				if($value != 'role' && $value != 'hire_date'){

					if($value == 'job_role'){
						$resultjobrole = explode(',',$userValue);
						$classQuery .= ' (if(grp.'.$value.' = \'All\',\''.$userValue .'\'!=\'\', (grp.'.$value.' is null or grp.'.$value.'=\'\'';
						
						/* $classQuery .= 'if((select count(1) from slt_group_mapping where entity_id=cls.id and entity_type=\'cre_sys_obt_cls\')>0,
						(select count(1) from slt_group_mapping map LEFT OUTER JOIN slt_groups grp ON grp.id=map.group_id and (grp.is_admin =0) and grp.status =\'cre_sec_sts_atv\' where map.entity_id=cls.id and map.entity_type=\'cre_sys_obt_cls\' and if(grp.'.$value.' = \'All\',\''.$userValue .'\'!=\'\', (grp.'.$value.' is null or grp.'.$value.'=\'\''; */
						foreach ($resultjobrole as $job_role){
							expDebug::dPrint('$JOB_ROLE------>'.print_r($job_role,1),4);
							$classQuery .= 'OR (FIND_IN_SET(\''.$job_role.'\',grp.'.$value.'))';
						}
						$classQuery .= '))) ';
						if($lastid != $enabledCount)
							$classQuery .= ' AND ';
					}else{

						$classQuery .= ' (if(grp.'.$value.' = \'All\',\''.$userValue .'\'!=\'\',(grp.'.$value.' is null or grp.'.$value.'=\'\' or (FIND_IN_SET(\''.$userValue.'\',grp.'.$value.'))))) ';
						
						/* $classQuery .= 'if((select count(1) from slt_group_mapping where entity_id=cls.id and entity_type=\'cre_sys_obt_cls\')>0,
						(select count(1) from slt_group_mapping map LEFT OUTER JOIN slt_groups grp ON grp.id=map.group_id and (grp.is_admin =0) and grp.status =\'cre_sec_sts_atv\' where map.entity_id=cls.id and map.entity_type=\'cre_sys_obt_cls\' and if(grp.'.$value.' = \'All\',\''.$userValue .'\'!=\'\',(grp.'.$value.' is null or grp.'.$value.'=\'\' or (FIND_IN_SET(\''.$userValue.'\',grp.'.$value.')))))>0, 1=1)'; */
						if($lastid != $enabledCount)
						$classQuery .= ' AND ';
					}
				}


				if($value == 'role'){
					$isManager = empty($userAccess->is_manager) ? 'N' : $userAccess->is_manager;
					$classQuery .= '(CASE WHEN (grp.is_manager=\'Y\' AND grp.is_instructor=\'Y\') THEN (\''.$userAccess->is_manager.'\' = grp.is_manager OR \''.$userAccess->is_instructor.'\' = grp.is_instructor) 
					WHEN (grp.is_manager=\'Y\' AND grp.is_instructor=\'N\') THEN (\''.$userAccess->is_manager.'\' = grp.is_manager) 
				  WHEN (grp.is_manager=\'N\' AND grp.is_instructor=\'Y\') THEN (\''.$userAccess->is_instructor.'\' = grp.is_instructor) ELSE 1=1 END) ';
					if($lastid != $enabledCount)
						$classQuery .= ' AND ';
				}
				
				if($value == 'hire_date'){
					$perHireDate = $userAccess->hire_date;
					/* $classQuery .= '(CASE WHEN grp.hire_search_mode = \'ste_con_hdt_btw\' THEN UNIX_TIMESTAMP(\'' .$perHireDate. '\') between UNIX_TIMESTAMP(grp.hire_start) AND UNIX_TIMESTAMP(grp.hire_end)
                                 					  WHEN grp.hire_search_mode = \'ste_con_hdt_ltn\' THEN  UNIX_TIMESTAMP(\'' .$perHireDate. '\') <= UNIX_TIMESTAMP(grp.hire_start)
                                 					  WHEN grp.hire_search_mode = \'ste_con_hdt_gtn\' THEN UNIX_TIMESTAMP(\'' .$perHireDate. '\') >= UNIX_TIMESTAMP(grp.hire_start) ELSE 1=1 END) '; */
					
					$classQuery .= '(IF((select att.id from slt_group_attributes att where att.group_id = grp.id)>0,
					  (select att.id from slt_group_attributes att where att.group_id = grp.id and (
					  (DATE_FORMAT(\'' .$perHireDate. '\',\'%Y-%m-%d\') >= DATE_FORMAT(att.on_or_after_start_date,\'%Y-%m-%d\') ) or
					  (DATE_FORMAT(\'' .$perHireDate. '\',\'%Y-%m-%d\') <= DATE_FORMAT(att.on_or_before_start_date,\'%Y-%m-%d\')) or
					  (DATE_FORMAT(\'' .$perHireDate. '\',\'%Y-%m-%d\') between DATE_FORMAT(att.between_start_date,\'%Y-%m-%d\') AND DATE_FORMAT(att.between_end_date,\'%Y-%m-%d\'))
					  )) >0
					  ,1=1)) ';
					if($lastid != $enabledCount)
						$classQuery .= ' AND ';
				}
				
				$lastid++;
			}
			$classQuery .= ' ) and ((grp.removed_users IS NULL) OR (FIND_IN_SET('.$userId.',grp.removed_users) <= 0))), 
			(((select count(1) from slt_user_access_mapping umap where umap.entity_id=cls.id and umap.entity_type=\'cre_sys_obt_cls\') = 0))))';
			//$classQuery .= ' AND ';
			//$classQuery .= '((select count(1) from slt_group_mapping grp_map where entity_id=cls.id and entity_type=\'cre_sys_obt_cls\' and (grp_map.group_type=0 or grp_map.group_id is null))>0)';
			$classQuery .= ')';
			//$classQuery .= ' AND ';
			//	$classQuery .= 'if((select count(1) from slt_group_mapping grp_map where entity_id=cls.id and entity_type=\'cre_sys_obt_cls\' and grp_map.id is not null)>0,group_map.id = (select gmap.id from slt_group_mapping gmap where gmap.entity_id=cls.id and gmap.group_type=0 and gmap.entity_type = \'cre_sys_obt_cls\' order by mro asc limit 1),1=1)';
		}
		
		$subClsQuery = "
					select  
					crs.id as cls_id
					,cls.id as crs_id
					,'Course' as ob_type
					,nod1.node_id as cls_nid
                    ,nod2.node_id as crs_nid
                    ,nod3.nodes_id as cls_node_id
					,loc.name as loc_name
					,ses1.capacity_max
					,ses1.waitlist_count
					,ses1.id as session_id
					,brul.crs_multireg as is_multi_reg
					,if(cls.delivery_type = 'lrn_cls_dty_ilt' or cls.delivery_type = 'lrn_cls_dty_vcl', count(if(enroll.reg_status != 'lrn_crs_reg_wtl',1,null)), null) as reg_count 
					,if(cls.delivery_type = 'lrn_cls_dty_ilt' or cls.delivery_type = 'lrn_cls_dty_vcl', count(if(enroll.reg_status = 'lrn_crs_reg_wtl',1,null)), null) as wtl_count 
					,ses1tz.attr2 as session_timezone
					-- Getting Start time
					-- -- -- Without converted to TZ
					,date_format(concat(date_format(ses1.start_date,'%Y-%m-%d'),' ',ses1.start_time),'%b %d, %Y') as ilt_session_start_date_format
					,date_format(concat(date_format(ses1.start_date,'%Y-%m-%d'),' ',ses1.start_time),'%h:%i') as ilt_session_start_time_format
					,date_format(concat(date_format(ses1.start_date,'%Y-%m-%d'),' ',ses1.start_time),'%p') as ilt_session_start_time_form
					-- -- -- Converted to TZ
					,date_format(CONVERT_TZ(concat(date_format(ses1.start_date,'%Y-%m-%d'),' ',ses1.start_time),ses1tz.attr2,'$usertimezone'),'%b %d, %Y') as vc_session_start_date_format
					,date_format(CONVERT_TZ(concat(date_format(ses1.start_date,'%Y-%m-%d'),' ',ses1.start_time),ses1tz.attr2,'$usertimezone'),'%h:%i') as vc_session_start_time_format
					,date_format(CONVERT_TZ(concat(date_format(ses1.start_date,'%Y-%m-%d'),' ',ses1.start_time),ses1tz.attr2,'$usertimezone'),'%p') as vc_session_start_time_form
					-- Getting End time 
					-- -- -- Without converted to TZ
					,date_format(concat(date_format(ses2.start_date,'%Y-%m-%d'),' ',ses2.end_time),'%b %d, %Y') as ilt_session_start_end_format
					,date_format(concat(date_format(ses2.start_date,'%Y-%m-%d'),' ',ses2.end_time),'%h:%i') as ilt_session_end_time_format
					,date_format(concat(date_format(ses2.start_date,'%Y-%m-%d'),' ',ses2.end_time),'%p') as ilt_session_end_time_form
					-- -- -- Converted to TZ
					,date_format(CONVERT_TZ(concat(date_format(ses2.start_date,'%Y-%m-%d'),' ',ses2.end_time),ses2tz.attr2,'$usertimezone'),'%b %d, %Y') as vc_session_start_end_format
					,date_format(CONVERT_TZ(concat(date_format(ses2.start_date,'%Y-%m-%d'),' ',ses2.end_time),ses2tz.attr2,'$usertimezone'),'%h:%i') as vc_session_end_time_format
					,date_format(CONVERT_TZ(concat(date_format(ses2.start_date,'%Y-%m-%d'),' ',ses2.end_time),ses2tz.attr2,'$usertimezone'),'%p') as vc_session_end_time_form
					,if(ses1.id = ses2.id , 0, 1) as is_multi_session
					,ses2tz.attr1 as attr1
					,ses2tz.attr4 as attr4
					,null as crs_count
					,GROUP_CONCAT(DISTINCT(cls.lang_code)) AS language_code
					,GROUP_CONCAT(DISTINCT(splt_language.name)) as language
					,GROUP_CONCAT(cls.location_id) AS location_id
					,GROUP_CONCAT(DISTINCT(cls.id)) AS crs_id
					,COUNT(DISTINCT(cls.id)) AS cls_count
					,GROUP_CONCAT(DISTINCT(cls.delivery_type)) AS delivery_type_code
					,null as delivery_type_name
				from
				slt_course_template crs
				left join  slt_course_class cls on crs.id = cls.course_id AND cls.status = 'lrn_cls_sts_atv' AND ($classQuery) AND (cls.dedicated_class_flag = 'N' or cls.dedicated_class_flag is null)
        inner join slt_node_learning_activity nod2 on nod2.entity_id = crs.id and nod2.entity_type = 'cre_sys_obt_crs' 
        left join (
            select c.course_id crid, group_concat(n.node_id) as node_id
            from slt_node_learning_activity n 
            left join slt_course_class c on n.entity_id = c.id and n.entity_type = 'cre_sys_obt_cls'
            where c.course_id IN (".$clsids.") and c.status = 'lrn_cls_sts_atv'
            group by c.course_id
           ) nod1 on nod1.crid = crs.id
           left join (
            select c.id crid,n.node_id as nodes_id
            from slt_node_learning_activity n 
            left join slt_course_class c on n.entity_id = c.id and n.entity_type = 'cre_sys_obt_cls'
            where c.id=n.entity_id and c.status = 'lrn_cls_sts_atv'
           ) nod3 on nod3.crid = cls.id
				left outer join slt_location loc on loc.id = cls.location_id
				left outer join slt_course_class_session ses1 on ses1.class_id=cls.id 
				  and ses1.id = (select id from slt_course_class_session where class_id=cls.id order by start_date,start_time limit 1)
				left outer join slt_course_class_session ses2 on ses2.class_id=cls.id 
				  and ses2.id = (select id from slt_course_class_session where class_id=cls.id order by start_date desc ,start_time desc limit 1)
				left join slt_profile_list_items ses1tz on ses1tz.code = ses1.timezone
				left join slt_profile_list_items ses2tz on ses2tz.code = ses2.timezone
				-- Multi-registration check
				left join (
				    select e.course_id crsid,group_concat(e.class_id) as crs_multireg from slt_enrollment e
            inner join slt_business_rule_mapping br on br.entity_id = e.class_id 
              and br.business_rule_code = 'cre_sys_brl_rra' AND br.entity_type = 'cre_sys_obt_cls'
				    inner join slt_profile_list_items brpf on brpf.code = br.business_rule_code and brpf.is_active = 'Y'
				    where e.master_enrollment_id is null and e.user_id = ".$userId."
            and e.reg_status in ('lrn_crs_reg_cnf','lrn_crs_reg_ppm','lrn_crs_reg_wtl')
            and e.course_id in (".$clsids.")
            group by e.course_id
				  ) brul on brul.crsid = crs.id
				-- Get enrollment count for validate seat availability
				left join (
				    select enr.class_id, enr.reg_status as reg_status
				    from slt_enrollment enr
				    inner join slt_course_class cl on cl.id=enr.class_id  and cl.delivery_type in ('lrn_cls_dty_ilt','lrn_cls_dty_vcl')
				    where enr.reg_status IN ('lrn_crs_reg_cnf', 'lrn_crs_reg_ppm', 'lrn_crs_reg_rsv', 'lrn_crs_reg_wtl')
				    and enr.course_id in (".$clsids.")
				    and IF(enr.reg_status = 'lrn_crs_reg_cnf', enr.comp_status IN('lrn_crs_cmp_cmp','lrn_crs_cmp_inp','lrn_crs_cmp_enr','lrn_crs_cmp_att'),1=1)
				    group by enr.user_id, enr.class_id
				  ) enroll on enroll.class_id = cls.id
				  LEFT OUTER JOIN slt_profile_list_items splt_language ON splt_language.code=cls.lang_code
				where crs.id in (".$clsids.")
        group by cls_id
		";
	}
	
	if(count($detail['TP']['cls_id'])>0){
		$prgids = implode(',',$detail['TP']['cls_id']);
		$subTpQuery = "
				select  
					prm.id as cls_id
					,null as crs_id
					,prm.object_type as ob_type
					,nod1.node_id as cls_nid
					,null as crs_nid
				    ,null as cls_node_id
					,null as loc_name
					,null capacity_max
					,null as waitlist_count
					,null as session_id
					,null as is_multi_reg
					,null reg_count
					,null wtl_count
					,null as session_timezone
					,null as ilt_session_start_date_format
					,null as ilt_session_start_time_format
					,null as ilt_session_start_time_form
					,null as vc_session_start_date_format
					,null as vc_session_start_time_format
					,null as vc_session_start_time_form
					,null as ilt_session_start_end_format
					,null as ilt_session_end_time_format
					,null as ilt_session_end_time_form
					,null as vc_session_start_end_format
					,null as vc_session_end_time_format
					,null as vc_session_end_time_form
					,null as is_multi_session
					,null as attr1
					,null as attr4
					,map.crs_count
					,prm.lang_code as language_code
					,splt_language.name as language
					,null as location_id
					,null as crs_id
					,null as cls_count
					,null as delivery_type_code
					,splt_deliverytype.name as delivery_type_name
					from
					slt_program prm
					left join (
					      select prm.id as prm_id, count(1) as crs_count from slt_program prm
					      inner join slt_module_crs_mapping crs_map on prm.id=crs_map.program_id
					      inner join slt_course_template crs on crs_map.course_id=crs.id 
					      where crs.status = 'lrn_crs_sts_atv' and crs_map.is_required = 'Y'
					      and prm.id in (".$prgids.") 
					      group by prm.id
					  ) map on map.prm_id = prm.id
					  LEFT OUTER JOIN slt_profile_list_items splt_deliverytype ON splt_deliverytype.code=prm.object_type
					  LEFT OUTER JOIN slt_profile_list_items splt_language ON splt_language.code=prm.lang_code
					inner join slt_node_learning_activity nod1 on nod1.entity_id = prm.id and nod1.entity_type in ('cre_sys_obt_crt','cre_sys_obt_cur','cre_sys_obt_trn') 
					where prm.id in (".$prgids.")
			";
	}
	$subQuery = ((!empty($subClsQuery) && !empty($subTpQuery)) ? ($subClsQuery." UNION ALL ".$subTpQuery)  // both class/course and TP querys available
							  : ((!empty($subClsQuery) && empty($subTpQuery)) ? $subClsQuery  // Only class/course is available
							   : (!empty($subTpQuery) ? $subTpQuery : ''))); // Only TP query is available
	expDebug::dPrint("CATALOG SEARCH SUB DETAILS QUERY -- ".print_r($subQuery,true),2);
	// Skip if the main query result set is empty
	if(!empty($subQuery)){ 
		$sRes = db_query($subQuery)->fetchAll();
		expDebug::dPrint("Sub Query results ".print_r($sRes,true),3);
		$subResult = array();
		foreach($sRes as $srs){
			$subResult[$srs->ob_type.'_'.$srs->cls_id] = $srs;
		}
	}
	if($callfrom == 'course')
		return $subResult;
	expDebug::dPrint("Sub Query results ".print_r($subResult,true),3);
	$tTrack['end']['catalog_subquery_end'] = (microtime(true) - $tTrack['start']['catalog_subquery_start']);
	$tTrack['start']['catalog_loop_start'] = microtime(true);
	
	$i = 0;
  foreach ($qry_search_results as $rec_search_results) {
    $subRst = $subResult[$rec_search_results->object_type.'_'.$rec_search_results->cls_id];
    $rec_search_results->cls_title = $rec_search_results->cls_title; //Viswanthan remove sanitizedata for #73045
    $rec_search_results->cls_code = $rec_search_results->cls_code;
    $rec_search_results->prm_price = $rec_search_results->price;
    $rec_search_results->prm_currency_type = $rec_search_results->currency_type;
    $rec_search_results->prm_currency_type=$rec_search_results->currency_symbol;
  	if($rec_search_results->prm_price == null || $rec_search_results->prm_price == '' || $rec_search_results->prm_price == 0) {
      $rec_search_results->prm_price = '0.00';
    }
    $rec_search_results->course_to_complete = $subRst->crs_count;
    $rec_search_results->node_id = $subRst->cls_nid;
    $rec_search_results->cls_node_id = $subRst->cls_node_id;
    $rec_search_results->course_node_id = $subRst->crs_nid;
    $rec_search_results->language = $subRst->language;
    $rec_search_results->language_code = $subRst->language_code;
    $rec_search_results->location_id = $subRst->location_id;
    $rec_search_results->crs_id = $subRst->crs_id;
    $rec_search_results->cls_count = $subRst->cls_count;
    $rec_search_results->delivery_type_code = $subRst->delivery_type_code;
    $rec_search_results->delivery_type_name = $subRst->delivery_type_name;
       
    
    $rec_search_results->location = $subRst->loc_name;
    $rec_search_results->currency_type=$rec_search_results->currency_symbol;
  	if($rec_search_results->price == null || $rec_search_results->price == '') {
      $rec_search_results->price = '0.00';
    }
       
    if($rec_search_results->export_compliance == null){
      $rec_search_results->export_compliance = 'N';
    }
    $rec_search_results->multi_register = $subRst->is_multi_reg;
 
  	if($rec_search_results->delivery_type_code == 'lrn_cls_dty_ilt' || $rec_search_results->delivery_type_code == 'lrn_cls_dty_vcl' ){
			// Seat availability calculation
			if ($subRst->capacity_max != 0) {
		    $no_of_available_seats = $subRst->capacity_max - $subRst->reg_count;
		  }
		
		  if ($no_of_available_seats < 0 ) {
		    $no_of_available_seats = 0;
		  }
		  // Watilist calculation
			if ($subRst->capacity_max != 0) {
		    if($subRst->capacity_max <= ($subRst->reg_count+$subRst->wtl_count)) {
		      $no_of_waitlist_seats = ($subRst->capacity_max + $subRst->waitlist_count) - ($subRst->reg_count+$subRst->wtl_count);
		    } else {
		      $no_of_waitlist_seats = 0;
		    }
		  }
		  if ($no_of_waitlist_seats < 0 ) {
		    $no_of_waitlist_seats = 0;
		  }
      $rec_search_results->available_seats = $no_of_available_seats;
      $rec_search_results->waitlist_seats  = $no_of_waitlist_seats;
      $rec_search_results->session_details = $subRst;
  	}
  	if($userId && $rec_search_results->object_type =='Course'){
	    $rec_search_results->multi_register = !empty($subRst->is_multi_reg)? true : false;
	    $rec_search_results->registered_class = !empty($subRst->is_multi_reg)? explode(',',$subRst->is_multi_reg) : NULL ;
	    $rec_search_results->nodeIdFiveStar = explode(',',$subRst->cls_nid);
    }
    $rec_search_results->row =  $i;
    $srch_result_response->rows[$i]['id']   = $rec_search_results->cls_id;
	if($theme_key == "expertusoneV2"){
	    $catalogTrClass = '';	    
	    if(!empty($rec_search_results->delivery_type_code)){
		    $catalogTrClass = 'catalog-search-'.array_pop(explode('_',$rec_search_results->delivery_type_code));
			$srch_result_response->rows[$i]['jqgrid-rowid'] = $rec_search_results->cls_id.'-cre_sys_obt_cls';
	    }	    
	    if(!empty($rec_search_results->object_type) && ($rec_search_results->object_type != 'Class')){
	    	$catalogTrClass = 'catalog-search-'.array_pop(explode('_',$rec_search_results->object_type));
			$srch_result_response->rows[$i]['jqgrid-rowid'] =  $rec_search_results->cls_id.'-'.($rec_search_results->object_type == 'Course' ? 'cre_sys_obt_crs' : 'cre_sys_obt_trp');
	    }
	    $srch_result_response->rows[$i]['class'] = $catalogTrClass;
	}
    $rec_search_results->widgetId = 'lnr-catalog-search';
    $rec_search_results->widget = 'catalog-search';
    //echo '<pre>'; print_r($_SESSION['widget']['catalog_display_parameters']); echo '</pre>';
    //Embed widget related work (check the display parameter)
    if(isset($_SESSION['widget']['catalog_display_parameters'])){
    	
//     	if($_SESSION['widget']['catalog_display_parameters']['show_icon']==true){
//     		$srch_result_response->rows[$i]['cell']['image']= theme('exp_sp_lnrsearch-view-image', array('results' => $rec_search_results));
//     	}
//     	$srch_result_response->rows[$i]['cell']['details'] =theme('exp_sp_lnrsearch-view-detail', array('results' => $rec_search_results));
//     	if($_SESSION['widget']['catalog_display_parameters']['show_button']==true){
//     		$srch_result_response->rows[$i]['cell']['action']=($rec_search_results->object_type=="Class" || $rec_search_results->object_type=="Course") ? commonRegisterHtml($rec_search_results,true) : commonLPRegisterHtml($rec_search_results,true);
//     	}
    	
    	$training_details = get_training_details_themed($rec_search_results);
    	$dl_type_code = ($rec_search_results->delivery_type_code != null ? $rec_search_results->delivery_type_code : $rec_search_results->object_type);
//     	$training_details->icon_class = getTypeImageClass($dl_type_code);
    	$training_details->icon_class = get_training_icons_themed($rec_search_results);
    	if($solrResult == TRUE)
    		$training_details->icon_title = ($rec_search_results->object_type=='Course' ? t('Course'): ($rec_search_results->object_type=='Class'? $rec_search_results->delivery_type_name :$rec_search_results->object_type) );
    	else
    		$training_details->icon_title = ($rec_search_results->object_type=='Course' ? t('Course'): $rec_search_results->delivery_type_name);
    	if($rec_search_results->object_type=="Class" || $rec_search_results->object_type=="Course") {
    		$training_details->action_variables = get_course_class_action_themed($rec_search_results);
    	} else {
    		
    		$training_details->action_variables = get_tp_action_themed($rec_search_results);
    	}
//     	expDebug::dPrint('paint action vars ' . theme("content_action", array("result" => $training_details->action_variables)), 5);
    	/* http://jsfiddle.net/8HgHt/ */
    	/* $training_details->content_row_class = ' disptab';
    	$training_details->icon_class .= ' mar-catalog mar0px';
    	$training_details->content_icon_container_class = ' disptabcell padtop12 padlt9 wid53px';
    	$training_details->content_detail_container_class = 'top-record-div-left float-left wid100per padtop12 padlt9';
    	$training_details->content_action_container_class = ' disptabcell padtop12 padlt9'; */
    	
    	//following styles are set per element. not common styles
    	$training_details->content_row_class = 'catalog';
//     	$training_details->icon_class .= ' mar-catalog mar0px';
//     	$training_details->content_icon_container_class = 'catalog';
    	$training_details->content_detail_container_class = 'top-record-div-left';
    	$training_details->content_detail_class = 'content-detail-code padbt3';
    	$training_details->content_description_class = 'padbt8';
    	
//     	$training_details->content_action_container_class = ' disptabcell padtop12 padlt9';
    	
    	
    	$srch_result_response->rows[$i]['cell'] = theme("content_header", array("result" => $training_details, 'context' => ['callfrom' => 'catalog']));
    }else{
    	$training_details = get_training_details_themed($rec_search_results);
    	$dl_type_code = ($rec_search_results->delivery_type_code != null ? $rec_search_results->delivery_type_code : $rec_search_results->object_type);
//     	$training_details->icon_class = getTypeImageClass($dl_type_code);
    	$training_details->icon_class = get_training_icons_themed($rec_search_results);
    	expDebug::dPrint("IS FROM SOLR -- ".print_r($solrResult,true),3);
    	if($solrResult == TRUE)
    		$training_details->icon_title = ($rec_search_results->object_type=='Course' ? t('Course'): ($rec_search_results->object_type=='Class'? $rec_search_results->delivery_type_name :$rec_search_results->object_type) );
    	else
    		$training_details->icon_title = ($rec_search_results->object_type=='Course' ? t('Course'): $rec_search_results->delivery_type_name);
    	if($rec_search_results->object_type=="Class" || $rec_search_results->object_type=="Course") {
    		$training_details->action_variables = get_course_class_action_themed($rec_search_results);
    	} else {
    		
    		$training_details->action_variables = get_tp_action_themed($rec_search_results);
    	}
//     	expDebug::dPrint('paint action vars ' . theme("content_action", array("result" => $training_details->action_variables)), 5);
    	/* http://jsfiddle.net/8HgHt/ */
    	/* $training_details->content_row_class = ' disptab';
    	$training_details->icon_class .= ' mar-catalog mar0px';
    	$training_details->content_icon_container_class = ' disptabcell padtop12 padlt9 wid53px';
    	$training_details->content_detail_container_class = 'top-record-div-left float-left wid100per padtop12 padlt9';
    	$training_details->content_action_container_class = ' disptabcell padtop12 padlt9'; */
    	
    	//following styles are set per element. not common styles
    	$training_details->content_row_class = 'catalog';
//     	$training_details->icon_class .= ' mar-catalog mar0px';
//     	$training_details->content_icon_container_class = 'catalog';
    	$training_details->content_detail_container_class = 'top-record-div-left';
    	$training_details->content_detail_class = 'content-detail-code padbt3';
    	$training_details->content_description_class = 'padbt8';
    	
//     	$training_details->content_action_container_class = ' disptabcell padtop12 padlt9';
    	expDebug::dPrint('getting the message value string from exception123444'.print_r($training_details,true),4);
    	
    	$srch_result_response->rows[$i]['cell'] = theme("content_header", array("result" => $training_details, 'context' => ['callfrom' => 'catalog']));
	    /* $srch_result_response->rows[$i]['cell'] = array(
	    		'image'               => theme('exp_sp_lnrsearch-view-image', array('results' => $rec_search_results)),
	    		'details'             => theme('exp_sp_lnrsearch-view-detail', array('results' => $rec_search_results)),
	    		'action'              => ($rec_search_results->object_type=="Class" || $rec_search_results->object_type=="Course") ? commonRegisterHtml($rec_search_results,true) : commonLPRegisterHtml($rec_search_results,true)
    	); */
    }
    $srch_result_response->details =  $training_details; //Viswanthan added for #73045
    $_SESSION['jq_modal'][$i] = $rec_search_results->cls_id;
    $i++;    
  }
  $tTrack['end']['catalog_loop_end'] = (microtime(true) - $tTrack['start']['catalog_loop_start']);
  $block_permission  =  block_role_permission_check('exp_sp_lnrsearch','tab_find_training');
  expDebug::dPrint('getting the message value string from exception123'.print_r($block_permission,true),4); 
  //expDebug::dPrint("Catalog Search Final OUTPUT ".print_r($srch_result_response,true),1);
	$srch_result_response->user_preferences = get_set_user_preferences();
  if($block_permission) {
  	$output = drupal_json_output($srch_result_response);
  } else {
  	$srch_result_response = 'Access Denied';
  	$output = drupal_json_output($srch_result_response);
  }
  $tTrack['end']['catalog_end'] = (microtime(true) - $tTrack['start']['catalog_start']);
  echo $output;
 // echo drupal_json_output($srch_result_response);

  }catch (Exception $ex) {
    watchdog_exception('getCatalogSearchResults', $ex);
    expertusErrorThrow($ex);
  } 
}

/**
 * Callback of the modal bind.
 */
function modal_bind_callback() {
  try{
  ctools_include('ajax');
  $commands = array();
  if(isset($_SESSION['jq_modal'])){    
    $total_records = count($_SESSION['jq_modal']);
    for($i=0;$i<$total_records; $i++) {
      //$refer_link = l(t('Refer'), 'ctools_ajax_sample/ajax/refer_course/'.$_SESSION['jq_modal'][$i].'/cre_sys_obt_cls', array('html' => TRUE, 'attributes' => array('class' => array('use-ajax', 'ctools-modal-ctools-default-style'))) );
      $refer_link = l(t('Refer'), 'ctools_ajax_sample/ajax/refer_course', array('html' => TRUE, 'attributes' => array('class' => array('use-ajax', 'ctools-modal-ctools-default-style'))) );
      $commands[] = ajax_command_html('#refer-'.$i, $refer_link);
    }
  }
  $commands[] = ajax_command_remove("div.loadercontent"); // to destroy loader image
  print ajax_render($commands); // this function exits.
  exit;
  }catch (Exception $ex) {
    watchdog_exception('modal_bind_callback', $ex);
    expertusErrorThrow($ex);
  } 
}

/**
 * Implementation of hook_block_view().
 */
function exp_sp_lnrsearch_block_view($delta = ''){
  try{
		$user_id = getSltpersonUserId();
  $header_optional = array('type' => 'file', 'scope' => 'header', 'group' => JS_LIBRARY);
  $css_module_optional = array('type' => 'file', 'group' => CSS_DEFAULT);
  $css_theme_optional = array('type' => 'file', 'group' => CSS_DEFAULT);
  $js_module_optional = array('type' => 'file', 'group' => JS_DEFAULT);
  //42055: Provide an option in the admin share widget screen to pass site url
  drupal_add_js(array('WIDGETMODULEVARIABLE' => array('page_number' => $_GET['page_number'],'click_id' => $_GET['click_id'],'row_number'=>$_GET['row_number'])), array('type' => 'setting'));
  $block = array();
  global $theme_key;
  require_once('exp_sp_lnrsearch.inc');
  drupal_add_library('system', 'ui.slider');
  drupal_add_library('system', 'ui.datepicker');
  drupal_add_js(drupal_get_path('module', 'exp_sp_lnrsearch') .'/exp_sp_lnrsearch.js', $js_module_optional);
  drupal_add_js(drupal_get_path('module','exp_sp_prerequisite').'/exp_sp_prerequisite.js',$js_module_optional);
  drupal_add_js(drupal_get_path('module', 'exp_sp_lnrsearch') .'/jquery.cookie.js', $js_module_optional);
  drupal_add_js(drupal_get_path('module', 'exp_sp_core').'/js/qtippopup.js',$js_module_optional);
  
  if (contentPlayerIsActive()) { // Based on a content player activation load the needed files.
  	includeContentPlayerJsCss();
  	drupal_add_js(drupal_get_path('module', 'exp_sp_learning_learner').'/js/exp_sp_lnrenrollment/exp_sp_lnrenrollment_cp.js', $js_module_optional);
  	drupal_add_js(drupal_get_path('module', 'exp_sp_survey').'/exp_sp_survey_learner/js/exp_sp_surveylearner/exp_sp_surveylearner_cp.js',$js_module_optional);
  	drupal_add_js(drupal_get_path('module', 'exp_sp_learning_learner').'/js/exp_sp_registrationdetail/exp_sp_launch_cp.js', $js_module_optional);
  	drupal_add_js(drupal_get_path('module', 'exp_sp_learning_learner').'/js/exp_sp_registrationdetail/SCORM-API-WRAPPER_cp.js', $js_module_optional);
  	drupal_add_js(drupal_get_path('module', 'exp_sp_learning_learner').'/js/exp_sp_registrationdetail/SCORM12-LMS-API_cp.js', $js_module_optional);
  	drupal_add_js(drupal_get_path('module', 'exp_sp_learning_learner').'/js/exp_sp_registrationdetail/SCORM2004-LMS-API_cp.js', $js_module_optional);
  } else {
  drupal_add_js(drupal_get_path('module', 'exp_sp_learning_learner').'/js/exp_sp_lnrenrollment/exp_sp_lnrenrollment.js', $js_module_optional);
  drupal_add_js(drupal_get_path('module', 'exp_sp_learning_learner').'/js/exp_sp_registrationdetail/exp_sp_launch.js', $js_module_optional);
  if(getConfigValue('wbt_content_launch_style') == 1) {
  	drupal_add_js(drupal_get_path('module', 'exp_sp_learning_learner').'/js/exp_sp_registrationdetail/SCORM-API-WRAPPER-MODAL.js', $js_module_optional);
  } else {
  	drupal_add_js(drupal_get_path('module', 'exp_sp_learning_learner').'/js/exp_sp_registrationdetail/SCORM-API-WRAPPER.js', $js_module_optional);
  }
  drupal_add_js(drupal_get_path('module', 'exp_sp_learning_learner').'/js/exp_sp_registrationdetail/SCORM12-LMS-API.js', $js_module_optional);
  drupal_add_js(drupal_get_path('module', 'exp_sp_learning_learner').'/js/exp_sp_registrationdetail/SCORM2004-LMS-API.js', $js_module_optional);
  }
  // Condition added by Vincent on May 05, 2014 for Refactoring #0033772
  if(stripos(request_uri(),'learning/catalog')!==false || stripos(request_uri(),'learning/enrollment')!==false){
	  drupal_add_js(drupal_get_path('module', 'fivestar').'/js/fivestar.js', $js_module_optional);
	  drupal_add_js(drupal_get_path('module', 'fivestar').'/js/fivestar.ajax.js', $js_module_optional);
	  drupal_add_js(drupal_get_path('module', 'exp_sp_administration_learning') . '/jquery.jscrollpane.js', $js_module_optional);
	  drupal_add_js(drupal_get_path('module', 'drupalchat') . '/js/jquery.mousewheel.js');
	  drupal_add_css(drupal_get_path('theme', 'AdministrationTheme').'/calender_style.css');
	 // drupal_add_css(drupal_get_path('module', 'fivestar').'/css/fivestar-admin.css',$css_theme_optional);
	 // drupal_add_css(drupal_get_path('module', 'fivestar').'/css/fivestar-admin-rtl.css',$css_theme_optional);    
	  //drupal_add_css(drupal_get_path('module', 'fivestar').'/css/fivestar-rtl.css',$css_theme_optional);
	  if($theme_key == 'expertusoneV2'){
	  	if (contentPlayerIsActive()) { // Based on a content player activation load the needed files.
	  	drupal_add_css(drupal_get_path('module', 'fivestar').'/css/fivestar_v2.css',$css_theme_optional);
	  		drupal_add_css(drupal_get_path('module', 'exp_sp_survey').'/exp_sp_survey_learner/css/Survey_formatter_cp.css',$css_theme_optional);
	  		drupal_add_css(drupal_get_path('module', 'exp_sp_learning_learner') .'/css/exp_sp_lnrenrollment_cp.css',$css_theme_optional);
	  }else{
	  		 drupal_add_css(drupal_get_path('module', 'fivestar').'/css/fivestar_v2.css',$css_theme_optional);
	  		drupal_add_css(drupal_get_path('module', 'exp_sp_learning_learner') .'/css/exp_sp_lnrenrollment_v2.css', array('type' => 'file', 'group' => CSS_THEME, 'weight'=>1300));
	  	}
	  }else{
	  	  drupal_add_css(drupal_get_path('module', 'fivestar').'/css/fivestar.css',$css_theme_optional);
	  	  //drupal_add_css(drupal_get_path('module', 'exp_sp_learning_learner') .'/css/exp_sp_lnrenrollment.css', $css_module_optional);
	   	  //drupal_add_css(drupal_get_path('module', 'exp_sp_fivestar').'/exp_sp_fivestar.css',$css_theme_optional);
	  }
	 //drupal_add_js(drupal_get_path('module','exp_sp_learning_learner').'/js/exp_sp_prerequisite/exp_sp_prerequisite.js',$js_module_optional);
	  
	  //drupal_add_js(drupal_get_path('module', 'exp_sp_core') .'/js/exp_sp_jquery/jquery.custom_radio_checkbox.js', $js_module_optional);
  }
		
  switch ($delta) {
			
    case 'tab_find_training':
      includeJqGridJsCss();
// 				includeTourJsCss();
      if($theme_key == 'expertusoneV2'){
      	  drupal_add_css(drupal_get_path('module', 'exp_sp_lnrsearch') .'/exp_sp_lnrsearch_v2.css', array('type' => 'file', 'group' => CSS_THEME, 'weight'=>1300));
					drupal_add_css(drupal_get_path('module', 'exp_sp_lnrsearch') . '/exp_sp_lnrsearch_catalog_v2.css', array('type' => 'file', 'group' => CSS_THEME, 'weight' => 1302)); // changing weight of exp_sp_lnrsearch_catalog_v2.css didn't help overriding exp_sp_learning_learner.css styles
      	  drupal_add_css(drupal_get_path('module', 'exp_sp_prerequisite') .'/exp_sp_prerequisite_v2.css', $css_theme_optional);
      	  drupal_add_css(drupal_get_path('module', 'exp_sp_learning_plan_detail').'/exp_sp_learning_plan_detail_v2.css', $css_theme_optional);
      }else{
      	  drupal_add_css(drupal_get_path('module', 'exp_sp_lnrsearch') .'/exp_sp_lnrsearch.css', $css_theme_optional);
      	  drupal_add_css(drupal_get_path('module', 'exp_sp_prerequisite') .'/exp_sp_prerequisite.css', $css_theme_optional);
      }
      $block['subject'] = t('Find Training');
      $block['content'] = ' ';
      if($user_id==0){
      	$block['criteria_class'] = $_SESSION['guest_user_preferences']['catalog_criteria_class'];
      	$block['content_class'] = $_SESSION['guest_user_preferences']['catalog_content_class'];
      }else{
				$block['criteria_class'] = $_SESSION['user_preferences'][$user_id]['catalog_criteria_class'];
				$block['content_class'] = $_SESSION['user_preferences'][$user_id]['catalog_content_class'];
      }
      break;
    case 'tab_search':
      $block['subject'] = 'catalogheadersearch';
      $block['content'] = ' ';
      break;
    case 'widget_block':
    	$res = getCatalogSearchResults();
    	$block['subject'] = 'Wiget Contents';
    	$block['content'] =  (string)$res;
    	break;
  }
  return $block;
  }catch (Exception $ex) {
    watchdog_exception('exp_sp_lnrsearch_block_view', $ex);
    expertusErrorThrow($ex);
  } 
}

/**
 * Get results for Search autocomplete.
 *
 * @param string ''
  *
 * @return
 *   Auto Complete Search Results
 */
function getSearchAutoComplete(){
  try{
  	global $catalog_reg;
  	$solrSource = getConfigValue ( 'solr_search' );
  	if ($solrSource == 0) {
			$title = $_GET ['z'];
			$_GET ['title'] = $title;
			$_REQUEST ['title'] = $title;
			$lnrSrch = new LnrSearchCatalog ();
			$lnrSrch->limit = 1000;
			$select = $lnrSrch->catalogSearchQuery ();
			$select = db_select ( $select, 'acc' );
			$select->addField ( 'acc', 'cls_id' );
			$select->addField ( 'acc', 'cls_code' );
			$select->addField ( 'acc', 'cls_title' );
			$select->addField ( 'acc', 'object_type' );
			$select->addField ( 'acc', 'mro_id' );
			if ($catalog_reg == 'Class') {
				$select->groupBy ( 'acc.cls_id' );
				$select->groupBy ( 'acc.crs_id' );
			} else {
				$select->groupBy ( 'acc.cls_id' );
				$select->groupBy ( 'acc.object_type' );
			}
			$select->range ( 0, $lnrSrch->limit );
			$selectInd = $select->extend ( "ExpertusSelectQueryExtender" );
			$qry_srch_autocomplete = $selectInd->execute ()->fetchAll ();
		}
		else {
			expDebug::dPrint ( 'entered solr search' );
			require_once $_SERVER ['DOCUMENT_ROOT'] . '/sites/all/modules/core/exp_sp_solr/exp_sp_solr_catalog.php';
			try {
				$solrObj = new CatalogSolrSearch ();
				$solrList = $solrObj->CatalogSolrSearchAutoComplete ();
				expDebug::dPrint ( ' $prgList123 = ' . print_r ( $solrList, true ), 4 );
				$qry_srch_autocomplete = $solrList ['records'];
				expDebug::dPrint ( ' $prgList123 = ' . print_r ( $qry_srch_autocomplete, true ), 4 );
				$numCatalog = $solrList ['recCount'];
				expDebug::dPrint ( ' Total matiching records ' . print_r ( $numCatalog, true ), 4 );
			} catch ( Exception $e ) {
				expDebug::dPrint ( "Error in Solr Search for Users - " . print_r ( $e->getMessage (), true ), 1 );
			}
		}
  foreach ($qry_srch_autocomplete as $rec_srch_autocomplete) {
    print $rec_srch_autocomplete->cls_title."\n";
  }
  }catch (Exception $ex) {
    watchdog_exception('getSearchAutoComplete', $ex);
    expertusErrorThrow($ex);
  } 
}

function get_training_icons_themed($results) {
	try {
// 		$getTypeTitle = getTypeTitle($results);
		if($results->object_type == 'Class') {
			$dl_class = getTypeImageClass($results->delivery_type_code);
		} elseif($results->object_type == 'Course') {
			$dl_class = getTypeImageClass('cre_sys_obt_crs');
		} else {
			$dl_class = getTypeImageClass($results->object_type);
		}
		return $dl_class;
	} catch(Exception $e) {
	}
}
/**
 * To remane result params for the newly created catalog template
 * @param unknown $results
 */
function get_training_details_themed($results) {
	try {
// 		expDebug::dPrint('$results in get_training_details_themed '.print_r($results, 1), 1);
// 		expDebug::dPrint('imagettftext exists'.var_export(function_exists('imagettftext'), 1), 1);
		//exp_sp_lnrsearch-view-detail.tpl.php details template starts here
		require_once (drupal_get_path('module', 'exp_sp_myteam') . '/exp_sp_myteam-catalog-search.inc');
		global $catalog_reg;
		$condClass = ($catalog_reg == 'Course' && $results->object_type == 'Class');
		$tags = getCatalogTags($results->cls_id, $results->object_type);
		$tagSlice = '';
		$moreTag = '';
		$nodeId = '';
		if(! empty($tags)) {
			$tagSlice = implode(", ", array_slice($tags, 0, 2));
			$moreTag = implode(", ", $tags);
			$tagSlice = titleController('LNR-SEARCH-VIEW-DETAIL-TAG', sanitize_data($tagSlice), 22);
		}
		$userId = getSltpersonUserId();
		// 42055: Provide an option in the admin share widget screen to pass site url
		$referer_url = $_SERVER['HTTP_REFERER'];
		if(isset($_SESSION['widget']['pass_url']) && ($_SESSION['widget']['pass_url'] === TRUE || $_SESSION['widget']['pass_url'] == 1) && (strpos($referer_url, 'page_number') === false && strpos($referer_url, 'click_id') === false && strpos($referer_url, 'row_number') === false)) {
			$curTitle = widgetTitleController($results->cls_title, 'catalog_page', $results->is_compliance);
		} else if((isset($_SESSION['widgetCallback']) && $_SESSION['widgetCallback'] == TRUE)) {
			$curTitle = widgetTitleController($results->cls_title, 'catalog_page', $results->is_compliance);
		} else {
			$recom_course = 0;
			$man_course = 0;
			$mrovalue = explode(',', $results->mro_id);
			if(in_array('cre_sys_inv_rec', $mrovalue)) {
				$recom_course = 1;
			}
			if(in_array('cre_sys_inv_man', $mrovalue)) {
				$man_course = 1;
			}
				
			$curTitle = $results->cls_title;
		}
		if($man_course == 0) {
			if($results->object_type == 'Class') {
				$results->mandatory_value = myteamFetchEnrollment($results->crs_id, $results->cls_id, $userId);
			} else if($results->object_type == 'Course') {
				$results->mandatory_value = myteamFetchEnrollment($results->cls_id, $results->crs_id, $userId);
			} else {
				$results->mandatory_value = myteamFetchProgram($results->cls_id, $userId);
			}
		} else {
			$results->mandatory_value = 'Y';
		}
		if($catalog_reg == 'Course') {
			// $nodeIdFiveStar = getNodeActivityMapping($results->cls_id);
			$crs_class_id = getCompletedClassId($results->cls_id);
		}
		$mroImageClassArr['cre_sys_inv_com'] = '<div class="catalog-course-compliance-role-bg"><span class="catalog-course-compliance-bg-left"></span><span class="catalog-course-compliance-bg-middle">' . t('Compliance') . '</span><span class="catalog-course-compliance-bg-right"></span></div>';
		$mroImageClassArr['cre_sys_inv_man'] = '<div class="catalog-course-role-access-bg"><span class="catalog-course-mandatory-bg-left"></span><span class="catalog-course-mandatory-bg-middle">' . t('Mandatory') . '</span><span class="catalog-course-mandatory-bg-right"></span></div>';
		// $mroImageClassArr['cre_sys_inv_opt'] = '<div class="catalog-course-role-access-bg"><span class="catalog-course-optional-bg-left"></span><span class="catalog-course-optional-bg-middle">'.strtolower(t('Optional')).'</span><span class="catalog-course-optional-bg-right"></span></div>';
		$mroImageClassArr['cre_sys_inv_rec'] = '<div class="catalog-course-role-access-bg"><span class="catalog-course-recommended-bg-left"></span><span class="catalog-course-recommended-bg-middle">' . t('Recommended') . '</span><span class="catalog-course-recommended-bg-right"></span></div>';
// 		(drupal_get_path('theme', 'expertusoneV2').'/expertusone-internals/font/ProximaNova-Bold.ttf');
		$mrovalue = explode(',', $results->mro_id);
		if(in_array('cre_sys_inv_man', $mrovalue)) {
			$results->mro_id = 'cre_sys_inv_man';
		} else if(in_array('cre_sys_inv_rec', $mrovalue)) {
			$results->mro_id = 'cre_sys_inv_rec';
		}
		$mroImageClass = empty($results->mro_id) ? '' : $mroImageClassArr[$results->mro_id];
		if($results->mandatory_value == "Y") {
			$mroImageClass = $mroImageClassArr['cre_sys_inv_man'];
		}
		if($results->is_compliance) {
			$mroImageClass = $mroImageClassArr['cre_sys_inv_com'];
		}
		// Change the link based on the url call //42055: Provide an option in the admin share widget screen to pass site url
		if(isset($_SESSION['widgetCallback']) && ($_SESSION['widgetCallback'] == true && (isset($_SESSION['widget']['catalog_display_parameters']) && ($_SESSION['widget']['pass_url'] != TRUE || empty($_SESSION['widget']['pass_url']))))) {
			$primaryPath = 'widget';
		} else {
			$primaryPath = 'learning';
		}
		//data_title
		// 42055: Provide an option in the admin share widget screen to pass site url
		if(isset($_SESSION['widget']['pass_url']) && ($_SESSION['widget']['pass_url'] === TRUE || $_SESSION['widget']['pass_url'] == 1) && (strpos($referer_url, 'page_number') === false && strpos($referer_url, 'click_id') === false && strpos($referer_url, 'row_number') === false)) {
			if(empty($mroImageClass)) {
				$attributes_arr = array('attributes' => array('class' => 'limit-title spotlight-item-title without-mro-container vtip', 'title' => trim($results->cls_title), 'target' => '_blank'));
			}
			else {
				$attributes_arr = array('attributes' => array('class' => 'limit-title spotlight-item-title vtip', 'title' => trim($results->cls_title), 'target' => '_blank'));
			}
		}
		else if(empty($mroImageClass)) {
			$attributes_arr = array('attributes' => array('class' => 'limit-title spotlight-item-title without-mro-container vtip', 'title' => trim($results->cls_title)));
		} else {
			$attributes_arr = array('attributes' => array('class' => 'limit-title spotlight-item-title vtip', 'title' => trim($results->cls_title)));
		}
		if($results->object_type == 'Class') {
			if($catalog_reg == 'Course') {
				if(empty($mroImageClass)) {
					$header_details->data_title = $curTitle;
				} else {
					$header_details->data_title = $curTitle;
				}
			} else {
				$attributes_arr['html'] = TRUE;
				$header_details->data_title = l(sanitize_data($curTitle), $primaryPath . '/class-details/' . $results->cls_id . '/' . $results->session_id, $attributes_arr);
			}
				
			$header_details->mroImageClass = $mroImageClass;
		} else if($results->object_type == 'Course') {
			$attributes_arr['html'] = TRUE;
			$header_details->data_title = l(sanitize_data($curTitle), $primaryPath . '/course-details/' . $results->course_node_id, $attributes_arr);
			$header_details->mroImageClass = $mroImageClass;
		} else {
			$attributes_arr['html'] = TRUE;
			$header_details->data_title = l(sanitize_data($curTitle), $primaryPath . '/learning-plan-details/' . $results->cls_id . '/catalog', $attributes_arr);
			$header_details->mroImageClass = $mroImageClass;
		}
		$header_details->attributes = array();
		//data_code
		$header_details->data_title_tooltip = $results->cls_title;
		$classname = ($results->object_type != 'Class' && $results->object_type != 'Course' && $results->object_type != 'cre_sys_obt_crt' && $results->course_to_complete == 0) ? 'LNR-SEARCH-VIEW-DETAIL-CODE-TP' : 'LNR-SEARCH-VIEW-DETAIL-CODE';
		$header_details->attributes['cls_code']->tooltip = t('LBL096').": ".$results->cls_code; //Viswanthan removed sanitizedata for #73045
		$header_details->attributes['cls_code']->data = titleController($classname,sanitize_data($results->cls_code), 10);

		//data_language
		if(($catalog_reg=='Course' && $results->cls_count != 0) || $condClass) {
			$header_details->attributes['language']->tooltip = t('LBL038') . ": " . sanitize_data(t($results->language));
				
			if($condClass) {
				$header_details->attributes['language']->data = t(subStringController(t($results->language), 3));
			} else {
				$header_details->attributes['language']->data = titleController('LNR-SEARCH-VIEW-DETAIL-LANG', t($results->language), 10);
			}
		}
		//data_location
		if($results->location != null && $results->object_type == 'Class') {
			$header_details->attributes['location']->tooltip = t('Location') . ": " . sanitize_data($results->location);
			$header_details->attributes['location']->data = titleController('LNR-SEARCH-VIEW-DETAIL-LOCATION-NAME', $results->location);
				
		} else if($results->object_type == 'Course' && $results->cls_count == 1 && ($results->delivery_type_code == "lrn_cls_dty_ilt")) {
			$header_details->attributes['location']->tooltip = t('Location') . ": " . sanitize_data($results->session_details->loc_name);
			$header_details->attributes['location']->data = titleController('LNR-SEARCH-VIEW-DETAIL-SESSION-NAME', $results->session_details->loc_name, 15);
		}
		
// 		sessionDetails
		// Added by Vincent on Oct 28, 2013 for #0028593
		if(empty($userId)) {
			$defaultTimezone = date_default_timezone(false);
			$select = db_select('slt_profile_list_items', 'spli');
			$select->addField('spli', 'attr1');
			$select->addField('spli', 'attr4');
			$select->condition('spli.attr2', $defaultTimezone);
			$timezone_details = $select->execute()->fetchAssoc();
		} else {
			$timezone_details = getPersonDetails($userId);
		}
		$sessionDate = '';
		if($results->delivery_type_code == "lrn_cls_dty_vcl" || $results->delivery_type_code == "lrn_cls_dty_ilt") {
			$sDay_user = $results->session_details->vc_session_start_date_format;
			$sTime_user = $results->session_details->vc_session_start_time_format;
			$sTimeForm_user = $results->session_details->vc_session_start_time_form;
			$timedet = '';
			if($results->delivery_type_code == "lrn_cls_dty_ilt") {
				$timedet = $timezone_details['attr1'] . ' ' . $timezone_details['attr4'];
			}
			if($results->session_details->is_multi_session == 1) {
				$eDay_user = $results->session_details->vc_session_start_end_format;
				$eTime_user = $results->session_details->vc_session_end_time_format;
				$eTimeForm_user = $results->session_details->vc_session_end_time_form;
				$sessionDate_user = $sDay_user . ' ' . $sTime_user . ' ' . '<span class="meridian-time time-zone-text">' . $sTimeForm_user . '</span>' .' '.drupal_strtolower( t('LBL621')). ' ' . $eDay_user . ' ' . $eTime_user . ' <span class="meridian-time time-zone-text">' . $eTimeForm_user . '</span>' . ' ' . ' <span class="time-zone-offset">' . $timedet . '</span>'; /*Viswanathan added for #76619,#76437,#76441 */
			} else {
				$eTime_user = $results->session_details->vc_session_end_time_format;
				$eTimeForm_user = $results->session_details->vc_session_end_time_form;
				$sessionDate_user = $sDay_user . ' ' . $sTime_user . ' ' . '<span class="meridian-time time-zone-text">' . $sTimeForm_user . '</span>' .' '.drupal_strtolower( t('LBL621')). ' ' . $eTime_user . ' <span class="meridian-time time-zone-text">' . $eTimeForm_user . '</span>' . ' ' . ' <span class="time-zone-offset">' . $timedet . '</span>';
			}
		}
		if($results->delivery_type_code == "lrn_cls_dty_ilt") {
			$tzcode = $results->session_details->attr4;
			$zone = $results->session_details->attr1;
			$sDay = $results->session_details->ilt_session_start_date_format;
			$sTime = $results->session_details->ilt_session_start_time_format;
			$sTimeForm = $results->session_details->ilt_session_start_time_form;
			if($results->session_details->is_multi_session == 1) {
				$eDay = $results->session_details->ilt_session_start_end_format;
				$eTime = $results->session_details->ilt_session_end_time_format;
				$eTimeForm = $results->session_details->ilt_session_end_time_form;
				$sessionDate = $sDay . ' ' . $sTime . ' ' . '<span class="meridian-time time-zone-text">' . $sTimeForm . '</span>' .' '.drupal_strtolower( t('LBL621')). ' ' . $eDay . ' ' . $eTime . ' <span class="meridian-time time-zone-text">' . $eTimeForm . '</span>' . ' ' . $zone . ' ' . $tzcode;
			} else {
				$eTime = $results->session_details->ilt_session_end_time_format;
				$eTimeForm = $results->session_details->ilt_session_end_time_form;
				$sessionDate = $sDay . ' ' . $sTime . ' ' . '<span class="meridian-time time-zone-text">' . $sTimeForm . '</span>' .' '.drupal_strtolower( t('LBL621')). ' ' . $eTime . ' <span class="meridian-time time-zone-text">' . $eTimeForm . '</span>' . ' ' . $zone . ' ' . $tzcode;
			}
		}
		if($results->object_type == 'Course' && $results->cls_count > 1) {
			$sessionDate = '';
			$sessionDate_user = '';
		}
		if(!empty($sessionDate_user) && ($results->delivery_type_code == "lrn_cls_dty_ilt" || $results->delivery_type_code == "lrn_cls_dty_vcl")) {
			$header_details->attributes['session']->tooltip = strip_tags($sessionDate_user);
			
			$session_timezone = $results->session_details->session_timezone;
			if(($session_timezone != $timezone_details['attr2'] && $results->delivery_type_code == "lrn_cls_dty_ilt") || $_SESSION['widgetCallback'] === TRUE) {
				$header_details->attributes['session']->data = titleController('LNRSEARCH-DATE-TIME', $sessionDate_user, 5);
			} else {
				$header_details->attributes['session']->data = $sessionDate_user;
			}
			$session_timezone = $results->session_details->session_timezone;
			if($session_timezone != $timezone_details['attr2'] && $results->delivery_type_code == "lrn_cls_dty_ilt") {
				if((isset($_SESSION['widgetCallback']) && $_SESSION['widgetCallback'] === TRUE)) {
					$qtip = qtip_popup_paint($results->session_details->session_id, $sessionDate, $results->session_details->is_multi_session+1);
				} else {
					$qtip = qtip_popup_paint($results->session_details->session_id, $sessionDate, $results->session_details->is_multi_session+1, 1);
				}
				$header_details->attributes['locationtz']->locationtztext= '<span>'.$qtip.'</span>';
			}
		}
		//srch_expires_in_classes
		if($results->object_type != 'Class' && $results->object_type == 'cre_sys_obt_crt' && ! empty($results->expires_in_value)) {
			$expiresInValueStr = prepareCrtExpiresInDisplayString($results->expires_in_value, $results->expires_in_unit);
			$header_details->attributes['srch_expires_in']->class = 'srch-expires-in';
			$header_details->attributes['srch_expires_in']->tooltip = t('LBL233') . ': ' . $expiresInValueStr . ' ' . t('MSG568');
			$header_details->attributes['srch_expires_in']->data = titleController('LNRSEARCH-CRT-EXPIRE', t('LBL233') . '&nbsp;:&nbsp;' . $expiresInValueStr . '&nbsp;' . t('MSG568'));
		}
		
		if($results->object_type != 'Class' && $results->object_type != 'Course' && $results->course_to_complete > 0) {
			$course_count = getCourseCntEnrollment($userId, $results->cls_id, 1);
			$header_details->attributes['srch_courses_to_complete']->class = "vtip srch-courses-to-complete";
			$header_details->attributes['srch_courses_to_complete']->tooltip = t('LBL606');
			$header_details->attributes['srch_courses_to_complete']->data = t('LBL606') . ' : ' . $course_count;
		} else if($results->object_type == 'Course' && $results->cls_count > 1) {
			$header_details->attributes['srch_class_count']->id = "srch-class-count";
			$header_details->attributes['srch_class_count']->tooltip = t('LBL353');
			$header_details->attributes['srch_class_count']->data = t('LBL353') . ' : ' . $results->cls_count;
		}
// 		<div class="record-div find-training-txt"> takes care of third level elements like description
		if(!isset($_SESSION['widget']['catalog_display_parameters']) || (isset($_SESSION['widget']['catalog_display_parameters']) && $_SESSION['widget']['catalog_display_parameters']['show_description'] == TRUE)) {
			$description = str_replace(array("\n", "\r", "<p>&nbsp;</p>"), array("", "&nbsp;", ""), $results->cls_short_description);
			$crsMoreType = ($results->object_type == 'Course') ? 'cre_sys_obt_crs' : (($results->delivery_type_code) ? $results->delivery_type_code : $results->object_type);
			$header_details->delivery_type_code = $crsMoreType;
			$header_details->data_desc_classes = "limit-desc-row $crsMoreType";
			$desctxt = $description;
			$header_details->data_desc = $desctxt;
			/* <input type="hidden" id = "lnrsearch-node" value="<?php print $results->node_id?>"></input> */
			
			$getRegister = $results->getRegister;
			if($catalog_reg == 'Course' && $results->object_type == 'Course') {
				$settings = array('content_type' => 'Class', 'content_id' => $results->nodeIdFiveStar, 'stars' => 5, 'autosubmit' => TRUE, 'allow_clear' => FALSE, 'required' => FALSE, 'tag' => 'vote', 'style' => 'average', 'text' => 'average', 'startype' => 'lrn_cls_dty_ilt', 
						'catalog_crs' => $results->object_type);
			} else {
				$settings = array('content_type' => $results->object_type, 'content_id' => $results->node_id, 'stars' => 5, 'autosubmit' => TRUE, 'allow_clear' => FALSE, 'required' => FALSE, 'tag' => 'vote', 'style' => 'average', 'text' => 'average', 
						'startype' => ($results->delivery_type_code) ? $results->delivery_type_code : $results->object_type);
			}
			$header_details->node_id = $results->node_id;
			$header_details->start_rate_setting = $settings;
			if($moreTag != '') {
				$class = '';
				if(module_exists('exp_sp_fivestar') && ($getRegister->comp_status == "lrn_crs_cmp_cmp" || $getRegister->master_enrolled_status == "lrn_tpm_ovr_cmp")) {
					$class = 'class="tagInfoWithRating"';
				}
				$header_details->tag_info_div_id = "tagInfoDiv";
				$header_details->tag_info_div_class = $class;
				$header_details->tag_info_label_title = t('LBL191');
				$header_details->tag_info_label_class = "tagTitle vtip";
				$header_details->tag_info_label_data = t('LBL191') . ' : ';
				$header_details->tag_info_content_class = "tagContent vtip";
				$header_details->tag_info_content_title = sanitize_data($moreTag);
				$tagSlice = titleController('LNR-SEARCH-VIEW-DETAIL-TAG', $tagSlice, 18);
				$header_details->tag_info_content_data = $tagSlice;
			}
			global $user;
			// if(!isset($_GET['callfrom']) && $_GET['callfrom']!='widget') 58017-share is not being shown in catalog page
			if(! isset($_SESSION['widgetCallback']) || ($_SESSION['widgetCallback'] != true)) {
				if($user->uid) {
					$pastDateCount = 0;
					if($results->object_type == 'Class') {
						$pastDateCount = checkPastDateOrNot($results->cls_id, $results->delivery_type_code);
					}
					if($pastDateCount <= 0) {
						if($catalog_reg != 'Course' || ($catalog_reg == 'Course' && $results->object_type != 'Class')) {
							if($results->object_type == 'Class') {
								$getObjectType = 'cre_sys_obt_cls';
								$delType = 'Class';
							} else if($results->object_type == 'Course') {
								$getObjectType = 'cre_sys_obt_crs';
								$delType = 'Course';
							} else {
								$getObjectType = $results->object_type;
								$delType = getTypeTitle($results);
							}
							
							$header_details->qtipIdInit = $results->cls_id . '_' . $getObjectType;
							//changed heg from 350 to 280 to fix for ticket:0076219
							$qtipOptAccessObj = "{'entityId':" . $results->cls_id . ",
		              'entityType':'" . $getObjectType . "',
		              'popupDispId':'widget_share_qtip_visible_disp_$header_details->qtipIdInit',
		              'wid':440,
		              'heg':280,
		              'postype':'topleft',
		              'linkid':'widget-share-$results->cls_id'}";
							$header_details->entity_id = $results->cls_id;
							$header_details->delType = $delType;
							$header_details->qtipOptAccessObj = $qtipOptAccessObj;
							$header_details->share_icon = true;
							if($results->object_type == 'Course') {
								$header_details->request_cls_option_class = "request-class-icon";
								$header_details->request_cls_option_title = t('Request Class');
								if(! empty($tags)) {
									$header_details->request_cls_option_data = '<a class="request-option vtip" title="'.t('Request Class').'" onclick="$(\'body\').data(\'requestclass\').openRequestClassDialog(\''.$results->cls_id.'\', \'lnr-catalog-search\');">'.titleController('LNRSEARCH-REQUEST-CLS',t('Request Class')).'</a>';	//Request Class
								} else {
									$header_details->request_cls_option_data = '<a class="request-option" onclick="$(\'body\').data(\'requestclass\').openRequestClassDialog('.$results->cls_id.', \'lnr-catalog-search\');">'.t('Request Class').'</a>';	//Request Class
								}
							}
						}
					}
				}
			}
		}
		if(!empty($_SESSION['availableFunctionalities']->exp_sp_fivestar)) {
			if($getRegister->comp_status == "lrn_crs_cmp_cmp" || $getRegister->master_enrolled_status == "lrn_tpm_ovr_cmp") {
				$rat_object_type = $results->object_type == 'Course' ? 'Class' : $results->object_type;
				$rat_object_id = $results->object_type == 'Course' ? $crs_class_id : $results->node_id;
				$header_details->scripts = "<script type=text/javascript>
					$(\"#lnr-catalog-search\").data(\"lnrcatalogsearch\").fiveStarCheckCompStatus('$results->node_id, $rat_object_type', '$rat_object_id');
				</script>";
			} else {
				$rating_node_id = (strpos($results->node_id, ',') !== false ? str_replace(',', '-', $results->node_id) : $results->node_id);
				$header_details->scripts = "<script type=text/javascript>
					$(\"body\").data(\"learningcore\").fiveStarCheck('$rating_node_id', 'cls-node-');
				</script>";
			}
			
			if(! empty($results->vote_value)) {
				$rating_values = getRatingDetails($results->node_id);
				$passParams = "data=$rating_values";
				$header_details->scripts .= "<script type=text/javascript>
				var data=\"$passParams\";
				$('#cls-node-$results->node_id').find('.total-votes').attr('id','rating-popup-$results->node_id');
				$('#cls-node-$results->node_id').find('.total-votes').attr('data',data);
				$('#cls-node-$results->node_id').find('.total-votes').mouseover(function() {
					$('body').data('learningcore').getRatingDetails(this,'$results->node_id', '$results->vote_value');
				});
				</script>";
			}
		}
		//exp_sp_lnrsearch-view-detail.tpl.php details template ends here
		
		// 		todos following params need to be added in content header
// 				data_language
// 				data_location
// 				sessionDetailsTitle
// 			srch_expires_in_classes, srch_expires_in_title, srch_expires_in
// 			srch_courses_to_complete_classes, srch_courses_to_complete_title, srch_courses_to_complete_data
// 			srch_class_count_id, srch_class_count_title, srch_class_count_data
// 			data_desc
// 			tag_info_
// 		$header_details->scripts

// 			following need to be checked
// 			request-class-icon

		expDebug::dPrint('$header_details in get_training_details_themed - '.print_r($header_details, 1), 5);
		return $header_details;
	} catch(Exception $ex) {
		expDebug::dPrint('get_training_details_themed exception here ' . $ex->getMessage(), 1);
		watchdog_exception('get_training_details_themed', $ex);
		expertusErrorThrow($ex);
	}
}
/**
 * renaming varaibles for new design of catalog page; for Course and Class
 * having all business logic of exp_sp_learning-common-register-html.tpl.php called in commonRegisterHtml() method
 * Note: $isPrereqCheck was one of the param passed to the theme, but it has not been used anywhere in the template
 * @param array $results
 */
function get_course_class_action_themed($results) {
	try {
		expDebug::dPrint('exp_sp_learning-common-register-html.tpl.php: $results = ' . print_r($results, true), 4);
		require_once (drupal_get_path('module', 'exp_sp_lnrenrollment') . '/exp_sp_launch.inc');
		global $theme_key;
		global $catalog_reg;
		expDebug::dPrint('catalog registration level ' . $catalog_reg, 5);
		$condCount = (($catalog_reg == 'Course' && $results->cls_count == 1 && $results->widgetId == 'lnr-catalog-search') || ($catalog_reg == 'Course' && $results->widgetId != 'lnr-catalog-search') || $catalog_reg != 'Course') ? 1 : 0;
		expDebug::dPrint('$condCount ' . $condCount, 5);
		$userId = getSltpersonUserId();
		
		if($catalog_reg == 'Course' && $results->widget == 'catalog-search') {
			$courseID = $results->cls_id;
			$classID = $results->crs_id;
			$classID = str_replace(',', '-', $classID);
			//$entityColor = ($theme_key == "expertusoneV2" && $results->cls_count == 1) ? 'learning-type-crs currency-override-bold' : '';
			$pastDateCount = ($results->cls_count == 1) ? checkPastDateOrNot($classID, $results->delivery_type_code) : 0;
		} else {
			$courseID = $results->crs_id;
			$classID = $results->cls_id;
			//$entityColor = ($theme_key == "expertusoneV2") ? 'learning-type-' . array_pop(explode('_', $results->delivery_type_code)) . ' currency-override-bold' : '';
			$pastDateCount = checkPastDateOrNot($classID, $results->delivery_type_code);
		}
		$entityColor = 'cls-action-button-price-lable';
	    if($catalog_reg == 'Course'){
			$passData = "data={'NodeId':'" . $results->cls_node_id . "','ClassId':'" . $classID . "','CourseId':'" . $courseID . "'}";
		}
		else{
			$passData = "data={'NodeId':'" . $results->node_id . "','ClassId':'" . $classID . "','CourseId':'" . $courseID . "'}";
		}
		$preRequisite = checkCatalogPrerequisite($courseID, 'cre_sys_obt_crs');
		if($catalog_reg == 'Course') {
			$getRegister = getRegisteredOrNotForCourseLevel($courseID, $classID, '', $results->widget, $results->is_compliance, '', 'lnr-Catalog', NULL);
		} else {
			$getRegister = getRegisteredOrNot($courseID, $classID, '', $results->widget, $results->is_compliance, '', 'lnr-Catalog', NULL);
		}
		expDebug::dPrint('get regeiser not value: ' . print_r($getRegister, 1), 4);
		if($results->delivery_type_code == "lrn_cls_dty_ilt" || $results->delivery_type_code == "lrn_cls_dty_vcl") {
			require_once (drupal_get_path('module', 'exp_sp_administration') . '/exp_sp_administration.inc');
			$classSessions = checkClassValidity($classID, $results->delivery_type_code);
			$sessionInProgress = (($classSessions->futureSessions + $classSessions->inProgressSessions) > 0 && ($classSessions->pastSessions + $classSessions->inProgressSessions) > 0) ? true : false; // Any one of future or in-progress session is available.
		}
		// $clsId = ($results->cls_count > 1) ? explode('-',$classID) : $classID;
		if($results->cls_count > 1)
			$clsId = explode('-', $classID);
		else
			$clsId[] = $classID;
		$getEnrollCnt = getEnrolledCount($courseID, $userId, $clsId, $catalog_reg);
		// complianceExpiryandRegisterCount($courseID,'',$userId);
		expDebug::dPrint('$catalog_reg : ' . $catalog_reg . ' $results->widgetId : ' . $results->widgetId . ' $courseID : ' . $courseID . ' $classID : ' . $classID, 4);
		$registerEndDateCheck = 0;
		
		$hideButton = 'show';
		if(! empty($_SESSION['widget']['catalog_display_parameters']) && $_SESSION['widget']['catalog_display_parameters']['show_button'] == false) {
			$hideButton = 'hide';
		}
		expDebug::dPrint('widget class and Course : ' . print_r($_SESSION['widget'], true) . '$hideButton : ' . $hideButton, 4);
		
		if($condCount == 1) {
			$timeZone = date_default_timezone(false);
			$defaultTimezone = ($timeZone == 'Asia/Kolkata') ? 'Asia/Calcutta' : $timeZone;
			$defaultDateTimezone = ($results->session_details->session_timezone) ? $results->session_details->session_timezone : $defaultTimezone;
			$sessionTZ = new DateTimeZone($defaultDateTimezone);
			$startdate = new DateTime(null, $sessionTZ);
			
			// Changed for #0064685
			// $startdate = $startdate->format('Y-m-d');
			$startdate = format_date(time(), 'custom', 'Y-m-d');
			expDebug::dPrint('$condCount123 ' . $results->registration_end_on, 5);
			if($results->registration_end_on != '' || $results->registration_end_on != null) {
				expDebug::dPrint('$condCount123 ' . $results->registration_end_on, 5);
				if(strtotime($results->registration_end_on) < strtotime($startdate)) {
					$registerEndDateCheck = 1;
				}
			}
		}
		expDebug::dPrint('$condCount123 ' . $registerEndDateCheck, 5);
		if($catalog_reg == 'Course') {
			if($results->cls_count == 1 || $results->view_from == 'details') {
				$results->enrolled_id = $getRegister[0]->enrolled_id;
				$results->comp_status = $getRegister[0]->comp_status;
				$results->enrolled_status = $getRegister[0]->enrolled_status;
				$results->waitlist_flag = $getRegister[0]->waitlist_flag;
				$results->waitlist_priority = $getRegister[0]->waitlist_priority;
				$results->master_enrollment_id = $getRegister[0]->master_enrollment_id;
			} else {
				$results->enrolled_id = '';
				$results->comp_status = '';
				$results->enrolled_status = '';
				$results->waitlist_flag = '';
				$results->waitlist_priority = '';
				$results->master_enrollment_id = '';
			}
		} else {
			$results->enrolled_id = $getRegister->enrolled_id;
			$results->comp_status = $getRegister->comp_status;
			$results->enrolled_status = $getRegister->enrolled_status;
			$results->waitlist_flag = $getRegister->waitlist_flag;
			$results->waitlist_priority = $getRegister->waitlist_priority;
			$results->master_enrollment_id = $getRegister->master_enrollment_id;
		}
		$cartNodeId = explode(',', $results->node_id);
		$cartNodeId = (count($cartNodeId) > 1) ? $cartNodeId : $results->node_id;
		$results->is_cart_added = isCartAdded($cartNodeId);
		$showContentAttempts = false;
		if($results->enrolled_id && ($results->delivery_type_code == 'lrn_cls_dty_wbt' || $results->delivery_type_code == 'lrn_cls_dty_vod' || $results->delivery_type_code == 'lrn_cls_dty_wbt,lrn_cls_dty_vod')) {
			$enrolled_class_id = getClassEnrollmentId($courseID, $classID, $userId,1);
			if($enrolled_class_id > 0) {
				$results->enrolled_id = $enrolled_class_id;
				$results->progress = getProgressFromEnrollmentId($results->enrolled_id);
			} else {
				$results->enrolled_id = getMasterEnrollmentStatus($results->master_enrollment_id, $results->enrolled_id);
			}
			$results->launch_info = getLaunchDetail($results->enrolled_id);
			$single_content_class = (count($results->launch_info) == 1) ? 1 : 0;
			if($single_content_class) {
				// $showContentAttempts = true;
				$IsLaunchable = $results->launch_info['0']['IsLaunchable'];
				$attemptLeft = $results->launch_info['0']['AttemptLeft'];
				$validDays = $results->launch_info['0']['daysLeft'];
				// $validDays = $results->launch_info['0']['ValidityDays'] - $results->launch_info['0']['remDays'];
				$validDayString = ($validDays == 1) ? t('LBL910') : t('LBL605');
				$crsClassId = $courseID . '_' . $classID;
			}
		}elseif($results->enrolled_id && ($results->delivery_type_code == 'lrn_cls_dty_ilt' || $results->delivery_type_code == 'lrn_cls_dty_vcl') ){
			$enrolled_class_id = getClassEnrollmentId($courseID, $classID, $userId,1);
			if($enrolled_class_id > 0) {
				$results->enrolled_id = $enrolled_class_id;
				$results->progress = getProgressFromEnrollmentId($results->enrolled_id);
			} else {
				$results->enrolled_id = getMasterEnrollmentStatus($results->master_enrollment_id, $results->enrolled_id);
			}
		}
		// expDebug::dPrint("Validity DAYS --- >> ".$validDays);
		// expDebug::dPrint("Validity DAYS --- >> ".print_r($results->launch_info,true),4);
		// $results->waitlist_seats = getWaitlistCatalogInfo($results->cls_id);
		$waitlist = 0;
		$waitlist_register = 0;
		$waitlisted = (($results->enrolled_status == 'lrn_crs_reg_wtl') || ($results->waitlist_flag == 'lrn_crs_reg_wtl')) ? 1 : 0;
		if($condCount == 1) {
			if(($results->delivery_type_code == "lrn_cls_dty_ilt" || $results->delivery_type_code == "lrn_cls_dty_vcl") && (($results->available_seats == 0) || ($results->enrolled_status == 'lrn_crs_reg_wtl') || ($results->waitlist_flag == 'lrn_crs_reg_wtl'))) {
				$waitlist_register = $results->waitlist_seats;
				$waitlist = 1;
			}
		}
		expDebug::dPrint('checking the dprint values to be printed in catalog common action 22' . print_r($getRegister, true));
		// 42055: Provide an option in the admin share widget screen to pass site url
		$referer_url = $_SERVER['HTTP_REFERER'];
		$header_details = new stdClass();
		$header_details->action_variables->enrolled_id = $results->enrolled_id;
		$htmlout = '';
		// $header_details->action_variables->htmlout = '';
		if($hideButton != 'hide') {
			/* $htmlout .= '<div class="top-record-div">';
			$htmlout .= '<table class="search-register-btn" border="0" cellpadding="0" cellspacing="0">';
			$htmlout .= '<tr>';
			$htmlout .= '<td';
			$td_close = '>'; */
			$htmlout .= '<div class = "detail-wrapper">';
			$htmlout .= '<div';
			$td_close = '>';
			expDebug::dPrint('results->comp_status----->' . print_r($results->comp_status, true), 4);
			expDebug::dPrint('results->delivery_type_code----->' . print_r($results, true), 4);
			if ($results->multi_register == 1) {
				if(!empty($results->enrolled_id)){
				 $enrollmentDetails = getEnrollmentDetailsForNotifications($results->enrolled_id);
				 $results->comp_status = $enrollmentDetails['comp_status'];
				}
				if (!empty(GetIfExpired($courseID,$userId) || !empty(CheckCourseCompExpiry($courseID))) && ($results->enrolled_id != '' || $results->enrolled_id != null || $results->enrolled_id != 0)){
					$ifexpired = 1;
					$msg = t('Registered');
				}else if(!empty(GetIfExpired($courseID,$userId) || !empty(CheckCourseCompExpiry($courseID))) && ($results->enrolled_id == '' || $results->enrolled_id == null || $results->enrolled_id == 0)){
					$ifexpired = 1;
					$msg = t('Register');
				}
			} else{
				if (!empty(GetIfExpired($courseID,$userId) || !empty(CheckCourseCompExpiry($courseID)) ) && ($results->enrolled_id == '' || $results->enrolled_id == null || $results->enrolled_id == 0)){
					$ifexpired = 1;
					$msg = t('Register');
				}
			}
			$statusArray = array('lrn_crs_cmp_enr','lrn_crs_cmp_inp');
			$regstatusArray = array('lrn_crs_reg_ppm');
			if(($results->enrolled_id != '' || $results->enrolled_id != null || $results->enrolled_id != 0) && ($results->multi_register == 0 || ($results->multi_register == 1 && (in_array($results->comp_status,$statusArray) || in_array($enrollmentDetails['reg_status'],$regstatusArray) ))) && $results->comp_status != 'lrn_crs_cmp_exp') {
				$regMsg = (($results->comp_status == 'lrn_crs_cmp_cmp') ? t('Completed') : ((($results->enrolled_status == 'lrn_crs_reg_wtl') || ($results->waitlist_flag == 'lrn_crs_reg_wtl')) ? t('LBL190') : t('Registered'))); // Waitlisted
				$waitlist_register = ($regMsg !== t('LBL190') ? 0 : $waitlist_register); // Waitlisted
				$seatDisplay = ($regMsg == t('LBL190') ? true : false); // Waitlisted
				
				$course_com_cnt = getCourseCompletedCount($courseID, $userId);
				if($catalog_reg == 'Course' && $results->cls_count > 1) {
					
					$courseCnt = (($results->comp_status == 'lrn_crs_cmp_cmp') ? 'Y' : '');
					
					if(($catalog_reg == 'Course' && $results->cls_count <= 1) || ($catalog_reg != 'Course' && $getEnrollCnt != $results->cls_count)) {
						$action_id = "registerCls_$classID";
						$action_class = (($getEnrollCnt == $results->cls_count) ? 'action-btn-disable' : 'action-btn');
						$action_onclick = "$('body').data('learningcore').callEquivalencePopup('$results->widgetId', '$userId', '$courseID', 
				   '$classID', '$waitlist', '$results->enrolled_status', 'fromCourselvl', '$courseCnt');";
						$action_html = t($regMsg);
					} else if(($results->delivery_type_code == 'lrn_cls_dty_wbt' || $results->delivery_type_code == 'lrn_cls_dty_vod' || $results->delivery_type_code == 'lrn_cls_dty_wbt,lrn_cls_dty_vod') && ($results->comp_status == 'lrn_crs_cmp_enr' || $results->comp_status == 'lrn_crs_cmp_inp' || ($course_com_cnt < $getEnrollCnt))) {
						$action_id = "registerCls_$classID";
						$action_class = "action-btn";
						$action_onclick = "$('#lnr-catalog-search').data('lnrcatalogsearch').showSelectClass('$userId', '$courseID');";
						$action_html = t('LBL199');
					} else {
						$action_class = "action-btn-disable";
						$action_html = t($regMsg);
					}
				} else {
					if(($results->delivery_type_code == 'lrn_cls_dty_wbt' || $results->delivery_type_code == 'lrn_cls_dty_vod') && ($results->comp_status == 'lrn_crs_cmp_enr' || $results->comp_status == 'lrn_crs_cmp_inp')) {
						$res = registeredToLaunch($userId, $classID, $courseID, $results->enrolled_id, $results->delivery_type_code, '', $regMsg,$results->view_from);
						$action_html = $res[0];
						$showContentAttempts = $res[1];
						$td_close = '';
					} else {
						$action_id = "registerCls_$classID";
						$action_class = "action-btn-disable";
						$action_html = t($regMsg);
					}
				}
			} else if((($results->delivery_type_code == "lrn_cls_dty_ilt" || $results->delivery_type_code == "lrn_cls_dty_vcl") && $results->available_seats == 0 && $results->waitlist_seats == 0) && ($condCount == 1)) {
				$action_class = "action-btn-disable";
				$action_id = "registerCls_$classID";
				$action_html = t('LBL046');
			} else if((($results->delivery_type_code == "lrn_cls_dty_ilt" || $results->delivery_type_code == "lrn_cls_dty_vcl") && $sessionInProgress) && ($condCount == 1)) {
				$action_class = "action-btn-disable";
				$action_id = "registerCls_$classID";
				$action_html = t('In progress'); // In progress
			} else if((($results->delivery_type_code == "lrn_cls_dty_ilt" || $results->delivery_type_code == "lrn_cls_dty_vcl") && $pastDateCount > 0) && ($condCount == 1)) {
				$action_class = "action-btn-disable";
				$action_id = "registerCls_$classID";
				$action_html = t('LBL105'); // Delivered
			} else if(($registerEndDateCheck != 0) && ($condCount == 1)) {
				$action_class = "action-btn-disable";
				$action_id = "registerCls_$classID";
				$action_html = t('LBL047'); // Closed
			} else if($catalog_reg == 'Course' && $results->cls_count == 0 && $results->widgetId == 'lnr-catalog-search') {
				$action_class = "action-btn-disable";
				$action_id = "registerCls_$classID";
				$action_html = t('LBL636'); // No Classes
		    } else if($ifexpired==1){
		    	$action_class = "action-btn-disable";
		    	$action_html = t($msg);
							
			} else {
				
				$seatDisplay = true;
				if(count($preRequisite) > 0) {
					$action_class = ((!empty($_SESSION['availableFunctionalities']->exp_sp_commerce) && $results->price > 0 && $condCount == 1) ? "action-btn priced": "action-btn");
					$action_id = "prereqCourse$courseID";
					if((isset($_SESSION['widget']['pass_url']) && ($_SESSION['widget']['pass_url'] === TRUE || $_SESSION['widget']['pass_url'] == 1) && (strpos($referer_url, 'page_number') === false && strpos($referer_url, 'click_id') === false && strpos($referer_url, 'row_number') === false)) && (arg(1) == 'catalog-search' && arg(2) == 'search')) {
						$action_onclick = "passUrlCommonCall(this.id);";
					} else {
						if($userId != "" && $userId > 0) {
							$action_onclick = "$('body').data('prerequisite').getTpPrerequisites($courseID, '','course','l1');";
						} else {
							$action_onclick = "$('body').data('learningcore').callSigninWidget(this.id);";
						}
					}
					$action_html = '<div>' . t('LBL230') . '</div>'; // Prerequisite
					                                             // 41115: When commerce is enabled and price is not set then we should be showing as Register without the 0$ //
					if(!empty($_SESSION['availableFunctionalities']->exp_sp_commerce) && $results->price > 0) {
						$action_html .= "<div class='$entityColor'>" . (($condCount == 1) ? $results->currency_type . " " . $results->price : '') . '</div>';
					}
				} else if($condCount == 1 && !empty($_SESSION['availableFunctionalities']->exp_sp_commerce)) {
					// if(!empty($_SESSION['availableFunctionalities']->exp_sp_commerce)){
					
					if($results->is_cart_added) {
						$action_class = "action-btn-disable";
						$action_id = "addToCartList_$classID";
						$action_html = t('LBL049'); // Added to Cart
					} else if(($results->price != '0.00') || ($results->price == '0.00' && $results->export_compliance == 'Y')) {
						$action_data = "$passData";
						$action_class = (($waitlist_register > 0) ? 'action-btn-waitlist' : 'action-btn priced');
						$action_id = "addToCartList_$classID";
						if((isset($_SESSION['widget']['pass_url']) && ($_SESSION['widget']['pass_url'] === TRUE || $_SESSION['widget']['pass_url'] == 1) && (strpos($referer_url, 'page_number') === false && strpos($referer_url, 'click_id') === false && strpos($referer_url, 'row_number') === false)) && (arg(1) == 'catalog-search' && arg(2) == 'search')) {
							$action_onclick = "passUrlCommonCall(this.id);";
						} else {
							if($userId != "" && $userId > 0) {
								$action_onclick = "$('body').data('learningcore').callAddToCart('$results->widgetId', '1', '$classID', '', '', $waitlist);";
							} else {
								$action_onclick = "$('body').data('learningcore').callSigninWidget(this.id);";
							}
						}
						$action_html = '<div>'.(($waitlist_register > 0) ? t("Waitlist") : t('LBL050')) . '</div>'; // Add to cart
						// 41115: When commerce is enabled and price is not set then we should be showing as Register without the 0$ //
						$action_html .= ((!empty($_SESSION['availableFunctionalities']->exp_sp_commerce) && $results->price > 0) ? ("<div class='" . $entityColor . "'>" . $results->currency_type . " " . $results->price . "</div>") : '');
					} else if(($results->price == '0.00' && $results->export_compliance == 'N') || ($waitlist_register > 0)) {
						$action_class = (($waitlist_register > 0) ? 'action-btn-waitlist' : 'action-btn');
						$action_id = "registerCls_$classID";
						if((isset($_SESSION['widget']['pass_url']) && ($_SESSION['widget']['pass_url'] === TRUE || $_SESSION['widget']['pass_url'] == 1) && (strpos($referer_url, 'page_number') === false && strpos($referer_url, 'click_id') === false && strpos($referer_url, 'row_number') === false)) && (arg(1) == 'catalog-search' && arg(2) == 'search')) {
							$action_onclick = "passUrlCommonCall(this.id);";
						} else {
							if($userId != "" && $userId > 0) {
								
								$action_onclick = "$('body').data('learningcore').callEquivalencePopup('$results->widgetId', '$userId', '$courseID', '$classID', '$waitlist', '$results->enrolled_status');";
							} else {
								$action_onclick = "$('body').data('learningcore').callSigninWidget(this.id);";
							}
						}
// 						expDebug::dPrint('Waitlist $waitlist_register '.$waitlist_register, 5);
						$action_html = '<div>' . (($waitlist_register > 0) ? t("Waitlist") : (($results->enrolled_status == 'lrn_crs_reg_cnf' && $results->comp_status != 'lrn_crs_cmp_exp') ? t('Register') : t('Register'))) . '</div>';
						/* <?php print ''; */
						// 41115: When commerce is enabled and price is not set then we should be showing as Register without the 0$ //print (!empty($_SESSION['availableFunctionalities']->exp_sp_commerce) && $results->enrolled_status != 'lrn_crs_reg_cnf') ? ("<div class='".$entityColor."'>".$results->currency_type ." ".$results->price."</div>") : '';
					}
				} else {
					if($catalog_reg == 'Course' && $results->cls_count > 1 && $results->widgetId == 'lnr-catalog-search') {
						if(! empty($_SESSION['availableFunctionalities']->exp_sp_commerce) && ($results->is_cart_added)) {
							
							$action_class = "action-btn-disable";
							$action_id = "addToCartList_$classID";
							$action_html = t('LBL049'); // Added to Cart
						} else if(($results->enrolled_id != '' || $results->enrolled_id != null || $results->enrolled_id != 0) && $results->multi_register == 1) {
							$action_class = (($waitlist_register > 0) ? 'action-btn-waitlist' : 'action-btn');
							$action_id = "registerCls_$courseID";
							if((isset($_SESSION['widget']['pass_url']) && ($_SESSION['widget']['pass_url'] === TRUE || $_SESSION['widget']['pass_url'] == 1) && (strpos($referer_url, 'page_number') === false && strpos($referer_url, 'click_id') === false && strpos($referer_url, 'row_number') === false)) && (arg(1) == 'catalog-search' && arg(2) == 'search')) {
								$action_onclick = "passUrlCommonCall(this.id);";
							} else {
								if($userId != "" && $userId > 0) {
									$action_onclick = "$('body').data('learningcore').callEquivalencePopup('$results->widgetId', '$userId', '$courseID', '$results->registered_class', '$waitlist', '$results->enrolled_status', ''fromCourselvl'');";
								} else {
									$action_onclick = "$('body').data('learningcore').callSigninWidget(this.id);";
								}
							}
							$action_html = (($waitlist_register > 0) ? t("Waitlist") : (($results->enrolled_status == 'lrn_crs_reg_cnf' && $results->comp_status != 'lrn_crs_cmp_exp') ? t('Registered') : t('Register')));
						} else {
							
							$action_class = (($waitlist_register > 0) ? 'action-btn-waitlist' : 'action-btn');
							$action_id = "registerCls_" . (($catalog_reg == 'Course' && $results->widgetId == 'lnr-catalog-search') ? $classID : $courseID);
							if((isset($_SESSION['widget']['pass_url']) && ($_SESSION['widget']['pass_url'] === TRUE || $_SESSION['widget']['pass_url'] == 1) && (strpos($referer_url, 'page_number') === false && strpos($referer_url, 'click_id') === false && strpos($referer_url, 'row_number') === false)) && (arg(1) == 'catalog-search' && arg(2) == 'search')) {
								$action_onclick = "passUrlCommonCall(this.id);";
							} else {
								if($userId != "" && $userId > 0) {
									if(($catalog_reg == 'Course' && $results->cls_count <= 1) || $results->view_from == 'details' || ($catalog_reg != 'Course' && $getEnrollCnt)) {
										$action_onclick = "$('body').data('learningcore').callEquivalencePopup('$results->widgetId', '$userId', '$courseID', '$classID', '$waitlist', '$results->enrolled_status', ''fromCourselvl'');";
									} else {
										$action_onclick = "$('#lnr-catalog-search').data('lnrcatalogsearch').showSelectClass('$userId', '$courseID');";
									}
								} else {
									$action_onclick = "$('body').data('learningcore').callSigninWidget(this.id);";
								}
							}
							$action_html = (($waitlist_register > 0) ? t("Waitlist") : (($results->enrolled_status == 'lrn_crs_reg_cnf' && $results->comp_status != 'lrn_crs_cmp_exp') ? t('Register') : t('Register')));
						}
					} else {
						$action_class = (($waitlist_register > 0) ? 'action-btn-waitlist' : (($results->multi_register == 0 && $getEnrollCnt == $results->cls_count && isset($results->cls_count)) ? 'action-btn-disable' : 'action-btn'));
						$action_id = "registerCls_$classID";
						if((isset($_SESSION['widget']['pass_url']) && ($_SESSION['widget']['pass_url'] === TRUE || $_SESSION['widget']['pass_url'] == 1) && (strpos($referer_url, 'page_number') === false && strpos($referer_url, 'click_id') === false && strpos($referer_url, 'row_number') === false)) && (arg(1) == 'catalog-search' && arg(2) == 'search')) {
							$action_onclick = "passUrlCommonCall(this.id);";
						} else {
							if($userId != "" && $userId > 0) {
								if($getEnrollCnt != $results->cls_count || $results->view_from == 'details' || $results->multi_register == 1) {
									$action_onclick = "$('body').data('learningcore').callEquivalencePopup('$results->widgetId', '$userId', '$courseID', '$classID', '$waitlist', '$results->enrolled_status');";
								}
							} else {
								$action_onclick = "$('body').data('learningcore').callSigninWidget(this.id);";
							}
						}
						$action_html = (($waitlist_register > 0) ? t("Waitlist") : (($results->enrolled_status == 'lrn_crs_reg_cnf' && $results->comp_status != 'lrn_crs_cmp_exp') ? t('Register') : t('Register')));
					}
				}
			}

			$htmlout .= ($action_id != '' ? ' id="'.$action_id.'"' : '');
			$htmlout .= ($action_class != '' ? ' class="'.$action_class.'"' : '');
			$htmlout .= ($action_onclick != '' ? ' onclick="'.$action_onclick.'"' : '');
			$htmlout .= ($action_data != '' ? ' data="'.$action_data.'"' : '');
			$htmlout .= $td_close.$action_html;		//$td_close will be empty when registeredToLaunch() is called

			$htmlout .= '</div>';
			$htmlout .= '</div>';
			expDebug::dPrint('paint action button in get_course_class_action_themed - '.print_r($htmlout, 1), 5);
			$header_details->action_variables->htmlout = $htmlout;
			$header_details->action_variables->class_id = $classID;
			$header_details->action_variables->enrolled_id = $results->enrolled_id;
			expDebug::dPrint("Valid Days -- > " . $validDays, 5);
			//
			if(contentPlayerIsActive()) {
				$header_details->launch_variables->isLaunch = $showContentAttempts;
				$header_details->launch_variables->class_id = $results->class_id;
				$header_details->launch_variables->course_id = $results->course_id;
				$header_details->launch_variables->enrolled_id = $results->enrolled_id;
				// $header_details->launch_variables->user_id = $userId;
				$header_details->launch_variables->master_enrollment_id = ($results->master_enrollment_id != null && $results->master_enrollment_id != '') ? $results->master_enrollment_id : 0;
			} else {
				$header_details->launch_variables->isLaunch = false;
			}
			$header_details->action_variables->showprogress = false;
			if($results->comp_status == 'lrn_crs_cmp_enr' || $results->comp_status == 'lrn_crs_cmp_inp' || $results->comp_status == 'lrn_crs_cmp_att' || $results->comp_status == 'lrn_crs_cmp_cmp') {
				$header_details->action_variables->showprogress = true;
			}
			if($results->comp_status == 'lrn_crs_cmp_cmp' && $results->multi_register == 1) {
				$header_details->action_variables->showprogress = false;
			}
			$header_details->action_variables->enrolled_id = $results->enrolled_id;
			$header_details->action_variables->progress = convertProgressValue($results->progress);
			//
			$header_details->action_variables->attempt_left_block = false;
			if($showContentAttempts && $results->comp_status != 'lrn_crs_cmp_cmp' && ! contentPlayerIsActive()) { // && $results->cls_count == 1
				$header_details->action_variables->attempt_left_block = true;
				$header_details->action_variables->attempt_left_id = "attempt_left_" . $crsClassId;
				$header_details->action_variables->attempt_left_class = "attempts_left";
				$header_details->action_variables->attempt_left_content = '';
				if($attemptLeft != 'notset' && ! empty($attemptLeft)) {
					$header_details->action_variables->attempt_left_content = $attemptLeft . ' ' . t('LBL202');
				}
				$header_details->action_variables->validity_label_id = "content_concat_str_" . $crsClassId;
				$header_details->action_variables->validity_label_class = "content_concat_string";
				$header_details->action_variables->validity_content_label = t('LBL647');
				$header_details->action_variables->validity_content = '';
				$header_details->action_variables->validity_id = "content_validity_" . $crsClassId;
				$header_details->action_variables->validity_class = "content_validity";
				if($validDays > 0) {
					$header_details->action_variables->validity_content = $validDays . ' ' . $validDayString . ' ' . t('LBL604');
				}
				
				if($results->delivery_type_code == 'lrn_cls_dty_vod') {
					// expDebug::dPrint('launch info from tpl'.print_r($results->launch_info, 1), 5);
					$progress = '';
					$progress_percent = 0;
					foreach($results->launch_info as $launch) {
						
						$suspend_data = (isset($launch['SuspendData']) ? json_decode(rawurldecode($launch['SuspendData'])) : null);
						$progress = 0;
						// expDebug::dPrint('launch info SuspendData'.print_r($suspend_data, 1), 5);
						if($suspend_data != null) {
							$progress = $suspend_data->progress;
							// expDebug::dPrint('progress of each vod'.print_r($progress, 1), 5);
						}
						$progress_percent += floatval($progress);
					}
					$progress_percent = $progress_percent / count($results->launch_info);
					$progress_percent_string = round($progress_percent) . '% ' . t('Completed');
					// to show progress percentage for single content vod classes
					// expDebug::dPrint('launch info from tpl'.print_r($progress_percent, 1), 5);
					/*
					 * <div class="course-content-validity">
					 * <span class="content_concat_string">
					 * <?php if (($attemptLeft != 'notset' || !empty($validDays)) && count($results->launch_info) == 1) {
					 * print t('LBL647');
					 * }?>
					 * </span>
					 * <?php if (count($results->launch_info) == 1) { ?>
					 * <span id="content_progress_<?php print $crsClassId; ?>"
					 * class="content_validity">
					 * <?php print $progress_percent_string; ?>
					 * </span> <?php } ?>
					 * </div>
					 */
					$header_details->action_variables->video_progress_id = "content_progress_" . $crsClassId;
					$header_details->action_variables->video_progress_class = "content_validity";
					$header_details->action_variables->video_progress_content = $progress_percent_string;
					if(($attemptLeft != 'notset' || ! empty($validDays)) && count($results->launch_info) == 1) {
						$header_details->action_variables->video_progress_concat_string = t('LBL647');
					}
				}
			}
			$header_details->action_variables->seat_block = false;
			if(($condCount == 1) && $seatDisplay == true) {
				if($results->delivery_type_code == "lrn_cls_dty_ilt" || $results->delivery_type_code == "lrn_cls_dty_vcl") {
					
					if($waitlisted == 1) {
						$seatInfo = t('LBL125') . ' ' . getWaitlistPosition($classID, $courseID, $userId);
					} else if($waitlist_register > 0) {
						
						$seatInfo = (($waitlist_register == 1) ? ($waitlist_register . " " . t('LBL126')) : // Waitlist Seat left
($waitlist_register . " " . t('LBL127'))); // Waitlist Seats left
					} else {
						$seatInfo = $results->available_seats;
						$seatInfo = (($results->available_seats == 1) ? ($results->available_seats . " " . t('LBL052')) : // Seat left
($results->available_seats . " " . t('LBL053'))); // Seats left
					}
					
					$header_details->action_variables->seat_block = true;
					$header_details->action_variables->seat_id = "seats_available_" . $classID;
					$header_details->action_variables->seat_class = "catlog_seats_available";
					$header_details->action_variables->seat_content = $seatInfo;
				}
			}
		}
		expDebug::dPrint('$header_details in get_course_class_action_themed '.print_r($header_details, 1), 5);
		return $header_details->action_variables;
	} catch(Exception $ex) {
		expDebug::dPrint('get_course_class_action_themed exception here ' . $ex->getMessage(), 1);
		watchdog_exception('get_course_class_action_themed', $ex);
		expertusErrorThrow($ex);
	}
}
/**
 * renaming varaibles for new design of catalog page; for Traing plan
 * having all business logic of exp_sp_learning-common-lp-register-html.tpl.php called in commonLPRegisterHtml() method
 * Note: $isPrereqCheck was one of the param passed to the theme, but it has not been used anywhere in the template
 * @param array $results
 */
function get_tp_action_themed($results) {
	try {
		expDebug::dPrint('exp_sp_learniasdsang-common-lp-register-html.tpl.php: $results = ' . print_r($results, true), 5);
		global $theme_key;
		global $catalog_reg;
		$delivettype = getObjectdeliveryType($results->cls_id, $userId);
		$getcount = getCourseClassCountForLP($results->cls_id, $userId);
		if((in_array("lrn_cls_dty_ilt", $delivettype)) || (in_array("lrn_cls_dty_vcl", $delivettype))) {
			$match = true;
		} else {
			$match = false;
		}
		//81675: TP action button shows closed instead of register.
		if($match == true) {
			$results->cls_count = $getcount[0]->cnt;
		} else {
			$results->cls_count = 0;
		}
		
		//$entityColor = (($theme_key == "expertusoneV2") ? 'learning-type-' . array_pop(explode('_', $results->object_type)) . ' currency-override-bold' : '');
		$entityColor = 'cls-action-button-price-lable';
		if($results->object_type == 'Course' || $results->object_type == 'Class') {
			$condCount = ((($catalog_reg == 'Course' && $results->cls_count == 1 && $results->widgetId == 'lnr-catalog-search') || ($catalog_reg == 'Course' && $results->widgetId != 'lnr-catalog-search')) ? 1 : 0);
		} else {
			$condCount = (((($catalog_reg == 'Course' || $catalog_reg == 'Class') && $results->cls_count == 1 && $results->widgetId == 'lnr-catalog-search' || $results->widgetId == 'learning-plan-details-data') || ($catalog_reg == 'Course' && $results->widgetId != 'lnr-catalog-search')) ? 1 : 0);
		}
		$userId = getSltpersonUserId();
		$module_seq = getModuleId($userId, $results->cls_id);
		
		if(count($module_seq) > 0) {
			$module_path = $module_seq[0]->recertify_path;
		}
		
		$resultsMasterEnroll = getObjectRegisteredOrNot($results->cls_id, '', $module_path);
		expDebug::dPrint('$resultsMasterEnroll '.print_r($resultsMasterEnroll, 1));
		$allow_recertify = 0;
		if($resultsMasterEnroll->object_type == 'cre_sys_obt_crt' && $resultsMasterEnroll->master_enrolled_status == 'lrn_tpm_ovr_cmp') {
			$allow_recertify = getRecertifyBeforeCertifyExpired($resultsMasterEnroll->comp_date, $resultsMasterEnroll->expires_in_value, $resultsMasterEnroll->expires_in_unit);
		}
		$results->is_cart_added = isCartAdded($results->node_id);
		$passData = "data={'NodeId' :'" . $results->node_id . "','TpId':'" . $results->cls_id . "'}";
		$preRequisite = checkCatalogPrerequisite($results->cls_id, 'cre_sys_obt_trp');
		if($match == true) {
			$results->prm_available_seats = getObjectAvailableSeats($results->cls_id, $userId);
			
			$results->waitlist_status = - 1;
			if($results->prm_available_seats <= 0) {
				$results->waitlist_status = getProgramWaitlistStatus($results->cls_id, $userId);
			}
		}
		$hideButton = 'show';
		if(! empty($_SESSION['widget']['catalog_display_parameters']) && $_SESSION['widget']['catalog_display_parameters']['show_button'] == false) {
			$hideButton = 'hide';
		}
		expDebug::dPrint('widget Certificate: ' . print_r($_SESSION['widget'], true) . '$hideButton : ' . $hideButton, 4);
		if($condCount == 1) {
			if(($results->waitlist_status > 0) && ($resultsMasterEnroll->master_enrolled_id == '' || $resultsMasterEnroll->master_enrolled_id == null || $resultsMasterEnroll->master_enrolled_id == 0)) {
				$waitlist_register = $results->waitlist_status;
				$waitlist = 1;
			} else {
				$waitlist_register = 0;
				$waitlist = 0;
			}
		}
		if($resultsMasterEnroll->master_enrolled_status == 'lrn_tpm_ovr_wtl') {
			$waitlist_st = 1;
		} else {
			$waitlist_st = 0;
		}
		//81675: TP action button shows closed instead of register.
		$startdate = format_date(time(), 'custom', 'Y-m-d');
		$end_date_arr = explode(' ',$results->registration_end_on);
		$registarion_end_date = $end_date_arr[0];
		$registerEndDateCheck =0;
		//if($condCount == 1) {
			if($results->registration_end_on != '' || $results->registration_end_on != null) {
				if(strtotime($registarion_end_date) < strtotime($startdate)) {
					$registerEndDateCheck = 1;
				}
			}
		//}
		$referer_url = $_SERVER['HTTP_REFERER'];
		if($hideButton != 'hide') {
			/*
			 * <div class="top-record-div">
			 * <table class="search-register-btn" border="0" cellpadding="0" cellspacing="0">
			 * <tr>
			 */
			$recertify_enable = 0;
			$NextmoduleAvailable =getCourseMappingCount($results->cls_id,$resultsMasterEnroll->recertify_path.'-R');
			if($resultsMasterEnroll->master_enrolled_id != '' || $resultsMasterEnroll->master_enrolled_id != null || $resultsMasterEnroll->master_enrolled_id != 0) {
				
				if($results->object_type == 'cre_sys_obt_crt' && (($resultsMasterEnroll->master_enrolled_status == 'lrn_tpm_ovr_exp') || $allow_recertify == 1) && $NextmoduleAvailable >0) {
					$action_class = "action-btn";
					$action_id = "object-registerCls_$results->cls_id";
					$action_onclick = "$('body').data('learningcore').callPopupOrNot('enroll-lp-result-container','$results->cls_id',null,'N',null,'$resultsMasterEnroll->recertify_path-R');";
					$action_html = t('LBL429');
					$recertify_enable = 1;
				} else {
					$seatDisplay = true;
					
					$tpcompleted = t('Completed');
					$tpwaitlist = t('LBL190');
					$tpregistered = t('Registered');
			
					$regMsg = (($resultsMasterEnroll->master_enrolled_status == 'lrn_tpm_ovr_cmp' || $resultsMasterEnroll->master_enrolled_status == 'lrn_tpm_ovr_exp') ? $tpcompleted : (($waitlist_st > 0) ? $tpwaitlist : $tpregistered));
					$action_class = "action-btn-disable";
					$action_id = "object-registerCls_$results->cls_id";
					$action_html = t($regMsg);
				}
			} else if(($match == true) && ($results->prm_available_seats <= 0 && $results->waitlist_status == 0) && ($condCount == 1)) {
				$action_class = "action-btn-disable";
				$action_id = "object-registerCls_$results->cls_id";
				$action_html = t('LBL046');
			} else {
				$seatDisplay = true;
				if((count($preRequisite) > 0)) {
					$action_class = "action-btn";
					$action_id = "prereqCourse$results->cls_id";
					if((isset($_SESSION['widget']['pass_url']) && ($_SESSION['widget']['pass_url'] === TRUE || $_SESSION['widget']['pass_url'] == 1) && (strpos($referer_url, 'page_number') === false && strpos($referer_url, 'click_id') === false && strpos($referer_url, 'row_number') === false))) {
						$action_onclick = "passUrlCommonCall(this.id);";
					} else {
						if($userId != "" && $userId > 0) {
							$action_onclick = "$('body').data('prerequisite').getTpPrerequisites($results->cls_id, '$results->widgetId', 'initPrereq');";
						} else {
							$action_onclick = "$('body').data('learningcore').callSigninWidget(this.id);";
						}
					}
					$action_html = '<div>' . t('LBL230') . '</div>';
					// 41115: When commerce is enabled and price is not set then we should be showing as Register without the 0$ //
					if(! empty($_SESSION['availableFunctionalities']->exp_sp_commerce) && $results->prm_price > 0) {
						$action_html .= "<div class='$entityColor'>" . (($condCount == 1) ? $results->prm_currency_type . " " . $results->prm_price : '') . "</div>";
					}
				} else if(($registerEndDateCheck == 1)) {
					$action_class = "action-btn-disable";
					$action_id = "registerCls_$results->cls_id";
					$action_html = t('LBL047'); // Closed
				} else if(/*$condCount == 1 &&*/ ! empty($_SESSION['availableFunctionalities']->exp_sp_commerce)) {
					if($results->is_cart_added) {
						$action_class = "action-btn-disable";
						$action_id = "object-addToCartList_$results->cls_id";
						$action_html = t('LBL049');
					} else if($results->prm_price != '0.00') {
						$action_data = "$passData";
						$action_class = (($waitlist_register > 0) ? 'action-btn-waitlist' : 'action-btn priced');
						$action_id = "object-addToCartList_$results->cls_id";
						if((isset($_SESSION['widget']['pass_url']) && ($_SESSION['widget']['pass_url'] === TRUE || $_SESSION['widget']['pass_url'] == 1) && (strpos($referer_url, 'page_number') === false && strpos($referer_url, 'click_id') === false && strpos($referer_url, 'row_number') === false)) && (arg(1) == 'catalog-search' && arg(2) == 'search')) {
							$action_onclick = "passUrlCommonCall(this.id);";
						} else {
							if($userId != "" && $userId > 0) {
								$action_onclick = "$('body').data('learningcore').callPopupOrNot('$results->widgetId','$results->cls_id','Cart','N','');";
							} else {
								$action_onclick = "$('body').data('learningcore').callSigninWidget(this.id);";
							}
						}
						$action_html = '<div>' . (($waitlist_register > 0) ? t("Waitlist") : t('LBL050')) . '</div>';
						$action_html .= (! empty($_SESSION['availableFunctionalities']->exp_sp_commerce) ? ("<div class='" . $entityColor . "'>" . $results->prm_currency_type . " " . $results->prm_price . "</div>") : '');
					} else {
						$action_class = (($waitlist_register > 0) ? 'action-btn-waitlist' : 'action-btn');
						$action_id = "object-registerCls_$results->cls_id";
						if((isset($_SESSION['widget']['pass_url']) && ($_SESSION['widget']['pass_url'] === TRUE || $_SESSION['widget']['pass_url'] == 1) && (strpos($referer_url, 'page_number') === false && strpos($referer_url, 'click_id') === false && strpos($referer_url, 'row_number') === false)) && (arg(1) == 'catalog-search' && arg(2) == 'search')) {
							$action_onclick = "passUrlCommonCall(this.id);";
						} else {
							if($userId != "" && $userId > 0) {
								$action_onclick = "$('body').data('learningcore').callPopupOrNot('$results->widgetId', '$results->cls_id', '', 'N', '');";
							} else {
								$action_onclick = "$('body').data('learningcore').callSigninWidget(this.id);";
							}
						}
						$action_html = '<div>' . (($waitlist_register > 0) ? t("Waitlist") : t('Register')) . '</div>';
						// 41115: When commerce is enabled and price is not set then we should be showing as Register without the 0$ //
						$action_html .= ((! empty($_SESSION['availableFunctionalities']->exp_sp_commerce) && $results->prm_price > 0) ? ("<div class='" . $entityColor . "'>" . $results->prm_currency_type . " " . $results->prm_price . "</div>") : '');
					}
				} else {
					$action_class = (($waitlist_register > 0) ? 'action-btn-waitlist' : 'action-btn');
					$action_id = "object-registerCls_$results->cls_id";
					if((isset($_SESSION['widget']['pass_url']) && ($_SESSION['widget']['pass_url'] === TRUE || $_SESSION['widget']['pass_url'] == 1) && (strpos($referer_url, 'page_number') === false && strpos($referer_url, 'click_id') === false && strpos($referer_url, 'row_number') === false)) && (arg(1) == 'catalog-search' && arg(2) == 'search')) {
						$action_onclick = "passUrlCommonCall(this.id);";
					} else {
						if($userId != "" && $userId > 0) {
							$action_onclick = "$('body').data('learningcore').callPopupOrNot('$results->widgetId', '$results->cls_id', '', 'N', '');";
						} else {
							$action_onclick = "$('body').data('learningcore').callSigninWidget(this.id);";
						}
					}
					$action_html = (($waitlist_register > 0) ? t("Waitlist") : t('Register'));
				}
			}
			$header_details = new stdClass();
// 			$header_details->action_variables->enrolled_id = $results->enrolled_id;
			$htmlout = '';
			$htmlout .= '<div class = "detail-wrapper">';
			$htmlout .= '<div';
			$td_close = '>';
			$htmlout .= ($action_id != '' ? ' id="'.$action_id.'"' : '');
			$htmlout .= ($action_class != '' ? ' class="'.$action_class.'"' : '');
			$htmlout .= ($action_onclick != '' ? ' onclick="'.$action_onclick.'"' : '');
			$htmlout .= ($action_data != '' ? ' data="'.$action_data.'"' : '');
			$htmlout .= $td_close.$action_html;		//$td_close will be empty when registeredToLaunch() is called
			/* $htmlout .= '</td>';
			 $htmlout .= '</tr>';
			 $htmlout .= '</table>';
			 $htmlout .= '</div>'; */
			$htmlout .= '</div>';
			$htmlout .= '</div>';
			expDebug::dPrint('paint action button in get_course_class_action_themed - '.print_r($htmlout, 1), 5);
			$header_details->action_variables->htmlout = $htmlout;
			if(contentPlayerIsActive()) {
				$header_details->action_variables->progress	= convertProgressValue($resultsMasterEnroll->overall_progress);
				if($recertify_enable ==1){
					$header_details->action_variables->progress	= '0.0';
				}
			}
			else {
				$header_details->action_variables->progress	= convertProgressValue($resultsMasterEnroll->percentage_complete);
			}
			$prmDetail->action_variables->showprogress = false;
			if($resultsMasterEnroll->master_enrolled_status == 'lrn_tpm_ovr_enr' ||  $resultsMasterEnroll->master_enrolled_status == 'lrn_tpm_ovr_inp' || $resultsMasterEnroll->master_enrolled_status == 'lrn_tpm_ovr_att' || $resultsMasterEnroll->master_enrolled_status == 'lrn_tpm_ovr_cmp' || $resultsMasterEnroll->master_enrolled_status == 'lrn_tpm_ovr_exp') {
				$header_details->action_variables->showprogress = true;
				$header_details->action_variables->catalog_tp_progress = true;
			}
			$header_details->action_variables->program_id = $results->cls_id;	//cls_id refers to the TP id here
			// 			$header_details->master_enrolled_id = $resultsMasterEnroll->master_enrolled_id;
			$header_details->action_variables->master_enrolled_id = $resultsMasterEnroll->master_enrolled_id;
			
			return $header_details->action_variables;
			/*
			 * </tr>
			 * </table>
			 * </div>
			 */
		}
	} catch(Exception $ex) {
		expDebug::dPrint('get_tp_action_themed exception here ' . $ex->getMessage(), 1);
		watchdog_exception('get_tp_action_themed', $ex);
		expertusErrorThrow($ex);
	}
}
?>