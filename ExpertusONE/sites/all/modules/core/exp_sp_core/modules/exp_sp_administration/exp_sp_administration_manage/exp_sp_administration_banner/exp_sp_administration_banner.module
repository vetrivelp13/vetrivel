<?php
/* Implementation of hook_init().
 */
function exp_sp_administration_banner_init() {
	try{
  include_once(drupal_get_path('module', 'exp_sp_administration_catalog_access') .'/exp_sp_administration_catalog_access.inc');
  global $theme_key;
  if ((substr($_SERVER['REQUEST_URI'], -strlen('administration/manage/banner')) == 'administration/manage/banner')) {
  	$css_theme_optional = array('type' => 'file', 'group' => CSS_THEME);
  	$js_module_optional = array('type' => 'file', 'group' => JS_DEFAULT);
  	if($theme_key == 'expertusoneV2') {
  		//NEWUI THEME STYLE SHEET
  		drupal_add_css(drupal_get_path('module', 'exp_sp_administration_banner').'/exp_sp_administration_banner_v2.css', $css_module_optional);
  		drupal_add_css(drupal_get_path('module', 'exp_sp_administration_catalog') .'/exp_sp_administration_catalog_v2.css', $css_theme_optional);
  		drupal_add_css(drupal_get_path('module', 'exp_sp_administration_learning') .'/exp_sp_administration_learning_v2.css');
  	}else {
  		drupal_add_css(drupal_get_path('module', 'exp_sp_administration_banner') .'/exp_sp_administration_banner.css', $css_theme_optional);
    	drupal_add_css(drupal_get_path('module', 'exp_sp_administration_catalog') .'/exp_sp_administration_catalog.css', $css_theme_optional);
    	drupal_add_css(drupal_get_path('module', 'exp_sp_administration_learning') .'/exp_sp_administration_learning.css');
  	}
  	//CUSTOM SCROLLBAR "JSscrollbar"
  	drupal_add_js(drupal_get_path('module', 'exp_sp_lnrreports') .'/jscrollbar/jquery.jscrollpane.js', $js_module_optional);
  }
  } catch (Exception $ex) {
  	watchdog_exception('exp_sp_administration_banner_init', $ex);
  	expertusErrorThrow($ex);
  }
}
/**
 * Implementation of hook_menu().
 */
function exp_sp_administration_banner_menu() {
try {
  $items = array();
    /*
  $items['administration/manage/banner'] = array(
    'title' => t('LBL623'),
    'page callback' => 'getBannerTabContent',
    'access callback' => 'user_access',
    'access arguments' => array('Banner Admin Perm'),
    'type' => MENU_CALLBACK,
    'file' => 'exp_sp_administration_banner.inc',
    'weight' => 4
    );
    */
  $items['administration/manage/banner'] = array(
    'title' => t('LBL623'),
    'page callback' => 'empty_value',
    'access callback' => 'user_access',
    'type' => MENU_CALLBACK,
    'weight' => 3,
    'access arguments' => array('Banner Admin Perm'),
    );

  $items['administration/manage/banner/search/all'] = array(
    'title' => 'Fetch banner list to display in JQGrid',
    'page callback' => 'sendBannerListToJqGrid',
    'access callback' => 'user_access',
    'access arguments' => array('Banner Admin Perm'),
    'type' => MENU_CALLBACK,
    'file' => 'exp_sp_administration_banner.inc'
    );

  $items['administration/manage/banner/textfilter-autocomplete'] = array(
    'title' => 'Search By Text Filter Autocomplete',
    'page callback' => 'getBannerTextFilterAutoComplete',
    'access callback' => 'user_access',
    'access arguments' => array('Banner Admin Perm'),
    'type' => MENU_CALLBACK,
    'file' => 'exp_sp_administration_banner.inc',
    );

   $items['administration/manage/banner/export'] = array(
    'title' => 'Survey Details Search Results CSV Export',
    'page callback' => 'fetchBannerAll',
    'page arguments' => array('CSV'),
    'access callback' => 'user_access',
    'access arguments' => array('Banner Admin Perm'),
    'type' => MENU_CALLBACK,
    'file' => 'exp_sp_administration_banner.inc',
    );

    $items['administration/manage/banner/print'] = array(
     'title' => 'Survey Details Results Print to PDF',
     'page callback' => 'fetchBannerAll',
     'page arguments' => array('PDF'),
     'access callback' => 'user_access',
     'access arguments' => array('Banner Admin Perm'),
     'type' => MENU_CALLBACK,
     'file' => 'exp_sp_administration_banner.inc',
    );

   $items['administration/manage/banner/%ctools_js/addedit'] = array(
    'title' => 'Add / Edit Banner',
    'page callback' => 'exp_sp_administration_banner_display_addedit_form',
    'page arguments' => array(3),
    'access callback' => 'user_access',
    'access arguments' => array('Banner Admin Perm'),
    'type' => MENU_CALLBACK,
    'file' => 'exp_sp_administration_banner.inc'
    );

   $items['administration/manage/banner/addedit'] = array(
    'title' => 'Add / Edit Banner',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('exp_sp_administration_banner_addedit_form'),
    'access callback' => 'user_access',
    'access arguments' => array('Banner Admin Perm'),
    'type' => MENU_CALLBACK
    );

  $items['ajax/administration/manage/banner/publish-and-unpublish/%/%'] = array (
    'title' => 'Publish Or Unpublish Banner',
    'page callback' => 'publishOrUnpublishBanner',
    'page arguments' => array(5,6),
    'type' => MENU_CALLBACK,
    'access callback' => 'user_access',
    'access arguments' => array('Banner Admin Perm'),
    'file' => 'exp_sp_administration_banner.inc'
	);
  $items['administration/view-banner/%ctools_js/addedit/%'] = array(
  		'title' => 'View Banner',
  		'page callback' => 'exp_sp_administration_viewbanner_addedit_form',
  		'page arguments' => array(3,4),
  		'access callback' => 'user_access',
  		'access arguments' => array('Banner Admin Perm'),
  		'type' => MENU_CALLBACK,
  		'file' => 'exp_sp_administration_banner.inc'
  );

    expDebug::dPrint(' $items = ' . print_r($items, true) , 4);
	return $items;
	} catch (Exception $ex) {
		watchdog_exception('exp_sp_administration_banner_menu', $ex);
		expertusErrorThrow($ex);
	}
}


function exp_sp_administration_banner_display_addedit_form($js = NULL, $bannerId) {
  try {
  if ($js) {
      $argsList = array();
     $bannerTitle='';
    if (!empty($bannerId)) {
      $argsList[] = $bannerId;
      $bannerTitle = ' - '.titleController('ADMIN_LEARNING_PLAN', getBannerTitleDirect($bannerId));
    }
    // Prepare list of forms to be displayed in the modal
    $formIdList = array(
                        array('id' => 'exp_sp_administration_banner_addedit_form', 'title' => t('LBL623')),
                       );

    // Prepare the arguments list to be passed to $formState['build_info']['args'] of each form


    exp_ctools_modal_multi_ajaxonly_forms_display($formIdList, $argsList);
  }
  else {
  	throw new Exception('exp_sp_administration_banner.module: exp_sp_administration_banner_display_addedit_form() : nojs');
  }
  } catch (Exception $ex) {
  	watchdog_exception('exp_sp_administration_banner_display_addedit_form', $ex);
  	expertusErrorThrow($ex);
  }
}


/**
 * exp_sp_administration_banner_addedit_form() - Build the addedit form.
 */

function exp_sp_administration_banner_addedit_form($form, &$form_state, $renderMode, $arg ) {
	try {
  expDebug::dPrint(' $form = ' . print_r($form, true) , 5);
  expDebug::dPrint(' $form_state = ' . print_r($form_state, true) , 5);
  expDebug::dPrint(' $renderMode = ' . print_r($renderMode, true) , 4);
  expDebug::dPrint(' $arg = ' . print_r($arg, true) ,4);

  // Default modalTheme is ExpertusCToolsModalTheme (see exp_sp_core_extend_ctools_ajax.js:Drupal.CTools.Modal.show())
  $banner_style = array(
  'ctools-admin-announcement-addedit-style' => array(
      'modalSize' => array(
        'width' => 605,
        'minHeight' => 385,
       ),
    )
   );

  drupal_add_js($banner_style, 'setting');

  include_once('exp_sp_administration_banner.inc');
  global $theme_key;
	if($theme_key == 'expertusoneV2') {
		$css_theme_optional = array('type' => 'file', 'group' => CSS_THEME);
		drupal_add_css(drupal_get_path('module', 'exp_sp_administration') .'/exp_sp_administration_v2.css', $css_theme_optional);
	}else{
		$css_theme_optional = array('type' => 'file', 'group' => CSS_THEME);
		drupal_add_css(drupal_get_path('module', 'exp_sp_administration') .'/exp_sp_administration.css', $css_theme_optional);
	}
  $js_module_optional = array('type' => 'file', 'group' => JS_DEFAULT);
  drupal_add_js(drupal_get_path('module', 'exp_sp_administration') .'/exp_sp_administration_addedit_behaviours.js', $js_module_optional);

  $bannerDetails = array();
  if (empty($form_state['values']) && !empty($arg)) {
  	// An edit operation. Is not form rebuild after save, in which case we can fetch values from $form_state.
    // Fetch user details to be displayed in the form
    $bannerDetails = getBannerDetails($arg, array('id', 'title', 'code', 'lang_code', 'description','shortdesc', 'status', 'date_activate','shortdesc',
					'date_deactivate', 'banner_seq_num', 'banner_thumbnail', 'banner_large', 'alert_priority', 'cal_event_date', 'created_by', 'created_on', 'updated_by',
					'updated_on','node_id','vid', 'custom0', 'custom1', 'custom2', 'custom3', 'custom4'));

  }

   $emptyId = '';
    if(empty($arg)){
       $entityId       = $form_state['values']['id'];
       $emptyId        = empty($form_state['values']['empty_id']) ? microtime(false) : $form_state['values']['empty_id'];
    } else {
       $entityId       = $arg;
    }

    $entityType        = 'cre_sys_obt_anm';
    $uniqueId          = $entityId.'-'.$entityType;

	//Access entity Type
	$accessEntity =  'cbn_anm_typ_ban';   ;

   // Create a new add/edit form
  $form = newAddEditFormWithCancelAndSave('banner-basic-addedit-form');

  // Define the form fields
  addHiddenFieldToAddEditForm($form, 'empty_id', $emptyId);
  addHiddenFieldToAddEditForm($form, 'entity_value', $accessEntity);
  $bannerId =  getDefaultBannerAddEditFormFieldValue('id', $form_state, $bannerDetails);
  addHiddenValueToAddEditForm($form, 'id', $bannerId);

  $revisionId =  getDefaultBannerAddEditFormFieldValue('vid', $form_state, $bannerDetails);
  addHiddenValueToAddEditForm($form, 'vid', $revisionId);

  $nodeId =  getDefaultBannerAddEditFormFieldValue('node_id', $form_state, $bannerDetails);
  addHiddenValueToAddEditForm($form, 'node_id', $nodeId);

  $defaultValue =  getDefaultBannerAddEditFormFieldValue('title', $form_state, $bannerDetails);
  addTextFieldToAddEditForm($form, 'title', t('LBL083'), $defaultValue, 1, true);

  
  addTwoColumnRowToAddEditForm($form, 'lang_status');
  $bannerDetails['lang_code'] = !empty($bannerDetails['lang_code'])? $bannerDetails['lang_code'] : 'cre_sys_lng_eng';
  $defaultValue =  getDefaultBannerAddEditFormFieldValue('lang_code', $form_state, $bannerDetails);
  $languageList = getMyAccountAllLanguage(); // issue fix #57006
  $drupalLanguageList = locale_language_list('native');
  foreach ($languageList as $id => $row) {
  	if (array_key_exists($row->drupallangcode, $drupalLanguageList)) {
  		$ptLanguage[$row->langcode] =  $drupalLanguageList[$row->drupallangcode]; 
  	}
  }
  //addDropDownToAddEditForm($form, 'lang_code', t('LBL038'), getProfileItemNamesKeyed('cre_sys_lng_'), $defaultValue, 2, true);
  addDropDownToAddEditForm($form, 'lang_code', t('LBL038'), $ptLanguage, $defaultValue, 2, true); // issue fix #57006
   

  $defaultValue =  getDefaultAddEditFormFieldValue('banner_seq_num', $form_state, $bannerDetails);
  $sequenceno = array('','1','2','3','4','5');
  addDropDownToAddEditForm($form, 'banner_seq_num', t('LBL618'), $sequenceno, $defaultValue, 3, true);

   /*$statusOrder=array('cbn_anm_sts_atv','cbn_anm_sts_itv','cbn_anm_sts_dft');
  $bannerDetails['status'] = !empty($bannerDetails['status']) ? $bannerDetails['status'] : 'cbn_anm_sts_atv';
  $defaultValue =  getDefaultBannerAddEditFormFieldValue('status', $form_state, $bannerDetails);
  addDropDownToAddEditForm($form, 'status', t('Status'), bannerProfileListItems($statusOrder), $defaultValue, 6, true);*/
  endAddEditTwoColumnRow($form);

 /* $defaultValue =  getDefaultBannerAddEditFormFieldValue('code', $form_state, $bannerDetails);
  addTextFieldToAddEditForm($form, 'code', t('Code'), $defaultValue, 2, true);*/

 // $defaultValue =  getDefaultBannerAddEditFormFieldValue('shortdesc', $form_state, $bannerDetails);
  //addTextAreaFieldToAddEditForm
  //addTextAreaFieldForShortDescription($form, 'shortdesc', t('Short Description'), $defaultValue, 3,true);

  addHiddenFieldToAddEditForm($form, 'ckeditor_word_count', '1000');
        $form['addedit-long-description-container'] = array(
          '#type'   => 'markup',
          '#markup' => '<div class="addedit-long-description-container">',
        );
        $defaultValue =  getDefaultBannerAddEditFormFieldValue('shortdesc', $form_state, $bannerDetails);
        addTextFormatFieldToAddEditForm($form, 'shortdesc', t('LBL229'),$defaultValue, 'full_html', 4, true, false, 1000);
       $form['addedit-long-description-container1'] = array(
          '#type'   => 'markup',
          '#markup' => '</div>',
        );


  /*

  $form['addedit-long-description-container'] = array(
          '#type'   => 'markup',
          '#markup' => '<div class="addedit-long-description-container">',
        );
  $defaultValue =  getDefaultBannerAddEditFormFieldValue('shortdesc', $form_state, $bannerDetails);
 // addTextAreaFieldToAddEditForm($form, 'description', t('Description'), $defaultValue, 4);
  annouoncementaddTextFormatFieldToAddEditForm($form, 'bannerdescription', t('Description'), $defaultValue, 'full_html', 4,true);
  // addTextFormatFieldToAddEditForm($form, 'description', t('LBL098'), $defaultValue, 'full_html', 4, false);
        $form['addedit-long-description-container1'] = array(
          '#type'   => 'markup',
          '#markup' => '</div>',
        );
  */




 addTwoColumnRowToAddEditForm($form, 'banner_images');
 $banner_status = getBannerDetails($entityId, array('status'));
 $defaultValue =  getDefaultBannerAddEditFormFieldValue('banner_thumbnail', $form_state, $bannerDetails);
 $sidebarStatus = checkFrontSidebarExist(); #54067 - Banner image mandatory check

 if(!empty($defaultValue) || (($form_state['storage']['image_set']!=null) && !empty($form_state['storage']['image_set']))) //
  {
    if(empty($defaultValue)){
      $defaultValue = $form_state['storage']['image_set'];
    }

    $headerProfileImage = file_create_url($defaultValue);

    // Create the form element
    $form['load_uploaded_image'] = array(
      '#type' => 'markup',
      '#prefix' => addEditGetPrefix('TWOCOL_FIRSTCOL_DATEFIELD', t('LBL1287') . ' <span class="banner_size_txt">' . t('LBL1288') . ' (621x423)</span>').'<table border="0" cellpadding="0" cellspacing="0"><tr><td valign="middle"><img class="admin-user-load-picture" src="'.$headerProfileImage.'?'.time().'" width="52" height="23" />',
      '#suffix' => '</td>',
    );
    if (!empty($banner_status['status']) && $banner_status['status'] == 'cbn_anm_sts_itv') {
    	$delBannerAttributes['class'] = array();
    	$delBannerAttributes['class'][] = 'addedit-form-expertusone-throbber';
    	$delBannerAttributes['class'][] = 'admin-save-button-middle-bg';
    	$delBannerAttributes['class'][] = 'admin-delete-img input-field-set';
    	$delBannerAttributes['tabindex'][] = '17';
    	// Communicate the wrapper to javascript for showing the expertusone throbber via HTML data tag
    	$delBannerAttributes['data-wrapperid'] = array('banner-basic-addedit-form');
    	$form['load_uploaded_image_del']['banner_details'] = array(
    			//'#type' => 'submit',
    			'#type' => 'image_button', '#src' => base_path().'sites/all/themes/core/expertusone/expertusone-internals/images/close.png',
    			//'#value' => 'Delete'.$i,
    			'#name' => 'Delete banner', // Based on this name, delete elemment updates the proper files.
    			'#prefix' => '<td> &nbsp;',
    			'#suffix' => '</td></tr></table>'.addEditGetSuffix('TWOCOL_FIRSTCOL_DATEFIELD'),
    			'#submit' => array('delete_banner_images'),
    			'#attributes' => $delBannerAttributes,
    			'#ajax' => array(
    					'callback' => 'addEditRepaintForm',
    					'wrapper' => 'banner-basic-addedit-form',
    					'banner_id' =>($arg)?$arg:$bannerId,
    			),
    	);
    } else {
    	/*$delBannerAttributes['class'] = array();
    	$delBannerAttributes['class'][] = 'addedit-form-expertusone-throbber';
    	$delBannerAttributes['class'][] = 'admin-save-button-middle-bg';
    	$delBannerAttributes['class'][] = 'admin-delete-img input-field-set';
    	$delBannerAttributes['tabindex'][] = '17';
    	// Communicate the wrapper to javascript for showing the expertusone throbber via HTML data tag
    	$delBannerAttributes['data-wrapperid'] = array('banner-basic-addedit-form');*/
    	$form['load_uploaded_image_del']['banner_details'] = array(
    			'#type' => 'markup',
    			'#prefix' => '<td> &nbsp;',
    			'#suffix' => '</td></tr></table>'.addEditGetSuffix('TWOCOL_FIRSTCOL_DATEFIELD'),
    	);
    }


  }else{
  	$mandatoryValue =($sidebarStatus == true) ? true : false;
  	$defaultValue =  getDefaultBannerAddEditFormFieldValue('banner_thumbnail', $form_state, $bannerDetails);
  	addBannerFileUploadControlToAddEditForm($form, 'announcement_banner', t('LBL1287') . ' <span class="banner_size_txt">' . t('LBL1288') . ' (621x423)</span>', $defaultValue, 5,$mandatoryValue,false,7); //LBL619
  }

  $defaultValue_large =  getDefaultBannerAddEditFormFieldValue('banner_large', $form_state, $bannerDetails);
  if(!empty($defaultValue_large) || (($form_state['storage']['image_set_large']!=null) && !empty($form_state['storage']['image_set_large']))) //
  {
  	if(empty($defaultValue_large)){
  		$defaultValue_large = $form_state['storage']['image_set_large'];
  	}

  	$headerProfileImageLarge = file_create_url($defaultValue_large);
  	$form['load_uploaded_image_large'] = array(
  			'#type' => 'markup',
  			'#prefix' => addEditGetPrefix('TWOCOL_SECONDCOL_DATEFIELD', t('LBL1287') . ' <span class="banner_size_txt">' . t('LBL1288') . ' (942x423)</span>').'<table border="0" cellpadding="0" cellspacing="0"><tr><td valign="middle"><img class="admin-user-load-picture" src="'.$headerProfileImageLarge.'?'.time().'" width="52" height="23" />',
  			'#suffix' => '</td>',
  	);
  	/*-- #38539: UI issue home page - fix --*/
  	if (!empty($banner_status['status']) && $banner_status['status'] == 'cbn_anm_sts_itv') {
  		$delBannerAttributesLarge['class'] = array();
  		$delBannerAttributesLarge['class'][] = 'addedit-form-expertusone-throbber';
  		$delBannerAttributesLarge['class'][] = 'admin-save-button-middle-bg';
  		$delBannerAttributesLarge['class'][] = 'admin-delete-img input-field-set';
  		$delBannerAttributesLarge['tabindex'][] = '18';
  		// Communicate the wrapper to javascript for showing the expertusone throbber via HTML data tag
  		$delBannerAttributesLarge['data-wrapperid'] = array('banner-basic-addedit-form');
  		$form['load_uploaded_image_large_del']['banner_details_large'] = array(
  				//'#type' => 'submit',
  				'#type' => 'image_button', '#src' => base_path().'sites/all/themes/core/expertusone/expertusone-internals/images/close.png',
  				//'#value' => 'Delete'.$i,
  				'#name' => 'Delete Large banner', // Based on this name, delete elemment updates the proper files.
  				'#prefix' => '<td> &nbsp;',
  				'#suffix' => '</td></tr></table>'.addEditGetSuffix('TWOCOL_SECONDCOL_DATEFIELD'),
  				'#submit' => array('delete_banner_images'),
  				'#attributes' => $delBannerAttributesLarge,
  				'#ajax' => array(
  						'callback' => 'addEditRepaintForm',
  						'wrapper' => 'banner-basic-addedit-form',
  						'banner_id' =>($arg)?$arg:$bannerId,
  				),
  		);
  	} else {
  		$form['load_uploaded_image_large_del']['banner_details_large'] = array(
  				'#type' => 'markup',
  				'#prefix' => '<td> &nbsp;',
  				'#suffix' => '</td></tr></table>'.addEditGetSuffix('TWOCOL_SECONDCOL_DATEFIELD'),
  		);
  	}
  } else {
  	$defaultValueLarge =  getDefaultBannerAddEditFormFieldValue('banner_large', $form_state, $bannerDetails);
  	$mandatoryValue = ($sidebarStatus == false) ? true : false;
  	$form['load_uploaded_image_new'] = array(
  			'#type' => 'markup',
  			'#markup' =>  addBannerFileUploadControlToAddEditForm($form, 'announcement_banner_large', t('LBL1287'). ' <span class="banner_size_txt">' . t('LBL1288') . '  (942x423)</span>', $defaultValueLarge, 6,$mandatoryValue,false,8),
  	);
  }

  endAddEditTwoColumnRow($form);

  addTwoColumnRowToAddEditForm($form, 'banner_from_date_banner_until_date');
  $defaultValue =  getDefaultBannerAddEditFormFieldValue('date_activate', $form_state, $bannerDetails);
   if($defaultValue!='') $defaultValue = date('m-d-Y', strtotime($defaultValue));
   addDateFieldToAddEditFormNew($form, 'date_activate', t('LBL620'), $defaultValue, t('LBL112'), 'future', t('LBL218'), 7);
  /*$form['load_uploaded_image_new'] = array(
  		'#type' => 'markup',
  		'#markup' => addDateFieldToAddEditFormNew($form, 'date_activate', t('LBL620'), $defaultValue, t('LBL112'), 'future', t('LBL218'), 6),
  );
  */
   endAddEditTwoColumnRow($form);

  //$defaultValue =  getDefaultBannerAddEditFormFieldValue('date_activate', $form_state, $bannerDetails);
  //if($defaultValue!='') $defaultValue = date('m-d-Y', strtotime($defaultValue));
 // addDateFieldToAddEditForm($form, 'date_activate', t('Display - From'), $defaultValue, 'mm-dd-yyyy', 'all', t('Select a date'), 8);


  addTwoColumnRowToAddEditForm($form, 'banner_from_display_hidden_field_value');
   /**$defaultValue =  getDefaultBannerAddEditFormFieldValue('banner_thumbnail', $form_state, $bannerDetails);
   $form['banner_upload_picture'] = array(
    '#type' => 'markup',
        '#markup' => '<div class="addedit-twocol-firstcol"><div class="addedit-new-field-title"></div>
                        <div class="addedit-firstcol-field-value"><div class="addedit-new-datefield-value">
                       <div class="form-item form-type-file form-item-files-announcement-banner">
                     <label for="edit-announcement-banner" class="element-invisible"></label>

                      </div>
                      </div><div class="clearBoth"></div></div><div class="clearBoth"></div></div>',
    ); **/
  $defaultValue =  getDefaultBannerAddEditFormFieldValue('date_deactivate', $form_state, $bannerDetails);
  if($defaultValue!='') $defaultValue = date('m-d-Y', strtotime($defaultValue));
  addDateFieldToAddEditFormNew($form, 'date_deactivate', t('LBL621'), $defaultValue, t('LBL112'), 'future', t('LBL218'), 8);
  endAddEditTwoColumnRow($form);

  expDebug::dPrint('Test Image Name' . $form_state['storage']['image_set'] ,5 );

  //$defaultValue =  getDefaultBannerAddEditFormFieldValue('banner_thumbnail', $form_state, $bannerDetails);

  bannersubmitAddEditFormWithCancelAndSaveClose($form, 'banner-basic-addedit-form', 'banner-basic-save', 'banner-basic-cancel', $bannerId, $subStage, $emptyId);

  return $form;
  } catch (Exception $ex) {
  	watchdog_exception('exp_sp_administration_banner_addedit_form', $ex);
  	expertusErrorThrow($ex);
  }
}

/*
 * exp_sp_administration_announcement_addedit_form_submit() - Save the data entered by the user in the exp_sp_administration_announcement_addedit_form form
 */

function exp_sp_administration_banner_addedit_form_submit($form, &$form_state) {
	try {
  $custom_esign_check=0;
 //include_once $_SERVER["DOCUMENT_ROOT"]."/includes/file.inc";
 $chkValidation = 1;
    expDebug::dPrint('exp_sp_administration_catalog_course_addedit_form_submit esign validate trigger ' .$form_state['triggering_element']['#name'] , 5);
   if(module_exists('exp_sp_esignature') && isActiveEsignRegion() && $custom_esign_check==1){
     $chkValidation = 0;
     if($form_state['hidden-save-submit']==true && $_SESSION['esign_validate'] ==  1){
       $chkValidation = 1;
       $form_state['storage']['submit_triggering_element'] = $form_state['storage']['triggering_button_element'];
     }
     else{
       $form_state['storage']['triggering_button_element'] = $form_state['triggering_element']['#name'];
     }
   }
   else{
     $form_state['storage']['submit_triggering_element'] = $form_state['triggering_element']['#name'];
   }
   include_once('exp_sp_administration_banner.inc');
   //if($form_state['hidden-save-submit']==true){
      if($chkValidation){
      $form_state['esign_validation_status'] = true;
     expDebug::dPrint('submit action ' . print_r($form_state, true) , 5);
    // Check whether add or edit
    if (empty($form_state['values']['id'])) { // Add
      $form_state['storage']['new_entity'] = TRUE;
      $returnArr=addNewBanner($form, $form_state);
       $newBanId = $returnArr[0]->id;
       $entityId = $form_state['values']['id'];
       $emptyId = $form_state['values']['empty_id'];
       expDebug::dPrint('Testing value'.$newBanId.'empty_id'.$emptyId , 5);
      _updateAccessEntity($newBanId, 'cbn_anm_typ_ban', $emptyId);
      expertus_set_message(t('LBL272').' '.t('MSG600').'.');
      //$form_state['storage']=array();
    }
    else {
      updateBannerDetails($form, $form_state);
      $form_state['storage']['edited_entity'] = TRUE; // To trigger refresh of jqgrid on modal close.
      expertus_set_message(t('LBL272').' '.t('MSG601').'.');
    }

    // Setting $form_state['rebuild'] = TRUE causes the form to be rebuilt again.
    $form_state['rebuild'] = TRUE;

    return $form;
 }
 } catch (Exception $ex) {
 	watchdog_exception('exp_sp_administration_banner_addedit_form_submit', $ex);
 	expertusErrorThrow($ex);
 }
}

/*
 * exp_sp_administration_announcement_addedit_form_validate - validate the data entered by the user in the exp_sp_administration_announcement_addedit_form form
 */

function exp_sp_administration_banner_addedit_form_validate($form, &$form_state) {
	try {
  expDebug::dPrint('  $form = ' . print_r($form, true) , 5);
  expDebug::dPrint(' $form_state = ' . print_r($form_state, true) , 5);
  $form_state['values'] = trimInputFields($form_state['values']); // trim input field values
  $form_state['hidden-save-submit'] = false;
  $form_state['esign_show_popup']= false;
  include_once('exp_sp_administration_banner.inc');

  if (!empty($form_state['storage']['new_entity'])) {
    unset($form_state['storage']['new_entity']); // Unset the variable to remove it from $form_state
    unset($form_state['storage']['form_info_list']); // No more required to be present in $form_state
  }

  if (!empty($form_state['storage']['edited_entity'])) {
  	 unset($form_state['storage']['edited_entity']); // Unset the variable to remove it from $form_state
  }

  if ($form_state['values']['op'] == t('Close')) {
    $form_state['display_class']   = TRUE;
    $form_state['input']     = array(); // Clear user input - raw
    $form_state['values']    = array(); // Clear user input - security cleared
    $form_state['rebuild']   = TRUE; // Rebuild the form. Submit handler will not be called.
    $form_state['storage']['step'] = 'view';
    return;
  }

  if(module_exists('exp_sp_esignature') && isActiveEsignRegion()){
       $triggerValue  = 'save';
  }
  else{
       $triggerValue  = 'hidden-save';
       }
  $triggerElementByName  = $form_state['triggering_element']['#name'];

   if (($form_state['triggering_element']['#name'] == 'save' || $form_state['triggering_element']['#name'] == 'saveandpublish')) {

  // if ($form_state['triggering_element']['#name'] == $triggerValue) {
  	  $form_state['esign_show_popup']= true;

  // Check all mandatory fields exist
      addEditCheckMandatoryFields($form, $form_state, array('title','lang_code','banner_seq_num')); // lang_code added as mandatory: issue - 36240

    /*if (!empty($form_state['values']['code']) && !uniqueBannerCode($form_state)) {
      form_set_error('code', t('Banner code is unique'));
      $form_state['esign_show_popup']= false;

    } */
     if (empty($form_state['values']['shortdesc']['value']) || $form_state['values']['shortdesc']['value']=='') {
      	//form_set_error('description', t('Description is required.'));
      	form_set_error('shortdesc', $form['shortdesc']['#title'] . t('ERR101'));
      	//Drupal.ckeditorOn('edit-bannerdescription-value');
      	$form_state['esign_show_popup']= false;

      }

     $dateactivate = date_create_from_format( 'm-d-Y' , $form_state['values']['date_activate']);
     $datedeactivate = date_create_from_format( 'm-d-Y' , $form_state['values']['date_deactivate']);

     if (!empty($dateactivate) && !empty($datedeactivate) && $datedeactivate < $dateactivate) {
      	form_set_error('date_deactivate', t('MSG365'));
      	$form_state['esign_show_popup']= false;

     }
     if (isset($form_state['values']['date_activate']) && $form_state['values']['date_activate'] != t('LBL112')
     		&& !isValidDate($form_state['values']['date_activate'])) {
     	form_set_error('date_activate', t('LBL620') .': '. t('ERR243'));
     	$form_state['esign_show_popup']= false;
     }

     if (isset($form_state['values']['date_deactivate']) && $form_state['values']['date_deactivate'] != t('LBL112')
     		&& !isValidDate($form_state['values']['date_deactivate'])) {
     	form_set_error('date_deactivate', t('LBL621') .': '. t('ERR243'));
     	$form_state['esign_show_popup']= false;
     }

    /* $filename = $_FILES['files']['name']['announcement_banner'];
     if (!empty($_FILES['files']['name']['announcement_banner'])) {
        $filename = strtolower($filename) ;
        $exts = split("[/\\.]", $filename) ;
        $n = count($exts)-1;
        $exts = $exts[$n];
        expDebug::dPrint('Testting extension' . $exts);
        if($exts!='jpg'&& $exts!='png' && $exts!='jpeg' && $exts!='gif'){
          form_set_error('announcement_banner', t('Upload only jpg, png,gif and jpeg'));
          $form_state["storage"]["form_validate"] = false; // not used
          $form_state['esign_show_popup']= false;
        }
        else{

        include_once $_SERVER["DOCUMENT_ROOT"]."/includes/file.inc";
         $validators  = array(
           'file_validate_extensions' => array('png jpg jpeg gif'), // Validate extensions.
          // 'file_validate_is_image' => array(), // Validates file is really an image.
         // 'file_validate_image_resolution' => array('85x85'),
         );
        $announcement = file_save_upload('announcement_banner', $validators,$destination = FALSE);
       expDebug::dPrint('exp_sp_administration_banner.inc : addNewBanner() : $filedirectory = ' . print_r($announcement, true));
    	if(!empty($announcement)) {
                if (!$announcement->status) { // i.e. if picture is a temporary file
                  // Prepare the pictures directory.
                  $filedirectory = file_default_scheme() . '://' . variable_get('announcement_attachment_path', 'images');
                 expDebug::dPrint('exp_sp_administration_announcement.inc : addNewBanner() : $filedirectory = ' . print_r($filedirectory, true));
                  file_prepare_directory($filedirectory, FILE_CREATE_DIRECTORY);

                  // Prepare the unique file name to place the picture under the $filedirectory.
                  expDebug::dPrint('exp_sp_administration_announcement.inc : addNewBanner() : $info returned by image_get_info = ' . print_r($info, true));
                  $destination = file_stream_wrapper_uri_normalize($filedirectory . '/'.REQUEST_TIME . '-' .$announcement->filename);
                  expDebug::dPrint('exp_sp_administration_announcement.inc : addNewBanner() : $destination = ' . print_r($destination, true));

                  // Move the temporary file into the final location.
                  if ($announcementmove = file_move($announcement, $destination, FILE_EXISTS_RENAME)) {
                    expDebug::dPrint('exp_sp_administration_announcement.inc : addNewBanner() : $picture returned by file_move() = ' . print_r($announcementmove, true));

                    $announcementmove->status = FILE_STATUS_PERMANENT;
                    $save_announcement = file_save($announcementmove);
                    expDebug::dPrint('exp_sp_administration_announcement.inc : addNewBanner() : $picture returned by file_save() = ' . print_r($save_announcement, true));

                    $sitepath      ="sites/default/files/images/";
                    $newBannerName =$sitepath.$save_announcement->filename;
                    $form_state['storage']['files_details'] = $newBannerName;
                  }
                }
              }



        }
      }*/

	 if (checkFrontSidebarExist()) {
     if (!empty($form_state['complete form']['announcement_banner']) && empty($_FILES['files']['name']['announcement_banner'])) {
          form_set_error('announcement_banner', $form['announcement_banner']['#title'] . t('ERR101'));
          $form_state['esign_show_popup']= false;
     }
	 } else {
	 	if (!empty($form_state['complete form']['announcement_banner_large']) && empty($_FILES['files']['name']['announcement_banner_large'])) {
	 		form_set_error('announcement_banner_large', $form['announcement_banner_large']['#title'] . t('ERR101'));
	 		$form_state['esign_show_popup']= false;
	 	}
	 }

     if (!empty($_FILES['files']['name']['announcement_banner'])) { // 052857: Validation Fix
     	$size = getimagesize($_FILES['files']['tmp_name']['announcement_banner']);
     	$banner_width = $size[0];
     	$banner_height = $size[1];
     	if($banner_width != '621' || $banner_height != '423') {
     		form_set_error('announcement_banner', $form['announcement_banner']['#title']. ': ' . t('ERR249'));
     		$form_state["storage"]["form_validate"] = false; // not used
     		$form_state['esign_show_popup']= false;
     	}
     }
     if (!empty($_FILES['files']['name']['announcement_banner_large'])) { // 052857: Validation Fix
     	$size = getimagesize($_FILES['files']['tmp_name']['announcement_banner_large']);
     	$banner_width = $size[0];
     	$banner_height = $size[1];
     	if($banner_width != '942' || $banner_height != '423') {
     		form_set_error('announcement_banner_large', $form['announcement_banner_large']['#title']. ': '  . t('ERR249'));
     		$form_state["storage"]["form_validate"] = false; // not used
     		$form_state['esign_show_popup']= false;
     	}
     }

   }

  //$form_state['rebuild'] = TRUE;

   expDebug::dPrint(' $_FILES[files] = ' . print_r($_FILES['files'], true) , 4);
   expDebug::dPrint(' $form_state[values] = ' . print_r($form_state['values'], true) , 5);
   expDebug::dPrint(' $form_state[storage] = ' . print_r($form_state['storage'], true) , 5);


 if ($triggerElementByName == 'hidden-save' ) {
    $form_state['hidden-save-submit']=true;
    $form_state['esign_show_popup']= false;
  }
  if($form_state['triggering_element']['#name'] == 'delete' ||  $form_state['triggering_element']['#name'] == 'unpublish'){
    $form_state['esign_show_popup']= true;
  }

 $form_state['esign_validation_status']= false;
  if(!($form_state['hidden-save-submit'])){
    unset($_SESSION['esign_validate']);
  }
  $form_state['esign_show_popup'] = false; //temp

 expDebug::dPrint(' $form = ' . print_r($_FILES['files'], true) , 4);
 // return;
 } catch (Exception $ex) {
 	watchdog_exception('exp_sp_administration_banner_addedit_form_validate', $ex);
 	expertusErrorThrow($ex);
 }
}
function exp_sp_administration_banner_permission() {
	try {
    return array(
    'Banner Admin Perm' => array(
      'title' => t('Banner Admin Perm')
    )
  );
    } catch (Exception $ex) {
    	watchdog_exception('exp_sp_administration_banner_permission', $ex);
    	expertusErrorThrow($ex);
    }
}

/**
 * Function used to validate the date
 * @param string $str
 * return true/false
 */
function isValidDate($date)
{
	if(preg_match("/^(\d{2})-(\d{2})-(\d{4})$/", $date, $matches) || preg_match("/^(\d{2})\/(\d{2})\/(\d{4})$/", $date, $matches))
	{
		if(checkdate($matches[1], $matches[2], $matches[3]))
		{
			return true;
		}
	}
}

function checkFrontSidebarExist() {
	$result = db_query('SELECT bid FROM block WHERE status = 1 AND region = :region AND  theme = :theme AND pages LIKE :term',
			array(':region' => 'sidebar_second', ':theme' => 'expertusoneV2', ':term' => '%' . db_like('front') . '%' ));
	//expDebug::dPrintDBAPI('checkFrontSidebarExist',$result, array(':region' => 'sidebar_second', ':theme' => 'expertusoneV2', ':term' => '%' . db_like('front') . '%' ));
	$rows = $result->rowCount();
	//expDebug::dPrint('found rows in sidebar:' . $rows);
	return ($rows) ? true : false;
}
?>