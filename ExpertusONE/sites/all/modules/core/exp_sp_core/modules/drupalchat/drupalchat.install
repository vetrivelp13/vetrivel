<?php

/**
 * @file
 * Installation file for the DrupalChat module.
 */

/**
 * Implements hook_install().
 */
function drupalchat_install() {
  // TODO The drupal_(un)install_schema functions are called automatically in D7.
  $success = array()/*drupal_install_schema('drupalchat')*/;

  if ($success) {
    drupal_set_message(st('The DrupalChat module installed tables successfully.'));
  }
  else {
    //drupal_set_message(st('The installation of the DrupalChat module failed.'), 'error');
  }
}

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function drupalchat_uninstall() {
  // TODO The drupal_(un)install_schema functions are called automatically in D7.
  // drupal_uninstall_schema('drupalchat')
  variable_del('drupalchat_enable_smiley');
  variable_del('drupalchat_log_messages');
  variable_del('drupalchat_notification_sound');
  variable_del('drupalchat_path_pages');
  variable_del('drupalchat_path_visibility');
  variable_del('drupalchat_stop_word_list');
  variable_del('drupalchat_theme');
  variable_del('drupalchat_user_picture');
  variable_del('drupalchat_use_stop_word_list');
  variable_del('drupalchat_session_check_timeout');
}

/**
 * Implements hook_schema().
 */
function drupalchat_schema() {
  $schema = array();

  $schema['drupalchat_msg'] = array(
    'fields' => array(
	  'message_id' => array(
        'type' => 'varchar',
        'length' => 200,
        'not null' => TRUE,
        'description' => 'ID of chat message.',
      ),
      'uid1' => array(
        'description' => 'Uid of the sender.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
      ),
      'uid2' => array(
        'description' => 'Uid of the receiver.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
      ),
      'message' => array(
        'type' => 'text',
        'size' => 'big',
        'not null' => TRUE,
        'description' => 'Chat message.',
      ),
      'timestamp' => array(
        'description' => 'The Unix timestamp when the XMPP account was created.',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
      ),
      'received' => array(
        'description' => 'Receiver client acknowledges message by setting this to 1.',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0
      )
    ),
    
    'indexes' => array(
      'uid1' => array('uid1'),
      'uid2' => array('uid2'),
    ),
  );

  return $schema;
}
