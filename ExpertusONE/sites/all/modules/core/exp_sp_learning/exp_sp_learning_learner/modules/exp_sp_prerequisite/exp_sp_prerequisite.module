<?php

function exp_sp_prerequisite_init() {
	try{
	$request_uri = request_uri();
  if($request_uri == '/?q=administration/learning/program' || $request_uri == '/?q=administration/learning/catalog'){
	  global $theme_key;
	  $css_theme_optional = array('type' => 'file', 'group' => CSS_THEME);
	  $js_module_optional = array('type' => 'file', 'group' => JS_DEFAULT);
	  drupal_add_js(drupal_get_path('module','exp_sp_prerequisite').'/exp_sp_prerequisite.js',$js_module_optional);
	  if($theme_key == 'expertusoneV2') {
	    drupal_add_css(drupal_get_path('module', 'exp_sp_prerequisite') .'/exp_sp_prerequisite_v2.css', $css_theme_optional);
	  }
	  else {
	    drupal_add_css(drupal_get_path('module', 'exp_sp_prerequisite') .'/exp_sp_prerequisite.css', $css_theme_optional);
	  }
  	}
  } catch (Exception $ex) {
  	watchdog_exception('exp_sp_prerequisite_init', $ex);
  	expertusErrorThrow($ex);
  }
}

/**
 * Implementation of hook_menu().
 */
function exp_sp_prerequisite_menu() {
	try{
  $items = array();
  $items['learning/catalog-tpprerequisite/%/%/%/%'] = array(
        'title' => 'Pre-requisite',
        'access callback' => TRUE,
  		'page arguments' => array(2,3,4,5),
        'page callback' => 'getCatalogTpPrerequisites',
        'type' => MENU_CALLBACK,
		'file' => 'exp_sp_prerequisite.inc'
		);
		return $items;
		} catch (Exception $ex) {
			watchdog_exception('exp_sp_prerequisite_menu', $ex);
			expertusErrorThrow($ex);
		}
}


/*
 * Implementation of hook_theme
 */
function exp_sp_prerequisite_theme() {
	try{
  return array(
  		'exp_sp_prerequisite-details' => array(
    		'variables' => array('results' => array()),
        	'template' => 'exp_sp_prerequisite-details' 
        ),
  		'exp_sp_prerequisite-details-for-team' => array(
  			'variables' => array('results' => array()),
  			'template' => 'exp_sp_prerequisite-details-for-team'
  		),
  		'exp_sp_prerequisite-view-action' => array(
  			'variables' => array('results' => array()),
        	'template' => 'exp_sp_prerequisite-view-action' 
        	)
   );
  } catch (Exception $ex) {
  	watchdog_exception('exp_sp_prerequisite_theme', $ex);
  	expertusErrorThrow($ex);
  }
}



function getCatalogTpPrerequisites($catalogId,$tpType,$widgetId,$dispType,$fromPage = '',$Myteamuserid = '') {
try{
	if($fromPage == 'MyTeam') {
		$themeTemplate = 'exp_sp_prerequisite-details-for-team';
	}
	else {
		$themeTemplate = 'exp_sp_prerequisite-details';
	}
  $resultSetType  	= 'tpresults1';
  $reqLevel			= 'l1';
  $registerBtn		= false;


  if($tpType == "initPrereq") {
    // 1.Initiating from Training Program
  	if($fromPage == 'MyTeam'){ // Prequiste For Myteam
  		$reqRes 				= getCatalogTpPrerequisite($catalogId,$Myteamuserid);
  		$initEnrollCheck 		= checkCatalogPrerequisiteEnroll($catalogId,'cre_sys_obt_trp',$Myteamuserid);
  	}else{
  		$reqRes 				= getCatalogTpPrerequisite($catalogId);
  		$initEnrollCheck 		= checkCatalogPrerequisiteEnroll($catalogId,'cre_sys_obt_trp');
  	}
    
    $resultSetType  		= (count($reqRes) == count($initEnrollCheck)) ? 'tpenrolled' : 'tpresults1';
    $reqRes					= (count($reqRes) == count($initEnrollCheck)) ? array('tpenrolled') :  $reqRes;
    $reqLevel				= 'l1';
  } else if($tpType == "initClassPrereq") {
    // 2.Initiating from Class
  	if($fromPage == 'MyTeam'){ // Prequiste For Myteam
   		 $reqRes 				= getCatalogPrerequisite($catalogId,$Myteamuserid);
   		 $initEnrollCheck 		= checkCatalogPrerequisiteEnroll($catalogId,'cre_sys_obt_crs',$Myteamuserid);
  	}else {
  		 $reqRes 				= getCatalogPrerequisite($catalogId);
  		 $initEnrollCheck 		= checkCatalogPrerequisiteEnroll($catalogId,'cre_sys_obt_crs');
  	}
    /*$newClass 				= new stdClass;
     $newClass->buttonArr 	= 1;
     $newClass->totRec 		= count($reqRes);
     $newClass->regOption 	= 'cl';
     $reqRes					= array_merge($reqRes,array($newClass));*/
    $registerBtn			= true;
    $resultSetType  		= (count($reqRes) == count($initEnrollCheck)) ? 'tpenrolled' : 'tpresults2';
    $reqRes					= (count($reqRes) == count($initEnrollCheck)) ? array('tpenrolled') :  $reqRes;
    //echo "resultSetType : ".$resultSetType;
    $reqLevel				= 'l2';
  } else if(($tpType == "cre_sys_obt_trn") || ($tpType == "cre_sys_obt_cur") || ($tpType == "cre_sys_obt_crt")) {
    // 1.1.Initiating from Training Program - to get Training Program
    $reqRes 				= getTpPrerequisite($catalogId,$tpType);
    $newClass 				= new stdClass;
    $newClass->buttonArr 	= 1;
    $newClass->totRec 		= count($reqRes);
    $newClass->regOption 	= 'tp';
    $reqRes					= array_merge($reqRes,array($newClass));
    $registerBtn			= true;
    $resultSetType  		= 'tpresults2';
    $reqLevel				= 'l2';
  } else if($tpType == "course") {
    // 1.2.Initiating from Training Program - get to display class
    $reqRes 				= getClassPrereq($catalogId,'tpPrereq');
    $resultSetType  		= 'tpclassresults';
    $reqLevel				= 'l3';
    if((($dispType == "l1") || ($dispType == "l2")) && ($widgetId != 'l3')) {
      $reqRes[] 		= array("buttonArr" => 1, "totRec" => count($reqRes), 'regOption' => 'cl');
      $registerBtn 	= true;
    }
  } else {
    echo "Type : ".$tpType;
  }
  $countRec			 = count($reqRes);
  $preReqResp->total   = $countRec;
  $preReqResp->records = $countRec;
  $i					 = 0;
  $tpCrsId 			 = '';
  $tCnt				 = $countRec-2;
  $program_id			 = 0;
  $regStatus			 = Array();
  $parentRegStatus	 = '';
  $parentRegStatusV	 = '';
  $regStatusV			 = '';
  if($countRec > 0) {

  	foreach ($reqRes as $reqResult) {
  		$reqResult->widgetId 	= $widgetId;
  		$preId				= 0;
  		$prereqtype 			= (!empty($reqResult->prereqtype) ? $reqResult->prereqtype : 'course');
  		$register_action		= 'register';
  			
  		if($tpType == "course") {
  			$preId 				= $reqResult['class_details']->crs_id;
  			//$regStatus[]		= $reqResult['class_details']->enrollstatus;
  			$regStatusVal		= getRegisteredOrNot($reqResult['class_details']->crs_id,$reqResult['class_details']->cls_id, $Myteamuserid);
  			$regStatusV			= empty($regStatusVal) ? 'N' : 'Y';
  			$tpCrsId			= !empty($tpCrsId) ? $tpCrsId : $reqResult['class_details']->crs_id;
  			$program_id 		= !empty($program_id) ? $program_id : $reqResult['class_details']->cls_id;
  			//$register_action	= !empty($register_action) ? $register_action : $reqResult['register_action'];
  			$register_action	= isset($reqResult['buttonArr']) ? $register_action : $reqResult['register_action'];
  			$parentRegStatus	= isset($reqResult['buttonArr']) ? $parentRegStatus : $regStatusV;
  			//buttonArr
  			$tCnt				= 0;
  		}  else {
  			$preId 				= $reqResult->preid;
  			$tpCrsId 		   .= !empty($preId) ? ($preId.(($tCnt > $i) ? '-' : '')) : '';
  			$program_id			= ($program_id>0) ? $program_id : $reqResult->program_id;
  			//$regStatus[]		= $reqResult->enrollstatus;

  			if($reqLevel == "l2") {
  				if($tpType != "initClassPrereq") {

  					$regStatusVal		= getObjectRegisteredOrNot($reqResult->program_id);
  					$parentRegStatusV	= empty($regStatusVal) ? 'N' : 'Y'; //echo "parent Reggstatusss :".$parentRegStatusV;
  					$parentRegStatus 	= !empty($reqResult->program_id) ? $parentRegStatusV : $parentRegStatus;
  				}
  				$regStatusVal		= getRegisteredCourseStatus($reqResult->preid,$Myteamuserid);
  				//$regStatusV			= ($regStatusVal == 0) ? 'N' : 'Y';
  				$regStatusV			= empty($regStatusVal) ? 'N' : $regStatusVal[0]->enroll_status;
  				//echo $regStatusVal; print_r($regStatusVal);
  			} else {
  				if(!empty($reqResult->program_id)) {
  					$regStatusVal		= getObjectRegisteredOrNot($reqResult->program_id);
  					$regStatusV			= empty($regStatusVal) ? 'N' : $regStatusVal->master_status_name;
  				} else {
  					$regStatusVal		= getRegisteredCourseStatus($reqResult->preid,$Myteamuserid);
  					//$regStatusV			= ($regStatusVal == 0) ? 'N' : 'Y';
  					$regStatusV			= empty($regStatusVal) ? 'N' : $regStatusVal[0]->enroll_status;
  				}
  			}

  		}
  			
  			
  		if($regStatusV == 'Y') {
  			$regStatus[] = $regStatusV;
  		}
  			
  			

  		if($registerBtn) {
  			$themeResultStack  	= array($resultSetType => $reqResult,'initEnrolledRec' => $initEnrolledRec, 'tpCrsId' => $tpCrsId, 'program_id' => $program_id, "totalRec" => ($countRec -1), "regstatus" => $regStatusV ,"tpLevel" => $dispType, "register_action" => $register_action ,"registered_count" => count($regStatus), 'parentRegStatus' => $parentRegStatus );
  		} else {
  			/*if($regStatusV == 'Y') {
  			 $regStatus[] = $regStatusV;
  			}*/
  			$themeResultStack  	= array($resultSetType => $reqResult,'initEnrolledRec' => $initEnrolledRec, "totalRec" => $countRec, "regstatus" => $regStatusV ,'tpLevel' => $dispType , "register_action" => $register_action ,"registered_count" => count($regStatus));
  		}
  		$themeResultStack['Myteamuserid']	= $Myteamuserid;
  		$preReqResp->row					= $i;
  		$preReqResp->rows[$i]['id']			= $prereqtype.$preId.$reqLevel;
  		$preReqResp->rows[$i]['cell']		= array(
								  				'crsId' => $catalogId,
								  				'registerBtn' => $registerBtn,
								  				'parentRegStatus' => $parentRegStatus,
								  				'totalRec' => $countRec,
								  				'preReqTpDetails' => theme($themeTemplate, $themeResultStack),
								  				);
  		$i++;
  	}
  } else {
    $themeResultStack					= array($resultSetType => '' ,"totalRec" => 0);
    $themeResultStack['Myteamuserid']	= $Myteamuserid;
    $preReqResp->row					= $i;
    $preReqResp->rows[$i]['id']			= $i;//$prereqtype.$preId.$reqLevel;
    $preReqResp->rows[$i]['cell']		= array(
								    		'crsId' => $catalogId,
								    		'registerBtn' => $registerBtn,
								    		'parentRegStatus' => $parentRegStatus,
								    		'totalRec' => $countRec,
								    		'preReqTpDetails' => theme($themeTemplate, $themeResultStack),
								   			);
  }
   if($fromPage != 'MyTeam'){
  		echo drupal_json_output($preReqResp);
   }else{
   	return $preReqResp;
   }
  } catch (Exception $ex) {
  	watchdog_exception('getCatalogTpPrerequisites', $ex);
  	expertusErrorThrow($ex);
  }
}

function getClassPrereq($courseId,$widgetId) {
  //require_once('exp_sp_lnrsearch.inc');
  try{
  include DRUPAL_ROOT . "/sites/all/modules/core/exp_sp_learning/exp_sp_learning_learner/modules/exp_sp_lnrenrollment/exp_sp_lnrenrollment.inc";
  $classid = 9;
  $preReqClassDet = Array();
  //$sessionInfo = getSessionDetails($courseId,$classid);
  //$resClsDet = getCatalogClassDetailsPreReq($courseId);
  $resClsDet = fetch_classes_detail_list($courseId);



  $classInfo = Array();
  $i1 = 0;
  $n = 0;



  foreach($resClsDet as $resClsDetials) {
  	$sessionInfoDet = Array();
    $classInfo[$n]['class_details'] = $resClsDetials;
    //regstatus
    $classId     = $resClsDetials->cls_id;
    // Modified by Vincent on Oct 29, 2013 for #0028593
    $sessionInfo = getSessionDetails($courseId,$classId,$resClsDetials->delivery_type_code);
    if(count($sessionInfo)>0) {
      for($i=0;$i<count($sessionInfo);$i++) {
      // Added by Vincent on Oct 29, 2013 for #0028593
        if($resClsDetials->delivery_type_code=='lrn_cls_dty_ilt'){
        	$sessionInfoDet[$i] = array( 'session_title' => $sessionInfo[$i]['session_title'],'session_day' => $sessionInfo[$i]['ilt_session_start_day'],
               				 		   'start_date' => $sessionInfo[$i]['ilt_session_start_date_format'],'start_time' =>$sessionInfo[$i]['ilt_session_start_time_format'],
                                       'start_form' => $sessionInfo[$i]['ilt_session_start_time_form'],'end_time' => $sessionInfo[$i]['ilt_session_start_end_format'],
                                       'end_form' => $sessionInfo[$i]['ilt_session_end_time_form'],
        							   'session_instructor_name' => $sessionInfo[$i]['session_instructor_name']
        			
        	);
        }else{
      		$sessionInfoDet[$i] = array( 'session_title' => $sessionInfo[$i]['session_title'],'session_day' => $sessionInfo[$i]['session_start_day'],
               				 		   'start_date' => $sessionInfo[$i]['session_start_date_format'],'start_time' =>$sessionInfo[$i]['session_start_time_format'],
                                       'start_form' => $sessionInfo[$i]['session_start_time_form'],'end_time' => $sessionInfo[$i]['session_start_end_format'],
                                       'end_form' => $sessionInfo[$i]['session_end_time_form'],
        							   'session_instructor_name' => $sessionInfo[$i]['session_instructor_name']);
        }
      }
      $classInfo[$n]['session_details'] = $sessionInfoDet;
    } else {
      $classInfo[$n]['session_details'] = array();
    }

    $rec_search_results =  $classInfo[$n]['class_details'];

    if($rec_search_results->currency_type == null || $rec_search_results->currency_type=='') {
      $rec_search_results->currency_type	= '';  // 0056924 - default $ removal
    }

    if($rec_search_results->export_compliance == null) {
      $rec_search_results->export_compliance = 'N';
    }

    if($rec_search_results->price == null || $rec_search_results->price == '') {
      $rec_search_results->price = '0.00';
    }


    if(($rec_search_results->price != '0.00') || ($rec_search_results->price == '0.00' && $rec_search_results->export_compliance == 'Y')){
      $classInfo[$n]['register_action'] = 'cart';
    } else {
      $classInfo[$n]['register_action'] = 'register';
    }


    $rec_search_results->row 				=  $i;
    $srch_result_response->rows[$i]['id']   = $rec_search_results->cls_id;
    $rec_search_results->available_seats 	= getAvailableSeats($rec_search_results->cls_id);
    $rec_search_results->multi_register 	= is_multiregistration_allowed($rec_search_results->cls_id);
    $rec_search_results->widgetId 			= $widgetId;

     
    $n++; $i1++;
  }

  $preReqClassDet["session_details"] = $sessionInfo;
  $preReqClassDet["class_details"]   = $resClsDet;

  return ($widgetId == 'tpPrereq') ? $classInfo : drupal_json_output($preReqClsResp);
  } catch (Exception $ex) {
  	watchdog_exception('getClassPrereq', $ex);
  	expertusErrorThrow($ex);
  }
}


?>