<?php
/**
 * Implementation of hook_init().
 */
function exp_sp_administration_init() {
	try{
  include_once "exp_sp_administration.inc";
  $request_uri = request_uri();
  if (strrpos($request_uri,'administration') > 0) {
	  $js_module_optional = array('type' => 'file', 'group' => JS_DEFAULT);
	  drupal_add_js(drupal_get_path('module', 'exp_sp_administration') . '/exp_sp_administration.js', $js_module_optional);
	  drupal_add_js(drupal_get_path('module', 'drupalchat') . '/js/jquery.mousewheel.js');
  }
  } catch (Exception $ex) {
  	watchdog_exception('exp_sp_administration_init', $ex);
  	expertusErrorThrow($ex);
  }
}

/**
 * Implementation of hook_block_info().
 */
function exp_sp_administration_block_info() {
	try{
  $blocks = array();
  $blocks['root_admin'] = array(
    'info' => t('Administration'),
  	'cache' => DRUPAL_CACHE_GLOBAL,
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages' => 'administration/learning/catalog
administration/learning/program
administration/people/user
administration/people/organization
administration/people/group
administration/people/setup
administration/survey/surveydetails
administration/survey/surveyquestions
administration/assessment/assessmentdetails
administration/assessment/assessmentquestions
administration/manage/content
administration/manage/location
administration/manage/banner
administration/manage/notification_template
administration/manage/certificate
administration/manage/announcement
administration/manage/customattribute //#custom_attribute_0078975
administration/commerce/tax
administration/sitesetup/moduleinfo
administration/sitesetup/config
administration/commerce/order
administration/commerce/setting
administration/commerce/discounts
administration/contentauthor/video
administration/contentauthor/presentation',
    'status' => TRUE,
    'region' => 'highlight',  
  );
  
  $blocks['root_admin_text_filter'] = array(
    'info' => t('Administration - Search By Text Filter'),
    'cache' => DRUPAL_CACHE_GLOBAL,
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages' => 'administration/learning/catalog
administration/learning/program
administration/people/user
administration/people/organization
administration/people/group
administration/people/setup
administration/survey/surveydetails
administration/survey/surveyquestions
administration/assessment/assessmentdetails
administration/assessment/assessmentquestions
administration/manage/content
administration/manage/location
administration/manage/banner
administration/manage/notification_template
administration/manage/certificate
administration/manage/announcement
administration/manage/customattribute //#custom_attribute_0078975
administration/commerce/tax
administration/sitesetup/moduleinfo
administration/sitesetup/config
administration/commerce/order
administration/commerce/setting
administration/commerce/discounts
administration/contentauthor/video
administration/contentauthor/presentation',
    'status' => TRUE,
    'region' => 'header',
  ); 
  $blocks['root_admin_calendar_filter'] = array(
  		'info' => t('Administration Calendar - Search By Text Filter'),
  		'cache' => DRUPAL_CACHE_GLOBAL,
  		'visibility' => BLOCK_VISIBILITY_LISTED,
  		'pages' => 'admincalendar',
  		'status' => TRUE,
  		'region' => 'header',
   );	
  $blocks['tab_cert_myapproval'] = array(
  		'info' => t('Add Certificate Verify'),
  		'cache' => DRUPAL_CACHE_PER_ROLE,
  		'visibility' => BLOCK_VISIBILITY_NOTLISTED,
  		'pages' => 'learning/certificate*'
  );
  expDebug::dPrint(' $blocks = ' . print_r($blocks, true) , 4);
  return $blocks;
  } catch (Exception $ex) {
  	watchdog_exception('exp_sp_administration_block_info', $ex);
  	expertusErrorThrow($ex);
  }
}


/**
 * Implementation of hook_menu().
 */
function exp_sp_administration_menu(){ 
	try{
  $items = array();
		
  $items['ajax/get/modules/%/%']=array(
	'title' => 'Get Modules',
	'page callback' => 'getAdminModules',
	'page arguments' => array(3,4),
	'access arguments' => array('expertus learner'),
	'type' => MENU_CALLBACK,
    'file' => 'exp_sp_administration.inc'		
    );

  $items['administration/search-filter/%'] = array(
    'title' => t('Search Filter Content'),
    'page callback' => 'getAllSearchFilterContent',
    'access callback' => 'user_access',
  	'page arguments' => array(2),
    'access arguments' => array('Administration Perm'),
    'type' => MENU_CALLBACK,
    );
        
  $items['administration'] = array(
    'title' => 'Admin',
    //'page callback' => 'empty_value',
    'page callback' => 'redirectToFirstAdminScreen',
    'access callback' => 'user_access',
    'access arguments' => array('Administration Perm'),
    'type' => MENU_CALLBACK,
    'file' => 'exp_sp_administration.inc',
    );	
	
 $items['administration/learning/courses/allcourses-autocomplete'] = array(
    'title' => 'Courses Autocomplete',
    'page callback' => 'getAllCourseAutoComplete',
    'access callback' => 'user_access',
    'access arguments' => array('Administration Perm'),
    'type' => MENU_CALLBACK,
    'file' => 'exp_sp_administration.inc',
  );

 $items['administration/learning/courses_tp/allcourses-tp-autocomplete'] = array(
    'title' => 'Courses Autocomplete',
    'page callback' => 'getAllCourseTpAutoComplete',
    'access callback' => 'user_access',
    'access arguments' => array('Administration Perm'),
    'type' => MENU_CALLBACK,
    'file' => 'exp_sp_administration.inc',   
  );
 $items['administration/learning/courses/alltp-autocomplete'] = array(
     'title' => 'Training Program Autocomplete',
     'page callback' => 'getAllTpAutoComplete',
     'access callback' => 'user_access',
     'access arguments' => array('Administration Perm'),
     'type' => MENU_CALLBACK,
     'file' => 'exp_sp_administration.inc',
 );
 $items['learning/certificate/%/%'] = array(
 		'title' => 'Add Certificate Verify',
 		'page callback' => 'empty_value',
 		'page arguments' => array(2,3),
 		'type' => MENU_CALLBACK,
 		//'access arguments' => array('expertus learner'),
 		'file' => 'exp_sp_core.inc'
 );

 /*
  * 0024925: Enforce equivalence in training plans
 * for this ticket we created equivalence option for training plan
 * don't delete it. Its may need for feature enhancement
 *
 */
 /*
 $items['administration/learning/courses/alltp-autocomplete/%'] = array(
    'title' => 'Training Program Autocomplete',
    'page callback' => 'getAllTpAutoComplete',
    'access callback' => 'user_access',
    'page arguments' => array(2),
    'access arguments' => array('Administration Perm'),
    'type' => MENU_CALLBACK,
    'file' => 'exp_sp_administration.inc',   
  );
  */
/*$items['ajax/admincore/deleteobject/%/%'] = array (
  	'title' => 'Delete Object',
  	'page callback' => 'delete_object_record',
    'page arguments' => array(3, 4),
  	'type' => MENU_CALLBACK,
    'access arguments' => array('expertus learner'),
  	'file' => 'exp_sp_administration.inc'
  );
  */
 $items['ajax/admincore/deleteprocessobject/%/%'] = array (
  	'title' => 'Delete Process',
  	'page callback' => 'delete_object_process',
    'page arguments' => array(3, 4),
  	'type' => MENU_CALLBACK,
    'access arguments' => array('expertus learner'),
  	'file' => 'exp_sp_administration.inc'
  );

 $items['administration/print-certificate/%/%/%'] = array(
  	'title' => 'Print Certificate',
    'page callback' => 'exp_sp_administration_course_print_certificate_form',
  	'page arguments' => array(2,3,4),
    'access callback' => 'user_access',
    'access arguments' => array('Learning Admin Perm'),
    'type' => MENU_CALLBACK,
    'file path' => drupal_get_path('module', 'exp_sp_administration_learning'),
    'file' => 'exp_sp_administration_notification.inc'
    
  );  
  
  $items['administration/catalog-attachment/%/%'] = array(
    'title' => 'Catalog Attachment',
    'page callback' => 'catalog_attachment_display',
    'page arguments' => array(2,3),
    'access callback' => 'user_access',
    'access arguments' => array('Learning Admin Perm'),
    'type' => MENU_CALLBACK,    
    'file' => 'exp_sp_administration_attachment.inc',     
    'file path' => drupal_get_path('module', 'exp_sp_administration_learning'),
  );
  $items['administration/attachmentdisplay/%/%/%/%'] = array(
  		'title' => 'Catalog Display Attachment',
  		'page callback' => 'admin_attachment_display',
  		'page arguments' => array(2,3,4,5),
  		'access callback' => 'user_access',
  		'access arguments' => array('Learning Admin Perm'),
  		'type' => MENU_CALLBACK,
  		'file' => 'exp_sp_administration_attachment.inc',
  		'file path' => drupal_get_path('module', 'exp_sp_administration_learning'),
  );
  $items['administration/learning-core/delete-drupal-users'] = array(
    'title' => 'Delete Users',
    'page callback' => 'deleteDrupalUsers',
    'access arguments' => array('expertus learner'),    
    'type' => MENU_CALLBACK,
    'file' => 'exp_sp_administration_attachment.inc',     
    'file path' => drupal_get_path('module', 'exp_sp_administration_learning'),
  );
  
  $items['administration/learning/admin/%/autocomplete'] = array(
  'title' => 'Survey  Autocomplete',
  'page callback' => 'getSurveyAssessmentAutoComplete',
  'page arguments' => array(3),
  'access callback' => 'user_access',
  'access arguments' => array('Administration Perm'),
  'type' => MENU_CALLBACK,
  );
    
  $items['page'] = array(
  		'title' => 'Access denied',
  		//'page callback' => 'empty_value',
  		'page callback' => 'blank_page',
  		'access callback' => 'user_access',
  		'access arguments' => array('Administration Perm'),
  		'type' => MENU_CALLBACK,
  		'file' => 'exp_sp_administration.inc',
  );
  $items['administration/access-denied'] = array(
  		'title' => 'Access denied',
  		//'page callback' => 'empty_value',
  		'page callback' => 'blank_page',
  		'access callback' => 'user_access',
  		'access arguments' => array('Administration Perm'),
  		'type' => MENU_CALLBACK,
  		'file' => 'exp_sp_administration.inc',
  );
  return $items;
  } catch (Exception $ex) {
  	watchdog_exception('exp_sp_administration_menu', $ex);
  	expertusErrorThrow($ex);
  }
} 
/*-- Validate the logged user is drupal admin --*/
function is_drupal_super_admin() {
	global $user;
	
	if ($user->uid == 1) { // Able to view this page by drupal 1 admin.
		return true;
	}
	
	// Redirect to Access denied page.
	drupal_goto('administration/access-denied');
}

//MetaTag Feature - is_anonymous_user_catalog() function to check whether Catalog Learner permission is set to Anonymous User.
function is_anonymous_user_catalog() {
	global $user;
	
	$rid=db_select('role_permission','role');
	$rid->addField('role','rid');
	$rid->condition('role.rid','1','=');
	$rid->condition('role.permission','catalog learner','=');
	$count = $rid->execute()->fetchField();
	
	if(!empty($count) && $count == '1'){
		return true;
	} else {
		return false;
	}
}

//MetaTag Feature - is_module_admin_access() function to check whether or not Logged in user belongs to Administer Group
 function is_module_admin_access() {
   expDebug::dPrint("inside the function is_module_admin_access",5);
 	global $user;
 	return user_access('Module Info Admin Perm');
 }

 
function getAllSearchFilterContent($currModule) {
	try {
  if($currModule == 'user' && checkAdminLevelPermission('user')){
    require_once(drupal_get_path('module', 'exp_sp_administration_user') .'/exp_sp_administration_user.inc');
    print getUserTabContent();
  } else if($currModule == 'organization' && checkAdminLevelPermission('organization')){
    require_once(drupal_get_path('module', 'exp_sp_administration_organization') .'/exp_sp_administration_organization.inc');
    print getOrgTabContent();
  } else if($currModule == 'group' && checkAdminLevelPermission('group')){
    require_once(drupal_get_path('module', 'exp_sp_administration_groups') .'/exp_sp_administration_groups.inc');
    print getRoleTabContent('group');
  } else if($currModule == 'catalog' && checkAdminLevelPermission('catalog'))	{
    require_once(drupal_get_path('module', 'exp_sp_administration_catalog') .'/exp_sp_administration_catalog.inc');
    print getCatalogTabContent();
  } else if($currModule == 'program' && checkAdminLevelPermission('program')){
    require_once(drupal_get_path('module', 'exp_sp_administration_program') .'/exp_sp_administration_program.inc');
    print getProgramTabContent();
  } else if($currModule == 'content' && checkAdminLevelPermission('content')){
    require_once(drupal_get_path('module', 'exp_sp_administration_content') .'/exp_sp_administration_content.inc');
    print getContentAdminTabContent();
  }else  if($currModule == 'video' && checkAdminLevelPermission('video')){
  	require_once(drupal_get_path('module', 'exp_sp_administration_contentauthor') .'/exp_sp_administration_contentauthor.inc');
    print getContentAuthorAdminTabContent($currModule);
  }else  if($currModule == 'presentation' && checkAdminLevelPermission('presentation')){
  	require_once(drupal_get_path('module', 'exp_sp_administration_contentauthor') .'/exp_sp_administration_contentauthor.inc');
    print getContentAuthorAdminTabContent($currModule);
  } else if($currModule == 'location'  && checkAdminLevelPermission('location')){
    require_once(drupal_get_path('module', 'exp_sp_administration_location') .'/exp_sp_administration_location.inc');
    print getResourceTabContent();
  } else if($currModule == 'banner' && checkAdminLevelPermission('banner')){
    require_once(drupal_get_path('module', 'exp_sp_administration_banner') .'/exp_sp_administration_banner.inc');
    print getBannerTabContent();
  } else if($currModule == 'notification_template' && checkAdminLevelPermission('notification_template')){
    require_once(drupal_get_path('module', 'exp_sp_administration_notification_template') .'/exp_sp_administration_notification_template.inc');
    print getNotificationTabContent('notification_template');
  } else if($currModule == 'certificate' && checkAdminLevelPermission('certificate')){
    require_once(drupal_get_path('module', 'exp_sp_administration_notification_template') .'/exp_sp_administration_notification_template.inc');
    print getNotificationTabContent('certificate');
  } else if($currModule == 'announcement' && checkAdminLevelPermission('announcement')){
    require_once(drupal_get_path('module', 'exp_sp_administration_announcement') .'/exp_sp_administration_announcement.inc');
    print getAnnouncementTabContent('announcement');
  }
//#custom_attribute_0078975
else if($currModule == 'customattribute' && checkAdminLevelPermission('customattribute') && module_exists('exp_sp_administration_customattribute')){
    require_once(drupal_get_path('module', 'exp_sp_administration_customattribute') .'/exp_sp_administration_customattribute.inc');
    print getCustomattributeTabContent('customattribute');
  } else if($currModule == 'surveydetails' && checkAdminLevelPermission('surveydetails')){
    require_once(drupal_get_path('module', 'exp_sp_administration_surveydetails') .'/exp_sp_administration_surveydetails.inc');
    print getSurveyDetailsTabContent('survey');
  } else if($currModule == 'assessmentdetails' && checkAdminLevelPermission('assessmentdetails')){
    require_once(drupal_get_path('module', 'exp_sp_administration_surveydetails') .'/exp_sp_administration_surveydetails.inc');
    print getSurveyDetailsTabContent('assessment');
  } else if($currModule == 'surveyquestions' && checkAdminLevelPermission('surveyquestions')){
    require_once(drupal_get_path('module', 'exp_sp_administration_surveyquestions') .'/exp_sp_administration_surveyquestions.inc');
    print getSurveyQuestionsTabContent('surveyquestions');
  } else if($currModule == 'assessmentquestions' && checkAdminLevelPermission('assessmentquestions')){
    require_once(drupal_get_path('module', 'exp_sp_administration_surveyquestions') .'/exp_sp_administration_surveyquestions.inc');
    print getSurveyQuestionsTabContent('assessmentquestions');
  } else if($currModule == 'tax' && checkAdminLevelPermission('tax')){
    require_once(drupal_get_path('module', 'exp_sp_administration_commerce_tax') .'/exp_sp_administration_commerce_tax.inc');
    print getCommerceTabContent('tax');
  }else if($currModule == 'moduleinfo' && checkAdminLevelPermission('moduleinfo')){
  		require_once(drupal_get_path('module', 'exp_sp_administration_module_info') .'/exp_sp_administration_module_info.inc');
    	print getModuleInfoTabContent('moduleinfo');  
  } else if($currModule == 'order' && checkAdminLevelPermission('order')){
    require_once(drupal_get_path('module', 'exp_sp_administration_order') .'/exp_sp_administration_order.inc');
    print getManageOrderTabContent('order');
  }else if($currModule == 'setting' && checkAdminLevelPermission('setting')){
    require_once(drupal_get_path('module', 'exp_sp_admin_com_set') .'/exp_sp_admin_com_set.inc');
    print getCommerceSettingTabContent('setting');
  }else if($currModule == 'discounts' && checkAdminLevelPermission('discounts')){
    require_once(drupal_get_path('module', 'exp_sp_administration_commerce_discounts') .'/exp_sp_administration_commerce_discounts.inc');
    print getCommerceDiscountsTabContent('discounts');
  }else if($currModule == 'setup' && checkAdminLevelPermission('setup')){
    require_once(drupal_get_path('module', 'exp_sp_administration_setup') .'/exp_sp_administration_setup.inc');
    print getSetUpTabContent('setup');
  }else if($currModule == 'config' && checkAdminLevelPermission('config')){
    	require_once(drupal_get_path('module', 'exp_sp_administration_config') .'/exp_sp_administration_config.inc');
    	print getConfigTabContent('config');
  }
  } catch (Exception $ex) {
  	watchdog_exception('getAllSearchFilterContent', $ex);
  	expertusErrorThrow($ex);
  }
}

/**
 * Implementation of hook_perm().
 */
function exp_sp_administration_permission() {	
	try{
  return array(    
    'Administration Perm' => array(
      'title' => t('Administration Perm')
    ),
  );
  } catch (Exception $ex) {
  	watchdog_exception('exp_sp_administration_permission', $ex);
  	expertusErrorThrow($ex);
  }
}

/**
 * Implementation of hook_theme().
 */
function exp_sp_administration_theme() {
	try{
  global $theme_key;
  $themes = array();
  
  $themes['root_admin_block'] = array (
    'template' => 'exp_sp_administraton-root-admin-block',
   'variables' => array(
                      'js_object_info' => array (
                                              'name' => 'narrowsearch',))
  );
  
  $themes['root_admin_rounded_header'] = array (
    'template' => 'exp_sp_administraton-rounded-header',
  );

  $themes['root_admin_rounded_footer'] = array (
    'template' => 'exp_sp_administraton-rounded-footer',
  );  
  
  $themes['narrow_search_sortbar'] = array (
    'variables' => array(
                      'js_object_info' => array (
                                              'name' => 'narrowsearch', // provide the java script object name
                                              'init_id' => 'root-admin', // provide the id on which you have initialized/will be initializing the javascript object
                                       ),
                      'title' => t('LBL011'),
                      'links_list' => array(), // provide the links. Each element is an array array('title' => '', 'sort_type' => '', 'html_id' => '');
                      'html_id' => 'narrow-search-sortbar', // Provide an id for sortbar if you want to refer it in your js/jquery script
                      'sortbar_list' => '',  // Json value for validation purpose which will be use in exp_sp_administrator.js
                      'sortbar_enable' => true,  //Enable or disable sort bar                 
                   ),   
    'template' => 'exp_sp_administraton-narrow-search-sortbar',
  );

  $themes['narrow_search_actionbar'] = array ( 
    'variables' => array(
                      'js_object_info' => array (
                                              'name' => 'narrowsearch', // provide the java script object name
                                              'init_id' => 'root-admin', // provide the id on which you have initialized/will be initializing the javascript object
                                       ),
                      'show_print_button' => true,
                      'show_export_button' => true,
                      'show_add_button' => true,
                      'add_button_title' => '', // Provide the title for add button
                      'add_page_path' => '', // Provide the path to the add page
                      'extra_buttons_list' => array(), // TBD - provide the extra buttons list.
                      'html_id' => 'narrow-search-actionbar', // Provide an id for actionbar if you want to refer it in your js/jquery script
                      'actionbar_list' => '', // Json value for validation purpose which will be use in exp_sp_administrator.js
                      'ctools_style' => 'ctools-modal-ctools-admin-course-class-addedit-style',   
                      'grey_out_add_button' => false,                 
                                       
                   ),   
    'template' => 'exp_sp_administraton-narrow-search-actionbar',
  );   
  
  $themes['root_admin_tab_holder'] = array (
    'template' => 'exp_sp_administraton-root-admin-tab-holder',
  );

 // $parentAdminMenuLinks=getParentAdminLinks();
  $themes['root_admin_links'] = array (
    'variables'=>array( 'title' => 'Administration', 
                       'html_id' => 'tbl_admin_links', 
  					  // 'admin_links_list' => $parentAdminMenuLinks,
	                   'admin_links_list1' => array( array(
	                                                      'code' => 'learning',
	                                                      'title' => t('Learning'),
	                                                      'path' => 'administration/learning',
	                                                    ),
	                                                    array(
	                                                      'code' => 'survey',
	                                                      'title' => t('Survey'),
	                                                      'path' => 'administration/survey',
	                                                    ),
	                                                    array(
	                                                      'code' => 'assessment',
	                                                      'title' => t('Assessment'),
	                                                      'path' => 'administration/assessment',
	                                                    ),                                             
	                                                    array(
	                                                      'code' => 'people',
	                                                      'title' => t('People'),
	                                                      'path' => 'administration/people',
	                                                    ),
	                                                    array(
	                                                      'code' => 'collabration',
	                                                      'title' => t('LBL224'),
	                                                      'path' => 'administration/collaboration',
	                                                    ),
	                                                    array(
	                                                      'code' => 'manage',
	                                                      'title' => t('Manage'),
	                                                      'path' => 'administration/manage',
	                                                    ),		                                                   
	                                                    array(
	                                                      'code' => 'contentauthor',
	                                                      'title' => t('Content Author'),
	                                                      'path' => 'administration/contentauthor',
	                                                    ),		                                                   
														                                                  
	                                                    array(
	                                                      'code' => 'commerce',
	                                                      'title' => t('Commerce'),
	                                                      'path' => 'administration/commerce',
	                                                    ),
	                                                    array(
	                                                      'code' => 'moduleinfo',
	                                                      'title' => t('LBL1003'),
	                                                      'path' => 'administration/sitesetup',
	                                                    ),
	                                                    array(
	                                                      'code' => 'report',
	                                                      'title' => t('Report'),
	                                                      'path' => 'administration/report',
	                                                    ), 

                                           ),
  
                 ),
    'template' => 'exp_sp_administraton-root-admin-links', 
  ); 
  
   
  $themes['narrow_search_filterset_checkboxes'] = array (
    'variables' => array(
                      'js_object_info' => array (
                                              'name' => 'narrowsearch', // provide the java script object name
                                              'init_id' => 'root-admin', // provide the id on which you have initialized/will be initializing the javascript object
                                       ),
                      'code' => 'checkboxes', // Replace with unique code for the current set of checkboxes
                                                       // This will be used as a paramter in the URL to inform the server of selected
                                                       // checkboxes in this filter set
                      'title' => t('LBL390'), // Replace with an appropriate tile for the current set of checkboxes
                      'checkboxes_list' => array(), // provide the checkbox list. Each element is an array: array('name' => '', 'code' => '');
                      'html_id' => '', // Provide an id for this checkbox filters set if you want to refer it in your js/jquery script
                   ),   
    'template' => 'exp_sp_administraton-narrow-search-filterset-checkboxes',
  );
  
  $themes['narrow_search_filterset_radio'] = array (
    'variables' => array(
                      'js_object_info' => array (
                                              'name' => 'narrowsearch', // provide the java script object name
                                              'init_id' => 'root-admin', // provide the id on which you have initialized/will be initializing the javascript object
                                       ),
                      'code' => 'radio', // Replace with unique code for the current set of radio
                                                       // This will be used as a paramter in the URL to inform the server of selected
                                                       // radio in this filter set
                      'title' => t('Radio Filter Set'), // Replace with an appropriate tile for the current set of radio
                      'radio_list' => array(), // provide the radio list. Each element is an array: array('name' => '', 'code' => '');
                      'html_id' => '', // Provide an id for this radio filters set if you want to refer it in your js/jquery script
                   ),   
    'template' => 'exp_sp_administraton-narrow-search-filterset-radio',
  );
    
  // Theme for search box in the narrow side region
  $themes['narrow_search_filterset_addltext'] = array (
    'variables' => array(
                      'js_object_info' => array (
                                              'name' => 'narrowsearch', // provide the java script object name
                                              'init_id' => 'root-admin', // provide the id on which you have initialized/will be initializing the javascript object
                                       ),
                      'code' => 'addltext', // Replace with unique code for this additional text filterset
                                                       // This will be used as a paramter in the URL to inform the server of the value
                                                       // typed by the user in the filter text field.
                      'title' => t('LBL391'), // Replace with an appropriate tile for the additional text filter. //Addl Text Filter
                      'default_text' => '', // Default text would be displayed in the field to instruct the user about what value can be entered.
                      'html_id' => '', // Provide an id if you want to refer this filterset in your js/jquery script
                   ),   
    'template' => 'exp_sp_administraton-narrow-search-filterset-addltext',
  );
  
  // Theme for search box in the narrow side region
  $themes['narrow_search_filterset_tags'] = array (
  		'variables' => array(
  				'js_object_info' => array (
  						'name' => 'narrowsearch', // provide the java script object name
  						'init_id' => 'root-admin', // provide the id on which you have initialized/will be initializing the javascript object
  				),
  				'code' => 'tagscloud', // Replace with unique code for this tags cloud filterset
  				// This will be used as a paramter in the URL to inform the server of the value
  				// typed by the user in the filter text field.
  				'title' => t('LBL391'), // Replace with an appropriate tile for the additional text filter. //Addl Text Filter
  				'tags_for_cloud' => array(), // Replace with weighted tags list
  				'html_id' => '', // Provide an id if you want to refer this filterset in your js/jquery script
  		),
  		'template' => 'exp_sp_administration-narrow-search-filterset-tags',
  );
  
  $themes['tags_cloud'] = array(
  		'variables' => array('weighted_tags' => array()),
  		'template' => 'tags-cloud',
  );

  // Theme for date range narrow search filterset
  $themes['narrow_search_filterset_daterange'] = array (
    'variables' => array(
                      'js_object_info' => array (
                                              'name' => 'narrowsearch', // provide the java script object name
                                              'init_id' => 'root-admin', // provide the id on which you have initialized/will be initializing the javascript object
                                       ),
                      'code' => 'daterange', // Replace with unique code for this daterange filterset
                                             // This will be used as a parameter in the URL to inform
                                             // the server of the from and to dates selected by the user.
                      'title' => t('LBL219'), // Replace with an appropriate tile for the daterange filter.
                      'title_description' => t('LBL043'), // Describes the title. Shown in (). This can be replaced with a
                                                         // more appropriate tile if needed.
                      'from_default_text' => t('LBL220'), // Default text that would be
                                                                 // displayed in the field to
                                                                 // instruct the user on what value
                                                                 // needs to be entered
                      'to_default_text' => t('LBL221'), // Default text that would be displayed
                                                             // in the field to instruct the user on
                                                             // what value needs to be entered
                      'html_id' => '', // Provide an id if you want to refer this filterset in your js/jquery script
                   ),   
    'template' => 'exp_sp_administraton-narrow-search-filterset-date-range',
  );

  $themes['narrow_search_filters_holder'] = array (
    'variables' => array(                      
                      'js_object_info' => array (
                                              'name' => 'narrowsearch', // provide the java script object name
                                              'init_id' => 'root-admin', // provide the id on which you have initialized/will be initializing the javascript object
                                       ),
                      'title' => ($theme_key == 'expertusoneV2') ? 'REFINE' : 'Narrow Results',                  
                      'rendered_filtersets_list' => array(), // HTML rendered filtersets to be displayed in filters holder
                       'filter_set_list' => '',   // Json value for validation purpose which will be use in exp_sp_administrator.js             
                      'html_id' => '', // Provide an id for the filters holder if you want to refer it in your js/jquery script
                      'enable_option' => true, //Provide an option to hide the narraow search column                                  
                   ),
    'template' => 'exp_sp_administraton-narrow-search-filters-holder',
  );
  
  $themes['narrow-search-results-item-actions'] = array (
    'variables' => array(                      
                      'js_object_info' => array (
                                              'name' => 'narrowsearch', // provide the java script object name
                                              'init_id' => 'root-admin', // provide the id on which you have initialized/will be initializing the javascript object
                                       ),
                      'edit_button_title' => t("LBL063"),
                      'edit_page_path' => '',
                      'edit_button_action_params' => array(), // Provide the attributes in order to uniquely identify each search result item 
                      'html_id' => '', // Provide an id for the item actions holder if you want to refer it in your js/jquery script
                      'ctools_style' => 'ctools-modal-ctools-admin-addedit-style',   // Ctools Style overide parameter             
                   ),
    'template' => 'exp_sp_administration-narrow-search-results-item-actions',
  ); 
  
  
/*    $themes['narrow-search-results-item-actions-list'] = array (
    'variables' => array(                      
                      'js_object_info' => array (
                                              'name' => 'narrowsearch', // provide the java script object name
                                              'init_id' => 'root-admin', // provide the id on which you have initialized/will be initializing the javascript object
                                       ),
                      'action_button_title' => '',
                      'action_page_path' => '',
                      'action_button_params' => array(), // Provide the attributes in order to uniquely identify each search result item 
                      'html_id' => '', // Provide an id for the item actions holder if you want to refer it in your js/jquery script
                      'ctools_style' => 'ctools-modal-ctools-admin-addedit-style',   // Ctools Style overide parameter             
                   ),
    'template' => 'exp_sp_administration-narrow-search-results-item-actions-list',
  );*/
  
  
  $themes['narrow-search-results-item-details'] = array (
    'variables' => array(                      
                      'js_object_info' => array (
                                              'name' => 'narrowsearch', // provide the java script object name
                                              'init_id' => 'root-admin', // provide the id on which you have initialized/will be initializing the javascript object
                                       ),
                      'title' => '', // provide the item title here
                      'title_link_path' => '', // If a title link path is provided, the title is rendered as a hyperlink.
                      'details_list' => array(), // provide the details to be displayed below the title; Each detail will separated by a | (pipe symbol).
                      'description' => '', // If a description is provided, the description is displayed below the details.
                      'truncate_keyword' => 'NARROW_SEARCH', // Keyword for titleController() and descController().
                                                             // Longer title or description would be truncated and shown
                                                             // with trailing ellipses.
                      'html_id' => '', // Provide an id for the item details holder if you want to refer it in your js/jquery script
                      'action_list' => array(), // provide list of action buttons to be displayed below the description;
                   ),
    'template' => 'exp_sp_administration-narrow-search-results-item-details',
  );
    
  $themes['addedit-misc-actions'] = array (
    'variables' => array(
                      'back_to_search_button_path' => '', // provide the admin search page path. e.g. administration/organization
                      'back_to_search_button_title' => t('LBL392'),
                      'show_back_to_search_button' => true, // set to false if you want to hide back to search.
                      'addl_misc_actions_list' =>  array() // for showing additonal buttons. Each element is array('title' => '', 'path' => '') 
                   ),
   'template' => 'exp_sp_administration-addedit-misc-actions'
  );

  $themes['narrow_search_text_filter_block'] = array (
    'template' => 'exp_sp_administration-narrow-search-text-filter-block',
  );
  
  $themes['narrow_search_calendar_filter_block'] = array (
  		'template' => 'exp_sp_administration-narrow-search-calendar-filter-block',
  );

  //theme for slider region
  $themes['narrow_search_filterset_slider'] = array (
    'variables' => array(
                      'js_object_info' => array (
                                              'name' => 'narrowsearch', // provide the java script object name
                                              'init_id' => 'root-admin', // provide the id on which you have initialized/will be initializing the javascript object
                                       ),
                      'code' => 'slider', // Replace with unique code for this slider filterset
                                                       // This will be used as a paramter in the URL to inform the server of the 
                                                       // lower and upper values selected by the user.
                      'title' => t('LBL393'), // Replace with an appropriate tile for the slider filter.
					  'html_id' => '', // Provide an id if you want to refer this filterset in your js/jquery script
                      'startval'=>'0', //Replace with start value
                      'endval'  =>'100', // Replace with end value
                      'prefix' => '$',  // Replace with prefix for the display values if needed
                      'suffix' => ''   // Provide suffix for the display values if needed                               
                   ),   
    'template' => 'exp_sp_administraton-narrow-search-filterset-slider',
  );    
  
  //theme for accordin tab links
  $themes['show_accordin_tabs'] = array (
    'variables' => array(
                      'js_object_info' => array (
                                              'name' => 'narrowsearch', // provide the java script object name
                                              'init_id' => 'root-admin', // provide the id on which you have initialized/will be initializing the javascript object
                                       ),
                      'code' => 'accordintab', 
                      'title' => t('LBL394'), 
                      'content' =>''                                           
                   ),   
    'template' => 'exp_sp_administraton-show_according_tabs',
  ); 
  
  $themes['narrow_search_tab_content'] = array (
    'variables' => array(
                          'html_id'=> 'narrow-search-results', 
  						  'narrowsearch_tab_content_list'=>array(),
                        ),
    'template' => 'exp_sp_administraton-narrow-search-tab-content',
  );
  //exp_sp_administration-narrow-search-results-item-image.tpl.php
  $themes['narrow-search-results-item-image'] = array (
    'variables' => array(                      
                      'js_object_info' => array (
                                              'name' => 'narrowsearch', // provide the java script object name
                                              'init_id' => 'root-admin', // provide the id on which you have initialized/will be initializing the javascript object
                                       ),
                      //'title' => t("LBL035"),                  
                      //'rendered_filtersets_list' => array(), // HTML rendered filtersets to be displayed in filters holder
                      // 'filter_set_list' => '',   // Json value for validation purpose which will be use in exp_sp_administrator.js             
                      //'html_id' => '', // Provide an id for the filters holder if you want to refer it in your js/jquery script
                   ),
    'template' => 'exp_sp_administration-narrow-search-results-item-image',
  );
  
  $themes['search-results-pdf'] = array (
    'variables' => array(
                      'data' => array(), // narrow search results records to be displayed in the table
                      'title' => '', // title for the pdf document
                      'applied_filters' => array(), // applied search filter names + values
                      'header_field_map' => array(), // header field map
                      'font_size' => 11, //font size in pt
                   ),
    'template' => 'exp_sp_administration-narrow-search-results-pdf',
  );
  
  $themes['drupalajax_qtip'] = array(
    'variables' => array('popup_id' => '', // The id to be given to the popup
                         'popup_width' => '1px', // Popup width pixels with unit
                         'class' => '',  // Any class to be added to the popup for styling etc.
                         'display_html' => '' // The html to display inside the popup
    ),
    'template' => 'exp_sp_administration_drupalajax_qtip'
  );
  $themes['narrow_classview'] = array(
  		  'variables' => array(
  				'class' => '',  // Any class to be added to the popup for styling etc.
  		),
  		'template' => 'exp_sp_administration_narrow_classview'
  );
  $themes['narrow_courseview'] = array(
  		'variables' => array(
  				'class' => '',  // Any class to be added to the popup for styling etc.
  		),
  		'template' => 'exp_sp_administration_narrow_courseview'
  );
  $themes['narrow_contentview'] = array(
  		'variables' => array(
  				'class' => '',  // Any class to be added to the popup for styling etc.
  		),
  		'template' => 'exp_sp_administration_narrow_contentview'
  );
  $themes['narrow_questionview'] = array(
  		'variables' => array(
  				'class' => '',  // Any class to be added to the popup for styling etc.
  		),
  		'template' => 'exp_sp_administration_narrow_questionview'
  );
  $themes['narrow_surveyassess_view'] = array(
  		'variables' => array(
  				'class' => '',  // Any class to be added to the popup for styling etc.
  		),
  		'template' => 'exp_sp_administration_narrow_surveyassess_view'
  );
  $themes['narrow_tpview'] = array(
  		'variables' => array(
  				'class' => '',  // Any class to be added to the popup for styling etc.
  		),
  		'template' => 'exp_sp_administration_narrow_tpview'
  );
  $themes['narrow_orgview'] = array(
  		'variables' => array(
  				'class' => '',  // Any class to be added to the popup for styling etc.
  		),
  		'template' => 'exp_sp_administration_narrow_orgview'
  );
  $themes['narrow_userview'] = array(
  		'variables' => array(
  				'class' => '',  // Any class to be added to the popup for styling etc.
  		),
  		'template' => 'exp_sp_administration_narrow_userview'
  );
  $themes['narrow_bannerview'] = array(
  		'variables' => array(
  				'class' => '',  // Any class to be added to the popup for styling etc.
  		),
  		'template' => 'exp_sp_administration_narrow_bannerview'
  );
  $themes['narrow_announceview'] = array(
  		'variables' => array(
  				'class' => '',  // Any class to be added to the popup for styling etc.
  		),
  		'template' => 'exp_sp_administration_narrow_announceview'
  );
  $themes['narrow_notifyview'] = array(
  		'variables' => array(
  				'class' => '',  // Any class to be added to the popup for styling etc.
  		),
  		'template' => 'exp_sp_administration_narrow_notifyview'
  );
  return $themes;
  } catch (Exception $ex) {
  	watchdog_exception('exp_sp_administration_theme', $ex);
  	expertusErrorThrow($ex);
  }
}

/**
 * Implementation of hook_block_view().
 */
function exp_sp_administration_block_view($delta = ''){
try{
  $header_optional = array('type' => 'file', 'scope' => 'header', 'group' => JS_LIBRARY);
  $css_module_optional = array('type' => 'file', 'group' => CSS_DEFAULT);
  $css_theme_optional = array('type' => 'file', 'group' => CSS_THEME);
  $js_module_optional = array('type' => 'file', 'group' => JS_DEFAULT);
   
  $block = array();

  include_once('exp_sp_administration.inc');
  
  drupal_add_js(drupal_get_path('module', 'exp_sp_administration') .'/exp_sp_administration.js', $js_module_optional);
  //drupal_add_css(drupal_get_path('module', 'exp_sp_administration') .'/timePicker.css', $css_theme_optional);
  drupal_add_js(drupal_get_path('module', 'exp_sp_administration') .'/exp_sp_administration_addedit_behaviours.js', $js_module_optional);
  //drupal_add_js(drupal_get_path('module', 'exp_sp_administration') .'/jquery.timePicker.js', $js_module_optional);
  //global $theme_key;  
   global $theme_key;
  	if($theme_key == 'expertusoneV2') {
  		if(module_exists('exp_sp_esignature')){   	   
  			drupal_add_css(drupal_get_path('module', 'exp_sp_esignature') .'/exp_sp_esignature_v2.css',$css_module_optional);
  		} 
  		drupal_add_css(drupal_get_path('module', 'exp_sp_administration') .'/exp_sp_administration_v2.css',array('type' => 'file','group' => CSS_THEME, 'browsers' => array('IE' => 'lte IE 10', '!IE' => true),
 'preprocess' => true));
  	} else {
  		if(module_exists('exp_sp_esignature')){   	   
  			drupal_add_css(drupal_get_path('module', 'exp_sp_esignature') .'/exp_sp_esignature.css',$css_module_optional);
  		} 
			drupal_add_css(drupal_get_path('module', 'exp_sp_administration') .'/exp_sp_administration.css', $css_theme_optional);  		
  	}
  //drupal_add_css(drupal_get_path('module', 'exp_sp_administration') .'/exp_sp_administration.css', $css_theme_optional);

  drupal_add_css(drupal_get_path('module', 'exp_sp_administration_user') .'/jquery.multiselect.css');
  drupal_add_css(drupal_get_path('module', 'exp_sp_administration_user') .'/jquery.multiselect.filter.css');
  drupal_add_js(drupal_get_path('module', 'exp_sp_administration_user') .'/jquery.multiselect.filter.js', $js_module_optional);
  drupal_add_js(drupal_get_path('module', 'exp_sp_administration_user') .'/jquery.multiselect.js', $js_module_optional);
  
  include_once(drupal_get_path('module', 'exp_sp_administration_learning') .'/exp_sp_administration_custom_fields.inc');
  $path = arg(2);
  switch ($delta) {
    case 'root_admin':
    	$block['subject'] = t('Administration');
      $block['content'] = ' ';
       if (user_access('Administration Perm') && checkAdminLevelPermission($path)) { 	
	      /*if (substr($_SERVER['REQUEST_URI'], -strlen('administration')) == 'administration') {
	        $firstAdminLink = getParentAdminLinks(true);
	        drupal_goto($firstAdminLink);
	      }*/
	      
	      includeJqGridJsCss();
	      $block['narrow_search']['disp_content'] = theme('root_admin_block');
	    }
	    break;

    case 'root_admin_text_filter':
      $block['subject'] = ' ';
      $block['content'] = ' ';
      if (user_access('Administration Perm') && checkAdminLevelPermission($path)) {
        $block['narrow_search_text_filter'] = theme('narrow_search_text_filter_block');
      }
      break;
      case 'tab_cert_myapproval':
      	//includeJqGridJsCss();
      	$block['subject'] = 'Add Certificate Verify';
      	$block['content'] = ' ';
      	break;
      case 'root_admin_calendar_filter':
      	$block['subject'] = ' ';
      	$block['content'] = ' ';
      	
      		$block['narrow_search_calendar_filter'] = theme('narrow_search_calendar_filter_block');
      	
      	break;
      
      
  }
  
  expDebug::dPrint(' $block = ' . print_r($block, true) , 4);
  return $block;
  } catch (Exception $ex) {
  	watchdog_exception('exp_sp_administration_block_view', $ex);
  	expertusErrorThrow($ex);
  }
}

function deleteDrupalUsers(){	
try{	
	$deleteStmt = db_delete('users');  		
    $deleteStmt->condition('uid',$_POST['drupalUserId'] ,'=');       
    $numDeleted = $deleteStmt->execute();
    return $numDeleted;
    } catch (Exception $ex) {
    	watchdog_exception('deleteDrupalUsers', $ex);
    	expertusErrorThrow($ex);
    }
}

/**
 * Implements hook_flush_caches().
 */
function exp_sp_administration_flush_caches() {
	try{
  $cid = 'variables';
  $wildcard  = true;
  $bin = 'cache_bootstrap';
  $cache_objects[$bin] = new DrupalDatabaseCache($bin);
  $cache_objects[$bin]->clear($cid, $wildcard);
  return array();
  } catch (Exception $ex) {
  	watchdog_exception('exp_sp_administration_flush_caches', $ex);
  	expertusErrorThrow($ex);
  }
}

/**
 * Used to verify administer deep links access
 * @param string $path
 * @return boolean
 */
function checkAdminLevelPermission($path = '') {
	try{
	global $user;
	$path 	= trim($path);
	$permissions = array(
		'catalog' 				=> 'Catalog Course Admin Perm',	
		'program'				=> 'Training Program Details Admin Perm',	
		'user'					=> 'Users Admin Perm',
		'organization'			=> 'Organization Admin Perm',
		'group'					=> 'Security Admin Perm',
		'setup'					=> 'Setup Admin Perm',
		'surveydetails'			=> 'Survey Details Admin Perm',
		'surveyquestions'		=> 'Survey Questions Admin Perm',
		'assessmentdetails'		=> 'Assessment Details Admin Perm',
		'assessmentquestions'	=> 'Assessment Questions Admin Perm',
		'content'				=> 'Content Admin Perm',
		'location'				=> 'Resources Admin Perm',
		'banner'				=> 'Banner Admin Perm',
		'notification_template'	=> 'Notification Admin Perm',
		'certificate'			=> 'Certificate Admin Perm',
		'announcement'			=> 'Announcement Admin Perm',
        'customattribute'        => 'Custom Attribute Admin Perm', //#custom_attribute_0078975
		'order'					=> 'view all orders',
		'discounts'				=> 'configure discounts',
		'tax'					=> 'Tax Admin Perm',
		'setting'				=> 'Commerce setup perm',
		'moduleinfo'			=> 'Module Info Admin Perm',
		'config'				=> 'Config Admin Perm',
		'video'					=> 'Video Admin Perm',
		'presentation'			=> 'Presentation Admin Perm',
	);
	if (isset($permissions[$path]))
		return user_access($permissions[$path]);
	} catch (Exception $ex) {
		watchdog_exception('checkAdminLevelPermission', $ex);
		expertusErrorThrow($ex);
	}
		
}
?>
