<?php 

class AdministrationCertificateTestHelper extends ExpertusWebTestCase {
	private $searchResultContent=null;
	
	protected $testcases = array();
	public $listContent = '';
	
	private $srcParam = array(
			'title'=>'',		// Title base search
			'announcementdaterange'=>'',		// date range on announcement
			'announcementlang'=>'cre_sys_lng_eng', 	// Selected languages pipe separated
			'sortby'=> 'desc',		//	Sort by option
			'announcemanage' => 'cre_sys_fop_me'
	);

	public function setUp() {
		parent::setUp();
		$this->drupalLogin($this->admin); // login as admin
		$this->getCertificateTestCases();
		// set refer to prevent access denied error
		$this->setHttpReferer('learning/enrollment-search');
	}
	
	public function manageAdminCertificate($scope = 'basic') {
	
		// Get Main HTML content
		$this->drupalPost('administration/manage/certificate');
		$content = $this->content;
	
		// Get Filters
		$this->drupalGetAJAX('administration/search-filter/certificate');
		$this->content = drupal_json_decode($this->content);
			
		//Update filters with existing response
		$replArray = array(
				'rendered_narrow_search_filters' => 'narrow-search',
				'rendered_main_div' => 'root-admin-results',
				'rendered_tab_content_main' => 'tab-content-main',
				'rendered_narrow_search_sortbar' => 'admin-maincontent_tab',
				'rendered_narrow_search_actionbar' => 'sort-bar-V2'
		);
			
		$this->updateSearchFilters($content, $replArray, 'div', 'tag', 'div' );
	
		$this->displayTagsById('narrow-search');
		$this->displayTagsById('root-admin-results');
	
		// Based on the scope set the data to test
		if ($scope == 'all') {
			$testCases = $this->testcases['certificateList'];
		} else {
			$testCases = array($this->testcases['certificateList'][$scope]);
		}
		
		//Get search results
		foreach($testCases as $test){
			$this->getAdministrationCertificateList($test);
		}
	}
	
	public function getAdministrationCertificateList($opt = array()){
		$opt = array_merge($this->basicParam, $opt);
		$this->listContent = $this->content;
		$srcRc = $this->drupalGetAJAX('administration/manage/certificate/search/all/',array('query'=>$opt));
		$this->updateSearchResults($this->listContent,$srcRc,'narrow-search-results-holder');
	}

	protected function getCertificateTestCases(){
		$rand = $this->randomName();
		$this->testcases = array(
				'certificateList' => array(
						'basic' => array(),
						'case1' => array(),
				),		
				'certificateCreate' => array(
		  				'st_case1' => array(
		  						"name"							=> 'st_case1 certificate '. $rand, 
		  						"short_description[value]" 		=> 'Certificate description goes here',
						 ),
						'st_case2' => array(
		  						"name"							=> 'st_case2 certificate '. $rand, 
		  						"short_description[value]" 		=> 'Certificate description goes here',
						),
				),
				'certificateUpdate' => array(
						'st_case1' 	=> array(
							"name"						=> 'st_case1 Certificate updated '.$rand,
							"id"						=> $this->getCertificateId('st_case1'),	
						 ),
						'st_case2' => array(
							"name"						=> 'st_case2 Certificate updated '.$rand,
							"id"						=> $this->getCertificateId('st_case2'),
						),
				),
				'certificateDelete' => array(
						'st_case1' 	=> array( 'id'	 	=> $this->getCertificateId('st_case1') ),
						'st_case2' 	=> array( 'id' 		=> $this->getCertificateId('st_case2') ),
				),
				'certificateStatus' => array(
						'st_case1' 	=> array( 'id'	 	=> $this->getCertificateId('st_case1') ),
						'st_case2' 	=> array( 'id' 		=> $this->getCertificateId('st_case2') ),
				),
		);
	}
	
	public function getCertificateTitle($certificateId = '') {
		$certificateTitle = db_query("SELECT notification_title FROM slt_notification_info WHERE id = :certificate_id and send_options = :send_options", array(':send_options' => 'Certificate', ':certificate_id' => $certificateId ))->fetchField();
		return $certificateTitle;
	}
	//To check how many template having this certificate
	public function getCertificateTemplateCount($certificateId = '') {
		$certificateCount = db_query("SELECT count(notification_id) FROM slt_notification_frame WHERE notification_id = :certificateId", array(':certificateId' => $certificateId ))->fetchField();
		return $certificateCount;
	}
	public function getCertificateStatus($certificateId = '') {
		$certificateStatus = db_query("SELECT status FROM slt_notification_info WHERE id = :certificate_id and send_options = :send_options", array(':send_options' => 'Certificate', ':certificate_id' => $certificateId ))->fetchField();
		return $certificateStatus;
	}
	
	public function getCertificateId($search_str = '') {
		$select = db_select('slt_notification_info', 'nt');
		$select->addField('nt', 'id', 'id');
		$select->condition('nt.notification_title', '%' . db_like($search_str) . '%', 'LIKE');
		$select->condition('nt.send_options', 'Certificate');
		$select->orderBy('nt.id', 'DESC');
		$select->range(0,1);
		$certificateId = $select->execute()->fetchField();
		return $certificateId;
	}
}


class AdministrationCertificateListBase extends AdministrationCertificateTestHelper
{
	
}

class AdministrationCertificateListAll extends AdministrationCertificateListBase
{
	public static function getInfo() {
		return array(
				'name' => 'Administration - Certificate - List - All Tests',
				'description' => 'Module : exp_sp_administration_notification',
				'group' => '1505 - Administration - Manage - Certificate - List',
		);
	}
	
	public function testCertificateListAll() {
		debug('testAdminCertificateListAll called');
		$this->manageAdminCertificate('all');
	}
}

class AdministrationCertificateListCase1 extends AdministrationCertificateListBase
{
	public static function getInfo() {
		return array(
				'name' => 'Administration - Certificate - List - Case 1',
				'description' => 'Module : exp_sp_administration_notification',
				'group' => '1505 - Administration - Manage - Certificate - List',
		);
	}

	public function testCertificateListCase1() {
		debug('testAdminCertificateListCase1 called');
		$this->manageAdminCertificate('case1');
	}
}

/**
 *  Certificate change status test cases
 *  Created By :Maheswari.M
 *  Created Date:30.12.2016
 *  To check the functionality for the certificate activate/unpublish .
 */

class AdministrationCertificateStatusBase extends AdministrationCertificateTestHelper
{
	public function statusGroupTestCase($scope = 'all') {
		// Based on the scope set the data to test
		if ($scope == 'all') {
			$testCases = $this->testcases['certificateStatus'];
		} else {
			$testCases = array($this->testcases['certificateStatus'][$scope]);
		}

		foreach($testCases as $test){
			$certificateId = $test['id'];
			if ($certificateId != '') {
			//checking the status if the certificate have any template
			$certificate_template_count=$this->getCertificateTemplateCount($certificateId);
			if($certificate_template_count>0){
				//if certificate has templete,we can publish/unpublish
				//fetching the certificate status
				$status=$this->getCertificateStatus($certificateId);
				$this->changeStatus($certificateId,$status);
				$status=$this->getCertificateStatus($certificateId);
				$this->changeStatus($certificateId,$status);
				$this->content = $this->listContent;
				$this->getAdministrationCertificateList();
			}else
				//if certificate doesn't have template,we can't publish/unpublish
				debug("Certificate not able to publish/unpublish,because it doesn't have template");			
			} else
				debug ( 'The certificate id not found' );
		}
	}

	public function changeStatus($certificateId,$status) {
		if($status=='cre_ntn_sts_atv'){
			//certificate is active status.
			$this->changeCertificateStatus($certificateId);
			$this->assertResponse(200,'Certificate status disabled successfully');
		}else{
			//certificate is inactive status.
			$this->changeCertificateStatus($certificateId);
			$this->assertResponse(200,'Certificate status enabled successfully');
		}
	}

	public function changeCertificateStatus($certificateId) {
		$this->drupalPostAJAX(null, $edit,'Save','?q=ajax/administration/manage/certificate/publish-and-unpublish/' . $certificateId,array(),array(),'',$post_field);
		$this->verbose('Request to: ' . $this->getUrl() . '<hr />' . $this->content);
	}

}

class AdministrationCertificateStatusCase1 extends AdministrationCertificateStatusBase
{
	public static function getInfo() {
		return array(
				'name' => 'Administration - Certificate - Status - Case1',
				'description' => 'Module : exp_sp_administration_certificate',
				'group' => '1505 - Administration - Manage - Certificate - Status',
		);
	}

	public function testCertificatePublishCase1() {
		debug('testCertificatePublishCase1 called');
		$this->manageAdminCertificate('case1');
		$this->statusGroupTestCase('st_case1');
	}
}

class AdministrationCertificateStatusCase2 extends AdministrationCertificateStatusBase
{
	public static function getInfo() {
		return array(
				'name' => 'Administration - Certificate - Status - Case2',
				'description' => 'Module : exp_sp_administration_certificate',
				'group' => '1505 - Administration - Manage - Certificate - Status',
		);
	}

	public function testCertificatePublishCase2() {
		debug('testCertificatePublishCase1 called');
		$this->manageAdminCertificate('case1');
		$this->statusGroupTestCase('st_case2');
	}
}




?>